{"sha": "ba1261450b3ca2d92b58a76a83514802ffd027fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmExMjYxNDUwYjNjYTJkOTJiNThhNzZhODM1MTQ4MDJmZmQwMjdmYg==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2005-08-29T05:31:48Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2005-08-29T05:31:48Z"}, "message": "Add marker for PR testsuite/23607.\n\nFrom-SVN: r103592", "tree": {"sha": "71a2533c8fc15d6d73f485b2c66bb47a670be250", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71a2533c8fc15d6d73f485b2c66bb47a670be250"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba1261450b3ca2d92b58a76a83514802ffd027fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1261450b3ca2d92b58a76a83514802ffd027fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba1261450b3ca2d92b58a76a83514802ffd027fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1261450b3ca2d92b58a76a83514802ffd027fb/comments", "author": null, "committer": null, "parents": [{"sha": "1e106b724cf894559b8f53f02455b3dedc45efc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e106b724cf894559b8f53f02455b3dedc45efc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e106b724cf894559b8f53f02455b3dedc45efc4"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "5bc6d18cee16015c7e0f2995ea3b85f94ab5e01f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1261450b3ca2d92b58a76a83514802ffd027fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1261450b3ca2d92b58a76a83514802ffd027fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba1261450b3ca2d92b58a76a83514802ffd027fb", "patch": "@@ -1,5 +1,6 @@\n 2005-08-29  Andreas Jaeger  <aj@suse.de>\n \n+\tPR testsuite/23607\n \t* gcc.target/i386/pr23575.c: Run only on 32-bit x86.\n \n 2005-08-28  Jakub Jelinek  <jakub@redhat.com>\n@@ -35,7 +36,7 @@\n \n \tPR c++/19004\n \t* g++.dg/template/nontype13.C: New test.\n-\t\n+\n \tPR c++/23491\n \t* g++.dg/init/new14.C: New test.\n \t* g++.dg/expr/anew1.C: Do not XFAIL.\n@@ -130,13 +131,13 @@\n \tPR c++/23089\n \t* g++.dg/other/incomplete1.C: New test.\n \n-2005-08-22  Ira Rosen  <irar@il.ibm.com>   \n+2005-08-22  Ira Rosen  <irar@il.ibm.com>\n \n \t* gcc.dg/vect/vect-22.c: Add test for float. All four loops\n \tare vectorizable.\n \n 2005-08-21  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n-\t\n+\n \t* d_lines_1.f, d_lines_2.f, d_lines_3.f, d_lines_4.f,\n \td_lines_5.f: New.\n \n@@ -167,7 +168,7 @@\n \n \tPR tree-optimization/23048\n \t* gcc.dg/tree-ssa/pr23048.c: New test.\n-\t\n+\n 2005-08-19  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/20624\n@@ -250,7 +251,7 @@\n \t* gcc.dg/vect/vect-80: Likewise.\n \t* gcc.dg/vect/vect-35: Likewise, and also check that the test wasn't\n         vectorized for the expected reason, rather than checking how alignment\n-        was handled. \n+        was handled.\n \t* gcc.dg/vect/vect-92.c: Use aligned arrays instead of arrays to aligned\n         type and also instead of aligned pointers. Added documentation.\n \n@@ -284,10 +285,10 @@\n \t* gfortran.dg/namelist_print_2.f: New test to check that PRINT\n \tnamelist generates error with -std=f95.\n \n-2005-08-14  Ira Rosen  <irar@il.ibm.com>   \n+2005-08-14  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/23119\n-\t* gcc.dg/vect/vect-105.c: Add xfail for no_align targets. \n+\t* gcc.dg/vect/vect-105.c: Add xfail for no_align targets.\n \n 2005-08-13  Marcin Koziej  <creep@desk.pl>\n             Andrew Pinski  <pinskia@physics.uc.edu>\n@@ -451,7 +452,7 @@\n 2005-08-07  Janne Blomqvist <jblomqvi@cc.hut.fi>\n             Steven G. Kargl <kargls@comcast.net>\n \n-\tPR fortran/22390 \n+\tPR fortran/22390\n \t* gfortran.dg/flush_1.f90: New test.\n \n 2005-08-06  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n@@ -507,7 +508,7 @@\n \tTEST_TO_WCTYPE.\n \n 2005-08-04  Danny Smith  <dannysmith@users.sourceforge.net>\n-\t\n+\n \t* gcc.dg/torture/builtin-wctype-1.c: Use __WCHAR_TYPE__ and\n \t__WINT_TYPE__ in generated prototypes if possible.\n \n@@ -720,7 +721,7 @@\n \t* gcc.c-torture/compile/pr22589-1.c: New test.\n \n 2005-07-28  Jan Hubicka  <jh@suse.cz>\n-\t\n+\n \t* update-loopch.c: New testcase.\n \n 2005-07-27  James A. Morrison  <phython@gcc.gnu.org>\n@@ -865,7 +866,7 @@\n 2005-07-23  Jerry DeLisle  <jvdelisle@verizon.net>\n \n         * gfortran.fortran-torture/execute/nan_inf_fmt.f90: Revise test to\n-        include case of field width of zero. \n+        include case of field width of zero.\n \n 2005-07-23  Jerry DeLisle  <jvdelisle@verizon.net>\n \n@@ -934,7 +935,7 @@\n \n \tPR c++/2922\n \t* g++.dg/lookup/two-stage5.C: New test from bug comments.\n-\t\n+\n 2005-07-21  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/15938\n@@ -976,14 +977,14 @@\n \t* g++.dg/lookup/two-stage4.C: New. Illustrates how we have not yet\n \tfixed two-stage name lookup for operators.\n \t* g++.dg/template/call3.C: Compiler now produces an appropriate\n-\terror message. \n+\terror message.\n \t* g++.dg/template/crash37.C: Compiler now describes bla() on line\n-\t14 as a candidate. \n+\t14 as a candidate.\n \t* g++.dg/template/ptrmem4.C: Compiler produces different error\n \tmessage.\n \t* g++.old-deja/g++.other/pmf3.C: Compiler now describes\n \tconnect_to_method as a candidate.\n-\t\n+\n 2005-07-20  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* gcc.dg/fold-alloc-1.c: New test.\n@@ -1042,7 +1043,7 @@\n \n \t* gfortran.fortran-torture/execute/nan_inf_fmt.f90: Change case of field\n \twidth of 8 to +Inf and -Inf.\n-    \n+\n 2005-07-17  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/22139\n@@ -1420,7 +1421,7 @@\n \n 2005-05-29  Richard Henderson  <rth@redhat.com>\n \n-\t* lib/target-supports.exp (check_effective_target_vect_no_max): \n+\t* lib/target-supports.exp (check_effective_target_vect_no_max):\n \tRemove i386 and x86_64.\n \n 2005-06-29  Steve Ellcey  <sje@cup.hp.com>\n@@ -1442,7 +1443,7 @@\n \t* gcc.dg/inline3.c: Ditto.\n \t* gcc.dg/inline4.c: Ditto.\n \t* gcc.dg/inline5.c: Ditto.\n-\t\n+\n 2005-06-28  Thomas Koenig  <Thomas.Koenig@online.de>\n \n         PR libfortran/22142\n@@ -1649,7 +1650,7 @@\n \n \t* gfortran.dg/f2c_4.f90:  Add tests for complex functions\n \t* gfortran.dg/f2c_4.c: Likewise\n-\t\n+\n 2005-06-22 Paul Brook  <paul@codesourcery.com>\n \n \tPR fortran/21034\n@@ -1700,7 +1701,7 @@\n \n 2005-06-21  Dorit Nuzman  <dorit@il.ibm.com>\n \n-\t* lib/target-supports.exp (check_effective_target_vect_reduction): \n+\t* lib/target-supports.exp (check_effective_target_vect_reduction):\n \tRemove.\n \t* gcc.dg/vect/vect.exp: Run tests with additional flags separately.\n \t* gcc.dg/vect/vect-reduc-1.c: Vectorizable on all relevant platforms -\n@@ -1721,7 +1722,7 @@\n \n \t* gfortran.dg/func_derived_2.f90, gfortran.dg/func_derived_3.f90:\n \tNew tests.\n-\t\n+\n 2005-06-20  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* gfortran.dg/backslash_1.f90: New test."}]}