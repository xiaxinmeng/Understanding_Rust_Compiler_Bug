{"sha": "d087b59527a658a4de13febbb593edbf03339e93", "node_id": "C_kwDOANBUbNoAKGQwODdiNTk1MjdhNjU4YTRkZTEzZmViYmI1OTNlZGJmMDMzMzllOTM", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-04-11T17:06:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-04-11T21:30:45Z"}, "message": "c++: operator new lookup [PR98249]\n\nThe standard says, as we quote in the comment just above, that if we don't\nfind operator new in the allocated type, it should be looked up in the\nglobal scope.  This is specifically ::, not just any namespace, and we\nalready give an error for an operator new declared in any other namespace.\n\n\tPR c++/98249\n\ngcc/cp/ChangeLog:\n\n\t* call.cc (build_operator_new_call): Just look in ::.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/lookup/new3.C: New test.", "tree": {"sha": "d504a13bebeb975d6b605d41a9978c88f5a15295", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d504a13bebeb975d6b605d41a9978c88f5a15295"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d087b59527a658a4de13febbb593edbf03339e93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d087b59527a658a4de13febbb593edbf03339e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d087b59527a658a4de13febbb593edbf03339e93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d087b59527a658a4de13febbb593edbf03339e93/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1124648ff8f655307f264d7b353fd68e3b03e9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1124648ff8f655307f264d7b353fd68e3b03e9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1124648ff8f655307f264d7b353fd68e3b03e9c"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "3a8d7e4b131f9c5e6e8066511cd6be1e7f8b281a", "filename": "gcc/cp/call.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d087b59527a658a4de13febbb593edbf03339e93/gcc%2Fcp%2Fcall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d087b59527a658a4de13febbb593edbf03339e93/gcc%2Fcp%2Fcall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.cc?ref=d087b59527a658a4de13febbb593edbf03339e93", "patch": "@@ -4899,8 +4899,7 @@ build_operator_new_call (tree fnname, vec<tree, va_gc> **args,\n        up in the global scope.\n \n      we disregard block-scope declarations of \"operator new\".  */\n-  fns = lookup_name (fnname, LOOK_where::NAMESPACE);\n-  fns = lookup_arg_dependent (fnname, fns, *args);\n+  fns = lookup_qualified_name (global_namespace, fnname);\n \n   if (align_arg)\n     {"}, {"sha": "36afb5b48e28b623954a9a1e76925dd99dd604a9", "filename": "gcc/testsuite/g++.dg/lookup/new3.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d087b59527a658a4de13febbb593edbf03339e93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fnew3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d087b59527a658a4de13febbb593edbf03339e93/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fnew3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fnew3.C?ref=d087b59527a658a4de13febbb593edbf03339e93", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/98249\n+\n+#include <new>\n+struct Incomplete;\n+template<class T> struct Holder { T t; };\n+Holder<Incomplete> *p;\n+void test() {\n+    ::new (p) int;\n+    new (p) int;\n+}"}]}