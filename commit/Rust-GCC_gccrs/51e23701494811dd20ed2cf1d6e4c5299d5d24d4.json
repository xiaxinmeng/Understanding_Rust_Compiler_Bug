{"sha": "51e23701494811dd20ed2cf1d6e4c5299d5d24d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFlMjM3MDE0OTQ4MTFkZDIwZWQyY2YxZDZlNGM1Mjk5ZDVkMjRkNA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@redhat.com", "date": "2001-07-05T22:33:44Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-07-05T22:33:44Z"}, "message": "[multiple changes]\n\n2001-07-03  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\t* parse.y (resolve_expression_name): Improved error message for\n\tinner class cases.\n\tFixes PR java/1958\n\n2001-06-27  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\t* jcf-parse.c (gcc_mark_jcf): Test for a finished JCF.\n\t* jcf.h (typedef struct JCF): New bitfield `finished.'\n\t(JCF_FINISH): Set `finished.'\n\t(JCF_ZERO): Reset `finished.'\n\tFixes PR java/2633\n\n2001-06-27  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\t* parse.y (class_body_declaration:): Don't install empty instance\n\tinitializers.\n\tFixes PR java/1314\n\n(http://gcc.gnu.org/ml/gcc-patches/2001-07/msg00321.html )\n\nFrom-SVN: r43793", "tree": {"sha": "c27ae8ff81e650632f11ca9a8fc6aa5dade53668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c27ae8ff81e650632f11ca9a8fc6aa5dade53668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51e23701494811dd20ed2cf1d6e4c5299d5d24d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e23701494811dd20ed2cf1d6e4c5299d5d24d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e23701494811dd20ed2cf1d6e4c5299d5d24d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e23701494811dd20ed2cf1d6e4c5299d5d24d4/comments", "author": null, "committer": null, "parents": [{"sha": "43a727554dae9550dbd823af097964fef4aaa265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a727554dae9550dbd823af097964fef4aaa265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a727554dae9550dbd823af097964fef4aaa265"}], "stats": {"total": 50, "additions": 42, "deletions": 8}, "files": [{"sha": "28888f2f820c59d0027ab8a58589756387eae61d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e23701494811dd20ed2cf1d6e4c5299d5d24d4/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e23701494811dd20ed2cf1d6e4c5299d5d24d4/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=51e23701494811dd20ed2cf1d6e4c5299d5d24d4", "patch": "@@ -14,13 +14,33 @@\n \t* parse.y (fix_constructors): Test if a CALL_EXPR invokes\n \t`this'.  If so, don't build instance initializers.\n \n+2001-07-03  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* parse.y (resolve_expression_name): Improved error message for\n+\tinner class cases.\n+\tFixes PR java/1958\n+\n 2001-06-28  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* lang.c: #include diagnostic.h\n \t(lang_print_error): Add a `diagnostic_context *' parameter.\n \t(java_dummy_print): Likewise.\n \t* Make-lang.in (JAVA_LEX_C): Depend on diagnostic.h\n \n+2001-06-27  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* jcf-parse.c (gcc_mark_jcf): Test for a finished JCF.\n+\t* jcf.h (typedef struct JCF): New bitfield `finished.'\n+\t(JCF_FINISH): Set `finished.'\n+\t(JCF_ZERO): Reset `finished.'\n+\tFixes PR java/2633\n+\n+2001-06-27  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* parse.y (class_body_declaration:): Don't install empty instance\n+\tinitializers.\n+\tFixes PR java/1314\n+\n 2001-06-27  Alexandre Petit-Bianco  <apbianco@redhat.com>\n \n \t* class.c (set_super_info): Call `set_class_decl_access_flags.'"}, {"sha": "d925205fe19d27b23cd9a64b6379950ce6a123c0", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e23701494811dd20ed2cf1d6e4c5299d5d24d4/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e23701494811dd20ed2cf1d6e4c5299d5d24d4/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=51e23701494811dd20ed2cf1d6e4c5299d5d24d4", "patch": "@@ -101,14 +101,15 @@ static void jcf_parse PARAMS ((struct JCF*));\n static void load_inner_classes PARAMS ((tree));\n \n /* Mark (for garbage collection) all the tree nodes that are\n-   referenced from JCF's constant pool table. */\n+   referenced from JCF's constant pool table. Do that only if the JCF\n+   hasn't been marked finished.  */\n \n static void\n ggc_mark_jcf (elt)\n      void **elt;\n {\n   JCF *jcf = *(JCF**) elt;\n-  if (jcf != NULL)\n+  if (jcf != NULL && !jcf->finished)\n     {\n       CPool *cpool = &jcf->cpool;\n       int size = CPOOL_COUNT(cpool);"}, {"sha": "fc3cedfe838dea18e4aaec4506101921098b8693", "filename": "gcc/java/jcf.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e23701494811dd20ed2cf1d6e4c5299d5d24d4/gcc%2Fjava%2Fjcf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e23701494811dd20ed2cf1d6e4c5299d5d24d4/gcc%2Fjava%2Fjcf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf.h?ref=51e23701494811dd20ed2cf1d6e4c5299d5d24d4", "patch": "@@ -90,6 +90,7 @@ typedef struct JCF {\n   unsigned char *read_end;\n   int java_source : 1;\n   int right_zip : 1;\n+  int finished : 1;\n   jcf_filbuf_t filbuf;\n   void *read_state;\n   const char *filename;\n@@ -144,7 +145,8 @@ typedef struct JCF {\n   CPOOL_FINISH(&(JCF)->cpool); \\\n   if ((JCF)->buffer) FREE ((JCF)->buffer); \\\n   if ((JCF)->filename) FREE ((char *) (JCF)->filename); \\\n-  if ((JCF)->classname) FREE ((char *) (JCF)->classname); }\n+  if ((JCF)->classname) FREE ((char *) (JCF)->classname); \\\n+  (JCF)->finished = 1; }\n   \n #define CPOOL_INIT(CPOOL) \\\n   ((CPOOL)->capacity = 0, (CPOOL)->count = 0, (CPOOL)->tags = 0, (CPOOL)->data = 0)\n@@ -154,7 +156,8 @@ typedef struct JCF {\n #define JCF_ZERO(JCF)  \\\n   ((JCF)->buffer = (JCF)->buffer_end = (JCF)->read_ptr = (JCF)->read_end = 0,\\\n    (JCF)->read_state = 0, (JCF)->filename = (JCF)->classname = 0, \\\n-   CPOOL_INIT(&(JCF)->cpool), (JCF)->java_source = 0, (JCF)->zipd = 0)\n+   CPOOL_INIT(&(JCF)->cpool), (JCF)->java_source = 0, (JCF)->zipd = 0, \\\n+   (JCF)->finished = 0)\n \n /* Given that PTR points to a 2-byte unsigned integer in network\n    (big-endian) byte-order, return that integer. */"}, {"sha": "e4e682b453b85b6d31a1cc9458d4642a6341fb96", "filename": "gcc/java/parse.y", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51e23701494811dd20ed2cf1d6e4c5299d5d24d4/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51e23701494811dd20ed2cf1d6e4c5299d5d24d4/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=51e23701494811dd20ed2cf1d6e4c5299d5d24d4", "patch": "@@ -924,8 +924,11 @@ class_body_declaration:\n |\tconstructor_declaration\n |\tblock\t\t\t/* Added, JDK1.1, instance initializer */\n \t\t{\n-\t\t  TREE_CHAIN ($1) = CPC_INSTANCE_INITIALIZER_STMT (ctxp);\n-\t\t  SET_CPC_INSTANCE_INITIALIZER_STMT (ctxp, $1);\n+\t\t  if ($1 != empty_stmt_node)\n+\t\t    {\n+\t\t      TREE_CHAIN ($1) = CPC_INSTANCE_INITIALIZER_STMT (ctxp);\n+\t\t      SET_CPC_INSTANCE_INITIALIZER_STMT (ctxp, $1);\n+\t\t    }\n \t\t}\n ;\n \n@@ -8952,8 +8955,15 @@ resolve_expression_name (id, orig)\n     }\n \n   /* We've got an error here */\n-  parse_error_context (id, \"Undefined variable `%s'\", \n-\t\t       IDENTIFIER_POINTER (name));\n+  if (INNER_CLASS_TYPE_P (current_class))\n+    parse_error_context (id, \n+\t\t\t \"Local variable `%s' can't be accessed from within the inner class `%s' unless it is declared final\",\n+\t\t\t IDENTIFIER_POINTER (name),\n+\t\t\t IDENTIFIER_POINTER (DECL_NAME\n+\t\t\t\t\t     (TYPE_NAME (current_class))));\n+  else\n+    parse_error_context (id, \"Undefined variable `%s'\", \n+\t\t\t IDENTIFIER_POINTER (name));\n \n   return error_mark_node;\n }"}]}