{"sha": "7fb80860d62c9b64c969213a475a556a3c816a25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZiODA4NjBkNjJjOWI2NGM5NjkyMTNhNDc1YTU1NmEzYzgxNmEyNQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2012-10-03T16:12:22Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2012-10-03T16:12:22Z"}, "message": "rx.c (struct decl_chain): New local structure.\n\n\t* config/rx/rx.c (struct decl_chain): New local structure.\n\t(warned_decls): New local variable.  Contains a stack of decls for\n\twhich warnings have been issued.\n\t(add_warned_decl): Adds a decl to the stack.\n\t(already_warned): Returns true if a given decl is on the stack.\n\t(rx_set_current_function): Issue a warning if multiple fast\n\tinterrupt handlers are defined.\n\t* config/rx/rx.opt (mwarn-multiple-fast-interrupts): New option.\n\t* doc/invoke.texi: Document the option.\n\nFrom-SVN: r192041", "tree": {"sha": "46ee8015faaeb50c30f8914640d00b5c20e6d402", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46ee8015faaeb50c30f8914640d00b5c20e6d402"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fb80860d62c9b64c969213a475a556a3c816a25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb80860d62c9b64c969213a475a556a3c816a25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fb80860d62c9b64c969213a475a556a3c816a25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb80860d62c9b64c969213a475a556a3c816a25/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af9e6b7458f099b26a1c28c2f02093d7b30dfa3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af9e6b7458f099b26a1c28c2f02093d7b30dfa3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af9e6b7458f099b26a1c28c2f02093d7b30dfa3f"}], "stats": {"total": 83, "additions": 82, "deletions": 1}, "files": [{"sha": "23515ec1a65596ecc64deb26c0c988eff7bb3437", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80860d62c9b64c969213a475a556a3c816a25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80860d62c9b64c969213a475a556a3c816a25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7fb80860d62c9b64c969213a475a556a3c816a25", "patch": "@@ -1,8 +1,20 @@\n+2012-10-03  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/rx/rx.c (struct decl_chain): New local structure.\n+\t(warned_decls): New local variable.  Contains a stack of decls for\n+\twhich warnings have been issued.\n+\t(add_warned_decl): Adds a decl to the stack.\n+\t(already_warned): Returns true if a given decl is on the stack.\n+\t(rx_set_current_function): Issue a warning if multiple fast\n+\tinterrupt handlers are defined.\n+\t* config/rx/rx.opt (mwarn-multiple-fast-interrupts): New option.\n+\t* doc/invoke.texi: Document the option.\n+\n 2012-09-03  Mark Kettenis  <kettenis@openbsd.org>\n \n \t* config.gcc (*-*-openbsd4.[3-9]|*-*-openbsd[5-9]*): Set\n \tdefault_use_cxa_atexit to yes.\n-\t\t\n+\n 2012-10-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/54792"}, {"sha": "5d31eac973848a9f1bec0f2bcc5ce3dbecd11026", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80860d62c9b64c969213a475a556a3c816a25/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80860d62c9b64c969213a475a556a3c816a25/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=7fb80860d62c9b64c969213a475a556a3c816a25", "patch": "@@ -1256,6 +1256,41 @@ rx_conditional_register_usage (void)\n     }\n }\n \n+struct decl_chain\n+{\n+  tree fndecl;\n+  struct decl_chain * next;\n+};\n+\n+/* Stack of decls for which we have issued warnings.  */\n+static struct decl_chain * warned_decls = NULL;\n+\n+static void\n+add_warned_decl (tree fndecl)\n+{\n+  struct decl_chain * warned = (struct decl_chain *) xmalloc (sizeof * warned);\n+\n+  warned->fndecl = fndecl;\n+  warned->next = warned_decls;\n+  warned_decls = warned;\n+}\n+\n+/* Returns TRUE if FNDECL is on our list of warned about decls.  */\n+\n+static bool\n+already_warned (tree fndecl)\n+{\n+  struct decl_chain * warned;\n+\n+  for (warned = warned_decls;\n+       warned != NULL;\n+       warned = warned->next)\n+    if (warned->fndecl == fndecl)\n+      return true;\n+\n+  return false;\n+}\n+\n /* Perform any actions necessary before starting to compile FNDECL.\n    For the RX we use this to make sure that we have the correct\n    set of register masks selected.  If FNDECL is NULL then we are\n@@ -1288,6 +1323,24 @@ rx_set_current_function (tree fndecl)\n       target_reinit ();\n     }\n \n+  if (current_is_fast_interrupt && rx_warn_multiple_fast_interrupts)\n+    {\n+      /* We do not warn about the first fast interrupt routine that\n+\t we see.  Instead we just push it onto the stack.  */\n+      if (warned_decls == NULL)\n+\tadd_warned_decl (fndecl);\n+\n+      /* Otherwise if this fast interrupt is one for which we have\n+\t not already issued a warning, generate one and then push\n+\t it onto the stack as well.  */\n+      else if (! already_warned (fndecl))\n+\t{\n+\t  warning (0, \"multiple fast interrupt routines seen: %qE and %qE\",\n+\t\t   fndecl, warned_decls->fndecl);\n+\t  add_warned_decl (fndecl);\n+\t}\n+    }\n+\n   rx_previous_fndecl = fndecl;\n }\n \f"}, {"sha": "f0a57b1fae11c7ca672b60b9aa5b66e116536459", "filename": "gcc/config/rx/rx.opt", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80860d62c9b64c969213a475a556a3c816a25/gcc%2Fconfig%2Frx%2Frx.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80860d62c9b64c969213a475a556a3c816a25/gcc%2Fconfig%2Frx%2Frx.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.opt?ref=7fb80860d62c9b64c969213a475a556a3c816a25", "patch": "@@ -118,3 +118,9 @@ Specifies whether interrupt functions should save and restore the accumulator re\n mpid\n Target Mask(PID)\n Enables Position-Independent-Data (PID) mode.\n+\n+;---------------------------------------------------\n+\n+mwarn-multiple-fast-interrupts\n+Target Report Var(rx_warn_multiple_fast_interrupts) Init(1) Warning\n+Warn when multiple, different, fast interrupt handlers are in the compilation unit."}, {"sha": "297b651adfed23ef40753aea4dab626568791180", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb80860d62c9b64c969213a475a556a3c816a25/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb80860d62c9b64c969213a475a556a3c816a25/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7fb80860d62c9b64c969213a475a556a3c816a25", "patch": "@@ -859,6 +859,7 @@ See RS/6000 and PowerPC Options.\n -mmax-constant-size=@gol\n -mint-register=@gol\n -mpid@gol\n+-mno-warn-multiple-fast-interrupts@gol\n -msave-acc-in-interrupts}\n \n @emph{S/390 and zSeries Options}\n@@ -17875,6 +17876,15 @@ command line.\n By default this feature is not enabled.  The default can be restored\n via the @option{-mno-pid} command-line option.\n \n+@item -mno-warn-multiple-fast-interrupts\n+@itemx -mwarn-multiple-fast-interrupts\n+@opindex mno-warn-multiple-fast-interrupts\n+@opindex mwarn-multiple-fast-interrupts\n+Prevents GCC from issuing a warning message if it finds more than one\n+fast interrupt handler when it is compiling a file.  The default is to\n+issue a warning for each extra fast interrupt handler found, as the RX\n+only supports one such interrupt.\n+\n @end table\n \n @emph{Note:} The generic GCC command-line option @option{-ffixed-@var{reg}}"}]}