{"sha": "0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM3ODI5YTk3YjMwOWQyMjkwY2U4M2QwZDFjMmE5ZTIzYjlkZWMyZQ==", "commit": {"author": {"name": "Mohan Embar", "email": "gnustuff@thisiscool.com", "date": "2003-08-27T06:02:28Z"}, "committer": {"name": "Mohan Embar", "email": "membar@gcc.gnu.org", "date": "2003-08-27T06:02:28Z"}, "message": "Makefile.am: (write_entries_to_file) New parameterized function for writing entries to a...\n\n\t* Makefile.am: (write_entries_to_file) New parameterized\n\tfunction for writing entries to a file one line at a time.\n\t(all_java_class_files): Removed definition.\n\t(.java.class) Removed.target.\n\t(libgcj-@gcc_version@.jar): Changed dependency to\n\t$(all_java_source_files); added compilation step which compiles\n\tall changed source files in one pass.\n\t(libgcj.la) Refactored to use write_entries_to_file.\n\t(lib-gnu-awt-xlib.la) Likewise.\n\t(install-data-local) Likewise.\n\t(write-entries-to-file-check) New target which tests write_entries_to_file.\n\t(all-recursive): Changed dependency from $(all_java_class_files)\n\tto libgcj-@gcc_version@.jar\n\t* Makefile.in: Rebuilt.\n\nFrom-SVN: r70842", "tree": {"sha": "b59fbd9bf92f52dff69baf5f1d7672d4fe1141a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b59fbd9bf92f52dff69baf5f1d7672d4fe1141a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e/comments", "author": null, "committer": null, "parents": [{"sha": "a43d13fbfbeb41b41b5a62559fee0e2590f8bbe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a43d13fbfbeb41b41b5a62559fee0e2590f8bbe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a43d13fbfbeb41b41b5a62559fee0e2590f8bbe3"}], "stats": {"total": 88, "additions": 66, "deletions": 22}, "files": [{"sha": "ba60c8267a40c2efee5d453920a09654672e6e7a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e", "patch": "@@ -1,3 +1,20 @@\n+2003-08-26  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* Makefile.am: (write_entries_to_file) New parameterized\n+\tfunction for writing entries to a file one line at a time.\n+\t(all_java_class_files): Removed definition.\n+\t(.java.class) Removed.target.\n+\t(libgcj-@gcc_version@.jar): Changed dependency to\n+\t$(all_java_source_files); added compilation step which compiles\n+\tall changed source files in one pass.\n+\t(libgcj.la) Refactored to use write_entries_to_file.\n+\t(lib-gnu-awt-xlib.la) Likewise.\n+\t(install-data-local) Likewise.\n+\t(write-entries-to-file-check) New target which tests write_entries_to_file.\n+\t(all-recursive): Changed dependency from $(all_java_class_files)\n+\tto libgcj-@gcc_version@.jar\n+\t* Makefile.in: Rebuilt.\n+\n 2003-08-26  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/StrictMath.java: Typo fix."}, {"sha": "c43d6b0e571eebc6abfdcebc842bd17e95cc9925", "filename": "libjava/Makefile.am", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e", "patch": "@@ -10,6 +10,15 @@ else\n SUBDIRS = $(DIRLTDL) gcj include\n endif\n \n+# write_entries_to_file - writes each entry in a list\n+# to the specified file. Each entry is written individually\n+# to accomodate systems with severe command-line-length\n+# limitations.\n+# Parameters:\n+# $(1): variable containing entries to iterate over\n+# $(2): output file\n+write_entries_to_file = $(shell rm -f $(2) || :) $(shell touch $(2)) $(foreach object,$(1),$(shell echo $(object) >> $(2)))\n+\n ## ################################################################\n \n ##\n@@ -328,14 +337,11 @@ all_java_source_files = \\\n     $(gtk_awt_peer_sources) \\\n     $(x_java_source_files)\n \n-all_java_class_files = $(all_java_source_files:.java=.class)\n-\n-.java.class:\n-\t$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(here):$(srcdir) \\\n-             -d $(here) $<\n-\n-libgcj-@gcc_version@.jar: $(all_java_class_files)\n+libgcj-@gcc_version@.jar: $(all_java_source_files)\n \t-@rm -f libgcj-@gcc_version@.jar\n+\t@echo Compiling Java sourcefiles...\n+\t@: $(call write_entries_to_file,$?,libgcj.sourcelist)\n+\t$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(here):$(srcdir) -d $(here) @libgcj.sourcelist\n ## Note that we explicitly want to include directory information.\n \tfind java gnu javax org -type d -o -type f -name '*.class' | \\\n \t  sed -e '/\\/\\./d' -e '/\\/xlib/d' | \\\n@@ -390,13 +396,15 @@ $(gtk_awt_peer_sources:.java=.lo): %.lo: %.java\n ## Pass the list of object files to libtool in a temporary file to \n ## avoid tripping platform command line length limits.\n libgcj.la: $(libgcj_la_OBJECTS) $(libgcj_la_DEPENDENCIES)\n-\t@: $(shell echo Creating list of files to link...) $(shell rm -f libgcj.objectlist || :) $(shell touch libgcj.objectlist) $(foreach object,$(libgcj_la_OBJECTS) $(libgcj_la_LIBADD),$(shell echo $(object) >> libgcj.objectlist))\n+\t@echo Creating list of files to link...\n+\t@: $(call write_entries_to_file,$(libgcj_la_OBJECTS) $(libgcj_la_LIBADD),libgcj.objectlist)\n \t$(libgcj_la_LINK) -objectlist libgcj.objectlist \\\n \t@GCLIBS@ @LIBFFI@ @ZLIBS@ \\\n \t-rpath $(toolexeclibdir) $(libgcj_la_LDFLAGS) $(LIBS)\n \n lib-gnu-awt-xlib.la: $(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_DEPENDENCIES)\n-\t@: $(shell echo Creating list of files to link...) $(shell rm -f lib_gnu_awt_xlib.objectlist || :) $(shell touch lib_gnu_awt_xlib.objectlist) $(foreach object,$(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_LIBADD),$(shell echo $(object) >> lib_gnu_awt_xlib.objectlist))\n+\t@echo Creating list of files to link...\n+\t@: $(call write_entries_to_file,$(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_LIBADD),lib_gnu_awt_xlib.objectlist)\n \t$(lib_gnu_awt_xlib_la_LINK) -objectlist lib_gnu_awt_xlib.objectlist \\\n \t-rpath $(toolexeclibdir) $(lib_gnu_awt_xlib_la_LDFLAGS) $(LIBS)\n \n@@ -513,7 +521,8 @@ install-data-local:\n \t$(PRE_INSTALL)\n ## We use a GNU make trick here so that we don't go over the command\n ## length limit of some shells.\n-\t@: $(shell echo Creating list of headers to install...) $(shell rm -f tmp-ilist || :) $(shell touch tmp-ilist) $(foreach hdr,$(nat_headers) $(extra_headers),$(shell echo $(hdr) >> tmp-ilist))\n+\t@echo Creating list of headers to install...\n+\t@: $(call write_entries_to_file,$(nat_headers) $(extra_headers),tmp-ilist)\n \t@cat tmp-ilist | while read f; do \\\n \t  d=\"`echo $$f | sed -e 's,/[^/]*$$,,'`\"; \\\n \t  $(mkinstalldirs) $(DESTDIR)$(includedir)/$$d; \\\n@@ -569,6 +578,11 @@ class-check: libgcj-@gcc_version@.jar\n \t  :; else ok=1; fi; \\\n \tdone; exit $$ok\n \n+## This rule checks whether write_entries_to_file works properly.\n+write-entries-to-file-check:\n+\t@echo Creating list of files to link...\n+\t@: $(call write_entries_to_file,$(libgcj_la_OBJECTS) $(libgcj_la_LIBADD),libgcj.objectlist)\n+\n ## ################################################################\n \n ##\n@@ -2726,7 +2740,7 @@ texinfo: TexinfoDoclet.class\n ## the C++ code whenever any .java file is touched.\n ## Also force all the class files to build first. This makes them build in\n ## the right order to improve performance.\n-all-recursive: $(all_java_class_files) $(nat_headers) $(x_nat_headers)\n+all-recursive: libgcj-@gcc_version@.jar $(nat_headers) $(x_nat_headers)\n \n ## ################################################################\n "}, {"sha": "2c5a93252f270de2ba5227222408255d69cb2f96", "filename": "libjava/Makefile.in", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=0c7829a97b309d2290ce83d0d1c2a9e23b9dec2e", "patch": "@@ -151,6 +151,15 @@ AUTOMAKE_OPTIONS = foreign\n ACLOCAL_AMFLAGS = -I .\n @TESTSUBDIR_TRUE@SUBDIRS = @TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n @TESTSUBDIR_FALSE@SUBDIRS = @TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n+\n+# write_entries_to_file - writes each entry in a list\n+# to the specified file. Each entry is written individually\n+# to accomodate systems with severe command-line-length\n+# limitations.\n+# Parameters:\n+# $(1): variable containing entries to iterate over\n+# $(2): output file\n+write_entries_to_file = $(shell rm -f $(2) || :) $(shell touch $(2)) $(foreach object,$(1),$(shell echo $(object) >> $(2)))\n @XLIB_AWT_TRUE@cond_x_ltlibrary = @XLIB_AWT_TRUE@lib-gnu-awt-xlib.la\n @XLIB_AWT_FALSE@cond_x_ltlibrary = \n @XLIB_AWT_TRUE@xlib_includes = @XLIB_AWT_TRUE@-I../libstdc++-v3/include -I../libstdc++-v3/include/$(target_alias) -I$(srcdir)/../libstdc++-v3/libsupc++\n@@ -418,8 +427,6 @@ all_java_source_files = \\\n     $(x_java_source_files)\n \n \n-all_java_class_files = $(all_java_source_files:.java=.class)\n-\n MOSTLYCLEANFILES = $(javao_files) $(nat_files) $(nat_headers) $(c_files) $(x_javao_files) $(x_nat_files) $(x_nat_headers)\n CLEANFILES = libgcj-@gcc_version@.jar\n \n@@ -4851,12 +4858,11 @@ $(gtk_c_headers): $(gtk_awt_peer_sources)\n \techo \"$(GCJH) -jni -d jniinclude -classpath '' -bootclasspath $(top_builddir) $$input\"; \\\n \t$(GCJH) -jni -d jniinclude -classpath '' -bootclasspath $(top_builddir) $$input\n \n-.java.class:\n-\t$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(here):$(srcdir) \\\n-             -d $(here) $<\n-\n-libgcj-@gcc_version@.jar: $(all_java_class_files)\n+libgcj-@gcc_version@.jar: $(all_java_source_files)\n \t-@rm -f libgcj-@gcc_version@.jar\n+\t@echo Compiling Java sourcefiles...\n+\t@: $(call write_entries_to_file,$?,libgcj.sourcelist)\n+\t$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(here):$(srcdir) -d $(here) @libgcj.sourcelist\n \tfind java gnu javax org -type d -o -type f -name '*.class' | \\\n \t  sed -e '/\\/\\./d' -e '/\\/xlib/d' | \\\n \t  $(ZIP) cfM0E@ $@\n@@ -4896,13 +4902,15 @@ $(gtk_awt_peer_sources:.java=.lo): %.lo: %.java\n \t$(GCJCOMPILE) -fjni -o $@ $<\n \n libgcj.la: $(libgcj_la_OBJECTS) $(libgcj_la_DEPENDENCIES)\n-\t@: $(shell echo Creating list of files to link...) $(shell rm -f libgcj.objectlist || :) $(shell touch libgcj.objectlist) $(foreach object,$(libgcj_la_OBJECTS) $(libgcj_la_LIBADD),$(shell echo $(object) >> libgcj.objectlist))\n+\t@echo Creating list of files to link...\n+\t@: $(call write_entries_to_file,$(libgcj_la_OBJECTS) $(libgcj_la_LIBADD),libgcj.objectlist)\n \t$(libgcj_la_LINK) -objectlist libgcj.objectlist \\\n \t@GCLIBS@ @LIBFFI@ @ZLIBS@ \\\n \t-rpath $(toolexeclibdir) $(libgcj_la_LDFLAGS) $(LIBS)\n \n lib-gnu-awt-xlib.la: $(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_DEPENDENCIES)\n-\t@: $(shell echo Creating list of files to link...) $(shell rm -f lib_gnu_awt_xlib.objectlist || :) $(shell touch lib_gnu_awt_xlib.objectlist) $(foreach object,$(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_LIBADD),$(shell echo $(object) >> lib_gnu_awt_xlib.objectlist))\n+\t@echo Creating list of files to link...\n+\t@: $(call write_entries_to_file,$(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_LIBADD),lib_gnu_awt_xlib.objectlist)\n \t$(lib_gnu_awt_xlib_la_LINK) -objectlist lib_gnu_awt_xlib.objectlist \\\n \t-rpath $(toolexeclibdir) $(lib_gnu_awt_xlib_la_LDFLAGS) $(LIBS)\n \n@@ -4993,7 +5001,8 @@ $(extra_headers) $(srcdir)/java/lang/Object.h $(srcdir)/java/lang/Class.h:\n \n install-data-local:\n \t$(PRE_INSTALL)\n-\t@: $(shell echo Creating list of headers to install...) $(shell rm -f tmp-ilist || :) $(shell touch tmp-ilist) $(foreach hdr,$(nat_headers) $(extra_headers),$(shell echo $(hdr) >> tmp-ilist))\n+\t@echo Creating list of headers to install...\n+\t@: $(call write_entries_to_file,$(nat_headers) $(extra_headers),tmp-ilist)\n \t@cat tmp-ilist | while read f; do \\\n \t  d=\"`echo $$f | sed -e 's,/[^/]*$$,,'`\"; \\\n \t  $(mkinstalldirs) $(DESTDIR)$(includedir)/$$d; \\\n@@ -5029,6 +5038,10 @@ class-check: libgcj-@gcc_version@.jar\n \t  :; else ok=1; fi; \\\n \tdone; exit $$ok\n \n+write-entries-to-file-check:\n+\t@echo Creating list of files to link...\n+\t@: $(call write_entries_to_file,$(libgcj_la_OBJECTS) $(libgcj_la_LIBADD),libgcj.objectlist)\n+\n # The Unicode consortium does not permit re-distributing the file JIS0201.TXT.\n # You can get it from ftp://ftp.unicode.org/Public/MAPPINGS/EASTASIA/JIS/.\n \n@@ -5113,7 +5126,7 @@ texinfo: TexinfoDoclet.class\n \n -include deps.mk\n \n-all-recursive: $(all_java_class_files) $(nat_headers) $(x_nat_headers)\n+all-recursive: libgcj-@gcc_version@.jar $(nat_headers) $(x_nat_headers)\n \n # Multilib support.\n .PHONY: all-multi mostlyclean-multi clean-multi distclean-multi \\"}]}