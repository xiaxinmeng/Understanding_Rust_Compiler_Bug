{"sha": "43b3a5b10fe5e139b2fcf763022843f83ba07f2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNiM2E1YjEwZmU1ZTEzOWIyZmNmNzYzMDIyODQzZjgzYmEwN2YyZQ==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2005-06-29T03:01:27Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2005-06-29T03:01:27Z"}, "message": "c-common.c (flag_next_runtime): Move...\n\n[gcc/ChangeLog]\n2006-06-28  Ziemowit Laski  <zlaski@apple.com>\n\n       * c-common.c (flag_next_runtime): Move...\n       * toplev.c (flag_next_runtime): ... here.\n       * c-common.h (flag_next_runtime): Move...\n       * flags.h (flag_next_runtime): ... here.\n       * config/darwin-c.c: Include flags.h.\n       * config/t-darwin (darwin-c.o): Depend on flags.h.\n\nFrom-SVN: r101415", "tree": {"sha": "6da74cb40b335fa28c92f12e5adfac5c2b98d7e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6da74cb40b335fa28c92f12e5adfac5c2b98d7e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43b3a5b10fe5e139b2fcf763022843f83ba07f2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b3a5b10fe5e139b2fcf763022843f83ba07f2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43b3a5b10fe5e139b2fcf763022843f83ba07f2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/comments", "author": null, "committer": null, "parents": [{"sha": "cd1414ee2e667d89507ea3932fd9de0935de878a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1414ee2e667d89507ea3932fd9de0935de878a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1414ee2e667d89507ea3932fd9de0935de878a"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "708f198e923ba5ea29063133b1f716e1e8a97f7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43b3a5b10fe5e139b2fcf763022843f83ba07f2e", "patch": "@@ -1,3 +1,12 @@\n+2006-06-28  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* c-common.c (flag_next_runtime): Move...\n+\t* toplev.c (flag_next_runtime): ... here.\n+\t* c-common.h (flag_next_runtime): Move...\n+\t* flags.h (flag_next_runtime): ... here.\n+\t* config/darwin-c.c: Include flags.h.\n+\t* config/t-darwin (darwin-c.o): Depend on flags.h.\n+\n 2005-06-29  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/linux-unwind.h (shmedia_fallback_frame_state):"}, {"sha": "2b13ad912ecd2a9c18dd61ec2f098fb1d1c4e321", "filename": "gcc/c-common.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=43b3a5b10fe5e139b2fcf763022843f83ba07f2e", "patch": "@@ -334,14 +334,6 @@ int warn_main;\n \n int flag_gen_declaration;\n \n-/* Generate code for GNU or NeXT runtime environment.  */\n-\n-#ifdef NEXT_OBJC_RUNTIME\n-int flag_next_runtime = 1;\n-#else\n-int flag_next_runtime = 0;\n-#endif\n-\n /* Tells the compiler that this is a special run.  Do not perform any\n    compiling, instead we are to test some platform dependent features\n    and output a C header file with appropriate definitions.  */"}, {"sha": "fabb67e6b2025268c79a4f03f12a6eb2acf6d441", "filename": "gcc/c-common.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=43b3a5b10fe5e139b2fcf763022843f83ba07f2e", "patch": "@@ -449,10 +449,6 @@ extern int warn_main;\n \n extern int flag_gen_declaration;\n \n-/* Generate code for GNU or NeXT runtime environment.  */\n-\n-extern int flag_next_runtime;\n-\n /* Tells the compiler that this is a special run.  Do not perform any\n    compiling, instead we are to test some platform dependent features\n    and output a C header file with appropriate definitions.  */"}, {"sha": "9102ea2e67da606fa71b62e3aa2bbedd99c3ff2e", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=43b3a5b10fe5e139b2fcf763022843f83ba07f2e", "patch": "@@ -29,6 +29,7 @@ Boston, MA 02110-1301, USA.  */\n #include \"c-tree.h\"\n #include \"c-incpath.h\"\n #include \"toplev.h\"\n+#include \"flags.h\"\n #include \"tm_p.h\"\n #include \"cppdefault.h\"\n #include \"prefix.h\""}, {"sha": "df1b6320e5d270d9b1eb802ccdb9a29ead2771b4", "filename": "gcc/config/t-darwin", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Fconfig%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Fconfig%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-darwin?ref=43b3a5b10fe5e139b2fcf763022843f83ba07f2e", "patch": "@@ -6,7 +6,7 @@ darwin.o: $(srcdir)/config/darwin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h     \\\n \n darwin-c.o: $(srcdir)/config/darwin-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) $(CPPLIB_H) tree.h c-pragma.h $(C_TREE_H) toplev.h $(TM_P_H) \\\n-  c-incpath.h\n+  c-incpath.h flags.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/darwin-c.c $(PREPROCESSOR_DEFINES)\n \n gt-darwin.h : s-gtype ; @true"}, {"sha": "84d5b39b615331d836bcddbfb9d625e2bf1feab3", "filename": "gcc/flags.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=43b3a5b10fe5e139b2fcf763022843f83ba07f2e", "patch": "@@ -181,6 +181,10 @@ extern int flag_shlib;\n \n extern int flag_debug_asm;\n \n+/* Generate code for GNU or NeXT Objective-C runtime environment.  */\n+\n+extern int flag_next_runtime;\n+\n extern int flag_dump_rtl_in_asm;\n \n /* If one, renumber instruction UIDs to reduce the number of"}, {"sha": "17f75fe00f7baf6d54039a1629e59b02a219addd", "filename": "gcc/toplev.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43b3a5b10fe5e139b2fcf763022843f83ba07f2e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=43b3a5b10fe5e139b2fcf763022843f83ba07f2e", "patch": "@@ -289,6 +289,14 @@ const char *aux_info_file_name;\n \n int flag_shlib;\n \n+/* Generate code for GNU or NeXT Objective-C runtime environment.  */\n+\n+#ifdef NEXT_OBJC_RUNTIME\n+int flag_next_runtime = 1;\n+#else\n+int flag_next_runtime = 0;\n+#endif\n+\n /* Set to the default thread-local storage (tls) model to use.  */\n \n enum tls_model flag_tls_default = TLS_MODEL_GLOBAL_DYNAMIC;"}]}