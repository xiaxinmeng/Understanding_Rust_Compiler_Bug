{"sha": "afea21f9612545282db95872021d7587c9d5b0d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZlYTIxZjk2MTI1NDUyODJkYjk1ODcyMDIxZDc1ODdjOWQ1YjBkNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-09-10T16:09:15Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-09-10T16:09:15Z"}, "message": "libstdc++: Enforce LWG 3472 preconditions on std::counted_iterator\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/stl_iterator.h (counted_iterator): Add assertions\n\tto check preconditions added by LWG 3472.", "tree": {"sha": "8ae10a4d9b96a41e0b9a8d40a4fb56e3b51f4276", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ae10a4d9b96a41e0b9a8d40a4fb56e3b51f4276"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afea21f9612545282db95872021d7587c9d5b0d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afea21f9612545282db95872021d7587c9d5b0d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afea21f9612545282db95872021d7587c9d5b0d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afea21f9612545282db95872021d7587c9d5b0d4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ed757604f4e232324ca798e46f3d8bf7e35b009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ed757604f4e232324ca798e46f3d8bf7e35b009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ed757604f4e232324ca798e46f3d8bf7e35b009"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "f29bae9270601176ec5a1965c21b06a5a10d5ede", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afea21f9612545282db95872021d7587c9d5b0d4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afea21f9612545282db95872021d7587c9d5b0d4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=afea21f9612545282db95872021d7587c9d5b0d4", "patch": "@@ -2036,13 +2036,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       constexpr decltype(auto)\n       operator*()\n       noexcept(noexcept(*_M_current))\n-      { return *_M_current; }\n+      {\n+\t__glibcxx_assert( _M_length > 0 );\n+\treturn *_M_current;\n+      }\n \n       constexpr decltype(auto)\n       operator*() const\n       noexcept(noexcept(*_M_current))\n       requires __detail::__dereferenceable<const _It>\n-      { return *_M_current; }\n+      {\n+\t__glibcxx_assert( _M_length > 0 );\n+\treturn *_M_current;\n+      }\n \n       constexpr counted_iterator&\n       operator++()\n@@ -2170,14 +2176,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       iter_move(const counted_iterator& __i)\n       noexcept(noexcept(ranges::iter_move(__i._M_current)))\n       requires input_iterator<_It>\n-      { return ranges::iter_move(__i._M_current); }\n+      {\n+\t__glibcxx_assert( __i._M_length > 0 );\n+\treturn ranges::iter_move(__i._M_current);\n+      }\n \n       template<indirectly_swappable<_It> _It2>\n \tfriend constexpr void\n \titer_swap(const counted_iterator& __x,\n \t\t  const counted_iterator<_It2>& __y)\n \tnoexcept(noexcept(ranges::iter_swap(__x._M_current, __y._M_current)))\n-\t{ ranges::iter_swap(__x._M_current, __y._M_current); }\n+\t{\n+\t  __glibcxx_assert( __x._M_length > 0 && __y._M_length > 0 );\n+\t  ranges::iter_swap(__x._M_current, __y._M_current);\n+\t}\n \n     private:\n       template<input_or_output_iterator _It2> friend class counted_iterator;"}]}