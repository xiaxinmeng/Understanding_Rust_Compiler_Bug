{"sha": "75b7557d49e09fed027d2f9f819b520bdb6976d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViNzU1N2Q0OWUwOWZlZDAyN2QyZjlmODE5YjUyMGJkYjY5NzZkMA==", "commit": {"author": {"name": "Michael Hayes", "email": "mhayes@redhat.com", "date": "2001-01-05T23:30:02Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2001-01-05T23:30:02Z"}, "message": "rtl.h (print_simple_rtl): New.\n\n\t* rtl.h (print_simple_rtl): New.\n\t* print-rtl.c (print_simple_rtl): New.\n\t(flag_simple): New.\n\t(print_rtx): Disable printing of flags and modes, etc.,\n        if `flag_simple` nonzero.\n\nFrom-SVN: r38730", "tree": {"sha": "6010337bed660428cbd728d63a28f99d25f1b2bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6010337bed660428cbd728d63a28f99d25f1b2bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75b7557d49e09fed027d2f9f819b520bdb6976d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b7557d49e09fed027d2f9f819b520bdb6976d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75b7557d49e09fed027d2f9f819b520bdb6976d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b7557d49e09fed027d2f9f819b520bdb6976d0/comments", "author": null, "committer": null, "parents": [{"sha": "b05467dc157a059af34637283993abbe32bccb7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b05467dc157a059af34637283993abbe32bccb7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b05467dc157a059af34637283993abbe32bccb7a"}], "stats": {"total": 113, "additions": 77, "deletions": 36}, "files": [{"sha": "7c224ee9fdf93b91353e929ba26146e18660f33f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b7557d49e09fed027d2f9f819b520bdb6976d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b7557d49e09fed027d2f9f819b520bdb6976d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75b7557d49e09fed027d2f9f819b520bdb6976d0", "patch": "@@ -1,3 +1,11 @@\n+2001-01-06  Michael Hayes  <mhayes@redhat.com>\n+\n+\t* rtl.h (print_simple_rtl): New.\n+\t* print-rtl.c (print_simple_rtl): New.\n+\t(flag_simple): New.\n+\t(print_rtx): Disable printing of flags and modes, etc.,\n+        if `flag_simple` nonzero.\n+\n 2001-01-05  Zack Weinberg  <zack@wolery.stanford.edu>\n \n \t* function.c (fixup_var_refs): Use push_to_full_sequence where"}, {"sha": "23d889a873ba34948be1935ec170a7f3aa37b16f", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 68, "deletions": 36, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b7557d49e09fed027d2f9f819b520bdb6976d0/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b7557d49e09fed027d2f9f819b520bdb6976d0/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=75b7557d49e09fed027d2f9f819b520bdb6976d0", "patch": "@@ -65,6 +65,9 @@ const char *print_rtx_head = \"\";\n    This must be defined here so that programs like gencodes can be linked.  */\n int flag_dump_unnumbered = 0;\n \n+/* Nonzero means use simplified format without flags, modes, etc.  */\n+int flag_simple = 0;\n+\n /* Nonzero if we are dumping graphical description.  */\n int dump_for_graph;\n \n@@ -85,9 +88,12 @@ print_rtx (in_rtx)\n \n   if (sawclose)\n     {\n-      fprintf (outfile, \"\\n%s%s\",\n-               print_rtx_head,\n- \t       (xspaces + (sizeof xspaces - 1 - indent * 2)));\n+      if (flag_simple)\n+\tfputc (' ', outfile);\n+      else\n+\tfprintf (outfile, \"\\n%s%s\",\n+\t\t print_rtx_head,\n+\t\t (xspaces + (sizeof xspaces - 1 - indent * 2)));\n       sawclose = 0;\n     }\n \n@@ -112,36 +118,44 @@ print_rtx (in_rtx)\n   else\n     {\n       /* print name of expression code */\n-      fprintf (outfile, \"(%s\", GET_RTX_NAME (GET_CODE (in_rtx)));\n-\n-      if (in_rtx->in_struct)\n-\tfputs (\"/s\", outfile);\n-\n-      if (in_rtx->volatil)\n-\tfputs (\"/v\", outfile);\n-\n-      if (in_rtx->unchanging)\n-\tfputs (\"/u\", outfile);\n-\n-      if (in_rtx->integrated)\n-\tfputs (\"/i\", outfile);\n-\n-      if (in_rtx->frame_related)\n-\tfputs (\"/f\", outfile);\n-\n-      if (in_rtx->jump)\n-\tfputs (\"/j\", outfile);\n-\n-      if (in_rtx->call)\n-\tfputs (\"/c\", outfile);\n-\n-      if (GET_MODE (in_rtx) != VOIDmode)\n+      if (flag_simple && GET_CODE (in_rtx) == CONST_INT)\n+\tfputc ('(', outfile);\n+      else\n+\tfprintf (outfile, \"(%s\", GET_RTX_NAME (GET_CODE (in_rtx)));\n+      \n+      if (! flag_simple)\n \t{\n-\t  /* Print REG_NOTE names for EXPR_LIST and INSN_LIST.  */\n-\t  if (GET_CODE (in_rtx) == EXPR_LIST || GET_CODE (in_rtx) == INSN_LIST)\n-\t    fprintf (outfile, \":%s\", GET_REG_NOTE_NAME (GET_MODE (in_rtx)));\n-\t  else\n-\t    fprintf (outfile, \":%s\", GET_MODE_NAME (GET_MODE (in_rtx)));\n+\t  if (in_rtx->in_struct)\n+\t    fputs (\"/s\", outfile);\n+\n+\t  if (in_rtx->volatil)\n+\t    fputs (\"/v\", outfile);\n+\t  \n+\t  if (in_rtx->unchanging)\n+\t    fputs (\"/u\", outfile);\n+\t  \n+\t  if (in_rtx->integrated)\n+\t    fputs (\"/i\", outfile);\n+\t  \n+\t  if (in_rtx->frame_related)\n+\t    fputs (\"/f\", outfile);\n+\t  \n+\t  if (in_rtx->jump)\n+\t    fputs (\"/j\", outfile);\n+\t  \n+\t  if (in_rtx->call)\n+\t    fputs (\"/c\", outfile);\n+\n+\t  if (GET_MODE (in_rtx) != VOIDmode)\n+\t    {\n+\t      /* Print REG_NOTE names for EXPR_LIST and INSN_LIST.  */\n+\t      if (GET_CODE (in_rtx) == EXPR_LIST \n+\t\t  || GET_CODE (in_rtx) == INSN_LIST)\n+\t\tfprintf (outfile, \":%s\",\n+\t\t\t GET_REG_NOTE_NAME (GET_MODE (in_rtx)));\n+\t      else\n+\t\tfprintf (outfile, \":%s\", GET_MODE_NAME (GET_MODE (in_rtx)));\n+\t    }\n \t}\n     }\n \n@@ -296,11 +310,15 @@ print_rtx (in_rtx)\n \tbreak;\n \n       case 'w':\n-\tfprintf (outfile, \" \");\n+\tif (! flag_simple)\n+\t  fprintf (outfile, \" \");\n \tfprintf (outfile, HOST_WIDE_INT_PRINT_DEC, XWINT (in_rtx, i));\n-\tfprintf (outfile, \" [\");\n-\tfprintf (outfile, HOST_WIDE_INT_PRINT_HEX, XWINT (in_rtx, i));\n-\tfprintf (outfile, \"]\");\n+\tif (! flag_simple)\n+\t  {\n+\t    fprintf (outfile, \" [\");\n+\t    fprintf (outfile, HOST_WIDE_INT_PRINT_HEX, XWINT (in_rtx, i));\n+\t    fprintf (outfile, \"]\");\n+\t  }\n \tbreak;\n \n       case 'i':\n@@ -663,3 +681,17 @@ print_rtl_single (outf, x)\n     }\n   return 0;\n }\n+\n+\n+/* Like print_rtl except without all the detail; for example,\n+   if RTX is a CONST_INT then print in decimal format.  */\n+\n+void\n+print_simple_rtl (outf, x)\n+     FILE *outf;\n+     rtx x;\n+{\n+  flag_simple = 1;\n+  print_rtl (outf, x);\n+  flag_simple = 0;\n+}"}, {"sha": "972dbd48d7cef8f9d4d72d570c950d5e8cbb4e97", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b7557d49e09fed027d2f9f819b520bdb6976d0/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b7557d49e09fed027d2f9f819b520bdb6976d0/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=75b7557d49e09fed027d2f9f819b520bdb6976d0", "patch": "@@ -1778,6 +1778,7 @@ extern void debug_rtx_range\t\tPARAMS ((rtx, rtx));\n extern rtx debug_rtx_find\t\tPARAMS ((rtx, int));\n #ifdef BUFSIZ\n extern void print_rtl\t\t\tPARAMS ((FILE *, rtx));\n+extern void print_simple_rtl\t\tPARAMS ((FILE *, rtx));\n extern int print_rtl_single\t\tPARAMS ((FILE *, rtx));\n extern void print_inline_rtx\t\tPARAMS ((FILE *, rtx, int));\n #endif"}]}