{"sha": "579f4e64df26e7fe5b57cdf1f18d07eb39797265", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc5ZjRlNjRkZjI2ZTdmZTViNTdjZGYxZjE4ZDA3ZWIzOTc5NzI2NQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-05-03T20:22:09Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2014-05-03T20:22:09Z"}, "message": "sh_optimize_sett_clrt.cc (sh_optimize_sett_clrt::execute): Add missing function* argument.\n\n\t* config/sh/sh_optimize_sett_clrt.cc (sh_optimize_sett_clrt::execute):\n\tAdd missing function* argument.\n\nFrom-SVN: r210040", "tree": {"sha": "321bbaf0794688db333c48b3f971238d58b3ef74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/321bbaf0794688db333c48b3f971238d58b3ef74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/579f4e64df26e7fe5b57cdf1f18d07eb39797265", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/579f4e64df26e7fe5b57cdf1f18d07eb39797265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/579f4e64df26e7fe5b57cdf1f18d07eb39797265", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/579f4e64df26e7fe5b57cdf1f18d07eb39797265/comments", "author": null, "committer": null, "parents": [{"sha": "0be7287d81cd5d2aaea649e43818cc75eedf636d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0be7287d81cd5d2aaea649e43818cc75eedf636d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0be7287d81cd5d2aaea649e43818cc75eedf636d"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "ffb0163fd27e73a36a46189bda1c6b2dcee49fad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/579f4e64df26e7fe5b57cdf1f18d07eb39797265/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/579f4e64df26e7fe5b57cdf1f18d07eb39797265/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=579f4e64df26e7fe5b57cdf1f18d07eb39797265", "patch": "@@ -1,3 +1,8 @@\n+2014-05-03  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/sh_optimize_sett_clrt.cc (sh_optimize_sett_clrt::execute):\n+\tAdd missing function* argument.\n+\n 2014-05-03  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* lra-constraints.c (valid_address_p): Move earlier in file."}, {"sha": "84ad2999de7814dce3ede48af1562384a51e3854", "filename": "gcc/config/sh/sh_optimize_sett_clrt.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/579f4e64df26e7fe5b57cdf1f18d07eb39797265/gcc%2Fconfig%2Fsh%2Fsh_optimize_sett_clrt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/579f4e64df26e7fe5b57cdf1f18d07eb39797265/gcc%2Fconfig%2Fsh%2Fsh_optimize_sett_clrt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh_optimize_sett_clrt.cc?ref=579f4e64df26e7fe5b57cdf1f18d07eb39797265", "patch": "@@ -79,8 +79,8 @@ class sh_optimize_sett_clrt : public rtl_opt_pass\n public:\n   sh_optimize_sett_clrt (gcc::context* ctx, const char* name);\n   virtual ~sh_optimize_sett_clrt (void);\n-  virtual bool gate (function *);\n-  virtual unsigned int execute (void);\n+  virtual bool gate (function*);\n+  virtual unsigned int execute (function* fun);\n \n private:\n   static const pass_data default_pass_data;\n@@ -161,13 +161,13 @@ sh_optimize_sett_clrt::~sh_optimize_sett_clrt (void)\n }\n \n bool\n-sh_optimize_sett_clrt::gate (function *)\n+sh_optimize_sett_clrt::gate (function*)\n {\n   return optimize > 0;\n }\n \n unsigned int\n-sh_optimize_sett_clrt::execute (void)\n+sh_optimize_sett_clrt::execute (function* fun)\n {\n   unsigned int ccr0 = INVALID_REGNUM;\n   unsigned int ccr1 = INVALID_REGNUM;\n@@ -205,7 +205,7 @@ sh_optimize_sett_clrt::execute (void)\n   // Look for insns that set the ccreg to a constant value and see if it can\n   // be optimized.\n   basic_block bb;\n-  FOR_EACH_BB_REVERSE_FN (bb, cfun)\n+  FOR_EACH_BB_REVERSE_FN (bb, fun)\n     for (rtx next_i, i = NEXT_INSN (BB_HEAD (bb));\n \t i != NULL_RTX && i != BB_END (bb); i = next_i)\n       {"}]}