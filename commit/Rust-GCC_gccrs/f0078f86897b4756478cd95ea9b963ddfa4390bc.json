{"sha": "f0078f86897b4756478cd95ea9b963ddfa4390bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAwNzhmODY4OTdiNDc1NjQ3OGNkOTVlYTliOTYzZGRmYTQzOTBiYw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2005-03-30T06:41:01Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-03-30T06:41:01Z"}, "message": "calls.c (struct arg_data): Update \"partial\" comment.\n\n\t* calls.c (struct arg_data): Update \"partial\" comment.\n\t(load_register_parameters): Update \"nregs\" comment.\n\nFrom-SVN: r97241", "tree": {"sha": "75e4c118a4ffb66469395e322c405abf59619bbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75e4c118a4ffb66469395e322c405abf59619bbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0078f86897b4756478cd95ea9b963ddfa4390bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0078f86897b4756478cd95ea9b963ddfa4390bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0078f86897b4756478cd95ea9b963ddfa4390bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0078f86897b4756478cd95ea9b963ddfa4390bc/comments", "author": null, "committer": null, "parents": [{"sha": "9e1db42dc8295bcb680d1e878ffccae8dd1f81b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e1db42dc8295bcb680d1e878ffccae8dd1f81b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e1db42dc8295bcb680d1e878ffccae8dd1f81b0"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "69af4806e8f55123718d72d9f951a457a9c799ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0078f86897b4756478cd95ea9b963ddfa4390bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0078f86897b4756478cd95ea9b963ddfa4390bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0078f86897b4756478cd95ea9b963ddfa4390bc", "patch": "@@ -1,3 +1,8 @@\n+2005-03-30  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* calls.c (struct arg_data): Update \"partial\" comment.\n+\t(load_register_parameters): Update \"nregs\" comment.\n+\n 2005-03-30  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/iq2000/iq2000.h (target_flags, MASK_GPOPT, MASK_EMBEDDED_DATA)"}, {"sha": "54307bf4be55d2ff9c688adb5123db6e9bdf1c6c", "filename": "gcc/calls.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0078f86897b4756478cd95ea9b963ddfa4390bc/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0078f86897b4756478cd95ea9b963ddfa4390bc/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=f0078f86897b4756478cd95ea9b963ddfa4390bc", "patch": "@@ -71,8 +71,8 @@ struct arg_data\n   /* If REG was promoted from the actual mode of the argument expression,\n      indicates whether the promotion is sign- or zero-extended.  */\n   int unsignedp;\n-  /* Number of registers to use.  0 means put the whole arg in registers.\n-     Also 0 if not passed in registers.  */\n+  /* Number of bytes to put in registers.  0 means put the whole arg\n+     in registers.  Also 0 if not passed in registers.  */\n   int partial;\n   /* Nonzero if argument must be passed on stack.\n      Note that some arguments may be passed on the stack\n@@ -1473,10 +1473,10 @@ load_register_parameters (struct arg_data *args, int num_actuals,\n \t  int nregs;\n \t  int size = 0;\n \t  rtx before_arg = get_last_insn ();\n-\t  /* Set to non-negative if must move a word at a time, even if just\n-\t     one word (e.g, partial == 1 && mode == DFmode).  Set to -1 if\n-\t     we just use a normal move insn.  This value can be zero if the\n-\t     argument is a zero size structure with no fields.  */\n+\t  /* Set non-negative if we must move a word at a time, even if\n+\t     just one word (e.g, partial == 4 && mode == DFmode).  Set\n+\t     to -1 if we just use a normal move insn.  This value can be\n+\t     zero if the argument is a zero size structure.  */\n \t  nregs = -1;\n \t  if (GET_CODE (reg) == PARALLEL)\n \t    ;"}]}