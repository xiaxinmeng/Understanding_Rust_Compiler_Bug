{"sha": "17adbcebf01689d2f2c5386845398d9aedbe4cb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdhZGJjZWJmMDE2ODlkMmYyYzUzODY4NDUzOThkOWFlZGJlNGNiMw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-12-03T06:00:54Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-12-03T06:00:54Z"}, "message": "re PR rtl-optimization/52714 (ICE in fixup_reorder_chain, at cfglayout.c:880)\n\n\tPR rtl-optimization/52714\n\t* combine.c (try_combine): Allow combining two insns into two\n\tnew insns if at least one of those is a noop.\n\ngcc/testsuite/\n\t* gcc.target/m68k/pr52714.c: New testcase.\n\nFrom-SVN: r218302", "tree": {"sha": "6c118249d04560eb3de252c4a8e608732b96a03b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c118249d04560eb3de252c4a8e608732b96a03b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17adbcebf01689d2f2c5386845398d9aedbe4cb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17adbcebf01689d2f2c5386845398d9aedbe4cb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17adbcebf01689d2f2c5386845398d9aedbe4cb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17adbcebf01689d2f2c5386845398d9aedbe4cb3/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51be49774041c9d2b588bb2fd139b5de7454c4f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51be49774041c9d2b588bb2fd139b5de7454c4f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51be49774041c9d2b588bb2fd139b5de7454c4f2"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "e3b3477e54174e21b30b22399176fe3aebaff848", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17adbcebf01689d2f2c5386845398d9aedbe4cb3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17adbcebf01689d2f2c5386845398d9aedbe4cb3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17adbcebf01689d2f2c5386845398d9aedbe4cb3", "patch": "@@ -1,3 +1,9 @@\n+2014-12-03  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/52714\n+\t* combine.c (try_combine): Allow combining two insns into two\n+\tnew insns if at least one of those is a noop.\n+\n 2014-12-03  Bin Cheng  <bin.cheng@arm.com>\n \n \t* target.def (fusion_priority): Wrap code with @smallexample."}, {"sha": "e6deb419987398b6b20c89c52322822193f65684", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17adbcebf01689d2f2c5386845398d9aedbe4cb3/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17adbcebf01689d2f2c5386845398d9aedbe4cb3/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=17adbcebf01689d2f2c5386845398d9aedbe4cb3", "patch": "@@ -3812,15 +3812,20 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n   /* Similarly, check for a case where we have a PARALLEL of two independent\n      SETs but we started with three insns.  In this case, we can do the sets\n      as two separate insns.  This case occurs when some SET allows two\n-     other insns to combine, but the destination of that SET is still live.  */\n+     other insns to combine, but the destination of that SET is still live.\n \n-  else if (i1 && insn_code_number < 0 && asm_noperands (newpat) < 0\n+     Also do this if we started with two insns and (at least) one of the\n+     resulting sets is a noop; this noop will be deleted later.  */\n+\n+  else if (insn_code_number < 0 && asm_noperands (newpat) < 0\n \t   && GET_CODE (newpat) == PARALLEL\n \t   && XVECLEN (newpat, 0) == 2\n \t   && GET_CODE (XVECEXP (newpat, 0, 0)) == SET\n+\t   && GET_CODE (XVECEXP (newpat, 0, 1)) == SET\n+\t   && (i1 || set_noop_p (XVECEXP (newpat, 0, 0))\n+\t\t  || set_noop_p (XVECEXP (newpat, 0, 1)))\n \t   && GET_CODE (SET_DEST (XVECEXP (newpat, 0, 0))) != ZERO_EXTRACT\n \t   && GET_CODE (SET_DEST (XVECEXP (newpat, 0, 0))) != STRICT_LOW_PART\n-\t   && GET_CODE (XVECEXP (newpat, 0, 1)) == SET\n \t   && GET_CODE (SET_DEST (XVECEXP (newpat, 0, 1))) != ZERO_EXTRACT\n \t   && GET_CODE (SET_DEST (XVECEXP (newpat, 0, 1))) != STRICT_LOW_PART\n \t   && ! reg_referenced_p (SET_DEST (XVECEXP (newpat, 0, 1)),"}, {"sha": "ee812d25be8eb2b46275adaa3a93e8976754252b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17adbcebf01689d2f2c5386845398d9aedbe4cb3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17adbcebf01689d2f2c5386845398d9aedbe4cb3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17adbcebf01689d2f2c5386845398d9aedbe4cb3", "patch": "@@ -1,3 +1,8 @@\n+2014-12-03  Segher Boessenkool  <segher.kernel.crashing.org>\n+\n+\tPR rtl-optimization/52714\n+\t* gcc.target/m68k/pr52714.c: New testcase.\n+\n 2014-12-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/avx512ifma-vpmaddhuq-2.c: Define AVX512IFMA."}, {"sha": "0a52a1d4d3aaf7df56fdcca375db46ca7ab9c1dd", "filename": "gcc/testsuite/gcc.target/m68k/pr52714.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17adbcebf01689d2f2c5386845398d9aedbe4cb3/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr52714.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17adbcebf01689d2f2c5386845398d9aedbe4cb3/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr52714.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr52714.c?ref=17adbcebf01689d2f2c5386845398d9aedbe4cb3", "patch": "@@ -0,0 +1,33 @@\n+/* PR rtl-optimization/52714\n+\n+   Check that combine manages to remove the \"stack == 0\" test.\n+   Without ICEing.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O1\" } */\n+\n+int __re_compile_fastmap(unsigned char *p)\n+{\n+    unsigned char **stack;\n+    unsigned size;\n+    unsigned avail;\n+\n+    stack = __builtin_alloca(5 * sizeof(unsigned char*));\n+    if (stack == 0)\n+\treturn -2;\n+    size = 5;\n+    avail = 0;\n+\n+    for (;;) {\n+\tswitch (*p++) {\n+\tcase 0:\n+\t    if (avail == size)\n+\t\treturn -2;\n+\t    stack[avail++] = p;\n+\t}\n+    }\n+\n+    return 0;\n+}\n+\n+/* { dg-final { scan-assembler-not {\\mtst\\.l %sp\\M} } } */"}]}