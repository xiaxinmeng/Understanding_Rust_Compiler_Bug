{"sha": "e6ecc89b1ffe1e13ba75daab525fbd29dabc6238", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZlY2M4OWIxZmZlMWUxM2JhNzVkYWFiNTI1ZmJkMjlkYWJjNjIzOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-01-02T23:43:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-01-02T23:43:24Z"}, "message": "c-typeck.c (output_init_element): Allow initializing static storage duration objects with compound literals.\n\n\t* c-typeck.c (output_init_element): Allow initializing static storage\n\tduration objects with compound literals.\n\n\t* gcc.dg/gnu89-init-1.c: Added new tests.\n\nFrom-SVN: r48487", "tree": {"sha": "45c3c1402dd4695cdcbc7dfd3f01629f6e676c30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45c3c1402dd4695cdcbc7dfd3f01629f6e676c30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1094b40dd9f323880a6ccd3e30a2f0a0c2a6766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1094b40dd9f323880a6ccd3e30a2f0a0c2a6766", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1094b40dd9f323880a6ccd3e30a2f0a0c2a6766"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "645b2fe4472898ac62773577166e8f9b6fd5712b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6ecc89b1ffe1e13ba75daab525fbd29dabc6238", "patch": "@@ -1,3 +1,8 @@\n+2002-01-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-typeck.c (output_init_element): Allow initializing static storage\n+\tduration objects with compound literals.\n+\n 2002-01-02  Richard Henderson  <rth@redhat.com>\n \n \t* objc/objc-act.c (hack_method_prototype): Clear current_function_decl"}, {"sha": "667dbe2dba14d5c7287bdc723752a0e8773560f8", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=e6ecc89b1ffe1e13ba75daab525fbd29dabc6238", "patch": "@@ -1,6 +1,6 @@\n /* Build expressions with type checking for C compiler.\n    Copyright (C) 1987, 1988, 1991, 1992, 1993, 1994, 1995, 1996, 1997,\n-   1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+   1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -6275,6 +6275,16 @@ output_init_element (value, type, field, pending)\n \t\t\t TYPE_MAIN_VARIANT (type))))\n     value = default_conversion (value);\n \n+  if (TREE_CODE (value) == COMPOUND_LITERAL_EXPR\n+      && require_constant_value && !flag_isoc99 && pending)\n+    {\n+      /* As an extension, allow initializing objects with static storage\n+\t duration with compound literals (which are then treated just as\n+\t the brace enclosed list they contain).  */\n+      tree decl = COMPOUND_LITERAL_EXPR_DECL (value);\n+      value = DECL_INITIAL (decl);\n+    }\n+\n   if (value == error_mark_node)\n     constructor_erroneous = 1;\n   else if (!TREE_CONSTANT (value))"}, {"sha": "a4afe65ef3d1007aa5c3cba4fc0b937e06cabec0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e6ecc89b1ffe1e13ba75daab525fbd29dabc6238", "patch": "@@ -1,3 +1,7 @@\n+2002-01-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/gnu89-init-1.c: Added new tests.\n+\n 2002-01-02  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/template/friend2.C: Remove as patch is reverted."}, {"sha": "3cabeb443c402bdb53b7fe588517d904c17e60c6", "filename": "gcc/testsuite/gcc.dg/gnu89-init-1.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu89-init-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ecc89b1ffe1e13ba75daab525fbd29dabc6238/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu89-init-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgnu89-init-1.c?ref=e6ecc89b1ffe1e13ba75daab525fbd29dabc6238", "patch": "@@ -8,6 +8,8 @@ extern void exit (int);\n \n struct A { int i; int j; int k[4]; };\n struct B { };\n+struct C { int i; };\n+struct D { int i; struct C j; };\n \n /* As a GNU extension, we allow initialization of objects with static storage\n    duration by compound literals.  It is handled as if the object\n@@ -22,6 +24,10 @@ int c[] = (int []) { [2] = 6, 7, 8 };\n int d[] = (int [3]) { 1 };\n int e[2] = (int []) { 1, 2 };\n int f[2] = (int [2]) { 1 };\n+struct C g[3] = { [2] = (struct C) { 13 }, [1] = (const struct C) { 12 } };\n+struct D h = { .j = (struct C) { 15 }, .i = 14 };\n+struct D i[2] = { [1].j = (const struct C) { 17 },\n+\t\t  [0] = { 0, (struct C) { 16 } } };\n \n int main (void)\n {\n@@ -43,5 +49,11 @@ int main (void)\n     abort ();\n   if (sizeof (f) != 2 * sizeof (int))\n     abort ();\n+  if (g[0].i || g[1].i != 12 || g[2].i != 13)\n+    abort ();\n+  if (h.i != 14 || h.j.i != 15)\n+    abort ();\n+  if (i[0].i || i[0].j.i != 16 || i[1].i || i[1].j.i != 17)\n+    abort ();\n   exit (0);\n }"}]}