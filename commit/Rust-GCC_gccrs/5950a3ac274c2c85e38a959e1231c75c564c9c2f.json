{"sha": "5950a3ac274c2c85e38a959e1231c75c564c9c2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk1MGEzYWMyNzRjMmM4NWUzOGE5NTllMTIzMWM3NWM1NjRjOWMyZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-05-10T16:18:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-05-10T16:18:54Z"}, "message": "[multiple changes]\n\n2004-05-10  Doug Rupp  <rupp@gnat.com>\n\n\t* 5qsystem.ads: Remove Short_Address subtype declaration. Moved to\n\tsystem.aux_dec.\n\n\t* s-auxdec.ads: Add Short_Address subtype (moved here from System).\n\n\t* Makefile.in: [VMS]: Add translation for 5qauxdec.ads.\n\n\t* init.c: [VMS] Macroize LIB$ calls for IA64 and Alpha.\n\tFixes undefined symbols in IA64 gnatlib.\n\n\t* 5vinmaop.adb: Reference s-auxdec for Short_Address.\n\n\t* 5xsystem.ads, 5vsystem.ads: Back out last change (addition of subtype\n\tShort_Address). This will be moved to system.auxdec.\n\n2004-05-10  Thomas Quinot  <quinot@act-europe.fr>\n\n\t* sem_util.adb: Replace test for presence of a node that is always\n\tpresent with a call to Discard_Node.\n\n\t* sem_ch10.adb (Analyze_Compilation_Unit): Remove superfluous call to\n\tAnalyze on the library unit node after generation of distribution stub\n\tconstructs.  The call was a no-op because Unit_Node has already been\n\tAnalyzed, and the tree fragments for the distribution stubs are\n\tanalyzed as they are inserted in Exp_Dist.\n\tUpdate comment regarding to distribution stubs to reflect that we\n\tdo not generate stub in separate files anymore.\n\n\t* einfo.ads: Clarify the fact that a tagged private type has the\n\tE_Record_Type_With_Private Ekind.\n\n\t* erroutc.adb: Minor reformatting\n\n\t* erroutc.ads (Max_Msg_Length): Increase to cover possible larger\n\tvalues if line length is increased using -gnatyM (noticed during code\n\treading).\n\n\t* eval_fat.adb: Minor reformatting\n\tPut spaces around exponentiation operator\n\n2004-05-10  Ed Schonberg  <schonberg@gnat.com>\n\n\tPR ada/15005\n\t* sem_util.adb (Is_Dependent_Component_Of_Mutable_Object): If prefix\n\thas been rewritten as an explicit dereference, retrieve type of\n\toriginal node to check for possibly unconstrained record type.\n\n2004-05-10  Ed Schonberg  <schonberg@gnat.com>\n\n\t* exp_ch7.adb (Check_Visibly_Controlled): If given operation is not\n\toverriding, use the operation of the parent unconditionally.\n\n\t* sem_ch4.adb (Remove_Address_Interpretations): Remove address\n\toperation when either operand is a literal, to avoid further\n\tambiguities.\n\n\t* sem_ch6.adb (New_Overloaded_Entity): If new entity is inherited and\n\toverridden by a previous explicit declaration, mark the previous entity\n\tas overriding.\n\n\t* sem_disp.adb (Check_Dispatching_Operation): New predicate\n\tIs_Visibly_Controlled, to determine whether a declaration of a\n\tprimitive control operation for a derived type overrides an inherited\n\tone. Add warning if the explicit declaration does not override.\n\n2004-05-10  Vincent Celier  <celier@gnat.com>\n\n\t* gnatls.adb (Gnatls): Initialize Snames, to avoid assertion error in\n\tsome cases when the sources are no longer present.\n\n\t* make.adb (Collect_Arguments): Fail if an external source, not part\n\tof any project need to be compiled, when switch -x has not been\n\tspecified.\n\n\t* makeusg.adb: Document new switch -x\n\n\t* opt.ads (External_Unit_Compilation_Allowed): New Boolean flag,\n\tdefaulted to False.\n\n\t* switch-m.adb (Scan_Make_Switches): New switch -x\n\n\t* vms_data.ads: Add VMS qualifier /NON_PROJECT_UNIT_COMPILATION for\n\tgnatmake switch -x.\n\n\t* gnat_ugn.texi: Document new gnatmake switch -x\n\n2004-05-10  Eric Botcazou  <ebotcazou@act-europe.fr>\n\n\t* misc.c (gnat_init_options): Set flag_zero_initialized_in_bss to 0.\n\n\t* utils.c (create_var_decl): Do not modify the DECL_COMMON flag.\n\t(process_attributes): Likewise.\n\n2004-05-10  Joel Brobecker  <brobecker@gnat.com>\n\n\t* s-inmaop.ads: Fix spelling mistake in one of the comments.\n\n2004-05-10  Robert Dewar  <dewar@gnat.com>\n\n\t* gnat_ugn.texi: Document that for config pragma files, the maximum\n\tline length is always 32767.\n\n\t* gnat_rm.texi: For pragma Eliminate, note that concatenation of string\n\tliterals is now allowed.\n\n\t* gnat-style.texi: Remove statement about splitting long lines before\n\tan operator rather than after, since we do not follow this rule at all.\n\tClarify rule (really lack of rule) for spaces around exponentiation\n\n\t* sem_elim.adb: Allow concatenation of string literals as well as a\n\tsingle string literal for pragma arguments.\n\n\t* sem_prag.ads, sem_prag.adb: (Is_Config_Static_String): New function\n\n\t* a-textio.adb (Terminate_Line): Do not add line feed if nothing\n\twritten for append case.\n\n\t* frontend.adb: Changes to avoid checking max line length in config\n\tpragma files.\n\n\t* g-os_lib.ads: Minor reformatting\n\n\t* mlib-utl.adb: Do not define Max_Line_Length locally (definition was\n\twrong in any case. Instead use standard value. Noticed during code\n\treading.\n\n\t* opt.ads (Max_Line_Length): New field, used to implement removal of\n\tlimitation on length of lines when scanning config pragma files.\n\n\t* osint.ads, prj-dect.adb, prj-strt.adb, prj-tree.adb,\n\tmakeutl.ads, makeutl.adb: Minor reformatting\n\n\t* scn.adb: Do not check line length while scanning config pragma files\n\tDo not check line length while scanning out license information\n\n\t* scng.adb: Changes to avoid line length checks while parsing config\n\tpragma files.\n\n2004-05-10  GNAT Script  <nobody@gnat.com>\n\n\t* Make-lang.in: Makefile automatically updated\n\nFrom-SVN: r81671", "tree": {"sha": "b05f1a8a1cace3f818e7721e71eb91c837736b59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b05f1a8a1cace3f818e7721e71eb91c837736b59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5950a3ac274c2c85e38a959e1231c75c564c9c2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5950a3ac274c2c85e38a959e1231c75c564c9c2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5950a3ac274c2c85e38a959e1231c75c564c9c2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5950a3ac274c2c85e38a959e1231c75c564c9c2f/comments", "author": null, "committer": null, "parents": [{"sha": "7cef5027e19c7e27d9ffc448fc8a775667a8df32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cef5027e19c7e27d9ffc448fc8a775667a8df32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cef5027e19c7e27d9ffc448fc8a775667a8df32"}], "stats": {"total": 923, "additions": 639, "deletions": 284}, "files": [{"sha": "c8b94936ded38abc4ec80c57eba1097f4ee271ae", "filename": "gcc/ada/5qsystem.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2F5qsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2F5qsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5qsystem.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -63,9 +63,6 @@ pragma Pure (System);\n    --  Storage-related Declarations\n \n    type Address is new Long_Integer;\n-   subtype Short_Address is Address\n-     range -2 ** (32 - 1) .. +2 ** (32 - 1) - 1;\n-   for Short_Address'Object_Size use 32;\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;"}, {"sha": "2cbfd0eb71558dc57eb12bdf6433bd332a23dada", "filename": "gcc/ada/5vinmaop.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2F5vinmaop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2F5vinmaop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vinmaop.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -37,6 +37,9 @@\n with System.OS_Interface;\n --  used for various type, constant, and operations\n \n+with System.Aux_DEC;\n+--  used for Short_Address\n+\n with System.Parameters;\n \n with System.Tasking;\n@@ -114,7 +117,7 @@ package body System.Interrupt_Management.Operations is\n    --------------------\n \n    function To_unsigned_long is new\n-     Unchecked_Conversion (System.Short_Address, unsigned_long);\n+     Unchecked_Conversion (System.Aux_DEC.Short_Address, unsigned_long);\n \n    function Interrupt_Wait (Mask : access Interrupt_Mask)\n      return Interrupt_ID"}, {"sha": "fc4fb2e6d6f24e24320d1bdb4436bcd9e0bd74b6", "filename": "gcc/ada/5vsystem.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2F5vsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2F5vsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vsystem.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -63,7 +63,6 @@ pragma Pure (System);\n    --  Storage-related Declarations\n \n    type Address is private;\n-   subtype Short_Address is Address;\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;"}, {"sha": "3ba5e692195b4905d96c45c56a1d0f88abbb4bbe", "filename": "gcc/ada/5xsystem.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2F5xsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2F5xsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5xsystem.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -63,7 +63,6 @@ pragma Pure (System);\n    --  Storage-related Declarations\n \n    type Address is private;\n-   subtype Short_Address is Address;\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;"}, {"sha": "6c3ddc3eef9643c452a2ea2419ace4264b0b96e1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 144, "deletions": 0, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -1,3 +1,147 @@\n+2004-05-10  Doug Rupp  <rupp@gnat.com>\n+\n+\t* 5qsystem.ads: Remove Short_Address subtype declaration. Moved to\n+\tsystem.aux_dec.\n+\n+\t* s-auxdec.ads: Add Short_Address subtype (moved here from System).\n+\n+\t* Makefile.in: [VMS]: Add translation for 5qauxdec.ads.\n+\n+\t* init.c: [VMS] Macroize LIB$ calls for IA64 and Alpha.\n+\tFixes undefined symbols in IA64 gnatlib.\n+\n+\t* 5vinmaop.adb: Reference s-auxdec for Short_Address.\n+\n+\t* 5xsystem.ads, 5vsystem.ads: Back out last change (addition of subtype\n+\tShort_Address). This will be moved to system.auxdec.\n+\n+2004-05-10  Thomas Quinot  <quinot@act-europe.fr>\n+\n+\t* sem_util.adb: Replace test for presence of a node that is always\n+\tpresent with a call to Discard_Node.\n+\n+\t* sem_ch10.adb (Analyze_Compilation_Unit): Remove superfluous call to\n+\tAnalyze on the library unit node after generation of distribution stub\n+\tconstructs.  The call was a no-op because Unit_Node has already been\n+\tAnalyzed, and the tree fragments for the distribution stubs are\n+\tanalyzed as they are inserted in Exp_Dist.\n+\tUpdate comment regarding to distribution stubs to reflect that we\n+\tdo not generate stub in separate files anymore.\n+\n+\t* einfo.ads: Clarify the fact that a tagged private type has the\n+\tE_Record_Type_With_Private Ekind.\n+\n+\t* erroutc.adb: Minor reformatting\n+\n+\t* erroutc.ads (Max_Msg_Length): Increase to cover possible larger\n+\tvalues if line length is increased using -gnatyM (noticed during code\n+\treading).\n+\n+\t* eval_fat.adb: Minor reformatting\n+\tPut spaces around exponentiation operator\n+\n+2004-05-10  Ed Schonberg  <schonberg@gnat.com>\n+\n+\tPR ada/15005\n+\t* sem_util.adb (Is_Dependent_Component_Of_Mutable_Object): If prefix\n+\thas been rewritten as an explicit dereference, retrieve type of\n+\toriginal node to check for possibly unconstrained record type.\n+\n+2004-05-10  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* exp_ch7.adb (Check_Visibly_Controlled): If given operation is not\n+\toverriding, use the operation of the parent unconditionally.\n+\n+\t* sem_ch4.adb (Remove_Address_Interpretations): Remove address\n+\toperation when either operand is a literal, to avoid further\n+\tambiguities.\n+\n+\t* sem_ch6.adb (New_Overloaded_Entity): If new entity is inherited and\n+\toverridden by a previous explicit declaration, mark the previous entity\n+\tas overriding.\n+\n+\t* sem_disp.adb (Check_Dispatching_Operation): New predicate\n+\tIs_Visibly_Controlled, to determine whether a declaration of a\n+\tprimitive control operation for a derived type overrides an inherited\n+\tone. Add warning if the explicit declaration does not override.\n+\n+2004-05-10  Vincent Celier  <celier@gnat.com>\n+\n+\t* gnatls.adb (Gnatls): Initialize Snames, to avoid assertion error in\n+\tsome cases when the sources are no longer present.\n+\n+\t* make.adb (Collect_Arguments): Fail if an external source, not part\n+\tof any project need to be compiled, when switch -x has not been\n+\tspecified.\n+\n+\t* makeusg.adb: Document new switch -x\n+\n+\t* opt.ads (External_Unit_Compilation_Allowed): New Boolean flag,\n+\tdefaulted to False.\n+\n+\t* switch-m.adb (Scan_Make_Switches): New switch -x\n+\n+\t* vms_data.ads: Add VMS qualifier /NON_PROJECT_UNIT_COMPILATION for\n+\tgnatmake switch -x.\n+\n+\t* gnat_ugn.texi: Document new gnatmake switch -x\n+\n+2004-05-10  Eric Botcazou  <ebotcazou@act-europe.fr>\n+\n+\t* misc.c (gnat_init_options): Set flag_zero_initialized_in_bss to 0.\n+\n+\t* utils.c (create_var_decl): Do not modify the DECL_COMMON flag.\n+\t(process_attributes): Likewise.\n+\n+2004-05-10  Joel Brobecker  <brobecker@gnat.com>\n+\n+\t* s-inmaop.ads: Fix spelling mistake in one of the comments.\n+\n+2004-05-10  Robert Dewar  <dewar@gnat.com>\n+\n+\t* gnat_ugn.texi: Document that for config pragma files, the maximum\n+\tline length is always 32767.\n+\n+\t* gnat_rm.texi: For pragma Eliminate, note that concatenation of string\n+\tliterals is now allowed.\n+\n+\t* gnat-style.texi: Remove statement about splitting long lines before\n+\tan operator rather than after, since we do not follow this rule at all.\n+\tClarify rule (really lack of rule) for spaces around exponentiation\n+\n+\t* sem_elim.adb: Allow concatenation of string literals as well as a\n+\tsingle string literal for pragma arguments.\n+\n+\t* sem_prag.ads, sem_prag.adb: (Is_Config_Static_String): New function\n+\n+\t* a-textio.adb (Terminate_Line): Do not add line feed if nothing\n+\twritten for append case.\n+\n+\t* frontend.adb: Changes to avoid checking max line length in config\n+\tpragma files.\n+\n+\t* g-os_lib.ads: Minor reformatting\n+\n+\t* mlib-utl.adb: Do not define Max_Line_Length locally (definition was\n+\twrong in any case. Instead use standard value. Noticed during code\n+\treading.\n+\n+\t* opt.ads (Max_Line_Length): New field, used to implement removal of\n+\tlimitation on length of lines when scanning config pragma files.\n+\n+\t* osint.ads, prj-dect.adb, prj-strt.adb, prj-tree.adb,\n+\tmakeutl.ads, makeutl.adb: Minor reformatting\n+\n+\t* scn.adb: Do not check line length while scanning config pragma files\n+\tDo not check line length while scanning out license information\n+\n+\t* scng.adb: Changes to avoid line length checks while parsing config\n+\tpragma files.\n+\n+2004-05-10  GNAT Script  <nobody@gnat.com>\n+\n+\t* Make-lang.in: Makefile automatically updated\n+\n 2004-05-05  Arnaud Charlet  <charlet@act-europe.fr>\n \n \t* osint.adb (Find_Program_Name): Fix handling of VMS version"}, {"sha": "0a6775a438f86724cd893fbee7a90ece8157c89f", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -1698,10 +1698,9 @@ ada/exp_ch7.o : ada/ada.ads ada/a-except.ads ada/alloc.ads ada/atree.ads \\\n    ada/erroutc.ads ada/exp_ch11.ads ada/exp_ch7.ads ada/exp_ch7.adb \\\n    ada/exp_ch9.ads ada/exp_dbug.ads ada/exp_tss.ads ada/exp_util.ads \\\n    ada/exp_util.adb ada/fname.ads ada/fname-uf.ads ada/freeze.ads \\\n-   ada/get_targ.ads ada/gnat.ads ada/g-hesora.ads ada/g-htable.ads \\\n-   ada/g-os_lib.ads ada/g-string.ads ada/gnatvsn.ads ada/hostparm.ads \\\n-   ada/inline.ads ada/itypes.ads ada/lib.ads ada/lib.adb ada/lib-list.adb \\\n-   ada/lib-sort.adb ada/namet.ads ada/nlists.ads ada/nlists.adb \\\n+   ada/get_targ.ads ada/gnat.ads ada/g-htable.ads ada/g-os_lib.ads \\\n+   ada/g-string.ads ada/gnatvsn.ads ada/hostparm.ads ada/inline.ads \\\n+   ada/itypes.ads ada/lib.ads ada/namet.ads ada/nlists.ads ada/nlists.adb \\\n    ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n    ada/restrict.adb ada/rident.ads ada/rtsfind.ads ada/sem.ads \\\n    ada/sem_ch3.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_eval.ads \\\n@@ -3261,14 +3260,15 @@ ada/sem_elim.o : ada/ada.ads ada/a-except.ads ada/a-uncdea.ads \\\n    ada/errout.ads ada/erroutc.ads ada/gnat.ads ada/g-htable.ads \\\n    ada/g-os_lib.ads ada/g-string.ads ada/gnatvsn.ads ada/hostparm.ads \\\n    ada/namet.ads ada/nlists.ads ada/nlists.adb ada/opt.ads ada/output.ads \\\n-   ada/sem_elim.ads ada/sem_elim.adb ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/sinput.adb ada/snames.ads ada/stand.ads \\\n-   ada/stringt.ads ada/system.ads ada/s-exctab.ads ada/s-htable.ads \\\n-   ada/s-htable.adb ada/s-imgenu.ads ada/s-memory.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/tree_io.ads ada/types.ads ada/uintp.ads \\\n-   ada/uintp.adb ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \n+   ada/sem_elim.ads ada/sem_elim.adb ada/sem_prag.ads ada/sinfo.ads \\\n+   ada/sinfo.adb ada/sinput.ads ada/sinput.adb ada/snames.ads \\\n+   ada/stand.ads ada/stringt.ads ada/system.ads ada/s-exctab.ads \\\n+   ada/s-htable.ads ada/s-htable.adb ada/s-imgenu.ads ada/s-memory.ads \\\n+   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n+   ada/types.ads ada/uintp.ads ada/uintp.adb ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads \n \n ada/sem_eval.o : ada/ada.ads ada/a-except.ads ada/alloc.ads ada/atree.ads \\\n    ada/atree.adb ada/casing.ads ada/checks.ads ada/csets.ads ada/debug.ads \\"}, {"sha": "6b075b8a3d339e39c6c514d7a3e89308866174d6", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -1145,6 +1145,7 @@ endif\n ifeq ($(strip $(filter-out alpha% ia64 dec hp vms% openvms% alphavms%,$(targ))),)\n ifeq ($(strip $(filter-out ia64 hp vms% openvms%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS_AUX1 = \\\n+  s-auxdec.ads<5qauxdec.ads \\\n   s-crtl.ads<5xcrtl.ads \\\n   s-osinte.adb<5xosinte.adb \\\n   s-osinte.ads<5xosinte.ads \\"}, {"sha": "7afb804ff9c7daf0e640f1f4df6089d5855098e1", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1678,8 +1678,12 @@ package body Ada.Text_IO is\n          --  because it is too much of a nuisance to have these odd line\n          --  feeds when nothing has been written to the file.\n \n+         --  We also avoid this for files opened in append mode, in\n+         --  accordance with (RM A.8.2(10))\n+\n          elsif (File /= Standard_Err and then File /= Standard_Out)\n            and then (File.Line = 1 and then File.Page = 1)\n+           and then Mode (File) = Out_File\n          then\n             New_Line (File);\n          end if;"}, {"sha": "6487a22012e5fd36e40bd34772e5d35cf34bf94a", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -3383,26 +3383,27 @@ package Einfo is\n       --  A record subtype, created by a record subtype declaration.\n \n       E_Record_Type_With_Private,\n-      --  Used for types defined by a private extension declaration. Includes\n-      --  the fields for both private types and for record types (with the\n-      --  sole exception of Corresponding_Concurrent_Type which is obviously\n-      --  not needed). This entity is considered to be both a record type and\n+      --  Used for types defined by a private extension declaration, and\n+      --  for tagged private types. Includes the fields for both private\n+      --  types and for record types (with the sole exception of\n+      --  Corresponding_Concurrent_Type which is obviously not needed).\n+      --  This entity is considered to be both a record type and\n       --  a private type.\n \n       E_Record_Subtype_With_Private,\n       --  A subtype of a type defined by a private extension declaration.\n \n       E_Private_Type,\n-      --  A private type, created by a private type declaration that does\n-      --  not have the keyword limited.\n+      --  A private type, created by a private type declaration\n+      --  that has neither the keyword limited nor the keyword tagged.\n \n       E_Private_Subtype,\n       --  A subtype of a private type, created by a subtype declaration used\n       --  to declare a subtype of a private type.\n \n       E_Limited_Private_Type,\n       --  A limited private type, created by a private type declaration that\n-      --  has the keyword limited.\n+      --  has the keyword limited, but not the keyword tagged.\n \n       E_Limited_Private_Subtype,\n       --  A subtype of a limited private type, created by a subtype declaration"}, {"sha": "31c97d5bc5543109fc865c1832e109467c0471c9", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,7 +33,6 @@\n with Casing;   use Casing;\n with Debug;    use Debug;\n with Err_Vars; use Err_Vars;\n-with Hostparm;\n with Namet;    use Namet;\n with Opt;      use Opt;\n with Output;   use Output;\n@@ -71,7 +70,6 @@ package body Erroutc is\n \n    function Buffer_Ends_With (S : String) return Boolean is\n       Len : constant Natural := S'Length;\n-\n    begin\n       return\n         Msglen > Len\n@@ -466,6 +464,10 @@ package body Erroutc is\n       --  Returns True for a message that is to be purged. Also adjusts\n       --  error counts appropriately.\n \n+      ------------------\n+      -- To_Be_Purged --\n+      ------------------\n+\n       function To_Be_Purged (E : Error_Msg_Id) return Boolean is\n       begin\n          if E /= No_Error_Msg"}, {"sha": "cde38932df3cc1d5782b383c120d8fd41c4d2a54", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -27,7 +27,6 @@\n --  This packages contains global variables and routines common to error\n --  reporting packages, including Errout and Prj.Err.\n \n-with Hostparm;\n with Table;\n with Types;  use Types;\n \n@@ -77,11 +76,12 @@ package Erroutc is\n    Manual_Quote_Mode : Boolean := False;\n    --  Set True in manual quotation mode\n \n-   Max_Msg_Length : constant := 256 + 2 * Hostparm.Max_Line_Length;\n-   --  Maximum length of error message. The addition of Max_Line_Length\n+   Max_Msg_Length : constant := 1024 + 2 * Int (Column_Number'Last);\n+   --  Maximum length of error message. The addition of 2 * Column_Number'Last\n    --  ensures that two insertion tokens of maximum length can be accomodated.\n-   --  The value of 256 is an arbitrary value that should be more than long\n-   --  enough to accomodate any reasonable message.\n+   --  The value of 1024 is an arbitrary value that should be more than long\n+   --  enough to accomodate any reasonable message (and for that matter, some\n+   --  pretty unreasonable messages!)\n \n    Msg_Buffer : String (1 .. Max_Msg_Length);\n    --  Buffer used to prepare error messages"}, {"sha": "2d4399303012be76fd7025e589b27c97585b150d", "filename": "gcc/ada/eval_fat.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Feval_fat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Feval_fat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feval_fat.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -40,8 +40,8 @@ package body Eval_Fat is\n \n    type Radix_Power_Table is array (Int range 1 .. 4) of Int;\n \n-   Radix_Powers : constant Radix_Power_Table\n-     := (Radix**1, Radix**2, Radix**3, Radix**4);\n+   Radix_Powers : constant Radix_Power_Table :=\n+                    (Radix ** 1, Radix ** 2, Radix ** 3, Radix ** 4);\n \n    function Float_Radix return T renames Ureal_2;\n    --  Radix expressed in real form"}, {"sha": "287b4efc7922abbfe036d3f525c4835b11900739", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -37,10 +37,8 @@ with Exp_Ch11; use Exp_Ch11;\n with Exp_Dbug; use Exp_Dbug;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n-with Fname;    use Fname;\n with Freeze;   use Freeze;\n with Hostparm; use Hostparm;\n-with Lib;      use Lib;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n@@ -818,28 +816,16 @@ package body Exp_Ch7 is\n    begin\n       if Is_Derived_Type (Typ)\n         and then Comes_From_Source (E)\n-        and then Is_Overriding_Operation (E)\n-        and then\n-          (not Is_Predefined_File_Name\n-                     (Unit_File_Name (Get_Source_Unit (Root_Type (Typ)))))\n+        and then not Is_Overriding_Operation (E)\n       then\n-         --  We know that the explicit operation on the type overrode\n+         --  We know that the explicit operation on the type does not override\n          --  the inherited operation of the parent, and that the derivation\n          --  is from a private type that is not visibly controlled.\n \n          Parent_Type := Etype (Typ);\n          Op := Find_Prim_Op (Parent_Type, Name_Of (Prim));\n \n-         if Present (Op)\n-            and then Is_Hidden (Op)\n-            and then Scope (Scope (Typ)) /= Scope (Op)\n-            and then not In_Open_Scopes (Scope (Typ))\n-         then\n-            --  If the parent operation is not visible, and the derived\n-            --  type is not declared in a child unit, then the explicit\n-            --  operation does not override, and we must use the operation\n-            --  of the parent.\n-\n+         if Present (Op) then\n             E := Op;\n \n             --  Wrap the object to be initialized into the proper"}, {"sha": "35645bd0812dbcbab76f97a80c45b94f5413c701", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -124,10 +124,12 @@ begin\n    begin\n       --  We always analyze config files with style checks off, since\n       --  we don't want a miscellaneous gnat.adc that is around to\n-      --  discombobulate intended -gnatg or -gnaty compilations.\n+      --  discombobulate intended -gnatg or -gnaty compilations. We\n+      --  also disconnect checking for maximum line length.\n \n       Opt.Style_Check := False;\n       Style_Check := False;\n+      Opt.Max_Line_Length := Int (Column_Number'Last);\n \n       --  Capture current suppress options, which may get modified\n \n@@ -191,6 +193,7 @@ begin\n       --  Restore style check, but if config file turned on checks, leave on!\n \n       Opt.Style_Check := Save_Style_Check or Style_Check;\n+      Opt.Max_Line_Length := Hostparm.Max_Line_Length;\n \n       --  Capture any modifications to suppress options from config pragmas\n "}, {"sha": "bd4201fc5f7fbd2ba79b699c3aaa2651f353c885", "filename": "gcc/ada/g-os_lib.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fg-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fg-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-os_lib.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -93,6 +93,7 @@ pragma Elaborate_Body (OS_Lib);\n    -- Time/Date Stuff --\n    ---------------------\n \n+   type OS_Time is private;\n    --  The OS's notion of time is represented by the private type OS_Time.\n    --  This is the type returned by the File_Time_Stamp functions to obtain\n    --  the time stamp of a specified file. Functions and a procedure (modeled\n@@ -102,22 +103,25 @@ pragma Elaborate_Body (OS_Lib);\n    --  cases but rather the actual (time-zone independent) time stamp of the\n    --  file (of course in Unix systems, this *is* in GMT form).\n \n-   type OS_Time is private;\n    Invalid_Time : constant OS_Time;\n+   --  A special unique value used to flag an invalid time stamp value\n \n    subtype Year_Type   is Integer range 1900 .. 2099;\n    subtype Month_Type  is Integer range    1 ..   12;\n    subtype Day_Type    is Integer range    1 ..   31;\n    subtype Hour_Type   is Integer range    0 ..   23;\n    subtype Minute_Type is Integer range    0 ..   59;\n    subtype Second_Type is Integer range    0 ..   59;\n+   --  Declarations similar to those in Calendar, breaking down the time\n+\n \n    function GM_Year    (Date : OS_Time) return Year_Type;\n    function GM_Month   (Date : OS_Time) return Month_Type;\n    function GM_Day     (Date : OS_Time) return Day_Type;\n    function GM_Hour    (Date : OS_Time) return Hour_Type;\n    function GM_Minute  (Date : OS_Time) return Minute_Type;\n    function GM_Second  (Date : OS_Time) return Second_Type;\n+   --  Functions to extract information from OS_Time value\n \n    function \"<\"  (X, Y : OS_Time) return Boolean;\n    function \">\"  (X, Y : OS_Time) return Boolean;\n@@ -135,6 +139,8 @@ pragma Elaborate_Body (OS_Lib);\n       Hour    : out Hour_Type;\n       Minute  : out Minute_Type;\n       Second  : out Second_Type);\n+   --  Analogous to the routine of similar name in Calendar, takes an OS_Time\n+   --  and splits it into its component parts with obvious meanings.\n \n    ----------------\n    -- File Stuff --"}, {"sha": "ee425de5f293de7ed03c3a3784db8d0e535f8a09", "filename": "gcc/ada/gnat-style.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fgnat-style.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fgnat-style.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat-style.texi?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -382,17 +382,17 @@ one context, where comments explain their purpose.\n @itemize @bullet\n \n @item\n-Every operator must be surrounded by spaces, except for the\n-exponentiation operator.\n+Every operator must be surrounded by spaces. An exception is that\n+this rule does not apply to the exponentiation operator, for which\n+there are no specific layout rules. The reason for this exception\n+is that sometimes it makes clearer reading to leave out the spaces\n+around exponentiation.\n @cindex Operators\n \n @smallexample @c adanocomment\n        E := A * B**2 + 3 * (C - D);\n @end smallexample\n \n-@item\n-When folding a long line, fold before an operator, not after.\n-\n @item\n Use parentheses where they clarify the intended association of operands\n with operators:"}, {"sha": "614064ff313ac86aa269016ea3026a2f884bd88d", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -1356,10 +1356,12 @@ FUNCTION_PROFILE ::= [Parameter_Types => PARAMETER_TYPES,]\n                       Result_Type => result_SUBTYPE_NAME]\n \n PARAMETER_TYPES ::= (SUBTYPE_NAME @{, SUBTYPE_NAME@})\n-SUBTYPE_NAME    ::= STRING_LITERAL\n+SUBTYPE_NAME    ::= STRING_VALUE\n \n SOURCE_LOCATION ::= Source_Location => SOURCE_TRACE\n-SOURCE_TRACE    ::= STRING_LITERAL\n+SOURCE_TRACE    ::= STRING_VALUE\n+\n+STRING_VALUE ::= STRING_LITERAL @{& STRING_LITERAL@}\n @end smallexample\n \n @noindent\n@@ -1388,7 +1390,7 @@ subprograms denoted by the first two parameters.\n Use PARAMETER_AND_RESULT_TYPE_PROFILE to specify the profile of the subprogram\n to be eliminated in a manner similar to that used for the extended\n @code{Import} and @code{Export} pragmas, except that the subtype names are\n-always given as string literals. At the moment, this form of distinguishing\n+always given as strings. At the moment, this form of distinguishing\n overloaded subprograms is implemented only partially, so we do not recommend\n using it for practical subprogram elimination.\n \n@@ -1398,8 +1400,8 @@ as @code{Parameter_Types => (\"\")}\n Alternatively, the @code{Source_Location} parameter is used to specify\n which overloaded alternative is to be eliminated by pointing to the\n location of the DEFINING_PROGRAM_UNIT_NAME of this subprogram in the\n-source text. The string literal submitted as SOURCE_TRACE should have\n-the following format:\n+source text. The string literal (or concatenation of string literals)\n+given as SOURCE_TRACE must have the following format:\n \n @smallexample @c ada\n SOURCE_TRACE ::= SOURCE_LOCATION@{LBRACKET SOURCE_LOCATION RBRACKET@}"}, {"sha": "5ae1a892124d010689cdfc6c6a81c851bd79fb1d", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -8334,6 +8334,15 @@ decides are necessary.\n Indicates the verbosity of the parsing of GNAT project files.\n See @ref{Switches Related to Project Files}.\n \n+@item ^-x^/NON_PROJECT_UNIT_COMPILATION^\n+@cindex @option{^-x^/NON_PROJECT_UNIT_COMPILATION^} (@code{gnatmake})\n+Indicates that sources that are not part of any Project File may be compiled.\n+Normally, when using Project Files, only sources that are part of a Project\n+File may be compile. When this switch is used, a source outside of all Project\n+Files may be compiled. The ALI file and the object file will be put in the\n+object directory of the main Project. The compilation switches used will only\n+be those specified on the command line.\n+\n @item ^-X^/EXTERNAL_REFERENCE=^@var{name=value}\n Indicates that external variable @var{name} has the value @var{value}.\n The Project Manager will use this value for occurrences of\n@@ -17566,7 +17575,9 @@ by @command{gnatstub} to compile an argument source file.\n @cindex @option{^-gnatyM^/MAX_LINE_LENGTH^} (@command{gnatstub})\n (@var{n} is a non-negative integer). Set the maximum line length in the\n body stub to @var{n}; the default is 79. The maximum value that can be\n-specified is 32767.\n+specified is 32767. Note that in the special case of configuration\n+pragma files, the maximum is always 32767 regardless of whether or\n+not this switch appears.\n \n @item ^-gnaty^/STYLE_CHECKS=^@var{n}\n @cindex @option{^-gnaty^/STYLE_CHECKS=^} (@command{gnatstub})"}, {"sha": "1e491f2a7d3294cdcab518ea02ba536d2e59e2e8", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -38,6 +38,7 @@ with Osint;       use Osint;\n with Osint.L;     use Osint.L;\n with Output;      use Output;\n with Rident;      use Rident;\n+with Snames;\n with Targparm;    use Targparm;\n with Types;       use Types;\n \n@@ -938,6 +939,7 @@ begin\n \n    Namet.Initialize;\n    Csets.Initialize;\n+   Snames.Initialize;\n \n    --  Loop to scan out arguments\n "}, {"sha": "b27e059ed9d16f64fb8c367cf8c3e3cf92809189", "filename": "gcc/ada/init.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -1281,7 +1281,17 @@ __gnat_initialize (void)\n \n #elif defined (VMS)\n \n-#ifdef IN_RTS\n+#ifdef __IA64\n+#define lib_get_curr_invo_context LIB$I64_GET_CURR_INVO_CONTEXT\n+#define lib_get_prev_invo_context LIB$I64_GET_PREV_INVO_CONTEXT\n+#define lib_get_invo_handle LIB$I64_GET_INVO_HANDLE\n+#else\n+#define lib_get_curr_invo_context LIB$GET_CURR_INVO_CONTEXT\n+#define lib_get_prev_invo_context LIB$GET_PREV_INVO_CONTEXT\n+#define lib_get_invo_handle LIB$GET_INVO_HANDLE\n+#endif\n+\n+#if defined (IN_RTS) && !defined (__IA64)\n \n /* The prehandler actually gets control first on a condition. It swaps the\n    stack pointer and calls the handler (__gnat_error_handler). */\n@@ -1464,10 +1474,10 @@ __gnat_error_handler (int *sigargs, void *mechargs)\n   mstate = (long *) (*Get_Machine_State_Addr) ();\n   if (mstate != 0)\n     {\n-      LIB$GET_CURR_INVO_CONTEXT (&curr_icb);\n-      LIB$GET_PREV_INVO_CONTEXT (&curr_icb);\n-      LIB$GET_PREV_INVO_CONTEXT (&curr_icb);\n-      curr_invo_handle = LIB$GET_INVO_HANDLE (&curr_icb);\n+      lib_get_curr_invo_context (&curr_icb);\n+      lib_get_prev_invo_context (&curr_icb);\n+      lib_get_prev_invo_context (&curr_icb);\n+      curr_invo_handle = lib_get_invo_handle (&curr_icb);\n       *mstate = curr_invo_handle;\n     }\n   Raise_From_Signal_Handler (exception, msg);\n@@ -1477,7 +1487,7 @@ void\n __gnat_install_handler (void)\n {\n   long prvhnd;\n-#ifdef IN_RTS\n+#if defined (IN_RTS) && !defined (__IA64)\n   char *c;\n \n   c = (char *) xmalloc (2049);"}, {"sha": "a4b2a41ff9fdc1df6e8391f34c62486b3782ef2c", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -1727,10 +1727,16 @@ package body Make is\n                Project          => Arguments_Project,\n                Path             => Arguments_Path_Name);\n \n-            --  If the source is not a source of a project file,\n-            --  we simply add the saved gcc switches.\n+            --  If the source is not a source of a project file, check if\n+            --  this is allowed.\n \n             if Arguments_Project = No_Project then\n+               if not External_Unit_Compilation_Allowed then\n+                  Make_Failed (\"external source, not part of any projects, \" &\n+                               \"cannot be compiled (\", Source_File_Name, \")\");\n+               end if;\n+\n+               --  If it is allowed, simply add the saved gcc switches\n \n                Add_Arguments (The_Saved_Gcc_Switches.all);\n "}, {"sha": "ed7140f84d70baec4609200429cd4d78f4305470", "filename": "gcc/ada/makeusg.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmakeusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmakeusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeusg.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -191,6 +191,12 @@ begin\n    Write_Str (\"  -vPx     Specify verbosity when parsing GNAT Project Files\");\n    Write_Eol;\n \n+   --  Line for -x\n+\n+   Write_Str (\"  -x       \" &\n+              \"Allow compilation of needed units external to the projects\");\n+   Write_Eol;\n+\n    --  Line for -X\n \n    Write_Str (\"  -Xnm=val Specify an external reference for GNAT \" &"}, {"sha": "926affc54c7acbf735e16a37353315246fe45c47", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 26, "deletions": 24, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -24,14 +24,14 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Namet;       use Namet;\n-with Osint;       use Osint;\n-with Prj;         use Prj;\n+with Namet;    use Namet;\n+with Osint;    use Osint;\n+with Prj;      use Prj;\n with Prj.Ext;\n with Prj.Util;\n-with Snames;      use Snames;\n+with Snames;   use Snames;\n with Table;\n-with Types;       use Types;\n+with Types;    use Types;\n \n with System.HTable;\n \n@@ -44,6 +44,8 @@ package body Makeutl is\n    --  Identify either a mono-unit source (when Index = 0) or a specific unit\n    --  in a multi-unit source.\n \n+   --  There follow many global undocumented declarations, comments needed ???\n+\n    Max_Mask_Num : constant := 2048;\n \n    subtype Mark_Num is Union_Id range 0 .. Max_Mask_Num - 1;\n@@ -91,9 +93,9 @@ package body Makeutl is\n          if Last_Linker_Option = Linker_Options_Buffer'Last then\n             declare\n                New_Buffer : constant String_List_Access :=\n-                 new String_List\n-                   (1 .. Linker_Options_Buffer'Last +\n-                         Linker_Option_Initial_Count);\n+                              new String_List\n+                                (1 .. Linker_Options_Buffer'Last +\n+                                        Linker_Option_Initial_Count);\n             begin\n                New_Buffer (Linker_Options_Buffer'Range) :=\n                  Linker_Options_Buffer.all;\n@@ -158,7 +160,6 @@ package body Makeutl is\n         or else Equal_Pos >= Finish\n       then\n          return False;\n-\n       else\n          Prj.Ext.Add\n            (External_Name => Argv (Start .. Equal_Pos - 1),\n@@ -173,8 +174,7 @@ package body Makeutl is\n \n    function Is_Marked\n      (Source_File : File_Name_Type;\n-      Index       : Int := 0)\n-      return Boolean\n+      Index       : Int := 0) return Boolean\n    is\n    begin\n       return Marks.Get (K => (File => Source_File, Index => Index));\n@@ -185,21 +185,21 @@ package body Makeutl is\n    -----------------------------\n \n    function Linker_Options_Switches\n-     (Project  : Project_Id)\n-      return String_List\n+     (Project  : Project_Id) return String_List\n    is\n+      procedure Recursive_Add_Linker_Options (Proj : Project_Id);\n+      --  The recursive routine used to add linker options\n \n       ----------------------------------\n       -- Recursive_Add_Linker_Options --\n       ----------------------------------\n \n-      procedure Recursive_Add_Linker_Options (Proj : Project_Id);\n-\n       procedure Recursive_Add_Linker_Options (Proj : Project_Id) is\n-         Data : Project_Data;\n+         Data           : Project_Data;\n          Linker_Package : Package_Id;\n-         Options : Variable_Value;\n-         Imported : Project_List;\n+         Options        : Variable_Value;\n+         Imported       : Project_List;\n+\n       begin\n          if Proj /= No_Project then\n             Data := Projects.Table (Proj);\n@@ -239,6 +239,8 @@ package body Makeutl is\n          end if;\n       end Recursive_Add_Linker_Options;\n \n+   --  Start of processing for Linker_Options_Switches\n+\n    begin\n       Linker_Opts.Init;\n \n@@ -382,7 +384,6 @@ package body Makeutl is\n    is\n    begin\n       if Switch /= null then\n-\n          declare\n             Sw : String (1 .. Switch'Length);\n             Start : Positive;\n@@ -458,6 +459,7 @@ package body Makeutl is\n       Start  : Natural;\n       Finish : Natural;\n       Result : Int := 0;\n+\n    begin\n       Get_Name_String (ALI_File);\n \n@@ -486,18 +488,18 @@ package body Makeutl is\n       --  the character that precedes a unit index, this is not the ALI file\n       --  of a unit in a multi-unit source.\n \n-      if Start > Finish or else\n-        Start = 1 or else\n-        Name_Buffer (Start - 1) /= Multi_Unit_Index_Character\n+      if Start > Finish\n+        or else Start = 1\n+        or else Name_Buffer (Start - 1) /= Multi_Unit_Index_Character\n       then\n          return 0;\n       end if;\n \n       --  Build the index from the digit(s)\n \n       while Start <= Finish loop\n-         Result := (Result * 10) + Character'Pos (Name_Buffer (Start))\n-           - Character'Pos ('0');\n+         Result := Result * 10 +\n+                     Character'Pos (Name_Buffer (Start)) - Character'Pos ('0');\n          Start := Start + 1;\n       end loop;\n "}, {"sha": "0a3f11a0aafa9caa66338880d80129252c931eb4", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -24,37 +24,45 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with GNAT.OS_Lib; use GNAT.OS_Lib;\n with Osint;\n-with Prj;         use Prj;\n-with Types;       use Types;\n+with Prj;   use Prj;\n+with Types; use Types;\n+\n+with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n package Makeutl is\n \n    type Fail_Proc is access procedure\n-     (S1 : String; S2 : String := \"\"; S3 : String := \"\");\n+     (S1 : String;\n+      S2 : String := \"\";\n+      S3 : String := \"\");\n    Do_Fail : Fail_Proc := Osint.Fail'Access;\n+   --  Comment required ???\n \n    function Unit_Index_Of (ALI_File : File_Name_Type) return Int;\n    --  Find the index of a unit in a source file. Return zero if the file\n    --  is not a multi-unit source file.\n \n    function Is_External_Assignment (Argv : String) return Boolean;\n-   --  Verify that an external assignment switch is syntactically correct.\n-   --  Correct forms are\n+   --  Verify that an external assignment switch is syntactically correct\n+   --\n+   --  Correct forms are:\n+   --\n    --      -Xname=value\n    --      -X\"name=other value\"\n+   --\n    --  Assumptions: 'First = 1, Argv (1 .. 2) = \"-X\"\n    --  When this function returns True, the external assignment has\n    --  been entered by a call to Prj.Ext.Add, so that in a project\n    --  file, External (\"name\") will return \"value\".\n \n+   function Linker_Options_Switches (Project  : Project_Id) return String_List;\n+   --  Comment required ???\n+\n    --  Package Mains is used to store the mains specified on the command line\n    --  and to retrieve them when a project file is used, to verify that the\n    --  files exist and that they belong to a project file.\n \n-   function Linker_Options_Switches (Project  : Project_Id) return String_List;\n-\n    package Mains is\n \n       --  Mains are stored in a table. An index is used to retrieve the mains\n@@ -100,8 +108,7 @@ package Makeutl is\n \n    function Is_Marked\n      (Source_File : File_Name_Type;\n-      Index       : Int := 0)\n-      return Boolean;\n+      Index       : Int := 0) return Boolean;\n    --  Returns True if the unit was previously marked.\n \n    procedure Delete_All_Marks;"}, {"sha": "dca2b0fe9f2d864840b25f33102dcd2e4d938bbf", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -320,6 +320,9 @@ gnat_init_options (unsigned int argc, const char **argv)\n   save_argc = argc;\n   save_argv = argv;\n \n+  /* Uninitialized really means uninitialized in Ada.  */\n+  flag_zero_initialized_in_bss = 0;\n+\n   return CL_Ada;\n }\n \n@@ -972,4 +975,3 @@ fp_size_to_prec (int size)\n \n   abort ();\n }\n-"}, {"sha": "152d272b0350e9fd79363ec5bf4baa6f9b7b2f7d", "filename": "gcc/ada/mlib-utl.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmlib-utl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fmlib-utl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-utl.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---              Copyright (C) 2002-2003, Ada Core Technologies, Inc.        --\n+--              Copyright (C) 2002-2004, Ada Core Technologies, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,7 +64,6 @@ package body MLib.Utl is\n       Success   : Boolean;\n \n       Line_Length : Natural := 0;\n-      Max_Line_Length : constant := 200; --  arbitrary\n \n    begin\n       Initialize;\n@@ -82,9 +81,12 @@ package body MLib.Utl is\n          Line_Length := Ar_Name'Length;\n \n          for J in Arguments'Range loop\n+\n             --  Make sure the Output buffer does not overflow\n \n-            if Line_Length + 1 + Arguments (J)'Length > Max_Line_Length then\n+            if Line_Length + 1 + Arguments (J)'Length >\n+                 Integer (Opt.Max_Line_Length)\n+            then\n                Write_Eol;\n                Line_Length := 0;\n             end if;"}, {"sha": "eb34e50f3fcbd4a98e6295b9a6ba58e2af490cdd", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -398,6 +398,11 @@ package Opt is\n    --  effect if an explicit Link_Name is supplied (a link name is always\n    --  used exactly as given).\n \n+   External_Unit_Compilation_Allowed : Boolean := False;\n+   --  GNATMAKE\n+   --  When True (set by gnatmake switch -x), allow compilation of sources\n+   --  that are not part of any project file.\n+\n    Float_Format : Character := ' ';\n    --  GNAT\n    --  A non-blank value indicates that a Float_Format pragma has been\n@@ -659,6 +664,15 @@ package Opt is\n    --  extension, as set by the appropriate switch. If no switch is given,\n    --  then this value is initialized by Osint to the appropriate value.\n \n+   Max_Line_Length : Int := Hostparm.Max_Line_Length;\n+   --  This is a copy of Max_Line_Length used by the scanner. It is usually\n+   --  set to be a copy of Hostparm.Max_Line_Length, and is used to check\n+   --  the maximum line length in the scanner when style checking is inactive.\n+   --  The only time it is set to a different value is during the scanning of\n+   --  configuration pragma files, where we want to turn off all checking and\n+   --  in particular we want to allow long lines. So we reset this value to\n+   --  Column_Number'Last during scanning of configuration pragma files.\n+\n    Maximum_Processes : Positive := 1;\n    --  GNATMAKE\n    --  Maximum number of processes that should be spawned to carry out"}, {"sha": "aa45a7a03b427fc433f2b036362df582f889c926", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -1029,7 +1029,6 @@ package body Osint is\n \n       if Command_Name (Cindex2) in '0' .. '9' then\n          for J in reverse Cindex1 .. Cindex2 loop\n-\n             if Command_Name (J) = '.' or Command_Name (J) = ';' then\n                Cindex2 := J - 1;\n                exit;"}, {"sha": "6e5672d1aca7408c7bc6732309be3979b77dac86", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -93,10 +93,14 @@ package Osint is\n    --  gives the total number of filenames found on the command line.\n \n    No_Index : constant := -1;\n+   --  Value used in Add_File to indicate that no index is specified\n+   --  for a main.\n \n    procedure Add_File (File_Name : String; Index : Int := No_Index);\n    --  Called by the subprogram processing the command line for each\n-   --  file name found.\n+   --  file name found. The index, when not defaulted to No_Index\n+   --  is the index of the subprogram in its source, zero indicating\n+   --  that the source is not multi-unit.\n \n    procedure Find_Program_Name;\n    --  Put simple name of current program being run (excluding the directory"}, {"sha": "0db8d9150bdffbec5a6fda91ccaafcec668af1a4", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -197,8 +197,8 @@ package body Prj.Dect is\n          --  Set, if appropriate the index case insensitivity flag\n \n          elsif Attributes.Table (Current_Attribute).Kind_2 in\n-           Case_Insensitive_Associative_Array ..\n-             Optional_Index_Case_Insensitive_Associative_Array\n+                 Case_Insensitive_Associative_Array ..\n+                 Optional_Index_Case_Insensitive_Associative_Array\n          then\n             Set_Case_Insensitive (Attribute, To => True);\n          end if;\n@@ -257,15 +257,16 @@ package body Prj.Dect is\n                      Expect (Tok_Integer_Literal, \"integer literal\");\n \n                      if Token = Tok_Integer_Literal then\n+\n+                        --  Set the source index value from given literal\n+\n                         declare\n                            Index : constant Int :=\n                                      UI_To_Int (Int_Literal_Value);\n                         begin\n                            if Index = 0 then\n                               Error_Msg (\"index cannot be zero\", Token_Ptr);\n-\n                            else\n-                              --  Set the index\n                               Set_Source_Index_Of (Attribute, To => Index);\n                            end if;\n                         end;"}, {"sha": "cc1bd83db80189fcdf1ef2e53715cdfc2e27600c", "filename": "gcc/ada/prj-strt.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fprj-strt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fprj-strt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-strt.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -1205,6 +1205,8 @@ package body Prj.Strt is\n \n             Scan;\n \n+            --  Check for possible index expression\n+\n             if Token = Tok_At then\n                if not Optional_Index then\n                   Error_Msg (\"index not allowed here\", Token_Ptr);\n@@ -1214,6 +1216,8 @@ package body Prj.Strt is\n                      Scan;\n                   end if;\n \n+               --  Set the index value\n+\n                else\n                   Scan;\n                   Expect (Tok_Integer_Literal, \"integer literal\");\n@@ -1224,9 +1228,7 @@ package body Prj.Strt is\n                      begin\n                         if Index = 0 then\n                            Error_Msg (\"index cannot be zero\", Token_Ptr);\n-\n                         else\n-                           --  Set the index\n                            Set_Source_Index_Of (Term_Id, To => Index);\n                         end if;\n                      end;"}, {"sha": "2a67b57c5b122dfcdd201f67da2ea07303f2d1a0", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -2361,8 +2361,8 @@ package body Prj.Tree is\n             (Project_Nodes.Table (Node).Kind = N_Variable_Reference\n                or else\n              Project_Nodes.Table (Node).Kind = N_Typed_Variable_Declaration)\n-           and then\n-            Project_Nodes.Table (To).Kind    = N_String_Type_Declaration);\n+          and then\n+            Project_Nodes.Table (To).Kind = N_String_Type_Declaration);\n \n       if Project_Nodes.Table (Node).Kind = N_Variable_Reference then\n          Project_Nodes.Table (Node).Field3 := To;\n@@ -2400,19 +2400,17 @@ package body Prj.Tree is\n       pragma Assert\n         (Node /= Empty_Node\n           and then\n-           (Project_Nodes.Table (Node).Kind = N_Literal_String\n-            or else\n-            Project_Nodes.Table (Node).Kind = N_Attribute_Declaration));\n+            (Project_Nodes.Table (Node).Kind = N_Literal_String\n+              or else\n+             Project_Nodes.Table (Node).Kind = N_Attribute_Declaration));\n       return Project_Nodes.Table (Node).Src_Index;\n    end Source_Index_Of;\n \n    --------------------\n    -- String_Type_Of --\n    --------------------\n \n-   function String_Type_Of\n-     (Node : Project_Node_Id) return Project_Node_Id\n-   is\n+   function String_Type_Of (Node : Project_Node_Id) return Project_Node_Id is\n    begin\n       pragma Assert\n         (Node /= Empty_Node"}, {"sha": "2d34ff111c977e2cc7b644a0fd11d23ebaf3ce74", "filename": "gcc/ada/s-auxdec.ads", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fs-auxdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fs-auxdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,6 +42,16 @@ with Unchecked_Conversion;\n package System.Aux_DEC is\n pragma Elaborate_Body (Aux_DEC);\n \n+   subtype Short_Address is Address;\n+   --  In some versions of System.Aux_DEC, notably that for VMS on the\n+   --  ia64, there are two address types (64-bit and 32-bit), and the\n+   --  name Short_Address is used for the short address form. To avoid\n+   --  difficulties (in regression tests and elsewhere) with units that\n+   --  reference Short_Address, it is provided for other targets as a\n+   --  synonum for the normal Address type, and, as in the case where\n+   --  the lengths are different, Address and Short_Address can be\n+   --  freely inter-converted.\n+\n    type Integer_8  is range -2 **  (8 - 1) .. +2 **  (8 - 1) - 1;\n    for Integer_8'Size  use  8;\n "}, {"sha": "2bb8ef0caa1059a92b5c58ee712c299855566f2d", "filename": "gcc/ada/s-inmaop.ads", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fs-inmaop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fs-inmaop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-inmaop.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -7,7 +7,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-1998, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,78 +35,82 @@\n package System.Interrupt_Management.Operations is\n \n    procedure Thread_Block_Interrupt (Interrupt : Interrupt_ID);\n-   --  Mask the calling thread for the interrupt\n    pragma Inline (Thread_Block_Interrupt);\n+   --  Mask the calling thread for the interrupt\n \n    procedure Thread_Unblock_Interrupt (Interrupt : Interrupt_ID);\n-   --  Unmask the calling thread for the interrupt\n    pragma Inline (Thread_Unblock_Interrupt);\n+   --  Unmask the calling thread for the interrupt\n \n    procedure Set_Interrupt_Mask (Mask : access Interrupt_Mask);\n    --  Set the interrupt mask of the calling thread\n+\n    procedure Set_Interrupt_Mask\n      (Mask  : access Interrupt_Mask;\n       OMask : access Interrupt_Mask);\n+   pragma Inline (Set_Interrupt_Mask);\n    --  Set the interrupt mask of the calling thread while returning the\n    --  previous Mask.\n-   pragma Inline (Set_Interrupt_Mask);\n \n    procedure Get_Interrupt_Mask (Mask : access Interrupt_Mask);\n-   --  Get the interrupt mask of the calling thread\n    pragma Inline (Get_Interrupt_Mask);\n+   --  Get the interrupt mask of the calling thread\n \n    function Interrupt_Wait (Mask : access Interrupt_Mask) return Interrupt_ID;\n-   --  Wait for the interrupts specified in Mask and return\n-   --  the interrupt received. Upon error it return 0.\n    pragma Inline (Interrupt_Wait);\n+   --  Wait for the interrupts specified in Mask and return\n+   --  the interrupt received. Return 0 upon error.\n \n    procedure Install_Default_Action (Interrupt : Interrupt_ID);\n-   --  Set the sigaction of the Interrupt to default (SIG_DFL).\n    pragma Inline (Install_Default_Action);\n+   --  Set the sigaction of the Interrupt to default (SIG_DFL).\n \n    procedure Install_Ignore_Action (Interrupt : Interrupt_ID);\n-   --  Set the sigaction of the Interrupt to ignore (SIG_IGN).\n    pragma Inline (Install_Ignore_Action);\n+   --  Set the sigaction of the Interrupt to ignore (SIG_IGN).\n \n    procedure Fill_Interrupt_Mask (Mask : access Interrupt_Mask);\n-   --  Get a Interrupt_Mask with all the interrupt masked\n    pragma Inline (Fill_Interrupt_Mask);\n+   --  Get a Interrupt_Mask with all the interrupt masked\n \n    procedure Empty_Interrupt_Mask (Mask : access Interrupt_Mask);\n-   --  Get a Interrupt_Mask with all the interrupt unmasked\n    pragma Inline (Empty_Interrupt_Mask);\n+   --  Get a Interrupt_Mask with all the interrupt unmasked\n \n    procedure Add_To_Interrupt_Mask\n      (Mask      : access Interrupt_Mask;\n       Interrupt : Interrupt_ID);\n-   --  Mask the given interrupt in the Interrupt_Mask\n    pragma Inline (Add_To_Interrupt_Mask);\n+   --  Mask the given interrupt in the Interrupt_Mask\n \n    procedure Delete_From_Interrupt_Mask\n      (Mask      : access Interrupt_Mask;\n       Interrupt : Interrupt_ID);\n-   --  Unmask the given interrupt in the Interrupt_Mask\n    pragma Inline (Delete_From_Interrupt_Mask);\n+   --  Unmask the given interrupt in the Interrupt_Mask\n \n    function Is_Member\n      (Mask      : access Interrupt_Mask;\n       Interrupt : Interrupt_ID) return Boolean;\n-   --  See if a given interrupt is masked in the Interrupt_Mask\n    pragma Inline (Is_Member);\n+   --  See if a given interrupt is masked in the Interrupt_Mask\n \n    procedure Copy_Interrupt_Mask (X : out Interrupt_Mask; Y : Interrupt_Mask);\n-   --  Assigment needed for limited private type Interrupt_Mask.\n    pragma Inline (Copy_Interrupt_Mask);\n+   --  Assigment needed for limited private type Interrupt_Mask.\n \n    procedure Interrupt_Self_Process (Interrupt : Interrupt_ID);\n-   --  raise an Interrupt process-level\n    pragma Inline (Interrupt_Self_Process);\n+   --  Raise an Interrupt process-level\n \n    --  The following objects serve as constants, but are initialized\n    --  in the body to aid portability.  These actually belong to the\n    --  System.Interrupt_Management but since Interrupt_Mask is a\n    --  private type we can not have them declared there.\n \n+   --  Why not make these deferred constants that are initialized using\n+   --  function calls in the private part???\n+\n    Environment_Mask : aliased Interrupt_Mask;\n    --  This mask represents the mask of Environment task when this package\n    --  is being elaborated, except the signals being"}, {"sha": "5e8fbbf22988c3360eafd75b9c4160d0cd21c749", "filename": "gcc/ada/scn.adb", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fscn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fscn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -26,7 +26,6 @@\n \n with Atree;    use Atree;\n with Csets;    use Csets;\n-with Hostparm;\n with Namet;    use Namet;\n with Opt;      use Opt;\n with Scans;    use Scans;\n@@ -99,13 +98,11 @@ package body Scn is\n \n    procedure Check_End_Of_Line is\n       Len : constant Int := Int (Scan_Ptr) - Int (Current_Line_Start);\n-\n    begin\n-      if Len > Hostparm.Max_Line_Length then\n-         Error_Long_Line;\n-\n-      elsif Style_Check then\n+      if Style_Check then\n          Style.Check_Line_Terminator (Len);\n+      elsif Len > Opt.Max_Line_Length then\n+         Error_Long_Line;\n       end if;\n    end Check_End_Of_Line;\n \n@@ -115,6 +112,7 @@ package body Scn is\n \n    function Determine_License return License_Type is\n       GPL_Found : Boolean := False;\n+      Result    : License_Type;\n \n       function Contains (S : String) return Boolean;\n       --  See if current comment contains successive non-blank characters\n@@ -191,14 +189,17 @@ package body Scn is\n            or else Source (Scan_Ptr + 1) /= '-'\n          then\n             if GPL_Found then\n-               return GPL;\n+               Result := GPL;\n+               exit;\n             else\n-               return Unknown;\n+               Result := Unknown;\n+               exit;\n             end if;\n \n          elsif Contains (\"Asaspecialexception\") then\n             if GPL_Found then\n-               return Modified_GPL;\n+               Result := Modified_GPL;\n+               exit;\n             end if;\n \n          elsif Contains (\"GNUGeneralPublicLicense\") then\n@@ -211,7 +212,8 @@ package body Scn is\n              Contains\n               (\"ThisspecificationisderivedfromtheAdaReferenceManual\")\n          then\n-            return Unrestricted;\n+            Result := Unrestricted;\n+            exit;\n          end if;\n \n          Skip_EOL;\n@@ -240,6 +242,8 @@ package body Scn is\n             end;\n          end if;\n       end loop;\n+\n+      return Result;\n    end Determine_License;\n \n    ----------------------------\n@@ -259,7 +263,7 @@ package body Scn is\n    begin\n       Error_Msg\n         (\"this line is too long\",\n-         Current_Line_Start + Hostparm.Max_Line_Length);\n+         Current_Line_Start + Source_Ptr (Opt.Max_Line_Length));\n    end Error_Long_Line;\n \n    ------------------------"}, {"sha": "92b3c74810d4420ffa379f106fda3e8e33a3ae1e", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -26,7 +26,6 @@\n \n with Csets;    use Csets;\n with Err_Vars; use Err_Vars;\n-with Hostparm; use Hostparm;\n with Namet;    use Namet;\n with Opt;      use Opt;\n with Scans;    use Scans;\n@@ -302,7 +301,14 @@ package body Scng is\n          if Style_Check and Style_Check_Max_Line_Length then\n             Style.Check_Line_Terminator (Len);\n \n-         elsif Len > Hostparm.Max_Line_Length then\n+         --  If style checking is inactive, check maximum line length against\n+         --  standard value. Note that we take this from Opt.Max_Line_Length\n+         --  rather than Hostparm.Max_Line_Length because we do not want to\n+         --  impose any limit during scanning of configuration pragma files,\n+         --  and Opt.Max_Line_Length (normally set to Hostparm.Max_Line_Length)\n+         --  is reset to Column_Number'Max during scanning of such files.\n+\n+         elsif Len > Opt.Max_Line_Length then\n             Error_Long_Line;\n          end if;\n       end Check_End_Of_Line;\n@@ -359,7 +365,7 @@ package body Scng is\n       begin\n          Error_Msg\n            (\"this line is too long\",\n-            Current_Line_Start + Hostparm.Max_Line_Length);\n+            Current_Line_Start + Source_Ptr (Opt.Max_Line_Length));\n       end Error_Long_Line;\n \n       -------------------------------"}, {"sha": "9c0da7f97f74a06d789a3220d9a5e9dff30e7db6", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -511,7 +511,7 @@ package body Sem_Ch10 is\n          end;\n       end if;\n \n-      --  Generate distribution stub files if requested and no error\n+      --  Generate distribution stubs if requested and no error\n \n       if N = Main_Cunit\n         and then (Distribution_Stub_Mode = Generate_Receiver_Stub_Body\n@@ -546,9 +546,6 @@ package body Sem_Ch10 is\n             Add_Stub_Constructs (N);\n          end if;\n \n-         --  Reanalyze the unit with the new constructs\n-\n-         Analyze (Unit_Node);\n       end if;\n \n       if Nkind (Unit_Node) = N_Package_Declaration"}, {"sha": "4f9383142e5acba6b266af049ff325abb298a8e9", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 53, "deletions": 42, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -4359,17 +4359,19 @@ package body Sem_Ch4 is\n       --  subprograms are used to hide its operators, they will be\n       --  truly hidden.\n \n-      procedure Remove_Address_Interpretations;\n+      type Operand_Position is (First_Op, Second_Op);\n+\n+      procedure Remove_Address_Interpretations (Op : Operand_Position);\n       --  Ambiguities may arise when the operands are literal and the\n       --  address operations in s-auxdec are visible. In that case, remove\n       --  the interpretation of a literal as Address, to retain the semantics\n       --  of Address as a private type.\n \n       ------------------------------------\n-      -- Remove_Address_Intereprtations --\n+      -- Remove_Address_Interpretations --\n       ------------------------------------\n \n-      procedure Remove_Address_Interpretations is\n+      procedure Remove_Address_Interpretations (Op : Operand_Position) is\n          Formal : Entity_Id;\n \n       begin\n@@ -4378,13 +4380,11 @@ package body Sem_Ch4 is\n             while Present (It.Nam) loop\n                Formal := First_Entity (It.Nam);\n \n-               if Is_Descendent_Of_Address (Etype (Formal))\n-                 or else\n-                   (Present (Next_Entity (Formal))\n-                      and then\n-                        Is_Descendent_Of_Address\n-                          (Etype (Next_Entity (Formal))))\n-               then\n+               if Op = Second_Op then\n+                  Formal := Next_Entity (Formal);\n+               end if;\n+\n+               if Is_Descendent_Of_Address (Etype (Formal)) then\n                   Remove_Interp (I);\n                end if;\n \n@@ -4417,38 +4417,43 @@ package body Sem_Ch4 is\n             Get_Next_Interp (I, It);\n          end loop;\n \n-         --  Remove corresponding predefined operator, which is\n-         --  always added to the overload set, unless it is a universal\n-         --  operation.\n-\n          if No (Abstract_Op) then\n             return;\n \n-            --  Remove address interpretations if we have a universal\n-            --  interpretation. This avoids literals being interpreted\n-            --  as type Address, which is never appropriate.\n-\n          elsif Nkind (N) in N_Op then\n-            if Nkind (N) in N_Unary_Op\n-              and then Present (Universal_Interpretation (Right_Opnd (N)))\n-            then\n-               Remove_Address_Interpretations;\n+            --  Remove interpretations that treat literals as addresses.\n+            --  This is never appropriate.\n \n-            elsif Nkind (N) in N_Binary_Op\n-              and then Present (Universal_Interpretation (Right_Opnd (N)))\n-              and then Present (Universal_Interpretation (Left_Opnd  (N)))\n-            then\n-               Remove_Address_Interpretations;\n+            if Nkind (N) in N_Binary_Op then\n+               declare\n+                  U1 : constant Boolean :=\n+                     Present (Universal_Interpretation (Right_Opnd (N)));\n+                  U2 : constant Boolean :=\n+                     Present (Universal_Interpretation (Left_Opnd (N)));\n \n-            else\n-               Get_First_Interp (N, I, It);\n-               while Present (It.Nam) loop\n-                  if Scope (It.Nam) = Standard_Standard then\n-                     Remove_Interp (I);\n+               begin\n+                  if U1 and then not U2 then\n+                     Remove_Address_Interpretations (Second_Op);\n+\n+                  elsif U2 and then not U1 then\n+                     Remove_Address_Interpretations (First_Op);\n                   end if;\n \n-                  Get_Next_Interp (I, It);\n-               end loop;\n+                  if not (U1 and U2) then\n+\n+                     --  Remove corresponding predefined operator, which is\n+                     --  always added to the overload set.\n+\n+                     Get_First_Interp (N, I, It);\n+                     while Present (It.Nam) loop\n+                        if Scope (It.Nam) = Standard_Standard then\n+                           Remove_Interp (I);\n+                        end if;\n+\n+                        Get_Next_Interp (I, It);\n+                     end loop;\n+                  end if;\n+               end;\n             end if;\n \n          elsif Nkind (N) = N_Function_Call\n@@ -4459,18 +4464,24 @@ package body Sem_Ch4 is\n                      and then\n                        Nkind (Selector_Name (Name (N))) = N_Operator_Symbol))\n          then\n+\n             declare\n                Arg1 : constant Node_Id := First (Parameter_Associations (N));\n+               U1   : constant Boolean :=\n+                        Present (Universal_Interpretation (Arg1));\n+               U2   : constant Boolean :=\n+                        Present (Next (Arg1)) and then\n+                        Present (Universal_Interpretation (Next (Arg1)));\n \n             begin\n-               if Present (Universal_Interpretation (Arg1))\n-                 and then\n-                   (No (Next (Arg1))\n-                     or else Present (Universal_Interpretation (Next (Arg1))))\n-               then\n-                  Remove_Address_Interpretations;\n+               if U1 and then not U2 then\n+                  Remove_Address_Interpretations (First_Op);\n \n-               else\n+               elsif U2 and then not U1 then\n+                  Remove_Address_Interpretations (Second_Op);\n+               end if;\n+\n+               if not (U1 and U2) then\n                   Get_First_Interp (N, I, It);\n                   while Present (It.Nam) loop\n                      if Scope (It.Nam) = Standard_Standard\n@@ -4486,7 +4497,7 @@ package body Sem_Ch4 is\n          end if;\n \n          --  If the removal has left no valid interpretations, emit\n-         --  error message now an label node as illegal.\n+         --  error message now and label node as illegal.\n \n          if Present (Abstract_Op) then\n             Get_First_Interp (N, I, It);"}, {"sha": "89512b51c7e49d5157dc05d42962b5034d91ab92", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -4599,8 +4599,9 @@ package body Sem_Ch6 is\n                   end if;\n \n                   --  In any case the implicit operation remains hidden by\n-                  --  the existing declaration.\n+                  --  the existing declaration, which is overriding.\n \n+                  Set_Is_Overriding_Operation (E);\n                   return;\n \n                   --  Within an instance, the renaming declarations for"}, {"sha": "5c85af2d600b1a28c30436cd9a526f572ec9dca9", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,6 +41,7 @@ with Sem_Ch6;  use Sem_Ch6;\n with Sem_Eval; use Sem_Eval;\n with Sem_Util; use Sem_Util;\n with Snames;   use Snames;\n+with Stand;    use Stand;\n with Sinfo;    use Sinfo;\n with Uintp;    use Uintp;\n \n@@ -423,6 +424,27 @@ package body Sem_Disp is\n       Has_Dispatching_Parent : Boolean := False;\n       Body_Is_Last_Primitive : Boolean := False;\n \n+      function Is_Visibly_Controlled (T : Entity_Id) return Boolean;\n+      --  Check whether T is derived from a visibly controlled type.\n+      --  This is true if the root type is declared in Ada.Finalization.\n+      --  If T is derived instead from a private type whose full view\n+      --  is controlled, an explicit Initialize/Adjust/Finalize subprogram\n+      --  does not override the inherited one.\n+\n+      ---------------------------\n+      -- Is_Visibly_Controlled --\n+      ---------------------------\n+\n+      function Is_Visibly_Controlled (T : Entity_Id) return Boolean is\n+         Root : constant Entity_Id := Root_Type (T);\n+      begin\n+         return Chars (Scope (Root)) = Name_Finalization\n+           and then Chars (Scope (Scope (Root))) = Name_Ada\n+           and then Scope (Scope (Scope (Root))) = Standard_Standard;\n+      end Is_Visibly_Controlled;\n+\n+   --  Start of processing for Check_Dispatching_Operation\n+\n    begin\n       if Ekind (Subp) /= E_Procedure and then Ekind (Subp) /= E_Function then\n          return;\n@@ -595,8 +617,19 @@ package body Sem_Disp is\n \n       if Present (Old_Subp) then\n          Check_Subtype_Conformant (Subp, Old_Subp);\n-         Override_Dispatching_Operation (Tagged_Type, Old_Subp, Subp);\n-         Set_Is_Overriding_Operation (Subp);\n+         if (Chars (Subp) = Name_Initialize\n+           or else Chars (Subp) = Name_Adjust\n+           or else Chars (Subp) = Name_Finalize)\n+           and then Is_Controlled (Tagged_Type)\n+           and then not Is_Visibly_Controlled (Tagged_Type)\n+         then\n+            Set_Is_Overriding_Operation (Subp, False);\n+            Error_Msg_NE\n+              (\"operation does not override inherited&?\", Subp, Subp);\n+         else\n+            Override_Dispatching_Operation (Tagged_Type, Old_Subp, Subp);\n+            Set_Is_Overriding_Operation (Subp);\n+         end if;\n       else\n          Add_Dispatching_Operation (Tagged_Type, Subp);\n       end if;"}, {"sha": "cb07a921c87eb9f8ec77b2a0499d27695c25a693", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 47, "deletions": 66, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -24,19 +24,21 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Atree;   use Atree;\n-with Einfo;   use Einfo;\n-with Errout;  use Errout;\n-with Namet;   use Namet;\n-with Nlists;  use Nlists;\n-with Sinput;  use Sinput;\n-with Sinfo;   use Sinfo;\n-with Snames;  use Snames;\n-with Stand;   use Stand;\n-with Stringt; use Stringt;\n+with Atree;    use Atree;\n+with Einfo;    use Einfo;\n+with Errout;   use Errout;\n+with Namet;    use Namet;\n+with Nlists;   use Nlists;\n+with Sem_Prag; use Sem_Prag;\n+with Sinput;   use Sinput;\n+with Sinfo;    use Sinfo;\n+with Snames;   use Snames;\n+with Stand;    use Stand;\n+with Stringt;  use Stringt;\n with Table;\n \n with GNAT.HTable; use GNAT.HTable;\n+\n package body Sem_Elim is\n \n    No_Elimination : Boolean;\n@@ -774,15 +776,11 @@ package body Sem_Elim is\n \n             Data.Entity_Scope (1) := Chars (Arg_Ent);\n \n-         elsif Nkind (Arg_Entity) = N_String_Literal then\n-            String_To_Name_Buffer (Strval (Arg_Entity));\n+         elsif Is_Config_Static_String (Arg_Entity) then\n             Data.Entity_Name := Name_Find;\n             Data.Entity_Node := Arg_Entity;\n \n          else\n-            Error_Msg_N\n-              (\"wrong form for Entity_Argument parameter of pragma%\",\n-               Arg_Unit_Name);\n             return;\n          end if;\n       else\n@@ -794,12 +792,33 @@ package body Sem_Elim is\n \n       if Present (Arg_Parameter_Types) then\n \n-         --  Case of one name, which looks like a parenthesized literal\n-         --  rather than an aggregate.\n+         --  Here for aggregate case\n \n-         if Nkind (Arg_Parameter_Types) = N_String_Literal\n-           and then Paren_Count (Arg_Parameter_Types) = 1\n-         then\n+         if Nkind (Arg_Parameter_Types) = N_Aggregate then\n+            Data.Parameter_Types :=\n+              new Names\n+                (1 .. List_Length (Expressions (Arg_Parameter_Types)));\n+\n+            Lit := First (Expressions (Arg_Parameter_Types));\n+            for J in Data.Parameter_Types'Range loop\n+               if Is_Config_Static_String (Lit) then\n+                  Data.Parameter_Types (J) := Name_Find;\n+                  Next (Lit);\n+               else\n+                  return;\n+               end if;\n+            end loop;\n+\n+         --  Otherwise we must have case of one name, which looks like a\n+         --  parenthesized literal rather than an aggregate.\n+\n+         elsif Paren_Count (Arg_Parameter_Types) /= 1 then\n+            Error_Msg_N\n+              (\"wrong form for argument of pragma Eliminate\",\n+               Arg_Parameter_Types);\n+            return;\n+\n+         elsif Is_Config_Static_String (Arg_Parameter_Types) then\n             String_To_Name_Buffer (Strval (Arg_Parameter_Types));\n \n             if Name_Len = 0 then\n@@ -812,53 +831,21 @@ package body Sem_Elim is\n                Data.Parameter_Types := new Names'(1 => Name_Find);\n             end if;\n \n-         --  Otherwise must be an aggregate\n-\n-         elsif Nkind (Arg_Parameter_Types) /= N_Aggregate\n-           or else Present (Component_Associations (Arg_Parameter_Types))\n-           or else No (Expressions (Arg_Parameter_Types))\n-         then\n-            Error_Msg_N\n-              (\"Parameter_Types for pragma% must be list of string literals\",\n-               Arg_Parameter_Types);\n-            return;\n-\n-         --  Here for aggregate case\n-\n          else\n-            Data.Parameter_Types :=\n-              new Names\n-                (1 .. List_Length (Expressions (Arg_Parameter_Types)));\n-\n-            Lit := First (Expressions (Arg_Parameter_Types));\n-            for J in Data.Parameter_Types'Range loop\n-               if Nkind (Lit) /= N_String_Literal then\n-                  Error_Msg_N\n-                    (\"parameter types for pragma% must be string literals\",\n-                     Lit);\n-                  return;\n-               end if;\n-\n-               String_To_Name_Buffer (Strval (Lit));\n-               Data.Parameter_Types (J) := Name_Find;\n-               Next (Lit);\n-            end loop;\n+            return;\n          end if;\n       end if;\n \n       --  Process Result_Types argument\n \n       if Present (Arg_Result_Type) then\n-\n-         if Nkind (Arg_Result_Type) /= N_String_Literal then\n-            Error_Msg_N\n-              (\"Result_Type argument for pragma% must be string literal\",\n-               Arg_Result_Type);\n+         if Is_Config_Static_String (Arg_Result_Type) then\n+            Data.Result_Type := Name_Find;\n+         else\n             return;\n          end if;\n \n-         String_To_Name_Buffer (Strval (Arg_Result_Type));\n-         Data.Result_Type := Name_Find;\n+      --  Here if no Result_Types argument\n \n       else\n          Data.Result_Type := No_Name;\n@@ -867,17 +854,11 @@ package body Sem_Elim is\n       --  Process Source_Location argument\n \n       if Present (Arg_Source_Location) then\n-\n-         if Nkind (Arg_Source_Location) /= N_String_Literal then\n-            Error_Msg_N\n-              (\"Source_Location argument for pragma% must be string literal\",\n-               Arg_Source_Location);\n+         if Is_Config_Static_String (Arg_Source_Location) then\n+            Data.Source_Location := Name_Find;\n+         else\n             return;\n          end if;\n-\n-         String_To_Name_Buffer (Strval (Arg_Source_Location));\n-         Data.Source_Location := Name_Find;\n-\n       else\n          Data.Source_Location := No_Name;\n       end if;"}, {"sha": "5ab5bdeed45e30689530b07a858b2ef985f4a8b8", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 60, "deletions": 2, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -9916,7 +9916,6 @@ package body Sem_Prag is\n \n          when Unknown_Pragma =>\n             raise Program_Error;\n-\n       end case;\n \n    exception\n@@ -9948,7 +9947,7 @@ package body Sem_Prag is\n         and then\n           (Is_Generic_Instance (Result)\n             or else Nkind (Parent (Declaration_Node (Result))) =\n-              N_Subprogram_Renaming_Declaration)\n+                    N_Subprogram_Renaming_Declaration)\n         and then Present (Alias (Result))\n       loop\n          Result := Alias (Result);\n@@ -9957,6 +9956,65 @@ package body Sem_Prag is\n       return Result;\n    end Get_Base_Subprogram;\n \n+   -----------------------------\n+   -- Is_Config_Static_String --\n+   -----------------------------\n+\n+   function Is_Config_Static_String (Arg : Node_Id) return Boolean is\n+\n+      function Add_Config_Static_String (Arg : Node_Id) return Boolean;\n+      --  This is an internal recursive function that is just like the\n+      --  outer function except that it adds the string to the name buffer\n+      --  rather than placing the string in the name buffer.\n+\n+      ------------------------------\n+      -- Add_Config_Static_String --\n+      ------------------------------\n+\n+      function Add_Config_Static_String (Arg : Node_Id) return Boolean is\n+         N : Node_Id;\n+         C : Char_Code;\n+\n+      begin\n+         N := Arg;\n+\n+         if Nkind (N) = N_Op_Concat then\n+            if Add_Config_Static_String (Left_Opnd (N)) then\n+               N := Right_Opnd (N);\n+            else\n+               return False;\n+            end if;\n+         end if;\n+\n+         if Nkind (N) /= N_String_Literal then\n+            Error_Msg_N (\"string literal expected for pragma argument\", N);\n+            return False;\n+\n+         else\n+            for J in 1 .. String_Length (Strval (N)) loop\n+               C := Get_String_Char (Strval (N), J);\n+\n+               if not In_Character_Range (C) then\n+                  Error_Msg\n+                    (\"string literal contains invalid wide character\",\n+                     Sloc (N) + 1 + Source_Ptr (J));\n+                  return False;\n+               end if;\n+\n+               Add_Char_To_Name_Buffer (Get_Character (C));\n+            end loop;\n+         end if;\n+\n+         return True;\n+      end Add_Config_Static_String;\n+\n+   --  Start of prorcessing for Is_Config_Static_String\n+\n+   begin\n+      Name_Len := 0;\n+      return Add_Config_Static_String (Arg);\n+   end Is_Config_Static_String;\n+\n    -----------------------------------------\n    -- Is_Non_Significant_Pragma_Reference --\n    -----------------------------------------"}, {"sha": "fe5cd93320a3bde1016f656ed52226b233a1a375", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -59,6 +59,17 @@ package Sem_Prag is\n    --  False is returned, then the argument is treated as an entity reference\n    --  to the operator.\n \n+   function Is_Config_Static_String (Arg : Node_Id) return Boolean;\n+   --  This is called for a configuration pragma that requires either a\n+   --  string literal or a concatenation of string literals. We cannot\n+   --  use normal static string processing because it is too early in\n+   --  the case of the pragma appearing in a configuration pragmas file.\n+   --  If Arg is of an appropriate form, then this call obtains the string\n+   --  (doing any necessary concatenations) and places it in Name_Buffer,\n+   --  setting Name_Len to its length, and then returns True. If it is\n+   --  not of the correct form, then an appropriate error message is\n+   --  posted, and False is returned.\n+\n    procedure Process_Compilation_Unit_Pragmas (N : Node_Id);\n    --  Called at the start of processing compilation unit N to deal with\n    --  any special issues regarding pragmas. In particular, we have to"}, {"sha": "263e701e11d3da0eb37d146336e8c8bd94276c52", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -136,9 +136,10 @@ package body Sem_Util is\n          Rtyp := Typ;\n       end if;\n \n-      if No (Compile_Time_Constraint_Error (N, Msg, Ent, Loc, Warn => Warn))\n-        or else not Rep\n-      then\n+      Discard_Node (\n+        Compile_Time_Constraint_Error (N, Msg, Ent, Loc, Warn => Warn));\n+\n+      if not Rep then\n          return;\n       end if;\n \n@@ -3309,9 +3310,21 @@ package body Sem_Util is\n                   P_Aliased := True;\n                end if;\n \n+            --  A discriminant check on a selected component may be\n+            --  expanded into a dereference when removing side-effects.\n+            --  Recover the original node and its type, which may be\n+            --  unconstrained.\n+\n+            elsif Nkind (P) = N_Explicit_Dereference\n+              and then not (Comes_From_Source (P))\n+            then\n+               P := Original_Node (P);\n+               Prefix_Type := Etype (P);\n+\n             else\n                --  Check for prefix being an aliased component ???\n                null;\n+\n             end if;\n \n             if Is_Access_Type (Prefix_Type)"}, {"sha": "5215fe15029ac4a4122ff9149469690a5356b734", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -672,6 +672,12 @@ package body Switch.M is\n             Ptr := Ptr + 1;\n             Verbose_Mode := True;\n \n+         --  Processing for x switch\n+\n+         when 'x' =>\n+            Ptr := Ptr + 1;\n+            External_Unit_Compilation_Allowed := True;\n+\n          --  Processing for z switch\n \n          when 'z' =>"}, {"sha": "4213e8a3a157ac67bfab49f771c67747d7d552fd", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -1348,7 +1348,6 @@ create_var_decl (tree var_name,\n \t       || (static_flag && ! init_const)))\n     assign_init = var_init, var_init = 0;\n \n-  DECL_COMMON   (var_decl) = !flag_no_common;\n   DECL_INITIAL  (var_decl) = var_init;\n   TREE_READONLY (var_decl) = const_flag;\n   DECL_EXTERNAL (var_decl) = extern_flag;\n@@ -1621,7 +1620,6 @@ process_attributes (tree decl, struct attrib *attr_list)\n \t    DECL_SECTION_NAME (decl)\n \t      = build_string (IDENTIFIER_LENGTH (attr_list->name),\n \t\t\t      IDENTIFIER_POINTER (attr_list->name));\n-\t    DECL_COMMON (decl) = 0;\n \t  }\n \telse\n \t  post_error (\"?section attributes are not supported for this target\","}, {"sha": "ca621b033b669dcbfd3961c450fee0e0fd9110b0", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5950a3ac274c2c85e38a959e1231c75c564c9c2f/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=5950a3ac274c2c85e38a959e1231c75c564c9c2f", "patch": "@@ -3839,6 +3839,14 @@ package VMS_Data is\n    --   will execute the elaboration routines of the package and its closure,\n    --   then the finalization routines.\n \n+   S_Make_Nonpro  : aliased constant S := \"/NON_PROJECT_UNIT_COMPILATION \" &\n+                                            \"-x\";\n+   --        /NON_PROJECT_UNIT_COMPILATION\n+   --\n+   --    Normally, when using project files, a unit that is not part of any\n+   --    project file, cannot be compile. These units may be compile, when\n+   --    needed, if this qualifier is specified.\n+\n    S_Make_Nostinc : aliased constant S := \"/NOSTD_INCLUDES \"               &\n                                             \"-nostdinc\";\n    --        /NOSTD_INCLUDES\n@@ -3988,6 +3996,7 @@ package VMS_Data is\n       S_Make_Minimal 'Access,\n       S_Make_Nolink  'Access,\n       S_Make_Nomain  'Access,\n+      S_Make_Nonpro  'Access,\n       S_Make_Nostinc 'Access,\n       S_Make_Nostlib 'Access,\n       S_Make_Object  'Access,"}]}