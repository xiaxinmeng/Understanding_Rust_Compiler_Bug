{"sha": "b688e030537ddec071ff506e1faf04ffab47f4dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY4OGUwMzA1MzdkZGVjMDcxZmY1MDZlMWZhZjA0ZmZhYjQ3ZjRkZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-01-30T11:36:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-01-30T11:36:09Z"}, "message": "[multiple changes]\n\n2012-01-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* a-strhas.ads: Document risk of collision attack.\n\n2012-01-30  Yannick Moy  <moy@adacore.com>\n\n\t* gnat_ugn.texi: Minor update wrt warning switches.\n\nFrom-SVN: r183706", "tree": {"sha": "3775dd48e4a8efbdbf1925a76b5de9be33437bb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3775dd48e4a8efbdbf1925a76b5de9be33437bb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b688e030537ddec071ff506e1faf04ffab47f4dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b688e030537ddec071ff506e1faf04ffab47f4dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b688e030537ddec071ff506e1faf04ffab47f4dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b688e030537ddec071ff506e1faf04ffab47f4dd/comments", "author": null, "committer": null, "parents": [{"sha": "1423761633d64bf0547ca2583fe4ef5cc67b4b83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1423761633d64bf0547ca2583fe4ef5cc67b4b83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1423761633d64bf0547ca2583fe4ef5cc67b4b83"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "74c0c95f06be6ba832fc0418fe60150ce850b18f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b688e030537ddec071ff506e1faf04ffab47f4dd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b688e030537ddec071ff506e1faf04ffab47f4dd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b688e030537ddec071ff506e1faf04ffab47f4dd", "patch": "@@ -1,3 +1,11 @@\n+2012-01-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* a-strhas.ads: Document risk of collision attack.\n+\n+2012-01-30  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat_ugn.texi: Minor update wrt warning switches.\n+\n 2012-01-30  Vincent Celier  <celier@adacore.com>\n \n \t* prj-nmsc.adb (Check_Interfaces): Report an error when a"}, {"sha": "58389c25340ef45dae810b7b5b64fc35a7e05712", "filename": "gcc/ada/a-strhas.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b688e030537ddec071ff506e1faf04ffab47f4dd/gcc%2Fada%2Fa-strhas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b688e030537ddec071ff506e1faf04ffab47f4dd/gcc%2Fada%2Fa-strhas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strhas.ads?ref=b688e030537ddec071ff506e1faf04ffab47f4dd", "patch": "@@ -18,5 +18,8 @@ pragma Compiler_Unit;\n with Ada.Containers;\n \n function Ada.Strings.Hash (Key : String) return Containers.Hash_Type;\n+--  Note: this hash function has predictable collisions and is subject\n+--  to equivalent substring attacks. It is not suitable to construct a hash\n+--  table keyed on possibly malicious user input.\n \n pragma Pure (Ada.Strings.Hash);"}, {"sha": "434ff69caed901af06cf68fbdf73676d7a1efe2c", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b688e030537ddec071ff506e1faf04ffab47f4dd/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b688e030537ddec071ff506e1faf04ffab47f4dd/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=b688e030537ddec071ff506e1faf04ffab47f4dd", "patch": "@@ -7,7 +7,7 @@\n @c                                                                            o\n @c                             G N A T _ U G N                                o\n @c                                                                            o\n-@c           Copyright (C) 1992-2011, Free Software Foundation, Inc.          o\n+@c           Copyright (C) 1992-2012, Free Software Foundation, Inc.          o\n @c                                                                            o\n @c oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n \n@@ -5092,10 +5092,12 @@ switch are\n @option{-gnatwd} (implicit dereferencing),\n @option{-gnatwh} (hiding),\n @option{-gnatw.h} (holes (gaps) in record layouts)\n+@option{-gnatw.i} (overlapping actuals),\n @option{-gnatwl} (elaboration warnings),\n @option{-gnatw.l} (inherited aspects),\n-@option{-gnatw.o} (warn on values set by out parameters ignored)\n-and @option{-gnatwt} (tracking of deleted conditional code).\n+@option{-gnatw.o} (warn on values set by out parameters ignored),\n+@option{-gnatwt} (tracking of deleted conditional code)\n+and @option{-gnatw.u} (unordered enumeration),\n All other optional warnings are turned on.\n \n @item -gnatwA\n@@ -5671,6 +5673,21 @@ useful for detecting deactivated code in certified applications.\n @cindex @option{-gnatwT} (@command{gcc})\n This switch suppresses warnings for tracking of deleted conditional code.\n \n+@item -gnatw.t\n+@emph{Activate warnings on suspicious contracts.}\n+@cindex @option{-gnatw.t} (@command{gcc})\n+This switch activates warnings on suspicious postconditions (whether a\n+pragma @code{Postcondition} or a @code{Post} aspect in Ada 2012). A\n+function postcondition is suspicious when it does not mention the result\n+of the function. A procedure postcondition is suspicious when it only\n+refers to the pre-state of the procedure, because in that case it should\n+rather be expressed as a precondition.\n+\n+@item -gnatw.T\n+@emph{Suppress warnings on suspicious contracts.}\n+@cindex @option{-gnatw.T} (@command{gcc})\n+This switch suppresses warnings on suspicious postconditions.\n+\n @item -gnatwu\n @emph{Activate warnings on unused entities.}\n @cindex @option{-gnatwu} (@command{gcc})"}]}