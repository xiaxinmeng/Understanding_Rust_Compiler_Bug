{"sha": "e8e9e1cda43a2b56618172896acb62103cd6bab8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThlOWUxY2RhNDNhMmI1NjYxODE3Mjg5NmFjYjYyMTAzY2Q2YmFiOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-11-26T09:04:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-11-26T09:04:44Z"}, "message": "re PR tree-optimization/59287 (points-to analysis confused by union accesses)\n\n2013-11-26  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/59287\n\t* tree-ssa-structalias.c (get_constraint_for_component_ref):\n\tRemove no longer necessary special-casing of union accesses.\n\n\t* gcc.dg/tree-ssa/alias-29.c: New testcase.\n\nFrom-SVN: r205380", "tree": {"sha": "875e2f1eb7d55bcfe34f90de766d02a788628b6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/875e2f1eb7d55bcfe34f90de766d02a788628b6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8e9e1cda43a2b56618172896acb62103cd6bab8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e9e1cda43a2b56618172896acb62103cd6bab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8e9e1cda43a2b56618172896acb62103cd6bab8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e9e1cda43a2b56618172896acb62103cd6bab8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65f5c720ad1356836df93ddd76b42051a7c96257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f5c720ad1356836df93ddd76b42051a7c96257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65f5c720ad1356836df93ddd76b42051a7c96257"}], "stats": {"total": 61, "additions": 38, "deletions": 23}, "files": [{"sha": "9a820b503028a44cb5d008faaad538f0dabcc893", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e9e1cda43a2b56618172896acb62103cd6bab8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e9e1cda43a2b56618172896acb62103cd6bab8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8e9e1cda43a2b56618172896acb62103cd6bab8", "patch": "@@ -1,3 +1,9 @@\n+2013-11-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/59287\n+\t* tree-ssa-structalias.c (get_constraint_for_component_ref):\n+\tRemove no longer necessary special-casing of union accesses.\n+\n 2013-11-26  Richard Biener  <rguenther@suse.de>\n \n \t* pretty-print.c (output_buffer::~output_buffer): Really"}, {"sha": "25d88733d2cbd2f9a2a8bacf21588591a7cb59bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e9e1cda43a2b56618172896acb62103cd6bab8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e9e1cda43a2b56618172896acb62103cd6bab8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e8e9e1cda43a2b56618172896acb62103cd6bab8", "patch": "@@ -1,3 +1,8 @@\n+2013-11-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/59287\n+\t* gcc.dg/tree-ssa/alias-29.c: New testcase.\n+\n 2013-11-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/54485"}, {"sha": "4d57ca8f8f0fdbe138172cb2574e62d005d43e4c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/alias-29.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e9e1cda43a2b56618172896acb62103cd6bab8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e9e1cda43a2b56618172896acb62103cd6bab8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Falias-29.c?ref=e8e9e1cda43a2b56618172896acb62103cd6bab8", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+\n+union X {\n+    int i;\n+    void *p;\n+};\n+void bar (int);\n+\n+int * __attribute__((noinline,noclone))\n+baz (int *p) { return p; }\n+\n+void foo (union X *x)\n+{\n+  struct Y { int i; } ystruct = {};\n+  ystruct.i = * baz (&ystruct.i);\n+  bar (x->i);\n+}\n+\n+/* DSE and then DCE should be able to remove all uses of ystruct.\n+   Formerly the union access for the parameter to bar let 'anything'\n+   escape which made the call to bar possibly use ystruct and thus\n+   prevent the store to ystruct.i from being eliminated.  The call to\n+   baz makes sure that ystruct has its address taken.  */\n+\n+/* { dg-final { scan-tree-dump-not \"ystruct\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "6482e68c04f69f5efa82b213e145566d4c4c1d5c", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e9e1cda43a2b56618172896acb62103cd6bab8/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e9e1cda43a2b56618172896acb62103cd6bab8/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=e8e9e1cda43a2b56618172896acb62103cd6bab8", "patch": "@@ -3163,29 +3163,6 @@ get_constraint_for_component_ref (tree t, vec<ce_s> *results,\n       return;\n     }\n \n-  /* Handle type-punning through unions.  If we are extracting a pointer\n-     from a union via a possibly type-punning access that pointer\n-     points to anything, similar to a conversion of an integer to\n-     a pointer.  */\n-  if (!lhs_p)\n-    {\n-      tree u;\n-      for (u = t;\n-\t   TREE_CODE (u) == COMPONENT_REF || TREE_CODE (u) == ARRAY_REF;\n-\t   u = TREE_OPERAND (u, 0))\n-\tif (TREE_CODE (u) == COMPONENT_REF\n-\t    && TREE_CODE (TREE_TYPE (TREE_OPERAND (u, 0))) == UNION_TYPE)\n-\t  {\n-\t    struct constraint_expr temp;\n-\n-\t    temp.offset = 0;\n-\t    temp.var = anything_id;\n-\t    temp.type = ADDRESSOF;\n-\t    results->safe_push (temp);\n-\t    return;\n-\t  }\n-    }\n-\n   t = get_ref_base_and_extent (t, &bitpos, &bitsize, &bitmaxsize);\n \n   /* Pretend to take the address of the base, we'll take care of"}]}