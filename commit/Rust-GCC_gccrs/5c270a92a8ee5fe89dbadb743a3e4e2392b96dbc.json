{"sha": "5c270a92a8ee5fe89dbadb743a3e4e2392b96dbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMyNzBhOTJhOGVlNWZlODlkYmFkYjc0M2EzZTRlMjM5MmI5NmRiYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-09-14T17:44:22Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-09-14T17:44:22Z"}, "message": "[SPARC] Simplify const_all_ones_operand\n\ngen_rtx_CONST_VECTOR ensures that there is a single instance of:\n\n       (const_vector:M [(const_int -1) ... (const_int -1)])\n\nfor each M, so pointer equality with CONSTM1_RTX is enough.  Also,\nHOST_BITS_PER_WIDE_INT == 32 is doubly dead: HOST_WIDE_INT is always\n64 bits now, and we always use const_int rather than const_double\nor const_wide_int for all-ones values (or any other value that\nfits in a signed HOST_WIDE_INT).\n\ngcc/\n\t* config/sparc/predicates.md (const_all_ones_operand): Use\n\tCONSTM1_RTX to simplify definition.\n\nFrom-SVN: r227757", "tree": {"sha": "14c1bca47bfdbe77bfb767875343b4d6eb74ecea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14c1bca47bfdbe77bfb767875343b4d6eb74ecea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c270a92a8ee5fe89dbadb743a3e4e2392b96dbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c270a92a8ee5fe89dbadb743a3e4e2392b96dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c270a92a8ee5fe89dbadb743a3e4e2392b96dbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c270a92a8ee5fe89dbadb743a3e4e2392b96dbc/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81fc32171dd4a6d07b451d5bced499e72eefa2b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fc32171dd4a6d07b451d5bced499e72eefa2b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81fc32171dd4a6d07b451d5bced499e72eefa2b5"}], "stats": {"total": 33, "additions": 8, "deletions": 25}, "files": [{"sha": "e305c1e3ed4497363c49cabd183400975cee44ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c270a92a8ee5fe89dbadb743a3e4e2392b96dbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c270a92a8ee5fe89dbadb743a3e4e2392b96dbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c270a92a8ee5fe89dbadb743a3e4e2392b96dbc", "patch": "@@ -1,3 +1,8 @@\n+2015-09-14  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/sparc/predicates.md (const_all_ones_operand): Use\n+\tCONSTM1_RTX to simplify definition.\n+\n 2015-09-14  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/67061"}, {"sha": "aa45f8ec66f446cd2bb9183a4137e0b9edd3c945", "filename": "gcc/config/sparc/predicates.md", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c270a92a8ee5fe89dbadb743a3e4e2392b96dbc/gcc%2Fconfig%2Fsparc%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c270a92a8ee5fe89dbadb743a3e4e2392b96dbc/gcc%2Fconfig%2Fsparc%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fpredicates.md?ref=5c270a92a8ee5fe89dbadb743a3e4e2392b96dbc", "patch": "@@ -27,31 +27,9 @@\n ;; Return true if the integer representation of OP is\n ;; all-ones.\n (define_predicate \"const_all_ones_operand\"\n-  (match_code \"const_int,const_double,const_vector\")\n-{\n-  if (GET_CODE (op) == CONST_INT && INTVAL (op) == -1)\n-    return true;\n-#if HOST_BITS_PER_WIDE_INT == 32\n-  if (GET_CODE (op) == CONST_DOUBLE\n-      && GET_MODE (op) == VOIDmode\n-      && CONST_DOUBLE_HIGH (op) == ~(HOST_WIDE_INT)0\n-      && CONST_DOUBLE_LOW (op) == ~(HOST_WIDE_INT)0)\n-    return true;\n-#endif\n-  if (GET_CODE (op) == CONST_VECTOR)\n-    {\n-      int i, num_elem = CONST_VECTOR_NUNITS (op);\n-\n-      for (i = 0; i < num_elem; i++)\n-        {\n-          rtx n = CONST_VECTOR_ELT (op, i);\n-          if (! const_all_ones_operand (n, mode))\n-            return false;\n-        }\n-      return true;\n-    }\n-  return false;\n-})\n+  (and (match_code \"const_int,const_double,const_vector\")\n+       (match_test \"INTEGRAL_MODE_P (GET_MODE (op))\")\n+       (match_test \"op == CONSTM1_RTX (GET_MODE (op))\")))\n \n ;; Return true if OP is the integer constant 4096.\n (define_predicate \"const_4096_operand\""}]}