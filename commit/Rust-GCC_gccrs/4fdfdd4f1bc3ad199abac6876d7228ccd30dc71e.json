{"sha": "4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZkZmRkNGYxYmMzYWQxOTlhYmFjNjg3NmQ3MjI4Y2NkMzBkYzcxZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-07-30T05:27:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-07-30T05:27:34Z"}, "message": "DR 1558 PR c++/67021\n\n\tDR 1558\n\tPR c++/67021\n\t* pt.c (tsubst_decl) [TYPE_DECL]: Clear TYPE_DEPENDENT_P_VALID.\n\nFrom-SVN: r226381", "tree": {"sha": "042490d26d3c5a7afc09fa537b2d222560d24596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/042490d26d3c5a7afc09fa537b2d222560d24596"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d590ab09c2931ab634379b63644855f2e789ded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d590ab09c2931ab634379b63644855f2e789ded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d590ab09c2931ab634379b63644855f2e789ded"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "7356dff5ba28a0dc14658a4c18df4043af0c7b0a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e", "patch": "@@ -1,3 +1,9 @@\n+2015-07-30  Jason Merrill  <jason@redhat.com>\n+\n+\tDR 1558\n+\tPR c++/67021\n+\t* pt.c (tsubst_decl) [TYPE_DECL]: Clear TYPE_DEPENDENT_P_VALID.\n+\n 2015-07-28  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* call.c (build_op_delete_call, convert_like_real, build_over_call):"}, {"sha": "6bf3d23f2a7a45d15b9ec9521104b14d93f39f92", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e", "patch": "@@ -11570,6 +11570,10 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \t  {\n \t    DECL_ORIGINAL_TYPE (r) = NULL_TREE;\n \t    set_underlying_type (r);\n+\t    if (TYPE_DECL_ALIAS_P (r) && type != error_mark_node)\n+\t      /* An alias template specialization can be dependent\n+\t\t even if its underlying type is not.  */\n+\t      TYPE_DEPENDENT_P_VALID (TREE_TYPE (r)) = false;\n \t  }\n \n \tlayout_decl (r, 0);"}, {"sha": "27340753901e62c1f8e7cf14ceb0c40f76eb4d12", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-52.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-52.C?ref=4fdfdd4f1bc3ad199abac6876d7228ccd30dc71e", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/67021\n+// { dg-do compile { target c++11 } }\n+\n+template<typename> struct Dummy;\n+template<> struct Dummy<int> {};\n+\n+template <class...>\n+struct all_same { static constexpr bool value = true; };\n+template <class T, class...Rest>\n+struct all_same<T, T, Rest...> : all_same<T, Rest...> {};\n+template <class T, class U, class...Rest>\n+struct all_same<T, U, Rest...> { static constexpr bool value = false; };\n+\n+template <class R>\n+using ValueType = int;\n+\n+template <class I>\n+constexpr bool A(I i) {\n+  return all_same<ValueType<I>, ValueType<decltype(i++)>>::value;\n+}\n+\n+int main() {\n+  static_assert(A(42), \"\");\n+}"}]}