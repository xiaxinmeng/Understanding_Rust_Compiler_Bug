{"sha": "c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ0NWMwMmE2NTgwMGNjOTRmMTdhOWJkYmIzNGJhODliYjA3MzBlNA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2014-11-10T16:30:22Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2014-11-10T16:30:22Z"}, "message": "Testsuite untyped assembly fixes for ptx.\n\n\t* lib/target-supports.exp\n\t(check_effective_target_untyped_assembly): New function.\n\t* gcc.c-torture/compile/20091215-1.c: Require untyped_assembly.\n\t* gcc.c-torture/compile/920917-1.c: Likewise.\n\t* gcc.c-torture/compile/930120-1.c: Likewise.\n\t* gcc.c-torture/compile/930411-1.c: Likewise.\n\t* gcc.c-torture/compile/930529-1.c: Likewise.\n\t* gcc.c-torture/compile/930623-1.c: Likewise.\n\t* gcc.c-torture/compile/950329-1.c: Likewise.\n\t* gcc.c-torture/compile/calls.c: Likewise.\n\t* gcc.c-torture/compile/pr37258.c: Likewise.\n\t* gcc.c-torture/compile/pr37327.c: Likewise.\n\t* gcc.c-torture/compile/pr38360.c: Likewise.\n\t* gcc.c-torture/compile/pr43635.c: Likewise.\n\t* gcc.c-torture/compile/pr47428.c: Likewise.\n\t* gcc.c-torture/compile/pr47967.c: Likewise.\n\t* gcc.c-torture/compile/pr49145.c: Likewise.\n\t* gcc.c-torture/compile/pr51694.c: Likewise.\n\t* gcc.c-torture/compile/pr53411.c: Likewise.\n\t* gcc.c-torture/execute/20001101.c: Likewise.\n\t* gcc.c-torture/execute/20051012-1.c: Likewise.\n\t* gcc.c-torture/execute/920501-1.c: Likewise.\n\t* gcc.c-torture/execute/921202-1.c: Likewise.\n\t* gcc.c-torture/execute/921208-2.c: Likewise.\n\t* gcc.c-torture/execute/call-trap-1.c: Likewise.\n\t* gcc.c-torture/compile/20010525-1.c: Likewise.\n\t* gcc.c-torture/compile/20021015-2.c: Likewise.\n\t* gcc.c-torture/compile/20031023-1.c: Likewise.\n\t* gcc.c-torture/compile/20031023-2.c: Likewise.\n\t* gcc.c-torture/compile/pr49206.c: Likewise.\n\t* gcc.c-torture/execute/pr47237.c: Likewise.\n\t* gcc.dg/torture/stackalign/builtin-apply-1.c: Likewise.\n\t* gcc.dg/torture/stackalign/builtin-apply-2.c: Likewise.\n\t* gcc.dg/torture/stackalign/builtin-apply-3.c: Likewise.\n\t* gcc.dg/torture/stackalign/builtin-apply-4.c: Likewise.\n\t* gcc.dg/torture/stackalign/builtin-return-1.c: Likewise.\n\t* gcc.dg/builtin-apply1.c: Likewise.\n\t* gcc.dg/builtin-apply2.c: Likewise.\n\t* gcc.dg/builtin-apply3.c: Likewise.\n\t* gcc.dg/builtin-apply4.c: Likewise.\n\t* gcc.dg/pr38338.c: Likewise.\n\t* gcc.dg/torture/pr41993.c: Likewise.\n\t* gcc.c-torture/compile/386.c: Likewise.\n\t* gcc.c-torture/compile/cmpsi386.c: Likewise.\n\t* gcc.c-torture/compile/consec.c: Likewise.\n\t* gcc.c-torture/compile/ex.c: Likewise.\n\t* gcc.c-torture/compile/pass.c: Likewise.\n\t* gcc.c-torture/compile/scal.c: Likewise.\n\t* gcc.c-torture/compile/uuarg.c: Likewise.\n\t* gcc.c-torture/compile/conv_tst.c: Likewise.\n\nFrom-SVN: r217297", "tree": {"sha": "febc260ea8ccba063548abf9d8395e4a49b136c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/febc260ea8ccba063548abf9d8395e4a49b136c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/comments", "author": null, "committer": null, "parents": [{"sha": "e2acc079ff125a869159be45371dc0a29b230e92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2acc079ff125a869159be45371dc0a29b230e92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2acc079ff125a869159be45371dc0a29b230e92"}], "stats": {"total": 126, "additions": 126, "deletions": 0}, "files": [{"sha": "8038759604b8dca4daa0c1d41d48864cad3e9ee0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,5 +1,56 @@\n 2014-11-10  Bernd Schmidt  <bernds@codesourcery.com>\n \n+\t* lib/target-supports.exp\n+\t(check_effective_target_untyped_assembly): New function.\n+\t* gcc.c-torture/compile/20091215-1.c: Require untyped_assembly.\n+\t* gcc.c-torture/compile/920917-1.c: Likewise.\n+\t* gcc.c-torture/compile/930120-1.c: Likewise.\n+\t* gcc.c-torture/compile/930411-1.c: Likewise.\n+\t* gcc.c-torture/compile/930529-1.c: Likewise.\n+\t* gcc.c-torture/compile/930623-1.c: Likewise.\n+\t* gcc.c-torture/compile/950329-1.c: Likewise.\n+\t* gcc.c-torture/compile/calls.c: Likewise.\n+\t* gcc.c-torture/compile/pr37258.c: Likewise.\n+\t* gcc.c-torture/compile/pr37327.c: Likewise.\n+\t* gcc.c-torture/compile/pr38360.c: Likewise.\n+\t* gcc.c-torture/compile/pr43635.c: Likewise.\n+\t* gcc.c-torture/compile/pr47428.c: Likewise.\n+\t* gcc.c-torture/compile/pr47967.c: Likewise.\n+\t* gcc.c-torture/compile/pr49145.c: Likewise.\n+\t* gcc.c-torture/compile/pr51694.c: Likewise.\n+\t* gcc.c-torture/compile/pr53411.c: Likewise.\n+\t* gcc.c-torture/execute/20001101.c: Likewise.\n+\t* gcc.c-torture/execute/20051012-1.c: Likewise.\n+\t* gcc.c-torture/execute/920501-1.c: Likewise.\n+\t* gcc.c-torture/execute/921202-1.c: Likewise.\n+\t* gcc.c-torture/execute/921208-2.c: Likewise.\n+\t* gcc.c-torture/execute/call-trap-1.c: Likewise.\n+\t* gcc.c-torture/compile/20010525-1.c: Likewise.\n+\t* gcc.c-torture/compile/20021015-2.c: Likewise.\n+\t* gcc.c-torture/compile/20031023-1.c: Likewise.\n+\t* gcc.c-torture/compile/20031023-2.c: Likewise.\n+\t* gcc.c-torture/compile/pr49206.c: Likewise.\n+\t* gcc.c-torture/execute/pr47237.c: Likewise.\n+\t* gcc.dg/torture/stackalign/builtin-apply-1.c: Likewise.\n+\t* gcc.dg/torture/stackalign/builtin-apply-2.c: Likewise.\n+\t* gcc.dg/torture/stackalign/builtin-apply-3.c: Likewise.\n+\t* gcc.dg/torture/stackalign/builtin-apply-4.c: Likewise.\n+\t* gcc.dg/torture/stackalign/builtin-return-1.c: Likewise.\n+\t* gcc.dg/builtin-apply1.c: Likewise.\n+\t* gcc.dg/builtin-apply2.c: Likewise.\n+\t* gcc.dg/builtin-apply3.c: Likewise.\n+\t* gcc.dg/builtin-apply4.c: Likewise.\n+\t* gcc.dg/pr38338.c: Likewise.\n+\t* gcc.dg/torture/pr41993.c: Likewise.\n+\t* gcc.c-torture/compile/386.c: Likewise.\n+\t* gcc.c-torture/compile/cmpsi386.c: Likewise.\n+\t* gcc.c-torture/compile/consec.c: Likewise.\n+\t* gcc.c-torture/compile/ex.c: Likewise.\n+\t* gcc.c-torture/compile/pass.c: Likewise.\n+\t* gcc.c-torture/compile/scal.c: Likewise.\n+\t* gcc.c-torture/compile/uuarg.c: Likewise.\n+\t* gcc.c-torture/compile/conv_tst.c: Likewise.\n+\n \t* lib/target-supports.exp (check_effective_target_alloca): New function.\n \t* gcc.c-torture/execute/20010209-1.c: Require alloca.\n \t* gcc.c-torture/execute/20020314-1.c: Likewise."}, {"sha": "c020c947826f07880d91ef9b07460d6f54197d5c", "filename": "gcc/testsuite/gcc.c-torture/compile/20010525-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010525-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010525-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010525-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n static int kind_varread(char *str)\n {\n   if (0 == memcmp(\"%_#\",               str, 3))  return 2;"}, {"sha": "bd1a6aa5305c8e1070716a9de56e390a972531a1", "filename": "gcc/testsuite/gcc.c-torture/compile/20021015-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021015-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021015-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021015-2.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,4 +1,5 @@\n /* PR target/8232.  */\n+/* { dg-require-effective-target untyped_assembly } */\n \n int f (char *p, char *q, int i)\n {"}, {"sha": "be837762e665e13650cc4a902798bb54d1dd2a6f", "filename": "gcc/testsuite/gcc.c-torture/compile/20031023-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,5 @@\n+/* Declaration of the frame size doesn't work on ptx.  */\n+/* { dg-require-effective-target untyped_assembly } */\n #ifndef ASIZE\n # define ASIZE 0x10000000000UL\n #endif"}, {"sha": "66d66458c85c999085cf41da17b45f1391ba41fb", "filename": "gcc/testsuite/gcc.c-torture/compile/20031023-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-2.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,2 +1,4 @@\n+/* Declaration of the frame size doesn't work on ptx.  */\n+/* { dg-require-effective-target untyped_assembly } */\n #define ASIZE 0x1000000000UL\n #include \"20031023-1.c\""}, {"sha": "5859634c34332e21b2717d2368356d68e2a710a7", "filename": "gcc/testsuite/gcc.c-torture/compile/20031023-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20031023-3.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,2 +1,4 @@\n+/* Declaration of the frame size doesn't work on ptx.  */\n+/* { dg-require-effective-target untyped_assembly } */\n #define ASIZE 0x100000000UL\n #include \"20031023-1.c\""}, {"sha": "1df5098fdb655397c4af888ca41c137c48dfe7fd", "filename": "gcc/testsuite/gcc.c-torture/compile/20091215-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20091215-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20091215-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20091215-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target untyped_assembly } */\n+\n void bar ();\n \n void"}, {"sha": "81fcea5f0e65689c79d7f8227083d10a546793ff", "filename": "gcc/testsuite/gcc.c-torture/compile/386.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F386.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n foo (a, p)\n      int *p;\n {"}, {"sha": "139f60e6f5eb417a1666ebcc9a1fe31bf66448c7", "filename": "gcc/testsuite/gcc.c-torture/compile/920917-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920917-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920917-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F920917-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,2 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n+\n inline f(x){switch(x){case 6:case 4:case 3:case 1:;}return x;}\n g(){f(sizeof(\"xxxxxx\"));}"}, {"sha": "a1d8df87c4b7a01d382d6ca3e7049e1fbb8bfed1", "filename": "gcc/testsuite/gcc.c-torture/compile/930120-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930120-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930120-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930120-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n union {\n   short I[2];\n   long int L;"}, {"sha": "6dd87eefc7cafc3423af9f3aeaf5abdc4e0ad530", "filename": "gcc/testsuite/gcc.c-torture/compile/930411-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930411-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930411-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930411-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target untyped_assembly } */\n+\n int heap;\n \n g(){}"}, {"sha": "8ad358dff5a942ba7fecd47f3cd468ed888f0f7d", "filename": "gcc/testsuite/gcc.c-torture/compile/930529-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930529-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930529-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930529-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target untyped_assembly } */\n+\n struct r\n {\n   int d1, d2;"}, {"sha": "022ad01804edb3770266f2ffb641a291c813873b", "filename": "gcc/testsuite/gcc.c-torture/compile/930623-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930623-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930623-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F930623-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target untyped_assembly } */\n+\n g (a, b) {}\n \n f (xx)"}, {"sha": "63ec6b2812098b24187d62e42c3716f5c07a891e", "filename": "gcc/testsuite/gcc.c-torture/compile/950329-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F950329-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F950329-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F950329-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n f ()\n {\n   int i;"}, {"sha": "265193d4d6fbab8f106ad499a7213272e3411edb", "filename": "gcc/testsuite/gcc.c-torture/compile/call.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcall.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"requires untyped assembly\" { ! untyped_assembly } { \"-O0\" } { \"\" } } */\n+\n int foo () {}\n \n main (a, b)"}, {"sha": "eeed4fdfdc1d125867335d2ba1b99de71c455ed8", "filename": "gcc/testsuite/gcc.c-torture/compile/calls-void.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls-void.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls-void.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls-void.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,4 +1,6 @@\n /* { dg-require-effective-target ptr32plus } */\n+/* { dg-require-effective-target untyped_assembly } */\n+\n typedef void  (*T)(void);\n f1 ()\n {"}, {"sha": "ca07122a786af7ee1575895ef7105dea80a06bd3", "filename": "gcc/testsuite/gcc.c-torture/compile/calls.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcalls.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,4 +1,6 @@\n /* { dg-require-effective-target ptr32plus } */\n+/* { dg-require-effective-target untyped_assembly } */\n+\n typedef void  *(*T)(void);\n f1 ()\n {"}, {"sha": "c98b8626a872f63728aac0eeca85552159a78bec", "filename": "gcc/testsuite/gcc.c-torture/compile/cmpsi386.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcmpsi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcmpsi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fcmpsi386.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n foo (a, p)\n      register int a;\n      int *p;"}, {"sha": "01fa25b009b8bc1761fb9d74214c89635437cc46", "filename": "gcc/testsuite/gcc.c-torture/compile/consec.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fconsec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fconsec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fconsec.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n int glob;\n \n conseq (a, b, c, d)"}, {"sha": "28be666169081e1660d41bb2855a0bb6560f2c39", "filename": "gcc/testsuite/gcc.c-torture/compile/conv_tst.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fconv_tst.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fconv_tst.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fconv_tst.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target untyped_assembly } */\n+\n #define ID_1 2400000000.0\n #define ID_2 1.7\n #define ID_3 -1.7"}, {"sha": "3753815837fc781bea588d809d7252bdc819f5b1", "filename": "gcc/testsuite/gcc.c-torture/compile/ex.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fex.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-require-effective-target untyped_assembly } */\n+\n foo (a, b)\n {\n   if ((a & (1 << b)) == 0)"}, {"sha": "4e028393feb6b0c28e11d674362c58c519052d79", "filename": "gcc/testsuite/gcc.c-torture/compile/pass.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpass.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n int\n foo (a, b, c)\n {"}, {"sha": "286f2fc4427ae5702417acbdf5a063dedb508742", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37258.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37258.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37258.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37258.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n typedef signed char int8_t;\n typedef short int int16_t;\n typedef int int32_t;"}, {"sha": "79946b7522de952cda9c427f1dab4bc56f77613f", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37327.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37327.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37327.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37327.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n typedef signed char int8_t;\n typedef short int int16_t;\n typedef int int32_t;"}, {"sha": "4c67b0085ca2331d74b90c84c494d4e4d67cb6e7", "filename": "gcc/testsuite/gcc.c-torture/compile/pr38360.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr38360.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr38360.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr38360.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,4 +1,5 @@\n /* PR middle-end/38360 */\n+/* { dg-require-effective-target untyped_assembly } */\n \n int\n main ()"}, {"sha": "df826b6f4c0f12964e1500a8f0df10f46ca2fc4f", "filename": "gcc/testsuite/gcc.c-torture/compile/pr43635.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43635.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43635.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43635.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n extern void d (void);\n \n void (*foo (void)) (float)"}, {"sha": "3cd7bfdf56e27ac24cf121ff7d2642c560c3055c", "filename": "gcc/testsuite/gcc.c-torture/compile/pr47428.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47428.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47428.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47428.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/47428 */\n+/* { dg-require-effective-target untyped_assembly } */\n \n struct S\n {"}, {"sha": "fe1f9c2ef7539c9f5f68575199cac1d5f83598de", "filename": "gcc/testsuite/gcc.c-torture/compile/pr47967.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47967.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47967.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr47967.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,4 +1,5 @@\n /* PR tree-optimization/47967 */\n+/* { dg-require-effective-target untyped_assembly } */\n \n extern void abort (void);\n static void bar ();"}, {"sha": "b44e1977031f6be2cd3e8b2ab0ce902f06f56587", "filename": "gcc/testsuite/gcc.c-torture/compile/pr49145.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49145.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49145.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49145.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n static int\n func1 (int a, int b)\n {"}, {"sha": "7596f6a3106bf5a9bdb355073c74cdf99b0d8f10", "filename": "gcc/testsuite/gcc.c-torture/compile/pr49206.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49206.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49206.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr49206.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n struct S1\n {\n   short f0;"}, {"sha": "f5c1a40df861176eac40b03a6d0aff96a033f40d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr51694.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr51694.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr51694.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr51694.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n void\n foo (x, fn)\n   void (*fn) ();"}, {"sha": "5a41502fb2bd9ddb257b1bb968197fb2b8863099", "filename": "gcc/testsuite/gcc.c-torture/compile/pr53411.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr53411.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr53411.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr53411.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,4 +1,5 @@\n /* PR middle-end/53411 */\n+/* { dg-require-effective-target untyped_assembly } */\n \n int a, b, c, d, e, f, g, h;\n void fn1 (void);"}, {"sha": "a2fb3e812257d43117d6a73c6695fdf1781bcd0d", "filename": "gcc/testsuite/gcc.c-torture/compile/scal.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fscal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fscal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fscal.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n int g1, g2;\n \n void"}, {"sha": "930dd8ab5f61a148e743427b448db303f9b21470", "filename": "gcc/testsuite/gcc.c-torture/compile/uuarg.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fuuarg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fuuarg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fuuarg.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n foo (a, b, c, d, e, f, g, h, i)\n {\n   return foo () + i;"}, {"sha": "475211e25f9710dc34a8007cd426d1dee74850ec", "filename": "gcc/testsuite/gcc.c-torture/execute/20001101.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001101.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001101.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20001101.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n extern void abort(void);\n \t\t\t \n typedef struct"}, {"sha": "d43aeda82855816b09f61d4af3ae898a0704585c", "filename": "gcc/testsuite/gcc.c-torture/execute/20051012-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20051012-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20051012-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20051012-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n extern void abort (void);\n \n struct type "}, {"sha": "a057943ce78d5eea2e8e3db47257e51f8505056c", "filename": "gcc/testsuite/gcc.c-torture/execute/920501-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F920501-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n int s[2];\n x(){if(!s[0]){s[1+s[1]]=s[1];return 1;}}\n main(){s[0]=s[1]=0;if(x(0)!=1)abort();exit(0);}"}, {"sha": "935975dd3ad0743a95e81fed16877fcff1f7cab5", "filename": "gcc/testsuite/gcc.c-torture/execute/921202-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921202-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921202-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921202-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n #ifndef STACK_SIZE\n #define\tVLEN\t2055\n #else"}, {"sha": "f01b5728ee524bb5114a1ac5d5078bcf0e1b404b", "filename": "gcc/testsuite/gcc.c-torture/execute/921208-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921208-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921208-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921208-2.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-require-effective-target untyped_assembly } */\n #define STACK_REQUIREMENT (100000 * 4 + 1024)\n #if defined (STACK_SIZE) && STACK_SIZE < STACK_REQUIREMENT\n main () { exit (0); }"}, {"sha": "c1aa90d430e4b23da3bfd0ca70a9b68a0a824e32", "filename": "gcc/testsuite/gcc.c-torture/execute/call-trap-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcall-trap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcall-trap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcall-trap-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -2,6 +2,7 @@\n    type does not appear until after the function designator and\n    arguments have been evaluated.  PR 38483.  */\n /* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-require-effective-target untyped_assembly } */\n \n extern void exit (int);\n extern void abort (void);"}, {"sha": "08025313389f1182ace4aaced0f531d72b0fcad9", "filename": "gcc/testsuite/gcc.c-torture/execute/pr47237.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47237.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47237.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47237.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,4 +1,5 @@\n /* { dg-xfail-if \"can cause stack underflow\" { nios2-*-* } \"*\" \"\" } */\n+/* { dg-require-effective-target untyped_assembly } */\n #define INTEGER_ARG  5\n \n extern void abort(void);"}, {"sha": "7079ce3a6897400d76e73063a0d26e025b1f9e09", "filename": "gcc/testsuite/gcc.dg/builtin-apply1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,5 +1,6 @@\n /* PR 11184 */\n /* Origin:  Dara Hazeghi <dhazeghi@yahoo.com> */\n+/* { dg-require-effective-target untyped_assembly } */\n \n void *\n objc_msg_sendv (char * arg_frame, void (*foo)())"}, {"sha": "d666fcca23179c57d335f2ff81cee6a590ddca0a", "filename": "gcc/testsuite/gcc.dg/builtin-apply2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply2.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do run } */\n+/* { dg-require-effective-target untyped_assembly } */\n /* { dg-skip-if \"Variadic funcs have all args on stack. Normal funcs have args in registers.\" { \"aarch64*-*-* avr-*-* nds32*-*-*\" } { \"*\" } { \"\" } } */\n /* { dg-skip-if \"Variadic funcs use Base AAPCS.  Normal funcs use VFP variant.\" { arm*-*-* && arm_hf_eabi } { \"*\" } { \"\" } } */\n "}, {"sha": "37c5209b91cb296430e4ed17c5e122cb987fd77f", "filename": "gcc/testsuite/gcc.dg/builtin-apply3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply3.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -5,6 +5,7 @@\n    to the right location by __builtin_apply after the direct call.  */\n \n /* { dg-do run } */\n+/* { dg-require-effective-target untyped_assembly } */\n \n \n #define INTEGER_ARG  5"}, {"sha": "cca9187a1d36620b34d1cf8b2228db20f6bfbfb9", "filename": "gcc/testsuite/gcc.dg/builtin-apply4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -2,6 +2,7 @@\n /* { dg-options \"-O2 -Wmissing-noreturn -fgnu89-inline\" } */\n /* { dg-additional-options \"-mno-mmx\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-do run } */\n+/* { dg-require-effective-target untyped_assembly } */\n \n extern void abort (void);\n "}, {"sha": "5dfd44349262e3feff12614f1788106edbe98acb", "filename": "gcc/testsuite/gcc.dg/pr38338.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38338.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38338.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr38338.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,6 +1,7 @@\n /* PR middle-end/38338 */\n /* { dg-options \"-O0\" } */\n /* { dg-options \"-O0 -fPIC\" { target fpic } } */\n+/* { dg-require-effective-target untyped_assembly } */\n \n typedef void (*fnp) (void);\n "}, {"sha": "05ba4b1997f17e3da7a91653635649d43dc9701f", "filename": "gcc/testsuite/gcc.dg/torture/pr41993.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr41993.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr41993.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr41993.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx -mvzeroupper\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-require-effective-target untyped_assembly } */\n \n short retframe_short (void *rframe)\n {"}, {"sha": "7079ce3a6897400d76e73063a0d26e025b1f9e09", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/builtin-apply-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,5 +1,6 @@\n /* PR 11184 */\n /* Origin:  Dara Hazeghi <dhazeghi@yahoo.com> */\n+/* { dg-require-effective-target untyped_assembly } */\n \n void *\n objc_msg_sendv (char * arg_frame, void (*foo)())"}, {"sha": "ffd865b3717af27906dd9175254755783d64667f", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/builtin-apply-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-2.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -11,6 +11,7 @@\n         do.  */\n /* { dg-skip-if \"Variadic funcs use different argument passing from normal funcs\" { arm_hf_eabi || { avr-*-* } } \"*\" \"\" } */\n /* { dg-skip-if \"Variadic funcs have all args on stack. Normal funcs have args in registers.\" { nds32*-*-* } \"*\" \"\" } */\n+/* { dg-require-effective-target untyped_assembly } */\n    \n \n #define INTEGER_ARG  5"}, {"sha": "37c5209b91cb296430e4ed17c5e122cb987fd77f", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/builtin-apply-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-3.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -5,6 +5,7 @@\n    to the right location by __builtin_apply after the direct call.  */\n \n /* { dg-do run } */\n+/* { dg-require-effective-target untyped_assembly } */\n \n \n #define INTEGER_ARG  5"}, {"sha": "78b10322edc49662c899c010d5c76aa708162de3", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/builtin-apply-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-apply-4.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,6 +1,7 @@\n /* PR tree-optimization/20076 */\n /* { dg-do run } */\n /* { dg-additional-options \"-fgnu89-inline\" } */\n+/* { dg-require-effective-target untyped_assembly } */\n \n extern void abort (void);\n "}, {"sha": "af017532aeb3878ef7ad717a2743661a87a56b7d", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/builtin-return-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-return-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-return-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fbuiltin-return-1.c?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -1,6 +1,7 @@\n /* PR middle-end/11151 */\n /* Originator: Andrew Church <gcczilla@achurch.org> */\n /* { dg-do run } */\n+/* { dg-require-effective-target untyped_assembly } */\n \n /* This used to fail on SPARC because the (undefined) return\n    value of 'bar' was overwriting that of 'foo'.  */"}, {"sha": "a395f5ff8c91bd78dbc1224a08e461447dd00dd3", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c445c02a65800cc94f17a9bdbb34ba89bb0730e4/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=c445c02a65800cc94f17a9bdbb34ba89bb0730e4", "patch": "@@ -599,6 +599,17 @@ proc add_options_for_tls { flags } {\n     return $flags\n }\n \n+# Return 1 if the assembler does not verify function types against\n+# calls, 0 otherwise.  Such verification will typically show up problems\n+# with K&R C function declarations.\n+\n+proc check_effective_target_untyped_assembly {} {\n+    if { [istarget nvptx-*-*] } {\n+\treturn 0\n+    }\n+    return 1\n+}\n+\n # Return 1 if alloca is supported, 0 otherwise.\n \n proc check_effective_target_alloca {} {"}]}