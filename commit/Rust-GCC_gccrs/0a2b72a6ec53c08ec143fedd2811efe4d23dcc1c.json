{"sha": "0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEyYjcyYTZlYzUzYzA4ZWMxNDNmZWRkMjgxMWVmZTRkMjNkY2MxYw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-08-05T09:12:12Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-08-05T09:12:12Z"}, "message": "linux.h, [...]: Remove definitions conditioned on USE_GNULIBC_1 or conditioned out...\n\n\t* config/linux.h, config/i386/linux.h, config/sparc/linux.h:\n\tRemove definitions conditioned on USE_GNULIBC_1 or conditioned\n\tout, and associated obsolete comments.\n\nFrom-SVN: r85600", "tree": {"sha": "f30553aaa3a9b73bc616afdd880e8b2bb92cd57e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f30553aaa3a9b73bc616afdd880e8b2bb92cd57e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca7a3bd7d5c371af20775d28ec20bf57115b20e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca7a3bd7d5c371af20775d28ec20bf57115b20e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca7a3bd7d5c371af20775d28ec20bf57115b20e5"}], "stats": {"total": 112, "additions": 15, "deletions": 97}, "files": [{"sha": "32ef013b52fe48cb6a1c365eaf18e7a8825b6226", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c", "patch": "@@ -1,3 +1,9 @@\n+2004-08-05  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* config/linux.h, config/i386/linux.h, config/sparc/linux.h:\n+\tRemove definitions conditioned on USE_GNULIBC_1 or conditioned\n+\tout, and associated obsolete comments.\n+\n 2004-08-05  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* tree.h (force_fit_type): Return a tree, take three flags."}, {"sha": "08b859ac310d335ed86d5bb4fc869f367f996826", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 5, "deletions": 31, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c", "patch": "@@ -83,11 +83,7 @@ Boston, MA 02111-1307, USA.  */\n   while (0)\n \n #undef CPP_SPEC\n-#ifdef USE_GNULIBC_1\n-#define CPP_SPEC \"%{posix:-D_POSIX_SOURCE}\"\n-#else\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n-#endif\n \n #undef CC1_SPEC\n #define CC1_SPEC \"%(cc1_cpu) %{profile:-p}\"\n@@ -109,11 +105,7 @@ Boston, MA 02111-1307, USA.  */\n /* If ELF is the default format, we should not use /lib/elf.  */\n \n #define LINK_EMULATION \"elf_i386\"\n-#ifdef USE_GNULIBC_1\n-# define DYNAMIC_LINKER \"/lib/ld-linux.so.1\"\n-#else\n-# define DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n-#endif\n+#define DYNAMIC_LINKER \"/lib/ld-linux.so.2\"\n \n #undef  SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS \\\n@@ -153,24 +145,6 @@ Boston, MA 02111-1307, USA.  */\n   } while (0)\n #endif\n \n-#if defined(__PIC__) && defined (USE_GNULIBC_1)\n-/* This is a kludge. The i386 GNU/Linux dynamic linker needs ___brk_addr,\n-   __environ and atexit.  We have to make sure they are in the .dynsym\n-   section.  We do this by forcing the assembler to create undefined \n-   references to these symbols in the object file.  */\n-#undef CRT_CALL_STATIC_FUNCTION\n-#define CRT_CALL_STATIC_FUNCTION(SECTION_OP, FUNC)\t\\\n-   asm (SECTION_OP \"\\n\\t\"\t\t\t\t\\\n-\t\"call \" USER_LABEL_PREFIX #FUNC \"\\n\"\t\t\\\n-\tTEXT_SECTION_ASM_OP \"\\n\\t\"\t\t\t\\\n-\t\".extern ___brk_addr\\n\\t\"\t\t\t\\\n-\t\".type ___brk_addr,@object\\n\\t\"\t\t\t\\\n-\t\".extern __environ\\n\\t\"\t\t\t\t\\\n-\t\".type __environ,@object\\n\\t\"\t\t\t\\\n-\t\".extern atexit\\n\\t\"\t\t\t\t\\\n-\t\".type atexit,@function\");\n-#endif\n-\n /* Handle special EH pointer encodings.  Absolute, pc-relative, and\n    indirect are handled automatically.  */\n #define ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX(FILE, ENCODING, SIZE, ADDR, DONE) \\\n@@ -211,11 +185,11 @@ Boston, MA 02111-1307, USA.  */\n    state data appropriately.  See unwind-dw2.c for the structs.  */\n \n #ifdef IN_LIBGCC2\n-/* There's no sys/ucontext.h for some (all?) libc1, so no\n+/* There's no sys/ucontext.h for glibc 2.0, so no\n    signal-turned-exceptions for them.  There's also no configure-run for\n    the target, so we can't check on (e.g.) HAVE_SYS_UCONTEXT_H.  Using the\n-   target libc1 macro should be enough.  */\n-#if !(defined (USE_GNULIBC_1) || (__GLIBC__ == 2 && __GLIBC_MINOR__ == 0))\n+   target libc version macro should be enough.  */\n+#if !(__GLIBC__ == 2 && __GLIBC_MINOR__ == 0)\n #include <signal.h>\n #include <sys/ucontext.h>\n \n@@ -274,5 +248,5 @@ Boston, MA 02111-1307, USA.  */\n     (FS)->retaddr_column = 8;\t\t\t\t\t\t\\\n     goto SUCCESS;\t\t\t\t\t\t\t\\\n   } while (0)\n-#endif /* not USE_GNULIBC_1 */\n+#endif /* not glibc 2.0 */\n #endif /* IN_LIBGCC2 */"}, {"sha": "5b6ff5471d27ae06b0d1f0b3ac98d5b328380321", "filename": "gcc/config/linux.h", "status": "modified", "additions": 2, "deletions": 27, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c", "patch": "@@ -39,14 +39,7 @@ Boston, MA 02111-1307, USA.  */\n    object constructed before entering `main'.  */\n    \n #undef\tSTARTFILE_SPEC\n-#ifdef USE_GNULIBC_1\n-#define STARTFILE_SPEC \\\n-  \"%{!shared: \\\n-     %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} \\\n-\t\t       %{!p:%{profile:gcrt1.o%s} \\\n-\t\t\t %{!profile:crt1.o%s}}}} \\\n-   crti.o%s %{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n-#elif defined HAVE_LD_PIE\n+#if defined HAVE_LD_PIE\n #define STARTFILE_SPEC \\\n   \"%{!shared: %{pg|p|profile:gcrt1.o%s;pie:Scrt1.o%s;:crt1.o%s}} \\\n    crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n@@ -76,26 +69,10 @@ Boston, MA 02111-1307, USA.  */\n #define CPLUSPLUS_CPP_SPEC \"-D_GNU_SOURCE %(cpp)\"\n \n #undef\tLIB_SPEC\n-/* We no longer link with libc_p.a or libg.a by default. If you\n-   want to profile or debug the GNU/Linux C library, please add\n-   -profile or -ggdb to LDFLAGS at the link time, respectively.  */\n-#if 1\n-#ifdef USE_GNULIBC_1\n-#define LIB_SPEC \\\n-  \"%{!shared: %{p:-lgmon} %{pg:-lgmon} %{profile:-lgmon -lc_p} \\\n-     %{!profile:%{!ggdb:-lc} %{ggdb:-lg}}}\"\n-#else\n #define LIB_SPEC \\\n   \"%{pthread:-lpthread} \\\n    %{shared:-lc} \\\n    %{!shared:%{mieee-fp:-lieee} %{profile:-lc_p}%{!profile:-lc}}\"\n-#endif\n-#else\n-#define LIB_SPEC \\\n-  \"%{!shared: \\\n-     %{p:-lgmon -lc_p} %{pg:-lgmon -lc_p} \\\n-       %{!p:%{!pg:%{!g*:-lc} %{g*:-lg}}}}\"\n-#endif\n \n #define LINUX_TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n     do {\t\t\t\t\t\t\t\\\n@@ -107,7 +84,7 @@ Boston, MA 02111-1307, USA.  */\n \tbuiltin_assert (\"system=posix\");\t\t\t\\\n     } while (0)\n \n-#if !defined(USE_GNULIBC_1) && defined(HAVE_LD_EH_FRAME_HDR)\n+#if defined(HAVE_LD_EH_FRAME_HDR)\n #define LINK_EH_SPEC \"%{!static:--eh-frame-hdr} \"\n #endif\n \n@@ -124,8 +101,6 @@ Boston, MA 02111-1307, USA.  */\n \n /* Determine whether the the entire c99 runtime\n    is present in the runtime library.  */\n-#ifndef USE_GNULIBC_1\n #define TARGET_C99_FUNCTIONS 1\n-#endif\n \n #define TARGET_HAS_F_SETLKW"}, {"sha": "2ee6ad90513a8620560f1c0d4273524e877fc9ca", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 2, "deletions": 39, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c", "patch": "@@ -44,12 +44,7 @@ Boston, MA 02111-1307, USA.  */\n    object constructed before entering `main'.  */\n    \n #undef  STARTFILE_SPEC\n-#ifdef USE_GNULIBC_1\n-#define STARTFILE_SPEC \\\n-  \"%{!shared: \\\n-     %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} %{!p:crt1.o%s}}}\\\n-   crti.o%s %{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n-#elif defined HAVE_LD_PIE\n+#if defined HAVE_LD_PIE\n #define STARTFILE_SPEC \\\n   \"%{!shared: %{pg|p:gcrt1.o%s;pie:Scrt1.o%s;:crt1.o%s}}\\\n    crti.o%s %{static:crtbeginT.o%s;shared|pie:crtbeginS.o%s;:crtbegin.o%s}\"\n@@ -104,37 +99,15 @@ Boston, MA 02111-1307, USA.  */\n #define WCHAR_TYPE_SIZE 32\n \n #undef CPP_SUBTARGET_SPEC\n-#ifdef USE_GNULIBC_1\n-#define CPP_SUBTARGET_SPEC \\\n-\"%{fPIC|fPIE|fpic|fpie:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE} \\\n-%{mlong-double-128:-D__LONG_DOUBLE_128__}\"\n-#else\n #define CPP_SUBTARGET_SPEC \\\n \"%{fPIC|fPIE|fpic|fpie:-D__PIC__ -D__pic__} %{posix:-D_POSIX_SOURCE} \\\n %{pthread:-D_REENTRANT} %{mlong-double-128:-D__LONG_DOUBLE_128__}\"\n-#endif\n \n #undef LIB_SPEC\n-/* We no longer link with libc_p.a or libg.a by default. If you\n-   want to profile or debug the GNU/Linux C library, please add\n-   -lc_p or -ggdb to LDFLAGS at the link time, respectively.  */\n-#if 1\n-#ifdef USE_GNULIBC_1\n-#define LIB_SPEC \\\n-  \"%{!shared: %{p:-lgmon} %{pg:-lgmon} %{profile:-lgmon -lc_p} \\\n-     %{!profile:%{!ggdb:-lc} %{ggdb:-lg}}}\"\n-#else\n #define LIB_SPEC \\\n   \"%{pthread:-lpthread} \\\n    %{shared:-lc} \\\n    %{!shared:%{mieee-fp:-lieee} %{profile:-lc_p}%{!profile:-lc}}\"\n-#endif\n-#else\n-#define LIB_SPEC \\\n-  \"%{!shared: \\\n-     %{mieee-fp:-lieee} %{p:-lgmon -lc_p} %{pg:-lgmon -lc_p} \\\n-       %{!p:%{!pg:%{!g*:-lc} %{g*:-lg}}}}\"\n-#endif\n \n /* Provide a LINK_SPEC appropriate for GNU/Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n@@ -153,15 +126,6 @@ Boston, MA 02111-1307, USA.  */\n /* If ELF is the default format, we should not use /lib/elf.  */\n \n #undef  LINK_SPEC\n-#ifdef USE_GNULIBC_1\n-#define LINK_SPEC \"-m elf32_sparc -Y P,/usr/lib %{shared:-shared} \\\n-  %{!shared: \\\n-    %{!ibcs: \\\n-      %{!static: \\\n-        %{rdynamic:-export-dynamic} \\\n-        %{!dynamic-linker:-dynamic-linker /lib/ld-linux.so.1}} \\\n-        %{static:-static}}}\"\n-#else\n #define LINK_SPEC \"-m elf32_sparc -Y P,/usr/lib %{shared:-shared} \\\n   %{!mno-relax:%{!r:-relax}} \\\n   %{!shared: \\\n@@ -170,7 +134,6 @@ Boston, MA 02111-1307, USA.  */\n         %{rdynamic:-export-dynamic} \\\n         %{!dynamic-linker:-dynamic-linker /lib/ld-linux.so.2}} \\\n         %{static:-static}}}\"\n-#endif\n \n /* The sun bundled assembler doesn't accept -Yd, (and neither does gas).\n    It's safe to pass -s always, even if -g is not used.  */\n@@ -230,7 +193,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef DITF_CONVERSION_LIBFUNCS\n #define DITF_CONVERSION_LIBFUNCS 1\n \n-#if !defined(USE_GNULIBC_1) && defined(HAVE_LD_EH_FRAME_HDR)\n+#if defined(HAVE_LD_EH_FRAME_HDR)\n #define LINK_EH_SPEC \"%{!static:--eh-frame-hdr} \"\n #endif\n \f"}]}