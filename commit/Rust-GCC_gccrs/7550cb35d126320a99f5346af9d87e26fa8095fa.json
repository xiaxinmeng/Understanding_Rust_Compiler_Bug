{"sha": "7550cb35d126320a99f5346af9d87e26fa8095fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU1MGNiMzVkMTI2MzIwYTk5ZjUzNDZhZjlkODdlMjZmYTgwOTVmYQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2010-12-08T01:26:44Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2010-12-08T01:26:44Z"}, "message": "re PR middle-end/46671 (ICE in default_no_named_section, at varasm .c:5994)\n\n\tPR middle-end/46671\n\tPR target/46685\n\t* config/pa/pa.c (pa_function_section): New function.\n\t(TARGET_ASM_FUNCTION_SECTION): Define.\n\nFrom-SVN: r167581", "tree": {"sha": "058cea6ddc6df8a98f0e0ee844557bcd928fedd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/058cea6ddc6df8a98f0e0ee844557bcd928fedd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7550cb35d126320a99f5346af9d87e26fa8095fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7550cb35d126320a99f5346af9d87e26fa8095fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7550cb35d126320a99f5346af9d87e26fa8095fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7550cb35d126320a99f5346af9d87e26fa8095fa/comments", "author": null, "committer": null, "parents": [{"sha": "f38716953daca9ee3fc954384678241e617a18bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f38716953daca9ee3fc954384678241e617a18bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f38716953daca9ee3fc954384678241e617a18bf"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "b1b5c12c4ac1166cc157968a96b2f7f2b3a887b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7550cb35d126320a99f5346af9d87e26fa8095fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7550cb35d126320a99f5346af9d87e26fa8095fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7550cb35d126320a99f5346af9d87e26fa8095fa", "patch": "@@ -1,3 +1,10 @@\n+2010-12-07  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR middle-end/46671\n+\tPR target/46685\n+\t* config/pa/pa.c (pa_function_section): New function.\n+\t(TARGET_ASM_FUNCTION_SECTION): Define.\n+\n 2010-12-07  Ian Lance Taylor  <iant@google.com>\n \t    Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n "}, {"sha": "ab54e4b4d1397a53a7b475579f6fb8b2a47693ef", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7550cb35d126320a99f5346af9d87e26fa8095fa/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7550cb35d126320a99f5346af9d87e26fa8095fa/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=7550cb35d126320a99f5346af9d87e26fa8095fa", "patch": "@@ -181,6 +181,7 @@ static bool pa_print_operand_punct_valid_p (unsigned char);\n static rtx pa_internal_arg_pointer (void);\n static bool pa_can_eliminate (const int, const int);\n static void pa_conditional_register_usage (void);\n+static section *pa_function_section (tree, enum node_frequency, bool, bool);\n \n /* The following extra sections are only used for SOM.  */\n static GTY(()) section *som_readonly_data_section;\n@@ -388,6 +389,8 @@ static const struct default_options pa_option_optimization_table[] =\n #define TARGET_CAN_ELIMINATE pa_can_eliminate\n #undef TARGET_CONDITIONAL_REGISTER_USAGE\n #define TARGET_CONDITIONAL_REGISTER_USAGE pa_conditional_register_usage\n+#undef TARGET_ASM_FUNCTION_SECTION\n+#define TARGET_ASM_FUNCTION_SECTION pa_function_section\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n@@ -10200,4 +10203,27 @@ pa_conditional_register_usage (void)\n     fixed_regs[PIC_OFFSET_TABLE_REGNUM] = 1;\n }\n \n+/* Target hook for function_section.  */\n+\n+static section *\n+pa_function_section (tree decl, enum node_frequency freq,\n+\t\t     bool startup, bool exit)\n+{\n+  /* Put functions in text section if target doesn't have named sections.  */\n+  if (!targetm.have_named_sections)\n+    return text_section;\n+\n+  /* Force nested functions into the same section as the containing\n+     function.  */\n+  if (decl\n+      && DECL_SECTION_NAME (decl) == NULL_TREE\n+      && DECL_CONTEXT (decl) != NULL_TREE\n+      && TREE_CODE (DECL_CONTEXT (decl)) == FUNCTION_DECL\n+      && DECL_SECTION_NAME (DECL_CONTEXT (decl)) == NULL_TREE)\n+    return function_section (DECL_CONTEXT (decl));\n+\n+  /* Otherwise, use the default function section.  */\n+  return default_function_section (decl, freq, startup, exit);\n+}\n+\n #include \"gt-pa.h\""}]}