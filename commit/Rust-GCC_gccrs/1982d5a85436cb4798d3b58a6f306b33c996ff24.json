{"sha": "1982d5a85436cb4798d3b58a6f306b33c996ff24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk4MmQ1YTg1NDM2Y2I0Nzk4ZDNiNThhNmYzMDZiMzNjOTk2ZmYyNA==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2011-08-01T15:57:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T15:57:17Z"}, "message": "prj-part.ads, [...] (Parse): Add Target_Name parameter.\n\n2011-08-01  Pascal Obry  <obry@adacore.com>\n\n\t* prj-part.ads, prj-part.adb (Parse): Add Target_Name parameter. Pass\n\tTarget_Name to Get_Path call.\n\t(Parse_Single_Project): Likewise.\n\t(Post_Parse_Context_Clause): Likewise.\n\t* prj-env.ads, prj-env.adb (Find_Project): Add Target_Name parameter.\n\tCall Initialise_Project_Path with the proper Target_Name.\n\t(Initialize_Project_Path): Add <gnat_root>/<target_name>/lib/gnat\n\tsearch path.\n\t(Get_Path): Add Target_Name parameter. Call Initialise_Project_Path\n\twith the proper Target_Name.\n\t* prj-conf.adb (Get_Or_Create_Configuration_File): Pass Target_Name to\n\tPart.Parse routine.\n\t(Parse_Project_And_Apply_Config): Likewise.\n\t* prj-makr.adb (Initialize): Pass empty Target_Name to Parse routine.\n\tThis is fine as this part of the code is supporting only native\n\tcompilation.\n\t* prj-pars.adb (Parse): Pass empty Target_Name to Parse routine. This\n\tis fine as this part of the code is supporting only native compilation.\n\nFrom-SVN: r177054", "tree": {"sha": "6924a2255be2eb95a5d6c5d398e92a5e2c5d0642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6924a2255be2eb95a5d6c5d398e92a5e2c5d0642"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1982d5a85436cb4798d3b58a6f306b33c996ff24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1982d5a85436cb4798d3b58a6f306b33c996ff24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1982d5a85436cb4798d3b58a6f306b33c996ff24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1982d5a85436cb4798d3b58a6f306b33c996ff24/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d53d36b6e25fb2c306dc3d5a76b78e596795b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d53d36b6e25fb2c306dc3d5a76b78e596795b6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d53d36b6e25fb2c306dc3d5a76b78e596795b6e"}], "stats": {"total": 109, "additions": 80, "deletions": 29}, "files": [{"sha": "6228f99e1739a1f134fcc8588f47f93c4244cd97", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1982d5a85436cb4798d3b58a6f306b33c996ff24", "patch": "@@ -1,3 +1,24 @@\n+2011-08-01  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-part.ads, prj-part.adb (Parse): Add Target_Name parameter. Pass\n+\tTarget_Name to Get_Path call.\n+\t(Parse_Single_Project): Likewise.\n+\t(Post_Parse_Context_Clause): Likewise.\n+\t* prj-env.ads, prj-env.adb (Find_Project): Add Target_Name parameter.\n+\tCall Initialise_Project_Path with the proper Target_Name.\n+\t(Initialize_Project_Path): Add <gnat_root>/<target_name>/lib/gnat\n+\tsearch path.\n+\t(Get_Path): Add Target_Name parameter. Call Initialise_Project_Path\n+\twith the proper Target_Name.\n+\t* prj-conf.adb (Get_Or_Create_Configuration_File): Pass Target_Name to\n+\tPart.Parse routine.\n+\t(Parse_Project_And_Apply_Config): Likewise.\n+\t* prj-makr.adb (Initialize): Pass empty Target_Name to Parse routine.\n+\tThis is fine as this part of the code is supporting only native\n+\tcompilation.\n+\t* prj-pars.adb (Parse): Pass empty Target_Name to Parse routine. This\n+\tis fine as this part of the code is supporting only native compilation.\n+\n 2011-08-01  Yannick Moy  <moy@adacore.com>\n \n \t* sem_util.adb (Enter_Name): issue error in formal mode on declaration"}, {"sha": "b3827d2f39ed0e378a4e3da45debc1304361db02", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=1982d5a85436cb4798d3b58a6f306b33c996ff24", "patch": "@@ -1116,7 +1116,8 @@ package body Prj.Conf is\n             Packages_To_Check      => Packages_To_Check,\n             Current_Directory      => Current_Directory,\n             Is_Config_File         => True,\n-            Flags                  => Flags);\n+            Flags                  => Flags,\n+            Target_Name            => Target_Name);\n       else\n          --  Maybe the user will want to create his own configuration file\n          Config_Project_Node := Empty_Node;\n@@ -1214,7 +1215,8 @@ package body Prj.Conf is\n          Packages_To_Check      => Packages_To_Check,\n          Current_Directory      => Current_Directory,\n          Is_Config_File         => False,\n-         Flags                  => Flags);\n+         Flags                  => Flags,\n+         Target_Name            => Target_Name);\n \n       if User_Project_Node = Empty_Node then\n          User_Project_Node := Empty_Node;"}, {"sha": "180d0d0451b8ef94706ca0d57c8a8cc6bdf81ddd", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=1982d5a85436cb4798d3b58a6f306b33c996ff24", "patch": "@@ -1937,6 +1937,10 @@ package body Prj.Env is\n                        (Path_Separator & Prefix.all &\n                         \"lib\" & Directory_Separator & \"gpr\" &\n                         Directory_Separator & Target_Name);\n+                     Add_Str_To_Name_Buffer\n+                       (Path_Separator & Prefix.all &\n+                        Target_Name & Directory_Separator &\n+                        \"lib\" & Directory_Separator & \"gnat\");\n                   end if;\n \n                   Add_Str_To_Name_Buffer\n@@ -1970,11 +1974,12 @@ package body Prj.Env is\n    --------------\n \n    procedure Get_Path\n-     (Self : in out Project_Search_Path;\n-      Path : out String_Access)\n+     (Self        : in out Project_Search_Path;\n+      Path        : out String_Access;\n+      Target_Name : String := \"\")\n    is\n    begin\n-      Initialize_Project_Path (Self, \"\");  --  ??? Target_Name unspecified\n+      Initialize_Project_Path (Self, Target_Name);\n       Path := Self.Path;\n    end Get_Path;\n \n@@ -1998,7 +2003,8 @@ package body Prj.Env is\n      (Self               : in out Project_Search_Path;\n       Project_File_Name  : String;\n       Directory          : String;\n-      Path               : out Namet.Path_Name_Type)\n+      Path               : out Namet.Path_Name_Type;\n+      Target_Name        : String)\n    is\n       File : constant String := Project_File_Name;\n       --  Have to do a copy, in case the parameter is Name_Buffer, which we\n@@ -2087,7 +2093,7 @@ package body Prj.Env is\n    --  Start of processing for Find_Project\n \n    begin\n-      Initialize_Project_Path (Self, \"\");\n+      Initialize_Project_Path (Self, Target_Name);\n \n       if Current_Verbosity = High then\n          Write_Str  (\"Searching for project (\"\"\");"}, {"sha": "d9d9a695bb8cbc9ce1c40fdcd25eaebee02e716f", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=1982d5a85436cb4798d3b58a6f306b33c996ff24", "patch": "@@ -180,8 +180,9 @@ package Prj.Env is\n    --  path.\n \n    procedure Get_Path\n-     (Self : in out Project_Search_Path;\n-      Path : out String_Access);\n+     (Self        : in out Project_Search_Path;\n+      Path        : out String_Access;\n+      Target_Name : String := \"\");\n    --  Return the current value of the project path, either the value set\n    --  during elaboration of the package or, if procedure Set_Project_Path has\n    --  been called, the value set by the last call to Set_Project_Path.\n@@ -196,7 +197,8 @@ package Prj.Env is\n      (Self               : in out Project_Search_Path;\n       Project_File_Name  : String;\n       Directory          : String;\n-      Path               : out Namet.Path_Name_Type);\n+      Path               : out Namet.Path_Name_Type;\n+      Target_Name        : String);\n    --  Search for a project with the given name either in Directory (which\n    --  often will be the directory contain the project we are currently parsing\n    --  and which we found a reference to another project), or in the project"}, {"sha": "6518f2e18630d8f296b257cec1e3d081e7f5194e", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=1982d5a85436cb4798d3b58a6f306b33c996ff24", "patch": "@@ -865,7 +865,8 @@ package body Prj.Makr is\n                Is_Config_File         => False,\n                Flags                  => Flags,\n                Current_Directory      => Get_Current_Dir,\n-               Packages_To_Check      => Packages_To_Check_By_Gnatname);\n+               Packages_To_Check      => Packages_To_Check_By_Gnatname,\n+               Target_Name            => \"\");\n \n             --  Fail if parsing was not successful\n "}, {"sha": "c25ff60e23911059dbd25b4e7770225602211d6b", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=1982d5a85436cb4798d3b58a6f306b33c996ff24", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,7 +73,8 @@ package body Prj.Pars is\n          Packages_To_Check      => Packages_To_Check,\n          Current_Directory      => Current_Dir,\n          Flags                  => Flags,\n-         Is_Config_File         => False);\n+         Is_Config_File         => False,\n+         Target_Name            => \"\");\n \n       --  If there were no error, process the tree\n "}, {"sha": "635c8efe4cf24ba33eae0cf2f71951add09ef0a1", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 31, "deletions": 14, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=1982d5a85436cb4798d3b58a6f306b33c996ff24", "patch": "@@ -185,7 +185,8 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags);\n+      Flags             : Processing_Flags;\n+      Target_Name       : String);\n    --  Parse a project file. This is a recursive procedure: it calls itself for\n    --  imported and extended projects. When From_Extended is not None, if the\n    --  project has already been parsed and is an extended project A, return the\n@@ -220,7 +221,8 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags);\n+      Flags             : Processing_Flags;\n+      Target_Name       : String);\n    --  Parse the imported projects that have been stored in table Withs, if\n    --  any. From_Extended is used for the call to Parse_Single_Project below.\n    --  When In_Limited is True, the importing path includes at least one\n@@ -448,7 +450,8 @@ package body Prj.Part is\n       Store_Comments         : Boolean := False;\n       Current_Directory      : String := \"\";\n       Is_Config_File         : Boolean;\n-      Flags                  : Processing_Flags)\n+      Flags                  : Processing_Flags;\n+      Target_Name            : String)\n    is\n       Dummy : Boolean;\n       pragma Warnings (Off, Dummy);\n@@ -468,7 +471,8 @@ package body Prj.Part is\n       Find_Project (In_Tree.Project_Path,\n                     Project_File_Name => Real_Project_File_Name.all,\n                     Directory         => Current_Directory,\n-                    Path              => Path_Name_Id);\n+                    Path              => Path_Name_Id,\n+                    Target_Name       => Target_Name);\n       Free (Real_Project_File_Name);\n \n       Prj.Err.Initialize;\n@@ -479,7 +483,11 @@ package body Prj.Part is\n          declare\n             P : String_Access;\n          begin\n-            Get_Path (In_Tree.Project_Path, Path => P);\n+            Get_Path\n+              (In_Tree.Project_Path,\n+               Path        => P,\n+               Target_Name => Target_Name);\n+\n             Prj.Com.Fail\n               (\"project file \"\"\"\n                & Project_File_Name\n@@ -505,7 +513,8 @@ package body Prj.Part is\n             Depth             => 0,\n             Current_Dir       => Current_Directory,\n             Is_Config_File    => Is_Config_File,\n-            Flags             => Flags);\n+            Flags             => Flags,\n+            Target_Name       => Target_Name);\n \n       exception\n          when Types.Unrecoverable_Error =>\n@@ -736,7 +745,8 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags)\n+      Flags             : Processing_Flags;\n+      Target_Name       : String)\n    is\n       Current_With_Clause : With_Id := Context_Clause;\n \n@@ -772,7 +782,8 @@ package body Prj.Part is\n               (In_Tree.Project_Path,\n                Project_File_Name => Get_Name_String (Current_With.Path),\n                Directory         => Project_Directory_Path,\n-               Path              => Imported_Path_Name_Id);\n+               Path              => Imported_Path_Name_Id,\n+               Target_Name       => Target_Name);\n \n             if Imported_Path_Name_Id = No_Path then\n \n@@ -876,7 +887,8 @@ package body Prj.Part is\n                         Depth             => Depth,\n                         Current_Dir       => Current_Dir,\n                         Is_Config_File    => Is_Config_File,\n-                        Flags             => Flags);\n+                        Flags             => Flags,\n+                        Target_Name       => Target_Name);\n \n                   else\n                      Extends_All := Is_Extending_All (Withed_Project, In_Tree);\n@@ -1119,7 +1131,8 @@ package body Prj.Part is\n       Depth             : Natural;\n       Current_Dir       : String;\n       Is_Config_File    : Boolean;\n-      Flags             : Processing_Flags)\n+      Flags             : Processing_Flags;\n+      Target_Name       : String)\n    is\n       Path_Name : constant String := Get_Name_String (Path_Name_Id);\n \n@@ -1485,7 +1498,8 @@ package body Prj.Part is\n                Depth             => Depth + 1,\n                Current_Dir       => Current_Dir,\n                Is_Config_File    => Is_Config_File,\n-               Flags             => Flags);\n+               Flags             => Flags,\n+               Target_Name       => Target_Name);\n             Set_First_With_Clause_Of (Project, In_Tree, Imported_Projects);\n          end;\n \n@@ -1544,7 +1558,8 @@ package body Prj.Part is\n                  (In_Tree.Project_Path,\n                   Project_File_Name => Original_Path_Name,\n                   Directory         => Get_Name_String (Project_Directory),\n-                  Path              => Extended_Project_Path_Name_Id);\n+                  Path              => Extended_Project_Path_Name_Id,\n+                  Target_Name       => Target_Name);\n \n                if Extended_Project_Path_Name_Id = No_Path then\n \n@@ -1592,7 +1607,8 @@ package body Prj.Part is\n                         Depth             => Depth + 1,\n                         Current_Dir       => Current_Dir,\n                         Is_Config_File    => Is_Config_File,\n-                        Flags             => Flags);\n+                        Flags             => Flags,\n+                        Target_Name       => Target_Name);\n                   end;\n \n                   if Present (Extended_Project) then\n@@ -1842,7 +1858,8 @@ package body Prj.Part is\n             Depth             => Depth + 1,\n             Current_Dir       => Current_Dir,\n             Is_Config_File    => Is_Config_File,\n-            Flags             => Flags);\n+            Flags             => Flags,\n+            Target_Name       => Target_Name);\n          Set_First_With_Clause_Of (Project, In_Tree, Imported_Projects);\n       end;\n "}, {"sha": "1efd44fe850a7565b39c778eceae880bf4f9ccc4", "filename": "gcc/ada/prj-part.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-part.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1982d5a85436cb4798d3b58a6f306b33c996ff24/gcc%2Fada%2Fprj-part.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.ads?ref=1982d5a85436cb4798d3b58a6f306b33c996ff24", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,8 @@ package Prj.Part is\n       Store_Comments         : Boolean := False;\n       Current_Directory      : String := \"\";\n       Is_Config_File         : Boolean;\n-      Flags                  : Processing_Flags);\n+      Flags                  : Processing_Flags;\n+      Target_Name            : String);\n    --  Parse project file and all its imported project files and create a tree.\n    --  Return the node for the project (or Empty_Node if parsing failed). If\n    --  Always_Errout_Finalize is True, Errout.Finalize is called in all cases,"}]}