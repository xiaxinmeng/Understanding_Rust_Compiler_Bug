{"sha": "a1543fb19ba17a455b0e9df5e373a1643082f5d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE1NDNmYjE5YmExN2E0NTViMGU5ZGY1ZTM3M2ExNjQzMDgyZjVkMg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2019-06-16T07:48:53Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-06-16T07:48:53Z"}, "message": "re PR d/90650 (ICE in fold_convert_loc, at fold-const.c:2552)\n\n\tPR d/90650\nd/dmd: Merge upstream dmd ab03e2918\n\nFixes internal compiler error in fold_convert_loc.\n\nReviewed-on: https://github.com/dlang/dmd/pull/9996\n\ngcc/testsuite/ChangeLog:\n\n2019-06-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\tPR d/90650\n\t* gdc.dg/pr90650a.d: New test.\n\t* gdc.dg/pr90650b.d: New test.\n\nFrom-SVN: r272344", "tree": {"sha": "c8157e15adef387be9ecc8d925829a547fbcb813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8157e15adef387be9ecc8d925829a547fbcb813"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1543fb19ba17a455b0e9df5e373a1643082f5d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1543fb19ba17a455b0e9df5e373a1643082f5d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1543fb19ba17a455b0e9df5e373a1643082f5d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1543fb19ba17a455b0e9df5e373a1643082f5d2/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70106db92654b83cd0ea62a078805e84ef2d8ee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70106db92654b83cd0ea62a078805e84ef2d8ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70106db92654b83cd0ea62a078805e84ef2d8ee8"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "7258fadb1bba992f40a3bd8431b6114882c3a933", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=a1543fb19ba17a455b0e9df5e373a1643082f5d2", "patch": "@@ -1,4 +1,4 @@\n-f30c5dc790c17914463879157447acc671518735\n+ab03e2918508d62efcc5ee66c9a912a331b33aa0\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "ebdfae584c8351f1e146f41b97a3e36b02ba15c8", "filename": "gcc/d/dmd/expressionsem.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Fd%2Fdmd%2Fexpressionsem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Fd%2Fdmd%2Fexpressionsem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpressionsem.c?ref=a1543fb19ba17a455b0e9df5e373a1643082f5d2", "patch": "@@ -2185,6 +2185,9 @@ class ExpressionSemanticVisitor : public Visitor\n         }\n         if (exp->e1->op == TOKslice || exp->e1->type->ty == Tarray || exp->e1->type->ty == Tsarray)\n         {\n+            if (checkNonAssignmentArrayOp(exp->e1))\n+                return setError();\n+\n             if (exp->e1->op == TOKslice)\n                 ((SliceExp *)exp->e1)->arrayop = true;\n \n@@ -6232,6 +6235,9 @@ class ExpressionSemanticVisitor : public Visitor\n         assert(exp->e1->type && exp->e2->type);\n         if (exp->e1->op == TOKslice || exp->e1->type->ty == Tarray || exp->e1->type->ty == Tsarray)\n         {\n+            if (checkNonAssignmentArrayOp(exp->e1))\n+                return setError();\n+\n             // T[] ^^= ...\n             if (exp->e2->implicitConvTo(exp->e1->type->nextOf()))\n             {"}, {"sha": "2562f364b499f7e0f82fb195475ea31e127b2db2", "filename": "gcc/d/dmd/mtype.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Fd%2Fdmd%2Fmtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Fd%2Fdmd%2Fmtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmtype.c?ref=a1543fb19ba17a455b0e9df5e373a1643082f5d2", "patch": "@@ -4468,6 +4468,8 @@ Expression *TypeDArray::dotExp(Scope *sc, Expression *e, Identifier *ident, int\n         }\n         if (e->op == TOKnull)\n             return new IntegerExp(e->loc, 0, Type::tsize_t);\n+        if (checkNonAssignmentArrayOp(e))\n+            return new ErrorExp();\n         e = new ArrayLengthExp(e->loc, e);\n         e->type = Type::tsize_t;\n         return e;"}, {"sha": "ccf141ebb09b37fdd511826e21a4d40232001dc3", "filename": "gcc/d/dmd/statementsem.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Fd%2Fdmd%2Fstatementsem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Fd%2Fdmd%2Fstatementsem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatementsem.c?ref=a1543fb19ba17a455b0e9df5e373a1643082f5d2", "patch": "@@ -95,6 +95,8 @@ class StatementSemanticVisitor : public Visitor\n             s->exp = semantic(s->exp, sc);\n             s->exp = resolveProperties(sc, s->exp);\n             s->exp = s->exp->addDtorHook(sc);\n+            if (checkNonAssignmentArrayOp(s->exp))\n+                s->exp = new ErrorExp();\n             if (FuncDeclaration *f = isFuncAddress(s->exp))\n             {\n                 if (f->checkForwardRef(s->exp->loc))\n@@ -370,6 +372,8 @@ class StatementSemanticVisitor : public Visitor\n \n         ds->condition = semantic(ds->condition, sc);\n         ds->condition = resolveProperties(sc, ds->condition);\n+        if (checkNonAssignmentArrayOp(ds->condition))\n+            ds->condition = new ErrorExp();\n         ds->condition = ds->condition->optimize(WANTvalue);\n         ds->condition = checkGC(sc, ds->condition);\n \n@@ -440,6 +444,8 @@ class StatementSemanticVisitor : public Visitor\n \n             fs->condition = semantic(fs->condition, sc);\n             fs->condition = resolveProperties(sc, fs->condition);\n+            if (checkNonAssignmentArrayOp(fs->condition))\n+                fs->condition = new ErrorExp();\n             fs->condition = fs->condition->optimize(WANTvalue);\n             fs->condition = checkGC(sc, fs->condition);\n             fs->condition = fs->condition->toBoolean(sc);\n@@ -450,6 +456,8 @@ class StatementSemanticVisitor : public Visitor\n                 ((CommaExp *)fs->increment)->allowCommaExp = true;\n             fs->increment = semantic(fs->increment, sc);\n             fs->increment = resolveProperties(sc, fs->increment);\n+            if (checkNonAssignmentArrayOp(fs->increment))\n+                fs->increment = new ErrorExp();\n             fs->increment = fs->increment->optimize(WANTvalue);\n             fs->increment = checkGC(sc, fs->increment);\n         }\n@@ -1723,6 +1731,8 @@ class StatementSemanticVisitor : public Visitor\n             ifs->condition = resolveProperties(sc, ifs->condition);\n             ifs->condition = ifs->condition->addDtorHook(sc);\n         }\n+        if (checkNonAssignmentArrayOp(ifs->condition))\n+            ifs->condition = new ErrorExp();\n         ifs->condition = checkGC(sc, ifs->condition);\n \n         // Convert to boolean after declaring prm so this works:\n@@ -1971,6 +1981,8 @@ class StatementSemanticVisitor : public Visitor\n                 break;\n             }\n         }\n+        if (checkNonAssignmentArrayOp(ss->condition))\n+            ss->condition = new ErrorExp();\n         ss->condition = ss->condition->optimize(WANTvalue);\n         ss->condition = checkGC(sc, ss->condition);\n         if (ss->condition->op == TOKerror)"}, {"sha": "db2175048755ced9b67d1537d30768f6954c57bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a1543fb19ba17a455b0e9df5e373a1643082f5d2", "patch": "@@ -1,3 +1,9 @@\n+2019-06-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/90650\n+\t* gdc.dg/pr90650a.d: New test.\n+\t* gdc.dg/pr90650b.d: New test.\n+\n 2019-06-15  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* gfortran.dg/dummy_derived_typed.f90: New test."}, {"sha": "57228cab19f64edbff5cf73a104cc88a5718f2fb", "filename": "gcc/testsuite/gdc.dg/pr90650a.d", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Ftestsuite%2Fgdc.dg%2Fpr90650a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Ftestsuite%2Fgdc.dg%2Fpr90650a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr90650a.d?ref=a1543fb19ba17a455b0e9df5e373a1643082f5d2", "patch": "@@ -0,0 +1,14 @@\n+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90650\n+// { dg-do compile }\n+class c\n+{\n+  static f ()\n+  {\n+    return 0;\n+  }\n+}\n+\n+void g ()\n+{\n+  if (0 & [0] & c.f()) {}   // { dg-error \"array operation \\\\\\[0\\\\\\] & 0 & f\\\\(\\\\) without destination memory not allowed\" }\n+}"}, {"sha": "2b3192ed2b6bb1a8b3c356eebfd58f21d3bb03e3", "filename": "gcc/testsuite/gdc.dg/pr90650b.d", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Ftestsuite%2Fgdc.dg%2Fpr90650b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1543fb19ba17a455b0e9df5e373a1643082f5d2/gcc%2Ftestsuite%2Fgdc.dg%2Fpr90650b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr90650b.d?ref=a1543fb19ba17a455b0e9df5e373a1643082f5d2", "patch": "@@ -0,0 +1,13 @@\n+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90650\n+// { dg-do compile }\n+class c\n+{\n+  static f ()\n+  {\n+    return 0;\n+  }\n+}\n+void g ()\n+{\n+  if ([0] & c.f()) {}   // { dg-error \"array operation \\\\\\[0\\\\\\] & f\\\\(\\\\) without destination memory not allowed\" }\n+}"}]}