{"sha": "a6e508f91d95bdf154a19307d5e1277a98dfb19e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZlNTA4ZjkxZDk1YmRmMTU0YTE5MzA3ZDVlMTI3N2E5OGRmYjE5ZQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-02-03T20:14:10Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-02-03T20:14:10Z"}, "message": "xtensa.h (PREFERRED_RELOAD_CLASS, [...]): Remove.\n\n\t* config/xtensa/xtensa.h (PREFERRED_RELOAD_CLASS,\n\tPREFERRED_OUTPUT_RELOAD_CLASS): Remove.\n\t* config/xtensa/xtensa-protos.h (xtensa_preferred_reload_class,\n\tsecondary_reload_info, xtensa_secondary_reload): Remove.\n\t* config/xtensa/xtensa.c (TARGET_PREFERRED_RELOAD_CLASS,\n\tTARGET_PREFERRED_OUTPUT_RELOAD_CLASS): Define.\n\t(xtensa_preferred_reload_class): Make static. Change return and\n\t'rclass' argument type to reg_class_t. Remove 'isoutput' argument.\n\tUse CONST_DOUBLE_P predicate.\n\t(xtensa_preferred_output_reload_class): New function.\n\t(xtensa_secondary_reload): Make static.\n\nFrom-SVN: r169810", "tree": {"sha": "4988599a3de10823ab67c0cd7a406d562c0383e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4988599a3de10823ab67c0cd7a406d562c0383e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6e508f91d95bdf154a19307d5e1277a98dfb19e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6e508f91d95bdf154a19307d5e1277a98dfb19e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6e508f91d95bdf154a19307d5e1277a98dfb19e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6e508f91d95bdf154a19307d5e1277a98dfb19e/comments", "author": null, "committer": null, "parents": [{"sha": "82dc0de3f7c06c38d5c30aadc3e99e041ae889bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82dc0de3f7c06c38d5c30aadc3e99e041ae889bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82dc0de3f7c06c38d5c30aadc3e99e041ae889bc"}], "stats": {"total": 66, "additions": 50, "deletions": 16}, "files": [{"sha": "548aa310d14ef221cc692ad03e959eb1df764b66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6e508f91d95bdf154a19307d5e1277a98dfb19e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6e508f91d95bdf154a19307d5e1277a98dfb19e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6e508f91d95bdf154a19307d5e1277a98dfb19e", "patch": "@@ -1,3 +1,17 @@\n+2011-02-03  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/xtensa/xtensa.h (PREFERRED_RELOAD_CLASS,\n+\tPREFERRED_OUTPUT_RELOAD_CLASS): Remove.\n+\t* config/xtensa/xtensa-protos.h (xtensa_preferred_reload_class,\n+\tsecondary_reload_info, xtensa_secondary_reload): Remove.\n+\t* config/xtensa/xtensa.c (TARGET_PREFERRED_RELOAD_CLASS,\n+\tTARGET_PREFERRED_OUTPUT_RELOAD_CLASS): Define.\n+\t(xtensa_preferred_reload_class): Make static. Change return and\n+\t'rclass' argument type to reg_class_t. Remove 'isoutput' argument.\n+\tUse CONST_DOUBLE_P predicate.\n+\t(xtensa_preferred_output_reload_class): New function.\n+\t(xtensa_secondary_reload): Make static.\n+\n 2011-02-03  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/microblaze/microblaze.opt (Zxl-mode-bootstrap,"}, {"sha": "0d1738f4e8bbf3b622cba62a6f0edcaac4eb5ebc", "filename": "gcc/config/xtensa/xtensa-protos.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6e508f91d95bdf154a19307d5e1277a98dfb19e/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6e508f91d95bdf154a19307d5e1277a98dfb19e/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h?ref=a6e508f91d95bdf154a19307d5e1277a98dfb19e", "patch": "@@ -1,5 +1,5 @@\n /* Prototypes of target machine for GNU compiler for Xtensa.\n-   Copyright 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n+   Copyright 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Bob Wilson (bwilson@tensilica.com) at Tensilica.\n \n@@ -63,11 +63,6 @@ extern void print_operand (FILE *, rtx, int);\n extern void print_operand_address (FILE *, rtx);\n extern void xtensa_output_literal (FILE *, rtx, enum machine_mode, int);\n extern rtx xtensa_return_addr (int, rtx);\n-extern enum reg_class xtensa_preferred_reload_class (rtx, enum reg_class, int);\n-struct secondary_reload_info;\n-extern reg_class_t xtensa_secondary_reload (bool, rtx, reg_class_t,\n-\t\t\t\t\t    enum machine_mode,\n-\t\t\t\t\t    struct secondary_reload_info *);\n #endif /* RTX_CODE */\n \n extern void xtensa_setup_frame_addresses (void);"}, {"sha": "b1ea5bd787288a452f15cf3934cafc38831fc1de", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 35, "deletions": 4, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6e508f91d95bdf154a19307d5e1277a98dfb19e/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6e508f91d95bdf154a19307d5e1277a98dfb19e/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=a6e508f91d95bdf154a19307d5e1277a98dfb19e", "patch": "@@ -162,6 +162,12 @@ static void xtensa_asm_trampoline_template (FILE *);\n static void xtensa_trampoline_init (rtx, tree, rtx);\n static bool xtensa_output_addr_const_extra (FILE *, rtx);\n \n+static reg_class_t xtensa_preferred_reload_class (rtx, reg_class_t);\n+static reg_class_t xtensa_preferred_output_reload_class (rtx, reg_class_t);\n+static reg_class_t xtensa_secondary_reload (bool, rtx, reg_class_t,\n+\t\t\t\t\t    enum machine_mode,\n+\t\t\t\t\t    struct secondary_reload_info *);\n+\n static bool constantpool_address_p (const_rtx addr);\n \n static const int reg_nonleaf_alloc_order[FIRST_PSEUDO_REGISTER] =\n@@ -260,6 +266,11 @@ static const struct default_options xtensa_option_optimization_table[] =\n #undef  TARGET_EXPAND_BUILTIN\n #define TARGET_EXPAND_BUILTIN xtensa_expand_builtin\n \n+#undef  TARGET_PREFERRED_RELOAD_CLASS\n+#define TARGET_PREFERRED_RELOAD_CLASS xtensa_preferred_reload_class\n+#undef  TARGET_PREFERRED_OUTPUT_RELOAD_CLASS\n+#define TARGET_PREFERRED_OUTPUT_RELOAD_CLASS xtensa_preferred_output_reload_class\n+\n #undef TARGET_SECONDARY_RELOAD\n #define TARGET_SECONDARY_RELOAD xtensa_secondary_reload\n \n@@ -3153,11 +3164,12 @@ xtensa_expand_builtin (tree exp, rtx target,\n   return NULL_RTX;\n }\n \n+/* Worker function for TARGET_PREFERRED_RELOAD_CLASS.  */\n \n-enum reg_class\n-xtensa_preferred_reload_class (rtx x, enum reg_class rclass, int isoutput)\n+static reg_class_t\n+xtensa_preferred_reload_class (rtx x, reg_class_t rclass)\n {\n-  if (!isoutput && CONSTANT_P (x) && GET_CODE (x) == CONST_DOUBLE)\n+  if (CONSTANT_P (x) && CONST_DOUBLE_P (x))\n     return NO_REGS;\n \n   /* Don't use the stack pointer or hard frame pointer for reloads!\n@@ -3172,8 +3184,27 @@ xtensa_preferred_reload_class (rtx x, enum reg_class rclass, int isoutput)\n   return rclass;\n }\n \n+/* Worker function for TARGET_PREFERRED_OUTPUT_RELOAD_CLASS.  */\n+\n+static reg_class_t\n+xtensa_preferred_output_reload_class (rtx x ATTRIBUTE_UNUSED,\n+\t\t\t\t      reg_class_t rclass)\n+{\n+  /* Don't use the stack pointer or hard frame pointer for reloads!\n+     The hard frame pointer would normally be OK except that it may\n+     briefly hold an incoming argument in the prologue, and reload\n+     won't know that it is live because the hard frame pointer is\n+     treated specially.  */\n+\n+  if (rclass == AR_REGS || rclass == GR_REGS)\n+    return RL_REGS;\n+\n+  return rclass;\n+}\n+\n+/* Worker function for TARGET_SECONDARY_RELOAD.  */\n \n-reg_class_t\n+static reg_class_t\n xtensa_secondary_reload (bool in_p, rtx x, reg_class_t rclass,\n \t\t\t enum machine_mode mode, secondary_reload_info *sri)\n {"}, {"sha": "098855b3c428dcf76a2d4eba1269ee22d2a0f0db", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6e508f91d95bdf154a19307d5e1277a98dfb19e/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6e508f91d95bdf154a19307d5e1277a98dfb19e/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=a6e508f91d95bdf154a19307d5e1277a98dfb19e", "patch": "@@ -455,12 +455,6 @@ extern const enum reg_class xtensa_regno_to_class[FIRST_PSEUDO_REGISTER];\n    the RTL, as either incoming or outgoing arguments.  */\n #define TARGET_SMALL_REGISTER_CLASSES_FOR_MODE_P hook_bool_mode_true\n \n-#define PREFERRED_RELOAD_CLASS(X, CLASS)\t\t\t\t\\\n-  xtensa_preferred_reload_class (X, CLASS, 0)\n-\n-#define PREFERRED_OUTPUT_RELOAD_CLASS(X, CLASS)\t\t\t\t\\\n-  xtensa_preferred_reload_class (X, CLASS, 1)\n-  \n /* Return the maximum number of consecutive registers\n    needed to represent mode MODE in a register of class CLASS.  */\n #define CLASS_UNITS(mode, size)\t\t\t\t\t\t\\"}]}