{"sha": "8697bf9f46f36168ddba5752db582e673e3cbe8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY5N2JmOWY0NmYzNjE2OGRkYmE1NzUyZGI1ODJlNjczZTNjYmU4Yw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2017-12-12T02:16:31Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2017-12-12T02:16:31Z"}, "message": "[SFN] Introduce -gstatement-frontiers option, enable debug markers\n\nIntroduce a command line option to enable statement frontiers, enabled\nby default in optimized builds with DWARF2+ debug information.\n\nThis patch depends on an earlier patch that completed the\ninfrastructure for debug markers, and on another patch that turns -g\ninto a negatable option prefix.\n\nfor  gcc/ChangeLog\n\n\t* common.opt (gstatement-frontiers): New, setting\n\tdebug_nonbind_markers_p.\n\t* rtl.h (MAY_HAVE_DEBUG_MARKER_INSNS): Activate.\n\t* toplev.c (process_options): Autodetect value for debug statement\n\tfrontiers option.\n\t* tree.h (MAY_HAVE_DEBUG_MARKER_STMTS): Activate.\n\t* doc/invoke.texi (gstatement-frontiers, gno-statement-frontiers): New.\n\nFrom-SVN: r255569", "tree": {"sha": "5ebc4974d8a1f07ace0cda3e302d94bfd57725a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ebc4974d8a1f07ace0cda3e302d94bfd57725a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8697bf9f46f36168ddba5752db582e673e3cbe8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8697bf9f46f36168ddba5752db582e673e3cbe8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8697bf9f46f36168ddba5752db582e673e3cbe8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8697bf9f46f36168ddba5752db582e673e3cbe8c/comments", "author": null, "committer": null, "parents": [{"sha": "96a95ac18c2fe573d9c5039be18cf7c6cb26f171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a95ac18c2fe573d9c5039be18cf7c6cb26f171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96a95ac18c2fe573d9c5039be18cf7c6cb26f171"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "a53e7b8173f526a05b20c7615a3fce00f2c57732", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8697bf9f46f36168ddba5752db582e673e3cbe8c", "patch": "@@ -1,5 +1,13 @@\n 2017-12-12  Alexandre Oliva <aoliva@redhat.com>\n \n+\t* common.opt (gstatement-frontiers): New, setting\n+\tdebug_nonbind_markers_p.\n+\t* rtl.h (MAY_HAVE_DEBUG_MARKER_INSNS): Activate.\n+\t* toplev.c (process_options): Autodetect value for debug statement\n+\tfrontiers option.\n+\t* tree.h (MAY_HAVE_DEBUG_MARKER_STMTS): Activate.\n+\t* doc/invoke.texi (gstatement-frontiers, gno-statement-frontiers): New.\n+\n \t* cfgexpand.c (expand_gimple_basic_block): Handle begin stmt\n \tmarkers.  Integrate source bind into debug stmt expand loop.\n \t(pass_expand::execute): Check debug marker limit.  Avoid deep"}, {"sha": "d80ae5b7f39b92ef31590d8d411cbfc9c14e6666", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=8697bf9f46f36168ddba5752db582e673e3cbe8c", "patch": "@@ -2936,6 +2936,10 @@ gstabs+\n Common Driver JoinedOrMissing Negative(gvms)\n Generate debug information in extended STABS format.\n \n+gstatement-frontiers\n+Common Driver Var(debug_nonbind_markers_p) Init(2)\n+Emit progressive recommended breakpoint locations.\n+\n gstrict-dwarf\n Common Driver Report Var(dwarf_strict) Init(0)\n Don't emit DWARF additions beyond selected version."}, {"sha": "6402a5ae1734e1c1d8f7f42ba5cdec047bee0639", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8697bf9f46f36168ddba5752db582e673e3cbe8c", "patch": "@@ -346,6 +346,7 @@ Objective-C and Objective-C++ Dialects}.\n -ggdb  -grecord-gcc-switches  -gno-record-gcc-switches @gol\n -gstabs  -gstabs+  -gstrict-dwarf  -gno-strict-dwarf @gol\n -gcolumn-info  -gno-column-info @gol\n+-gstatement-frontiers  -gno-statement-frontiers @gol\n -gvms  -gxcoff  -gxcoff+  -gz@r{[}=@var{type}@r{]} @gol\n -fdebug-prefix-map=@var{old}=@var{new}  -fdebug-types-section @gol\n -fno-eliminate-unused-debug-types @gol\n@@ -7146,6 +7147,17 @@ Emit location column information into DWARF debugging information, rather\n than just file and line.\n This option is enabled by default.\n \n+@item -gstatement-frontiers\n+@item -gno-statement-frontiers\n+@opindex gstatement-frontiers\n+@opindex gno-statement-frontiers\n+This option causes GCC to create markers in the internal representation\n+at the beginning of statements, and to keep them roughly in place\n+throughout compilation, using them to guide the output of @code{is_stmt}\n+markers in the line number table.  This is enabled by default when\n+compiling with optimization (@option{-Os}, @option{-O}, @option{-O2},\n+@dots{}), and outputting DWARF 2 debug information at the normal level.\n+\n @item -gz@r{[}=@var{type}@r{]}\n @opindex gz\n Produce compressed debug sections in DWARF format, if that is supported."}, {"sha": "3ef687e5a371bcbf02339cc9ae8c9df3097a880d", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=8697bf9f46f36168ddba5752db582e673e3cbe8c", "patch": "@@ -816,7 +816,7 @@ struct GTY(()) rtvec_def {\n #define NONDEBUG_INSN_P(X) (INSN_P (X) && !DEBUG_INSN_P (X))\n \n /* Nonzero if DEBUG_MARKER_INSN_P may possibly hold.  */\n-#define MAY_HAVE_DEBUG_MARKER_INSNS 0 /* debug_nonbind_markers_p */\n+#define MAY_HAVE_DEBUG_MARKER_INSNS debug_nonbind_markers_p\n /* Nonzero if DEBUG_BIND_INSN_P may possibly hold.  */\n #define MAY_HAVE_DEBUG_BIND_INSNS flag_var_tracking_assignments\n /* Nonzero if DEBUG_INSN_P may possibly hold.  */"}, {"sha": "b6e038d2f89d7862a5638ef5eb5ed2196014366e", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=8697bf9f46f36168ddba5752db582e673e3cbe8c", "patch": "@@ -1536,6 +1536,10 @@ process_options (void)\n     warning_at (UNKNOWN_LOCATION, 0,\n \t\t\"var-tracking-assignments changes selective scheduling\");\n \n+  if (debug_nonbind_markers_p == AUTODETECT_VALUE)\n+    debug_nonbind_markers_p = optimize && debug_info_level >= DINFO_LEVEL_NORMAL\n+      && (write_symbols == DWARF2_DEBUG || write_symbols == VMS_AND_DWARF2_DEBUG);\n+\n   if (flag_tree_cselim == AUTODETECT_VALUE)\n     {\n       if (HAVE_conditional_move)"}, {"sha": "83af3bcaf55f78c2562aeaf032b5b54ee80317ae", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8697bf9f46f36168ddba5752db582e673e3cbe8c/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=8697bf9f46f36168ddba5752db582e673e3cbe8c", "patch": "@@ -1124,7 +1124,7 @@ extern void omp_clause_range_check_failed (const_tree, const char *, int,\n   ((int)TREE_INT_CST_LOW (VL_EXP_CHECK (NODE)->exp.operands[0]))\n \n /* Nonzero if gimple_debug_nonbind_marker_p() may possibly hold.  */\n-#define MAY_HAVE_DEBUG_MARKER_STMTS 0 /* debug_nonbind_markers_p */\n+#define MAY_HAVE_DEBUG_MARKER_STMTS debug_nonbind_markers_p\n /* Nonzero if gimple_debug_bind_p() (and thus\n    gimple_debug_source_bind_p()) may possibly hold.  */\n #define MAY_HAVE_DEBUG_BIND_STMTS flag_var_tracking_assignments"}]}