{"sha": "be50843754b4c4d47f0d628a84b3dbf2a4145a43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU1MDg0Mzc1NGI0YzRkNDdmMGQ2MjhhODRiM2RiZjJhNDE0NWE0Mw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-23T21:47:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-06-24T11:28:13Z"}, "message": "libstdc++: Fix std::to_chars buffer overflow (PR 95851)\n\nThe __detail::__to_chars_2 function assumes it won't be called with zero\nvalues. However, when the output buffer is empty the caller doesn't\nhandle zero values correctly, and calls __to_chars_2 with a zero value,\nresulting in an overflow of the empty buffer.\n\nThe __detail::__to_chars_i function should just return immediately for\nan empty buffer, and otherwise ensure zero values are handled properly.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/95851\n\t* include/std/charconv (__to_chars_i): Check for zero-sized\n\tbuffer unconditionally.\n\t* testsuite/20_util/to_chars/95851.cc: New test.", "tree": {"sha": "782b6375869a10c2d234def90cd3961d7eeb1f3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/782b6375869a10c2d234def90cd3961d7eeb1f3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be50843754b4c4d47f0d628a84b3dbf2a4145a43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be50843754b4c4d47f0d628a84b3dbf2a4145a43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be50843754b4c4d47f0d628a84b3dbf2a4145a43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be50843754b4c4d47f0d628a84b3dbf2a4145a43/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fb2c2f4d0a43b96e9e4907db952e57a5cbe61ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fb2c2f4d0a43b96e9e4907db952e57a5cbe61ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fb2c2f4d0a43b96e9e4907db952e57a5cbe61ef"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "77a72d40dd0c65841858f39ba9d641b6d06867ad", "filename": "libstdc++-v3/include/std/charconv", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be50843754b4c4d47f0d628a84b3dbf2a4145a43/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be50843754b4c4d47f0d628a84b3dbf2a4145a43/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcharconv?ref=be50843754b4c4d47f0d628a84b3dbf2a4145a43", "patch": "@@ -327,7 +327,10 @@ namespace __detail\n       using _Up = __detail::__unsigned_least_t<_Tp>;\n       _Up __unsigned_val = __value;\n \n-      if (__value == 0 && __first != __last)\n+      if (__first == __last) [[__unlikely__]]\n+\treturn { __last, errc::value_too_large };\n+\n+      if (__value == 0)\n \t{\n \t  *__first = '0';\n \t  return { __first + 1, errc{} };"}, {"sha": "5f0daf3b30bcf81428566ec9e4bcc2ec2cc0f851", "filename": "libstdc++-v3/testsuite/20_util/to_chars/95851.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be50843754b4c4d47f0d628a84b3dbf2a4145a43/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2F95851.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be50843754b4c4d47f0d628a84b3dbf2a4145a43/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2F95851.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fto_chars%2F95851.cc?ref=be50843754b4c4d47f0d628a84b3dbf2a4145a43", "patch": "@@ -0,0 +1,36 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++14 } }\n+\n+#include <charconv>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  char* p = nullptr;\n+  auto res = std::to_chars(p, p, 0, 2); // PR libstdc++/95851\n+  VERIFY( res.ptr == p );\n+  VERIFY( res.ec == std::errc::value_too_large );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}