{"sha": "d8101d05d3383b8aabd979983dacd6c78e2f2f5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgxMDFkMDVkMzM4M2I4YWFiZDk3OTk4M2RhY2Q2Yzc4ZTJmMmY1ZA==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2013-06-18T08:59:46Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2013-06-18T08:59:46Z"}, "message": "re PR bootstrap/57609 (S/390 ESA mode bootstrap failure since r197266)\n\n2013-06-18  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\tPR target/57609\n\t* config/s390/s390.c (s390_chunkify_start): Replace next_real_insn\n\twith next_active_insn.\n\nFrom-SVN: r200164", "tree": {"sha": "395ff7af5aa6d34483998e0bd101b28a1b67d380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/395ff7af5aa6d34483998e0bd101b28a1b67d380"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8101d05d3383b8aabd979983dacd6c78e2f2f5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8101d05d3383b8aabd979983dacd6c78e2f2f5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8101d05d3383b8aabd979983dacd6c78e2f2f5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8101d05d3383b8aabd979983dacd6c78e2f2f5d/comments", "author": null, "committer": null, "parents": [{"sha": "92f202027ed5fc6d64808cc27103f88ae95cca52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f202027ed5fc6d64808cc27103f88ae95cca52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92f202027ed5fc6d64808cc27103f88ae95cca52"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "f356c4d75deb338cedcd842711ac5336e2c4b3e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8101d05d3383b8aabd979983dacd6c78e2f2f5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8101d05d3383b8aabd979983dacd6c78e2f2f5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8101d05d3383b8aabd979983dacd6c78e2f2f5d", "patch": "@@ -1,3 +1,9 @@\n+2013-06-18  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\tPR target/57609\n+\t* config/s390/s390.c (s390_chunkify_start): Replace next_real_insn\n+\twith next_active_insn.\n+\n 2013-06-18  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.h (enum data_align): New."}, {"sha": "837308b4d3f8bbf6f4a2aacf0335d2023a9801f4", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8101d05d3383b8aabd979983dacd6c78e2f2f5d/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8101d05d3383b8aabd979983dacd6c78e2f2f5d/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=d8101d05d3383b8aabd979983dacd6c78e2f2f5d", "patch": "@@ -7023,7 +7023,7 @@ s390_chunkify_start (void)\n       if (LABEL_P (insn)\n \t  && (LABEL_PRESERVE_P (insn) || LABEL_NAME (insn)))\n \t{\n-\t  rtx vec_insn = next_real_insn (insn);\n+\t  rtx vec_insn = next_active_insn (insn);\n \t  if (! vec_insn || ! JUMP_TABLE_DATA_P (vec_insn))\n \t    bitmap_set_bit (far_labels, CODE_LABEL_NUMBER (insn));\n \t}\n@@ -7054,7 +7054,7 @@ s390_chunkify_start (void)\n \t    {\n \t      /* Find the jump table used by this casesi jump.  */\n \t      rtx vec_label = XEXP (XEXP (XVECEXP (pat, 0, 1), 0), 0);\n-\t      rtx vec_insn = next_real_insn (vec_label);\n+\t      rtx vec_insn = next_active_insn (vec_label);\n \t      if (vec_insn && JUMP_TABLE_DATA_P (vec_insn))\n \t\t{\n \t\t  rtx vec_pat = PATTERN (vec_insn);\n@@ -7085,11 +7085,20 @@ s390_chunkify_start (void)\n \n   /* Insert base register reload insns at every far label.  */\n \n+  if (dump_file)\n+    {\n+      fprintf (dump_file, \"Function: %s\\n\", current_function_name ());\n+      fprintf (dump_file, \"far labels:\\n\");\n+    }\n+\n   for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n     if (LABEL_P (insn)\n         && bitmap_bit_p (far_labels, CODE_LABEL_NUMBER (insn)))\n       {\n \tstruct constant_pool *pool = s390_find_pool (pool_list, insn);\n+\tif (dump_file)\n+\t  print_rtx (insn);\n+\n \tif (pool)\n \t  {\n \t    rtx new_insn = gen_reload_base (cfun->machine->base_reg,"}]}