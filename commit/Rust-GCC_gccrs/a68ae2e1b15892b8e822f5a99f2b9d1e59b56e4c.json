{"sha": "a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY4YWUyZTFiMTU4OTJiOGU4MjJmNWE5OWYyYjlkMWU1OWI1NmU0Yw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-06-23T17:10:10Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-06-23T17:10:10Z"}, "message": "c-common.c (warn_logical_operator): Use tree_int_cst_equal when comparing INTEGER_CSTs.\n\n\t* c-common.c (warn_logical_operator): Use tree_int_cst_equal\n\twhen comparing INTEGER_CSTs.\n\n\t* c-c++-common/Wlogical-op-3.c: New test.\n\nFrom-SVN: r224853", "tree": {"sha": "7148f747e2eb677ef00013e410bce7fcd6952131", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7148f747e2eb677ef00013e410bce7fcd6952131"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "171561ca339eaea296a43c8f5b328bf3a66e3af2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/171561ca339eaea296a43c8f5b328bf3a66e3af2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/171561ca339eaea296a43c8f5b328bf3a66e3af2"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "e2bd7e972c8df6bf0a11bff3717d63bb10443b37", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c", "patch": "@@ -1,3 +1,8 @@\n+2015-06-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-common.c (warn_logical_operator): Use tree_int_cst_equal\n+\twhen comparing INTEGER_CSTs.\n+\n 2015-06-22  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* c-ada-spec.h (cpp_operation): Add HAS_DEPENDENT_TEMPLATE_ARGS."}, {"sha": "9fcd9d69b74cf60e31f482a07a0fabb9423a3336", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c", "patch": "@@ -1838,7 +1838,8 @@ warn_logical_operator (location_t location, enum tree_code code, tree type,\n \t}\n       /* Or warn if the operands have exactly the same range, e.g.\n \t A > 0 && A > 0.  */\n-      else if (low0 == low1 && high0 == high1)\n+      else if (tree_int_cst_equal (low0, low1)\n+\t       && tree_int_cst_equal (high0, high1))\n \t{\n \t  if (or_op)\n \t    warning_at (location, OPT_Wlogical_op,"}, {"sha": "eeb839f5f410f180b765b0c12a934558aa3c50d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c", "patch": "@@ -1,3 +1,7 @@\n+2015-06-23  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-c++-common/Wlogical-op-3.c: New test.\n+\n 2015-06-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/66254"}, {"sha": "83b5df43ba5289fee13a829317bf7745015ff592", "filename": "gcc/testsuite/c-c++-common/Wlogical-op-3.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWlogical-op-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWlogical-op-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWlogical-op-3.c?ref=a68ae2e1b15892b8e822f5a99f2b9d1e59b56e4c", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wlogical-op\" } */\n+\n+void\n+fn1 (int a)\n+{\n+  const int x = a;\n+  if (x && x) {} /* { dg-warning \"logical .and. of equal expressions\" } */\n+  if (x && (int) x) {} /* { dg-warning \"logical .and. of equal expressions\" } */\n+  if ((int) x && x) {} /* { dg-warning \"logical .and. of equal expressions\" } */\n+  if ((int) x && (int) x) {} /* { dg-warning \"logical .and. of equal expressions\" } */\n+}\n+\n+void\n+fn2 (int a)\n+{\n+  const int x = a;\n+  if (x || x) {} /* { dg-warning \"logical .or. of equal expressions\" } */\n+  if (x || (int) x) {} /* { dg-warning \"logical .or. of equal expressions\" } */\n+  if ((int) x || x) {} /* { dg-warning \"logical .or. of equal expressions\" } */\n+  if ((int) x || (int) x) {} /* { dg-warning \"logical .or. of equal expressions\" } */\n+}"}]}