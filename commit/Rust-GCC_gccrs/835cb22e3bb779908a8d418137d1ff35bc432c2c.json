{"sha": "835cb22e3bb779908a8d418137d1ff35bc432c2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM1Y2IyMmUzYmI3Nzk5MDhhOGQ0MTgxMzdkMWZmMzViYzQzMmMyYw==", "commit": {"author": {"name": "Tony Kimball", "email": "alk@pobox.com", "date": "2002-08-27T16:08:31Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-08-27T16:08:31Z"}, "message": "natPlainDatagramSocketImpl.cc (NATIVE_CLOSE): New define.\n\n2002-08-27  Tony Kimball <alk@pobox.com>\n            Tom Tromey  <tromey@redhat.com>\n\n\t* java/net/natPlainDatagramSocketImpl.cc (NATIVE_CLOSE): New\n\tdefine.\n\t(::close): Removed.\n\t(PlainDatagramSocketImpl::close): Use NATIVE_CLOSE.\n\t* java/net/natPlainSocketImpl.cc (NATIVE_CLOSE): New define.\n\t(::close): Removed.\n\t(PlainSocketImpl::close): Use NATIVE_CLOSE.\n\t* include/win32.h (getcwd): Removed declaration.  Include io.h.\n\nCo-Authored-By: Tom Tromey <tromey@redhat.com>\n\nFrom-SVN: r56605", "tree": {"sha": "48fd4eeb11e4db9380644fa21c9dd75585c317b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48fd4eeb11e4db9380644fa21c9dd75585c317b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/835cb22e3bb779908a8d418137d1ff35bc432c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/835cb22e3bb779908a8d418137d1ff35bc432c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/835cb22e3bb779908a8d418137d1ff35bc432c2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/835cb22e3bb779908a8d418137d1ff35bc432c2c/comments", "author": null, "committer": null, "parents": [{"sha": "8632ed40b6999d80593096177abe87deee06c165", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8632ed40b6999d80593096177abe87deee06c165", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8632ed40b6999d80593096177abe87deee06c165"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "5724512702e95c2de1f641c12eb7090ae910030f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835cb22e3bb779908a8d418137d1ff35bc432c2c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835cb22e3bb779908a8d418137d1ff35bc432c2c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=835cb22e3bb779908a8d418137d1ff35bc432c2c", "patch": "@@ -1,3 +1,15 @@\n+2002-08-27  Tony Kimball <alk@pobox.com>\n+            Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/net/natPlainDatagramSocketImpl.cc (NATIVE_CLOSE): New\n+\tdefine.\n+\t(::close): Removed.\n+\t(PlainDatagramSocketImpl::close): Use NATIVE_CLOSE.\n+\t* java/net/natPlainSocketImpl.cc (NATIVE_CLOSE): New define.\n+\t(::close): Removed.\n+\t(PlainSocketImpl::close): Use NATIVE_CLOSE.\n+\t* include/win32.h (getcwd): Removed declaration.  Include io.h.\n+\n 2002-08-25  Adam Megacz <adam@xwt.org>\n \n \t* include/win32.h (getcwd): copied function declaration as"}, {"sha": "da71b8be56a0407f7adbb7b3c18f7823beae159d", "filename": "libjava/include/win32.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835cb22e3bb779908a8d418137d1ff35bc432c2c/libjava%2Finclude%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835cb22e3bb779908a8d418137d1ff35bc432c2c/libjava%2Finclude%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fwin32.h?ref=835cb22e3bb779908a8d418137d1ff35bc432c2c", "patch": "@@ -19,8 +19,7 @@ details.  */\n #include <gcj/cni.h>\n #include <java/util/Properties.h>\n \n-// FIXME: remove this once the io.h issue is resolved\n-extern \"C\" char*   getcwd (char*, int);\n+#include <io.h>\n \n extern void _Jv_platform_initialize (void);\n extern void _Jv_platform_initProperties (java::util::Properties*);"}, {"sha": "e581f08db5ce3186701c78b92fee82b3a8f64aa1", "filename": "libjava/java/net/natPlainDatagramSocketImpl.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835cb22e3bb779908a8d418137d1ff35bc432c2c/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835cb22e3bb779908a8d418137d1ff35bc432c2c/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc?ref=835cb22e3bb779908a8d418137d1ff35bc432c2c", "patch": "@@ -17,13 +17,10 @@ details.  */\n #define ENOPROTOOPT 109\n #endif\n \n-static inline int\n-close(int s)\n-{\n-  return closesocket(s);\n-}\n+#define NATIVE_CLOSE(s) closesocket (s)\n \n #else /* WIN32 */\n+\n #ifdef HAVE_SYS_SOCKET_H\n #include <sys/socket.h>\n #endif\n@@ -35,6 +32,9 @@ close(int s)\n #endif\n #include <errno.h>\n #include <string.h>\n+\n+#define NATIVE_CLOSE(s) ::close (s)\n+\n #endif /* WIN32 */\n \n #if HAVE_BSTRING_H\n@@ -303,7 +303,7 @@ java::net::PlainDatagramSocketImpl::close ()\n \n   // The method isn't declared to throw anything, so we disregard\n   // the return value.\n-  ::close (fnum);\n+  NATIVE_CLOSE (fnum);\n   fnum = -1;\n   timeout = 0;\n }"}, {"sha": "370c9946177183fb9bad2d38bc4bbc4fc6540cb8", "filename": "libjava/java/net/natPlainSocketImpl.cc", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835cb22e3bb779908a8d418137d1ff35bc432c2c/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835cb22e3bb779908a8d418137d1ff35bc432c2c/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc?ref=835cb22e3bb779908a8d418137d1ff35bc432c2c", "patch": "@@ -20,13 +20,9 @@ details.  */\n #undef MIN_PRIORITY\n #undef FIONREAD\n \n-// These functions make the Win32 socket API look more POSIXy\n-static inline int\n-close(int s)\n-{\n-  return closesocket(s);\n-}\n+#define NATIVE_CLOSE(s) closesocket (s)\n \n+// These functions make the Win32 socket API look more POSIXy\n static inline int\n write(int s, void *buf, int len)\n {\n@@ -63,6 +59,8 @@ read(int s, void *buf, int len)\n #include <errno.h>\n #include <string.h>\n \n+#define NATIVE_CLOSE(s) ::close (s)\n+\n #endif /* WIN32 */\n #endif /* DISABLE_JAVA_NET */\n \n@@ -429,7 +427,7 @@ java::net::PlainSocketImpl::close()\n   JvSynchronize sync (this);\n \n   // should we use shutdown here? how would that effect so_linger?\n-  int res = ::close (fnum);\n+  int res = NATIVE_CLOSE (fnum);\n \n   if (res == -1)\n     {"}]}