{"sha": "78796ad54b18ad6aa7433cb0a45f6665f85f9743", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg3OTZhZDU0YjE4YWQ2YWE3NDMzY2IwYTQ1ZjY2NjVmODVmOTc0Mw==", "commit": {"author": {"name": "Fariborz Jahanian", "email": "fjahanian@apple.com", "date": "2005-02-25T01:16:17Z"}, "committer": {"name": "Fariborz Jahanian", "email": "fjahanian@gcc.gnu.org", "date": "2005-02-25T01:16:17Z"}, "message": "config/rs6000/rs6000.c (rs6000_legitimize_reload_address): Check for vector...\n\nconfig/rs6000/rs6000.c (rs6000_legitimize_reload_address): Check for\nvector types if to use base reg for misaligned non-word ld/std.\nOKed by David Edelsohn.\n\nFrom-SVN: r95529", "tree": {"sha": "12ca1094d0607528e394f1a9cef736ad98176069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12ca1094d0607528e394f1a9cef736ad98176069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78796ad54b18ad6aa7433cb0a45f6665f85f9743", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78796ad54b18ad6aa7433cb0a45f6665f85f9743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78796ad54b18ad6aa7433cb0a45f6665f85f9743", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78796ad54b18ad6aa7433cb0a45f6665f85f9743/comments", "author": null, "committer": null, "parents": [{"sha": "3b47d0f4729e9bb8daf73e1c396756b334aec4bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b47d0f4729e9bb8daf73e1c396756b334aec4bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b47d0f4729e9bb8daf73e1c396756b334aec4bb"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "36d0804bbd52da97d67239b8fdf33803dd908838", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78796ad54b18ad6aa7433cb0a45f6665f85f9743/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78796ad54b18ad6aa7433cb0a45f6665f85f9743/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78796ad54b18ad6aa7433cb0a45f6665f85f9743", "patch": "@@ -1,3 +1,8 @@\n+2005-02-24  Fariborz Jahanian <fjahanian@apple.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_legitimize_reload_address): Check for\n+\tvector types if to use base reg for misaligned non-word ld/std.\n+\n 2005-02-24  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR target/14619"}, {"sha": "e07ac5011077af0ec36c23697bf20c895fa4d80b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78796ad54b18ad6aa7433cb0a45f6665f85f9743/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78796ad54b18ad6aa7433cb0a45f6665f85f9743/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=78796ad54b18ad6aa7433cb0a45f6665f85f9743", "patch": "@@ -3881,6 +3881,7 @@ rs6000_legitimize_reload_address (rtx x, enum machine_mode mode,\n       && REG_MODE_OK_FOR_BASE_P (XEXP (x, 0), mode)\n       && GET_CODE (XEXP (x, 1)) == CONST_INT\n       && (INTVAL (XEXP (x, 1)) & 3) != 0\n+      && !ALTIVEC_VECTOR_MODE (mode)\n       && GET_MODE_SIZE (mode) >= UNITS_PER_WORD\n       && TARGET_POWERPC64)\n     {"}, {"sha": "f733d18214c465228ff3e7fdf1abd6f30554e547", "filename": "gcc/testsuite/gcc.dg/altivec-20.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78796ad54b18ad6aa7433cb0a45f6665f85f9743/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78796ad54b18ad6aa7433cb0a45f6665f85f9743/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-20.c?ref=78796ad54b18ad6aa7433cb0a45f6665f85f9743", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-options \"-maltivec -mcpu=G5 -O2\" } */\n+\n+#include <altivec.h>\n+\n+void foo( float scalar)\n+{\n+    unsigned long width;\n+    unsigned long x;\n+    vector float vColor;\n+    vector unsigned int selectMask;\n+    vColor = vec_perm( vec_ld( 0, &scalar), vec_ld( 3, &scalar), vec_lvsl( 0, &scalar) );\n+\n+    float *destRow;\n+    vector float store, load0;\n+\n+    for( ; x < width; x++)\n+    {\n+            load0 = vec_sel( vColor, load0, selectMask );\n+            vec_st( store, 0, destRow );\n+            store = load0;\n+    }\n+}"}]}