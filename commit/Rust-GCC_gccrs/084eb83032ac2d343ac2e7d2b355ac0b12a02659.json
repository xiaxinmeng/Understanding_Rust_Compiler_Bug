{"sha": "084eb83032ac2d343ac2e7d2b355ac0b12a02659", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg0ZWI4MzAzMmFjMmQzNDNhYzJlN2QyYjM1NWFjMGIxMmEwMjY1OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-11-12T22:18:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-11-12T22:18:03Z"}, "message": "re PR c++/36478 (warning not emitted when code expanded from macro)\n\n\tPR c++/36478\n\tRevert:\n\t2007-05-07  Mike Stump  <mrs@apple.com>\n\t* doc/invoke.texi (Warning Options): Document that -Wempty-body\n\talso checks for and while statements in C++.\n\n\tRevert:\n\t2007-05-07  Mike Stump  <mrs@apple.com>\n\t* parser.c (check_empty_body): Add.\n\t(cp_parser_iteration_statement): Add call to check_empty_body.\n\n\t* g++.old-deja/g++.mike/empty.C: Remove.\n\nFrom-SVN: r141810", "tree": {"sha": "60277d5e6bb370c59d9ff52ffd5e37282c1fdd45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60277d5e6bb370c59d9ff52ffd5e37282c1fdd45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/084eb83032ac2d343ac2e7d2b355ac0b12a02659", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/084eb83032ac2d343ac2e7d2b355ac0b12a02659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/084eb83032ac2d343ac2e7d2b355ac0b12a02659", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/084eb83032ac2d343ac2e7d2b355ac0b12a02659/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b20f353f6c35385c5e473672ed373e4470df908", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b20f353f6c35385c5e473672ed373e4470df908", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b20f353f6c35385c5e473672ed373e4470df908"}], "stats": {"total": 94, "additions": 22, "deletions": 72}, "files": [{"sha": "f36a6667f3c4e80b89813a0e78bc4f59930643dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084eb83032ac2d343ac2e7d2b355ac0b12a02659/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084eb83032ac2d343ac2e7d2b355ac0b12a02659/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=084eb83032ac2d343ac2e7d2b355ac0b12a02659", "patch": "@@ -1,3 +1,11 @@\n+2008-11-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/36478\n+\tRevert:\n+\t2007-05-07  Mike Stump  <mrs@apple.com>\n+\t* doc/invoke.texi (Warning Options): Document that -Wempty-body\n+\talso checks for and while statements in C++.\n+\n 2008-11-12  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR debug/27574"}, {"sha": "0a956d835844fa405347d8aee50635c2f20d4341", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084eb83032ac2d343ac2e7d2b355ac0b12a02659/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084eb83032ac2d343ac2e7d2b355ac0b12a02659/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=084eb83032ac2d343ac2e7d2b355ac0b12a02659", "patch": "@@ -1,3 +1,11 @@\n+2008-11-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/36478\n+\tRevert:\n+\t2007-05-07  Mike Stump  <mrs@apple.com>\n+\t* parser.c (check_empty_body): Add.\n+\t(cp_parser_iteration_statement): Add call to check_empty_body.\n+\n 2008-11-12  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/38007"}, {"sha": "ba8759c954c8c4b054a9ab55f6898c4c1c0aacca", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084eb83032ac2d343ac2e7d2b355ac0b12a02659/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084eb83032ac2d343ac2e7d2b355ac0b12a02659/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=084eb83032ac2d343ac2e7d2b355ac0b12a02659", "patch": "@@ -7427,48 +7427,6 @@ cp_parser_condition (cp_parser* parser)\n   return cp_parser_expression (parser, /*cast_p=*/false);\n }\n \n-/* We check for a ) immediately followed by ; with no whitespacing\n-   between.  This is used to issue a warning for:\n-\n-     while (...);\n-\n-   and:\n-\n-     for (...);\n-\n-   as the semicolon is probably extraneous.\n-\n-   On parse errors, the next token might not be a ), so do nothing in\n-   that case. */\n-\n-static void\n-check_empty_body (cp_parser* parser, const char* type)\n-{\n-  cp_token *token;\n-  cp_token *close_paren;\n-  expanded_location close_loc;\n-  expanded_location semi_loc;\n-  \n-  close_paren = cp_lexer_peek_token (parser->lexer);\n-  if (close_paren->type != CPP_CLOSE_PAREN)\n-    return;\n-\n-  close_loc = expand_location (close_paren->location);\n-  token = cp_lexer_peek_nth_token (parser->lexer, 2);\n-\n-  if (token->type != CPP_SEMICOLON\n-      || (token->flags & PREV_WHITE))\n-    return;\n-\n-  semi_loc =  expand_location (token->location);\n-  if (close_loc.line == semi_loc.line\n-      && close_loc.column+1 == semi_loc.column)\n-    warning (OPT_Wempty_body,\n-\t     \"suggest a space before %<;%> or explicit braces around empty \"\n-\t     \"body in %<%s%> statement\",\n-\t     type);\n-}\n-\n /* Parse an iteration-statement.\n \n    iteration-statement:\n@@ -7511,7 +7469,6 @@ cp_parser_iteration_statement (cp_parser* parser)\n \t/* Parse the condition.  */\n \tcondition = cp_parser_condition (parser);\n \tfinish_while_stmt_cond (condition, statement);\n-\tcheck_empty_body (parser, \"while\");\n \t/* Look for the `)'.  */\n \tcp_parser_require (parser, CPP_CLOSE_PAREN, \"%<)%>\");\n \t/* Parse the dependent statement.  */\n@@ -7573,7 +7530,6 @@ cp_parser_iteration_statement (cp_parser* parser)\n \tif (cp_lexer_next_token_is_not (parser->lexer, CPP_CLOSE_PAREN))\n \t  expression = cp_parser_expression (parser, /*cast_p=*/false);\n \tfinish_for_expr (expression, statement);\n-\tcheck_empty_body (parser, \"for\");\n \t/* Look for the `)'.  */\n \tcp_parser_require (parser, CPP_CLOSE_PAREN, \"%<)%>\");\n "}, {"sha": "3f6f400f6dcc593fc966bd4a751550b5bef18b69", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084eb83032ac2d343ac2e7d2b355ac0b12a02659/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084eb83032ac2d343ac2e7d2b355ac0b12a02659/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=084eb83032ac2d343ac2e7d2b355ac0b12a02659", "patch": "@@ -3678,9 +3678,7 @@ integers are disabled by default in C++ unless\n @opindex Wempty-body\n @opindex Wno-empty-body\n Warn if an empty body occurs in an @samp{if}, @samp{else} or @samp{do\n-while} statement.  Additionally, in C++, warn when an empty body occurs\n-in a @samp{while} or @samp{for} statement with no whitespacing before\n-the semicolon.  This warning is also enabled by @option{-Wextra}.\n+while} statement.  This warning is also enabled by @option{-Wextra}.\n \n @item -Wenum-compare @r{(C++ and Objective-C++ only)}\n @opindex Wenum-compare"}, {"sha": "74c5006ae5d1be87bd6147015e2722ddb670d2bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084eb83032ac2d343ac2e7d2b355ac0b12a02659/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084eb83032ac2d343ac2e7d2b355ac0b12a02659/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=084eb83032ac2d343ac2e7d2b355ac0b12a02659", "patch": "@@ -1,3 +1,8 @@\n+2008-11-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/36478\n+\t* g++.old-deja/g++.mike/empty.C: Remove.\n+\n 2008-11-12  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR debug/27574"}, {"sha": "c36942e320026ed83c887142bc58ac414bd4a9c0", "filename": "gcc/testsuite/g++.old-deja/g++.mike/empty.C", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b20f353f6c35385c5e473672ed373e4470df908/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fempty.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b20f353f6c35385c5e473672ed373e4470df908/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fempty.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fempty.C?ref=6b20f353f6c35385c5e473672ed373e4470df908", "patch": "@@ -1,25 +0,0 @@\n-// { dg-options \"-W\" }\n-\n-#define NOPE\n-\n-void foo() {\n-  while (1); /* { dg-warning \"suggest a space before \" } */\n-    {\n-    }\n-  for (;;); /* { dg-warning \"suggest a space before \" } */\n-    {\n-    }\n-  while (1)\n-    ;\n-  for (;;)\n-    ;\n-  while (1) ;\n-  for (;;) ;\n-  /* These two work when using mapped locations */\n-  while (1) NOPE; /* { dg-bogus \"suggest a space before \" \"suggest\" } */\n-  for (;;) NOPE; /* { dg-bogus \"suggest a space before \" \"suggest\" } */\n-  while (1)\n-    NOPE;\n-  for (;;)\n-    NOPE;\n-}"}]}