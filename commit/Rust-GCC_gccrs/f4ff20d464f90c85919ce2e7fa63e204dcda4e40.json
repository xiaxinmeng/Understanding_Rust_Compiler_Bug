{"sha": "f4ff20d464f90c85919ce2e7fa63e204dcda4e40", "node_id": "C_kwDOANBUbNoAKGY0ZmYyMGQ0NjRmOTBjODU5MTljZTJlN2ZhNjNlMjA0ZGNkYTRlNDA", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-08-12T11:28:41Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-08-12T11:28:41Z"}, "message": "sve: Fix fcmuo combine patterns [PR106524]\n\nThere's no encoding for fcmuo with zero.  This restricts the combine patterns\nfrom accepting zero registers.\n\ngcc/ChangeLog:\n\n\tPR target/106524\n\t* config/aarch64/aarch64-sve.md (*fcmuo<mode>_nor_combine,\n\t*fcmuo<mode>_bic_combine): Don't accept comparisons against zero.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/106524\n\t* gcc.target/aarch64/sve/pr106524.c: New test.", "tree": {"sha": "179246fd5aa1757653a451341bcea38cdf3d0198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/179246fd5aa1757653a451341bcea38cdf3d0198"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4ff20d464f90c85919ce2e7fa63e204dcda4e40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ff20d464f90c85919ce2e7fa63e204dcda4e40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4ff20d464f90c85919ce2e7fa63e204dcda4e40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ff20d464f90c85919ce2e7fa63e204dcda4e40/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e3b45befdbbf1a1f9ff728fa2bac31b4756907c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e3b45befdbbf1a1f9ff728fa2bac31b4756907c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e3b45befdbbf1a1f9ff728fa2bac31b4756907c"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "e08bee197d8570c3e4e50068febc819d6e85cce0", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4ff20d464f90c85919ce2e7fa63e204dcda4e40/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4ff20d464f90c85919ce2e7fa63e204dcda4e40/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=f4ff20d464f90c85919ce2e7fa63e204dcda4e40", "patch": "@@ -8231,7 +8231,7 @@\n \t        [(match_operand:<VPRED> 1)\n \t         (const_int SVE_KNOWN_PTRUE)\n \t         (match_operand:SVE_FULL_F 2 \"register_operand\" \"w\")\n-\t         (match_operand:SVE_FULL_F 3 \"aarch64_simd_reg_or_zero\" \"wDz\")]\n+\t         (match_operand:SVE_FULL_F 3 \"register_operand\" \"w\")]\n \t        UNSPEC_COND_FCMUO))\n \t    (match_operand:<VPRED> 4 \"register_operand\" \"Upa\"))\n \t  (match_dup:<VPRED> 1)))\n@@ -8267,7 +8267,7 @@\n \t        [(match_operand:<VPRED> 1)\n \t         (const_int SVE_KNOWN_PTRUE)\n \t         (match_operand:SVE_FULL_F 2 \"register_operand\" \"w\")\n-\t         (match_operand:SVE_FULL_F 3 \"aarch64_simd_reg_or_zero\" \"wDz\")]\n+\t         (match_operand:SVE_FULL_F 3 \"register_operand\" \"w\")]\n \t        UNSPEC_COND_FCMUO))\n \t    (not:<VPRED>\n \t      (match_operand:<VPRED> 4 \"register_operand\" \"Upa\")))"}, {"sha": "a9f650f971a5cb5ad993f50aadfcac3a8c664a8b", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pr106524.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4ff20d464f90c85919ce2e7fa63e204dcda4e40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr106524.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4ff20d464f90c85919ce2e7fa63e204dcda4e40/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr106524.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr106524.c?ref=f4ff20d464f90c85919ce2e7fa63e204dcda4e40", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv8-a+sve -O2 -fno-move-loop-invariants\" } */\n+\n+void\n+test__zero (int *restrict dest, int *restrict src, float *a, int count)\n+{\n+  int i;\n+\n+  for (i = 0; i < count; ++i)\n+    dest[i] = !__builtin_isunordered (a[i], 0) ? src[i] : 0;\n+}"}]}