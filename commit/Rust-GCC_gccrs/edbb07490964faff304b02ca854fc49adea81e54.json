{"sha": "edbb07490964faff304b02ca854fc49adea81e54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRiYjA3NDkwOTY0ZmFmZjMwNGIwMmNhODU0ZmM0OWFkZWE4MWU1NA==", "commit": {"author": {"name": "Evgeny Stupachenko", "email": "evstupac@gmail.com", "date": "2014-06-05T10:26:18Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-06-05T10:26:18Z"}, "message": "sse.md (*ssse3_palignr<mode>_perm): New.\n\ngcc/\n\t* config/i386/sse.md (*ssse3_palignr<mode>_perm): New.\n\t* config/i386/predicates.md (palignr_operand): New.\n\tIndicates if permutation is suitable for palignr instruction.\n\nFrom-SVN: r211264", "tree": {"sha": "f2ff46659084837e30d6fabdd0b85affdb2ab6e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2ff46659084837e30d6fabdd0b85affdb2ab6e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edbb07490964faff304b02ca854fc49adea81e54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edbb07490964faff304b02ca854fc49adea81e54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edbb07490964faff304b02ca854fc49adea81e54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edbb07490964faff304b02ca854fc49adea81e54/comments", "author": {"login": "evstupac", "id": 38332307, "node_id": "MDQ6VXNlcjM4MzMyMzA3", "avatar_url": "https://avatars.githubusercontent.com/u/38332307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evstupac", "html_url": "https://github.com/evstupac", "followers_url": "https://api.github.com/users/evstupac/followers", "following_url": "https://api.github.com/users/evstupac/following{/other_user}", "gists_url": "https://api.github.com/users/evstupac/gists{/gist_id}", "starred_url": "https://api.github.com/users/evstupac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evstupac/subscriptions", "organizations_url": "https://api.github.com/users/evstupac/orgs", "repos_url": "https://api.github.com/users/evstupac/repos", "events_url": "https://api.github.com/users/evstupac/events{/privacy}", "received_events_url": "https://api.github.com/users/evstupac/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e12355efb750245dbf58be8b054f2ab360d53f9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e12355efb750245dbf58be8b054f2ab360d53f9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e12355efb750245dbf58be8b054f2ab360d53f9e"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "6167424f7762ab9c736a7f4a754f9a617d0b935b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edbb07490964faff304b02ca854fc49adea81e54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edbb07490964faff304b02ca854fc49adea81e54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edbb07490964faff304b02ca854fc49adea81e54", "patch": "@@ -1,3 +1,9 @@\n+2014-06-05  Evgeny Stupachenko  <evstupac@gmail.com>\n+\n+\t* config/i386/sse.md (*ssse3_palignr<mode>_perm): New.\n+\t* config/i386/predicates.md (palignr_operand): New.\n+\tIndicates if permutation is suitable for palignr instruction.\n+\n 2014-06-05  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR tree-optimization/61319"}, {"sha": "300c1688d2638dea97d3e8017d0e3eb80027873b", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edbb07490964faff304b02ca854fc49adea81e54/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edbb07490964faff304b02ca854fc49adea81e54/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=edbb07490964faff304b02ca854fc49adea81e54", "patch": "@@ -1425,6 +1425,22 @@\n   return true;\n })\n \n+;; Return true if OP is a parallel for a palignr permute.\n+(define_predicate \"palignr_operand\"\n+  (and (match_code \"parallel\")\n+       (match_code \"const_int\" \"a\"))\n+{\n+  int elt = INTVAL (XVECEXP (op, 0, 0));\n+  int i, nelt = XVECLEN (op, 0);\n+\n+  /* Check that an order in the permutation is suitable for palignr.\n+     For example, {5 6 7 0 1 2 3 4} is \"palignr 5, xmm, xmm\".  */\n+  for (i = 1; i < nelt; ++i)\n+    if (INTVAL (XVECEXP (op, 0, i)) != ((elt + i) % nelt))\n+      return false;\n+  return true;\n+})\n+\n ;; Return true if OP is a proper third operand to vpblendw256.\n (define_predicate \"avx2_pblendw_operand\"\n   (match_code \"const_int\")"}, {"sha": "d9073535d0eabcdfd3f63708e7e8c2c87caaea9f", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edbb07490964faff304b02ca854fc49adea81e54/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edbb07490964faff304b02ca854fc49adea81e54/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=edbb07490964faff304b02ca854fc49adea81e54", "patch": "@@ -14551,6 +14551,35 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+(define_insn \"*ssse3_palignr<mode>_perm\"\n+  [(set (match_operand:V_128 0 \"register_operand\" \"=x,x\")\n+      (vec_select:V_128\n+\t(match_operand:V_128 1 \"register_operand\" \"0,x\")\n+\t(match_parallel 2 \"palignr_operand\"\n+\t  [(match_operand 3 \"const_int_operand\" \"n, n\")])))]\n+  \"TARGET_SSSE3\"\n+{\n+  enum machine_mode imode = GET_MODE_INNER (GET_MODE (operands[0]));\n+  operands[2] = GEN_INT (INTVAL (operands[3]) * GET_MODE_SIZE (imode));\n+\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"palignr\\t{%2, %1, %0|%0, %1, %2}\";\n+    case 1:\n+      return \"vpalignr\\t{%2, %1, %1, %0|%0, %1, %1, %2}\";\n+    default:\n+      gcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseishft\")\n+   (set_attr \"atom_unit\" \"sishuf\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")])\n+\n (define_expand \"avx_vinsertf128<mode>\"\n   [(match_operand:V_256 0 \"register_operand\")\n    (match_operand:V_256 1 \"register_operand\")"}]}