{"sha": "3a03bffd4873ae4efa21c360cc6d147fee7365a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EwM2JmZmQ0ODczYWU0ZWZhMjFjMzYwY2M2ZDE0N2ZlZTczNjVhNw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-12-28T19:26:14Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-12-28T19:26:14Z"}, "message": "tree-ssa-strlen.c (maybe_diag_stxncpy_trunc): Avoid undesirable warning.\n\n\t* tree-ssa-strlen.c (maybe_diag_stxncpy_trunc): Avoid\n\tundesirable warning.\n\nFrom-SVN: r267454", "tree": {"sha": "7e048a29f41d9d0f464248573f97e149b4fea3b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e048a29f41d9d0f464248573f97e149b4fea3b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a03bffd4873ae4efa21c360cc6d147fee7365a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a03bffd4873ae4efa21c360cc6d147fee7365a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a03bffd4873ae4efa21c360cc6d147fee7365a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a03bffd4873ae4efa21c360cc6d147fee7365a7/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "766d4a59256eba5112d1d46e41565157c0edef67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/766d4a59256eba5112d1d46e41565157c0edef67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/766d4a59256eba5112d1d46e41565157c0edef67"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "e79809c50f672cdbdb247b533b2bcc30c5873fcb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a03bffd4873ae4efa21c360cc6d147fee7365a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a03bffd4873ae4efa21c360cc6d147fee7365a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a03bffd4873ae4efa21c360cc6d147fee7365a7", "patch": "@@ -1,3 +1,8 @@\n+2018-12-28  Martin Sebor  <msebor@redhat.com>\n+\n+\t* tree-ssa-strlen.c (maybe_diag_stxncpy_trunc): Avoid\n+\tundesirable warning.\n+\n 2018-12-28  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* omp-expand.c (expand_omp_target): Restructure OpenACC vs. OpenMP"}, {"sha": "c74ce0feac5fbf513e3aa58bb8a3c6a7bd873a01", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a03bffd4873ae4efa21c360cc6d147fee7365a7/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a03bffd4873ae4efa21c360cc6d147fee7365a7/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=3a03bffd4873ae4efa21c360cc6d147fee7365a7", "patch": "@@ -2114,6 +2114,13 @@ maybe_diag_stxncpy_trunc (gimple_stmt_iterator gsi, tree src, tree cnt)\n       if (wi::to_wide (dstsize) != cntrange[1])\n \treturn false;\n \n+      /* Avoid warning for strncpy(a, b, N) calls where the following\n+\t equalities hold:\n+\t   N == sizeof a && N == sizeof b */\n+      if (tree srcsize = compute_objsize (src, 1))\n+\tif (wi::to_wide (srcsize) == cntrange[1])\n+\t  return false;\n+\n       if (cntrange[0] == cntrange[1])\n \treturn warning_at (callloc, OPT_Wstringop_truncation,\n \t\t\t   \"%G%qD specified bound %E equals destination size\","}]}