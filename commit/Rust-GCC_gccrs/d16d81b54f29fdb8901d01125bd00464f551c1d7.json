{"sha": "d16d81b54f29fdb8901d01125bd00464f551c1d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE2ZDgxYjU0ZjI5ZmRiODkwMWQwMTEyNWJkMDA0NjRmNTUxYzFkNw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2017-09-23T13:15:20Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2017-09-23T13:15:20Z"}, "message": "re PR fortran/82143 (add a -fdefault-real-16 flag)\n\n2017-09-23  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/82143\n\t* lang.opt: Add the options -fdefault-real-10 and -fdefault-real-16.\n\tRename flag_default_real to flag_default_real_8.\n\t* invoke.texi: Add documentation.\n\t* module.c (use_iso_fortran_env_module): flag_default_real is renamed.\n\t* trans-types.c (gfc_init_kinds): Implement the flags\n\t-fdefault-real-10 and -fdefault-real-16. Make -fdefault-double-8 work\n\twithout -fdefault-real-8.\n\n2017-09-23  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/82143\n\t* gfortran.dg/promotion_3.f90: New test case.\n\t* gfortran.dg/promotion_4.f90: New test case.\n\nFrom-SVN: r253117", "tree": {"sha": "ccd358e62d41b796f12904b956dea9450ef1e93b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccd358e62d41b796f12904b956dea9450ef1e93b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d16d81b54f29fdb8901d01125bd00464f551c1d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16d81b54f29fdb8901d01125bd00464f551c1d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d16d81b54f29fdb8901d01125bd00464f551c1d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16d81b54f29fdb8901d01125bd00464f551c1d7/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89762a83cdc24a5a9471acdc4676d150d3c71a11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89762a83cdc24a5a9471acdc4676d150d3c71a11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89762a83cdc24a5a9471acdc4676d150d3c71a11"}], "stats": {"total": 121, "additions": 108, "deletions": 13}, "files": [{"sha": "c3c4f18873705abf3593751509a6de3e8ee0677d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d16d81b54f29fdb8901d01125bd00464f551c1d7", "patch": "@@ -1,3 +1,14 @@\n+2017-09-23  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/82143\n+\t* lang.opt: Add the options -fdefault-real-10 and -fdefault-real-16.\n+\tRename flag_default_real to flag_default_real_8.\n+\t* invoke.texi: Add documentation.\n+\t* module.c (use_iso_fortran_env_module): flag_default_real is renamed.\n+\t* trans-types.c (gfc_init_kinds): Implement the flags\n+\t-fdefault-real-10 and -fdefault-real-16. Make -fdefault-double-8 work\n+\twithout -fdefault-real-8.\n+\n 2017-09-21  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/52832"}, {"sha": "f3f931fd3da844387223fc9cd7b8a3bfc80790a2", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=d16d81b54f29fdb8901d01125bd00464f551c1d7", "patch": "@@ -119,8 +119,8 @@ by type.  Explanations are in the following sections.\n @gccoptlist{-fall-intrinsics -fbackslash -fcray-pointer -fd-lines-as-code @gol\n -fd-lines-as-comments @gol\n -fdec -fdec-structure -fdec-intrinsic-ints -fdec-static -fdec-math @gol\n--fdefault-double-8 -fdefault-integer-8 @gol\n--fdefault-real-8 -fdollar-ok -ffixed-line-length-@var{n} @gol\n+-fdefault-double-8 -fdefault-integer-8 -fdefault-real-8 @gol\n+-fdefault-real-10 -fdefault-real-16 -fdollar-ok -ffixed-line-length-@var{n} @gol\n -ffixed-line-length-none -ffree-form -ffree-line-length-@var{n} @gol\n -ffree-line-length-none -fimplicit-none -finteger-4-integer-8 @gol\n -fmax-identifier-length -fmodule-private -ffixed-form -fno-range-check @gol\n@@ -404,6 +404,22 @@ the default width of @code{DOUBLE PRECISION} to 16 bytes if possible, unless\n @code{-fdefault-double-8} is given, too. Unlike @option{-freal-4-real-8},\n it does not promote variables with explicit kind declaration.\n \n+@item -fdefault-real-10\n+@opindex @code{fdefault-real-10}\n+Set the default real type to a 10 byte wide type. This option also affects\n+the kind of non-double real constants like @code{1.0}, and does promote\n+the default width of @code{DOUBLE PRECISION} to 16 bytes if possible, unless\n+@code{-fdefault-double-8} is given. Unlike @option{-freal-4-real-10},\n+it does not promote variables with explicit kind declaration.\n+\n+@item -fdefault-real-16\n+@opindex @code{fdefault-real-16}\n+Set the default real type to a 16 byte wide type. This option also affects\n+the kind of non-double real constants like @code{1.0}, and does promote\n+the default width of @code{DOUBLE PRECISION} to 16 bytes if possible, unless\n+@code{-fdefault-double-8} is given. Unlike @option{-freal-4-real-16},\n+it does not promote variables with explicit kind declaration.\n+\n @item -fdefault-double-8\n @opindex @code{fdefault-double-8}\n Set the @code{DOUBLE PRECISION} type to an 8 byte wide type.  Do nothing if this"}, {"sha": "34341e5b35bf877aa47e42f8ad9cd5737dfeb7aa", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=d16d81b54f29fdb8901d01125bd00464f551c1d7", "patch": "@@ -457,9 +457,17 @@ Fortran Var(flag_default_integer)\n Set the default integer kind to an 8 byte wide type.\n \n fdefault-real-8\n-Fortran Var(flag_default_real)\n+Fortran Var(flag_default_real_8)\n Set the default real kind to an 8 byte wide type.\n \n+fdefault-real-10\n+Fortran Var(flag_default_real_10)\n+Set the default real kind to an 10 byte wide type.\n+\n+fdefault-real-16\n+Fortran Var(flag_default_real_16)\n+Set the default real kind to an 16 byte wide type.\n+\n fdollar-ok\n Fortran Var(flag_dollar_ok)\n Allow dollar signs in entity names."}, {"sha": "63877a080500c790bc7fa4bb8f3e95946232200b", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=d16d81b54f29fdb8901d01125bd00464f551c1d7", "patch": "@@ -6741,7 +6741,7 @@ use_iso_fortran_env_module (void)\n \t\t\t\t   \"standard\", symbol[i].name, &u->where))\n \t        continue;\n \n-\t      if ((flag_default_integer || flag_default_real)\n+\t      if ((flag_default_integer || flag_default_real_8)\n \t\t  && symbol[i].id == ISOFORTRANENV_NUMERIC_STORAGE_SIZE)\n \t\tgfc_warning_now (0, \"Use of the NUMERIC_STORAGE_SIZE named \"\n \t\t\t\t \"constant from intrinsic module \"\n@@ -6808,7 +6808,7 @@ use_iso_fortran_env_module (void)\n \t  if ((gfc_option.allow_std & symbol[i].standard) == 0)\n \t    continue;\n \n-\t  if ((flag_default_integer || flag_default_real)\n+\t  if ((flag_default_integer || flag_default_real_8)\n \t      && symbol[i].id == ISOFORTRANENV_NUMERIC_STORAGE_SIZE)\n \t    gfc_warning_now (0,\n \t\t\t     \"Use of the NUMERIC_STORAGE_SIZE named constant \""}, {"sha": "78477a90f80c3d73104a17d240ed3fe5483eabdb", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=d16d81b54f29fdb8901d01125bd00464f551c1d7", "patch": "@@ -530,14 +530,30 @@ gfc_init_kinds (void)\n     }\n \n   /* Choose the default real kind.  Again, we choose 4 when possible.  */\n-  if (flag_default_real)\n+  if (flag_default_real_8)\n     {\n       if (!saw_r8)\n \tgfc_fatal_error (\"REAL(KIND=8) is not available for \"\n \t\t\t \"%<-fdefault-real-8%> option\");\n \n       gfc_default_real_kind = 8;\n     }\n+  else if (flag_default_real_10)\n+  {\n+    if (!saw_r10)\n+      gfc_fatal_error (\"REAL(KIND=10) is not available for \"\n+\t\t\t\"%<-fdefault-real-10%> option\");\n+\n+    gfc_default_real_kind = 10;\n+  }\n+  else if (flag_default_real_16)\n+  {\n+    if (!saw_r16)\n+      gfc_fatal_error (\"REAL(KIND=16) is not available for \"\n+\t\t\t\"%<-fdefault-real-16%> option\");\n+\n+    gfc_default_real_kind = 16;\n+  }\n   else if (flag_real4_kind == 8)\n   {\n     if (!saw_r8)\n@@ -571,14 +587,20 @@ gfc_init_kinds (void)\n      are specified, we use kind=8, if it's available.  If -fdefault-real is\n      specified without -fdefault-double, we use kind=16, if it's available.\n      Otherwise we do not change anything.  */\n-  if (flag_default_double && !flag_default_real)\n-    gfc_fatal_error (\"Use of %<-fdefault-double-8%> requires \"\n-\t\t     \"%<-fdefault-real-8%>\");\n-\n-  if (flag_default_real && flag_default_double && saw_r8)\n+  if (flag_default_double && saw_r8)\n     gfc_default_double_kind = 8;\n-  else if (flag_default_real && saw_r16)\n-    gfc_default_double_kind = 16;\n+  else if (flag_default_real_8 || flag_default_real_10 || flag_default_real_16)\n+    {\n+      /* Use largest available kind.  */\n+      if (saw_r16)\n+\tgfc_default_double_kind = 16;\n+      else if (saw_r10)\n+\tgfc_default_double_kind = 10;\n+      else if (saw_r8)\n+\tgfc_default_double_kind = 8;\n+      else\n+\tgfc_default_double_kind = gfc_default_real_kind;\n+    }\n   else if (flag_real8_kind == 4)\n     {\n       if (!saw_r4)"}, {"sha": "c1a38f8add3649ec73162aee35fa3148f6b9633b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d16d81b54f29fdb8901d01125bd00464f551c1d7", "patch": "@@ -1,3 +1,9 @@\n+2017-09-23  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/82143\n+\t* gfortran.dg/promotion_3.f90: New test case.\n+\t* gfortran.dg/promotion_4.f90: New test case.\n+\n 2017-09-23  Daniel Santos  <daniel.santos@pobox.com>\n \n \t* gcc.target/i386/pr82196-1.c: (b): Remove volatile asm."}, {"sha": "7c9b5917fc8f013c32fdc43d0551af7a2bc84e5e", "filename": "gcc/testsuite/gfortran.dg/promotion_3.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ftestsuite%2Fgfortran.dg%2Fpromotion_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ftestsuite%2Fgfortran.dg%2Fpromotion_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpromotion_3.f90?ref=d16d81b54f29fdb8901d01125bd00464f551c1d7", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do run }\n+! { dg-options \"-fdefault-real-16\" }\n+!\n+! PR 82143: add a -fdefault-real-16 flag\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+real :: r\n+real(kind=4) :: r4\n+real(kind=8) :: r8\n+double precision :: d\n+if (kind(r4) /= 4) call abort\n+if (kind(r8) /= 8) call abort\n+if (kind(r) /= 16) call abort\n+if (kind(d) /= 16) call abort\n+end"}, {"sha": "0aa1c8edbc4c97bff133a8faba9e276d1d209472", "filename": "gcc/testsuite/gfortran.dg/promotion_4.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ftestsuite%2Fgfortran.dg%2Fpromotion_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16d81b54f29fdb8901d01125bd00464f551c1d7/gcc%2Ftestsuite%2Fgfortran.dg%2Fpromotion_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpromotion_4.f90?ref=d16d81b54f29fdb8901d01125bd00464f551c1d7", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do run }\n+! { dg-options \"-fdefault-real-10\" }\n+!\n+! PR 82143: add a -fdefault-real-16 flag\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+real :: r\n+real(kind=4) :: r4\n+real(kind=8) :: r8\n+double precision :: d\n+if (kind(r4) /= 4) call abort\n+if (kind(r8) /= 8) call abort\n+if (kind(r) /= 10) call abort\n+if (kind(d) /= 16) call abort\n+end"}]}