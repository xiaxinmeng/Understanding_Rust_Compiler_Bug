{"sha": "4dfb8a2a60a582b0a1cab65f34d706cf961c9d20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRmYjhhMmE2MGE1ODJiMGExY2FiNjVmMzRkNzA2Y2Y5NjFjOWQyMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-10-09T11:18:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-10-09T11:18:53Z"}, "message": "re PR tree-optimization/77901 (ICE in tree-sse-reassoc,c:2881)\n\n\tPR tree-optimization/77901\n\t* tree-ssa-reassoc.c (optimize_range_tests_var_bound): Only optimize\n\tif ranges[i].exp is SSA_NAME when looking for >= and only when\n\tranges[i].exp is NULL or SSA_NAME when looking for the other\n\tcomparison.\n\n\t* gcc.c-torture/compile/pr77901.c: New test.\n\nFrom-SVN: r240899", "tree": {"sha": "575c2ff14712a649731088bf4d9e47de753bc32b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/575c2ff14712a649731088bf4d9e47de753bc32b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "67b974787c1e77ebebb4f36cdf09ac11a5690f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b974787c1e77ebebb4f36cdf09ac11a5690f43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b974787c1e77ebebb4f36cdf09ac11a5690f43"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "02a286806ee79d3ecbb6909a2b62ea6bf391cf68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4dfb8a2a60a582b0a1cab65f34d706cf961c9d20", "patch": "@@ -1,3 +1,11 @@\n+2016-10-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/77901\n+\t* tree-ssa-reassoc.c (optimize_range_tests_var_bound): Only optimize\n+\tif ranges[i].exp is SSA_NAME when looking for >= and only when\n+\tranges[i].exp is NULL or SSA_NAME when looking for the other\n+\tcomparison.\n+\n 2016-10-09  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* ipa-cp.c (ipcp_alignment_lattice): Remove."}, {"sha": "ec2825978a3bc72cbac579dda1f3445d9d4fddd1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4dfb8a2a60a582b0a1cab65f34d706cf961c9d20", "patch": "@@ -1,3 +1,8 @@\n+2016-10-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/77901\n+\t* gcc.c-torture/compile/pr77901.c: New test.\n+\n 2016-10-09  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* gcc.dg/ipa/propalign-1.c: Adjust scan-ipa-dump."}, {"sha": "5c3936af65ad3c91bb68d6f3cd5912d1ccf7d50e", "filename": "gcc/testsuite/gcc.c-torture/compile/pr77901.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77901.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77901.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr77901.c?ref=4dfb8a2a60a582b0a1cab65f34d706cf961c9d20", "patch": "@@ -0,0 +1,10 @@\n+/* PR tree-optimization/77901 */\n+\n+void bar (void);\n+\n+void\n+foo (int *x, long *y)\n+{\n+  if (*y && *x != 10 && *x != 12 && *y >= 0)\n+    bar ();\n+}"}, {"sha": "76663654815bc4132d06d77c9e4e478b9e692632", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfb8a2a60a582b0a1cab65f34d706cf961c9d20/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=4dfb8a2a60a582b0a1cab65f34d706cf961c9d20", "patch": "@@ -2846,7 +2846,9 @@ optimize_range_tests_var_bound (enum tree_code opcode, int first, int length,\n \n   for (i = first; i < length; i++)\n     {\n-      if (ranges[i].exp == NULL_TREE || !ranges[i].in_p)\n+      if (ranges[i].exp == NULL_TREE\n+\t  || TREE_CODE (ranges[i].exp) != SSA_NAME\n+\t  || !ranges[i].in_p)\n \tcontinue;\n \n       tree type = TREE_TYPE (ranges[i].exp);\n@@ -2878,6 +2880,8 @@ optimize_range_tests_var_bound (enum tree_code opcode, int first, int length,\n       tree rhs1, rhs2;\n       if (ranges[i].exp)\n \t{\n+\t  if (TREE_CODE (ranges[i].exp) != SSA_NAME)\n+\t    continue;\n \t  stmt = SSA_NAME_DEF_STMT (ranges[i].exp);\n \t  if (!is_gimple_assign (stmt))\n \t    continue;"}]}