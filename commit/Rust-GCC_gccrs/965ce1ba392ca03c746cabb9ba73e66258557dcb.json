{"sha": "965ce1ba392ca03c746cabb9ba73e66258557dcb", "node_id": "C_kwDOANBUbNoAKDk2NWNlMWJhMzkyY2EwM2M3NDZjYWJiOWJhNzNlNjYyNTg1NTdkY2I", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-09T22:20:06Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-11-09T22:20:06Z"}, "message": "analyzer: better logging of event creation\n\ngcc/analyzer/ChangeLog:\n\t* checker-path.cc (checker_event::debug): New.\n\t(checker_path::add_event): Move here from checker-path.h.  Add\n\tlogging.\n\t* checker-path.h (checker_event::debug): New decl.\n\t(checker_path::checker_path): Add logger param.\n\t(checker_path::add_event): Move definition from here to\n\tchecker-path.cc.\n\t(checker_path::m_logger): New field.\n\t* diagnostic-manager.cc\n\t(diagnostic_manager::emit_saved_diagnostic): Pass logger to\n\tchecker_path ctor.\n\t(diagnostic_manager::add_events_for_eedge): Log scope when\n\tprocessing a run of stmts.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "148b0a80d5d76cf4ad1e6f53c8a838a7dedaa932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/148b0a80d5d76cf4ad1e6f53c8a838a7dedaa932"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/965ce1ba392ca03c746cabb9ba73e66258557dcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/965ce1ba392ca03c746cabb9ba73e66258557dcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/965ce1ba392ca03c746cabb9ba73e66258557dcb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/965ce1ba392ca03c746cabb9ba73e66258557dcb/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8c105810285ad97e8af31a328c8a75d4adc5a19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c105810285ad97e8af31a328c8a75d4adc5a19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c105810285ad97e8af31a328c8a75d4adc5a19"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "ffab91c26ff09499d50da1b2c053376dfe19ded5", "filename": "gcc/analyzer/checker-path.cc", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/965ce1ba392ca03c746cabb9ba73e66258557dcb/gcc%2Fanalyzer%2Fchecker-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/965ce1ba392ca03c746cabb9ba73e66258557dcb/gcc%2Fanalyzer%2Fchecker-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fchecker-path.cc?ref=965ce1ba392ca03c746cabb9ba73e66258557dcb", "patch": "@@ -204,6 +204,20 @@ checker_event::dump (pretty_printer *pp) const\n \t     get_location ());\n }\n \n+/* Dump this event to stderr (for debugging/logging purposes).  */\n+\n+DEBUG_FUNCTION void\n+checker_event::debug () const\n+{\n+  pretty_printer pp;\n+  pp_format_decoder (&pp) = default_tree_printer;\n+  pp_show_color (&pp) = pp_show_color (global_dc->printer);\n+  pp.buffer->stream = stderr;\n+  dump (&pp);\n+  pp_newline (&pp);\n+  pp_flush (&pp);\n+}\n+\n /* Hook for being notified when this event has its final id EMISSION_ID\n    and is about to emitted for PD.\n \n@@ -1228,6 +1242,21 @@ checker_path::maybe_log (logger *logger, const char *desc) const\n     }\n }\n \n+void\n+checker_path::add_event (std::unique_ptr<checker_event> event)\n+{\n+  if (m_logger)\n+    {\n+      m_logger->start_log_line ();\n+      m_logger->log_partial (\"added event[%i]: %s \",\n+\t\t\t     m_events.length (),\n+\t\t\t     event_kind_to_string (event.get ()->m_kind));\n+      event.get ()->dump (m_logger->get_printer ());\n+      m_logger->end_log_line ();\n+    }\n+  m_events.safe_push (event.release ());\n+}\n+\n /* Print a multiline form of this path to STDERR.  */\n \n DEBUG_FUNCTION void"}, {"sha": "46f4875f541497a7ca8e97022bda82426ecf3cfa", "filename": "gcc/analyzer/checker-path.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/965ce1ba392ca03c746cabb9ba73e66258557dcb/gcc%2Fanalyzer%2Fchecker-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/965ce1ba392ca03c746cabb9ba73e66258557dcb/gcc%2Fanalyzer%2Fchecker-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fchecker-path.h?ref=965ce1ba392ca03c746cabb9ba73e66258557dcb", "patch": "@@ -118,6 +118,7 @@ class checker_event : public diagnostic_event\n   }\n \n   void dump (pretty_printer *pp) const;\n+  void debug () const;\n \n   void set_location (location_t loc) { m_loc = loc; }\n \n@@ -607,7 +608,7 @@ class warning_event : public checker_event\n class checker_path : public diagnostic_path\n {\n public:\n-  checker_path () : diagnostic_path () {}\n+  checker_path (logger *logger) : diagnostic_path (), m_logger (logger) {}\n \n   /* Implementation of diagnostic_path vfuncs.  */\n \n@@ -631,10 +632,7 @@ class checker_path : public diagnostic_path\n \n   void maybe_log (logger *logger, const char *desc) const;\n \n-  void add_event (std::unique_ptr<checker_event> event)\n-  {\n-    m_events.safe_push (event.release ());\n-  }\n+  void add_event (std::unique_ptr<checker_event> event);\n \n   void delete_event (int idx)\n   {\n@@ -711,6 +709,8 @@ class checker_path : public diagnostic_path\n      exploded_node *, so that rewind events can refer to them in their\n      descriptions.  */\n   hash_map <const exploded_node *, diagnostic_event_id_t> m_setjmp_event_ids;\n+\n+  logger *m_logger;\n };\n \n } // namespace ana"}, {"sha": "74cc7369d772ba45b537b68059f00aba07d37a1f", "filename": "gcc/analyzer/diagnostic-manager.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/965ce1ba392ca03c746cabb9ba73e66258557dcb/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/965ce1ba392ca03c746cabb9ba73e66258557dcb/gcc%2Fanalyzer%2Fdiagnostic-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fdiagnostic-manager.cc?ref=965ce1ba392ca03c746cabb9ba73e66258557dcb", "patch": "@@ -1356,7 +1356,7 @@ diagnostic_manager::emit_saved_diagnostic (const exploded_graph &eg,\n \n   /* This is the diagnostic_path subclass that will be built for\n      the diagnostic.  */\n-  checker_path emission_path;\n+  checker_path emission_path (get_logger ());\n \n   /* Populate emission_path with a full description of EPATH.  */\n   build_emission_path (pb, *epath, &emission_path);\n@@ -1963,6 +1963,7 @@ diagnostic_manager::add_events_for_eedge (const path_builder &pb,\n \t   events for them.  */\n \tif (dst_state.m_region_model)\n \t  {\n+\t    log_scope s (get_logger (), \"processing run of stmts\");\n \t    program_state iter_state (dst_state);\n \t    program_point iter_point (dst_point);\n \t    while (1)"}]}