{"sha": "d7ba4df490028a6cec281e104faaba40822f55c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdiYTRkZjQ5MDAyOGE2Y2VjMjgxZTEwNGZhYWJhNDA4MjJmNTVjMQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-04-09T10:45:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-09T10:45:44Z"}, "message": "sem_ch7.adb, [...]: Code clean up...\n\n2009-04-09  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch7.adb, sem_ch10.adb, sem_prag.adb, sem_ch12.adb, sem_util.adb,\n\texp_ch13.adb, sem_ch6.adb, exp_disp.adb, sem_ch8.adb, sem_warn.adb,\n\tsem_cat.adb: Code clean up: use Is_Package_Or_Generic_Package where\n\tpossible to replace an OR of two separate tests.\n\nFrom-SVN: r145823", "tree": {"sha": "fb21360fbb3e4a11c474ee56e7825883679abbcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb21360fbb3e4a11c474ee56e7825883679abbcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7ba4df490028a6cec281e104faaba40822f55c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ba4df490028a6cec281e104faaba40822f55c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7ba4df490028a6cec281e104faaba40822f55c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7ba4df490028a6cec281e104faaba40822f55c1/comments", "author": null, "committer": null, "parents": [{"sha": "923e6ff331d3e4c0109529937c5ee589dfbe93b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923e6ff331d3e4c0109529937c5ee589dfbe93b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/923e6ff331d3e4c0109529937c5ee589dfbe93b8"}], "stats": {"total": 77, "additions": 34, "deletions": 43}, "files": [{"sha": "7db0fd48c01070bdbafdca003849af66b2eaff66", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ba4df490028a6cec281e104faaba40822f55c1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ba4df490028a6cec281e104faaba40822f55c1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d7ba4df490028a6cec281e104faaba40822f55c1", "patch": "@@ -1,3 +1,10 @@\n+2009-04-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch7.adb, sem_ch10.adb, sem_prag.adb, sem_ch12.adb, sem_util.adb,\n+\texp_ch13.adb, sem_ch6.adb, exp_disp.adb, sem_ch8.adb, sem_warn.adb,\n+\tsem_cat.adb: Code clean up: use Is_Package_Or_Generic_Package where\n+\tpossible to replace an OR of two separate tests.\n+\n 2009-04-09  Robert Dewar  <dewar@adacore.com>\n \n \t* binderr.adb, errout.adb, errutil.adb: New circuitry for handling"}, {"sha": "fa708445515c3b0382e77ab2d57b8254c09ba9eb", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ba4df490028a6cec281e104faaba40822f55c1/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ba4df490028a6cec281e104faaba40822f55c1/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=d7ba4df490028a6cec281e104faaba40822f55c1", "patch": "@@ -6757,8 +6757,7 @@ package body Sem_Ch8 is\n                Full_Vis := True;\n \n             elsif Is_Package_Or_Generic_Package (S)\n-              and then (In_Private_Part (S)\n-                         or else In_Package_Body (S))\n+              and then (In_Private_Part (S) or else In_Package_Body (S))\n             then\n                Full_Vis := True;\n "}, {"sha": "af25b1427cd785c65b8e2cc211f825a052e5ed19", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 25, "deletions": 40, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ba4df490028a6cec281e104faaba40822f55c1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ba4df490028a6cec281e104faaba40822f55c1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d7ba4df490028a6cec281e104faaba40822f55c1", "patch": "@@ -1269,10 +1269,9 @@ package body Sem_Prag is\n             elsif Nkind (P) = N_Handled_Sequence_Of_Statements then\n                exit;\n \n-            elsif Nkind (P) = N_Package_Specification then\n-               return;\n-\n-            elsif Nkind (P) = N_Block_Statement then\n+            elsif Nkind_In (P, N_Package_Specification,\n+                               N_Block_Statement)\n+            then\n                return;\n \n             --  Note: the following tests seem a little peculiar, because\n@@ -3540,8 +3539,8 @@ package body Sem_Prag is\n          elsif (C = Convention_Java or else C = Convention_CIL)\n            and then\n              (Is_Package_Or_Generic_Package (Def_Id)\n-                or else Ekind (Def_Id) = E_Exception\n-                or else Nkind (Parent (Def_Id)) = N_Component_Declaration)\n+               or else Ekind (Def_Id) = E_Exception\n+               or else Nkind (Parent (Def_Id)) = N_Component_Declaration)\n          then\n             Set_Imported (Def_Id);\n             Set_Is_Public (Def_Id);\n@@ -6580,9 +6579,8 @@ package body Sem_Prag is\n             Cunit_Node := Cunit (Current_Sem_Unit);\n             Cunit_Ent  := Cunit_Entity (Current_Sem_Unit);\n \n-            if Nkind (Unit (Cunit_Node)) = N_Package_Body\n-                 or else\n-               Nkind (Unit (Cunit_Node)) = N_Subprogram_Body\n+            if Nkind_In (Unit (Cunit_Node), N_Package_Body,\n+                                            N_Subprogram_Body)\n             then\n                Error_Pragma (\"pragma% must refer to a spec, not a body\");\n             else\n@@ -7417,9 +7415,8 @@ package body Sem_Prag is\n             begin\n                GP := Parent (Parent (N));\n \n-               if Nkind (GP) = N_Package_Declaration\n-                    or else\n-                  Nkind (GP) = N_Generic_Package_Declaration\n+               if Nkind_In (GP, N_Package_Declaration,\n+                                N_Generic_Package_Declaration)\n                then\n                   GP := Parent (GP);\n                end if;\n@@ -8082,9 +8079,7 @@ package body Sem_Prag is\n                Preanalyze_Spec_Expression (Arg, RTE (RE_Interrupt_Priority));\n             end if;\n \n-            if Nkind (P) /= N_Task_Definition\n-              and then Nkind (P) /= N_Protected_Definition\n-            then\n+            if not Nkind_In (P, N_Task_Definition, N_Protected_Definition) then\n                Pragma_Misplaced;\n                return;\n \n@@ -9261,8 +9256,8 @@ package body Sem_Prag is\n                  and then Nkind (Decl) not in N_Generic_Declaration\n                then\n                   Error_Pragma\n-                    (\"pragma% misplaced, \" &\n-                     \"must immediately follow a declaration\");\n+                    (\"pragma% misplaced, \"\n+                     & \"must immediately follow a declaration\");\n \n                else\n                   Set_Obsolescent (Defining_Entity (Decl));\n@@ -9797,10 +9792,7 @@ package body Sem_Prag is\n \n             --  Task or Protected, must be of type Integer\n \n-            elsif Nkind (P) = N_Protected_Definition\n-                    or else\n-                  Nkind (P) = N_Task_Definition\n-            then\n+            elsif Nkind_In (P, N_Protected_Definition, N_Task_Definition) then\n                Arg := Expression (Arg1);\n \n                --  The expression must be analyzed in the special manner\n@@ -9824,10 +9816,7 @@ package body Sem_Prag is\n             else\n                Set_Has_Priority_Pragma (P, True);\n \n-               if Nkind (P) = N_Protected_Definition\n-                    or else\n-                  Nkind (P) = N_Task_Definition\n-               then\n+               if Nkind_In (P, N_Protected_Definition, N_Task_Definition) then\n                   Record_Rep_Item (Defining_Identifier (Parent (P)), N);\n                   --  exp_ch9 should use this ???\n                end if;\n@@ -10073,10 +10062,7 @@ package body Sem_Prag is\n                X : constant Node_Id := Original_Node (Arg);\n \n             begin\n-               if Nkind (X) /= N_String_Literal\n-                    and then\n-                  Nkind (X) /= N_Identifier\n-               then\n+               if not Nkind_In (X, N_String_Literal, N_Identifier) then\n                   Error_Pragma_Arg\n                     (\"inappropriate argument for pragma %\", Arg);\n                end if;\n@@ -10223,6 +10209,7 @@ package body Sem_Prag is\n             if not GNAT_Mode then\n                Error_Pragma (\"pragma% only available in GNAT mode\");\n             end if;\n+\n             if Nkind (N) = N_Null_Statement then\n                return;\n             end if;\n@@ -10444,12 +10431,11 @@ package body Sem_Prag is\n             Cunit_Node := Cunit (Current_Sem_Unit);\n             Cunit_Ent  := Cunit_Entity (Current_Sem_Unit);\n \n-            if Nkind (Unit (Cunit_Node)) /= N_Package_Declaration\n-              and then\n-              Nkind (Unit (Cunit_Node)) /= N_Generic_Package_Declaration\n+            if not Nkind_In (Unit (Cunit_Node), N_Package_Declaration,\n+                                                N_Generic_Package_Declaration)\n             then\n-               Error_Pragma (\n-                 \"pragma% can only apply to a package declaration\");\n+               Error_Pragma\n+                 (\"pragma% can only apply to a package declaration\");\n             end if;\n \n             Set_Is_Remote_Types (Cunit_Ent);\n@@ -10576,12 +10562,11 @@ package body Sem_Prag is\n             Cunit_Node := Cunit (Current_Sem_Unit);\n             Cunit_Ent  := Cunit_Entity (Current_Sem_Unit);\n \n-            if Nkind (Unit (Cunit_Node)) /= N_Package_Declaration\n-              and then\n-              Nkind (Unit (Cunit_Node)) /= N_Generic_Package_Declaration\n+            if not Nkind_In (Unit (Cunit_Node), N_Package_Declaration,\n+                                                N_Generic_Package_Declaration)\n             then\n-               Error_Pragma (\n-                 \"pragma% can only apply to a package declaration\");\n+               Error_Pragma\n+                 (\"pragma% can only apply to a package declaration\");\n             end if;\n \n             Set_Is_Shared_Passive (Cunit_Ent);\n@@ -12154,7 +12139,7 @@ package body Sem_Prag is\n         and then\n           (Is_Generic_Instance (Result)\n             or else Nkind (Parent (Declaration_Node (Result))) =\n-                    N_Subprogram_Renaming_Declaration)\n+                                         N_Subprogram_Renaming_Declaration)\n         and then Present (Alias (Result))\n       loop\n          Result := Alias (Result);"}, {"sha": "10611743d8544ff94f36c51460de239a458074f3", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7ba4df490028a6cec281e104faaba40822f55c1/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7ba4df490028a6cec281e104faaba40822f55c1/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=d7ba4df490028a6cec281e104faaba40822f55c1", "patch": "@@ -1301,7 +1301,7 @@ package body Sem_Warn is\n                              (Ekind (E1) = E_Package\n                                 and then\n                                   not Is_Package_Or_Generic_Package\n-                                    (Cunit_Entity (Current_Sem_Unit))))\n+                                        (Cunit_Entity (Current_Sem_Unit))))\n \n                --  Exclude instantiations, since there is no reason why every\n                --  entity in an instantiation should be referenced."}]}