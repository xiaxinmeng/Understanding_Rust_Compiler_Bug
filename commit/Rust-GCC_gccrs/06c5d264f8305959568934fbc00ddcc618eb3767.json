{"sha": "06c5d264f8305959568934fbc00ddcc618eb3767", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZjNWQyNjRmODMwNTk1OTU2ODkzNGZiYzAwZGRjYzYxOGViMzc2Nw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-10-04T21:34:13Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-10-04T21:34:13Z"}, "message": "gcc-dg.exp (cleanup-ada-spec): New procedure.\n\n\t* lib/gcc-dg.exp (cleanup-ada-spec): New procedure.\n\t* lib/scanasm.exp (get_ada_spec_filename): Likewise.\n\t(scan-ada-spec): Likewise.\n\t(scan-ada-spec-not): Likewise.\n\t* gcc.dg/dump-ada-spec-1.c: New test.\n\t* g++.dg/other/dump-ada-spec-1.C: Likewise.\n\nFrom-SVN: r192106", "tree": {"sha": "e11ffd69126a33030fcdd6475fe5dacdcac9d0ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e11ffd69126a33030fcdd6475fe5dacdcac9d0ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06c5d264f8305959568934fbc00ddcc618eb3767", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06c5d264f8305959568934fbc00ddcc618eb3767", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06c5d264f8305959568934fbc00ddcc618eb3767", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06c5d264f8305959568934fbc00ddcc618eb3767/comments", "author": null, "committer": null, "parents": [{"sha": "6b3aed137550978220a751ef0a7489f1f517a962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3aed137550978220a751ef0a7489f1f517a962", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3aed137550978220a751ef0a7489f1f517a962"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "f7003f989cbe2a482de824f3798fde9a8651afee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06c5d264f8305959568934fbc00ddcc618eb3767/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06c5d264f8305959568934fbc00ddcc618eb3767/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=06c5d264f8305959568934fbc00ddcc618eb3767", "patch": "@@ -1,3 +1,12 @@\n+2012-10-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* lib/gcc-dg.exp (cleanup-ada-spec): New procedure.\n+\t* lib/scanasm.exp (get_ada_spec_filename): Likewise.\n+\t(scan-ada-spec): Likewise.\n+\t(scan-ada-spec-not): Likewise.\n+\t* gcc.dg/dump-ada-spec-1.c: New test.\n+\t* g++.dg/other/dump-ada-spec-1.C: Likewise.\n+\n 2012-10-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.dg/lto/20120723_0.c: Skip on SPARC 32-bit."}, {"sha": "eb249e798541d6b3c23b372afe6c29c6b8272589", "filename": "gcc/testsuite/g++.dg/other/dump-ada-spec-1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06c5d264f8305959568934fbc00ddcc618eb3767/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06c5d264f8305959568934fbc00ddcc618eb3767/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-1.C?ref=06c5d264f8305959568934fbc00ddcc618eb3767", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-ada-spec\" } */\n+\n+struct S\n+{\n+  int i;\n+};\n+\n+/* { dg-final { scan-ada-spec \"type S is record\" } } */\n+/* { dg-final { cleanup-ada-spec } } */"}, {"sha": "eb249e798541d6b3c23b372afe6c29c6b8272589", "filename": "gcc/testsuite/gcc.dg/dump-ada-spec-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06c5d264f8305959568934fbc00ddcc618eb3767/gcc%2Ftestsuite%2Fgcc.dg%2Fdump-ada-spec-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06c5d264f8305959568934fbc00ddcc618eb3767/gcc%2Ftestsuite%2Fgcc.dg%2Fdump-ada-spec-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdump-ada-spec-1.c?ref=06c5d264f8305959568934fbc00ddcc618eb3767", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-ada-spec\" } */\n+\n+struct S\n+{\n+  int i;\n+};\n+\n+/* { dg-final { scan-ada-spec \"type S is record\" } } */\n+/* { dg-final { cleanup-ada-spec } } */"}, {"sha": "b3f8d3bb1855c85873e52e1f7075b758affbc571", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06c5d264f8305959568934fbc00ddcc618eb3767/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06c5d264f8305959568934fbc00ddcc618eb3767/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=06c5d264f8305959568934fbc00ddcc618eb3767", "patch": "@@ -503,6 +503,19 @@ proc cleanup-stack-usage { } {\n     }\n }\n \n+# Remove an Ada spec file for the current test.\n+proc cleanup-ada-spec { } {\n+    set testcase [testname-for-summary]\n+    remove-build-file \"[get_ada_spec_filename $testcase]\"\n+\n+    # Clean up files for additional source files.\n+    if [info exists additional_sources] {\n+\tforeach srcfile $additional_sources {\n+\t    remove-build-file \"[get_ada_spec_filename $srcfile]\"\n+\t}\n+    }\n+}\n+\n # Remove all dump files with the provided suffix.\n proc cleanup-dump { suffix } {\n     set testcase [testname-for-summary]"}, {"sha": "598948e81474244527d85c864eff6f4a8f47d80e", "filename": "gcc/testsuite/lib/scanasm.exp", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06c5d264f8305959568934fbc00ddcc618eb3767/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06c5d264f8305959568934fbc00ddcc618eb3767/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanasm.exp?ref=06c5d264f8305959568934fbc00ddcc618eb3767", "patch": "@@ -184,6 +184,38 @@ proc scan-stack-usage-not { args } {\n     dg-scan \"scan-file-not\" 0 $testcase $output_file $args\n }\n \n+# Return the filename of the Ada spec corresponding to the argument.\n+\n+proc get_ada_spec_filename { testcase } {\n+    # The name might include a list of options; extract the file name.\n+    set filename  [lindex $testcase 0]\n+    set tailname  [file tail $filename]\n+    set extension [string trimleft [file extension $tailname] {.}]\n+    set rootname  [regsub -all {\\-} [file rootname $tailname] {_}]\n+\n+    return [string tolower \"${rootname}_${extension}.ads\"]\n+}\n+\n+# Look for a pattern in the .ads file produced by the compiler.  See\n+# dg-scan for details.\n+\n+proc scan-ada-spec { args } {\n+    set testcase  [testname-for-summary]\n+    set output_file \"[get_ada_spec_filename $testcase]\"\n+\n+    dg-scan \"scan-file\" 1 $testcase $output_file $args\n+}\n+\n+# Check that a pattern is not present in the .ads file produced by the\n+# compiler.  See dg-scan for details.\n+\n+proc scan-ada-spec-not { args } {\n+    set testcase  [testname-for-summary]\n+    set output_file \"[get_ada_spec_filename $testcase]\"\n+\n+    dg-scan \"scan-file-not\" 0 $testcase $output_file $args\n+}\n+\n # Call pass if pattern is present given number of times, otherwise fail.\n proc scan-assembler-times { args } {\n     if { [llength $args] < 2 } {"}]}