{"sha": "a8886f7d1859cebce5db37598c4bae54cc51db1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg4ODZmN2QxODU5Y2ViY2U1ZGIzNzU5OGM0YmFlNTRjYzUxZGIxZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-09-04T09:28:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-09-04T09:28:58Z"}, "message": "re PR tree-optimization/54458 (ICE get_loop_body, at cfgloop.c:830)\n\n2012-09-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/54458\n\t* tree-ssa-threadupdate.c (thread_through_loop_header): If we\n\tturn the loop into one with multiple latches mark it so.\n\n\t* gcc.dg/torture/pr54458.c: New testcase.\n\nFrom-SVN: r190918", "tree": {"sha": "fa175b9596e8734f22e4875c7fe68cff105f80e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa175b9596e8734f22e4875c7fe68cff105f80e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8886f7d1859cebce5db37598c4bae54cc51db1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8886f7d1859cebce5db37598c4bae54cc51db1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8886f7d1859cebce5db37598c4bae54cc51db1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8886f7d1859cebce5db37598c4bae54cc51db1d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cee8f252d70e664c198070ef60ddc15d06176dad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cee8f252d70e664c198070ef60ddc15d06176dad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cee8f252d70e664c198070ef60ddc15d06176dad"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "5ba70bf6b609521547a56855364cab4432cb85a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8886f7d1859cebce5db37598c4bae54cc51db1d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8886f7d1859cebce5db37598c4bae54cc51db1d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a8886f7d1859cebce5db37598c4bae54cc51db1d", "patch": "@@ -1,3 +1,9 @@\n+2012-09-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/54458\n+\t* tree-ssa-threadupdate.c (thread_through_loop_header): If we\n+\tturn the loop into one with multiple latches mark it so.\n+\n 2012-09-04  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n \tPR target/54220"}, {"sha": "b7354f48abae75ffb2f2f6ced623bf4490eae93a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8886f7d1859cebce5db37598c4bae54cc51db1d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8886f7d1859cebce5db37598c4bae54cc51db1d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a8886f7d1859cebce5db37598c4bae54cc51db1d", "patch": "@@ -1,3 +1,8 @@\n+2012-09-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/54458\n+\t* gcc.dg/torture/pr54458.c: New testcase.\n+\n 2012-09-04  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/arm/neon-vext.c: New test."}, {"sha": "3d2e12fc2fd1e5fa190f210eba60d4965fa8da60", "filename": "gcc/testsuite/gcc.dg/torture/pr54458.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8886f7d1859cebce5db37598c4bae54cc51db1d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54458.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8886f7d1859cebce5db37598c4bae54cc51db1d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54458.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr54458.c?ref=a8886f7d1859cebce5db37598c4bae54cc51db1d", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+\n+unsigned int a, b, c;\n+\n+void\n+foo (unsigned int x)\n+{\n+  do\n+    {\n+      if (a == 0 ? 1 : 1 % a)\n+\tfor (; b; b--)\n+\t  lab:;\n+      else\n+\twhile (x)\n+\t  ;\n+      if (c)\n+\tgoto lab;\n+    }\n+  while (1);\n+}"}, {"sha": "30336a18e81ff713ca7ea4f616036419696a58ee", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8886f7d1859cebce5db37598c4bae54cc51db1d/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8886f7d1859cebce5db37598c4bae54cc51db1d/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=a8886f7d1859cebce5db37598c4bae54cc51db1d", "patch": "@@ -1037,11 +1037,21 @@ thread_through_loop_header (struct loop *loop, bool may_peel_loop_headers)\n \t}\n       free (bblocks);\n \n+      /* If the new header has multiple latches mark it so.  */\n+      FOR_EACH_EDGE (e, ei, loop->header->preds)\n+\tif (e->src->loop_father == loop\n+\t    && e->src != loop->latch)\n+\t  {\n+\t    loop->latch = NULL;\n+\t    loops_state_set (LOOPS_MAY_HAVE_MULTIPLE_LATCHES);\n+\t  }\n+\n       /* Cancel remaining threading requests that would make the\n \t loop a multiple entry loop.  */\n       FOR_EACH_EDGE (e, ei, header->preds)\n \t{\n \t  edge e2;\n+\n \t  if (e->aux == NULL)\n \t    continue;\n "}]}