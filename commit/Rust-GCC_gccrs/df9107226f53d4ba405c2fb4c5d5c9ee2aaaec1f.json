{"sha": "df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY5MTA3MjI2ZjUzZDRiYTQwNWMyZmI0YzVkNWM5ZWUyYWFhZWMxZg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2014-08-04T12:49:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T12:49:23Z"}, "message": "2014-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* a-cfhama.adb, a-cfhase.adb, a-cforma.adb, a-cforse.adb Add\n\tSPARK_Mode in the body.\n\t* sem_ch7.adb (Analyze_Package_Body_Helper): Restore the original\n\tway to verify the consistency of SPARK_Mode between a spec and\n\ta body.\n\t* sem_ch12.adb (Analyze_Package_Instantiation): Remove the call\n\tto Set_Ignore_Pragma_SPARK_Mode. Set flag Ignore_Pragma_SPARK_Mode\n\tmanually.\n\t(Analyze_Subprogram_Instantiation): Remove the call to\n\tSet_Ignore_Pragma_SPARK_Mode. Set flag Ignore_Pragma_SPARK_Mode\n\tmanually.\n\t* sem_prag.adb (Analyze_Pragma): Remove local variable\n\tInst_Id. SPARK_Mode can no longer be applied to a package or\n\tsubprogram instantiation.\n\t* sem_util.adb, sem_util.ads (Set_Ignore_Pragma_SPARK_Mode):\n\tRemoved.\n\nFrom-SVN: r213578", "tree": {"sha": "58fef9c6eac0123c2f9470fbeb5811400f7203d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58fef9c6eac0123c2f9470fbeb5811400f7203d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ff2b6dcc98d42fb75c4491ab3871cef10857ebf"}], "stats": {"total": 301, "additions": 78, "deletions": 223}, "files": [{"sha": "e2a583777de344bc0578ad078c530b8d5e24f62f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "patch": "@@ -1,3 +1,22 @@\n+2014-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* a-cfhama.adb, a-cfhase.adb, a-cforma.adb, a-cforse.adb Add\n+\tSPARK_Mode in the body.\n+\t* sem_ch7.adb (Analyze_Package_Body_Helper): Restore the original\n+\tway to verify the consistency of SPARK_Mode between a spec and\n+\ta body.\n+\t* sem_ch12.adb (Analyze_Package_Instantiation): Remove the call\n+\tto Set_Ignore_Pragma_SPARK_Mode. Set flag Ignore_Pragma_SPARK_Mode\n+\tmanually.\n+\t(Analyze_Subprogram_Instantiation): Remove the call to\n+\tSet_Ignore_Pragma_SPARK_Mode. Set flag Ignore_Pragma_SPARK_Mode\n+\tmanually.\n+\t* sem_prag.adb (Analyze_Pragma): Remove local variable\n+\tInst_Id. SPARK_Mode can no longer be applied to a package or\n+\tsubprogram instantiation.\n+\t* sem_util.adb, sem_util.ads (Set_Ignore_Pragma_SPARK_Mode):\n+\tRemoved.\n+\n 2014-08-04  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_prag.adb, osint.adb, osint.ads: Minor reformatting."}, {"sha": "1780bbb30275e8f057fff6cb557b8fb44d1efe9b", "filename": "gcc/ada/a-cfhama.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fa-cfhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fa-cfhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhama.adb?ref=df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "patch": "@@ -33,9 +33,10 @@ pragma Elaborate_All (Ada.Containers.Hash_Tables.Generic_Bounded_Keys);\n \n with Ada.Containers.Prime_Numbers; use Ada.Containers.Prime_Numbers;\n \n-with System;  use type System.Address;\n+with System; use type System.Address;\n \n package body Ada.Containers.Formal_Hashed_Maps is\n+   pragma SPARK_Mode (Off);\n \n    -----------------------\n    -- Local Subprograms --"}, {"sha": "7c1f9541f6c58b3bf2cc3ba01b66b108bfac274f", "filename": "gcc/ada/a-cfhase.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fa-cfhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fa-cfhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.adb?ref=df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,6 +36,7 @@ with Ada.Containers.Prime_Numbers; use Ada.Containers.Prime_Numbers;\n with System; use type System.Address;\n \n package body Ada.Containers.Formal_Hashed_Sets is\n+   pragma SPARK_Mode (Off);\n \n    -----------------------\n    -- Local Subprograms --"}, {"sha": "8a85cae8fd404b5ca2ce5fbd478508241d646e49", "filename": "gcc/ada/a-cforma.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fa-cforma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fa-cforma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforma.adb?ref=df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,6 +35,7 @@ pragma Elaborate_All (Ada.Containers.Red_Black_Trees.Generic_Bounded_Keys);\n with System; use type System.Address;\n \n package body Ada.Containers.Formal_Ordered_Maps is\n+   pragma SPARK_Mode (Off);\n \n    -----------------------------\n    -- Node Access Subprograms --"}, {"sha": "966853a18289441c69a5bdf4204dcae6649f1e33", "filename": "gcc/ada/a-cforse.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fa-cforse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fa-cforse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.adb?ref=df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "patch": "@@ -36,9 +36,10 @@ with Ada.Containers.Red_Black_Trees.Generic_Bounded_Set_Operations;\n pragma Elaborate_All\n   (Ada.Containers.Red_Black_Trees.Generic_Bounded_Set_Operations);\n \n-with System;  use type System.Address;\n+with System; use type System.Address;\n \n package body Ada.Containers.Formal_Ordered_Sets is\n+   pragma SPARK_Mode (Off);\n \n    ------------------------------\n    -- Access to Fields of Node --"}, {"sha": "dd8badb1065d595d47f9ed4117786d54d991b923", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "patch": "@@ -3739,11 +3739,13 @@ package body Sem_Ch12 is\n          goto Leave;\n \n       else\n-         --  If the instance or its context is subject to SPARK_Mode \"off\",\n+         --  If the context of the instance is subject to SPARK_Mode \"off\",\n          --  set the global flag which signals Analyze_Pragma to ignore all\n          --  SPARK_Mode pragmas within the instance.\n \n-         Set_Ignore_Pragma_SPARK_Mode (N);\n+         if SPARK_Mode = Off then\n+            Ignore_Pragma_SPARK_Mode := True;\n+         end if;\n \n          Gen_Decl := Unit_Declaration_Node (Gen_Unit);\n \n@@ -4914,11 +4916,13 @@ package body Sem_Ch12 is\n          Error_Msg_NE (\"instantiation of & within itself\", N, Gen_Unit);\n \n       else\n-         --  If the instance or its context is subject to SPARK_Mode \"off\",\n+         --  If the context of the instance is subject to SPARK_Mode \"off\",\n          --  set the global flag which signals Analyze_Pragma to ignore all\n          --  SPARK_Mode pragmas within the instance.\n \n-         Set_Ignore_Pragma_SPARK_Mode (N);\n+         if SPARK_Mode = Off then\n+            Ignore_Pragma_SPARK_Mode := True;\n+         end if;\n \n          Set_Entity (Gen_Id, Gen_Unit);\n          Set_Is_Instantiated (Gen_Unit);"}, {"sha": "4821db529c813682ebf638ce373dfb9dba86ed2c", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "patch": "@@ -440,8 +440,8 @@ package body Sem_Ch7 is\n       --  Verify that the SPARK_Mode of the body agrees with that of its spec\n \n       if Present (SPARK_Pragma (Body_Id)) then\n-         if Present (SPARK_Pragma (Spec_Id)) then\n-            if Get_SPARK_Mode_From_Pragma (SPARK_Pragma (Spec_Id)) = Off\n+         if Present (SPARK_Aux_Pragma (Spec_Id)) then\n+            if Get_SPARK_Mode_From_Pragma (SPARK_Aux_Pragma (Spec_Id)) = Off\n                  and then\n                Get_SPARK_Mode_From_Pragma (SPARK_Pragma (Body_Id)) = On\n             then"}, {"sha": "8ef209d2d029752daa4dcfcb5a035c91feef68b2", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 41, "deletions": 86, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "patch": "@@ -19226,7 +19226,6 @@ package body Sem_Prag is\n \n             Body_Id : Entity_Id;\n             Context : Node_Id;\n-            Inst_Id : Entity_Id;\n             Mode    : Name_Id;\n             Mode_Id : SPARK_Mode_Type;\n             Spec_Id : Entity_Id;\n@@ -19261,12 +19260,6 @@ package body Sem_Prag is\n             Mode_Id := Get_SPARK_Mode_Type (Mode);\n             Context := Parent (N);\n \n-            --  Handle a compilation unit with configuration pragmas\n-\n-            if Nkind (Context) = N_Compilation_Unit_Aux then\n-               Context := Parent (Context);\n-            end if;\n-\n             --  The pragma appears in a configuration pragmas file\n \n             if No (Context) then\n@@ -19281,59 +19274,17 @@ package body Sem_Prag is\n                SPARK_Mode_Pragma := N;\n                SPARK_Mode := Mode_Id;\n \n-            --  The pragma applies to a compilation unit\n-\n-            elsif Nkind (Context) = N_Compilation_Unit then\n-\n-               --  The pragma acts as a configuration pragma\n-\n-               --    pragma SPARK_Mode ...;\n-               --    package Pack is ...;\n-\n-               if List_Containing (N) = Context_Items (Context) then\n-                  Check_Valid_Configuration_Pragma;\n-                  SPARK_Mode_Pragma := N;\n-                  SPARK_Mode := Mode_Id;\n-\n-               --  The pragma applies to a package instantiation that acts as a\n-               --  compilation unit.\n-\n-               --    package Inst is new Gen ...;\n-               --    pragma SPARK_Mode ...;\n-\n-               elsif Nkind (Unit (Context)) = N_Package_Instantiation then\n-                  Inst_Id := Defining_Entity (Instance_Spec (Unit (Context)));\n-                  Check_Library_Level_Entity (Inst_Id);\n-                  Check_Pragma_Conformance\n-                    (Context_Pragma => SPARK_Mode_Pragma,\n-                     Entity_Pragma  => Empty,\n-                     Entity         => Empty);\n-\n-                  Set_SPARK_Pragma           (Inst_Id, N);\n-                  Set_SPARK_Pragma_Inherited (Inst_Id, False);\n-\n-               --  Otherwise the pragma applies to a subprogram instantiation\n-               --  that acts as a compilation unit.\n-\n-               else\n-                  Spec_Id := Defining_Entity (Unit (Context));\n-                  Check_Library_Level_Entity (Spec_Id);\n-                  Check_Pragma_Conformance\n-                    (Context_Pragma => SPARK_Mode_Pragma,\n-                     Entity_Pragma  => Empty,\n-                     Entity         => Empty);\n+            --  The pragma acts as a configuration pragma in a compilation unit\n \n-                  Set_SPARK_Pragma           (Spec_Id, N);\n-                  Set_SPARK_Pragma_Inherited (Spec_Id, False);\n+            --    pragma SPARK_Mode ...;\n+            --    package Pack is ...;\n \n-                  if Ekind (Spec_Id) = E_Package\n-                    and then Present (Related_Instance (Spec_Id))\n-                  then\n-                     Inst_Id := Related_Instance (Spec_Id);\n-                     Set_SPARK_Pragma           (Inst_Id, N);\n-                     Set_SPARK_Pragma_Inherited (Inst_Id, False);\n-                  end if;\n-               end if;\n+            elsif Nkind (Context) = N_Compilation_Unit\n+              and then List_Containing (N) = Context_Items (Context)\n+            then\n+               Check_Valid_Configuration_Pragma;\n+               SPARK_Mode_Pragma := N;\n+               SPARK_Mode := Mode_Id;\n \n             --  Otherwise the placement of the pragma within the tree dictates\n             --  its associated construct. Inspect the declarative list where\n@@ -19353,37 +19304,11 @@ package body Sem_Prag is\n                         raise Pragma_Exit;\n                      end if;\n \n-                  --  Skip internally generated code, but consider subprogram\n-                  --  instantiations housed within their wrapper packages.\n+                  --  Skip internally generated code\n \n-                  elsif not Comes_From_Source (Stmt)\n-                    and then\n-                      (Nkind (Stmt) /= N_Subprogram_Declaration\n-                        or else No (Generic_Parent (Specification (Stmt))))\n-                  then\n+                  elsif not Comes_From_Source (Stmt) then\n                      null;\n \n-                  --  The pragma is associated with a package or subprogram\n-                  --  instantiation that does not act as a compilation unit.\n-\n-                  --    package Inst is new Gen ...;\n-                  --    pragma SPARK_Mode ...;\n-\n-                  elsif Nkind_In (Stmt, N_Function_Instantiation,\n-                                        N_Package_Instantiation,\n-                                        N_Procedure_Instantiation)\n-                  then\n-                     Inst_Id := Defining_Entity (Instance_Spec (Stmt));\n-                     Check_Library_Level_Entity (Inst_Id);\n-                     Check_Pragma_Conformance\n-                       (Context_Pragma => SPARK_Mode_Pragma,\n-                        Entity_Pragma  => Empty,\n-                        Entity         => Empty);\n-\n-                     Set_SPARK_Pragma           (Inst_Id, N);\n-                     Set_SPARK_Pragma_Inherited (Inst_Id, False);\n-                     return;\n-\n                   --  The pragma applies to a [generic] subprogram declaration\n \n                   --    [generic]\n@@ -19416,6 +19341,16 @@ package body Sem_Prag is\n                   Prev (Stmt);\n                end loop;\n \n+               --  The pragma applies to a package or a subprogram that acts as\n+               --  a compilation unit.\n+\n+               --    procedure Proc ...;\n+               --    pragma SPARK_Mode ...;\n+\n+               if Nkind (Context) = N_Compilation_Unit_Aux then\n+                  Context := Unit (Parent (Context));\n+               end if;\n+\n                --  The pragma appears within package declarations\n \n                if Nkind (Context) = N_Package_Specification then\n@@ -19502,6 +19437,26 @@ package body Sem_Prag is\n                   Set_SPARK_Aux_Pragma           (Body_Id, N);\n                   Set_SPARK_Aux_Pragma_Inherited (Body_Id, False);\n \n+               --  The pragma appeared as an aspect of a [generic] subprogram\n+               --  declaration that acts as a compilation unit.\n+\n+               --    [generic]\n+               --    procedure Proc ...;\n+               --    pragma SPARK_Mode ...;\n+\n+               elsif Nkind_In (Context, N_Generic_Subprogram_Declaration,\n+                                        N_Subprogram_Declaration)\n+               then\n+                  Spec_Id := Defining_Entity (Context);\n+                  Check_Library_Level_Entity (Spec_Id);\n+                  Check_Pragma_Conformance\n+                    (Context_Pragma => SPARK_Pragma (Spec_Id),\n+                     Entity_Pragma  => Empty,\n+                     Entity         => Empty);\n+\n+                  Set_SPARK_Pragma           (Spec_Id, N);\n+                  Set_SPARK_Pragma_Inherited (Spec_Id, False);\n+\n                --  The pragma appears at the top of subprogram body\n                --  declarations.\n "}, {"sha": "71a6429703b7ec109db32cef0efb75d820823031", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 122, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "patch": "@@ -16456,128 +16456,6 @@ package body Sem_Util is\n       Set_Entity (N, Val);\n    end Set_Entity_With_Checks;\n \n-   ----------------------------------\n-   -- Set_Ignore_Pragma_SPARK_Mode --\n-   ----------------------------------\n-\n-   procedure Set_Ignore_Pragma_SPARK_Mode (N : Node_Id) is\n-      procedure Set_SPARK_Mode (Expr : Node_Id);\n-      --  Set flag Ignore_Pragma_SPARK_Mode based on the argument of aspect or\n-      --  pragma SPARK_Mode denoted by Expr.\n-\n-      --------------------\n-      -- Set_SPARK_Mode --\n-      --------------------\n-\n-      procedure Set_SPARK_Mode (Expr : Node_Id) is\n-      begin\n-         --  When pragma SPARK_Mode with argument \"off\" applies to an instance,\n-         --  all SPARK_Mode pragmas within the instance are ignored.\n-\n-         if Present (Expr)\n-           and then Nkind (Expr) = N_Identifier\n-           and then Chars (Expr) = Name_Off\n-         then\n-            Ignore_Pragma_SPARK_Mode := True;\n-         end if;\n-      end Set_SPARK_Mode;\n-\n-      --  Local variables\n-\n-      Aspects : constant List_Id := Aspect_Specifications (N);\n-      Context : constant Node_Id := Parent (N);\n-      Args    : List_Id;\n-      Aspect  : Node_Id;\n-      Decl    : Node_Id;\n-\n-   --  Start of processing for Set_Ignore_Pragma_SPARK_Mode\n-\n-   begin\n-      --  When the enclosing context of the instance has SPARK_Mode \"off\", all\n-      --  SPARK_Mode pragmas within the instance are ignored. Note that there\n-      --  is no point in checking whether the instantiation itself carries\n-      --  aspect/pragma SPARK_Mode because it is either illegal (\"on\") or has\n-      --  no effect (\"off\").\n-\n-      if SPARK_Mode = Off then\n-         Ignore_Pragma_SPARK_Mode := True;\n-         return;\n-      end if;\n-\n-      --  Inspect the aspects of the instantiation and locate SPARK_Mode. Note\n-      --  that the aspect form of SPARK_Mode precedes a potentially duplicate\n-      --  pragma.\n-\n-      if Present (Aspects) then\n-         Aspect := First (Aspects);\n-         while Present (Aspect) loop\n-            if Get_Aspect_Id (Aspect) = Aspect_SPARK_Mode then\n-               Set_SPARK_Mode (Expression (Aspect));\n-               return;\n-            end if;\n-\n-            Next (Aspect);\n-         end loop;\n-      end if;\n-\n-      --  Peek ahead of the instance and locate pragma SPARK_Mode. Even though\n-      --  the pragma is analyzed after the instance, its mode must be known now\n-      --  as it governs the legality of SPARK_Mode pragmas within the instance.\n-\n-      Decl := Empty;\n-\n-      --  The instance is a compilation unit, the pragma appears on the\n-      --  Pragmas_After list.\n-\n-      if Present (Context)\n-        and then Nkind (Context) = N_Compilation_Unit\n-        and then Present (Aux_Decls_Node (Context))\n-        and then Present (Pragmas_After (Aux_Decls_Node (Context)))\n-      then\n-         Decl := First (Pragmas_After (Aux_Decls_Node (Context)));\n-\n-      --  The instance is part of a declarative list, the pragma appears after\n-      --  the instance.\n-\n-      elsif Is_List_Member (N) then\n-         Decl := Next (N);\n-      end if;\n-\n-      --  Inspect all declarations following the instance\n-\n-      while Present (Decl) loop\n-         if Nkind (Decl) = N_Pragma then\n-            if Get_Pragma_Id (Decl) = Pragma_SPARK_Mode then\n-               Args := Pragma_Argument_Associations (Decl);\n-\n-               --  The pragma argument dictates the mode\n-\n-               if Present (Args) then\n-                  Set_SPARK_Mode (Get_Pragma_Arg (First (Args)));\n-               end if;\n-\n-               --  Only the first SPARK_Mode following the instance is\n-               --  considered, any extra (illegal) pragmas are ignored.\n-\n-               exit;\n-            end if;\n-\n-         --  Skip internally generated code\n-\n-         elsif not Comes_From_Source (Decl) then\n-            null;\n-\n-         --  Otherwise a source construct exhaust the range where the pragma\n-         --  may appear.\n-\n-         else\n-            exit;\n-         end if;\n-\n-         Next (Decl);\n-      end loop;\n-   end Set_Ignore_Pragma_SPARK_Mode;\n-\n    ------------------------\n    -- Set_Name_Entity_Id --\n    ------------------------"}, {"sha": "b567e43d6fceb1787bc95439395ae2e3e5415c2e", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=df9107226f53d4ba405c2fb4c5d5c9ee2aaaec1f", "patch": "@@ -1837,11 +1837,6 @@ package Sem_Util is\n    --    If restriction No_Implementation_Identifiers is set, then it checks\n    --    that the entity is not implementation defined.\n \n-   procedure Set_Ignore_Pragma_SPARK_Mode (N : Node_Id);\n-   --  Determine whether [the enclosing context of] package or subprogram N is\n-   --  subject to pragma SPARK_Mode with mode \"off\". If this is the case, set\n-   --  global flag Ignore_Pragma_SPARK_Mode to True.\n-\n    procedure Set_Name_Entity_Id (Id : Name_Id; Val : Entity_Id);\n    pragma Inline (Set_Name_Entity_Id);\n    --  Sets the Entity_Id value associated with the given name, which is the"}]}