{"sha": "d1243d278cb5f6af0b17c94ed48b9e40a5a92639", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEyNDNkMjc4Y2I1ZjZhZjBiMTdjOTRlZDQ4YjllNDBhNWE5MjYzOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-02-04T11:04:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-04T11:04:07Z"}, "message": "class.c (find_flexarrays): Don't declare dom variable.\n\n\t* class.c (find_flexarrays): Don't declare dom variable.\n\t(diagnose_flexarray): Likewise.\n\nFrom-SVN: r233135", "tree": {"sha": "299dd662d383fa350ee1ad52599d0b969caaf1b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/299dd662d383fa350ee1ad52599d0b969caaf1b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1243d278cb5f6af0b17c94ed48b9e40a5a92639", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1243d278cb5f6af0b17c94ed48b9e40a5a92639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1243d278cb5f6af0b17c94ed48b9e40a5a92639", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1243d278cb5f6af0b17c94ed48b9e40a5a92639/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc9c0829f714743c1212451883d0302dbef47fd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc9c0829f714743c1212451883d0302dbef47fd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc9c0829f714743c1212451883d0302dbef47fd0"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "8637c4fffa0faf9a6066829ae3bb035609863294", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1243d278cb5f6af0b17c94ed48b9e40a5a92639/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1243d278cb5f6af0b17c94ed48b9e40a5a92639/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d1243d278cb5f6af0b17c94ed48b9e40a5a92639", "patch": "@@ -1,3 +1,8 @@\n+2016-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* class.c (find_flexarrays): Don't declare dom variable.\n+\t(diagnose_flexarray): Likewise.\n+\n 2016-02-02  Martain Sebor  <msebor@redhat.com>\n \n \tPR c++/69251"}, {"sha": "b705d6bba596760d5b5f27e9ecb27ae2e30a9f64", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1243d278cb5f6af0b17c94ed48b9e40a5a92639/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1243d278cb5f6af0b17c94ed48b9e40a5a92639/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d1243d278cb5f6af0b17c94ed48b9e40a5a92639", "patch": "@@ -6683,7 +6683,7 @@ find_flexarrays (tree t, flexmems_t *fmem)\n \tcontinue;\n \n       /* Determine the upper bound of the array if it has one.  */\n-      if (tree dom = TYPE_DOMAIN (fldtype))\n+      if (TYPE_DOMAIN (fldtype))\n \t{\n \t  if (fmem->array)\n \t    {\n@@ -6694,7 +6694,7 @@ find_flexarrays (tree t, flexmems_t *fmem)\n \t      if (!fmem->after)\n \t\tfmem->after = fld;\n \t    }\n-\t  else if (integer_all_onesp (TYPE_MAX_VALUE (dom)))\n+\t  else if (integer_all_onesp (TYPE_MAX_VALUE (TYPE_DOMAIN (fldtype))))\n \t    /* Remember the first zero-length array unless a flexible array\n \t       member has already been seen.  */\n \t    fmem->array = fld;\n@@ -6732,7 +6732,7 @@ diagnose_flexarrays (tree t, const flexmems_t *fmem)\n \n   const char *msg = 0;\n \n-  if (const_tree dom = TYPE_DOMAIN (TREE_TYPE (fmem->array)))\n+  if (TYPE_DOMAIN (TREE_TYPE (fmem->array)))\n     {\n       if (fmem->after)\n \tmsg = G_(\"zero-size array member %qD not at end of %q#T\");"}]}