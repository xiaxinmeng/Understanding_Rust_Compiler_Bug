{"sha": "9481d818d93d9debcfaa45192a0c259fa7b70df4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ4MWQ4MThkOTNkOWRlYmNmYWE0NTE5MmEwYzI1OWZhN2I3MGRmNA==", "commit": {"author": {"name": "Ingo Proetel", "email": "proetel@aicas.com", "date": "2003-09-25T19:06:20Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-09-25T19:06:20Z"}, "message": "ObjectOutputStream.java: Allow putFields be called more than once.\n\n2003-09-25  Ingo Proetel  <proetel@aicas.com>\n\n\t* java/io/ObjectOutputStream.java:\n\tAllow putFields be called more than once.\n\nFrom-SVN: r71791", "tree": {"sha": "14db075ac6662fd4ce88400d152bb15cf0bcca79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14db075ac6662fd4ce88400d152bb15cf0bcca79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9481d818d93d9debcfaa45192a0c259fa7b70df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9481d818d93d9debcfaa45192a0c259fa7b70df4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9481d818d93d9debcfaa45192a0c259fa7b70df4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9481d818d93d9debcfaa45192a0c259fa7b70df4/comments", "author": {"login": "iproetel", "id": 895564, "node_id": "MDQ6VXNlcjg5NTU2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/895564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iproetel", "html_url": "https://github.com/iproetel", "followers_url": "https://api.github.com/users/iproetel/followers", "following_url": "https://api.github.com/users/iproetel/following{/other_user}", "gists_url": "https://api.github.com/users/iproetel/gists{/gist_id}", "starred_url": "https://api.github.com/users/iproetel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iproetel/subscriptions", "organizations_url": "https://api.github.com/users/iproetel/orgs", "repos_url": "https://api.github.com/users/iproetel/repos", "events_url": "https://api.github.com/users/iproetel/events{/privacy}", "received_events_url": "https://api.github.com/users/iproetel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "864135da898c0f5cfcec8812a3a2f4f8404bd776", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/864135da898c0f5cfcec8812a3a2f4f8404bd776", "html_url": "https://github.com/Rust-GCC/gccrs/commit/864135da898c0f5cfcec8812a3a2f4f8404bd776"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "143ec550b4a2430b53a31c2e9d8702b54e11afd0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9481d818d93d9debcfaa45192a0c259fa7b70df4/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9481d818d93d9debcfaa45192a0c259fa7b70df4/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9481d818d93d9debcfaa45192a0c259fa7b70df4", "patch": "@@ -1,3 +1,8 @@\n+2003-09-25  Ingo Proetel  <proetel@aicas.com>\n+\n+\t* java/io/ObjectOutputStream.java:\n+\tAllow putFields be called more than once.\n+\n 2003-09-25  Sascha Brawer  <brawer@dandelis.ch>\n \n \t* java/awt/image/Raster.java(Raster): Interpret null origin as (0,0)."}, {"sha": "3e47e70671f2838da5f624a951f93260379a6da1", "filename": "libjava/java/io/ObjectOutputStream.java", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9481d818d93d9debcfaa45192a0c259fa7b70df4/libjava%2Fjava%2Fio%2FObjectOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9481d818d93d9debcfaa45192a0c259fa7b70df4/libjava%2Fjava%2Fio%2FObjectOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FObjectOutputStream.java?ref=9481d818d93d9debcfaa45192a0c259fa7b70df4", "patch": "@@ -361,7 +361,7 @@ public final void writeObject (Object obj) throws IOException\n \t  }\n \tcatch (IOException ioe)\n \t  {\n-\t    throw new StreamCorruptedException (\"Exception \" + ioe + \" thrown while exception was being written to stream.\");\n+\t    throw new StreamCorruptedException (\"Exception \" + ioe + \" thrown while exception (\"+e+\") was being written to stream.\");\n \t  }\n \n \treset (true);\n@@ -443,7 +443,7 @@ private void markFieldsWritten () throws IOException\n       throw new NotActiveException (\"defaultWriteObject called by non-active class and/or object\");\n \n     if (fieldsAlreadyWritten)\n-      throw new IOException (\"Only one of putFields and defaultWriteObject may be called, and it may only be called once\");\n+      throw new IOException (\"Only one of writeFields and defaultWriteObject may be called, and it may only be called once\");\n \n     fieldsAlreadyWritten = true;\n   }\n@@ -866,8 +866,8 @@ public void writeUTF (String data) throws IOException\n \n   public PutField putFields () throws IOException\n   {\n-    markFieldsWritten ();\n-\n+    if (currentPutField == null)\n+      {\n     currentPutField = new PutField ()\n       {\n \tprivate byte[] prim_field_data\n@@ -1002,6 +1002,7 @@ private void checkType (ObjectStreamField field, char type)\n \t}\n       };\n     // end PutFieldImpl\n+      }\n \n     return currentPutField;\n   }\n@@ -1012,7 +1013,12 @@ public void writeFields () throws IOException\n     if (currentPutField == null)\n       throw new NotActiveException (\"writeFields can only be called after putFields has been called\");\n \n+\t// moved here from putFields since putFields \n+\t// may be called more than once, but not writeFields\n+\tmarkFieldsWritten();\n+\t\n     currentPutField.write (this);\n+    currentPutField = null;\n   }\n \n \n@@ -1248,7 +1254,7 @@ private boolean getBooleanField (Object obj, Class klass, String field_name)\n       }\n     catch (Exception _)\n       {\n-\tthrow new IOException ();\n+\tthrow new IOException (\"Unexpected Exception \"+_);\n       }    \n   }\n \n@@ -1263,7 +1269,7 @@ private byte getByteField (Object obj, Class klass, String field_name)\n       }\n     catch (Exception _)\n       {\n-\tthrow new IOException ();\n+\tthrow new IOException (\"Unexpected Exception \"+_);\n       }    \n   }\n \n@@ -1278,7 +1284,7 @@ private char getCharField (Object obj, Class klass, String field_name)\n       }\n     catch (Exception _)\n       {\n-\tthrow new IOException ();\n+\tthrow new IOException (\"Unexpected Exception \"+_);\n       }    \n   }\n \n@@ -1293,7 +1299,7 @@ private double getDoubleField (Object obj, Class klass, String field_name)\n       }\n     catch (Exception _)\n       {\n-\tthrow new IOException ();\n+\tthrow new IOException (\"Unexpected Exception \"+_);\n       }    \n   }\n \n@@ -1308,7 +1314,7 @@ private float getFloatField (Object obj, Class klass, String field_name)\n       }\n     catch (Exception _)\n       {\n-\tthrow new IOException ();\n+\tthrow new IOException (\"Unexpected Exception \"+_);\n       }    \n   }\n \n@@ -1323,7 +1329,7 @@ private int getIntField (Object obj, Class klass, String field_name)\n       }\n     catch (Exception _)\n       {\n-\tthrow new IOException ();\n+\tthrow new IOException (\"Unexpected Exception \"+_);\n       }    \n   }\n \n@@ -1338,7 +1344,7 @@ private long getLongField (Object obj, Class klass, String field_name)\n       }\n     catch (Exception _)\n       {\n-\tthrow new IOException ();\n+\tthrow new IOException (\"Unexpected Exception \"+_);\n       }    \n   }\n \n@@ -1353,7 +1359,7 @@ private short getShortField (Object obj, Class klass, String field_name)\n       }\n     catch (Exception _)\n       {\n-\tthrow new IOException ();\n+\tthrow new IOException (\"Unexpected Exception \"+_);\n       }    \n   }\n \n@@ -1369,7 +1375,7 @@ private Object getObjectField (Object obj, Class klass, String field_name,\n       }\n     catch (Exception _)\n       {\n-\tthrow new IOException ();\n+\tthrow new IOException (\"Unexpected Exception \"+_);\n       }    \n   }\n "}]}