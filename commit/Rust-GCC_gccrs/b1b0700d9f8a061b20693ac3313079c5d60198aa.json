{"sha": "b1b0700d9f8a061b20693ac3313079c5d60198aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFiMDcwMGQ5ZjhhMDYxYjIwNjkzYWMzMzEzMDc5YzVkNjAxOThhYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-06-13T18:16:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-06-13T18:16:31Z"}, "message": "ifcvt.c (cond_exec_get_condition): Use reversed_comparison_code.\n\n        * ifcvt.c (cond_exec_get_condition): Use reversed_comparison_code.\n        (cond_exec_process_if_block, dead_or_predicable): Likewise.\n\nFrom-SVN: r43336", "tree": {"sha": "700aa5a08c3d8de7e292ab226a1186c8f38958db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/700aa5a08c3d8de7e292ab226a1186c8f38958db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1b0700d9f8a061b20693ac3313079c5d60198aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b0700d9f8a061b20693ac3313079c5d60198aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b0700d9f8a061b20693ac3313079c5d60198aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b0700d9f8a061b20693ac3313079c5d60198aa/comments", "author": null, "committer": null, "parents": [{"sha": "984d2cb83ba16c299a1d30c6fd55568f6c16346c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/984d2cb83ba16c299a1d30c6fd55568f6c16346c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/984d2cb83ba16c299a1d30c6fd55568f6c16346c"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "f910e4c9e953879cfba6e1181dac1584614d2c9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b0700d9f8a061b20693ac3313079c5d60198aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b0700d9f8a061b20693ac3313079c5d60198aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1b0700d9f8a061b20693ac3313079c5d60198aa", "patch": "@@ -1,3 +1,8 @@\n+2001-06-13  Richard Henderson  <rth@redhat.com>\n+\n+\t* ifcvt.c (cond_exec_get_condition): Use reversed_comparison_code.\n+\t(cond_exec_process_if_block, dead_or_predicable): Likewise.\n+\n 2001-06-13  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* mips-tfile.c (copy_object): Always pass indexNil for symbol"}, {"sha": "2c267d4dd5a10716c23c5b97f012ef5436f6e4b7", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 25, "deletions": 10, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b0700d9f8a061b20693ac3313079c5d60198aa/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b0700d9f8a061b20693ac3313079c5d60198aa/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=b1b0700d9f8a061b20693ac3313079c5d60198aa", "patch": "@@ -291,9 +291,14 @@ cond_exec_get_condition (jump)\n      reverse the condition.  */\n   if (GET_CODE (XEXP (test_if, 2)) == LABEL_REF\n       && XEXP (XEXP (test_if, 2), 0) == JUMP_LABEL (jump))\n-    cond = gen_rtx_fmt_ee (reverse_condition (GET_CODE (cond)),\n-\t\t\t   GET_MODE (cond), XEXP (cond, 0),\n-\t\t\t   XEXP (cond, 1));\n+    {\n+      enum rtx_code rev = reversed_comparison_code (cond, jump);\n+      if (rev == UNKNOWN)\n+\treturn NULL_RTX;\n+\n+      cond = gen_rtx_fmt_ee (rev, GET_MODE (cond), XEXP (cond, 0),\n+\t\t\t     XEXP (cond, 1));\n+    }\n \n   return cond;\n }\n@@ -321,6 +326,7 @@ cond_exec_process_if_block (test_bb, then_bb, else_bb, join_bb)\n   rtx true_prob_val;\t\t/* probability of else block */\n   rtx false_prob_val;\t\t/* probability of then block */\n   int n_insns;\n+  enum rtx_code false_code;\n \n   /* Find the conditional jump to the ELSE or JOIN part, and isolate\n      the test.  */\n@@ -382,9 +388,13 @@ cond_exec_process_if_block (test_bb, then_bb, else_bb, join_bb)\n      the conditionally executed code.  */\n   \n   true_expr = test_expr;\n-  false_expr = gen_rtx_fmt_ee (reverse_condition (GET_CODE (true_expr)),\n-\t\t\t       GET_MODE (true_expr), XEXP (true_expr, 0),\n-\t\t\t       XEXP (true_expr, 1));\n+\n+  false_code = reversed_comparison_code (true_expr, test_bb->end);\n+  if (false_code != UNKNOWN)\n+    false_expr = gen_rtx_fmt_ee (false_code, GET_MODE (true_expr),\n+\t\t\t\t XEXP (true_expr, 0), XEXP (true_expr, 1));\n+  else\n+    false_expr = NULL_RTX;\n \n #ifdef IFCVT_MODIFY_TESTS\n   /* If the machine description needs to modify the tests, such as setting a\n@@ -414,8 +424,9 @@ cond_exec_process_if_block (test_bb, then_bb, else_bb, join_bb)\n      to conditional execution.  */\n \n   if (then_end\n-      && ! cond_exec_process_insns (then_start, then_end,\n-\t\t\t\t    false_expr, false_prob_val, then_mod_ok))\n+      && (! false_expr\n+\t  || ! cond_exec_process_insns (then_start, then_end, false_expr,\n+\t\t\t\t\tfalse_prob_val, then_mod_ok)))\n     goto fail;\n \n   if (else_bb\n@@ -2261,15 +2272,19 @@ dead_or_predicable (test_bb, merge_bb, other_bb, new_dest, reversep)\n       rtx cond, prob_val;\n \n       cond = cond_exec_get_condition (jump);\n+      if (! cond)\n+\treturn FALSE;\n \n       prob_val = find_reg_note (jump, REG_BR_PROB, NULL_RTX);\n       if (prob_val)\n \tprob_val = XEXP (prob_val, 0);\n \n       if (reversep)\n \t{\n-\t  cond = gen_rtx_fmt_ee (reverse_condition (GET_CODE (cond)),\n-\t\t\t         GET_MODE (cond), XEXP (cond, 0),\n+\t  enum rtx_code rev = reversed_comparison_code (cond, jump);\n+\t  if (rev == UNKNOWN)\n+\t    return NULL_RTX;\n+\t  cond = gen_rtx_fmt_ee (rev, GET_MODE (cond), XEXP (cond, 0),\n \t\t\t         XEXP (cond, 1));\n \t  if (prob_val)\n \t    prob_val = GEN_INT (REG_BR_PROB_BASE - INTVAL (prob_val));"}]}