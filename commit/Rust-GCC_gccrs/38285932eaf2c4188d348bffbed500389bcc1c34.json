{"sha": "38285932eaf2c4188d348bffbed500389bcc1c34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgyODU5MzJlYWYyYzQxODhkMzQ4YmZmYmVkNTAwMzg5YmNjMWMzNA==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-10-26T18:39:01Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-10-26T18:39:01Z"}, "message": "objc-act.c (finish_class): Do not synthesize bogus 'extern objc_object *_Foo;' declarations for @interface Foo.\n\n[gcc/objc/ChangeLog]\n2004-10-26  Ziemowit Laski  <zlaski@apple.com>\n\n        * objc-act.c (finish_class): Do not synthesize bogus\n        'extern objc_object *_Foo;' declarations for @interface Foo.\n\n[gcc/testsuite/ChangeLog]\n2004-10-26  Ziemowit Laski  <zlaski@apple.com>\n\n        * objc.dg/super-class-3.m: New test.\n\nFrom-SVN: r89601", "tree": {"sha": "fece3da7ba60683adc5c4817394fddabf4291c66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fece3da7ba60683adc5c4817394fddabf4291c66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38285932eaf2c4188d348bffbed500389bcc1c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38285932eaf2c4188d348bffbed500389bcc1c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38285932eaf2c4188d348bffbed500389bcc1c34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38285932eaf2c4188d348bffbed500389bcc1c34/comments", "author": null, "committer": null, "parents": [{"sha": "c5e1045b30758f8ccec2c5b11d606fd761458b0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e1045b30758f8ccec2c5b11d606fd761458b0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e1045b30758f8ccec2c5b11d606fd761458b0e"}], "stats": {"total": 69, "additions": 52, "deletions": 17}, "files": [{"sha": "7bb40f7cac9882f5e3d58b4a8552e1b4492b2e87", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38285932eaf2c4188d348bffbed500389bcc1c34/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38285932eaf2c4188d348bffbed500389bcc1c34/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=38285932eaf2c4188d348bffbed500389bcc1c34", "patch": "@@ -1,3 +1,8 @@\n+2004-10-26  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* objc-act.c (finish_class): Do not synthesize bogus\n+\t'extern objc_object *_Foo;' declarations for @interface Foo.\n+\n 2004-10-25  Ziemowit Laski  <zlaski@apple.com>\n \t    David Ayers  <d.ayers@inode.at>\n "}, {"sha": "7b21ede8cdf8e7708e97387a84b692e5c4a9ff9c", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38285932eaf2c4188d348bffbed500389bcc1c34/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38285932eaf2c4188d348bffbed500389bcc1c34/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=38285932eaf2c4188d348bffbed500389bcc1c34", "patch": "@@ -6896,23 +6896,6 @@ finish_class (tree class)\n \t\t\t     IDENTIFIER_POINTER (CLASS_SUPER_NAME (objc_implementation_context)));\n \t}\n     }\n-\n-  else if (TREE_CODE (class) == CLASS_INTERFACE_TYPE)\n-    {\n-      tree decl;\n-      const char *class_name = IDENTIFIER_POINTER (CLASS_NAME (class));\n-      char *string = (char *) alloca (strlen (class_name) + 3);\n-\n-      /* extern struct objc_object *_<my_name>; */\n-\n-      sprintf (string, \"_%s\", class_name);\n-\n-      decl = build_decl (VAR_DECL, get_identifier (string),\n-\t\t\t build_pointer_type (objc_object_reference));\n-      DECL_EXTERNAL (decl) = 1;\n-      lang_hooks.decls.pushdecl (decl);\n-      finish_decl (decl, NULL_TREE, NULL_TREE);\n-    }\n }\n \n static tree"}, {"sha": "4496f97ce8733ae9501eea5709c4199e6ae4bb28", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38285932eaf2c4188d348bffbed500389bcc1c34/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38285932eaf2c4188d348bffbed500389bcc1c34/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=38285932eaf2c4188d348bffbed500389bcc1c34", "patch": "@@ -1,3 +1,7 @@\n+2004-10-26  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* objc.dg/super-class-3.m: New test.\n+\n 2004-10-26  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* gcc.dg/cpp/direct2.c: Adjust expected errors, robustify parser"}, {"sha": "85396c236915d7496be74ebc535b78eff8936aa2", "filename": "gcc/testsuite/objc.dg/super-class-3.m", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38285932eaf2c4188d348bffbed500389bcc1c34/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38285932eaf2c4188d348bffbed500389bcc1c34/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fsuper-class-3.m?ref=38285932eaf2c4188d348bffbed500389bcc1c34", "patch": "@@ -0,0 +1,43 @@\n+/* Ensure that the compiler does not emit spurious extern declarations named '_Foo', where 'Foo'\n+   is an ObjC class name.  */\n+/* Contributed by Ziemowit Laski <zlaski@apple.com>.  */\n+/* { dg-do run } */\n+\n+#include <objc/Object.h>\n+#include <stdlib.h>\n+#define CHECK_IF(expr) if(!(expr)) abort()\n+\n+@interface _Child: Object\n++ (int) flashCache;\n+@end\n+\n+@interface Child: _Child\n++ (int) flushCache1;\n+@end\n+\n+@interface Child (Categ)\n++ (int) flushCache2;\n+@end\n+\n+int _Object = 23;  /* Should not conflict with @interface Object.  */\n+\n+@implementation _Child\n++ (int) flashCache { return 12 + _Object; }\n+@end\n+\n+@implementation Child\n++ (int) flushCache1 { return 7 + [super flashCache]; }\n+@end\n+\n+@implementation Child (Categ)\n++ (int) flushCache2 { return 9 + [super flashCache]; }\n+@end\n+\n+int main(void) {\n+  CHECK_IF([_Child flashCache] == 35);\n+  CHECK_IF([Child flushCache1] == 42);\n+  CHECK_IF([Child flushCache2] == 44);\n+\n+  return 0; \n+}\n+"}]}