{"sha": "ac8996edb14eef0a15cd0ce850fde2be5e227e69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM4OTk2ZWRiMTRlZWYwYTE1Y2QwY2U4NTBmZGUyYmU1ZTIyN2U2OQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2020-06-03T21:25:19Z"}, "committer": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2020-07-09T21:04:41Z"}, "message": "openacc: Fortran derived-type mapping fix\n\nFix a bug with mapping Fortran components which themselves have derived\ntypes in the OpenACC 2.5+ manual deep-copy support.\n\n2020-07-09  Julian Brown  <julian@codesourcery.com>\n\ngcc/fortran/\n\t* trans-openmp.c (gfc_trans_omp_clauses): Use 'inner' not 'decl' for\n\tderived type members which themselves have derived types.\n\ngcc/testsuite/\n\t* gfortran.dg/goacc/mapping-tests-3.f90: New test.\n\t* gfortran.dg/goacc/mapping-tests-4.f90: New test.", "tree": {"sha": "7890eda2999d94797e02c0dd3d78a0185b94fc83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7890eda2999d94797e02c0dd3d78a0185b94fc83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac8996edb14eef0a15cd0ce850fde2be5e227e69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac8996edb14eef0a15cd0ce850fde2be5e227e69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac8996edb14eef0a15cd0ce850fde2be5e227e69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac8996edb14eef0a15cd0ce850fde2be5e227e69/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd263be4b523ff1b7f7dda49d856cc57221e8d21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd263be4b523ff1b7f7dda49d856cc57221e8d21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd263be4b523ff1b7f7dda49d856cc57221e8d21"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "38e141d83603fb9948ebd1951ad10c78940b4979", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac8996edb14eef0a15cd0ce850fde2be5e227e69/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac8996edb14eef0a15cd0ce850fde2be5e227e69/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=ac8996edb14eef0a15cd0ce850fde2be5e227e69", "patch": "@@ -2774,9 +2774,9 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n \t\t\t}\n \t\t      else\n \t\t\t{\n-\t\t\t  OMP_CLAUSE_DECL (node) = decl;\n+\t\t\t  OMP_CLAUSE_DECL (node) = inner;\n \t\t\t  OMP_CLAUSE_SIZE (node)\n-\t\t\t    = TYPE_SIZE_UNIT (TREE_TYPE (decl));\n+\t\t\t    = TYPE_SIZE_UNIT (TREE_TYPE (inner));\n \t\t\t}\n \t\t    }\n \t\t  else if (lastcomp->next"}, {"sha": "890ca781967d1fcf408186a58593cd7aefe2e8c4", "filename": "gcc/testsuite/gfortran.dg/goacc/mapping-tests-3.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac8996edb14eef0a15cd0ce850fde2be5e227e69/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac8996edb14eef0a15cd0ce850fde2be5e227e69/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-3.f90?ref=ac8996edb14eef0a15cd0ce850fde2be5e227e69", "patch": "@@ -0,0 +1,15 @@\n+! { dg-additional-options \"-fdump-tree-gimple\" }\n+\n+subroutine foo\n+  type one\n+    integer i, j\n+  end type\n+  type two\n+    type(one) A, B\n+  end type\n+\n+  type(two) x\n+\n+  !$acc enter data copyin(x%A)\n+! { dg-final { scan-tree-dump-times \"omp target oacc_enter_exit_data map\\\\(struct:x \\\\\\[len: 1\\\\\\]\\\\) map\\\\(to:x.a \\\\\\[len: \\[0-9\\]+\\\\\\]\\\\)\" 1 \"gimple\" } }\n+end"}, {"sha": "17cc4841d4e358ee4128eaa25dcdd49dd7e4aae1", "filename": "gcc/testsuite/gfortran.dg/goacc/mapping-tests-4.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac8996edb14eef0a15cd0ce850fde2be5e227e69/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac8996edb14eef0a15cd0ce850fde2be5e227e69/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fmapping-tests-4.f90?ref=ac8996edb14eef0a15cd0ce850fde2be5e227e69", "patch": "@@ -0,0 +1,17 @@\n+subroutine foo\n+  type one\n+    integer i, j\n+  end type\n+  type two\n+    type(one) A, B\n+  end type\n+\n+  type(two) x\n+\n+! This is accepted at present, although it represents a probably-unintentional\n+! overlapping subcopy.\n+  !$acc enter data copyin(x%A, x%A%i)\n+! But this raises an error.\n+  !$acc enter data copyin(x%A, x%A%i, x%A%i)\n+! { dg-error \".x.a.i. appears more than once in map clauses\" \"\" { target *-*-* } .-1 }\n+end"}]}