{"sha": "6c13d91005127b6c1d09a7cdfa471bca08faafb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMxM2Q5MTAwNTEyN2I2YzFkMDlhN2NkZmE0NzFiY2EwOGZhYWZiOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-06-25T02:26:15Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-06-25T02:26:15Z"}, "message": "(LIMIT_RELOAD_CLASS): Define.\n\nFrom-SVN: r14301", "tree": {"sha": "e6c6b7097ce4251697c8a813e0a741f5211de2d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6c6b7097ce4251697c8a813e0a741f5211de2d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c13d91005127b6c1d09a7cdfa471bca08faafb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c13d91005127b6c1d09a7cdfa471bca08faafb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c13d91005127b6c1d09a7cdfa471bca08faafb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c13d91005127b6c1d09a7cdfa471bca08faafb9/comments", "author": null, "committer": null, "parents": [{"sha": "011063bd06a65aaa62f19f1991a19fa575b240f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/011063bd06a65aaa62f19f1991a19fa575b240f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/011063bd06a65aaa62f19f1991a19fa575b240f9"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "c5849adcb2c2352b50b9ed40c564b284ebf01a2e", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c13d91005127b6c1d09a7cdfa471bca08faafb9/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c13d91005127b6c1d09a7cdfa471bca08faafb9/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=6c13d91005127b6c1d09a7cdfa471bca08faafb9", "patch": "@@ -778,6 +778,16 @@ extern enum reg_class regno_reg_class[];\n       ? FP_REGS : NO_REGS)\t\t\t\\\n    : (CLASS))\n \n+/* Force QImode output reloads from subregs to be allocated to data regs,\n+   since QImode stores from address regs are not supported.  We make the\n+   assumption that if the class is not ADDR_REGS, then it must be a superset\n+   of DATA_REGS.  */\n+\n+#define LIMIT_RELOAD_CLASS(MODE, CLASS) \\\n+  (((MODE) == QImode && (CLASS) != ADDR_REGS)\t\\\n+   ? DATA_REGS\t\t\t\t\t\\\n+   : (CLASS))\n+\n /* Return the maximum number of consecutive registers\n    needed to represent mode MODE in a register of class CLASS.  */\n /* On the 68000, this is the size of MODE in words,"}]}