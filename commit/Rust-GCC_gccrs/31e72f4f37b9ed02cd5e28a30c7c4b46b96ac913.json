{"sha": "31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFlNzJmNGYzN2I5ZWQwMmNkNWUyOGEzMGM3YzRiNDZiOTZhYzkxMw==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2017-11-30T14:41:49Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2017-11-30T14:41:49Z"}, "message": "[ARC] Use TARGET_CANNOT_SUBSTITUTE_MEM_EQUIV.\n\nSometimes the memory equivalent is not valid due to a large offset.\nFor example replacing the ap register with its fp/sp-equivalent during\nLRA step. To solve this we introduced TARGET_CANNOT_SUBSTITUTE_MEM_EQUIV.\n\ngcc/\n2017-08-08  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.c (arc_cannot_substitute_mem_equiv_p): New function.\n\t(TARGET_CANNOT_SUBSTITUTE_MEM_EQUIV_P): Define.\n\ngcc/testsuite\n2017-08-08  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* gcc.target/arc/lra-1.c: New test.\n\nFrom-SVN: r255273", "tree": {"sha": "94f57267b8c30942a3250e1ee99deb3db573c34f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94f57267b8c30942a3250e1ee99deb3db573c34f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e47b37ca827cd694e17b8688205cb889751b528d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e47b37ca827cd694e17b8688205cb889751b528d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e47b37ca827cd694e17b8688205cb889751b528d"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "ddcd9832f524e2ef00903033978a13a0bdddf062", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913", "patch": "@@ -1,3 +1,9 @@\n+2017-11-30  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.c (arc_cannot_substitue_mem_equiv_p): New\n+\tfunction.\n+\t(TARGET_CANNOT_SUBSTITUTE_MEM_EQUIV_P): Define.\n+\n 2017-11-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/83210"}, {"sha": "e739d60a64af0a74ce0532b287df5d6f58260dda", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913", "patch": "@@ -10805,12 +10805,24 @@ arc_use_anchors_for_symbol_p (const_rtx symbol)\n   return default_use_anchors_for_symbol_p (symbol);\n }\n \n+/* Return true if SUBST can't safely replace its equivalent during RA.  */\n+static bool\n+arc_cannot_substitute_mem_equiv_p (rtx)\n+{\n+  /* If SUBST is mem[base+index], the address may not fit ISA,\n+     thus return true.  */\n+  return true;\n+}\n+\n #undef TARGET_USE_ANCHORS_FOR_SYMBOL_P\n #define TARGET_USE_ANCHORS_FOR_SYMBOL_P arc_use_anchors_for_symbol_p\n \n #undef TARGET_CONSTANT_ALIGNMENT\n #define TARGET_CONSTANT_ALIGNMENT constant_alignment_word_strings\n \n+#undef TARGET_CANNOT_SUBSTITUTE_MEM_EQUIV_P\n+#define TARGET_CANNOT_SUBSTITUTE_MEM_EQUIV_P arc_cannot_substitute_mem_equiv_p\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-arc.h\""}, {"sha": "f12d075a1e615fa8dd09f8b9d843b9b37f9809ed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913", "patch": "@@ -1,3 +1,7 @@\n+2017-11-30  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* gcc.target/arc/lra-1.c: New test.\n+\n 2017-11-30  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* gcc.target/powerpc/fold-vec-abs-char-fwrapv.c: Add xxspltib insn"}, {"sha": "27336d1a6afa853497ed36ace625127896ab5d7e", "filename": "gcc/testsuite/gcc.target/arc/lra-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Flra-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Flra-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Flra-1.c?ref=31e72f4f37b9ed02cd5e28a30c7c4b46b96ac913", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -w -mlra\" } */\n+\n+/* ap is replaced with an address like base+offset by lra,\n+   where offset is larger than s9, resulting into an ICE.  */\n+\n+typedef struct { char a[500] } b;\n+c;\n+struct d {\n+  short e;\n+  b f\n+} g(int h, int i, int j, int k, char l, int m, int n, char *p) {\n+again:;\n+  struct d o;\n+  *p = c = ({ q(o); });\n+  goto again;\n+}"}]}