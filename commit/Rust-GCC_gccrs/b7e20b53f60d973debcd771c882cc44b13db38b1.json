{"sha": "b7e20b53f60d973debcd771c882cc44b13db38b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdlMjBiNTNmNjBkOTczZGViY2Q3NzFjODgyY2M0NGIxM2RiMzhiMQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2005-06-09T22:21:48Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2005-06-09T22:21:48Z"}, "message": "re PR c/21759 (Implement warning for codes at the intersection of C and C++)\n\n        PR c/21759\n        * c.opt (Wc++-compat): New.\n        * doc/invoke.texi (-Wc++-compat): Document.\n        * c-typeck.c (convert_for_assignment): Check for implicit\n        conversion void* -> T*.\ntestsuite/\n        * gcc.dg/Wcxx-compat-1.c: New.\n\nFrom-SVN: r100806", "tree": {"sha": "5ba1ed694692d32697b04063c0e9fb9c31bfdbd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ba1ed694692d32697b04063c0e9fb9c31bfdbd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7e20b53f60d973debcd771c882cc44b13db38b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e20b53f60d973debcd771c882cc44b13db38b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7e20b53f60d973debcd771c882cc44b13db38b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e20b53f60d973debcd771c882cc44b13db38b1/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92f5e87c2ba9b5f83b8b465a43e43d41a2801265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f5e87c2ba9b5f83b8b465a43e43d41a2801265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92f5e87c2ba9b5f83b8b465a43e43d41a2801265"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "3c9b760cb970ac98f24b391f6ca0e6ebea6ff2a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7e20b53f60d973debcd771c882cc44b13db38b1", "patch": "@@ -1,3 +1,11 @@\n+2005-06-09  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\tPR c/21759\n+\t* c.opt (Wc++-compat): New.\n+\t* doc/invoke.texi (-Wc++-compat): Document.\n+\t* c-typeck.c (convert_for_assignment): Check for implicit\n+\tconversion void* -> T*.\n+\n 2005-06-09  Gabriel Dos Reis  <gdr@cs.tamu.edu>\n \n \t* machmode.h (to_machine_mode): New."}, {"sha": "918afa0464f7dd522a8dc394edd6fe0569e5b2c3", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=b7e20b53f60d973debcd771c882cc44b13db38b1", "patch": "@@ -3779,6 +3779,18 @@ convert_for_assignment (tree type, tree rhs, enum impl_conv errtype,\n                            || targetm.vector_opaque_p (rhstype))\n         && TREE_CODE (ttl) == VECTOR_TYPE\n         && TREE_CODE (ttr) == VECTOR_TYPE;\n+      \n+      /* C++ does not allow the implicit conversion void* -> T*.  However,\n+         for the purpose of reducing the number of false positives, we\n+         tolerate the special case of\n+\n+                int *p = NULL;\n+\n+         where NULL is typically defined in C to be '(void *) 0'.  */\n+      if (OPT_Wc___compat && VOID_TYPE_P (ttr) && rhs != null_pointer_node\n+          && !VOID_TYPE_P (ttl))\n+        warning (OPT_Wc___compat, \"request for implicit conversion from \"\n+                 \"%qT to %qT not permitted in C++\", rhstype, type);\n \n       /* Any non-function converts to a [const][volatile] void *\n \t and vice versa; otherwise, targets must be the same."}, {"sha": "ef8705db2e0ae3001ee7cfb32a15c1db991c7f04", "filename": "gcc/c.opt", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=b7e20b53f60d973debcd771c882cc44b13db38b1", "patch": "@@ -128,6 +128,11 @@ Wbad-function-cast\n C ObjC Var(warn_bad_function_cast)\n Warn about casting functions to incompatible types\n \n+Wc++-compat\n+C Var(warn_cxx_compat)\n+Warn about C constructs that are not in the common subset of C and C++\n+\n+\n Wcast-qual\n C ObjC C++ ObjC++ Var(warn_cast_qual)\n Warn about casts which discard qualifiers"}, {"sha": "95846f162739c5639802a04a54ca0c06ab8b8250", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b7e20b53f60d973debcd771c882cc44b13db38b1", "patch": "@@ -219,7 +219,7 @@ Objective-C and Objective-C++ Dialects}.\n @xref{Warning Options,,Options to Request or Suppress Warnings}.\n @gccoptlist{-fsyntax-only  -pedantic  -pedantic-errors @gol\n -w  -Wextra  -Wall  -Waggregate-return -Wno-attributes @gol\n--Wcast-align  -Wcast-qual  -Wchar-subscripts  -Wcomment @gol\n+-Wc++-compat -Wcast-align  -Wcast-qual  -Wchar-subscripts  -Wcomment @gol\n -Wconversion  -Wno-deprecated-declarations @gol\n -Wdisabled-optimization  -Wno-div-by-zero  -Wno-endif-labels @gol\n -Werror  -Werror-implicit-function-declaration @gol\n@@ -2993,6 +2993,11 @@ to functions.\n Warn whenever a function call is cast to a non-matching type.\n For example, warn if @code{int malloc()} is cast to @code{anything *}.\n \n+@item -Wc++-compat\n+Warn about ISO C constructs that are outside of the common subset of\n+ISO C and ISO C++, e.g.@: request for implicit conversion from\n+@code{void *} to a pointer to non-@code{void} type.\n+\n @item -Wcast-qual\n @opindex Wcast-qual\n Warn whenever a pointer is cast so as to remove a type qualifier from"}, {"sha": "7fc18e98ed695068613a67b54499cf2772bea08c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b7e20b53f60d973debcd771c882cc44b13db38b1", "patch": "@@ -1,3 +1,7 @@\n+2005-06-09  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* gcc.dg/Wcxx-compat-1.c: New.\n+\n 2005-06-09  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/21480"}, {"sha": "91500421e852d8c23b622a3c8163cdfde4615b1d", "filename": "gcc/testsuite/gcc.dg/Wcxx-compat-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2Ftestsuite%2Fgcc.dg%2FWcxx-compat-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e20b53f60d973debcd771c882cc44b13db38b1/gcc%2Ftestsuite%2Fgcc.dg%2FWcxx-compat-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWcxx-compat-1.c?ref=b7e20b53f60d973debcd771c882cc44b13db38b1", "patch": "@@ -0,0 +1,11 @@\n+/* PR c/21759  */\n+/* { dg-options \"-Wc++-compat\" } */\n+\n+int\n+main(void)\n+{\n+   void *p = 0;\n+   int *q = p;                  /* { dg-warning \"not permitted\" } */\n+   double* t = (void *)0;\n+   return p != q;\n+}"}]}