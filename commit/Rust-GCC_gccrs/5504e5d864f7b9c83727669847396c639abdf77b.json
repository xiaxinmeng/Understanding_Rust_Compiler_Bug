{"sha": "5504e5d864f7b9c83727669847396c639abdf77b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUwNGU1ZDg2NGY3YjljODM3Mjc2Njk4NDczOTZjNjM5YWJkZjc3Yg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-07-06T08:54:56Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-07-06T08:54:56Z"}, "message": "re PR c++/28262 (Inconsistent \"default arguments are only permitted for function parameters\".)\n\n/cp\n2013-07-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/28262\n\t* parser.c (cp_parser_init_declarator): If we are parsing a typedef\n\tset parser->default_arg_ok_p to false before cp_parser_declarator.\n\n/testsuite\n2013-07-06  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/28262\n\t* g++.dg/parse/defarg16.C: New.\n\nFrom-SVN: r200730", "tree": {"sha": "0b0bbcb0102dac83bf4b9a61a67885dcc67f3b9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b0bbcb0102dac83bf4b9a61a67885dcc67f3b9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5504e5d864f7b9c83727669847396c639abdf77b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5504e5d864f7b9c83727669847396c639abdf77b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5504e5d864f7b9c83727669847396c639abdf77b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5504e5d864f7b9c83727669847396c639abdf77b/comments", "author": null, "committer": null, "parents": [{"sha": "90b0f444fa56c5282c8543a7191095eabd79529a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b0f444fa56c5282c8543a7191095eabd79529a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90b0f444fa56c5282c8543a7191095eabd79529a"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "333249a4bd1a214c11d7bb85d58d4e638c7ba223", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5504e5d864f7b9c83727669847396c639abdf77b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5504e5d864f7b9c83727669847396c639abdf77b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5504e5d864f7b9c83727669847396c639abdf77b", "patch": "@@ -1,3 +1,9 @@\n+2013-07-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/28262\n+\t* parser.c (cp_parser_init_declarator): If we are parsing a typedef\n+\tset parser->default_arg_ok_p to false before cp_parser_declarator.\n+\n 2013-07-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/14263"}, {"sha": "05643e46ad85ac0ec5ccf063c53f0cd3fbc78e7a", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5504e5d864f7b9c83727669847396c639abdf77b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5504e5d864f7b9c83727669847396c639abdf77b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=5504e5d864f7b9c83727669847396c639abdf77b", "patch": "@@ -16182,6 +16182,7 @@ cp_parser_init_declarator (cp_parser* parser,\n   bool friend_p;\n   tree pushed_scope = NULL_TREE;\n   bool range_for_decl_p = false;\n+  bool saved_default_arg_ok_p = parser->default_arg_ok_p;\n \n   /* Gather the attributes that were provided with the\n      decl-specifiers.  */\n@@ -16192,6 +16193,10 @@ cp_parser_init_declarator (cp_parser* parser,\n   if (function_definition_p)\n     *function_definition_p = false;\n \n+  /* Default arguments are only permitted for function parameters.  */\n+  if (decl_spec_seq_has_spec_p (decl_specifiers, ds_typedef))\n+    parser->default_arg_ok_p = false;\n+\n   /* Defer access checks while parsing the declarator; we cannot know\n      what names are accessible until we know what is being\n      declared.  */\n@@ -16207,6 +16212,8 @@ cp_parser_init_declarator (cp_parser* parser,\n   /* Gather up the deferred checks.  */\n   stop_deferring_access_checks ();\n \n+  parser->default_arg_ok_p = saved_default_arg_ok_p;\n+\n   /* If the DECLARATOR was erroneous, there's no need to go\n      further.  */\n   if (declarator == cp_error_declarator)"}, {"sha": "71615362afc890eda02dfc9e8cc90cca0cd6a344", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5504e5d864f7b9c83727669847396c639abdf77b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5504e5d864f7b9c83727669847396c639abdf77b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5504e5d864f7b9c83727669847396c639abdf77b", "patch": "@@ -1,3 +1,8 @@\n+2013-07-06  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/28262\n+\t* g++.dg/parse/defarg16.C: New.\n+\n 2013-07-05  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/55342"}, {"sha": "8eb0014ddbff6ca282c4d86102dd7c95a06f1844", "filename": "gcc/testsuite/g++.dg/parse/defarg16.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5504e5d864f7b9c83727669847396c639abdf77b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdefarg16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5504e5d864f7b9c83727669847396c639abdf77b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdefarg16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdefarg16.C?ref=5504e5d864f7b9c83727669847396c639abdf77b", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/28262\n+\n+typedef void (funcptrhack) (int = 10);   // { dg-error \"default arguments\" }\n+typedef funcptrhack * funcptr;"}]}