{"sha": "8f56cb5163063ec7871db11c52c700065886d448", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY1NmNiNTE2MzA2M2VjNzg3MWRiMTFjNTJjNzAwMDY1ODg2ZDQ0OA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2017-01-04T08:29:34Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2017-01-04T08:29:34Z"}, "message": "Update configure deps, remove stray \\xA0 in picflag.m4, regenerate\n\nAlso fix a stray changelog entry.  Some of the regen here is due to\nprevious changes not being regenerated properly, in part due to the\nmissing configure dependencies.\n\n\t* configure: Regenerate.\nconfig/\n\t* picflag.m4: Remove stray \\xA0 in comment.\ngcc/\n\t* Makefile.in (aclocal_deps): Update and order as per aclocal.m4.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\nlibada/\n\t* Makefile.in (configure_deps): Update and order as per\n\tconfigure.ac sinclude.\n\t* configure: Regenerate.\nlibgcc/\n\t* Makefile.in (configure_deps): Update.\n\t* configure: Regenerate.\nlibiberty/\n\t* Makefile.in (configure_deps): Update.\n\t* configure: Regenerate.\nlibitm/\n\t* Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r244049", "tree": {"sha": "d64385dd42f77b6372a670f9ce751385991012d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d64385dd42f77b6372a670f9ce751385991012d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f56cb5163063ec7871db11c52c700065886d448", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f56cb5163063ec7871db11c52c700065886d448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f56cb5163063ec7871db11c52c700065886d448", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f56cb5163063ec7871db11c52c700065886d448/comments", "author": null, "committer": null, "parents": [{"sha": "4567f969b29aeeb2877d23ee08133f09dbada93d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4567f969b29aeeb2877d23ee08133f09dbada93d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4567f969b29aeeb2877d23ee08133f09dbada93d"}], "stats": {"total": 118, "additions": 92, "deletions": 26}, "files": [{"sha": "db4125af14aab4388c641a43989d646e630e8671", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -1,3 +1,7 @@\n+2017-01-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure: Regenerate.\n+\n 2016-12-29  Ben Elliston  <bje@gnu.org>\n \n \t* config.sub: Import latest version.\n@@ -18,8 +22,7 @@\n \n 2016-12-01  Ma Jiang  <ma.jiang@zte.com.cn>\n \n-\t* config/acx.m4: Change \"tail +16c\" to \"tail -c +17\".\n-\t* configure: Regenerated.\n+\t* configure: Regenerate.\n \n 2016-12-01  Matthias Klose  <doko@ubuntu.com>\n "}, {"sha": "96230630314c35cf572fc0eeadecaf16252d9dce", "filename": "config/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -1,3 +1,7 @@\n+2017-01-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* picflag.m4: Remove stray \\xA0 in comment.\n+\n 2016-12-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* hwcaps.m4: New file.\n@@ -14,6 +18,10 @@\n \t* bootstrap-asan.mk: Replace LSAN_OPTIONS=detect_leaks=0 with\n \tASAN_OPTIONS=detect_leaks=0:use_odr_indicator=1.\n \n+2016-12-01  Ma Jiang  <ma.jiang@zte.com.cn>\n+\n+\t* acx.m4: Change \"tail +16c\" to \"tail -c +17\".\n+\n 2016-12-01  Matthias Klose  <doko@ubuntu.com>\n \n \t* pkg.m4: Remove."}, {"sha": "8b106f9af8868e6816633a0edf4dbcfad729520e", "filename": "config/picflag.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/config%2Fpicflag.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/config%2Fpicflag.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fpicflag.m4?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -12,7 +12,7 @@ case \"${$2}\" in\n \t  # If we are using a compiler supporting mdynamic-no-pic\n \t  # and the option has been tested as safe to add, then cancel\n \t  # it here, since the code generated is incompatible with shared\n-\t  #\u00a0libs.\n+\t  # libs.\n \t  *-mdynamic-no-pic*) $1='-fno-common -mno-dynamic-no-pic' ;;\n \t  *) $1=-fno-common ;;\n \tesac"}, {"sha": "ba5f8bf180fed44bdf8e136739632f0101b6638f", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -6033,7 +6033,7 @@ target_elf=no\n case $target in\n   *-darwin* | *-aix* | *-cygwin* | *-mingw* | *-aout* | *-*coff* | \\\n   *-msdosdjgpp* | *-vms* | *-wince* | *-*-pe* | \\\n-  alpha*-dec-osf* | hppa[12]*-*-hpux* | \\\n+  alpha*-dec-osf* | *-interix* | hppa[12]*-*-hpux* | \\\n   nvptx-*-none)\n     target_elf=no\n     ;;"}, {"sha": "06021eed5def4e01a11092b136e8a5cf3dfbc8cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -1,3 +1,9 @@\n+2017-01-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.in (aclocal_deps): Update and order as per aclocal.m4.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\n 2017-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/77569"}, {"sha": "b9773f40c97fed9288667feebbceb24f70648430", "filename": "gcc/Makefile.in", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -1799,21 +1799,23 @@ aclocal_deps = \\\n \t$(srcdir)/../lt~obsolete.m4 \\\n \t$(srcdir)/../config/acx.m4 \\\n \t$(srcdir)/../config/codeset.m4 \\\n-\t$(srcdir)/../config/extensions.m4 \\\n-\t$(srcdir)/../config/gettext-sister.m4 \\\n+\t$(srcdir)/../config/depstand.m4 \\\n+\t$(srcdir)/../config/dfp.m4 \\\n \t$(srcdir)/../config/gcc-plugin.m4 \\\n+\t$(srcdir)/../config/gettext-sister.m4 \\\n \t$(srcdir)/../config/iconv.m4 \\\n \t$(srcdir)/../config/lcmessage.m4 \\\n+\t$(srcdir)/../config/lead-dot.m4 \\\n \t$(srcdir)/../config/lib-ld.m4 \\\n \t$(srcdir)/../config/lib-link.m4 \\\n \t$(srcdir)/../config/lib-prefix.m4 \\\n+\t$(srcdir)/../config/mmap.m4 \\\n \t$(srcdir)/../config/override.m4 \\\n+\t$(srcdir)/../config/picflag.m4 \\\n \t$(srcdir)/../config/progtest.m4 \\\n         $(srcdir)/../config/stdint.m4 \\\n-\t$(srcdir)/../config/unwind_ipinfo.m4 \\\n \t$(srcdir)/../config/warnings.m4 \\\n-\t$(srcdir)/../config/dfp.m4 \\\n-\t$(srcdir)/../config/mmap.m4 \\\n+\t$(srcdir)/../config/zlib.m4 \\\n \t$(srcdir)/acinclude.m4\n \n $(srcdir)/configure: @MAINT@ $(srcdir)/configure.ac $(srcdir)/aclocal.m4"}, {"sha": "1959dd7a603f121b6f2a3e0f80563d6290299c8a", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -37,13 +37,6 @@\n #endif\n \n \n-/* Define to 0/1 if you want also extra run-time checking that might affect\n-   code generation. */\n-#ifndef USED_FOR_TARGET\n-#undef ENABLE_EXTRA_CHECKING\n-#endif\n-\n-\n /* Define 0/1 to force the choice for exception handling model. */\n #ifndef USED_FOR_TARGET\n #undef CONFIG_SJLJ_EXCEPTIONS\n@@ -115,6 +108,13 @@\n #endif\n \n \n+/* Define to 0/1 if you want extra run-time checking that might affect code\n+   generation. */\n+#ifndef USED_FOR_TARGET\n+#undef ENABLE_EXTRA_CHECKING\n+#endif\n+\n+\n /* Define to 1 to enable fixed-point arithmetic extension to C. */\n #ifndef USED_FOR_TARGET\n #undef ENABLE_FIXED_POINT"}, {"sha": "60cb979b558431949a20fc83482b198a091c5efe", "filename": "gcc/configure", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -5026,7 +5026,7 @@ case \"${target}\" in\n \t  # If we are using a compiler supporting mdynamic-no-pic\n \t  # and the option has been tested as safe to add, then cancel\n \t  # it here, since the code generated is incompatible with shared\n-\t  #\u00a0libs.\n+\t  # libs.\n \t  *-mdynamic-no-pic*) PICFLAG_FOR_TARGET='-fno-common -mno-dynamic-no-pic' ;;\n \t  *) PICFLAG_FOR_TARGET=-fno-common ;;\n \tesac\n@@ -5041,6 +5041,10 @@ case \"${target}\" in\n \t;;\n     i[34567]86-*-mingw* | x86_64-*-mingw*)\n \t;;\n+    i[34567]86-*-interix[3-9]*)\n+\t# Interix 3.x gcc -fpic/-fPIC options generate broken code.\n+\t# Instead, we relocate shared libraries at runtime.\n+\t;;\n     i[34567]86-*-nto-qnx*)\n \t# QNX uses GNU C++, but need to define -shared option too, otherwise\n \t# it will coredump.\n@@ -5071,7 +5075,8 @@ case \"${target}\" in\n \tPICFLAG_FOR_TARGET=-fpic\n \t;;\n     # FIXME: Simplify to sh*-*-netbsd*?\n-    sh-*-netbsdelf* | shl*-*-netbsdelf*)\n+    sh-*-netbsdelf* | shl*-*-netbsdelf* | sh5-*-netbsd* | sh5l*-*-netbsd* | \\\n+      sh64-*-netbsd* | sh64l*-*-netbsd*)\n \tPICFLAG_FOR_TARGET=-fpic\n \t;;\n     # Default to -fPIC unless specified otherwise."}, {"sha": "245c796f8668a6fd728ec07645cbd61256384521", "filename": "libada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FChangeLog?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -1,3 +1,9 @@\n+2017-01-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.in (configure_deps): Update and order as per\n+\tconfigure.ac sinclude.\n+\t* configure: Regenerate.\n+\n 2017-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "c61dfcf06a8bcd51fff6a866ffa7cb2eabca799d", "filename": "libada/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2FMakefile.in?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -189,8 +189,10 @@ AUTOCONF = autoconf\n configure_deps = \\\n \t$(srcdir)/configure.ac \\\n \t$(srcdir)/../config/acx.m4 \\\n+\t$(srcdir)/../config/multi.m4 \\\n \t$(srcdir)/../config/override.m4 \\\n-\t$(srcdir)/../config/multi.m4\n+\t$(srcdir)/../config/picflag.m4 \\\n+\t$(srcdir)/../config/unwind_ipinfo.m4\n \n $(srcdir)/configure: @MAINT@ $(configure_deps)\n \tcd $(srcdir) && $(AUTOCONF)"}, {"sha": "3b9f4ae3c5b8df61d611d466b154369d9032a9eb", "filename": "libada/configure", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libada%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libada%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libada%2Fconfigure?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -2829,7 +2829,7 @@ case \"${host}\" in\n \t  # If we are using a compiler supporting mdynamic-no-pic\n \t  # and the option has been tested as safe to add, then cancel\n \t  # it here, since the code generated is incompatible with shared\n-\t  #\u00a0libs.\n+\t  # libs.\n \t  *-mdynamic-no-pic*) PICFLAG='-fno-common -mno-dynamic-no-pic' ;;\n \t  *) PICFLAG=-fno-common ;;\n \tesac\n@@ -2844,6 +2844,10 @@ case \"${host}\" in\n \t;;\n     i[34567]86-*-mingw* | x86_64-*-mingw*)\n \t;;\n+    i[34567]86-*-interix[3-9]*)\n+\t# Interix 3.x gcc -fpic/-fPIC options generate broken code.\n+\t# Instead, we relocate shared libraries at runtime.\n+\t;;\n     i[34567]86-*-nto-qnx*)\n \t# QNX uses GNU C++, but need to define -shared option too, otherwise\n \t# it will coredump.\n@@ -2874,7 +2878,8 @@ case \"${host}\" in\n \tPICFLAG=-fpic\n \t;;\n     # FIXME: Simplify to sh*-*-netbsd*?\n-    sh-*-netbsdelf* | shl*-*-netbsdelf*)\n+    sh-*-netbsdelf* | shl*-*-netbsdelf* | sh5-*-netbsd* | sh5l*-*-netbsd* | \\\n+      sh64-*-netbsd* | sh64l*-*-netbsd*)\n \tPICFLAG=-fpic\n \t;;\n     # Default to -fPIC unless specified otherwise."}, {"sha": "45e5c4ed02395e297722762a6b71f944fc0ed50e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -1,3 +1,8 @@\n+2017-01-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.in (configure_deps): Update.\n+\t* configure: Regenerate.\n+\n 2017-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "ff48b68497cd194e20df4a02d7e396d7d0cfb237", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -165,8 +165,13 @@ configure_deps = \\\n \t$(srcdir)/../config/tls.m4 \\\n \t$(srcdir)/../config/acx.m4 \\\n \t$(srcdir)/../config/no-executables.m4 \\\n+\t$(srcdir)/../config/lib-ld.m4 \\\n \t$(srcdir)/../config/override.m4 \\\n+\t$(srcdir)/../config/picflag.m4 \\\n \t$(srcdir)/../config/dfp.m4 \\\n+\t$(srcdir)/../config/unwind_ipinfo.m4 \\\n+\t$(srcdir)/../config/gthr.m4 \\\n+\t$(srcdir)/../config/sjlj.m4\n \n $(srcdir)/configure: @MAINT@ $(srcdir)/configure.ac $(configure_deps)\n \tcd $(srcdir) && $(AUTOCONF)"}, {"sha": "3c0af1c4907dfb9da52dfceb07d2be2e28d49438", "filename": "libgcc/configure", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -2309,7 +2309,7 @@ case \"${host}\" in\n \t  # If we are using a compiler supporting mdynamic-no-pic\n \t  # and the option has been tested as safe to add, then cancel\n \t  # it here, since the code generated is incompatible with shared\n-\t  #\u00a0libs.\n+\t  # libs.\n \t  *-mdynamic-no-pic*) PICFLAG='-fno-common -mno-dynamic-no-pic' ;;\n \t  *) PICFLAG=-fno-common ;;\n \tesac\n@@ -2324,6 +2324,10 @@ case \"${host}\" in\n \t;;\n     i[34567]86-*-mingw* | x86_64-*-mingw*)\n \t;;\n+    i[34567]86-*-interix[3-9]*)\n+\t# Interix 3.x gcc -fpic/-fPIC options generate broken code.\n+\t# Instead, we relocate shared libraries at runtime.\n+\t;;\n     i[34567]86-*-nto-qnx*)\n \t# QNX uses GNU C++, but need to define -shared option too, otherwise\n \t# it will coredump.\n@@ -2354,7 +2358,8 @@ case \"${host}\" in\n \tPICFLAG=-fpic\n \t;;\n     # FIXME: Simplify to sh*-*-netbsd*?\n-    sh-*-netbsdelf* | shl*-*-netbsdelf*)\n+    sh-*-netbsdelf* | shl*-*-netbsdelf* | sh5-*-netbsd* | sh5l*-*-netbsd* | \\\n+      sh64-*-netbsd* | sh64l*-*-netbsd*)\n \tPICFLAG=-fpic\n \t;;\n     # Default to -fPIC unless specified otherwise."}, {"sha": "1d396b893da6d32939b9c6d95b0cca31e8d31c01", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -1,3 +1,8 @@\n+2017-01-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.in (configure_deps): Update.\n+\t* configure: Regenerate.\n+\n 2016-12-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/78761"}, {"sha": "1b11e7261c384cd89cdbf073de3a838e540d24fa", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -484,7 +484,8 @@ configure_deps = $(srcdir)/aclocal.m4 \\\n \t$(srcdir)/../config/acx.m4 \\\n \t$(srcdir)/../config/no-executables.m4 \\\n \t$(srcdir)/../config/override.m4 \\\n-\t$(srcdir)/../config/warnings.m4 \\\n+\t$(srcdir)/../config/picflag.m4 \\\n+\t$(srcdir)/../config/warnings.m4\n \n $(srcdir)/configure: @MAINT@ $(srcdir)/configure.ac $(configure_deps)\n \tcd $(srcdir) && $(AUTOCONF)"}, {"sha": "868793558f06d6c46c0b6978bebe5e59d67321a8", "filename": "libiberty/configure", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -5097,7 +5097,7 @@ case \"${host}\" in\n \t  # If we are using a compiler supporting mdynamic-no-pic\n \t  # and the option has been tested as safe to add, then cancel\n \t  # it here, since the code generated is incompatible with shared\n-\t  #\u00a0libs.\n+\t  # libs.\n \t  *-mdynamic-no-pic*) PICFLAG='-fno-common -mno-dynamic-no-pic' ;;\n \t  *) PICFLAG=-fno-common ;;\n \tesac\n@@ -5146,7 +5146,8 @@ case \"${host}\" in\n \tPICFLAG=-fpic\n \t;;\n     # FIXME: Simplify to sh*-*-netbsd*?\n-    sh-*-netbsdelf* | shl*-*-netbsdelf*)\n+    sh-*-netbsdelf* | shl*-*-netbsdelf* | sh5-*-netbsd* | sh5l*-*-netbsd* | \\\n+      sh64-*-netbsd* | sh64l*-*-netbsd*)\n \tPICFLAG=-fpic\n \t;;\n     # Default to -fPIC unless specified otherwise."}, {"sha": "0677c6dbd60c3c28defeef22e211ae9fd1651e1f", "filename": "libitm/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -1,3 +1,8 @@\n+2017-01-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2017-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "e87499723aa24c8d806e9eaf4e6a5dddea9ba423", "filename": "libitm/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libitm%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libitm%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FMakefile.in?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -67,6 +67,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/futex.m4 \\\n+\t$(top_srcdir)/../config/hwcaps.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/mmap.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\"}, {"sha": "1d6001f8b88c678358f5a56d84a22dc8d5f76abe", "filename": "libitm/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f56cb5163063ec7871db11c52c700065886d448/libitm%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f56cb5163063ec7871db11c52c700065886d448/libitm%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Ftestsuite%2FMakefile.in?ref=8f56cb5163063ec7871db11c52c700065886d448", "patch": "@@ -59,6 +59,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n \t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/futex.m4 \\\n+\t$(top_srcdir)/../config/hwcaps.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/mmap.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\"}]}