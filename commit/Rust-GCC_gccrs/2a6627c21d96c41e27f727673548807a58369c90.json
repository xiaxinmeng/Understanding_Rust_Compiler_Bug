{"sha": "2a6627c21d96c41e27f727673548807a58369c90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE2NjI3YzIxZDk2YzQxZTI3ZjcyNzY3MzU0ODgwN2E1ODM2OWM5MA==", "commit": {"author": {"name": "Jesper Nilsson", "email": "jesper.nilsson@axis.com", "date": "2008-02-13T23:32:57Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2008-02-13T23:32:57Z"}, "message": "md.texi (clz, ctz): Add reference.\n\n2008-02-14  Jesper Nilsson  <jesper.nilsson@axis.com>\n\n\t* doc/md.texi (clz, ctz): Add reference.\n\t* doc/rtl.texi (clz, ctz): Likewise.\n\nFrom-SVN: r132301", "tree": {"sha": "26a7675af96ece0f5fbd08271ab095795d033118", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26a7675af96ece0f5fbd08271ab095795d033118"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a6627c21d96c41e27f727673548807a58369c90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a6627c21d96c41e27f727673548807a58369c90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a6627c21d96c41e27f727673548807a58369c90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a6627c21d96c41e27f727673548807a58369c90/comments", "author": {"login": "jniax", "id": 79859639, "node_id": "MDQ6VXNlcjc5ODU5NjM5", "avatar_url": "https://avatars.githubusercontent.com/u/79859639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jniax", "html_url": "https://github.com/jniax", "followers_url": "https://api.github.com/users/jniax/followers", "following_url": "https://api.github.com/users/jniax/following{/other_user}", "gists_url": "https://api.github.com/users/jniax/gists{/gist_id}", "starred_url": "https://api.github.com/users/jniax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jniax/subscriptions", "organizations_url": "https://api.github.com/users/jniax/orgs", "repos_url": "https://api.github.com/users/jniax/repos", "events_url": "https://api.github.com/users/jniax/events{/privacy}", "received_events_url": "https://api.github.com/users/jniax/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d85ec3472d6149912717f657cc29f19fe059a91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d85ec3472d6149912717f657cc29f19fe059a91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d85ec3472d6149912717f657cc29f19fe059a91"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "34a061651754628207fec4af5a6f668f43c3e7d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6627c21d96c41e27f727673548807a58369c90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6627c21d96c41e27f727673548807a58369c90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a6627c21d96c41e27f727673548807a58369c90", "patch": "@@ -1,3 +1,8 @@\n+2008-02-14  Jesper Nilsson  <jesper.nilsson@axis.com>\n+\n+\t* doc/md.texi (clz, ctz): Add reference.\n+\t* doc/rtl.texi (clz, ctz): Likewise.\n+\n 2008-02-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR other/35148"}, {"sha": "93ff187d81503eeba5037dbf0e8e204aaae141e2", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6627c21d96c41e27f727673548807a58369c90/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6627c21d96c41e27f727673548807a58369c90/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=2a6627c21d96c41e27f727673548807a58369c90", "patch": "@@ -4058,16 +4058,20 @@ corresponds to the C data type @code{int}.\n @cindex @code{clz@var{m}2} instruction pattern\n @item @samp{clz@var{m}2}\n Store into operand 0 the number of leading 0-bits in @var{x}, starting\n-at the most significant bit position.  If @var{x} is 0, the result is\n-undefined.  @var{m} is the mode of operand 0; operand 1's mode is\n+at the most significant bit position.  If @var{x} is 0, the\n+@code{CLZ_DEFINED_VALUE_AT_ZERO} (@pxref{Misc}) macro defines if\n+the result is undefined or has a useful value.\n+@var{m} is the mode of operand 0; operand 1's mode is\n specified by the instruction pattern, and the compiler will convert the\n operand to that mode before generating the instruction.\n \n @cindex @code{ctz@var{m}2} instruction pattern\n @item @samp{ctz@var{m}2}\n Store into operand 0 the number of trailing 0-bits in @var{x}, starting\n-at the least significant bit position.  If @var{x} is 0, the result is\n-undefined.  @var{m} is the mode of operand 0; operand 1's mode is\n+at the least significant bit position.  If @var{x} is 0, the\n+@code{CTZ_DEFINED_VALUE_AT_ZERO} (@pxref{Misc}) macro defines if\n+the result is undefined or has a useful value.\n+@var{m} is the mode of operand 0; operand 1's mode is\n specified by the instruction pattern, and the compiler will convert the\n operand to that mode before generating the instruction.\n "}, {"sha": "f470745086e561b40aaa2b264a8a440b2d0777f7", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6627c21d96c41e27f727673548807a58369c90/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6627c21d96c41e27f727673548807a58369c90/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=2a6627c21d96c41e27f727673548807a58369c90", "patch": "@@ -2218,7 +2218,7 @@ valid.\n Represents the number of leading 0-bits in @var{x}, represented as an\n integer of mode @var{m}, starting at the most significant bit position.\n If @var{x} is zero, the value is determined by\n-@code{CLZ_DEFINED_VALUE_AT_ZERO}.  Note that this is one of\n+@code{CLZ_DEFINED_VALUE_AT_ZERO} (@pxref{Misc}).  Note that this is one of\n the few expressions that is not invariant under widening.  The mode of\n @var{x} will usually be an integer mode.\n \n@@ -2227,7 +2227,7 @@ the few expressions that is not invariant under widening.  The mode of\n Represents the number of trailing 0-bits in @var{x}, represented as an\n integer of mode @var{m}, starting at the least significant bit position.\n If @var{x} is zero, the value is determined by\n-@code{CTZ_DEFINED_VALUE_AT_ZERO}.  Except for this case,\n+@code{CTZ_DEFINED_VALUE_AT_ZERO} (@pxref{Misc}).  Except for this case,\n @code{ctz(x)} is equivalent to @code{ffs(@var{x}) - 1}.  The mode of\n @var{x} will usually be an integer mode.\n "}]}