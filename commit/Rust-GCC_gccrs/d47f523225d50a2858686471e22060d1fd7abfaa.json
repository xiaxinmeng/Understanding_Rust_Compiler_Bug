{"sha": "d47f523225d50a2858686471e22060d1fd7abfaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ3ZjUyMzIyNWQ1MGEyODU4Njg2NDcxZTIyMDYwZDFmZDdhYmZhYQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-07-31T08:19:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-07-31T08:19:24Z"}, "message": "gnat_ugn.texi: Update -gnatN documentation.\n\n2008-07-31  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_ugn.texi: Update -gnatN documentation.\n\n\t* gnat_rm.texi: Add note about pre/postcondition\n\tpragmas not checked in conjunction with front-end inlining.\n\nFrom-SVN: r138366", "tree": {"sha": "336a355d8e36b25aaccf62395ca1657014d3e65a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/336a355d8e36b25aaccf62395ca1657014d3e65a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d47f523225d50a2858686471e22060d1fd7abfaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47f523225d50a2858686471e22060d1fd7abfaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d47f523225d50a2858686471e22060d1fd7abfaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47f523225d50a2858686471e22060d1fd7abfaa/comments", "author": null, "committer": null, "parents": [{"sha": "c116b9806466d5f3cfa3d274af443fc538be52e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c116b9806466d5f3cfa3d274af443fc538be52e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c116b9806466d5f3cfa3d274af443fc538be52e3"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "3278d89d70395c30833c56459dd63d933acd1b96", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47f523225d50a2858686471e22060d1fd7abfaa/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47f523225d50a2858686471e22060d1fd7abfaa/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=d47f523225d50a2858686471e22060d1fd7abfaa", "patch": "@@ -3792,6 +3792,13 @@ package Sort is\n end Sort;\n @end smallexample\n \n+@noindent\n+Note: postcondition pragmas associated with subprograms that are\n+marked as Inline_Always, or those marked as Inline with front-end\n+inlining (-gnatN option set) are accepted and legality-checked\n+by the compiler, but are ignored at run-time even if postcondition\n+checking is enabled.\n+\n @node Pragma Precondition\n @unnumberedsec Pragma Precondition\n @cindex Preconditions\n@@ -3826,13 +3833,22 @@ package Math_Functions is\n end Math_Functions;\n @end smallexample\n \n-@code{Postcondition} pragmas may appear either immediate following the\n+@noindent\n+@code{Precondition} pragmas may appear either immediate following the\n (separate) declaration of a subprogram, or at the start of the\n declarations of a subprogram body. Only other pragmas may intervene\n (that is appear between the subprogram declaration and its\n postconditions, or appear before the postcondition in the\n declaration sequence in a subprogram body).\n \n+Note: postcondition pragmas associated with subprograms that are\n+marked as Inline_Always, or those marked as Inline with front-end\n+inlining (-gnatN option set) are accepted and legality-checked\n+by the compiler, but are ignored at run-time even if postcondition\n+checking is enabled.\n+\n+\n+\n @node Pragma Profile (Ravenscar)\n @unnumberedsec Pragma Profile (Ravenscar)\n @findex Ravenscar"}, {"sha": "c0361785853c2c7c51f5bcca9a5091f931b8f308", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47f523225d50a2858686471e22060d1fd7abfaa/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47f523225d50a2858686471e22060d1fd7abfaa/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=d47f523225d50a2858686471e22060d1fd7abfaa", "patch": "@@ -2368,14 +2368,20 @@ that for inlining to actually occur as a result of the use of this switch,\n it is necessary to compile in optimizing mode.\n \n @cindex @option{-gnatN} switch\n-The use of @option{-gnatN} activates a more extensive inlining optimization\n+The use of @option{-gnatN} activates  inlining optimization\n that is performed by the front end of the compiler. This inlining does\n not require that the code generation be optimized. Like @option{-gnatn},\n the use of this switch generates additional dependencies.\n Note that\n @option{-gnatN} automatically implies @option{-gnatn} so it is not necessary\n to specify both options.\n \n+When using a gcc-based back end (in practice this means using any version\n+of GNAT other than the JGNAT, .NET or GNAAMP versions), then the use of\n+@option{-gnatN} is deprecated, and the use of @option{-gnatn} is preferred.\n+Historically front end inlining was more extensive than the gcc back end\n+inlining, but that is no longer the case.\n+\n @item\n If an object file @file{O} depends on the proper body of a subunit through\n inlining or instantiation, it depends on the parent unit of the subunit."}]}