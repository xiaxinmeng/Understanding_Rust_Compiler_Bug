{"sha": "4a59d4472b9a0a4c25c4483a03c71def7cb3aa8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE1OWQ0NDcyYjlhMGE0YzI1YzQ0ODNhMDNjNzFkZWY3Y2IzYWE4Yw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-09T23:43:23Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-09T23:43:23Z"}, "message": "compiler: set captured variable address to nonescape until further flooded\n    \n    The escape analysis models closures by flowing captured variable\n    address to the closure node. However, the escape state for the\n    address expressions remained unset as ESCAPE_UNKNOWN. This\n    caused later passes to conclude that the address escapes. Fix this by\n    setting its escape state to ESCAPE_NONE first. If it escapes\n    (because the closure escapes), the flood phase will set its\n    escape state properly.\n    \n    Reviewed-on: https://go-review.googlesource.com/86240\n\nFrom-SVN: r256411", "tree": {"sha": "7caa556f1ebfcdaa15f65cd2e09266a79be3a052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7caa556f1ebfcdaa15f65cd2e09266a79be3a052"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a59d4472b9a0a4c25c4483a03c71def7cb3aa8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a59d4472b9a0a4c25c4483a03c71def7cb3aa8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a59d4472b9a0a4c25c4483a03c71def7cb3aa8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a59d4472b9a0a4c25c4483a03c71def7cb3aa8c/comments", "author": null, "committer": null, "parents": [{"sha": "47e8a22a179a53f681ab4e2478ffd62d01fb5f52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47e8a22a179a53f681ab4e2478ffd62d01fb5f52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47e8a22a179a53f681ab4e2478ffd62d01fb5f52"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "fc2e65d5259017c7f6c7f9768b4a25b23926ef4a", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a59d4472b9a0a4c25c4483a03c71def7cb3aa8c/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a59d4472b9a0a4c25c4483a03c71def7cb3aa8c/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=4a59d4472b9a0a4c25c4483a03c71def7cb3aa8c", "patch": "@@ -1,4 +1,4 @@\n-7c5e4d67041e3529a055a923b2b9f5ef09aa72a3\n+bea521d1d8688bea5b14b1ae2a03aec949f48a44\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "2e9798ea7415d7eb30cebbe2e54f30c5e760972a", "filename": "gcc/go/gofrontend/escape.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a59d4472b9a0a4c25c4483a03c71def7cb3aa8c/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a59d4472b9a0a4c25c4483a03c71def7cb3aa8c/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fescape.cc?ref=4a59d4472b9a0a4c25c4483a03c71def7cb3aa8c", "patch": "@@ -1774,9 +1774,7 @@ Escape_analysis_assign::expression(Expression** pexpr)\n \t    for (; p != sce->vals()->end(); ++p)\n \t      {\n \t\tNode* enclosed_node = Node::make_node(*p);\n-\t\tNode::Escape_state* state =\n-\t\t  enclosed_node->state(this->context_, NULL);\n-\t\tstate->loop_depth = this->context_->loop_depth();\n+\t\tthis->context_->track(enclosed_node);\n \t\tthis->assign(closure_node, enclosed_node);\n \t      }\n \t  }"}]}