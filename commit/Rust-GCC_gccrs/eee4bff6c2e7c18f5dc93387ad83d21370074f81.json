{"sha": "eee4bff6c2e7c18f5dc93387ad83d21370074f81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVlNGJmZjZjMmU3YzE4ZjVkYzkzMzg3YWQ4M2QyMTM3MDA3NGY4MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-14T11:19:23Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-14T11:19:23Z"}, "message": "(call, call_value): Don't use call_operand, since checking for\nrecursive calls at this point is not safe.\n\nFrom-SVN: r2458", "tree": {"sha": "192d89899d4fcc76868fca43a2479c2fe08792da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/192d89899d4fcc76868fca43a2479c2fe08792da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eee4bff6c2e7c18f5dc93387ad83d21370074f81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee4bff6c2e7c18f5dc93387ad83d21370074f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eee4bff6c2e7c18f5dc93387ad83d21370074f81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee4bff6c2e7c18f5dc93387ad83d21370074f81/comments", "author": null, "committer": null, "parents": [{"sha": "eb9aa33885d0bc047be9c06137bf2044a02b3bdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb9aa33885d0bc047be9c06137bf2044a02b3bdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb9aa33885d0bc047be9c06137bf2044a02b3bdf"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "316baa48226fd64af6cf3f3a7aeeadc854397dec", "filename": "gcc/config/a29k/a29k.md", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee4bff6c2e7c18f5dc93387ad83d21370074f81/gcc%2Fconfig%2Fa29k%2Fa29k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee4bff6c2e7c18f5dc93387ad83d21370074f81/gcc%2Fconfig%2Fa29k%2Fa29k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.md?ref=eee4bff6c2e7c18f5dc93387ad83d21370074f81", "patch": "@@ -150,7 +150,10 @@\n   if (GET_CODE (operands[0]) != MEM)\n     abort ();\n \n-  if (! call_operand (XEXP (operands[0], 0), SImode))\n+  /* We tell here whether this is a recursive call, since this insn may\n+     later be inlined into another function.  */\n+  if (! TARGET_SMALL_MEMORY\n+      && GET_CODE (XEXP (operands[0], 0)) == SYMBOL_REF)\n     operands[0] = gen_rtx (MEM, SImode,\n \t\t\t   force_reg (Pmode, XEXP (operands[0], 0)));\n \n@@ -169,7 +172,10 @@\n   if (GET_CODE (operands[1]) != MEM)\n     abort ();\n \n-  if (! call_operand (XEXP (operands[1], 0), SImode))\n+  /* We tell here whether this is a recursive call, since this insn may\n+     later be inlined into another function.  */\n+  if (! TARGET_SMALL_MEMORY\n+      && GET_CODE (XEXP (operands[1], 0)) == SYMBOL_REF)\n     operands[1] = gen_rtx (MEM, SImode,\n \t\t\t   force_reg (Pmode, XEXP (operands[1], 0)));\n "}]}