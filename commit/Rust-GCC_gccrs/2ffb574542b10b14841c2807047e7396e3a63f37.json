{"sha": "2ffb574542b10b14841c2807047e7396e3a63f37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZmYjU3NDU0MmIxMGIxNDg0MWMyODA3MDQ3ZTczOTZlM2E2M2YzNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-09-20T19:36:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-09-20T19:36:47Z"}, "message": "P0409R2 - allow lambda capture [=, this]\n\n\tP0409R2 - allow lambda capture [=, this]\n\t* parser.c (cp_parser_lambda_introducer): For cxx2a don't pedwarn on\n\tredundant [=, this].\n\n\t* g++.dg/cpp1z/lambda-this1.C: Don't expect error for c++2a on [=, this]\n\tcapture.  Add further tests.\n\t* g++.dg/cpp0x/lambda/lambda-capture-redundancy.C: Don't expect error\n\tfor c++2a on [=, this] capture.\n\nFrom-SVN: r253030", "tree": {"sha": "7a26e0a41d63380941332667f2b8a5f7d7ad8d52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a26e0a41d63380941332667f2b8a5f7d7ad8d52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ffb574542b10b14841c2807047e7396e3a63f37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ffb574542b10b14841c2807047e7396e3a63f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ffb574542b10b14841c2807047e7396e3a63f37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ffb574542b10b14841c2807047e7396e3a63f37/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb3cd39dcfcecf8e9bc605bd3fe3ee74c8407b90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb3cd39dcfcecf8e9bc605bd3fe3ee74c8407b90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb3cd39dcfcecf8e9bc605bd3fe3ee74c8407b90"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "b4edd80419ee292246ecc06f439675edfcf1b5b7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ffb574542b10b14841c2807047e7396e3a63f37/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ffb574542b10b14841c2807047e7396e3a63f37/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2ffb574542b10b14841c2807047e7396e3a63f37", "patch": "@@ -1,3 +1,9 @@\n+2017-09-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tP0409R2 - allow lambda capture [=, this]\n+\t* parser.c (cp_parser_lambda_introducer): For cxx2a don't pedwarn on\n+\tredundant [=, this].\n+\n 2017-09-18  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/82069 - ICE with lambda in template"}, {"sha": "25b91df278c19f5dc5515221e17c613dd8ee0648", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ffb574542b10b14841c2807047e7396e3a63f37/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ffb574542b10b14841c2807047e7396e3a63f37/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2ffb574542b10b14841c2807047e7396e3a63f37", "patch": "@@ -10183,7 +10183,8 @@ cp_parser_lambda_introducer (cp_parser* parser, tree lambda_expr)\n       if (cp_lexer_next_token_is_keyword (parser->lexer, RID_THIS))\n \t{\n \t  location_t loc = cp_lexer_peek_token (parser->lexer)->location;\n-\t  if (LAMBDA_EXPR_DEFAULT_CAPTURE_MODE (lambda_expr) == CPLD_COPY)\n+\t  if (cxx_dialect < cxx2a\n+\t      && LAMBDA_EXPR_DEFAULT_CAPTURE_MODE (lambda_expr) == CPLD_COPY)\n \t    pedwarn (loc, 0, \"explicit by-copy capture of %<this%> redundant \"\n \t\t     \"with by-copy capture default\");\n \t  cp_lexer_consume_token (parser->lexer);"}, {"sha": "801adf0def9c4d1f1ed25f9ef5f891a5b90d1a95", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ffb574542b10b14841c2807047e7396e3a63f37/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ffb574542b10b14841c2807047e7396e3a63f37/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ffb574542b10b14841c2807047e7396e3a63f37", "patch": "@@ -1,5 +1,11 @@\n 2017-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tP0409R2 - allow lambda capture [=, this]\n+\t* g++.dg/cpp1z/lambda-this1.C: Don't expect error for c++2a on [=, this]\n+\tcapture.  Add further tests.\n+\t* g++.dg/cpp0x/lambda/lambda-capture-redundancy.C: Don't expect error\n+\tfor c++2a on [=, this] capture.\n+\n \t* g++.dg/cpp1z/cplusplus.C: Test that __cplusplus is equal to 201703L.\n \t* g++.dg/cpp1z/cplusplus_1z.C: New test.\n "}, {"sha": "baeb8144b31c64581184ebfbba4889fea0e72ed0", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-capture-redundancy.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ffb574542b10b14841c2807047e7396e3a63f37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-capture-redundancy.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ffb574542b10b14841c2807047e7396e3a63f37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-capture-redundancy.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-capture-redundancy.C?ref=2ffb574542b10b14841c2807047e7396e3a63f37", "patch": "@@ -7,7 +7,7 @@ void S2::f(int i) {\n   [&, i]{ };       // OK\n   [&, &i]{ };\t   // { dg-error \"\" } i preceded by & when & is the default\n   [=, i]{ };       // { dg-error \"\" } i not preceded by & when = is the default\n-  [=, this]{ };\t   // { dg-error \"\" } this when = is the default\n+  [=, this]{ };\t   // { dg-error \"\" \"\" { target c++17_down } } this when = is the default\n   [i, i]{ };\t   // { dg-error \"\" } i repeated\n   [this, this]{ }; // { dg-error \"\" } i repeated\n }"}, {"sha": "a15438019b9a787cf1eaecdf43af8e8e8bfe0684", "filename": "gcc/testsuite/g++.dg/cpp1z/lambda-this1.C", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ffb574542b10b14841c2807047e7396e3a63f37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flambda-this1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ffb574542b10b14841c2807047e7396e3a63f37/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flambda-this1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Flambda-this1.C?ref=2ffb574542b10b14841c2807047e7396e3a63f37", "patch": "@@ -17,13 +17,31 @@ struct A {\n     auto h = [*this] () mutable { a++; };// { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } }\n     auto i = [=] { return a; };\n     auto j = [&] { return a; };\n-    auto k = [=, this] { return a; };// { dg-error \"explicit by-copy capture of 'this' redundant with by-copy capture default\" }\n+    // P0409R2 - C++2A lambda capture [=, this]\n+    auto k = [=, this] { return a; };// { dg-error \"explicit by-copy capture of 'this' redundant with by-copy capture default\" \"\" { target c++17_down } }\n     auto l = [&, this] { return a; };\n     auto m = [=, *this] { return a; };// { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } }\n     auto n = [&, *this] { return a; };// { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } }\n     auto o = [*this, &v] { return a + v; };// { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } }\n     auto p = [*this] { this = 0; };\t// { dg-error \"lvalue required as left operand of assignment\" }\n \t\t\t\t\t// { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } .-1 }\n+    auto q = [=, this, *this] { return a; };// { dg-error \"already captured 'this'\" }\n+\t\t\t\t\t    // { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t    // { dg-error \"explicit by-copy capture of 'this' redundant with by-copy capture default\" \"\" { target c++17_down } .-2 }\n+    auto r = [=, this, this] { return a; };// { dg-error \"already captured 'this'\" }\n+\t\t\t\t\t   // { dg-error \"explicit by-copy capture of 'this' redundant with by-copy capture default\" \"\" { target c++17_down } .-1 }\n+    auto s = [=, *this, this] { return a; };// { dg-error \"already captured 'this'\" }\n+\t\t\t\t\t    // { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } .-1 }\n+\t\t\t\t\t    // { dg-error \"explicit by-copy capture of 'this' redundant with by-copy capture default\" \"\" { target c++17_down } .-2 }\n+    auto t = [=, *this, *this] { return a; };// { dg-error \"already captured 'this'\" }\n+\t\t\t\t\t     // { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } .-1 }\n+    auto u = [&, this, *this] { return a; };// { dg-error \"already captured 'this'\" }\n+\t\t\t\t\t    // { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } .-1 }\n+    auto w = [&, this, this] { return a; };// { dg-error \"already captured 'this'\" }\n+    auto x = [&, *this, this] { return a; };// { dg-error \"already captured 'this'\" }\n+\t\t\t\t\t    // { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } .-1 }\n+    auto y = [&, *this, *this] { return a; };// { dg-error \"already captured 'this'\" }\n+\t\t\t\t\t     // { dg-error \"'*this' capture only available with\" \"\" { target c++14_down } .-1 }\n   }\n };\n struct B {"}]}