{"sha": "21c1a30fc73105af50c5e717cb99dc3becabf8fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFjMWEzMGZjNzMxMDVhZjUwYzVlNzE3Y2I5OWRjM2JlY2FiZjhmYQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2021-01-08T10:15:22Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2021-01-08T10:15:22Z"}, "message": "Fortran: Allow pointer deferred length associate selectors. [PR93794]\n\n2021-01-05  Paul Thomas  <pault@gcc.gnu.org>\n\ngcc/fortran\n\tPR fortran/93794\n\t* trans-expr.c (gfc_conv_component_ref): Remove the condition\n\tthat deferred character length components only be allocatable.\n\ngcc/testsuite/\n\tPR fortran/93794\n\t* gfortran.dg/deferred_character_35.f90 : New test.", "tree": {"sha": "6eecd689dee9f017e9c6236a432d96f5cbcd3197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6eecd689dee9f017e9c6236a432d96f5cbcd3197"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21c1a30fc73105af50c5e717cb99dc3becabf8fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c1a30fc73105af50c5e717cb99dc3becabf8fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21c1a30fc73105af50c5e717cb99dc3becabf8fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c1a30fc73105af50c5e717cb99dc3becabf8fa/comments", "author": null, "committer": null, "parents": [{"sha": "c231fca5de8e455b263495b20a416a5e47d1029a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c231fca5de8e455b263495b20a416a5e47d1029a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c231fca5de8e455b263495b20a416a5e47d1029a"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "7150e48bc9397b1ba921ec7257951fdf9d14e7ff", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c1a30fc73105af50c5e717cb99dc3becabf8fa/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c1a30fc73105af50c5e717cb99dc3becabf8fa/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=21c1a30fc73105af50c5e717cb99dc3becabf8fa", "patch": "@@ -2670,7 +2670,7 @@ gfc_conv_component_ref (gfc_se * se, gfc_ref * ref)\n   /* Allocatable deferred char arrays are to be handled by the gfc_deferred_\n      strlen () conditional below.  */\n   if (c->ts.type == BT_CHARACTER && !c->attr.proc_pointer\n-      && !(c->attr.allocatable && c->ts.deferred)\n+      && !c->ts.deferred\n       && !c->attr.pdt_string)\n     {\n       tmp = c->ts.u.cl->backend_decl;"}, {"sha": "c28f52f79ff47ce57a4ab6385a7a2bcb0843bebc", "filename": "gcc/testsuite/gfortran.dg/deferred_character_35.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c1a30fc73105af50c5e717cb99dc3becabf8fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_35.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c1a30fc73105af50c5e717cb99dc3becabf8fa/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_35.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_35.f90?ref=21c1a30fc73105af50c5e717cb99dc3becabf8fa", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile }\n+!\n+! Test the fix for PR93794, where the ASSOCIATE statement ICED on the\n+! deferred character length, pointer component.\n+!\n+! Contributed by Gerhard Steinmetz  <gscfq@t-online.de>\n+!\n+program p\n+   type t\n+      character(:), pointer :: a\n+   end type\n+   type(t) :: z\n+   character(4), target :: c = 'abcd'\n+   z%a => c\n+   associate (y => z%a)\n+      print *, y\n+   end associate\n+end"}]}