{"sha": "57dab7925d52135be54eec74f2b0ac569a7c48bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdkYWI3OTI1ZDUyMTM1YmU1NGVlYzc0ZjJiMGFjNTY5YTdjNDhiZg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-12-12T09:43:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-12-12T09:43:33Z"}, "message": "re PR middle-end/52640 (performance bottleneck: gcc/tree.c;value_member)\n\n\tPR middle-end/52640\n\t* varasm.c (pending_assemble_externals_set): New pointer set.\n\t(process_pending_assemble_externals): Destroy the pointer set.\n\t(assemble_external): See if decl is in pending_assemble_externals_set,\n\tand add it to pending_assemble_externals if necessary.\n\t(init_varasm_once): Allocate pending_assemble_externals_set.\n\n\t* gcc.c-torture/compile/limits-externdecl.c: New test.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r194441", "tree": {"sha": "9ae2a91660d8b652a7ae355208150479d3ce316a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ae2a91660d8b652a7ae355208150479d3ce316a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57dab7925d52135be54eec74f2b0ac569a7c48bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57dab7925d52135be54eec74f2b0ac569a7c48bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57dab7925d52135be54eec74f2b0ac569a7c48bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57dab7925d52135be54eec74f2b0ac569a7c48bf/comments", "author": null, "committer": null, "parents": [{"sha": "62b3f0f05e1eae8828dd29e259f3fa7a184dfd60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b3f0f05e1eae8828dd29e259f3fa7a184dfd60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62b3f0f05e1eae8828dd29e259f3fa7a184dfd60"}], "stats": {"total": 82, "additions": 81, "deletions": 1}, "files": [{"sha": "a513fa90d5a7de57b6e5b89b1ea198217d8c733d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57dab7925d52135be54eec74f2b0ac569a7c48bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57dab7925d52135be54eec74f2b0ac569a7c48bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57dab7925d52135be54eec74f2b0ac569a7c48bf", "patch": "@@ -1,3 +1,13 @@\n+2012-12-12  Steven Bosscher  <steven@gcc.gnu.org>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/52640\n+\t* varasm.c (pending_assemble_externals_set): New pointer set.\n+\t(process_pending_assemble_externals): Destroy the pointer set.\n+\t(assemble_external): See if decl is in pending_assemble_externals_set,\n+\tand add it to pending_assemble_externals if necessary.\n+\t(init_varasm_once): Allocate pending_assemble_externals_set.\n+\n 2012-12-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/55633"}, {"sha": "f9a68a5be6bc8341684f7d464c0bad420a71a461", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57dab7925d52135be54eec74f2b0ac569a7c48bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57dab7925d52135be54eec74f2b0ac569a7c48bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57dab7925d52135be54eec74f2b0ac569a7c48bf", "patch": "@@ -1,3 +1,9 @@\n+2012-12-12  Steven Bosscher  <steven@gcc.gnu.org>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/52640\n+\t* gcc.c-torture/compile/limits-externdecl.c: New test.\n+\n 2012-12-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gfortran.dg/vect/fast-math-pr38968.f90: Decrease n"}, {"sha": "070db973da85d6349ae788622031236352ee34ef", "filename": "gcc/testsuite/gcc.c-torture/compile/limits-externdecl.c", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57dab7925d52135be54eec74f2b0ac569a7c48bf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57dab7925d52135be54eec74f2b0ac569a7c48bf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Flimits-externdecl.c?ref=57dab7925d52135be54eec74f2b0ac569a7c48bf", "patch": "@@ -0,0 +1,55 @@\n+/* Inspired by the test case for PR middle-end/52640.  */\n+\n+typedef struct\n+{\n+    char *value;\n+} REFERENCE;\n+\n+/* Add a few \"extern int Xxxxxx ();\" declarations.  */\n+#undef DEF\n+#undef LIM1\n+#undef LIM2\n+#undef LIM3\n+#undef LIM4\n+#undef LIM5\n+#undef LIM6\n+#define DEF(x) \textern int x ()\n+#define LIM1(x) DEF(x##0); DEF(x##1); DEF(x##2); DEF(x##3); DEF(x##4); \\\n+\t\tDEF(x##5); DEF(x##6); DEF(x##7); DEF(x##8); DEF(x##9);\n+#define LIM2(x) LIM1(x##0) LIM1(x##1) LIM1(x##2) LIM1(x##3) LIM1(x##4) \\\n+\t\tLIM1(x##5) LIM1(x##6) LIM1(x##7) LIM1(x##8) LIM1(x##9)\n+#define LIM3(x) LIM2(x##0) LIM2(x##1) LIM2(x##2) LIM2(x##3) LIM2(x##4) \\\n+\t\tLIM2(x##5) LIM2(x##6) LIM2(x##7) LIM2(x##8) LIM2(x##9)\n+#define LIM4(x) LIM3(x##0) LIM3(x##1) LIM3(x##2) LIM3(x##3) LIM3(x##4) \\\n+\t\tLIM3(x##5) LIM3(x##6) LIM3(x##7) LIM3(x##8) LIM3(x##9)\n+#define LIM5(x) LIM4(x##0) LIM4(x##1) LIM4(x##2) LIM4(x##3) LIM4(x##4) \\\n+\t\tLIM4(x##5) LIM4(x##6) LIM4(x##7) LIM4(x##8) LIM4(x##9)\n+#define LIM6(x) LIM5(x##0) LIM5(x##1) LIM5(x##2) LIM5(x##3) LIM5(x##4) \\\n+\t\tLIM5(x##5) LIM5(x##6) LIM5(x##7) LIM5(x##8) LIM5(x##9)\n+LIM5 (X);\n+\n+/* Add references to them, or GCC will simply ignore the extern decls.  */\n+#undef DEF\n+#undef LIM1\n+#undef LIM2\n+#undef LIM3\n+#undef LIM4\n+#undef LIM5\n+#undef LIM6\n+#define DEF(x)\t(char *) x\n+#define LIM1(x) DEF(x##0), DEF(x##1), DEF(x##2), DEF(x##3), DEF(x##4), \\\n+\t\tDEF(x##5), DEF(x##6), DEF(x##7), DEF(x##8), DEF(x##9),\n+#define LIM2(x) LIM1(x##0) LIM1(x##1) LIM1(x##2) LIM1(x##3) LIM1(x##4) \\\n+\t\tLIM1(x##5) LIM1(x##6) LIM1(x##7) LIM1(x##8) LIM1(x##9)\n+#define LIM3(x) LIM2(x##0) LIM2(x##1) LIM2(x##2) LIM2(x##3) LIM2(x##4) \\\n+\t\tLIM2(x##5) LIM2(x##6) LIM2(x##7) LIM2(x##8) LIM2(x##9)\n+#define LIM4(x) LIM3(x##0) LIM3(x##1) LIM3(x##2) LIM3(x##3) LIM3(x##4) \\\n+\t\tLIM3(x##5) LIM3(x##6) LIM3(x##7) LIM3(x##8) LIM3(x##9)\n+#define LIM5(x) LIM4(x##0) LIM4(x##1) LIM4(x##2) LIM4(x##3) LIM4(x##4) \\\n+\t\tLIM4(x##5) LIM4(x##6) LIM4(x##7) LIM4(x##8) LIM4(x##9)\n+#define LIM6(x) LIM5(x##0) LIM5(x##1) LIM5(x##2) LIM5(x##3) LIM5(x##4) \\\n+\t\tLIM5(x##5) LIM5(x##6) LIM5(x##7) LIM5(x##8) LIM5(x##9)\n+REFERENCE references[] = {\n+  LIM5 (X)\n+  0\n+};"}, {"sha": "bca852dc4e8cc67adb767980afa7de58db5726fd", "filename": "gcc/varasm.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57dab7925d52135be54eec74f2b0ac569a7c48bf/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57dab7925d52135be54eec74f2b0ac569a7c48bf/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=57dab7925d52135be54eec74f2b0ac569a7c48bf", "patch": "@@ -2089,6 +2089,10 @@ contains_pointers_p (tree type)\n static GTY(()) tree pending_assemble_externals;\n \n #ifdef ASM_OUTPUT_EXTERNAL\n+/* Avoid O(external_decls**2) lookups in the pending_assemble_externals\n+   TREE_LIST in assemble_external.  */\n+static struct pointer_set_t *pending_assemble_externals_set;\n+\n /* True if DECL is a function decl for which no out-of-line copy exists.\n    It is assumed that DECL's assembler name has been set.  */\n \n@@ -2140,6 +2144,7 @@ process_pending_assemble_externals (void)\n     assemble_external_real (TREE_VALUE (list));\n \n   pending_assemble_externals = 0;\n+  pointer_set_destroy (pending_assemble_externals_set);\n #endif\n }\n \n@@ -2191,7 +2196,7 @@ assemble_external (tree decl ATTRIBUTE_UNUSED)\n     weak_decls = tree_cons (NULL, decl, weak_decls);\n \n #ifdef ASM_OUTPUT_EXTERNAL\n-  if (value_member (decl, pending_assemble_externals) == NULL_TREE)\n+  if (! pointer_set_insert (pending_assemble_externals_set, decl))\n     pending_assemble_externals = tree_cons (NULL, decl,\n \t\t\t\t\t    pending_assemble_externals);\n #endif\n@@ -5904,6 +5909,10 @@ init_varasm_once (void)\n \n   if (readonly_data_section == NULL)\n     readonly_data_section = text_section;\n+\n+#ifdef ASM_OUTPUT_EXTERNAL\n+  pending_assemble_externals_set = pointer_set_create ();\n+#endif\n }\n \n enum tls_model"}]}