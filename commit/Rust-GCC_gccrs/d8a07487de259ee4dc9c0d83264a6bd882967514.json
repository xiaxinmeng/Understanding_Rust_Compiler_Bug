{"sha": "d8a07487de259ee4dc9c0d83264a6bd882967514", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhhMDc0ODdkZTI1OWVlNGRjOWMwZDgzMjY0YTZiZDg4Mjk2NzUxNA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-11-10T23:23:15Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-11-10T23:23:15Z"}, "message": "cfgloop.c (verify_loop_structure): Use %' in diagnostics.\n\n\t* cfgloop.c (verify_loop_structure): Use %' in diagnostics.  Start\n\tdiagnostics with lowercase letters.\n\t* cgraphunit.c (verify_cgraph_node): Start diagnostics with\n\tlowercase letters.\n\t* collect2.c (maybe_run_lto_and_relink): Remove trailing '.' from\n\tdiagnostic.\n\t* config/alpha/freebsd.h (LINK_SPEC): Avoid '`' in diagnostic.\n\t* config/arm/arm.c (arm_get_pcs_model): Start diagnostics with\n\tlowercase letters.\n\t* config/arm/freebsd.h (LINK_SPEC): Avoid '`' in diagnostic.\n\tRemove trailing ' ' from diagnostic.\n\t* config/avr/avr.c (print_operand_address): Start diagnostic with\n\ta lowercase letter and remove trailing '.'.\n\t* config/avr/avr.opt (mpmem-wrap-around): Fix typo in help text.\n\t* config/bfin/bfin.c (bfin_option_override): Start diagnostics\n\twith lowercase letters.  Use %' in diagnostics.  Remove trailing\n\t'.' from diagnostics.\n\t(bfin_handle_longcall_attribute): Use %' in diagnostic.\n\t* config/cris/cris.c (cris_split_movdx,\n\tcris_expand_pic_call_address): Start diagnostics with lowercase\n\tletters.\n\t(cris_asm_output_label_ref): Use %' in diagnostic.\n\t* config/cris/cris.h (ASM_SPEC): Start diagnostic with a lowercase\n\tletter.\n\t* config/crx/crx.h (FUNCTION_PROFILER): Start diagnostic with a\n\tlowercase letter.\n\t* config/darwin-c.c (version_as_macro): Start diagnostic with a\n\tlowercase letter.\n\t* config/darwin-driver.c (darwin_default_min_version): Use %' in\n\tdiagnostic.\n\t* config/host-darwin.c (darwin_gt_pch_use_address): Use %' in\n\tdiagnostic.\n\t* config/i386/freebsd.h (LINK_SPEC): Avoid '`' in diagnostic.\n\t* config/i386/host-cygwin.c (cygwin_gt_pch_get_address): Use %' in\n\tdiagnostics.\n\t* config/i386/i386.c (ix86_option_override_internal): Write\n\tdiagnostic as a single sentence without trailing '.'.  Use %' in\n\tdiagnostics.\n\t(ix86_function_sseregparm, classify_argument): Start diagnostics\n\twith lowercase letters.\n\t(ix86_expand_prologue): Use %' in diagnostic.\n\t* config/i386/i386.h (CC1_CPU_SPEC_1): Remove trailing '.' from\n\tdiagnostic.\n\t* config/i386/nwld.h (LINK_SPEC): Start diagnostic with a\n\tlowercase letter.\n\t* config/i386/winnt.c (i386_pe_determine_dllimport_p): Use %' in\n\tdiagnostic.\n\t* config/ia64/freebsd.h (LINK_SPEC): Avoid '`' in diagnostic.\n\t* config/ia64/ia64.opt (msched-max-memory-insns-hard-limit): Avoid\n\t'`' in help text.\n\t* config/lm32/lm32.c (lm32_print_operand): Start diagnostic with a\n\tlowercase letter.\n\t* config/mep/mep.c (mep_validate_vliw): Start diagnostics with\n\tlowercase letters.\n\t* config/microblaze/microblaze.c (microblaze_handle_option):\n\tRemove trailing '.' from diagnostic.\n\t(print_operand): Start diagnostic with a lowercase letter.\n\t* config/pa/pa-hpux10.h (LINK_SPEC): Start diagnostics with\n\tlowercase letters.  Avoid '`' in diagnostics.\n\t* config/pa/pa-hpux11.h (LINK_SPEC): Start diagnostics with\n\tlowercase letters.  Avoid '`' in diagnostics.\n\t* config/pa/pa64-hpux.h (LINK_SPEC): Start diagnostics with\n\tlowercase letters.  Avoid '`' in diagnostics.\n\t* config/picochip/picochip.c (picochip_option_override,\n\tpicochip_emit_save_register, picochip_function_arg,\n\tpicochip_output_label, picochip_output_internal_label,\n\tpicochip_asm_output_opcode, picochip_output_cbranch,\n\tpicochip_output_compare, picochip_output_branch,\n\tpicochip_get_vliw_alu_id): Remove trailing '.' and '\\n' from\n\tdiagnostics. Start diagnostics with lowercase letters.  Use %' in\n\tdiagnostics.\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Use\n\t\"SPE\" capitalization.  Start diagnostic with a lowercase letter.\n\t(rs6000_handle_option): Start diagnostics with lowercase letters.\n\t(def_builtin): Remove trailing '.' from diagnostic.\n\t(rs6000_savres_routine_name): Start diagnostic with a lowercase\n\tletter.\n\t* config/rs6000/sysv4.h (LINK_OS_FREEBSD_SPEC): Avoid '`' in\n\tdiagnostic.\n\t* config/rx/rx.c (rx_handle_option): Start diagnostic with a\n\tlowercase letter.\n\t* config/s390/s390.c (s390_option_override) Start diagnostics with\n\tlowercase letters.  Use %' in diagnostic.\n\t* config/sh/sh.c (sh_output_mi_thunk): Start diagnostics with\n\tlowercase letters.\n\t* config/sh/symbian-base.c (sh_symbian_mark_dllimport): Use %' in\n\tdiagnostic.\n\t* config/sh/symbian-c.c (sh_symbian_is_dllimported): Use %' in\n\tdiagnostic.\n\t* config/sh/symbian-cxx.c (sh_symbian_is_dllimported): Use %' in\n\tdiagnostic.\n\t* config/sparc/freebsd.h (LINK_SPEC): Avoid '`' in diagnostic.\n\t* config/spu/spu.c (spu_option_override): Start diagnostics with\n\tlowercase letters.  Use %qs for quoting in diagnostics.\n\t(spu_check_builtin_parm): Remove trailing '.' from diagnostics.\n\tUse %wd instead of HOST_WIDE_INT_PRINT_DEC in diagnostic .\n\t* config/v850/v850.c (construct_save_jarl): Remove trailing '\\n'\n\tfrom diagnostic.\n\t* convert.c (convert_to_integer, convert_to_vector): Use %' in\n\tdiagnostics.\n\t* dbgcnt.c (dbg_cnt_process_opt): Start diagnostic with lowercase\n\tletter and use \"cannot\" spelling.\n\t* expmed.c (extract_fixed_bit_field): Start diagnostic with\n\tlowercase letter and format as a single sentence without '.'.\n\t* ggc-common.c (write_pch_globals, gt_pch_save, gt_pch_restore):\n\tUse %' in diagnostics.\n\t* ggc-page.c (ggc_pch_write_object, ggc_pch_finish, ggc_pch_read):\n\tUse %' in diagnostics.\n\t* ggc-zone.c (ggc_pch_write_object, ggc_pch_finish, ggc_pch_read):\n\tUse %' in diagnostics.\n\t* graph.c (clean_graph_dump_file): Use %' in diagnostic.\n\t* graphite-poly.c (graphite_read_scop_file): Start diagnostics\n\twith lowercase letters and remove tailing '.' and '\\n'.\n\t* lto-cgraph.c (input_profile_summary): Start diagnostic with\n\tlowercase letter and remove trailing '.'.\n\t(input_cgraph): Start diagnostics with lowercase letters and\n\tremove trailing '\\n'.\n\t* opts.c (finish_options, common_handle_option): Start diagnostics\n\twith lowercase letters and remove trailing '.'.  Fix typo in\n\tdiagnostic.\n\t* passes.c (position_pass): Start diagnostic with lowercase\n\tletter.\t\n\t* plugin.c (add_new_plugin, parse_plugin_arg_opt,\n\tregister_callback, try_init_one_plugin): Start diagnostics with\n\tlowercase letters.\n\t* reload1.c (spill_failure): Use %' in diagnostic.\n\t(gen_reload): Start diagnostic with a lowercase letter.\n\t* stor-layout.c (place_field): Start diagnostic with a lowercase\n\tletter.\n\t* toplev.c (open_auxiliary_file): Use %' in diagnostic.\n\t* tree-cfg.c (verify_expr, verify_types_in_gimple_reference,\n\tverify_gimple_call, verify_gimple_phi, verify_eh_throw_stmt_node):\n\tStart diagnostics with lowercase letters, remove trailing '.' and\n\tuse %' in diagnostics.\n\t* tree-ssa.c (verify_def): Remove trailing '.' from diagnostic.\n\t(verify_ssa): Don't split diagnostic across two error calls.\n\tSpell out \"number\" and use %' in diagnostic.\n\t* value-prof.c (visit_hist, check_counter): Start diagnostics with\n\tlowercase letters.\n\nc-family:\n\t* c-common.c (handle_mode_attribute): Use %' and word \"signedness\"\n\tin diagnostic.\n\t* c-opts.c (c_common_parse_file): Start diagnostics with lowercase\n\tletter.\n\t* c-pragma.c (handle_pragma_target, handle_pragma_optimize):\n\tRemove trailing '.' from diagnostics.\n\t* c.opt (Wwrite-strings_: Avoid '`' in help text.\n\ncp:\n\t* cvt.c (cp_convert_to_pointer): Use %' in diagnostic.\n\t* decl.c (layout_var_decl, maybe_commonize_var, grokdeclarator):\n\tUse %' in diagnostics.\n\t* decl2.c (check_classfn): Use %' in diagnostic.\n\t* init.c (build_java_class_ref): Use %' in diagnostic.\n\t(build_delete): Remove trailing '.' from diagnostic.\n\t* method.c (do_build_copy_assign, walk_field_subobs): Use %' in\n\tdiagnostics.\n\t* name-lookup.c (pushdecl_maybe_friend): Use %' in diagnostic.\n\t* parser.c (cp_parser_exception_specification_opt): Remove\n\ttrailing '.' from diagnostic.\n\t(cp_parser_objc_interstitial_code): Use %qs for quoting in\n\tdiagnostic.\n\t* pt.c (check_valid_ptrmem_cst_expr): Use %< and %> for quoting in\n\tdiagnostic.\n\t* repo.c (reopen_repo_file_for_write): Use %' in diagnostic.\n\nfortran:\n\t* trans-array.c (gfc_trans_deferred_array): Use \"front-end\"\n\tspelling in diagnostic.\n\t* trans.c (gfc_allocate_array_with_status): Add missing space in\n\tdiagnostic.\n\njava:\n\t* expr.c (expand_java_field_op): Use %' in diagnostic.\n\t* jcf-parse.c (java_parse_file): Use %' in diagnostics.\n\t* jvspec.c (lang_specific_driver): Use %' in diagnostic.\n\t* lang.c (java_post_options): Use %' in diagnostics.\n\nlto:\n\t* lto.c (lto_resolution_read): Start diagnostics with lowercase\n\tletters and remove trailing '.'.\n\t(lto_file_finalize): Start diagnostic with a lowercase letter.\n\nobjc:\n\t* objc-act.c (objc_init): Use %' in diagnostic.\n\t(objc_set_method_opt): Remove trailing '.' from diagnostic.\n\nFrom-SVN: r166570", "tree": {"sha": "87f23d33beb3caf203a0b7c3854fe63f47989386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87f23d33beb3caf203a0b7c3854fe63f47989386"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8a07487de259ee4dc9c0d83264a6bd882967514", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a07487de259ee4dc9c0d83264a6bd882967514", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8a07487de259ee4dc9c0d83264a6bd882967514", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a07487de259ee4dc9c0d83264a6bd882967514/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ca2bc5e88a4b2f0370d7b532438029b1c8d2661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca2bc5e88a4b2f0370d7b532438029b1c8d2661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ca2bc5e88a4b2f0370d7b532438029b1c8d2661"}], "stats": {"total": 684, "additions": 442, "deletions": 242}, "files": [{"sha": "03fae9f5e87c40e8fb6f32ae3e493bda431f4fad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 142, "deletions": 0, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,3 +1,145 @@\n+2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cfgloop.c (verify_loop_structure): Use %' in diagnostics.  Start\n+\tdiagnostics with lowercase letters.\n+\t* cgraphunit.c (verify_cgraph_node): Start diagnostics with\n+\tlowercase letters.\n+\t* collect2.c (maybe_run_lto_and_relink): Remove trailing '.' from\n+\tdiagnostic.\n+\t* config/alpha/freebsd.h (LINK_SPEC): Avoid '`' in diagnostic.\n+\t* config/arm/arm.c (arm_get_pcs_model): Start diagnostics with\n+\tlowercase letters.\n+\t* config/arm/freebsd.h (LINK_SPEC): Avoid '`' in diagnostic.\n+\tRemove trailing ' ' from diagnostic.\n+\t* config/avr/avr.c (print_operand_address): Start diagnostic with\n+\ta lowercase letter and remove trailing '.'.\n+\t* config/avr/avr.opt (mpmem-wrap-around): Fix typo in help text.\n+\t* config/bfin/bfin.c (bfin_option_override): Start diagnostics\n+\twith lowercase letters.  Use %' in diagnostics.  Remove trailing\n+\t'.' from diagnostics.\n+\t(bfin_handle_longcall_attribute): Use %' in diagnostic.\n+\t* config/cris/cris.c (cris_split_movdx,\n+\tcris_expand_pic_call_address): Start diagnostics with lowercase\n+\tletters.\n+\t(cris_asm_output_label_ref): Use %' in diagnostic.\n+\t* config/cris/cris.h (ASM_SPEC): Start diagnostic with a lowercase\n+\tletter.\n+\t* config/crx/crx.h (FUNCTION_PROFILER): Start diagnostic with a\n+\tlowercase letter.\n+\t* config/darwin-c.c (version_as_macro): Start diagnostic with a\n+\tlowercase letter.\n+\t* config/darwin-driver.c (darwin_default_min_version): Use %' in\n+\tdiagnostic.\n+\t* config/host-darwin.c (darwin_gt_pch_use_address): Use %' in\n+\tdiagnostic.\n+\t* config/i386/freebsd.h (LINK_SPEC): Avoid '`' in diagnostic.\n+\t* config/i386/host-cygwin.c (cygwin_gt_pch_get_address): Use %' in\n+\tdiagnostics.\n+\t* config/i386/i386.c (ix86_option_override_internal): Write\n+\tdiagnostic as a single sentence without trailing '.'.  Use %' in\n+\tdiagnostics.\n+\t(ix86_function_sseregparm, classify_argument): Start diagnostics\n+\twith lowercase letters.\n+\t(ix86_expand_prologue): Use %' in diagnostic.\n+\t* config/i386/i386.h (CC1_CPU_SPEC_1): Remove trailing '.' from\n+\tdiagnostic.\n+\t* config/i386/nwld.h (LINK_SPEC): Start diagnostic with a\n+\tlowercase letter.\n+\t* config/i386/winnt.c (i386_pe_determine_dllimport_p): Use %' in\n+\tdiagnostic.\n+\t* config/ia64/freebsd.h (LINK_SPEC): Avoid '`' in diagnostic.\n+\t* config/ia64/ia64.opt (msched-max-memory-insns-hard-limit): Avoid\n+\t'`' in help text.\n+\t* config/lm32/lm32.c (lm32_print_operand): Start diagnostic with a\n+\tlowercase letter.\n+\t* config/mep/mep.c (mep_validate_vliw): Start diagnostics with\n+\tlowercase letters.\n+\t* config/microblaze/microblaze.c (microblaze_handle_option):\n+\tRemove trailing '.' from diagnostic.\n+\t(print_operand): Start diagnostic with a lowercase letter.\n+\t* config/pa/pa-hpux10.h (LINK_SPEC): Start diagnostics with\n+\tlowercase letters.  Avoid '`' in diagnostics.\n+\t* config/pa/pa-hpux11.h (LINK_SPEC): Start diagnostics with\n+\tlowercase letters.  Avoid '`' in diagnostics.\n+\t* config/pa/pa64-hpux.h (LINK_SPEC): Start diagnostics with\n+\tlowercase letters.  Avoid '`' in diagnostics.\n+\t* config/picochip/picochip.c (picochip_option_override,\n+\tpicochip_emit_save_register, picochip_function_arg,\n+\tpicochip_output_label, picochip_output_internal_label,\n+\tpicochip_asm_output_opcode, picochip_output_cbranch,\n+\tpicochip_output_compare, picochip_output_branch,\n+\tpicochip_get_vliw_alu_id): Remove trailing '.' and '\\n' from\n+\tdiagnostics. Start diagnostics with lowercase letters.  Use %' in\n+\tdiagnostics.\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Use\n+\t\"SPE\" capitalization.  Start diagnostic with a lowercase letter.\n+\t(rs6000_handle_option): Start diagnostics with lowercase letters.\n+\t(def_builtin): Remove trailing '.' from diagnostic.\n+\t(rs6000_savres_routine_name): Start diagnostic with a lowercase\n+\tletter.\n+\t* config/rs6000/sysv4.h (LINK_OS_FREEBSD_SPEC): Avoid '`' in\n+\tdiagnostic.\n+\t* config/rx/rx.c (rx_handle_option): Start diagnostic with a\n+\tlowercase letter.\n+\t* config/s390/s390.c (s390_option_override) Start diagnostics with\n+\tlowercase letters.  Use %' in diagnostic.\n+\t* config/sh/sh.c (sh_output_mi_thunk): Start diagnostics with\n+\tlowercase letters.\n+\t* config/sh/symbian-base.c (sh_symbian_mark_dllimport): Use %' in\n+\tdiagnostic.\n+\t* config/sh/symbian-c.c (sh_symbian_is_dllimported): Use %' in\n+\tdiagnostic.\n+\t* config/sh/symbian-cxx.c (sh_symbian_is_dllimported): Use %' in\n+\tdiagnostic.\n+\t* config/sparc/freebsd.h (LINK_SPEC): Avoid '`' in diagnostic.\n+\t* config/spu/spu.c (spu_option_override): Start diagnostics with\n+\tlowercase letters.  Use %qs for quoting in diagnostics.\n+\t(spu_check_builtin_parm): Remove trailing '.' from diagnostics.\n+\tUse %wd instead of HOST_WIDE_INT_PRINT_DEC in diagnostic .\n+\t* config/v850/v850.c (construct_save_jarl): Remove trailing '\\n'\n+\tfrom diagnostic.\n+\t* convert.c (convert_to_integer, convert_to_vector): Use %' in\n+\tdiagnostics.\n+\t* dbgcnt.c (dbg_cnt_process_opt): Start diagnostic with lowercase\n+\tletter and use \"cannot\" spelling.\n+\t* expmed.c (extract_fixed_bit_field): Start diagnostic with\n+\tlowercase letter and format as a single sentence without '.'.\n+\t* ggc-common.c (write_pch_globals, gt_pch_save, gt_pch_restore):\n+\tUse %' in diagnostics.\n+\t* ggc-page.c (ggc_pch_write_object, ggc_pch_finish, ggc_pch_read):\n+\tUse %' in diagnostics.\n+\t* ggc-zone.c (ggc_pch_write_object, ggc_pch_finish, ggc_pch_read):\n+\tUse %' in diagnostics.\n+\t* graph.c (clean_graph_dump_file): Use %' in diagnostic.\n+\t* graphite-poly.c (graphite_read_scop_file): Start diagnostics\n+\twith lowercase letters and remove tailing '.' and '\\n'.\n+\t* lto-cgraph.c (input_profile_summary): Start diagnostic with\n+\tlowercase letter and remove trailing '.'.\n+\t(input_cgraph): Start diagnostics with lowercase letters and\n+\tremove trailing '\\n'.\n+\t* opts.c (finish_options, common_handle_option): Start diagnostics\n+\twith lowercase letters and remove trailing '.'.  Fix typo in\n+\tdiagnostic.\n+\t* passes.c (position_pass): Start diagnostic with lowercase\n+\tletter.\t\n+\t* plugin.c (add_new_plugin, parse_plugin_arg_opt,\n+\tregister_callback, try_init_one_plugin): Start diagnostics with\n+\tlowercase letters.\n+\t* reload1.c (spill_failure): Use %' in diagnostic.\n+\t(gen_reload): Start diagnostic with a lowercase letter.\n+\t* stor-layout.c (place_field): Start diagnostic with a lowercase\n+\tletter.\n+\t* toplev.c (open_auxiliary_file): Use %' in diagnostic.\n+\t* tree-cfg.c (verify_expr, verify_types_in_gimple_reference,\n+\tverify_gimple_call, verify_gimple_phi, verify_eh_throw_stmt_node):\n+\tStart diagnostics with lowercase letters, remove trailing '.' and\n+\tuse %' in diagnostics.\n+\t* tree-ssa.c (verify_def): Remove trailing '.' from diagnostic.\n+\t(verify_ssa): Don't split diagnostic across two error calls.\n+\tSpell out \"number\" and use %' in diagnostic.\n+\t* value-prof.c (visit_hist, check_counter): Start diagnostics with\n+\tlowercase letters.\n+\n 2010-11-10  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR middle-end/46419"}, {"sha": "80a10a3ea36ab9809c86978eb1267f7727fbda22", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,3 +1,13 @@\n+2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-common.c (handle_mode_attribute): Use %' and word \"signedness\"\n+\tin diagnostic.\n+\t* c-opts.c (c_common_parse_file): Start diagnostics with lowercase\n+\tletter.\n+\t* c-pragma.c (handle_pragma_target, handle_pragma_optimize):\n+\tRemove trailing '.' from diagnostics.\n+\t* c.opt (Wwrite-strings_: Avoid '`' in help text.\n+\n 2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-common.c (parse_optimize_options): Pass global_dc to"}, {"sha": "154b6c94a76cda4baa2186bcb2617ac95e843d9f", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -6408,7 +6408,7 @@ handle_mode_attribute (tree *node, tree name, tree args,\n \t  if (ALL_FIXED_POINT_MODE_P (mode)\n \t      && TYPE_UNSIGNED (type) != UNSIGNED_FIXED_POINT_MODE_P (mode))\n \t    {\n-\t      error (\"signness of type and machine mode %qs don't match\", p);\n+\t      error (\"signedness of type and machine mode %qs don%'t match\", p);\n \t      return NULL_TREE;\n \t    }\n \t  /* For fixed-point modes, we need to pass saturating info.  */"}, {"sha": "b4b7779669652af12f594d17621cc96d83e953b7", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1136,18 +1136,18 @@ c_common_parse_file (int set_yydebug)\n     switch (c_language)\n       {\n       case clk_c:\n-\twarning(0, \"The C parser does not support -dy, option ignored\");\n+\twarning(0, \"the C parser does not support -dy, option ignored\");\n \tbreak;\n       case clk_objc:\n \twarning(0,\n-\t\t\"The Objective-C parser does not support -dy, option ignored\");\n+\t\t\"the Objective-C parser does not support -dy, option ignored\");\n \tbreak;\n       case clk_cxx:\n-\twarning(0, \"The C++ parser does not support -dy, option ignored\");\n+\twarning(0, \"the C++ parser does not support -dy, option ignored\");\n \tbreak;\n       case clk_objcxx:\n \twarning(0,\n-\t    \"The Objective-C++ parser does not support -dy, option ignored\");\n+\t    \"the Objective-C++ parser does not support -dy, option ignored\");\n \tbreak;\n       default:\n \tgcc_unreachable ();"}, {"sha": "23be17922c12ad57935ae00c37bfbbbde6b190e6", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -816,7 +816,7 @@ handle_pragma_target(cpp_reader *ARG_UNUSED(dummy))\n \t    token = pragma_lex (&x);\n \t  else\n \t    GCC_BAD (\"%<#pragma GCC target (string [,string]...)%> does \"\n-\t\t     \"not have a final %<)%>.\");\n+\t\t     \"not have a final %<)%>\");\n \t}\n \n       if (token != CPP_EOF)\n@@ -884,7 +884,7 @@ handle_pragma_optimize (cpp_reader *ARG_UNUSED(dummy))\n \t    token = pragma_lex (&x);\n \t  else\n \t    GCC_BAD (\"%<#pragma GCC optimize (string [,string]...)%> does \"\n-\t\t     \"not have a final %<)%>.\");\n+\t\t     \"not have a final %<)%>\");\n \t}\n \n       if (token != CPP_EOF)"}, {"sha": "868247168fe045a6e2f8e0c7f6fefe0e26e77e7d", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -667,7 +667,7 @@ Warn when a register variable is declared volatile\n \n Wwrite-strings\n C ObjC C++ ObjC++ Var(warn_write_strings) Warning\n-In C++, nonzero means warn about deprecated conversion from string literals to `char *'.  In C, similar warning, except that the conversion is of course not deprecated by the ISO C standard.\n+In C++, nonzero means warn about deprecated conversion from string literals to 'char *'.  In C, similar warning, except that the conversion is of course not deprecated by the ISO C standard.\n \n Wpointer-sign\n C ObjC Var(warn_pointer_sign) Init(-1) Warning"}, {"sha": "08d689d23273a318e43ff6e611d712258448678a", "filename": "gcc/cfgloop.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcfgloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcfgloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1360,36 +1360,36 @@ verify_loop_structure (void)\n       if (loops_state_satisfies_p (LOOPS_HAVE_PREHEADERS)\n \t  && EDGE_COUNT (loop->header->preds) != 2)\n \t{\n-\t  error (\"loop %d's header does not have exactly 2 entries\", i);\n+\t  error (\"loop %d%'s header does not have exactly 2 entries\", i);\n \t  err = 1;\n \t}\n       if (loops_state_satisfies_p (LOOPS_HAVE_SIMPLE_LATCHES))\n \t{\n \t  if (!single_succ_p (loop->latch))\n \t    {\n-\t      error (\"loop %d's latch does not have exactly 1 successor\", i);\n+\t      error (\"loop %d%'s latch does not have exactly 1 successor\", i);\n \t      err = 1;\n \t    }\n \t  if (single_succ (loop->latch) != loop->header)\n \t    {\n-\t      error (\"loop %d's latch does not have header as successor\", i);\n+\t      error (\"loop %d%'s latch does not have header as successor\", i);\n \t      err = 1;\n \t    }\n \t  if (loop->latch->loop_father != loop)\n \t    {\n-\t      error (\"loop %d's latch does not belong directly to it\", i);\n+\t      error (\"loop %d%'s latch does not belong directly to it\", i);\n \t      err = 1;\n \t    }\n \t}\n       if (loop->header->loop_father != loop)\n \t{\n-\t  error (\"loop %d's header does not belong directly to it\", i);\n+\t  error (\"loop %d%'s header does not belong directly to it\", i);\n \t  err = 1;\n \t}\n       if (loops_state_satisfies_p (LOOPS_HAVE_MARKED_IRREDUCIBLE_REGIONS)\n \t  && (loop_latch_edge (loop)->flags & EDGE_IRREDUCIBLE_LOOP))\n \t{\n-\t  error (\"loop %d's latch is marked as part of irreducible region\", i);\n+\t  error (\"loop %d%'s latch is marked as part of irreducible region\", i);\n \t  err = 1;\n \t}\n     }\n@@ -1511,7 +1511,7 @@ verify_loop_structure (void)\n \t      exit = get_exit_descriptions (e);\n \t      if (!exit)\n \t\t{\n-\t\t  error (\"Exit %d->%d not recorded\",\n+\t\t  error (\"exit %d->%d not recorded\",\n \t\t\t e->src->index, e->dest->index);\n \t\t  err = 1;\n \t\t}\n@@ -1529,7 +1529,7 @@ verify_loop_structure (void)\n \n \t      if (eloops != 0)\n \t\t{\n-\t\t  error (\"Wrong list of exited loops for edge  %d->%d\",\n+\t\t  error (\"wrong list of exited loops for edge  %d->%d\",\n \t\t\t e->src->index, e->dest->index);\n \t\t  err = 1;\n \t\t}\n@@ -1538,7 +1538,7 @@ verify_loop_structure (void)\n \n       if (n_exits != htab_elements (current_loops->exits))\n \t{\n-\t  error (\"Too many loop exits recorded\");\n+\t  error (\"too many loop exits recorded\");\n \t  err = 1;\n \t}\n "}, {"sha": "c2d2fed9b1dbc3b212350b1638b276963e5bc99d", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -468,22 +468,22 @@ verify_cgraph_node (struct cgraph_node *node)\n       }\n   if (node->count < 0)\n     {\n-      error (\"Execution count is negative\");\n+      error (\"execution count is negative\");\n       error_found = true;\n     }\n   if (node->global.inlined_to && node->local.externally_visible)\n     {\n-      error (\"Externally visible inline clone\");\n+      error (\"externally visible inline clone\");\n       error_found = true;\n     }\n   if (node->global.inlined_to && node->address_taken)\n     {\n-      error (\"Inline clone with address taken\");\n+      error (\"inline clone with address taken\");\n       error_found = true;\n     }\n   if (node->global.inlined_to && node->needed)\n     {\n-      error (\"Inline clone is needed\");\n+      error (\"inline clone is needed\");\n       error_found = true;\n     }\n   for (e = node->indirect_calls; e; e = e->next_callee)"}, {"sha": "37a535ba1a4ee23cafc4c50bd6af845521f7b248", "filename": "gcc/collect2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -954,7 +954,7 @@ maybe_run_lto_and_relink (char **lto_ld_argv, char **object_lst,\n       size_t num_files;\n \n       if (!lto_wrapper)\n-\tfatal (\"COLLECT_LTO_WRAPPER must be set.\");\n+\tfatal (\"COLLECT_LTO_WRAPPER must be set\");\n \n       num_lto_c_args++;\n "}, {"sha": "d100bba78601ce75057247086a4d3266b4cc97eb", "filename": "gcc/config/alpha/freebsd.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Falpha%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Falpha%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ffreebsd.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,5 +1,6 @@\n /* Definitions for DEC Alpha/AXP running FreeBSD using the ELF format\n-   Copyright (C) 2000, 2002, 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2002, 2004, 2005, 2007, 2010\n+   Free Software Foundation, Inc.\n    Contributed by David E. O'Brien <obrien@FreeBSD.org> and BSDi.\n \n This file is part of GCC.\n@@ -30,7 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE}\"\n \n #define LINK_SPEC \"%{G*} %{relax:-relax}\t\t\t\t\\\n-  %{p:%nconsider using `-pg' instead of `-p' with gprof(1)}\t\t\\\n+  %{p:%nconsider using '-pg' instead of '-p' with gprof(1)}\t\t\\\n   %{Wl,*:%*}\t\t\t\t\t\t\t\t\\\n   %{assert*} %{R*} %{rpath*} %{defsym*}\t\t\t\t\t\\\n   %{shared:-Bshareable %{h*} %{soname*}}\t\t\t\t\\"}, {"sha": "5baa2ca847603cfcea4c4b1dd5cf6265e2a66361", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -3797,9 +3797,9 @@ arm_get_pcs_model (const_tree type, const_tree decl)\n       if (user_convention)\n \t{\n \t  if (user_pcs > ARM_PCS_AAPCS_LOCAL)\n-\t    sorry (\"Non-AAPCS derived PCS variant\");\n+\t    sorry (\"non-AAPCS derived PCS variant\");\n \t  else if (base_rules && user_pcs != ARM_PCS_AAPCS)\n-\t    error (\"Variadic functions must use the base AAPCS variant\");\n+\t    error (\"variadic functions must use the base AAPCS variant\");\n \t}\n \n       if (base_rules)"}, {"sha": "20cda99defb0bced04a458a3d6f1c50249a0ddd4", "filename": "gcc/config/arm/freebsd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Farm%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Farm%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffreebsd.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for StrongARM running FreeBSD using the ELF format\n-   Copyright (C) 2001, 2004, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2004, 2007, 2010 Free Software Foundation, Inc.\n    Contributed by David E. O'Brien <obrien@FreeBSD.org> and BSDi.\n \n    This file is part of GCC.\n@@ -28,7 +28,7 @@\n \n #undef\tLINK_SPEC\n #define LINK_SPEC \"\t\t\t\t\t\t\t\\\n-  %{p:%nconsider using `-pg' instead of `-p' with gprof(1) }\t\t\\\n+  %{p:%nconsider using '-pg' instead of '-p' with gprof(1)}\t\t\\\n   %{v:-V}\t\t\t\t\t\t\t\t\\\n   %{assert*} %{R*} %{rpath*} %{defsym*}\t\t\t\t\t\\\n   %{shared:-Bshareable %{h*} %{soname*}}\t\t\t\t\\"}, {"sha": "2af5cbf92c5005d55e46e64c89b6f20f435141ad", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1166,7 +1166,7 @@ print_operand_address (FILE *file, rtx addr)\n \t      output_addr_const (file, XEXP (x,0));\n \t      fprintf (file,\"+\" HOST_WIDE_INT_PRINT_DEC \")\", 2 * INTVAL (XEXP (x,1)));\n \t      if (AVR_3_BYTE_PC)\n-\t        if (warning ( 0, \"Pointer offset from symbol maybe incorrect.\"))\n+\t        if (warning (0, \"pointer offset from symbol maybe incorrect\"))\n \t\t  {\n \t\t    output_addr_const (stderr, addr);\n \t\t    fprintf(stderr,\"\\n\");"}, {"sha": "62fc1f126a5d9921b94b29b9bbeaee532c41585e", "filename": "gcc/config/avr/avr.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Favr%2Favr.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Favr%2Favr.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.opt?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -57,4 +57,4 @@ Relax branches\n \n mpmem-wrap-around\n Target Report\n-Make the linker relaxation machine assume that a program counter wrap-around occures.\n+Make the linker relaxation machine assume that a program counter wrap-around occurs."}, {"sha": "851a38ba3159f8c18c2a0cb1f5c53af6da4f7959", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -2696,10 +2696,10 @@ bfin_option_override (void)\n     error (\"-mshared-library-id= specified without -mid-shared-library\");\n \n   if (stack_limit_rtx && TARGET_STACK_CHECK_L1)\n-    error (\"Can't use multiple stack checking methods together.\");\n+    error (\"can%'t use multiple stack checking methods together\");\n \n   if (TARGET_ID_SHARED_LIBRARY && TARGET_FDPIC)\n-    error (\"ID shared libraries and FD-PIC mode can't be used together.\");\n+    error (\"ID shared libraries and FD-PIC mode can%'t be used together\");\n \n   /* Don't allow the user to specify -mid-shared-library and -msep-data\n      together, as it makes little sense from a user's point of view...  */\n@@ -2733,7 +2733,7 @@ bfin_option_override (void)\n     error (\"-mcoreb should be used with -mmulticore\");\n \n   if (TARGET_COREA && TARGET_COREB)\n-    error (\"-mcorea and -mcoreb can't be used together\");\n+    error (\"-mcorea and -mcoreb can%'t be used together\");\n \n   flag_schedule_insns = 0;\n \n@@ -5639,7 +5639,7 @@ bfin_handle_longcall_attribute (tree *node, tree name,\n \t  && lookup_attribute (\"longcall\", TYPE_ATTRIBUTES (*node))))\n     {\n       warning (OPT_Wattributes,\n-\t       \"can't apply both longcall and shortcall attributes to the same function\");\n+\t       \"can%'t apply both longcall and shortcall attributes to the same function\");\n       *no_add_attrs = true;\n     }\n "}, {"sha": "0681f8d994e255f515cdf3a6862457efd8c9e461", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -2779,7 +2779,7 @@ cris_split_movdx (rtx *operands)\n \t    }\n \t}\n       else\n-\tinternal_error (\"Unknown src\");\n+\tinternal_error (\"unknown src\");\n     }\n   /* Reg-to-mem copy or clear mem.  */\n   else if (MEM_P (dest)\n@@ -2840,7 +2840,7 @@ cris_split_movdx (rtx *operands)\n     }\n \n   else\n-    internal_error (\"Unknown dest\");\n+    internal_error (\"unknown dest\");\n \n   val = get_insns ();\n   end_sequence ();\n@@ -3660,7 +3660,7 @@ cris_expand_pic_call_address (rtx *opp)\n       else\n \t/* Can't possibly get a GOT-needing-fixup for a function-call,\n \t   right?  */\n-\tfatal_insn (\"Unidentifiable call op\", op);\n+\tfatal_insn (\"unidentifiable call op\", op);\n \n       *opp = replace_equiv_address (*opp, op);\n     }\n@@ -3729,7 +3729,8 @@ cris_asm_output_label_ref (FILE *file, char *buf)\n \n       /* Sanity check.  */\n       if (!TARGET_V32 && !crtl->uses_pic_offset_table)\n-\tinternal_error (\"emitting PIC operand, but PIC register isn't set up\");\n+\tinternal_error (\"emitting PIC operand, but PIC register \"\n+\t\t\t\"isn%'t set up\");\n     }\n   else\n     assemble_name (file, buf);"}, {"sha": "943b0021608cd6ec3537a06ae85e3a623682e331", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -194,7 +194,7 @@ extern int cris_cpu_version;\n  MAYBE_AS_NO_MUL_BUG_ABORT \\\n  \"%{v:-v}\\\n  %(asm_subtarget)\\\n- %{march=*:%{cpu=*:%eDo not specify both -march=... and -mcpu=...}}\\\n+ %{march=*:%{cpu=*:%edo not specify both -march=... and -mcpu=...}}\\\n  %{march=v32:--march=v32} %{mcpu=v32:--march=v32}\"\n \n /* For the cris-*-elf subtarget.  */"}, {"sha": "da6e263ca52fbbf9515a77e588dff2fcbccda212", "filename": "gcc/config/crx/crx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fcrx%2Fcrx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fcrx%2Fcrx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcrx%2Fcrx.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -339,7 +339,7 @@ struct cumulative_args\n #undef  FUNCTION_PROFILER\n #define FUNCTION_PROFILER(STREAM, LABELNO)\t\\\n {\t\t\t\t\t\t\\\n-    sorry (\"Profiler support for CRX\");\t\t\\\n+    sorry (\"profiler support for CRX\");\t\t\\\n }\n \t\n /*****************************************************************************/"}, {"sha": "973f8f22a5d2c2091bdc7361eebc831e18cf4cf1", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -590,7 +590,7 @@ version_as_macro (void)\n   return result;\n \n  fail:\n-  error (\"Unknown value %qs of -mmacosx-version-min\",\n+  error (\"unknown value %qs of -mmacosx-version-min\",\n \t darwin_macosx_version_min);\n   return \"1000\";\n }"}, {"sha": "1eb9201063774f46c00fbc677a5d68ae0c9647c4", "filename": "gcc/config/darwin-driver.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fdarwin-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fdarwin-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-driver.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -133,7 +133,7 @@ darwin_default_min_version (unsigned int *decoded_options_count,\n   return;\n   \n  parse_failed:\n-  warning (0, \"couldn't understand kern.osversion %q.*s\",\n+  warning (0, \"couldn%'t understand kern.osversion %q.*s\",\n \t   (int) osversion_len, osversion);\n   return;\n }"}, {"sha": "223abb89968a7d16d69e05453743d51ad3e4a1cc", "filename": "gcc/config/host-darwin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fhost-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fhost-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fhost-darwin.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -60,7 +60,7 @@ darwin_gt_pch_use_address (void *addr, size_t sz, int fd, size_t off)\n   sz = (sz + pagesize - 1) / pagesize * pagesize;\n \n   if (munmap (pch_address_space + sz, sizeof (pch_address_space) - sz) != 0)\n-    fatal_error (\"couldn't unmap pch_address_space: %m\");\n+    fatal_error (\"couldn%'t unmap pch_address_space: %m\");\n \n   if (ret)\n     {"}, {"sha": "1d27044018a2617b77e2d96dd30ea9661debfd9b", "filename": "gcc/config/i386/freebsd.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,5 +1,6 @@\n /* Definitions for Intel 386 running FreeBSD with ELF format\n-   Copyright (C) 1996, 2000, 2002, 2004, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 2000, 2002, 2004, 2007, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Eric Youngdale.\n    Modified for stabs-in-ELF by H.J. Lu.\n    Adapted from GNU/Linux version by John Polstra.\n@@ -100,7 +101,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #undef\tLINK_SPEC\n #define LINK_SPEC \"\\\n-  %{p:%nconsider using `-pg' instead of `-p' with gprof(1)} \\\n+  %{p:%nconsider using '-pg' instead of '-p' with gprof(1)} \\\n   %{v:-V} \\\n   %{assert*} %{R*} %{rpath*} %{defsym*} \\\n   %{shared:-Bshareable %{h*} %{soname*}} \\"}, {"sha": "ac699b3bf01a2d015eb74767b3f9b0b1c020f1c7", "filename": "gcc/config/i386/host-cygwin.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-cygwin.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -54,14 +54,14 @@ cygwin_gt_pch_get_address (size_t sz, int fd)\n   off_t p = lseek(fd, 0, SEEK_CUR);\n \n   if (p == (off_t) -1)\n-    fatal_error (\"can't get position in PCH file: %m\");\n+    fatal_error (\"can%'t get position in PCH file: %m\");\n \n    /* Cygwin requires that the underlying file be at least\n       as large as the requested mapping.  */\n   if ((size_t) p < sz)\n   { \n     if ( ftruncate (fd, sz) == -1 )\n-      fatal_error (\"can't extend PCH file: %m\");\n+      fatal_error (\"can%'t extend PCH file: %m\");\n   }\n \n   base = mmap (NULL, sz, PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, 0);\n@@ -72,7 +72,7 @@ cygwin_gt_pch_get_address (size_t sz, int fd)\n     munmap (base, sz);\n \n   if (lseek (fd, p, SEEK_SET) == (off_t) -1 )\n-    fatal_error (\"can't set position in PCH file: %m\");\n+    fatal_error (\"can%'t set position in PCH file: %m\");\n \n   return base;\n }"}, {"sha": "96327854638534ebf11e3ddf772db1c611db53dd", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -3296,8 +3296,8 @@ ix86_option_override_internal (bool main_args_p)\n         error (\"bad value (%s) for %stune=%s %s\",\n \t       ix86_tune_string, prefix, suffix, sw);\n       else if (!strcmp (ix86_tune_string, \"x86-64\"))\n-        warning (OPT_Wdeprecated, \"%stune=x86-64%s is deprecated.  Use \"\n-                 \"%stune=k8%s or %stune=generic%s instead as appropriate.\",\n+        warning (OPT_Wdeprecated, \"%stune=x86-64%s is deprecated; use \"\n+                 \"%stune=k8%s or %stune=generic%s instead as appropriate\",\n                  prefix, suffix, prefix, suffix, prefix, suffix);\n     }\n   else\n@@ -4023,13 +4023,14 @@ ix86_option_override_internal (bool main_args_p)\n   if (!TARGET_64BIT && flag_pic)\n     {\n       if (flag_fentry > 0)\n-        sorry (\"-mfentry isn't supported for 32-bit in combination with -fpic\");\n+        sorry (\"-mfentry isn%'t supported for 32-bit in combination \"\n+\t       \"with -fpic\");\n       flag_fentry = 0;\n     }\n   else if (TARGET_SEH)\n     {\n       if (flag_fentry == 0)\n-\tsorry (\"-mno-fentry isn't compatible with SEH\");\n+\tsorry (\"-mno-fentry isn%'t compatible with SEH\");\n       flag_fentry = 1;\n     }\n   else if (flag_fentry < 0)\n@@ -5337,10 +5338,10 @@ ix86_function_sseregparm (const_tree type, const_tree decl, bool warn)\n \t  if (warn)\n \t    {\n \t      if (decl)\n-\t\terror (\"Calling %qD with attribute sseregparm without \"\n+\t\terror (\"calling %qD with attribute sseregparm without \"\n \t\t       \"SSE/SSE2 enabled\", decl);\n \t      else\n-\t\terror (\"Calling %qT with attribute sseregparm without \"\n+\t\terror (\"calling %qT with attribute sseregparm without \"\n \t\t       \"SSE/SSE2 enabled\", type);\n \t    }\n \t  return 0;\n@@ -6002,7 +6003,7 @@ classify_argument (enum machine_mode mode, const_tree type,\n \t\t\t    {\n \t\t\t      warned = true;\n \t\t\t      inform (input_location,\n-\t\t\t\t      \"The ABI of passing struct with\"\n+\t\t\t\t      \"the ABI of passing struct with\"\n \t\t\t\t      \" a flexible array member has\"\n \t\t\t\t      \" changed in GCC 4.4\");\n \t\t\t    }\n@@ -6118,7 +6119,7 @@ classify_argument (enum machine_mode mode, const_tree type,\n \t\t{\n \t\t  warned = true;\n \t\t  inform (input_location,\n-\t\t\t  \"The ABI of passing union with long double\"\n+\t\t\t  \"the ABI of passing union with long double\"\n \t\t\t  \" has changed in GCC 4.4\");\n \t\t}\n \t      return 0;\n@@ -6233,7 +6234,7 @@ classify_argument (enum machine_mode mode, const_tree type,\n \t    {\n \t      warned = true;\n \t      inform (input_location,\n-\t\t      \"The ABI of passing structure with complex float\"\n+\t\t      \"the ABI of passing structure with complex float\"\n \t\t      \" member has changed in GCC 4.4\");\n \t    }\n \t  classes[1] = X86_64_SSESF_CLASS;\n@@ -10086,7 +10087,7 @@ ix86_expand_prologue (void)\n       /* Check if profiling is active and we shall use profiling before\n          prologue variant. If so sorry.  */\n       if (crtl->profile && flag_fentry != 0)\n-        sorry (\"ms_hook_prologue attribute isn't compatible \"\n+        sorry (\"ms_hook_prologue attribute isn%'t compatible \"\n \t       \"with -mfentry for 32-bit\");\n \n       /* In ix86_asm_output_function_label we emitted:"}, {"sha": "1bc52068d89735c299abcff21b85f589488a7b41", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -552,7 +552,7 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n #ifndef CC1_CPU_SPEC\n #define CC1_CPU_SPEC_1 \"\\\n %{msse5:-mavx \\\n-%n'-msse5' was removed.\\n}\"\n+%n'-msse5' was removed\\n}\"\n \n #ifndef HAVE_LOCAL_CPU_DETECT\n #define CC1_CPU_SPEC CC1_CPU_SPEC_1"}, {"sha": "94ef0556ff2ef573945989d65364008e68c560c9", "filename": "gcc/config/i386/nwld.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Fnwld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Fnwld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnwld.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -31,7 +31,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #undef  LINK_SPEC\n #define LINK_SPEC \"--format:NLM --extensions:GNU\" \\\n-\t\" %{static:%{!nostdlib:%{!nodefaultlib:%eStatic linking is not supported.\\n}}}\"\n+\t\" %{static:%{!nostdlib:%{!nodefaultlib:%estatic linking is not supported\\n}}}\"\n \n #undef  LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \"%L %G\""}, {"sha": "b8d2979c4659bc83fc8648bb093770f6328b51a5", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -144,7 +144,7 @@ i386_pe_determine_dllimport_p (tree decl)\n \t an error as long as we don't try to import it too.  */\n       && !DECL_VIRTUAL_P (decl))\n \terror (\"definition of static data member %q+D of \"\n-\t       \"dllimport'd class\", decl);\n+\t       \"dllimport%'d class\", decl);\n \n   return false;\n }"}, {"sha": "7881ab17b4c6ce23df92d46a1d10143ac6aa9e4b", "filename": "gcc/config/ia64/freebsd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fia64%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fia64%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ffreebsd.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel IA-64 running FreeBSD using the ELF format\n-   Copyright (C) 2001, 2004, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2004, 2007, 2010 Free Software Foundation, Inc.\n    Contributed by David E. O'Brien <obrien@FreeBSD.org> and BSDi.\n \n This file is part of GCC.\n@@ -23,7 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n   { \"fbsd_dynamic_linker\", FBSD_DYNAMIC_LINKER }\n \n #define LINK_SPEC \"\t\t\t\t\t\t\t\\\n-  %{p:%nconsider using `-pg' instead of `-p' with gprof(1)}\t\t\\\n+  %{p:%nconsider using '-pg' instead of '-p' with gprof(1)}\t\t\\\n   %{assert*} %{R*} %{rpath*} %{defsym*}\t\t\t\t\t\\\n   %{shared:-Bshareable %{h*} %{soname*}}\t\t\t\t\\\n   %{symbolic:-Bsymbolic}\t\t\t\t\t\t\\"}, {"sha": "70821ceee1cec72b34685d5866c3b8c99044a0ee", "filename": "gcc/config/ia64/ia64.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fia64%2Fia64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fia64%2Fia64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.opt?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,4 +1,4 @@\n-; Copyright (C) 2005, 2006, 2008 Free Software Foundation, Inc.\n+; Copyright (C) 2005, 2006, 2008, 2009, 2010 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -172,7 +172,7 @@ Soft limit on number of memory insns per instruction group, giving lower priorit\n \n msched-max-memory-insns-hard-limit\n Target Report Var(mflag_sched_mem_insns_hard_limit) Init(0)\n-Disallow more than `msched-max-memory-insns' in instruction group. Otherwise, limit is `soft' (prefer non-memory operations when limit is reached)\n+Disallow more than 'msched-max-memory-insns' in instruction group. Otherwise, limit is 'soft' (prefer non-memory operations when limit is reached)\n \n msel-sched-dont-check-control-spec\n Target Report Var(mflag_sel_sched_dont_check_control_spec) Init(0)"}, {"sha": "b155697b97f16cca690a1bc83cebcdc099e9885b", "filename": "gcc/config/lm32/lm32.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Flm32%2Flm32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Flm32%2Flm32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -523,7 +523,7 @@ lm32_print_operand (FILE * file, rtx op, int letter)\n   else if (GET_CODE (op) == CONST_DOUBLE)\n     {\n       if ((CONST_DOUBLE_LOW (op) != 0) || (CONST_DOUBLE_HIGH (op) != 0))\n-\toutput_operand_lossage (\"Only 0.0 can be loaded as an immediate\");\n+\toutput_operand_lossage (\"only 0.0 can be loaded as an immediate\");\n       else\n \tfprintf (file, \"0\");\n     }"}, {"sha": "62877d4754c39368c9a1e2ee780cad44c941efdd", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -4066,15 +4066,15 @@ mep_validate_vliw (tree *node, tree name, tree args ATTRIBUTE_UNUSED,\n       if (TREE_CODE (*node) == POINTER_TYPE\n  \t  && !gave_pointer_note)\n  \t{\n- \t  inform (input_location, \"To describe a pointer to a VLIW function, use syntax like this:\");\n+ \t  inform (input_location, \"to describe a pointer to a VLIW function, use syntax like this:\");\n  \t  inform (input_location, \"  typedef int (__vliw *vfuncptr) ();\");\n  \t  gave_pointer_note = 1;\n  \t}\n  \n       if (TREE_CODE (*node) == ARRAY_TYPE\n  \t  && !gave_array_note)\n  \t{\n- \t  inform (input_location, \"To describe an array of VLIW function pointers, use syntax like this:\");\n+ \t  inform (input_location, \"to describe an array of VLIW function pointers, use syntax like this:\");\n  \t  inform (input_location, \"  typedef int (__vliw *vfuncptr[]) ();\");\n  \t  gave_array_note = 1;\n  \t}"}, {"sha": "e81285c9067d363d4c7fd57c0afc628bce6fc8c4", "filename": "gcc/config/microblaze/microblaze.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1285,7 +1285,7 @@ microblaze_handle_option (size_t code,\n       warning (0, \"-mno-clearbss is deprecated; use -fno-zero-initialized-in-bss\");\n       break;\n     case OPT_mxl_stack_check:\n-      warning (0, \"-mxl_stack_check is deprecated; use -fstack-check.\");\n+      warning (0, \"-mxl_stack_check is deprecated; use -fstack-check\");\n       break;\n     }\n   return true;\n@@ -1845,7 +1845,7 @@ print_operand (FILE * file, rtx op, int letter)\n \t      break;\n \t    case ADDRESS_INVALID:\n \t    case ADDRESS_PLT:\n-\t      fatal_insn (\"Invalid address\", op);\n+\t      fatal_insn (\"invalid address\", op);\n \t    }\n \t}\n     }"}, {"sha": "9a02eeacab6379e5dac46521deee9601fb596c73", "filename": "gcc/config/pa/pa-hpux10.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -84,21 +84,21 @@ along with GCC; see the file COPYING3.  If not see\n #define LINK_SPEC \\\n   \"%{!mpa-risc-1-0:%{!march=1.0:%{static:-L/lib/pa1.1 -L/usr/lib/pa1.1 }}}\\\n    %{!shared:%{p:-L/lib/libp %{!static:\\\n-     %nWarning: consider linking with `-static' as system libraries with\\n\\\n+     %nwarning: consider linking with '-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\\n    %{!shared:%{pg:-L/lib/libp %{!static:\\\n-     %nWarning: consider linking with `-static' as system libraries with\\n\\\n+     %nwarning: consider linking with '-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\\n    %{!shared:%{!static:%{rdynamic:-E}}}\\\n    -z %{mlinker-opt:-O} %{!shared:-u main}\\\n    %{static:-a archive} %{shared:-b}\"\n #else\n #define LINK_SPEC \\\n   \"%{!shared:%{p:-L/lib/libp %{!static:\\\n-     %nWarning: consider linking with `-static' as system libraries with\\n\\\n+     %nwarning: consider linking with '-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\\n    %{!shared:%{pg:-L/lib/libp %{!static:\\\n-     %nWarning: consider linking with `-static' as system libraries with\\n\\\n+     %nwarning: consider linking with '-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\\n    %{!shared:%{!static:%{rdynamic:-E}}}\\\n    -z %{mlinker-opt:-O} %{!shared:-u main}\\"}, {"sha": "e9aa0f90ac5d0753ffbb234455ce9930571b4192", "filename": "gcc/config/pa/pa-hpux11.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -105,10 +105,10 @@ along with GCC; see the file COPYING3.  If not see\n #undef LINK_SPEC\n #define LINK_SPEC \\\n   \"%{!shared:%{p:-L/lib/libp -L/usr/lib/libp %{!static:\\\n-     %nWarning: consider linking with `-static' as system libraries with\\n\\\n+     %nwarning: consider linking with '-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\\n    %{!shared:%{pg:-L/lib/libp -L/usr/lib/libp %{!static:\\\n-     %nWarning: consider linking with `-static' as system libraries with\\n\\\n+     %nwarning: consider linking with '-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\\n    %{!shared:%{!static:%{rdynamic:-E}}}\\\n    -z %{mlinker-opt:-O} %{!shared:-u main -u __gcc_plt_call}\\"}, {"sha": "5c1bd02c012d4c3ab735a670ffe6ec5a4df2f591", "filename": "gcc/config/pa/pa64-hpux.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -27,10 +27,10 @@ along with GCC; see the file COPYING3.  If not see\n #if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & MASK_GNU_LD)\n #define LINK_SPEC \\\n   \"%{!shared:%{p:-L/lib/pa20_64/libp -L/usr/lib/pa20_64/libp %{!static:\\\n-     %nWarning: consider linking with `-static' as system libraries with\\n\\\n+     %nwarning: consider linking with '-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\\n    %{!shared:%{pg:-L/lib/pa20_64/libp -L/usr/lib/pa20_64/libp %{!static:\\\n-     %nWarning: consider linking with `-static' as system libraries with\\n\\\n+     %nwarning: consider linking with '-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\\n    %{!shared:%{!static:%{rdynamic:-E}}}\\\n    %{mhp-ld:+Accept TypeMismatch -z} %{mlinker-opt:-O}\\\n@@ -39,10 +39,10 @@ along with GCC; see the file COPYING3.  If not see\n #else\n #define LINK_SPEC \\\n   \"%{!shared:%{p:-L/lib/pa20_64/libp -L/usr/lib/pa20_64/libp %{!static:\\\n-     %nWarning: consider linking with `-static' as system libraries with\\n\\\n+     %nwarning: consider linking with '-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\\n    %{!shared:%{pg:-L/lib/pa20_64/libp -L/usr/lib/pa20_64/libp %{!static:\\\n-     %nWarning: consider linking with `-static' as system libraries with\\n\\\n+     %nwarning: consider linking with '-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\\n    %{!shared:%{!static:%{rdynamic:-E}}}\\\n    %{!mgnu-ld:+Accept TypeMismatch -z} %{mlinker-opt:-O}\\"}, {"sha": "d2dab017d8a9b17579599c30ae5623e0a3ecc2c6", "filename": "gcc/config/picochip/picochip.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fpicochip%2Fpicochip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpicochip%2Fpicochip.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -431,7 +431,7 @@ picochip_option_override (void)\n      unit ISA options. Any unrecognised AE types will end up being\n      passed to the compiler, which should reject them as invalid. */\n   if (picochip_ae_type_string != NULL)\n-    error (\"invalid AE type specified (%s)\\n\", picochip_ae_type_string);\n+    error (\"invalid AE type specified (%s)\", picochip_ae_type_string);\n \n   /* Override any specific capabilities of the instruction set. These\n      take precedence over any capabilities inferred from the AE type,\n@@ -454,7 +454,7 @@ picochip_option_override (void)\n       else if (strcmp (picochip_mul_type_string, \"none\") == 0)\n \t{ /* Do nothing. Unit types already set to false. */ }\n       else\n-\terror (\"Invalid mul type specified (%s) - expected mac, mul or none\",\n+\terror (\"invalid mul type specified (%s) - expected mac, mul or none\",\n \t       picochip_mul_type_string);\n     }\n \n@@ -749,7 +749,7 @@ picochip_emit_save_register (rtx reg, int offset)\n \n     default:\n       internal_error\n-\t(\"unexpected mode %s encountered in picochip_emit_save_register\\n\",\n+\t(\"unexpected mode %s encountered in picochip_emit_save_register\",\n \t GET_MODE_NAME (GET_MODE (reg)));\n     }\n \n@@ -916,7 +916,7 @@ picochip_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n \n     default:\n       warning\n-\t(0, \"Defaulting to stack for %s register creation\\n\",\n+\t(0, \"defaulting to stack for %s register creation\",\n \t GET_MODE_NAME (mode));\n       break;\n     }\n@@ -1599,7 +1599,7 @@ picochip_output_label (FILE * stream, const char name[])\n     {\n       if (picochip_current_vliw_state.num_cfi_labels_deferred == 2)\n       {\n-        internal_error (\"LCFI labels have already been deferred.\");\n+        internal_error (\"LCFI labels have already been deferred\");\n       }\n       strcpy (picochip_current_vliw_state.cfi_label_name[\n                 picochip_current_vliw_state.num_cfi_labels_deferred], name);\n@@ -1662,7 +1662,7 @@ picochip_output_internal_label (FILE * stream, const char *prefix,\n \t  (strcmp (prefix, \"LM\")) == 0 && picochip_vliw_continuation)\n \t{\n \t  if (strlen (picochip_current_vliw_state.lm_label_name) != 0)\n-\t    internal_error (\"LM label has already been deferred.\");\n+\t    internal_error (\"LM label has already been deferred\");\n \n \t  sprintf (picochip_current_vliw_state.lm_label_name,\n \t\t   \"picoMark_%s%ld\", prefix, num);\n@@ -1954,7 +1954,7 @@ picochip_asm_output_opcode (FILE * f, const char *ptr)\n      made to pack it into a VLIW. */\n   if (strchr (ptr, '\\n') != NULL && picochip_vliw_continuation)\n     internal_error\n-      (\"picochip_asm_output_opcode - Found multiple lines in VLIW packet %s\\n\",\n+      (\"picochip_asm_output_opcode - Found multiple lines in VLIW packet %s\",\n        ptr);\n \n \n@@ -2057,7 +2057,7 @@ picochip_asm_output_opcode (FILE * f, const char *ptr)\n \t}\n       else if (c == '%')\n \tinternal_error\n-\t  (\"picochip_asm_output_opcode - can't output unknown operator %c\\n\",\n+\t  (\"picochip_asm_output_opcode - can%'t output unknown operator %c\",\n \t   *ptr);\n       else\n \tfputc (c, f);\n@@ -2308,7 +2308,7 @@ picochip_output_cbranch (rtx operands[])\n       (HImode != GET_MODE (operands[2]) &&\n        GET_CODE (operands[2]) != CONST_INT))\n     {\n-      internal_error (\"%s: At least one operand can't be handled\",\n+      internal_error (\"%s: at least one operand can%'t be handled\",\n \t\t      __FUNCTION__);\n     }\n \n@@ -2368,7 +2368,7 @@ picochip_output_compare (rtx operands[])\n       (HImode != GET_MODE (operands[2]) &&\n        GET_CODE (operands[2]) != CONST_INT))\n     {\n-      internal_error (\"%s: At least one operand can't be handled\",\n+      internal_error (\"%s: at least one operand can%'t be handled\",\n \t\t      __FUNCTION__);\n     }\n \n@@ -2449,7 +2449,7 @@ picochip_output_branch (rtx operands[], rtx insn)\n \tcase GTU:\n \t  return (\"BLO %l0 %>\");\n \tdefault:\n-\t  internal_error (\"Unknown short branch in %s (type %d)\\n\",\n+\t  internal_error (\"unknown short branch in %s (type %d)\",\n \t\t\t  __FUNCTION__, (int) INTVAL (operands[1]));\n \t  return \"UNKNOWN_BRANCH\";\n \t}\n@@ -2486,7 +2486,7 @@ picochip_output_branch (rtx operands[], rtx insn)\n \t  return (\"JMPLO %l0 %>\");\n \n \tdefault:\n-\t  internal_error (\"Unknown long branch in %s (type %d)\\n\",\n+\t  internal_error (\"unknown long branch in %s (type %d)\",\n \t\t\t  __FUNCTION__, (int) INTVAL (operands[1]));\n \t  return \"UNKNOWN_BRANCH\";\n \t}\n@@ -3431,7 +3431,7 @@ picochip_get_vliw_alu_id (void)\n \t  return '1';\n \n \tdefault:\n-\t  internal_error (\"Too many ALU instructions emitted (%d)\\n\",\n+\t  internal_error (\"too many ALU instructions emitted (%d)\",\n \t\t\t  picochip_current_vliw_state.num_alu_insns_so_far);\n \t  return 'X';\n \t}"}, {"sha": "ba85c0a9a510b8c1b0f5a5dc7fcc4e9ae5b26c84", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -2662,7 +2662,7 @@ rs6000_option_override_internal (const char *default_cpu)\n       if (TARGET_ALTIVEC)\n \terror (\"AltiVec not supported in this target\");\n       if (TARGET_SPE)\n-\terror (\"Spe not supported in this target\");\n+\terror (\"SPE not supported in this target\");\n     }\n \n   /* Disable Cell microcode if we are optimizing for the Cell\n@@ -3250,7 +3250,7 @@ rs6000_option_override_internal (const char *default_cpu)\n \n \t      if (i == ARRAY_SIZE (recip_options))\n \t\t{\n-\t\t  error (\"Unknown option for -mrecip=%s\", q);\n+\t\t  error (\"unknown option for -mrecip=%s\", q);\n \t\t  invert = false;\n \t\t  mask = 0;\n \t\t}\n@@ -4317,25 +4317,25 @@ rs6000_handle_option (size_t code, const char *arg, int value)\n       else if (! strcmp (arg, \"d64\"))\n \t{\n \t  rs6000_darwin64_abi = 1;\n-\t  warning (0, \"Using darwin64 ABI\");\n+\t  warning (0, \"using darwin64 ABI\");\n \t}\n       else if (! strcmp (arg, \"d32\"))\n \t{\n \t  rs6000_darwin64_abi = 0;\n-\t  warning (0, \"Using old darwin ABI\");\n+\t  warning (0, \"using old darwin ABI\");\n \t}\n \n       else if (! strcmp (arg, \"ibmlongdouble\"))\n \t{\n \t  rs6000_explicit_options.ieee = true;\n \t  rs6000_ieeequad = 0;\n-\t  warning (0, \"Using IBM extended precision long double\");\n+\t  warning (0, \"using IBM extended precision long double\");\n \t}\n       else if (! strcmp (arg, \"ieeelongdouble\"))\n \t{\n \t  rs6000_explicit_options.ieee = true;\n \t  rs6000_ieeequad = 1;\n-\t  warning (0, \"Using IEEE extended precision long double\");\n+\t  warning (0, \"using IEEE extended precision long double\");\n \t}\n \n       else\n@@ -4377,7 +4377,7 @@ rs6000_handle_option (size_t code, const char *arg, int value)\n       rs6000_long_double_type_size = RS6000_DEFAULT_LONG_DOUBLE_SIZE;\n       if (value != 64 && value != 128)\n \t{\n-\t  error (\"Unknown switch -mlong-double-%s\", arg);\n+\t  error (\"unknown switch -mlong-double-%s\", arg);\n \t  rs6000_long_double_type_size = RS6000_DEFAULT_LONG_DOUBLE_SIZE;\n \t  return false;\n \t}\n@@ -9631,7 +9631,7 @@ def_builtin (int mask, const char *name, tree type, int code)\n     {\n       tree t;\n       if (rs6000_builtin_decls[code])\n-\tfatal_error (\"internal error: builtin function to %s already processed.\",\n+\tfatal_error (\"internal error: builtin function to %s already processed\",\n \t\t     name);\n \n       rs6000_builtin_decls[code] = t =\n@@ -19708,7 +19708,7 @@ rs6000_savres_routine_name (rs6000_stack_t *info, int regno,\n \t}\n     }\n   else if (DEFAULT_ABI == ABI_DARWIN)\n-    sorry (\"Out-of-line save/restore routines not supported on Darwin\");\n+    sorry (\"out-of-line save/restore routines not supported on Darwin\");\n \n   sprintf (savres_routine_name, \"%s%d%s\", prefix, regno, suffix);\n "}, {"sha": "4fda7fd06e3e392076f97dc6a9e7e0d23a2391f9", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -840,7 +840,7 @@ SVR4_ASM_SPEC \\\n #define LINK_START_FREEBSD_SPEC\t\"\"\n \n #define LINK_OS_FREEBSD_SPEC \"\\\n-  %{p:%nconsider using `-pg' instead of `-p' with gprof(1)} \\\n+  %{p:%nconsider using '-pg' instead of '-p' with gprof(1)} \\\n   %{v:-V} \\\n   %{assert*} %{R*} %{rpath*} %{defsym*} \\\n   %{shared:-Bshareable %{h*} %{soname*}} \\"}, {"sha": "968d65f2f7e9f4d3fb4cc7c1a8f27588cbae914e", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -2206,7 +2206,7 @@ rx_handle_option (size_t code, const char *  arg ATTRIBUTE_UNUSED, int value)\n       \n     case OPT_fpu:\n       if (rx_cpu_type == RX200)\n-\terror (\"The RX200 cpu does not have FPU hardware\");\n+\terror (\"the RX200 cpu does not have FPU hardware\");\n       break;\n \n     default:"}, {"sha": "11ca919af2881338c5740d7d17f324af85af2d48", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1641,10 +1641,10 @@ s390_option_override (void)\n       if (target_flags_explicit & MASK_HARD_DFP)\n \t{\n \t  if (!TARGET_CPU_DFP)\n-\t    error (\"Hardware decimal floating point instructions\"\n+\t    error (\"hardware decimal floating point instructions\"\n \t\t   \" not available on %s\", s390_arch_string);\n \t  if (!TARGET_ZARCH)\n-\t    error (\"Hardware decimal floating point instructions\"\n+\t    error (\"hardware decimal floating point instructions\"\n \t\t   \" not available in ESA/390 mode\");\n \t}\n       else\n@@ -1654,7 +1654,7 @@ s390_option_override (void)\n   if ((target_flags_explicit & MASK_SOFT_FLOAT) && TARGET_SOFT_FLOAT)\n     {\n       if ((target_flags_explicit & MASK_HARD_DFP) && TARGET_HARD_DFP)\n-\terror (\"-mhard-dfp can't be used in conjunction with -msoft-float\");\n+\terror (\"-mhard-dfp can%'t be used in conjunction with -msoft-float\");\n \n       target_flags &= ~MASK_HARD_DFP;\n     }"}, {"sha": "9d8bb536c4fe22fa24da3277bf91ddf80d0c8076", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -11605,15 +11605,15 @@ sh_output_mi_thunk (FILE *file, tree thunk_fndecl ATTRIBUTE_UNUSED,\n \t    break;\n \t  }\n       if (scratch1 == scratch0)\n-\terror (\"Need a second call-clobbered general purpose register\");\n+\terror (\"need a second call-clobbered general purpose register\");\n       for (i = FIRST_TARGET_REG; i <= LAST_TARGET_REG; i++)\n \tif (call_used_regs[i] && ! fixed_regs[i])\n \t  {\n \t    scratch2 = gen_rtx_REG (Pmode, i);\n \t    break;\n \t  }\n       if (scratch2 == scratch0)\n-\terror (\"Need a call-clobbered target register\");\n+\terror (\"need a call-clobbered target register\");\n     }\n \n   this_value = plus_constant (this_rtx, delta);"}, {"sha": "6bfe7cbc559f66a1408bd4134c7b018774736589", "filename": "gcc/config/sh/symbian-base.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fsh%2Fsymbian-base.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fsh%2Fsymbian-base.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsymbian-base.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,6 +1,6 @@\n /* Routines for GCC for a Symbian OS targeted SH backend, shared by\n    both the C and C++ compilers.\n-   Copyright (C) 2004, 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by RedHat.\n    Most of this code is stolen from i386/winnt.c.\n \n@@ -117,7 +117,7 @@ sh_symbian_mark_dllimport (tree decl)\n     {\n       /* Already done, but do a sanity check to prevent assembler errors.  */\n       if (!DECL_EXTERNAL (decl) || !TREE_PUBLIC (decl))\n-\terror (\"failure in redeclaration of %q+D: dllimport'd symbol lacks external linkage\",\n+\terror (\"failure in redeclaration of %q+D: dllimport%'d symbol lacks external linkage\",\n \t       decl);\n     }\n   else"}, {"sha": "cbffdb565812b7b4d67463db3cfa120e4374a993", "filename": "gcc/config/sh/symbian-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fsh%2Fsymbian-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fsh%2Fsymbian-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsymbian-c.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,5 +1,5 @@\n /* Routines for C compiler part of GCC for a Symbian OS targeted SH backend.\n-   Copyright (C) 2004, 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by RedHat.\n    Most of this code is stolen from i386/winnt.c.\n \n@@ -94,7 +94,7 @@ sh_symbian_is_dllimported (tree decl)\n \t   && TREE_PUBLIC (decl)\n \t   && !DECL_EXTERNAL (decl))\n     {\n-      error (\"definition of static data member %q+D of dllimport'd class\",\n+      error (\"definition of static data member %q+D of dllimport%'d class\",\n \t     decl);\n       return false;\n     }"}, {"sha": "4684c3d51176d8d75ccecb485d23e6381c6eb759", "filename": "gcc/config/sh/symbian-cxx.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fsh%2Fsymbian-cxx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fsh%2Fsymbian-cxx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsymbian-cxx.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,5 +1,5 @@\n /* Routines for C++ support for GCC for a Symbian OS targeted SH backend.\n-   Copyright (C) 2004, 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by RedHat.\n    Most of this code is stolen from i386/winnt.c.\n \n@@ -118,7 +118,7 @@ sh_symbian_is_dllimported (tree decl)\n \t   && !DECL_EXTERNAL (decl))\n     {\n       if (!DECL_VIRTUAL_P (decl))\n-\terror (\"definition of static data member %q+D of dllimport'd class\",\n+\terror (\"definition of static data member %q+D of dllimport%'d class\",\n \t       decl);\n       return false;\n     }"}, {"sha": "541010a205ee559cd319b034803ad011e06a8dc3", "filename": "gcc/config/sparc/freebsd.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ffreebsd.h?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,5 +1,6 @@\n /* Definitions for Sun SPARC64 running FreeBSD using the ELF format\n-   Copyright (C) 2001, 2002, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002, 2004, 2005, 2006, 2007, 2010\n+   Free Software Foundation, Inc.\n    Contributed by David E. O'Brien <obrien@FreeBSD.org> and BSDi.\n \n This file is part of GCC.\n@@ -31,7 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #define LINK_SPEC \"%(link_arch)\t\t\t\t\t\t\\\n   %{!mno-relax:%{!r:-relax}}\t\t\t\t\t\t\\\n-  %{p:%nconsider using `-pg' instead of `-p' with gprof(1)}\t\t\\\n+  %{p:%nconsider using '-pg' instead of '-p' with gprof(1)}\t\t\\\n   %{assert*} %{R*} %{rpath*} %{defsym*}\t\t\t\t\t\\\n   %{shared:-Bshareable %{h*} %{soname*}}\t\t\t\t\\\n   %{symbolic:-Bsymbolic}\t\t\t\t\t\t\\"}, {"sha": "d98c57127f3934c39cb2dfbab3de5aefd5698835", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -539,7 +539,7 @@ spu_option_override (void)\n       else if (strcmp (&spu_arch_string[0], \"celledp\") == 0)\n         spu_arch = PROCESSOR_CELLEDP;\n       else\n-        error (\"Unknown architecture '%s'\", &spu_arch_string[0]);\n+        error (\"unknown architecture %qs\", &spu_arch_string[0]);\n     }\n \n   /* Determine processor to tune for.  */\n@@ -550,7 +550,7 @@ spu_option_override (void)\n       else if (strcmp (&spu_tune_string[0], \"celledp\") == 0)\n         spu_tune = PROCESSOR_CELLEDP;\n       else\n-        error (\"Unknown architecture '%s'\", &spu_tune_string[0]);\n+        error (\"unknown architecture %qs\", &spu_tune_string[0]);\n     }\n \n   /* Change defaults according to the processor architecture.  */\n@@ -6423,7 +6423,7 @@ spu_check_builtin_parm (struct spu_builtin_description *d, rtx op, int p)\n       int range = p - SPU_BTI_7;\n \n       if (!CONSTANT_P (op))\n-\terror (\"%s expects an integer literal in the range [%d, %d].\",\n+\terror (\"%s expects an integer literal in the range [%d, %d]\",\n \t       d->name,\n \t       spu_builtin_range[range].low, spu_builtin_range[range].high);\n \n@@ -6443,8 +6443,7 @@ spu_check_builtin_parm (struct spu_builtin_description *d, rtx op, int p)\n       /* The default for v is 0 which is valid in every range. */\n       if (v < spu_builtin_range[range].low\n \t  || v > spu_builtin_range[range].high)\n-\terror (\"%s expects an integer literal in the range [%d, %d]. (\"\n-\t       HOST_WIDE_INT_PRINT_DEC \")\",\n+\terror (\"%s expects an integer literal in the range [%d, %d]. (%wd)\",\n \t       d->name,\n \t       spu_builtin_range[range].low, spu_builtin_range[range].high,\n \t       v);\n@@ -6473,7 +6472,7 @@ spu_check_builtin_parm (struct spu_builtin_description *d, rtx op, int p)\n \t  || (GET_CODE (op) == SYMBOL_REF\n \t      && SYMBOL_REF_FUNCTION_P (op))\n \t  || (v & ((1 << lsbits) - 1)) != 0)\n-\twarning (0, \"%d least significant bits of %s are ignored.\", lsbits,\n+\twarning (0, \"%d least significant bits of %s are ignored\", lsbits,\n \t\t d->name);\n     }\n }"}, {"sha": "81598628406a604edbdd41d1cff456e2a590494e", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -2416,7 +2416,7 @@ construct_save_jarl (rtx op)\n   \n   if (count <= (TARGET_LONG_CALLS ? 3 : 2)) \n     {\n-      error (\"bogus JARL construction: %d\\n\", count);\n+      error (\"bogus JARL construction: %d\", count);\n       return NULL;\n     }\n "}, {"sha": "eba919530afad9487d0bc591306b75125a7d0e31", "filename": "gcc/convert.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -850,7 +850,7 @@ convert_to_integer (tree type, tree expr)\n     case VECTOR_TYPE:\n       if (!tree_int_cst_equal (TYPE_SIZE (type), TYPE_SIZE (TREE_TYPE (expr))))\n \t{\n-\t  error (\"can't convert between vector values of different size\");\n+\t  error (\"can%'t convert between vector values of different size\");\n \t  return error_mark_node;\n \t}\n       return build1 (VIEW_CONVERT_EXPR, type, expr);\n@@ -926,13 +926,13 @@ convert_to_vector (tree type, tree expr)\n     case VECTOR_TYPE:\n       if (!tree_int_cst_equal (TYPE_SIZE (type), TYPE_SIZE (TREE_TYPE (expr))))\n \t{\n-\t  error (\"can't convert between vector values of different size\");\n+\t  error (\"can%'t convert between vector values of different size\");\n \t  return error_mark_node;\n \t}\n       return build1 (VIEW_CONVERT_EXPR, type, expr);\n \n     default:\n-      error (\"can't convert value to a vector\");\n+      error (\"can%'t convert value to a vector\");\n       return error_mark_node;\n     }\n }"}, {"sha": "e5fa280dc777b3badf6d889dcde5bbf73c0d2213", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,3 +1,22 @@\n+2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cvt.c (cp_convert_to_pointer): Use %' in diagnostic.\n+\t* decl.c (layout_var_decl, maybe_commonize_var, grokdeclarator):\n+\tUse %' in diagnostics.\n+\t* decl2.c (check_classfn): Use %' in diagnostic.\n+\t* init.c (build_java_class_ref): Use %' in diagnostic.\n+\t(build_delete): Remove trailing '.' from diagnostic.\n+\t* method.c (do_build_copy_assign, walk_field_subobs): Use %' in\n+\tdiagnostics.\n+\t* name-lookup.c (pushdecl_maybe_friend): Use %' in diagnostic.\n+\t* parser.c (cp_parser_exception_specification_opt): Remove\n+\ttrailing '.' from diagnostic.\n+\t(cp_parser_objc_interstitial_code): Use %qs for quoting in\n+\tdiagnostic.\n+\t* pt.c (check_valid_ptrmem_cst_expr): Use %< and %> for quoting in\n+\tdiagnostic.\n+\t* repo.c (reopen_repo_file_for_write): Use %' in diagnostic.\n+\n 2010-11-10  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tPR c++/46065"}, {"sha": "b10e5589d900c050cf81834c3f770189ae4f3516", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -88,7 +88,7 @@ cp_convert_to_pointer (tree type, tree expr)\n       intype = complete_type (intype);\n       if (!COMPLETE_TYPE_P (intype))\n \t{\n-\t  error (\"can't convert from incomplete type %qT to %qT\",\n+\t  error (\"can%'t convert from incomplete type %qT to %qT\",\n \t\t intype, type);\n \t  return error_mark_node;\n \t}"}, {"sha": "7891c1e1dc2f9e59e7f70b1882475b3dc8d9cb67", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -4691,7 +4691,7 @@ layout_var_decl (tree decl)\n       /* An automatic variable with an incomplete type: that is an error.\n \t Don't talk about array types here, since we took care of that\n \t message in grokdeclarator.  */\n-      error (\"storage size of %qD isn't known\", decl);\n+      error (\"storage size of %qD isn%'t known\", decl);\n       TREE_TYPE (decl) = error_mark_node;\n     }\n #if 0\n@@ -4714,7 +4714,7 @@ layout_var_decl (tree decl)\n \tconstant_expression_warning (DECL_SIZE (decl));\n       else\n \t{\n-\t  error (\"storage size of %qD isn't constant\", decl);\n+\t  error (\"storage size of %qD isn%'t constant\", decl);\n \t  TREE_TYPE (decl) = error_mark_node;\n \t}\n     }\n@@ -4761,7 +4761,7 @@ maybe_commonize_var (tree decl)\n \t      DECL_COMMON (decl) = 0;\n \t      warning_at (input_location, 0,\n \t\t\t  \"sorry: semantics of inline function static \"\n-\t\t\t  \"data %q+#D are wrong (you'll wind up \"\n+\t\t\t  \"data %q+#D are wrong (you%'ll wind up \"\n \t\t\t  \"with multiple copies)\", decl);\n \t      warning_at (DECL_SOURCE_LOCATION (decl), 0, \n \t\t\t  \"  you can work around this by removing \"\n@@ -8790,7 +8790,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t    else if (friendp)\n \t      {\n \t\tif (initialized)\n-\t\t  error (\"can't initialize friend function %qs\", name);\n+\t\t  error (\"can%'t initialize friend function %qs\", name);\n \t\tif (virtualp)\n \t\t  {\n \t\t    /* Cannot be both friend and virtual.  */\n@@ -8800,7 +8800,7 @@ grokdeclarator (const cp_declarator *declarator,\n \t\tif (decl_context == NORMAL)\n \t\t  error (\"friend declaration not in class definition\");\n \t\tif (current_function_decl && funcdef_flag)\n-\t\t  error (\"can't define friend function %qs in a local \"\n+\t\t  error (\"can%'t define friend function %qs in a local \"\n \t\t\t \"class definition\",\n \t\t\t name);\n \t      }"}, {"sha": "dfb7e45b1ccb1546a7fea93436cc03029977a727", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -624,7 +624,7 @@ check_classfn (tree ctype, tree function, tree template_parms)\n \t  && !comp_template_parms (template_parms,\n \t\t\t\t   DECL_TEMPLATE_PARMS (function)))\n \t{\n-\t  error (\"template parameter lists provided don't match the \"\n+\t  error (\"template parameter lists provided don%'t match the \"\n \t\t \"template parameters of %qD\", function);\n \t  return error_mark_node;\n \t}"}, {"sha": "00b5d9be551c91e3e01d8b6690cad39cb790de98", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -2629,7 +2629,7 @@ build_java_class_ref (tree type)\n \t}\n     if (!field)\n       {\n-\terror (\"can't find %<class$%> in %qT\", type);\n+\terror (\"can%'t find %<class$%> in %qT\", type);\n \treturn error_mark_node;\n       }\n   }\n@@ -3307,7 +3307,7 @@ build_delete (tree type, tree addr, special_function_kind auto_delete,\n \t\t  cxx_incomplete_type_diagnostic (addr, type, DK_WARNING);\n \t\t  inform (input_location, \"neither the destructor nor the class-specific \"\n \t\t\t  \"operator delete will be called, even if they are \"\n-\t\t\t  \"declared when the class is defined.\");\n+\t\t\t  \"declared when the class is defined\");\n \t\t}\n \t      complete_p = false;\n \t    }"}, {"sha": "27346d08a2387d1a740b792b5916e97b8a835584", "filename": "gcc/cp/method.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -645,13 +645,13 @@ do_build_copy_assign (tree fndecl)\n \n \t  if (CP_TYPE_CONST_P (expr_type))\n \t    {\n-\t      error (\"non-static const member %q#D, can't use default \"\n+\t      error (\"non-static const member %q#D, can%'t use default \"\n \t\t     \"assignment operator\", field);\n \t      continue;\n \t    }\n \t  else if (TREE_CODE (expr_type) == REFERENCE_TYPE)\n \t    {\n-\t      error (\"non-static reference member %q#D, can't use \"\n+\t      error (\"non-static reference member %q#D, can%'t use \"\n \t\t     \"default assignment operator\", field);\n \t      continue;\n \t    }\n@@ -976,13 +976,13 @@ walk_field_subobs (tree fields, tree fnname, special_function_kind sfk,\n \t  if (CP_TYPE_CONST_P (mem_type) && !CLASS_TYPE_P (mem_type))\n \t    {\n \t      if (msg)\n-\t\terror (\"non-static const member %q#D, can't use default \"\n+\t\terror (\"non-static const member %q#D, can%'t use default \"\n \t\t       \"assignment operator\", field);\n \t    }\n \t  else if (TREE_CODE (mem_type) == REFERENCE_TYPE)\n \t    {\n \t      if (msg)\n-\t\terror (\"non-static reference member %q#D, can't use \"\n+\t\terror (\"non-static reference member %q#D, can%'t use \"\n \t\t       \"default assignment operator\", field);\n \t    }\n \t  else"}, {"sha": "5fe60f904586b44584528ca3ae4722823226a328", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -992,7 +992,7 @@ pushdecl_maybe_friend (tree x, bool is_friend)\n \t\t/* OK */;\n \t      else\n \t\t{\n-\t\t  warning (0, \"extern declaration of %q#D doesn't match\", x);\n+\t\t  warning (0, \"extern declaration of %q#D doesn%'t match\", x);\n \t\t  warning (0, \"global declaration %q+#D\", oldglobal);\n \t\t}\n \t    }"}, {"sha": "906b0c36565b90413240b2ff22db469f96c1b734", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -18212,7 +18212,7 @@ cp_parser_exception_specification_opt (cp_parser* parser)\n   /* Enable this once a lot of code has transitioned to noexcept?  */\n   if (cxx_dialect == cxx0x && !in_system_header)\n     warning (OPT_Wdeprecated, \"dynamic exception specifications are \"\n-\t     \"deprecated in C++0x; use %<noexcept%> instead.\");\n+\t     \"deprecated in C++0x; use %<noexcept%> instead\");\n #endif\n \n   /* Consume the `throw'.  */\n@@ -21972,7 +21972,7 @@ cp_parser_objc_interstitial_code (cp_parser* parser)\n   else if (token->type == CPP_OPEN_BRACE || token->type == CPP_CLOSE_BRACE)\n     {\n       cp_lexer_consume_token (parser->lexer);\n-      error (\"stray `%s' between Objective-C++ methods\",\n+      error (\"stray %qs between Objective-C++ methods\",\n \t     token->type == CPP_OPEN_BRACE ? \"{\" : \"}\");\n     }\n   /* Finally, try to parse a block-declaration, or a function-definition.  */"}, {"sha": "7a06038c67420a3c541fadd97cd42eed8b51d2f5", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -5234,7 +5234,7 @@ check_valid_ptrmem_cst_expr (tree type, tree expr,\n     {\n       error (\"%qE is not a valid template argument for type %qT\",\n \t     expr, type);\n-      error (\"it must be a pointer-to-member of the form `&X::Y'\");\n+      error (\"it must be a pointer-to-member of the form %<&X::Y%>\");\n     }\n   return false;\n }"}, {"sha": "16a192e4de966639cb1d6f60b832b9d39cc405a5", "filename": "gcc/cp/repo.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Frepo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fcp%2Frepo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frepo.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -224,7 +224,7 @@ reopen_repo_file_for_write (void)\n \n   if (repo_file == 0)\n     {\n-      error (\"can't create repository information file %qs\", repo_name);\n+      error (\"can%'t create repository information file %qs\", repo_name);\n       flag_use_repository = 0;\n     }\n "}, {"sha": "a81fe7f56eed81962432e4dedb21871cb373bc4f", "filename": "gcc/dbgcnt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fdbgcnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fdbgcnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -133,7 +133,7 @@ dbg_cnt_process_opt (const char *arg)\n      {\n        char *buffer = XALLOCAVEC (char, arg - start + 2);\n        sprintf (buffer, \"%*c\", (int)(1 + (arg - start)), '^');\n-       error (\"Can not find a valid counter:value pair:\");\n+       error (\"cannot find a valid counter:value pair:\");\n        error (\"-fdbg-cnt=%s\", start);\n        error (\"          %s\", buffer);\n      }"}, {"sha": "1f98bcf4cf5e8197993826e47dfbab9f8bf4f408", "filename": "gcc/expmed.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1800,11 +1800,11 @@ extract_fixed_bit_field (enum machine_mode tmode, rtx op0,\n \t\t{\n \t\t  informed_about_misalignment = true;\n \t\t  inform (input_location,\n-\t\t\t  \"When a volatile object spans multiple type-sized locations,\"\n+\t\t\t  \"when a volatile object spans multiple type-sized locations,\"\n \t\t\t  \" the compiler must choose between using a single mis-aligned access to\"\n \t\t\t  \" preserve the volatility, or using multiple aligned accesses to avoid\"\n-\t\t\t  \" runtime faults.  This code may fail at runtime if the hardware does\"\n-\t\t\t  \" not allow this access.\");\n+\t\t\t  \" runtime faults; this code may fail at runtime if the hardware does\"\n+\t\t\t  \" not allow this access\");\n \t\t}\n \t    }\n \t}"}, {"sha": "1478f9aa979ac3e280dbf4194684aacd99b381ce", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,3 +1,10 @@\n+2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* trans-array.c (gfc_trans_deferred_array): Use \"front-end\"\n+\tspelling in diagnostic.\n+\t* trans.c (gfc_allocate_array_with_status): Add missing space in\n+\tdiagnostic.\n+\n 2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n \n \t* cpp.c (asm_file_name): Don't declare here."}, {"sha": "3d5e5bae58f36efdcbe9ce094db0209ac8f4b2f1", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -6478,7 +6478,7 @@ gfc_trans_deferred_array (gfc_symbol * sym, gfc_wrapped_block * block)\n \n   /* Make sure the frontend gets these right.  */\n   if (!(sym->attr.pointer || sym->attr.allocatable || sym_has_alloc_comp))\n-    fatal_error (\"Possible frontend bug: Deferred array size without pointer, \"\n+    fatal_error (\"Possible front-end bug: Deferred array size without pointer, \"\n \t\t \"allocatable attribute or derived type without allocatable \"\n \t\t \"components.\");\n "}, {"sha": "b84029bfd5df38835561359d09fff4f128fc753a", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -780,7 +780,7 @@ gfc_allocate_array_with_status (stmtblock_t * block, tree mem, tree size,\n   else\n     error = gfc_trans_runtime_error (true, NULL,\n \t\t\t\t     \"Attempting to allocate already allocated\"\n-\t\t\t\t     \"variable\");\n+\t\t\t\t     \" variable\");\n \n   if (status != NULL_TREE && !integer_zerop (status))\n     {"}, {"sha": "2c3c8b3061d11180cd188b897766b6b1e125f2eb", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -481,15 +481,15 @@ write_pch_globals (const struct ggc_root_tab * const *tab,\n \t    {\n \t      if (fwrite (&ptr, sizeof (void *), 1, state->f)\n \t\t  != 1)\n-\t\tfatal_error (\"can't write PCH file: %m\");\n+\t\tfatal_error (\"can%'t write PCH file: %m\");\n \t    }\n \t  else\n \t    {\n \t      new_ptr = (struct ptr_data *)\n \t\thtab_find_with_hash (saving_htab, ptr, POINTER_HASH (ptr));\n \t      if (fwrite (&new_ptr->new_addr, sizeof (void *), 1, state->f)\n \t\t  != 1)\n-\t\tfatal_error (\"can't write PCH file: %m\");\n+\t\tfatal_error (\"can%'t write PCH file: %m\");\n \t    }\n \t}\n }\n@@ -563,7 +563,7 @@ gt_pch_save (FILE *f)\n   for (rt = gt_pch_scalar_rtab; *rt; rt++)\n     for (rti = *rt; rti->base != NULL; rti++)\n       if (fwrite (rti->base, rti->stride, 1, f) != 1)\n-\tfatal_error (\"can't write PCH file: %m\");\n+\tfatal_error (\"can%'t write PCH file: %m\");\n \n   /* Write out all the global pointers, after translation.  */\n   write_pch_globals (gt_ggc_rtab, &state);\n@@ -575,17 +575,17 @@ gt_pch_save (FILE *f)\n     long o;\n     o = ftell (state.f) + sizeof (mmi);\n     if (o == -1)\n-      fatal_error (\"can't get position in PCH file: %m\");\n+      fatal_error (\"can%'t get position in PCH file: %m\");\n     mmi.offset = mmap_offset_alignment - o % mmap_offset_alignment;\n     if (mmi.offset == mmap_offset_alignment)\n       mmi.offset = 0;\n     mmi.offset += o;\n   }\n   if (fwrite (&mmi, sizeof (mmi), 1, state.f) != 1)\n-    fatal_error (\"can't write PCH file: %m\");\n+    fatal_error (\"can%'t write PCH file: %m\");\n   if (mmi.offset != 0\n       && fseek (state.f, mmi.offset, SEEK_SET) != 0)\n-    fatal_error (\"can't write padding to PCH file: %m\");\n+    fatal_error (\"can%'t write padding to PCH file: %m\");\n \n   ggc_pch_prepare_write (state.d, state.f);\n \n@@ -640,25 +640,25 @@ gt_pch_restore (FILE *f)\n   for (rt = gt_pch_scalar_rtab; *rt; rt++)\n     for (rti = *rt; rti->base != NULL; rti++)\n       if (fread (rti->base, rti->stride, 1, f) != 1)\n-\tfatal_error (\"can't read PCH file: %m\");\n+\tfatal_error (\"can%'t read PCH file: %m\");\n \n   /* Read in all the global pointers, in 6 easy loops.  */\n   for (rt = gt_ggc_rtab; *rt; rt++)\n     for (rti = *rt; rti->base != NULL; rti++)\n       for (i = 0; i < rti->nelt; i++)\n \tif (fread ((char *)rti->base + rti->stride * i,\n \t\t   sizeof (void *), 1, f) != 1)\n-\t  fatal_error (\"can't read PCH file: %m\");\n+\t  fatal_error (\"can%'t read PCH file: %m\");\n \n   for (rt = gt_pch_cache_rtab; *rt; rt++)\n     for (rti = *rt; rti->base != NULL; rti++)\n       for (i = 0; i < rti->nelt; i++)\n \tif (fread ((char *)rti->base + rti->stride * i,\n \t\t   sizeof (void *), 1, f) != 1)\n-\t  fatal_error (\"can't read PCH file: %m\");\n+\t  fatal_error (\"can%'t read PCH file: %m\");\n \n   if (fread (&mmi, sizeof (mmi), 1, f) != 1)\n-    fatal_error (\"can't read PCH file: %m\");\n+    fatal_error (\"can%'t read PCH file: %m\");\n \n   result = host_hooks.gt_pch_use_address (mmi.preferred_base, mmi.size,\n \t\t\t\t\t  fileno (f), mmi.offset);\n@@ -668,10 +668,10 @@ gt_pch_restore (FILE *f)\n     {\n       if (fseek (f, mmi.offset, SEEK_SET) != 0\n \t  || fread (mmi.preferred_base, mmi.size, 1, f) != 1)\n-\tfatal_error (\"can't read PCH file: %m\");\n+\tfatal_error (\"can%'t read PCH file: %m\");\n     }\n   else if (fseek (f, mmi.offset + mmi.size, SEEK_SET) != 0)\n-    fatal_error (\"can't read PCH file: %m\");\n+    fatal_error (\"can%'t read PCH file: %m\");\n \n   ggc_pch_read (f, mmi.preferred_base);\n "}, {"sha": "c0d2f9adce4dcebce5b2b5b87a10cf83486927f7", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -2183,7 +2183,7 @@ ggc_pch_write_object (struct ggc_pch_data *d ATTRIBUTE_UNUSED,\n     }\n \n   if (fwrite (x, size, 1, f) != 1)\n-    fatal_error (\"can't write PCH file: %m\");\n+    fatal_error (\"can%'t write PCH file: %m\");\n \n   /* If SIZE is not the same as OBJECT_SIZE(order), then we need to pad the\n      object out to OBJECT_SIZE(order).  This happens for strings.  */\n@@ -2199,13 +2199,13 @@ ggc_pch_write_object (struct ggc_pch_data *d ATTRIBUTE_UNUSED,\n       if (padding <= sizeof(emptyBytes))\n         {\n           if (fwrite (emptyBytes, 1, padding, f) != padding)\n-            fatal_error (\"can't write PCH file\");\n+            fatal_error (\"can%'t write PCH file\");\n         }\n       else\n         {\n           /* Larger than our buffer?  Just default to fseek.  */\n           if (fseek (f, padding, SEEK_CUR) != 0)\n-            fatal_error (\"can't write PCH file\");\n+            fatal_error (\"can%'t write PCH file\");\n         }\n     }\n \n@@ -2214,14 +2214,14 @@ ggc_pch_write_object (struct ggc_pch_data *d ATTRIBUTE_UNUSED,\n       && fseek (f, ROUND_UP_VALUE (d->d.totals[order] * OBJECT_SIZE (order),\n \t\t\t\t   G.pagesize),\n \t\tSEEK_CUR) != 0)\n-    fatal_error (\"can't write PCH file: %m\");\n+    fatal_error (\"can%'t write PCH file: %m\");\n }\n \n void\n ggc_pch_finish (struct ggc_pch_data *d, FILE *f)\n {\n   if (fwrite (&d->d, sizeof (d->d), 1, f) != 1)\n-    fatal_error (\"can't write PCH file: %m\");\n+    fatal_error (\"can%'t write PCH file: %m\");\n   free (d);\n }\n \n@@ -2311,7 +2311,7 @@ ggc_pch_read (FILE *f, void *addr)\n   /* Allocate the appropriate page-table entries for the pages read from\n      the PCH file.  */\n   if (fread (&d, sizeof (d), 1, f) != 1)\n-    fatal_error (\"can't read PCH file: %m\");\n+    fatal_error (\"can%'t read PCH file: %m\");\n \n   for (i = 0; i < NUM_ORDERS; i++)\n     {"}, {"sha": "0fd5c2b234a1a7eafa83cc5d0f512bfff45225f0", "filename": "gcc/ggc-zone.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fggc-zone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fggc-zone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-zone.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -2427,25 +2427,25 @@ ggc_pch_write_object (struct ggc_pch_data *d,\n \t\t      size_t size, bool is_string ATTRIBUTE_UNUSED)\n {\n   if (fseek (f, (size_t) newx - d->orig_base + d->start_offset, SEEK_SET) != 0)\n-    fatal_error (\"can't seek PCH file: %m\");\n+    fatal_error (\"can%'t seek PCH file: %m\");\n \n   if (fwrite (x, size, 1, f) != 1)\n-    fatal_error (\"can't write PCH file: %m\");\n+    fatal_error (\"can%'t write PCH file: %m\");\n }\n \n void\n ggc_pch_finish (struct ggc_pch_data *d, FILE *f)\n {\n   /* Write out the allocation bitmap.  */\n   if (fseek (f, d->start_offset + d->d.total, SEEK_SET) != 0)\n-    fatal_error (\"can't seek PCH file: %m\");\n+    fatal_error (\"can%'t seek PCH file: %m\");\n \n   if (fwrite (d->alloc_bits, d->alloc_size, 1, f) != 1)\n-    fatal_error (\"can't write PCH file: %m\");\n+    fatal_error (\"can%'t write PCH file: %m\");\n \n   /* Done with the PCH, so write out our footer.  */\n   if (fwrite (&d->d, sizeof (d->d), 1, f) != 1)\n-    fatal_error (\"can't write PCH file: %m\");\n+    fatal_error (\"can%'t write PCH file: %m\");\n \n   free (d->alloc_bits);\n   free (d);\n@@ -2464,7 +2464,7 @@ ggc_pch_read (FILE *f, void *addr)\n   char *p;\n \n   if (fread (&d, sizeof (d), 1, f) != 1)\n-    fatal_error (\"can't read PCH file: %m\");\n+    fatal_error (\"can%'t read PCH file: %m\");\n \n   alloc_size = CEIL (d.total, BYTES_PER_ALLOC_BIT * 8);\n   alloc_size = ROUND_UP (alloc_size, MAX_ALIGNMENT);"}, {"sha": "64e6c3fe15d0a4f9b1c961b1d2f6bf1a9bb5b4af", "filename": "gcc/graph.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,5 +1,5 @@\n /* Output routines for graphical representation.\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2007, 2008\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2007, 2008, 2010\n    Free Software Foundation, Inc.\n    Contributed by Ulrich Drepper <drepper@cygnus.com>, 1998.\n \n@@ -408,7 +408,7 @@ clean_graph_dump_file (const char *base)\n   fp = fopen (buf, \"w\");\n \n   if (fp == NULL)\n-    fatal_error (\"can't open %s: %m\", buf);\n+    fatal_error (\"can%'t open %s: %m\", buf);\n \n   gcc_assert (graph_dump_format == vcg);\n   fputs (\"graph: {\\nport_sharing: no\\n\", fp);"}, {"sha": "0dbd61c8e6f90e9a5f4535aaa6dc4c09faf70f65", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -606,7 +606,7 @@ graphite_read_scop_file (FILE *file, scop_p scop)\n \n   if (strcmp (tmp, \"SCoP 1\"))\n     {\n-      error (\"The file is not in OpenScop format.\\n\");\n+      error (\"the file is not in OpenScop format\");\n       return false;\n     }\n \n@@ -617,7 +617,7 @@ graphite_read_scop_file (FILE *file, scop_p scop)\n \n   if (strcmp (language, \"Gimple\"))\n     {\n-      error (\"The language is not recognized\\n\");\n+      error (\"the language is not recognized\");\n       return false;\n     }\n \n@@ -628,8 +628,8 @@ graphite_read_scop_file (FILE *file, scop_p scop)\n \n   if ((size_t) params != scop->nb_params)\n     {\n-      error (\"Parameters number in the scop file is different from the\"\n-\t     \" internal scop parameter number.\");\n+      error (\"parameters number in the scop file is different from the\"\n+\t     \" internal scop parameter number\");\n       return false;\n     }\n \n@@ -641,8 +641,8 @@ graphite_read_scop_file (FILE *file, scop_p scop)\n \n   if (nb_statements != VEC_length (poly_bb_p, SCOP_BBS (scop)))\n     {\n-      error (\"Number of statements in the OpenScop file does not match\"\n-\t     \" the graphite internal statements number.\");\n+      error (\"number of statements in the OpenScop file does not match\"\n+\t     \" the graphite internal statements number\");\n       return false;\n     }\n "}, {"sha": "a635c1e421c9f0fa07e515821da8a591d7b8e982", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,3 +1,10 @@\n+2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* expr.c (expand_java_field_op): Use %' in diagnostic.\n+\t* jcf-parse.c (java_parse_file): Use %' in diagnostics.\n+\t* jvspec.c (lang_specific_driver): Use %' in diagnostic.\n+\t* lang.c (java_post_options): Use %' in diagnostics.\n+\n 2010-11-06  Joern Rennecke  <amylaar@spamcop.net>\n \n \tPR middle-end/46314"}, {"sha": "f6c6c1bbe0ac4d7d3a27b7f291bd3c25c92589e6", "filename": "gcc/java/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -2920,7 +2920,7 @@ expand_java_field_op (int is_static, int is_putting, int field_ref_index)\n       if (FIELD_FINAL (field_decl))\n \t{\n \t  if (DECL_CONTEXT (field_decl) != current_class)\n-            error (\"assignment to final field %q+D not in field's class\",\n+            error (\"assignment to final field %q+D not in field%'s class\",\n                    field_decl);\n \t  /* We used to check for assignments to final fields not\n \t     occurring in the class initializer or in a constructor"}, {"sha": "ce1de5ae79def8a5eabfa7c003eab23f06400e0c", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1750,7 +1750,7 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n       int avail = 2000;\n       finput = fopen (main_input_filename, \"r\");\n       if (finput == NULL)\n-\tfatal_error (\"can't open %s: %m\", input_filename);\n+\tfatal_error (\"can%'t open %s: %m\", input_filename);\n       list = XNEWVEC (char, avail);\n       next = list;\n       for (;;)\n@@ -1885,11 +1885,11 @@ java_parse_file (int set_yydebug ATTRIBUTE_UNUSED)\n \n       /* Close previous descriptor, if any */\n       if (finput && fclose (finput))\n-\tfatal_error (\"can't close input file %s: %m\", main_input_filename);\n+\tfatal_error (\"can%'t close input file %s: %m\", main_input_filename);\n       \n       finput = fopen (filename, \"rb\");\n       if (finput == NULL)\n-\tfatal_error (\"can't open %s: %m\", filename);\n+\tfatal_error (\"can%'t open %s: %m\", filename);\n \n #ifdef IO_BUFFER_SIZE\n       setvbuf (finput, xmalloc (IO_BUFFER_SIZE),"}, {"sha": "4240db1230d528671b1b2d2fb35226efeef04f76", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -393,7 +393,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n     }\n \n   if (saw_D && ! main_class_name)\n-    fatal_error (\"can't specify %<-D%> without %<--main%>\");\n+    fatal_error (\"can%'t specify %<-D%> without %<--main%>\");\n \n   if (main_class_name && ! verify_class_name (main_class_name))\n     fatal_error (\"%qs is not a valid class name\", main_class_name);"}, {"sha": "8065efa5c7aff9d19fac127f54d39a6487338d72", "filename": "gcc/java/lang.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -599,7 +599,7 @@ java_post_options (const char **pfilename)\n       filename = \"stdin\";\n \n       if (dependency_tracking)\n-\terror (\"can't do dependency tracking with input from stdin\");\n+\terror (\"can%'t do dependency tracking with input from stdin\");\n     }\n   else\n     {\n@@ -615,7 +615,7 @@ java_post_options (const char **pfilename)\n \t    {\n \t      dot = strrchr (filename, '.');\n \t      if (dot == NULL)\n-\t\terror (\"couldn't determine target name for dependency tracking\");\n+\t\terror (\"couldn%'t determine target name for dependency tracking\");\n \t      else\n \t\t{\n \t\t  char *buf = XNEWVEC (char, dot - filename +"}, {"sha": "c4a3f668b9b9b458fab66aef86d65d33e2408179", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1444,7 +1444,7 @@ input_profile_summary (struct lto_input_block *ib)\n \t       || profile_info->sum_all != lto_input_sleb128 (ib)\n \t       || profile_info->run_max != lto_input_sleb128 (ib)\n \t       || profile_info->sum_max != lto_input_sleb128 (ib))\n-\tsorry (\"Combining units with different profiles is not supported.\");\n+\tsorry (\"combining units with different profiles is not supported\");\n       /* We allow some units to have profile and other to not have one.  This will\n          just make unprofiled units to be size optimized that is sane.  */\n     }\n@@ -1473,7 +1473,7 @@ input_cgraph (void)\n       ib = lto_create_simple_input_block (file_data, LTO_section_cgraph,\n \t\t\t\t\t  &data, &len);\n       if (!ib) \n-\tfatal_error (\"Cannot find LTO cgraph in %s\\n\", file_data->file_name);\n+\tfatal_error (\"cannot find LTO cgraph in %s\", file_data->file_name);\n       input_profile_summary (ib);\n       file_data->cgraph_node_encoder = lto_cgraph_encoder_new ();\n       nodes = input_cgraph_1 (file_data, ib);\n@@ -1483,15 +1483,15 @@ input_cgraph (void)\n       ib = lto_create_simple_input_block (file_data, LTO_section_varpool,\n \t\t\t\t\t  &data, &len);\n       if (!ib)\n-\tfatal_error (\"Cannot find LTO varpool in %s\\n\", file_data->file_name);\n+\tfatal_error (\"cannot find LTO varpool in %s\", file_data->file_name);\n       varpool = input_varpool_1 (file_data, ib);\n       lto_destroy_simple_input_block (file_data, LTO_section_varpool,\n \t\t\t\t      ib, data, len);\n \n       ib = lto_create_simple_input_block (file_data, LTO_section_refs,\n \t\t\t\t\t  &data, &len);\n       if (!ib)\n-\tfatal_error(\"Cannot find LTO section refs in %s\\n\", file_data->file_name);\n+\tfatal_error(\"cannot find LTO section refs in %s\", file_data->file_name);\n       input_refs (ib, nodes, varpool);\n       lto_destroy_simple_input_block (file_data, LTO_section_refs,\n \t\t\t\t      ib, data, len);"}, {"sha": "0de4a977b1918a7ea80edf64aea58f02ab7da380", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,3 +1,9 @@\n+2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lto.c (lto_resolution_read): Start diagnostics with lowercase\n+\tletters and remove trailing '.'.\n+\t(lto_file_finalize): Start diagnostic with a lowercase letter.\n+\n 2010-11-02  Ian Lance Taylor  <iant@google.com>\n \n \t* lto-object.c: New file."}, {"sha": "d3b9228b6a83387813e338d16f0328f166eee6c1", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -392,7 +392,7 @@ lto_resolution_read (splay_tree file_ids, FILE *resolution, lto_file *file)\n \n       t = fscanf (resolution, \"%u %x %26s %*[^\\n]\\n\", &index, &id, r_str);\n       if (t != 3)\n-        internal_error (\"Invalid line in the resolution file.\");\n+        internal_error (\"invalid line in the resolution file\");\n       if (index > max_index)\n \tmax_index = index;\n \n@@ -405,13 +405,13 @@ lto_resolution_read (splay_tree file_ids, FILE *resolution, lto_file *file)\n \t    }\n \t}\n       if (j == lto_resolution_str_len)\n-\tinternal_error (\"Invalid resolution in the resolution file.\");\n+\tinternal_error (\"invalid resolution in the resolution file\");\n \n       if (!(nd && nd->key == id))\n \t{\n \t  nd = splay_tree_lookup (file_ids, id);\n \t  if (nd == NULL)\n-\t    internal_error (\"Resolution sub id %x not in object file\", id);\n+\t    internal_error (\"resolution sub id %x not in object file\", id);\n \t}\n \n       file_data = (struct lto_file_decl_data *)nd->value;\n@@ -496,7 +496,7 @@ lto_file_finalize (struct lto_file_decl_data *file_data, lto_file *file)\n   data = lto_get_section_data (file_data, LTO_section_decls, NULL, &len);\n   if (data == NULL)\n     {\n-      internal_error (\"Cannot read LTO decls from %s\", file_data->file_name);\n+      internal_error (\"cannot read LTO decls from %s\", file_data->file_name);\n       return;\n     }\n   lto_read_decls (file_data, data, file_data->resolutions);"}, {"sha": "d60e2fb022d9e2ed05374c0e1706cd728e80c64b", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1,3 +1,8 @@\n+2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* objc-act.c (objc_init): Use %' in diagnostic.\n+\t(objc_set_method_opt): Remove trailing '.' from diagnostic.\n+\n 2010-11-10  Joseph Myers  <joseph@codesourcery.com>\n \n \t* objc-act.c (dump_base_name): Don't declare here."}, {"sha": "6f499c368be9a8bcdf6746d83a7a4f340da533fe", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -559,7 +559,7 @@ objc_init (void)\n       register char * const dumpname = concat (dump_base_name, \".decl\", NULL);\n       gen_declaration_file = fopen (dumpname, \"w\");\n       if (gen_declaration_file == 0)\n-\tfatal_error (\"can't open %s: %m\", dumpname);\n+\tfatal_error (\"can%'t open %s: %m\", dumpname);\n       free (dumpname);\n     }\n \n@@ -821,7 +821,7 @@ objc_set_method_opt (bool optional)\n   if (!objc_interface_context \n       || TREE_CODE (objc_interface_context) != PROTOCOL_INTERFACE_TYPE)\n     {\n-      error (\"@optional/@required is allowed in @protocol context only.\");\n+      error (\"@optional/@required is allowed in @protocol context only\");\n       objc_method_optional_flag = false;\n     }\n }"}, {"sha": "a7557ed2a6aef1147405ca583e5dddfa28df3fbe", "filename": "gcc/opts.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1092,12 +1092,12 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set)\n   if (!opts->x_flag_unit_at_a_time)\n     {\n       if (opts->x_flag_section_anchors && opts_set->x_flag_section_anchors)\n-\terror (\"Section anchors must be disabled when unit-at-a-time \"\n-\t       \"is disabled.\");\n+\terror (\"section anchors must be disabled when unit-at-a-time \"\n+\t       \"is disabled\");\n       opts->x_flag_section_anchors = 0;\n       if (opts->x_flag_toplevel_reorder == 1)\n-\terror (\"Toplevel reorder must be disabled when unit-at-a-time \"\n-\t       \"is disabled.\");\n+\terror (\"toplevel reorder must be disabled when unit-at-a-time \"\n+\t       \"is disabled\");\n       opts->x_flag_toplevel_reorder = 0;\n     }\n \n@@ -1235,7 +1235,7 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set)\n     {\n       if (opts->x_flag_lto_partition_balanced\n \t  && opts->x_flag_lto_partition_1to1)\n-\terror (\"Only one -flto-partitoin value can be specified\");\n+\terror (\"only one -flto-partition value can be specified\");\n       if (!opts->x_flag_whopr && !opts->x_flag_wpa && !opts->x_flag_ltrans)\n \terror (\"-flto-partition has no effect without -fwhopr\");\n     }\n@@ -1924,15 +1924,15 @@ common_handle_option (struct gcc_options *opts,\n #ifdef ENABLE_PLUGIN\n       add_new_plugin (arg);\n #else\n-      error (\"Plugin support is disabled.  Configure with --enable-plugin.\");\n+      error (\"plugin support is disabled; configure with --enable-plugin\");\n #endif\n       break;\n \n     case OPT_fplugin_arg_:\n #ifdef ENABLE_PLUGIN\n       parse_plugin_arg_opt (arg);\n #else\n-      error (\"Plugin support is disabled.  Configure with --enable-plugin.\");\n+      error (\"plugin support is disabled; configure with --enable-plugin\");\n #endif\n       break;\n "}, {"sha": "da9bb15dcf15092b7a0b178357241680e66074b0", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -598,7 +598,7 @@ position_pass (struct register_pass_info *new_pass_info,\n                 pass = new_pass;\n                 break;\n               default:\n-                error (\"Invalid pass positioning operation\");\n+                error (\"invalid pass positioning operation\");\n                 return false;\n             }\n "}, {"sha": "6fd20585b3e8755e36f00ae4a00e06ccc9b17504", "filename": "gcc/plugin.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fplugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fplugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fplugin.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -180,7 +180,7 @@ add_new_plugin (const char* plugin_name)\n     {\n       plugin = (struct plugin_name_args *) *slot;\n       if (strcmp (plugin->full_name, plugin_name))\n-        error (\"Plugin %s was specified with different paths:\\n%s\\n%s\",\n+        error (\"plugin %s was specified with different paths:\\n%s\\n%s\",\n                plugin->base_name, plugin->full_name, plugin_name);\n       return;\n     }\n@@ -226,7 +226,7 @@ parse_plugin_arg_opt (const char *arg)\n         {\n           if (key_parsed)\n             {\n-              error (\"Malformed option -fplugin-arg-%s (multiple '=' signs)\",\n+              error (\"malformed option -fplugin-arg-%s (multiple '=' signs)\",\n \t\t     arg);\n               return;\n             }\n@@ -242,7 +242,7 @@ parse_plugin_arg_opt (const char *arg)\n \n   if (!key_start)\n     {\n-      error (\"Malformed option -fplugin-arg-%s (missing -<key>[=<value>])\",\n+      error (\"malformed option -fplugin-arg-%s (missing -<key>[=<value>])\",\n              arg);\n       return;\n     }\n@@ -304,7 +304,7 @@ parse_plugin_arg_opt (const char *arg)\n       plugin->argv[plugin->argc - 1].value = value;\n     }\n   else\n-    error (\"Plugin %s should be specified before -fplugin-arg-%s \"\n+    error (\"plugin %s should be specified before -fplugin-arg-%s \"\n            \"in the command line\", name, arg);\n \n   /* We don't need the plugin's name anymore. Just release it.  */\n@@ -424,7 +424,7 @@ register_callback (const char *plugin_name,\n       default:\n \tif (event < PLUGIN_EVENT_FIRST_DYNAMIC || event >= event_last)\n \t  {\n-\t    error (\"Unknown callback event registered by plugin %s\",\n+\t    error (\"unknown callback event registered by plugin %s\",\n \t\t   plugin_name);\n \t    return;\n \t  }\n@@ -452,7 +452,7 @@ register_callback (const char *plugin_name,\n           struct callback_info *new_callback;\n           if (!callback)\n             {\n-              error (\"Plugin %s registered a null callback function \"\n+              error (\"plugin %s registered a null callback function \"\n \t\t     \"for event %s\", plugin_name, plugin_event_name[event]);\n               return;\n             }\n@@ -572,7 +572,7 @@ try_init_one_plugin (struct plugin_name_args *plugin)\n   dl_handle = dlopen (plugin->full_name, RTLD_NOW | RTLD_GLOBAL);\n   if (!dl_handle)\n     {\n-      error (\"Cannot load plugin %s\\n%s\", plugin->full_name, dlerror ());\n+      error (\"cannot load plugin %s\\n%s\", plugin->full_name, dlerror ());\n       return false;\n     }\n \n@@ -590,15 +590,15 @@ try_init_one_plugin (struct plugin_name_args *plugin)\n \n   if ((err = dlerror ()) != NULL)\n     {\n-      error (\"Cannot find %s in plugin %s\\n%s\", str_plugin_init_func_name,\n+      error (\"cannot find %s in plugin %s\\n%s\", str_plugin_init_func_name,\n              plugin->full_name, err);\n       return false;\n     }\n \n   /* Call the plugin-provided initialization routine with the arguments.  */\n   if ((*plugin_init) (plugin, &gcc_version))\n     {\n-      error (\"Fail to initialize plugin %s\", plugin->full_name);\n+      error (\"fail to initialize plugin %s\", plugin->full_name);\n       return false;\n     }\n "}, {"sha": "da354a7e32536c94ffbae1a506054d294b560507", "filename": "gcc/reload1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -2089,7 +2089,7 @@ static void\n spill_failure (rtx insn, enum reg_class rclass)\n {\n   if (asm_noperands (PATTERN (insn)) >= 0)\n-    error_for_asm (insn, \"can't find a register in class %qs while \"\n+    error_for_asm (insn, \"can%'t find a register in class %qs while \"\n \t\t   \"reloading %<asm%>\",\n \t\t   reg_class_names[rclass]);\n   else\n@@ -8615,7 +8615,7 @@ gen_reload (rtx out, rtx in, int opnum, enum reload_type type)\n \t  return insn;\n \t}\n \n-      fatal_insn (\"Failure trying to reload:\", set);\n+      fatal_insn (\"failure trying to reload:\", set);\n     }\n   /* If IN is a simple operand, use gen_move_insn.  */\n   else if (OBJECT_P (in) || GET_CODE (in) == SUBREG)"}, {"sha": "9d2b73e13f55ba96514c4a8701d6a0243904d0c9", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1251,7 +1251,7 @@ place_field (record_layout_info rli, tree field)\n \t      if (warn_packed_bitfield_compat == 1)\n \t\tinform\n \t\t  (input_location,\n-\t\t   \"Offset of packed bit-field %qD has changed in GCC 4.4\",\n+\t\t   \"offset of packed bit-field %qD has changed in GCC 4.4\",\n \t\t   field);\n \t    }\n \t  else"}, {"sha": "b125c432e087cc13c0a550d2c1a804b197ead8b4", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -1563,7 +1563,7 @@ open_auxiliary_file (const char *ext)\n   filename = concat (aux_base_name, \".\", ext, NULL);\n   file = fopen (filename, \"w\");\n   if (!file)\n-    fatal_error (\"can't open %s for writing: %m\", filename);\n+    fatal_error (\"can%'t open %s for writing: %m\", filename);\n   free (filename);\n   return file;\n }"}, {"sha": "0745a681347a09327091dd99b1c1eb919b678ef3", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -2611,13 +2611,13 @@ verify_expr (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n       if (!POINTER_TYPE_P (TREE_TYPE (x))\n \t  || !is_gimple_mem_ref_addr (x))\n \t{\n-\t  error (\"Invalid first operand of MEM_REF.\");\n+\t  error (\"invalid first operand of MEM_REF\");\n \t  return x;\n \t}\n       if (TREE_CODE (TREE_OPERAND (t, 1)) != INTEGER_CST\n \t  || !POINTER_TYPE_P (TREE_TYPE (TREE_OPERAND (t, 1))))\n \t{\n-\t  error (\"Invalid offset operand of MEM_REF.\");\n+\t  error (\"invalid offset operand of MEM_REF\");\n \t  return TREE_OPERAND (t, 1);\n \t}\n       if (TREE_CODE (x) == ADDR_EXPR\n@@ -2636,7 +2636,7 @@ verify_expr (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n       break;\n \n     case MODIFY_EXPR:\n-      error (\"MODIFY_EXPR not expected while having tuples.\");\n+      error (\"MODIFY_EXPR not expected while having tuples\");\n       return *tp;\n \n     case ADDR_EXPR:\n@@ -2783,7 +2783,7 @@ verify_expr (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n \t\t\t\t     TREE_TYPE (TREE_OPERAND (t, 1))))\n \t{\n \t  error (\"invalid operand to pointer plus, second operand is not an \"\n-\t\t \"integer with type of sizetype.\");\n+\t\t \"integer with type of sizetype\");\n \t  return t;\n \t}\n       /* FALLTHROUGH */\n@@ -2951,14 +2951,14 @@ verify_types_in_gimple_reference (tree expr, bool require_lvalue)\n \t      && (TREE_CODE (op) == SSA_NAME\n \t\t  || is_gimple_min_invariant (op)))\n \t    {\n-\t      error (\"Conversion of an SSA_NAME on the left hand side.\");\n+\t      error (\"conversion of an SSA_NAME on the left hand side\");\n \t      debug_generic_stmt (expr);\n \t      return true;\n \t    }\n \t  else if (TREE_CODE (op) == SSA_NAME\n \t\t   && TYPE_SIZE (TREE_TYPE (expr)) != TYPE_SIZE (TREE_TYPE (op)))\n \t    {\n-\t      error (\"Conversion of register to a different size.\");\n+\t      error (\"conversion of register to a different size\");\n \t      debug_generic_stmt (expr);\n \t      return true;\n \t    }\n@@ -2973,14 +2973,14 @@ verify_types_in_gimple_reference (tree expr, bool require_lvalue)\n     {\n       if (!is_gimple_mem_ref_addr (TREE_OPERAND (expr, 0)))\n \t{\n-\t  error (\"Invalid address operand in MEM_REF.\");\n+\t  error (\"invalid address operand in MEM_REF\");\n \t  debug_generic_stmt (expr);\n \t  return true;\n \t}\n       if (TREE_CODE (TREE_OPERAND (expr, 1)) != INTEGER_CST\n \t  || !POINTER_TYPE_P (TREE_TYPE (TREE_OPERAND (expr, 1))))\n \t{\n-\t  error (\"Invalid offset operand in MEM_REF.\");\n+\t  error (\"invalid offset operand in MEM_REF\");\n \t  debug_generic_stmt (expr);\n \t  return true;\n \t}\n@@ -2990,14 +2990,14 @@ verify_types_in_gimple_reference (tree expr, bool require_lvalue)\n       if (!TMR_BASE (expr)\n \t  || !is_gimple_mem_ref_addr (TMR_BASE (expr)))\n \t{\n-\t  error (\"Invalid address operand in in TARGET_MEM_REF.\");\n+\t  error (\"invalid address operand in in TARGET_MEM_REF\");\n \t  return true;\n \t}\n       if (!TMR_OFFSET (expr)\n \t  || TREE_CODE (TMR_OFFSET (expr)) != INTEGER_CST\n \t  || !POINTER_TYPE_P (TREE_TYPE (TMR_OFFSET (expr))))\n \t{\n-\t  error (\"Invalid offset operand in TARGET_MEM_REF.\");\n+\t  error (\"invalid offset operand in TARGET_MEM_REF\");\n \t  debug_generic_stmt (expr);\n \t  return true;\n \t}\n@@ -3116,7 +3116,7 @@ verify_gimple_call (gimple stmt)\n \n       if (!DECL_STATIC_CHAIN (fn))\n \t{\n-\t  error (\"static chain with function that doesn't use one\");\n+\t  error (\"static chain with function that doesn%'t use one\");\n \t  return true;\n \t}\n     }\n@@ -3927,7 +3927,7 @@ verify_gimple_phi (gimple stmt)\n \n   if (TREE_CODE (gimple_phi_result (stmt)) != SSA_NAME)\n     {\n-      error (\"Invalid PHI result\");\n+      error (\"invalid PHI result\");\n       return true;\n     }\n \n@@ -3939,13 +3939,13 @@ verify_gimple_phi (gimple stmt)\n \t  || (!is_gimple_reg (gimple_phi_result (stmt))\n \t      && !is_gimple_addressable (arg)))\n \t{\n-\t  error (\"Invalid PHI argument\");\n+\t  error (\"invalid PHI argument\");\n \t  debug_generic_stmt (arg);\n \t  return true;\n \t}\n       if (!useless_type_conversion_p (type, TREE_TYPE (arg)))\n \t{\n-\t  error (\"Incompatible types in PHI argument %u\", i);\n+\t  error (\"incompatible types in PHI argument %u\", i);\n \t  debug_generic_stmt (type);\n \t  debug_generic_stmt (TREE_TYPE (arg));\n \t  return true;\n@@ -4250,7 +4250,7 @@ verify_eh_throw_stmt_node (void **slot, void *data)\n \n   if (!pointer_set_contains (visited, node->stmt))\n     {\n-      error (\"Dead STMT in EH table\");\n+      error (\"dead STMT in EH table\");\n       debug_gimple_stmt (node->stmt);\n       eh_error_found = true;\n     }"}, {"sha": "c08ae61fd9d521899dc51aa18ecc19bb8b245978", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -641,7 +641,7 @@ verify_def (basic_block bb, basic_block *definition_block, tree ssa_name,\n   if (TREE_CODE (SSA_NAME_VAR (ssa_name)) == RESULT_DECL\n       && DECL_BY_REFERENCE (SSA_NAME_VAR (ssa_name)))\n     {\n-      error (\"RESULT_DECL should be read only when DECL_BY_REFERENCE is set.\");\n+      error (\"RESULT_DECL should be read only when DECL_BY_REFERENCE is set\");\n       goto err;\n     }\n \n@@ -1026,8 +1026,8 @@ verify_ssa (bool check_modified_stmt)\n \t      op = gimple_op (stmt, i);\n \t      if (op && TREE_CODE (op) == SSA_NAME && --count < 0)\n \t\t{\n-\t\t  error (\"nr of operands and imm-links don't agree\");\n-\t\t  error (\"in statement\");\n+\t\t  error (\"number of operands and imm-links don%'t agree\"\n+\t\t\t \" in statement\");\n \t\t  print_gimple_stmt (stderr, stmt, 0, TDF_VOPS|TDF_MEMSYMS);\n \t\t  goto err;\n \t\t}"}, {"sha": "07102504232df8c2d814e6716903e48787f378f2", "filename": "gcc/value-prof.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a07487de259ee4dc9c0d83264a6bd882967514/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=d8a07487de259ee4dc9c0d83264a6bd882967514", "patch": "@@ -375,7 +375,7 @@ visit_hist (void **slot, void *data)\n   histogram_value hist = *(histogram_value *) slot;\n   if (!pointer_set_contains (visited, hist))\n     {\n-      error (\"Dead histogram\");\n+      error (\"dead histogram\");\n       dump_histogram_value (stderr, hist);\n       debug_gimple_stmt (hist->hvalue.stmt);\n       error_found = true;\n@@ -466,7 +466,7 @@ check_counter (gimple stmt, const char * name,\n               : DECL_SOURCE_LOCATION (current_function_decl);\n       if (flag_profile_correction)\n         {\n-\t  inform (locus, \"Correcting inconsistent value profile: \"\n+\t  inform (locus, \"correcting inconsistent value profile: \"\n \t\t  \"%s profiler overall count (%d) does not match BB count \"\n                   \"(%d)\", name, (int)*all, (int)bb_count);\n \t  *all = bb_count;\n@@ -476,7 +476,7 @@ check_counter (gimple stmt, const char * name,\n \t}\n       else\n \t{\n-\t  error_at (locus, \"Corrupted value profile: %s \"\n+\t  error_at (locus, \"corrupted value profile: %s \"\n \t\t    \"profiler overall count (%d) does not match BB count (%d)\",\n \t\t    name, (int)*all, (int)bb_count);\n \t  return true;"}]}