{"sha": "5783ad0ea7403304e4ea9c06818373a3bc7e62b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc4M2FkMGVhNzQwMzMwNGU0ZWE5YzA2ODE4MzczYTNiYzdlNjJiMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-11-11T20:02:19Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-11-11T20:02:19Z"}, "message": "re PR target/58853 (ICE in expand_set_or_movmem_prologue_epilogue_by_misaligned_moves)\n\n\tPR target/58853\n\t* config/i386/x86-tune.def\n\t(X86_TUNE_MISALIGNED_MOVE_STRING_PRO_EPILOGUES): Rename from\n\tTARGET_MISALIGNED_MOVE_STRING_PROLOGUES.\n\t* config/i386/i386.h\n\t(TARGET_MISALIGNED_MOVE_STRING_PRO_EPILOGUES): Rename from\n\tTARGET_MISALIGNED_MOVE_STRING_PROLOGUES_EPILOGUES.  Update for renamed\n\tX86_TUNE_MISALIGNED_MOVE_STRING_PRO_EPILOGUES.\n\t* config/i386/i386.c (ix86_expand_set_or_movmem): Use\n\tTARGET_MISALIGNED_MOVE_STRING_PRO_EPILOGUES to calculate\n\tmisaligned_prologue_used.  Check that\n\tdesired_aling <= epilogue_size_needed.\n\ntestsuite/ChangeLog:\n\n\tPR target/58853\n\t* gcc.target/i386/pr58853.c: New test.\n\n\nCo-Authored-By: H.J. Lu <hongjiu.lu@intel.com>\n\nFrom-SVN: r204685", "tree": {"sha": "751c66d387964afc5ded5eb70600325d74f8b33e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/751c66d387964afc5ded5eb70600325d74f8b33e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5783ad0ea7403304e4ea9c06818373a3bc7e62b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5783ad0ea7403304e4ea9c06818373a3bc7e62b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5783ad0ea7403304e4ea9c06818373a3bc7e62b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb47f18904bc0ec0556a217beb0ae15a4a2d9b11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb47f18904bc0ec0556a217beb0ae15a4a2d9b11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb47f18904bc0ec0556a217beb0ae15a4a2d9b11"}], "stats": {"total": 64, "additions": 48, "deletions": 16}, "files": [{"sha": "a140a62851afeab852943302fc2d1f74a9fc4800", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5783ad0ea7403304e4ea9c06818373a3bc7e62b1", "patch": "@@ -1,3 +1,19 @@\n+2013-11-11  Uros Bizjak  <ubizjak@gmail.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/58853\n+\t* config/i386/x86-tune.def\n+\t(X86_TUNE_MISALIGNED_MOVE_STRING_PRO_EPILOGUES): Rename from\n+\tTARGET_MISALIGNED_MOVE_STRING_PROLOGUES.\n+\t* config/i386/i386.h\n+\t(TARGET_MISALIGNED_MOVE_STRING_PRO_EPILOGUES): Rename from\n+\tTARGET_MISALIGNED_MOVE_STRING_PROLOGUES_EPILOGUES.  Update for renamed\n+\tX86_TUNE_MISALIGNED_MOVE_STRING_PRO_EPILOGUES.\n+\t* config/i386/i386.c (ix86_expand_set_or_movmem): Use\n+\tTARGET_MISALIGNED_MOVE_STRING_PRO_EPILOGUES to calculate\n+\tmisaligned_prologue_used.  Check that\n+\tdesired_aling <= epilogue_size_needed.\n+\n 2013-11-11  Cong Hou  <congh@google.com>\n \n \tPR tree-optimization/59050"}, {"sha": "8b8cdfae681b1942701557971596ea00e8b5081b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5783ad0ea7403304e4ea9c06818373a3bc7e62b1", "patch": "@@ -23761,13 +23761,15 @@ ix86_expand_set_or_movmem (rtx dst, rtx src, rtx count_exp, rtx val_exp,\n     }\n   gcc_assert (desired_align >= 1 && align >= 1);\n \n-  /* Misaligned move sequences handles both prologues and epilogues at once.\n-     Default code generation results in smaller code for large alignments and\n-     also avoids redundant job when sizes are known precisely.  */\n-  misaligned_prologue_used = (TARGET_MISALIGNED_MOVE_STRING_PROLOGUES\n-\t\t\t      && MAX (desired_align, epilogue_size_needed) <= 32\n-\t\t\t      && ((desired_align > align && !align_bytes)\n-\t\t\t\t  || (!count && epilogue_size_needed > 1)));\n+  /* Misaligned move sequences handle both prologue and epilogue at once.\n+     Default code generation results in a smaller code for large alignments\n+     and also avoids redundant job when sizes are known precisely.  */\n+  misaligned_prologue_used\n+    = (TARGET_MISALIGNED_MOVE_STRING_PRO_EPILOGUES\n+       && MAX (desired_align, epilogue_size_needed) <= 32\n+       && desired_align <= epilogue_size_needed\n+       && ((desired_align > align && !align_bytes)\n+\t   || (!count && epilogue_size_needed > 1)));\n \n   /* Do the cheap promotion to allow better CSE across the\n      main loop and epilogue (ie one load of the big constant in the"}, {"sha": "123e3faed4bbc96902c663e456d528a249c060c3", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=5783ad0ea7403304e4ea9c06818373a3bc7e62b1", "patch": "@@ -353,8 +353,8 @@ extern unsigned char ix86_tune_features[X86_TUNE_LAST];\n #define TARGET_PROMOTE_QImode\tix86_tune_features[X86_TUNE_PROMOTE_QIMODE]\n #define TARGET_FAST_PREFIX\tix86_tune_features[X86_TUNE_FAST_PREFIX]\n #define TARGET_SINGLE_STRINGOP\tix86_tune_features[X86_TUNE_SINGLE_STRINGOP]\n-#define TARGET_MISALIGNED_MOVE_STRING_PROLOGUES_EPILOGUES \\\n-\tix86_tune_features[TARGET_MISALIGNED_MOVE_STRING_PROLOGUES]\n+#define TARGET_MISALIGNED_MOVE_STRING_PRO_EPILOGUES \\\n+\tix86_tune_features[X86_TUNE_MISALIGNED_MOVE_STRING_PRO_EPILOGUES]\n #define TARGET_QIMODE_MATH\tix86_tune_features[X86_TUNE_QIMODE_MATH]\n #define TARGET_HIMODE_MATH\tix86_tune_features[X86_TUNE_HIMODE_MATH]\n #define TARGET_PROMOTE_QI_REGS\tix86_tune_features[X86_TUNE_PROMOTE_QI_REGS]"}, {"sha": "23879f9ec18400cc1f73e6e46379e3a1cc0b978b", "filename": "gcc/config/i386/x86-tune.def", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune.def?ref=5783ad0ea7403304e4ea9c06818373a3bc7e62b1", "patch": "@@ -257,13 +257,13 @@ DEF_TUNE (X86_TUNE_AVOID_MEM_OPND_FOR_CMOVE, \"avoid_mem_opnd_for_cmove\",\n    as MOVS and STOS (without a REP prefix) to move/set sequences of bytes.  */\n DEF_TUNE (X86_TUNE_SINGLE_STRINGOP, \"single_stringop\", m_386 | m_P4_NOCONA)\n \n-/* TARGET_MISALIGNED_MOVE_STRING_PROLOGUES: Enable generation of compace\n-   prologues and epilogues by issuing a misaligned moves.  This require\n-   target to handle misaligned moves and partial memory stalls resonably\n-   well.  \n-   FIXME: This actualy may be a win on more targets than listed here.  */\n-DEF_TUNE (TARGET_MISALIGNED_MOVE_STRING_PROLOGUES,\n-\t  \"misaligned_move_string_prologues\",\n+/* X86_TUNE_MISALIGNED_MOVE_STRING_PRO_EPILOGUES: Enable generation of\n+   compact prologues and epilogues by issuing a misaligned moves.  This\n+   requires target to handle misaligned moves and partial memory stalls\n+   reasonably well.\n+   FIXME: This may actualy be a win on more targets than listed here.  */\n+DEF_TUNE (X86_TUNE_MISALIGNED_MOVE_STRING_PRO_EPILOGUES,\n+\t  \"misaligned_move_string_pro_epilogues\",\n \t  m_386 | m_486 | m_CORE_ALL | m_AMD_MULTIPLE | m_GENERIC)\n \n /* X86_TUNE_USE_SAHF: Controls use of SAHF.  */"}, {"sha": "74a2d56622ecc49fa43ac860807694cd4ae05b33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5783ad0ea7403304e4ea9c06818373a3bc7e62b1", "patch": "@@ -1,3 +1,8 @@\n+2013-11-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/58853\n+\t* gcc.target/i386/pr58853.c: New test.\n+\n 2013-11-11  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* gcc.dg/tree-ssa/forwprop-28.c: Adjust for ARC"}, {"sha": "046da8bee5f7a77e65aa0f31a19f9237cfc6b159", "filename": "gcc/testsuite/gcc.target/i386/pr58853.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr58853.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5783ad0ea7403304e4ea9c06818373a3bc7e62b1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr58853.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr58853.c?ref=5783ad0ea7403304e4ea9c06818373a3bc7e62b1", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-minline-all-stringops\" } */\n+/* { dg-additional-options \"-mtune=pentiumpro\" { target { ia32 } } } */\n+\n+void\n+my_memcpy (char *dest, const char *src, int n)\n+{\n+  __builtin_memcpy (dest, src, n);\n+}"}]}