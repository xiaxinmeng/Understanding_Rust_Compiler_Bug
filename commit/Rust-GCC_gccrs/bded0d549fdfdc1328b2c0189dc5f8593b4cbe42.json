{"sha": "bded0d549fdfdc1328b2c0189dc5f8593b4cbe42", "node_id": "C_kwDOANBUbNoAKGJkZWQwZDU0OWZkZmRjMTMyOGIyYzAxODlkYzVmODU5M2I0Y2JlNDI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-09T14:17:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-09T14:56:23Z"}, "message": "Restore INDIRECT_REF asm operand heuristic with MEM_REF\n\nAs noticed we are looking for INDIRECT_REF with allows_mem to avoid\na copy since then we're sure the operand is in memory (assuming\n*& is folded).  But INDIRECT_REFs are no longer a thing, the following\nreplaces the check with a check for a MEM_REF with a non-ADDR_EXPR\noperand.  This should fix the regression part without fully\nexploring all possibilities around tcc_reference operands.\n\nI've placed an assert that we do not see an INDIRECT_REF here.\nWhile we gimplify asm operands we never do any checking on its\nIL afterwards.\n\n2022-03-09  Richard Biener  <rguenther@suse.de>\n\n\t* cfgexpand.cc (expand_gimple_asm): Special-case MEM_REF\n\twith non-decl operand, avoiding a copy.", "tree": {"sha": "124faa91b541e6ea8795667831566934c93d31b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/124faa91b541e6ea8795667831566934c93d31b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bded0d549fdfdc1328b2c0189dc5f8593b4cbe42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bded0d549fdfdc1328b2c0189dc5f8593b4cbe42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bded0d549fdfdc1328b2c0189dc5f8593b4cbe42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bded0d549fdfdc1328b2c0189dc5f8593b4cbe42/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caa6c33c5d5223c50657b08e73177e8d54ceee51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caa6c33c5d5223c50657b08e73177e8d54ceee51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caa6c33c5d5223c50657b08e73177e8d54ceee51"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "d3cc77d2ca98f620b29623fc5696410bad9bc184", "filename": "gcc/cfgexpand.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bded0d549fdfdc1328b2c0189dc5f8593b4cbe42/gcc%2Fcfgexpand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bded0d549fdfdc1328b2c0189dc5f8593b4cbe42/gcc%2Fcfgexpand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.cc?ref=bded0d549fdfdc1328b2c0189dc5f8593b4cbe42", "patch": "@@ -3290,7 +3290,10 @@ expand_asm_stmt (gasm *stmt)\n \n       generating_concat_p = 0;\n \n-      if ((TREE_CODE (val) == INDIRECT_REF && allows_mem)\n+      gcc_assert (TREE_CODE (val) != INDIRECT_REF);\n+      if (((TREE_CODE (val) == MEM_REF\n+\t    && TREE_CODE (TREE_OPERAND (val, 0)) != ADDR_EXPR)\n+\t   && allows_mem)\n \t  || (DECL_P (val)\n \t      && (allows_mem || REG_P (DECL_RTL (val)))\n \t      && ! (REG_P (DECL_RTL (val))"}]}