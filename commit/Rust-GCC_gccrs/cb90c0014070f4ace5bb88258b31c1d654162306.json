{"sha": "cb90c0014070f4ace5bb88258b31c1d654162306", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I5MGMwMDE0MDcwZjRhY2U1YmI4ODI1OGIzMWMxZDY1NDE2MjMwNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-03-11T11:37:46Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-03-11T11:37:46Z"}, "message": "re PR rtl-optimization/89588 (ICE in unroll_loop_constant_iterations, at loop-unroll.c:498)\n\n\tPR rtl-optimization/89588\n\t* loop-unroll.c (decide_unroll_constant_iterations): Make guard for\n\texplicit unrolling factor more robust.\n\nFrom-SVN: r269579", "tree": {"sha": "67e4547921b424a18aea9fc7f615bce6bcb2d254", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67e4547921b424a18aea9fc7f615bce6bcb2d254"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb90c0014070f4ace5bb88258b31c1d654162306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb90c0014070f4ace5bb88258b31c1d654162306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb90c0014070f4ace5bb88258b31c1d654162306", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb90c0014070f4ace5bb88258b31c1d654162306/comments", "author": null, "committer": null, "parents": [{"sha": "03001a351528a1fc35bfe0c70deb08c7e18d314b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03001a351528a1fc35bfe0c70deb08c7e18d314b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03001a351528a1fc35bfe0c70deb08c7e18d314b"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "989f883053dcf579f0a1917c79ccca8501226577", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb90c0014070f4ace5bb88258b31c1d654162306/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb90c0014070f4ace5bb88258b31c1d654162306/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb90c0014070f4ace5bb88258b31c1d654162306", "patch": "@@ -1,3 +1,9 @@\n+2019-03-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR rtl-optimization/89588\n+\t* loop-unroll.c (decide_unroll_constant_iterations): Make guard for\n+\texplicit unrolling factor more robust.\n+\n 2019-03-11  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/89649"}, {"sha": "0164762bee96e986b3828f5be0813f45f4406c8d", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb90c0014070f4ace5bb88258b31c1d654162306/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb90c0014070f4ace5bb88258b31c1d654162306/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=cb90c0014070f4ace5bb88258b31c1d654162306", "patch": "@@ -400,7 +400,7 @@ decide_unroll_constant_iterations (struct loop *loop, int flags)\n     {\n       /* However we cannot unroll completely at the RTL level a loop with\n \t constant number of iterations; it should have been peeled instead.  */\n-      if ((unsigned) loop->unroll - 1 > desc->niter - 2)\n+      if ((unsigned) loop->unroll > desc->niter - 1)\n \t{\n \t  if (dump_file)\n \t    fprintf (dump_file, \";; Loop should have been peeled\\n\");"}, {"sha": "e8d393a8103ae415f3944f761222900ae42c63a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb90c0014070f4ace5bb88258b31c1d654162306/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb90c0014070f4ace5bb88258b31c1d654162306/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb90c0014070f4ace5bb88258b31c1d654162306", "patch": "@@ -1,3 +1,7 @@\n+2019-03-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-c++-common/unroll-6.c: New test.\n+\n 2019-03-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/87571"}, {"sha": "fd74f19bed5b8f09bd6840ffc7c99bd37d61e9c9", "filename": "gcc/testsuite/c-c++-common/unroll-6.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb90c0014070f4ace5bb88258b31c1d654162306/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funroll-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb90c0014070f4ace5bb88258b31c1d654162306/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funroll-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funroll-6.c?ref=cb90c0014070f4ace5bb88258b31c1d654162306", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fno-tree-loop-optimize\" } */\n+\n+void test (void)\n+{\n+  #pragma GCC unroll 2\n+  for (int nv = 0; nv <= 2; nv += 2)\n+    {}\n+}"}]}