{"sha": "312618c7d082170511d341cf08918e543490361b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEyNjE4YzdkMDgyMTcwNTExZDM0MWNmMDg5MThlNTQzNDkwMzYxYg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-11-08T23:17:51Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-11-08T23:17:51Z"}, "message": "global.c (EXECUTE_IF_CONFLICT): Don't define.\n\n\t* global.c (EXECUTE_IF_CONFLICT): Don't define.\n\t(prune_preferences): Use EXECUTE_IF_SET_IN_ALLOCNO_SET instead.\n\t(find_reg): Likewise.\n\nFrom-SVN: r30455", "tree": {"sha": "0d8b558bc375ac03fa28bfe8332be0712143438d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d8b558bc375ac03fa28bfe8332be0712143438d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/312618c7d082170511d341cf08918e543490361b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312618c7d082170511d341cf08918e543490361b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/312618c7d082170511d341cf08918e543490361b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312618c7d082170511d341cf08918e543490361b/comments", "author": null, "committer": null, "parents": [{"sha": "04299876827cd93058d21b3a03a48f68decd0831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04299876827cd93058d21b3a03a48f68decd0831", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04299876827cd93058d21b3a03a48f68decd0831"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "bef4d47c25e7026550dcedaf8c6cffc34def9644", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312618c7d082170511d341cf08918e543490361b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312618c7d082170511d341cf08918e543490361b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=312618c7d082170511d341cf08918e543490361b", "patch": "@@ -1,3 +1,8 @@\n+Mon Nov  8 22:20:13 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* global.c (EXECUTE_IF_CONFLICT): Don't define.\n+\t(prune_preferences): Use EXECUTE_IF_SET_IN_ALLOCNO_SET instead.\n+\t(find_reg): Likewise.\n \n Mon Nov  8 13:16:46 1999  Jason Eckhardt  <jle@cygnus.com>\n "}, {"sha": "de3b57161e38459f75aed80d59e1054e03a03859", "filename": "gcc/global.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312618c7d082170511d341cf08918e543490361b/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312618c7d082170511d341cf08918e543490361b/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=312618c7d082170511d341cf08918e543490361b", "patch": "@@ -154,12 +154,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n \n+/* This doesn't work for non-GNU C due to the way CODE is macro expanded.  */\n+#if 0\n /* For any allocno that conflicts with IN_ALLOCNO, set OUT_ALLOCNO to\n    the conflicting allocno, and execute CODE.  This macro assumes that\n    mirror_conflicts has been run.  */\n #define EXECUTE_IF_CONFLICT(IN_ALLOCNO, OUT_ALLOCNO, CODE)\\\n   EXECUTE_IF_SET_IN_ALLOCNO_SET (conflicts + (IN_ALLOCNO) * allocno_row_words,\\\n \t\t\t\t OUT_ALLOCNO, (CODE))\n+#endif\n \n /* Set of hard regs currently live (during scan of all insns).  */\n \n@@ -931,7 +934,8 @@ prune_preferences ()\n       CLEAR_HARD_REG_SET (temp);\n       CLEAR_HARD_REG_SET (temp2);\n \n-      EXECUTE_IF_CONFLICT (allocno, allocno2,\n+      EXECUTE_IF_SET_IN_ALLOCNO_SET (conflicts + allocno * allocno_row_words,\n+\t\t\t\t     allocno2,\n \t{\n \t  if (allocno_to_order[allocno2] > i)\n \t    {\n@@ -1261,7 +1265,7 @@ find_reg (allocno, losers, alt_regs_p, accept_call_clobbered, retrying)\n       /* For each other pseudo-reg conflicting with this one,\n \t mark it as conflicting with the hard regs this one occupies.  */\n       lim = allocno;\n-      EXECUTE_IF_CONFLICT (lim, j,\n+      EXECUTE_IF_SET_IN_ALLOCNO_SET (conflicts + lim * allocno_row_words, j,\n \t{\n \t  IOR_HARD_REG_SET (hard_reg_conflicts[j], this_reg);\n \t});"}]}