{"sha": "e011c0100a83030e0cfd230658debbb6c97660a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAxMWMwMTAwYTgzMDMwZTBjZmQyMzA2NThkZWJiYjZjOTc2NjBhMQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-10-21T18:22:41Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-10-21T18:22:41Z"}, "message": "PR c++/92106 - ICE with structured bindings and -Wreturn-local-addr.\n\n\t* typeck.c (maybe_warn_about_returning_address_of_local): Avoid\n\trecursing on null initializer and return false instead.\n\n\t* g++.dg/cpp1z/decomp50.C: New test.\n\nFrom-SVN: r277264", "tree": {"sha": "5b68eeb520900fd22acd1fdab5c5631d394a1157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b68eeb520900fd22acd1fdab5c5631d394a1157"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e011c0100a83030e0cfd230658debbb6c97660a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e011c0100a83030e0cfd230658debbb6c97660a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e011c0100a83030e0cfd230658debbb6c97660a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e011c0100a83030e0cfd230658debbb6c97660a1/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3b3331a4baf8a8595e9383501b617f1638eb2f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3b3331a4baf8a8595e9383501b617f1638eb2f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3b3331a4baf8a8595e9383501b617f1638eb2f0"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "29c6bbd3230b763df32e9cfffabf3442c157279e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e011c0100a83030e0cfd230658debbb6c97660a1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e011c0100a83030e0cfd230658debbb6c97660a1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e011c0100a83030e0cfd230658debbb6c97660a1", "patch": "@@ -1,3 +1,9 @@\n+2019-10-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/92106 - ICE with structured bindings and -Wreturn-local-addr.\n+\t* typeck.c (maybe_warn_about_returning_address_of_local): Avoid\n+\trecursing on null initializer and return false instead.\n+\n 2019-10-17  JeanHeyd Meneide  <phdofthehouse@gmail.com>\n \n \tImplement p1301 [[nodiscard(\"should have a reason\")]] + p1771 DR"}, {"sha": "627dfc2a4fc9068ee4c3ce07d1c6907f32a7b45f", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e011c0100a83030e0cfd230658debbb6c97660a1/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e011c0100a83030e0cfd230658debbb6c97660a1/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=e011c0100a83030e0cfd230658debbb6c97660a1", "patch": "@@ -9355,8 +9355,10 @@ maybe_warn_about_returning_address_of_local (tree retval)\n \t  tree base = DECL_DECOMP_BASE (whats_returned);\n \t  if (TYPE_REF_P (TREE_TYPE (base)))\n \t    {\n-\t      tree init = DECL_INITIAL (base);\n-\t      return maybe_warn_about_returning_address_of_local (init);\n+\t      if (tree init = DECL_INITIAL (base))\n+\t\treturn maybe_warn_about_returning_address_of_local (init);\n+\t      else\n+\t\treturn false;\n \t    }\n \t}\n       bool w = false;"}, {"sha": "7365a393a7dd2569d8c934ab78976a246d08ddde", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e011c0100a83030e0cfd230658debbb6c97660a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e011c0100a83030e0cfd230658debbb6c97660a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e011c0100a83030e0cfd230658debbb6c97660a1", "patch": "@@ -1,3 +1,8 @@\n+2019-10-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/92106 - ICE with structured bindings and -Wreturn-local-addr.\n+\t* g++.dg/cpp1z/decomp50.C: New test.\n+\n 2019-10-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92162"}, {"sha": "5400a82694811aeae1faab672e0e5c54ef189e61", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp50.C", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e011c0100a83030e0cfd230658debbb6c97660a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e011c0100a83030e0cfd230658debbb6c97660a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp50.C?ref=e011c0100a83030e0cfd230658debbb6c97660a1", "patch": "@@ -0,0 +1,51 @@\n+// PR c++/92106 - ICE with structured bindings and -Wreturn-local-addr. \n+// { dg-do compile { target c++17 } }\n+\n+template <typename> struct B;\n+template <typename _Tp> struct B<_Tp *> { typedef _Tp& reference; };\n+struct C {\n+  template <typename _Up> using rebind = _Up *;\n+};\n+template <typename _Iterator, typename> class D {\n+public:\n+  typename B<_Iterator>::reference operator*();\n+  void operator++();\n+};\n+\n+template <typename _Iterator, typename _Container>\n+bool operator!=(D<_Iterator, _Container>, D<_Iterator, _Container>);\n+template <typename _Tp> class F {\n+public:\n+  typedef _Tp value_type;\n+};\n+\n+template <typename _Alloc> struct G {\n+  template <typename _Tp> struct H { using type = C::rebind<_Tp>; };\n+  using const_pointer = typename H<typename _Alloc::value_type>::type;\n+};\n+template <typename _Tp, typename _Alloc = F<_Tp>> class I {\n+  typedef D<typename G<_Alloc>::const_pointer, int> const_iterator;\n+\n+public:\n+  const_iterator begin();\n+  const_iterator end();\n+};\n+\n+struct A {\n+  struct J {\n+    int name;\n+    int value;\n+  };\n+  I<J> members;\n+  template <typename Key> const int *find(Key) {\n+    for (const auto &[name, value] : members)\n+      // See <https://gcc.gnu.org/ml/gcc-patches/2019-10/msg01107.html>\n+      // for why we don't warn here.\n+      return &value; // { dg-bogus \"address of local variable\" }\n+    return nullptr;\n+  }\n+};\n+int main() {\n+  A a;\n+  a.find(\"\");\n+}"}]}