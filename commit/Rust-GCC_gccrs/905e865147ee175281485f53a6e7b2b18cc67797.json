{"sha": "905e865147ee175281485f53a6e7b2b18cc67797", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA1ZTg2NTE0N2VlMTc1MjgxNDg1ZjUzYTZlN2IyYjE4Y2M2Nzc5Nw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-05-05T23:12:37Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-05-05T23:12:37Z"}, "message": "* doc/extend.texi (Variable Attributes): Re-sort table and tidy.\n\nFrom-SVN: r66510", "tree": {"sha": "5e6092eaa2fdd29f6ed9908fe39b73dfb85a98df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e6092eaa2fdd29f6ed9908fe39b73dfb85a98df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/905e865147ee175281485f53a6e7b2b18cc67797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/905e865147ee175281485f53a6e7b2b18cc67797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/905e865147ee175281485f53a6e7b2b18cc67797", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/905e865147ee175281485f53a6e7b2b18cc67797/comments", "author": null, "committer": null, "parents": [{"sha": "e8115463c68a2b5ae19c0897bd1c8b9e8aa0a41c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8115463c68a2b5ae19c0897bd1c8b9e8aa0a41c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8115463c68a2b5ae19c0897bd1c8b9e8aa0a41c"}], "stats": {"total": 123, "additions": 66, "deletions": 57}, "files": [{"sha": "e4a15d36bc17f252dface8f46109f431ed199dbf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/905e865147ee175281485f53a6e7b2b18cc67797/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/905e865147ee175281485f53a6e7b2b18cc67797/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=905e865147ee175281485f53a6e7b2b18cc67797", "patch": "@@ -1,3 +1,7 @@\n+2003-05-05  Richard Henderson  <rth@redhat.com>\n+\n+\t* doc/extend.texi (Variable Attributes): Re-sort table and tidy.\n+\n 2003-05-05  David O'Brien  <obrien@FreeBSD.org>\n \n \t* config/rs6000/sysv4.h (CPP_OS_FREEBSD_SPEC): Add __ELF__ to mirror"}, {"sha": "6006f04f5741b091ed13841b85e385b04514b58d", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 62, "deletions": 57, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/905e865147ee175281485f53a6e7b2b18cc67797/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/905e865147ee175281485f53a6e7b2b18cc67797/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=905e865147ee175281485f53a6e7b2b18cc67797", "patch": "@@ -2367,15 +2367,6 @@ since it is known that the calling function loaded the correct value.\n \n Not all ELF targets support this attribute.\n \n-@item tls_model (\"@var{tls_model}\")\n-@cindex @code{tls_model} attribute\n-The @code{tls_model} attribute sets thread-local storage model\n-(@pxref{Thread-Local}) of a particular @code{__thread} variable,\n-overriding @code{-ftls-model=} command line switch on a per-variable\n-basis.\n-The @var{tls_model} argument should be one of @code{global-dynamic},\n-@code{local-dynamic}, @code{initial-exec} or @code{local-exec}.\n-\n @item regparm (@var{number})\n @cindex functions that are passed arguments in registers on the 386\n On the Intel 386, the @code{regparm} attribute causes the compiler to\n@@ -2958,15 +2949,13 @@ It is an error to ask for the alignment of an incomplete type.\n \n The keyword @code{__attribute__} allows you to specify special\n attributes of variables or structure fields.  This keyword is followed\n-by an attribute specification inside double parentheses.  Ten\n-attributes are currently defined for variables: @code{aligned},\n-@code{mode}, @code{nocommon}, @code{packed}, @code{section},\n-@code{transparent_union}, @code{unused}, @code{deprecated},\n-@code{vector_size}, and @code{weak}.  Some other attributes are defined\n-for variables on particular target systems.  Other attributes are\n-available for functions (@pxref{Function Attributes}) and for types\n-(@pxref{Type Attributes}).  Other front ends might define more\n-attributes (@pxref{C++ Extensions,,Extensions to the C++ Language}).\n+by an attribute specification inside double parentheses.  Some\n+attributes are currently defined generically for variables.\n+Other attributes are defined for variables on particular target\n+systems.  Other attributes are available for functions\n+(@pxref{Function Attributes}) and for types (@pxref{Type Attributes}).\n+Other front ends might define more attributes\n+(@pxref{C++ Extensions,,Extensions to the C++ Language}).\n \n You may also specify attributes with @samp{__} preceding and following\n each keyword.  This allows you to use them in header files without\n@@ -3034,6 +3023,40 @@ up to a maximum of 8 byte alignment, then specifying @code{aligned(16)}\n in an @code{__attribute__} will still only provide you with 8 byte\n alignment.  See your linker documentation for further information.\n \n+@item common\n+@itemx nocommon\n+@cindex @code{common} attribute\n+@cindex @code{nocommon} attribute\n+@opindex fcommon\n+@opindex fno-common\n+The @code{common} attribute requests GCC to place a variable in\n+``common'' storage.  The @code{nocommon} attribute requests the\n+opposite -- to allocate space for it directly.\n+\n+These attributes override the default chosen by the \n+@option{-fno-common} and @option{-fcommon} flags respectively.\n+\n+@item deprecated\n+@cindex @code{deprecated} attribute\n+The @code{deprecated} attribute results in a warning if the variable\n+is used anywhere in the source file.  This is useful when identifying\n+variables that are expected to be removed in a future version of a\n+program.  The warning also includes the location of the declaration\n+of the deprecated variable, to enable users to easily find further\n+information about why the variable is deprecated, or what they should\n+do instead.  Note that the warnings only occurs for uses:\n+\n+@smallexample\n+extern int old_var __attribute__ ((deprecated));\n+extern int old_var;\n+int new_fn () @{ return old_var; @}\n+@end smallexample\n+\n+results in a warning on line 3 but not line 2.\n+\n+The @code{deprecated} attribute can also be used for functions and\n+types (@pxref{Function Attributes}, @pxref{Type Attributes}.)\n+\n @item mode (@var{mode})\n @cindex @code{mode} attribute\n This attribute specifies the data type for the declaration---whichever\n@@ -3045,18 +3068,6 @@ indicate the mode corresponding to a one-byte integer, @samp{word} or\n @samp{__word__} for the mode of a one-word integer, and @samp{pointer}\n or @samp{__pointer__} for the mode used to represent pointers.\n \n-@item nocommon\n-@cindex @code{nocommon} attribute\n-@opindex fno-common\n-This attribute specifies requests GCC not to place a variable\n-``common'' but instead to allocate space for it directly.  If you\n-specify the @option{-fno-common} flag, GCC will do this for all\n-variables.\n-\n-Specifying the @code{nocommon} attribute for a variable provides an\n-initialization of zeros.  A variable may only be initialized in one\n-source file.\n-\n @item packed\n @cindex @code{packed} attribute\n The @code{packed} attribute specifies that a variable or structure field\n@@ -3150,6 +3161,17 @@ linkers work.  See @code{section} attribute for more information.\n \n The @code{shared} attribute is only available on Windows NT@.\n \n+@item tls_model (\"@var{tls_model}\")\n+@cindex @code{tls_model} attribute\n+The @code{tls_model} attribute sets thread-local storage model\n+(@pxref{Thread-Local}) of a particular @code{__thread} variable,\n+overriding @code{-ftls-model=} command line switch on a per-variable\n+basis.\n+The @var{tls_model} argument should be one of @code{global-dynamic},\n+@code{local-dynamic}, @code{initial-exec} or @code{local-exec}.\n+\n+Not all targets support this attribute.\n+\n @item transparent_union\n This attribute, attached to a function parameter which is a union, means\n that the corresponding argument may have the type of any union member,\n@@ -3163,26 +3185,6 @@ This attribute, attached to a variable, means that the variable is meant\n to be possibly unused.  GCC will not produce a warning for this\n variable.\n \n-@item deprecated\n-The @code{deprecated} attribute results in a warning if the variable\n-is used anywhere in the source file.  This is useful when identifying\n-variables that are expected to be removed in a future version of a\n-program.  The warning also includes the location of the declaration\n-of the deprecated variable, to enable users to easily find further\n-information about why the variable is deprecated, or what they should\n-do instead.  Note that the warnings only occurs for uses:\n-\n-@smallexample\n-extern int old_var __attribute__ ((deprecated));\n-extern int old_var;\n-int new_fn () @{ return old_var; @}\n-@end smallexample\n-\n-results in a warning on line 3 but not line 2.\n-\n-The @code{deprecated} attribute can also be used for functions and\n-types (@pxref{Function Attributes}, @pxref{Type Attributes}.)\n-\n @item vector_size (@var{bytes})\n This attribute specifies the vector size for the variable, measured in\n bytes.  For example, the declaration:\n@@ -3214,7 +3216,13 @@ the @code{int}.\n \n @item weak\n The @code{weak} attribute is described in @xref{Function Attributes}.\n+@end table\n+\n+@subsection M32R/D Variable Attributes\n+\n+One attribute is currently defined for the M32R/D.\n \n+@table @code\n @item model (@var{model-name})\n @cindex variable addressability on the M32R/D\n Use this attribute on the M32R/D to set the addressability of an object.\n@@ -3227,16 +3235,18 @@ addresses can be loaded with the @code{ld24} instruction).\n Medium and large model objects may live anywhere in the 32-bit address space\n (the compiler will generate @code{seth/add3} instructions to load their\n addresses).\n+@end table\n \n @subsection i386 Variable Attributes\n \n Two attributes are currently defined for i386 configurations:\n @code{ms_struct} and @code{gcc_struct}\n \n+@table @code\n @item ms_struct\n @itemx gcc_struct\n-@cindex @code{ms_struct}\n-@cindex @code{gcc_struct}\n+@cindex @code{ms_struct} attribute\n+@cindex @code{gcc_struct} attribute\n \n If @code{packed} is used on a structure, or if bit-fields are used\n it may be that the Microsoft ABI packs them differently\n@@ -3247,13 +3257,8 @@ either format.\n \n Currently @option{-m[no-]ms-bitfields} is provided for the Windows X86\n compilers to match the native Microsoft compiler.\n-\n @end table\n \n-To specify multiple attributes, separate them by commas within the\n-double parentheses: for example, @samp{__attribute__ ((aligned (16),\n-packed))}.\n-\n @node Type Attributes\n @section Specifying Attributes of Types\n @cindex attribute of types"}]}