{"sha": "af41386e7c41d4c76b75ea87acd4b3c0479143fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY0MTM4NmU3YzQxZDRjNzZiNzVlYTg3YWNkNGIzYzA0NzkxNDNmZQ==", "commit": {"author": {"name": "Jie Zhang", "email": "jie@codesourcery.com", "date": "2010-10-15T06:53:42Z"}, "committer": {"name": "Jie Zhang", "email": "jiez@gcc.gnu.org", "date": "2010-10-15T06:53:42Z"}, "message": "lto.exp (lto-link-and-maybe-run): Use the default linker script when relocatable linking.\n\n\t* lib/lto.exp (lto-link-and-maybe-run): Use the default linker\n\tscript when relocatable linking.\n\nFrom-SVN: r165494", "tree": {"sha": "47842fecf27aa964d7b79c1dc3d7ba644e371182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47842fecf27aa964d7b79c1dc3d7ba644e371182"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af41386e7c41d4c76b75ea87acd4b3c0479143fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af41386e7c41d4c76b75ea87acd4b3c0479143fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af41386e7c41d4c76b75ea87acd4b3c0479143fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af41386e7c41d4c76b75ea87acd4b3c0479143fe/comments", "author": null, "committer": null, "parents": [{"sha": "56f01f0b417d3291b5915d449dc327be23911638", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f01f0b417d3291b5915d449dc327be23911638", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f01f0b417d3291b5915d449dc327be23911638"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "2f2afe0c161371b3ec45266ef2158bf0b845cde1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af41386e7c41d4c76b75ea87acd4b3c0479143fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af41386e7c41d4c76b75ea87acd4b3c0479143fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af41386e7c41d4c76b75ea87acd4b3c0479143fe", "patch": "@@ -1,3 +1,8 @@\n+2010-10-15  Jie Zhang  <jie@codesourcery.com>\n+\n+\t* lib/lto.exp (lto-link-and-maybe-run): Use the default linker\n+\tscript when relocatable linking.\n+\n 2010-10-14  Yao Qi  <yao@codesourcery.com>\n \n \tPR target/45447"}, {"sha": "57c7a2ebd25a8f0afa00fac87f1cbf87e32ec425", "filename": "gcc/testsuite/lib/lto.exp", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af41386e7c41d4c76b75ea87acd4b3c0479143fe/gcc%2Ftestsuite%2Flib%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af41386e7c41d4c76b75ea87acd4b3c0479143fe/gcc%2Ftestsuite%2Flib%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Flto.exp?ref=af41386e7c41d4c76b75ea87acd4b3c0479143fe", "patch": "@@ -163,6 +163,7 @@ proc lto-link-and-maybe-run { testname objlist dest optall optfile optstr } {\n     global testcase\n     global tool\n     global compile_type\n+    global board_info\n \n     # Check that all of the objects were built successfully.\n     foreach obj [split $objlist] {\n@@ -177,10 +178,29 @@ proc lto-link-and-maybe-run { testname objlist dest optall optfile optstr } {\n     set options \"\"\n     lappend options \"additional_flags=$optall $optfile\"\n \n+    set target_board [target_info name]\n+    set relocatable 0\n+\n+    # Some LTO tests do relocatable linking. Some target boards set\n+    # a linker script which can't be used for relocatable linking.\n+    # Use the default linker script instead.\n+    if { [lsearch -exact [split \"$optall $optfile\"] \"-r\"] >= 0 } {\n+\tset relocatable 1\n+    }\n+\n+    if { $relocatable } {\n+\tset saved_ldscript [board_info $target_board ldscript]\n+\tset board_info($target_board,ldscript) \"\"\n+    }\n+\n     # Link the objects into an executable.\n     set comp_output [${tool}_target_compile \"$objlist\" $dest executable \\\n \t\t     \"$options\"]\n \n+    if { $relocatable } {\n+\tset board_info($target_board,ldscript) $saved_ldscript\n+    }\n+\n     # Prune unimportant visibility warnings before checking output.\n     set comp_output [lto_prune_warns $comp_output]\n "}]}