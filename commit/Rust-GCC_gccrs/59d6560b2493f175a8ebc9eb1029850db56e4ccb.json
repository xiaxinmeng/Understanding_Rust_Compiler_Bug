{"sha": "59d6560b2493f175a8ebc9eb1029850db56e4ccb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlkNjU2MGIyNDkzZjE3NWE4ZWJjOWViMTAyOTg1MGRiNTZlNGNjYg==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-11-04T03:20:44Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-11-04T03:20:44Z"}, "message": "rs6000.c: Include params.h\n\n        * config/rs6000/rs6000.c: Include params.h\n        (optimization_options): Set max-grow-copy-bb-insns default to 16.\n        (bdesc_2arg): Delete vpkuhss and vpkuwss.\n        * config/rs6000/altivec.md (UNSPEC_VPKUHSS): Delete.\n        (UNSPEC_VPKUWSS): Delete.\n        (altivec_vpkuhss): Delete.\n        (altivec_vpkuwss): Delete.\n        * config/rs6000/rs6000.md (plus_eqsi): Remove optimize_size from\n        final condition.\n        (neg_eq0<mode>): Remove final condition.\n        (neg_eq<mode>): Remove condition and split-condition.\n\nFrom-SVN: r106479", "tree": {"sha": "2edc0ef278cc6fadaba0ebb030aa54224c790ed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2edc0ef278cc6fadaba0ebb030aa54224c790ed3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59d6560b2493f175a8ebc9eb1029850db56e4ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d6560b2493f175a8ebc9eb1029850db56e4ccb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59d6560b2493f175a8ebc9eb1029850db56e4ccb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d6560b2493f175a8ebc9eb1029850db56e4ccb/comments", "author": null, "committer": null, "parents": [{"sha": "78cd2f1dc07869f1ec5ab5e4adc84f4b48ee2b60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78cd2f1dc07869f1ec5ab5e4adc84f4b48ee2b60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78cd2f1dc07869f1ec5ab5e4adc84f4b48ee2b60"}], "stats": {"total": 36, "additions": 8, "deletions": 28}, "files": [{"sha": "97e5f4c26baca5e63807ed93136cf0d498774abc", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d6560b2493f175a8ebc9eb1029850db56e4ccb/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d6560b2493f175a8ebc9eb1029850db56e4ccb/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=59d6560b2493f175a8ebc9eb1029850db56e4ccb", "patch": "@@ -57,9 +57,7 @@\n    (UNSPEC_VPKUHUM       93)\n    (UNSPEC_VPKUWUM       94)\n    (UNSPEC_VPKPX         95)\n-   (UNSPEC_VPKUHSS       96)\n    (UNSPEC_VPKSHSS       97)\n-   (UNSPEC_VPKUWSS       98)\n    (UNSPEC_VPKSWSS       99)\n    (UNSPEC_VPKUHUS      100)\n    (UNSPEC_VPKSHUS      101)\n@@ -1105,16 +1103,6 @@\n   \"vpkpx %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vpkuhss\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-        (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n-                       (match_operand:V8HI 2 \"register_operand\" \"v\")]\n-\t\t      UNSPEC_VPKUHSS))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n-  \"TARGET_ALTIVEC\"\n-  \"vpkuhss %0,%1,%2\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n (define_insn \"altivec_vpkshss\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n@@ -1125,16 +1113,6 @@\n   \"vpkshss %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vpkuwss\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-        (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SI 2 \"register_operand\" \"v\")]\n-\t\t     UNSPEC_VPKUWSS))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n-  \"TARGET_ALTIVEC\"\n-  \"vpkuwss %0,%1,%2\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n (define_insn \"altivec_vpkswss\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")"}, {"sha": "ab00425f81715c712d5ff7d0537cd61177388875", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d6560b2493f175a8ebc9eb1029850db56e4ccb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d6560b2493f175a8ebc9eb1029850db56e4ccb/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=59d6560b2493f175a8ebc9eb1029850db56e4ccb", "patch": "@@ -54,6 +54,7 @@\n #include \"sched-int.h\"\n #include \"tree-gimple.h\"\n #include \"intl.h\"\n+#include \"params.h\"\n #if TARGET_XCOFF\n #include \"xcoffout.h\"  /* get declarations of xcoff_*_section_name */\n #endif\n@@ -1573,6 +1574,9 @@ optimization_options (int level ATTRIBUTE_UNUSED, int size ATTRIBUTE_UNUSED)\n     /* The Darwin libraries never set errno, so we might as well\n        avoid calling them when that's the only reason we would.  */\n     flag_errno_math = 0;\n+\n+  /* Double growth factor to counter reduced min jump length.  */\n+  set_param_value (\"max-grow-copy-bb-insns\", 16);\n }\n \n /* Implement TARGET_HANDLE_OPTION.  */\n@@ -5971,9 +5975,7 @@ static struct builtin_description bdesc_2arg[] =\n   { MASK_ALTIVEC, CODE_FOR_altivec_vpkuhum, \"__builtin_altivec_vpkuhum\", ALTIVEC_BUILTIN_VPKUHUM },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vpkuwum, \"__builtin_altivec_vpkuwum\", ALTIVEC_BUILTIN_VPKUWUM },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vpkpx, \"__builtin_altivec_vpkpx\", ALTIVEC_BUILTIN_VPKPX },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vpkuhss, \"__builtin_altivec_vpkuhss\", ALTIVEC_BUILTIN_VPKUHSS },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vpkshss, \"__builtin_altivec_vpkshss\", ALTIVEC_BUILTIN_VPKSHSS },\n-  { MASK_ALTIVEC, CODE_FOR_altivec_vpkuwss, \"__builtin_altivec_vpkuwss\", ALTIVEC_BUILTIN_VPKUWSS },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vpkswss, \"__builtin_altivec_vpkswss\", ALTIVEC_BUILTIN_VPKSWSS },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vpkuhus, \"__builtin_altivec_vpkuhus\", ALTIVEC_BUILTIN_VPKUHUS },\n   { MASK_ALTIVEC, CODE_FOR_altivec_vpkshus, \"__builtin_altivec_vpkshus\", ALTIVEC_BUILTIN_VPKSHUS },"}, {"sha": "1776b9a86e07c7c80c0f7185df2658850b4ea7a6", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d6560b2493f175a8ebc9eb1029850db56e4ccb/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d6560b2493f175a8ebc9eb1029850db56e4ccb/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=59d6560b2493f175a8ebc9eb1029850db56e4ccb", "patch": "@@ -11264,7 +11264,7 @@\n \t(plus:SI (eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r,r\")\n \t\t\t(match_operand:SI 2 \"scc_eq_operand\" \"r,O,K,L,I\"))\n \t\t (match_operand:SI 3 \"gpc_reg_operand\" \"r,r,r,r,r\")))]\n-  \"TARGET_32BIT && optimize_size\"\n+  \"TARGET_32BIT\"\n   \"@\n    xor %0,%1,%2\\;{sfi|subfic} %0,%0,0\\;{aze|addze} %0,%3\n    {sfi|subfic} %0,%1,0\\;{aze|addze} %0,%3\n@@ -11364,7 +11364,7 @@\n   [(set (match_operand:P 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:P (eq:P (match_operand:P 1 \"gpc_reg_operand\" \"r\")\n \t\t     (const_int 0))))]\n-  \"optimize_size || TARGET_POWER\"\n+  \"\"\n   \"{ai|addic} %0,%1,-1\\;{sfe|subfe} %0,%0,%0\"\n   [(set_attr \"type\" \"two\")\n    (set_attr \"length\" \"8\")])\n@@ -11373,9 +11373,9 @@\n   [(set (match_operand:P 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:P (eq:P (match_operand:P 1 \"gpc_reg_operand\" \"%r\")\n \t\t     (match_operand:P 2 \"scc_eq_operand\" \"<scc_eq_op2>\"))))]\n-  \"optimize_size || TARGET_POWER\"\n+  \"\"\n   \"#\"\n-  \"optimize_size || TARGET_POWER\"\n+  \"\"\n   [(set (match_dup 0) (neg:P (eq:P (match_dup 3) (const_int 0))))]\n   {\n     if (GET_CODE (operands[2]) != CONST_INT || INTVAL (operands[2]) != 0)"}]}