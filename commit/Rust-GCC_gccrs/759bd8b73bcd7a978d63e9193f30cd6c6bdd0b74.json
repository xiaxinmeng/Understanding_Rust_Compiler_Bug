{"sha": "759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU5YmQ4YjczYmNkN2E5NzhkNjNlOTE5M2YzMGNkNmM2YmRkMGI3NA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-07-07T13:09:07Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1998-07-07T13:09:07Z"}, "message": "* cse (cse_insn): Don't make change without validation.\n\nFrom-SVN: r20996", "tree": {"sha": "7cbde0f7b9d0cb95d7da7f00fc04eb7c6049068c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cbde0f7b9d0cb95d7da7f00fc04eb7c6049068c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74/comments", "author": null, "committer": null, "parents": [{"sha": "8ea2460f6ab25ef4ffad23568ea740f973c7e8b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ea2460f6ab25ef4ffad23568ea740f973c7e8b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ea2460f6ab25ef4ffad23568ea740f973c7e8b9"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "716d74054cb3b95592fee6d9f300db34a9071b47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74", "patch": "@@ -1,3 +1,7 @@\n+Tue Jul  7 21:05:25 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* cse (cse_insn): Don't make change without validation.\n+\n Tue Jul  7 11:40:05 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* mn10200.md (various zero/sign extension patterns): zero and sign"}, {"sha": "e34908f1680ba00d1ec00762cc43d62a35f8bb0e", "filename": "gcc/cse.c", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=759bd8b73bcd7a978d63e9193f30cd6c6bdd0b74", "patch": "@@ -7004,17 +7004,24 @@ cse_insn (insn, libcall_insn)\n \t   SRC is a hard register.  */\n \t{\n \t  int first = qty_first_reg[reg_qty[REGNO (src)]];\n-\n-\t  src = SET_SRC (sets[i].rtl)\n-\t    = first >= FIRST_PSEUDO_REGISTER ? regno_reg_rtx[first]\n-\t      : gen_rtx_REG (GET_MODE (src), first);\n-\n-\t  /* If we had a constant that is cheaper than what we are now\n-\t     setting SRC to, use that constant.  We ignored it when we\n-\t     thought we could make this into a no-op.  */\n-\t  if (src_const && COST (src_const) < COST (src)\n-\t      && validate_change (insn, &SET_SRC (sets[i].rtl), src_const, 0))\n-\t    src = src_const;\n+\t  rtx new_src\n+\t    = (first >= FIRST_PSEUDO_REGISTER\n+\t       ? regno_reg_rtx[first] : gen_rtx_REG (GET_MODE (src), first));\n+\n+\t  /* We must use validate-change even for this, because this\n+\t     might be a special no-op instruction, suitable only to\n+\t     tag notes onto.  */\n+\t  if (validate_change (insn, &SET_SRC (sets[i].rtl), new_src, 0))\n+\t    {\n+\t      src = new_src;\n+\t      /* If we had a constant that is cheaper than what we are now\n+\t\t setting SRC to, use that constant.  We ignored it when we\n+\t\t thought we could make this into a no-op.  */\n+\t      if (src_const && COST (src_const) < COST (src)\n+\t\t  && validate_change (insn, &SET_SRC (sets[i].rtl), src_const,\n+\t\t\t\t      0))\n+\t\tsrc = src_const;\n+\t    }\n \t}\n \n       /* If we made a change, recompute SRC values.  */"}]}