{"sha": "2b26b801df0c37d2982a8c3667aea8b74d42c5c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIyNmI4MDFkZjBjMzdkMjk4MmE4YzM2NjdhZWE4Yjc0ZDQyYzVjNg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2009-06-16T10:11:55Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2009-06-16T10:11:55Z"}, "message": "re PR tree-optimization/40413 (Internal error in connection with optimization and allocatable objects)\n\n2009-06-16  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/40413\n\t* tree-sra.c (load_assign_lhs_subreplacements): Pass offset to\n\tbuild_ref_for_offset.\n\t(propagate_subacesses_accross_link): Fix a typo in a comment.\n\n\t* testsuite/gfortran.fortran-torture/compile/pr40413.f90: New file.\n\nFrom-SVN: r148520", "tree": {"sha": "d54641652a829e612920b1d412fd459da7c421fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d54641652a829e612920b1d412fd459da7c421fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b26b801df0c37d2982a8c3667aea8b74d42c5c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b26b801df0c37d2982a8c3667aea8b74d42c5c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b26b801df0c37d2982a8c3667aea8b74d42c5c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b26b801df0c37d2982a8c3667aea8b74d42c5c6/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ad15a0a8d0666e21f4217d8ba004b33bcaf383d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad15a0a8d0666e21f4217d8ba004b33bcaf383d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad15a0a8d0666e21f4217d8ba004b33bcaf383d"}], "stats": {"total": 62, "additions": 59, "deletions": 3}, "files": [{"sha": "36aa10bedeb34678cd30e8c7d09a7df66a6881ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b26b801df0c37d2982a8c3667aea8b74d42c5c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b26b801df0c37d2982a8c3667aea8b74d42c5c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b26b801df0c37d2982a8c3667aea8b74d42c5c6", "patch": "@@ -1,3 +1,10 @@\n+2009-06-16  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/40413\n+\t* tree-sra.c (load_assign_lhs_subreplacements): Pass offset to\n+\tbuild_ref_for_offset.\n+\t(propagate_subacesses_accross_link): Fix a typo in a comment.\n+\n 2009-06-16  Ira Rosen  <irar@il.ibm.com>\n \n \t* tree-parloops.c (loop_parallel_p): Call vect_is_simple_reduction"}, {"sha": "d882c6cb16000c26f59361f727908c881afdda09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b26b801df0c37d2982a8c3667aea8b74d42c5c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b26b801df0c37d2982a8c3667aea8b74d42c5c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b26b801df0c37d2982a8c3667aea8b74d42c5c6", "patch": "@@ -1,3 +1,7 @@\n+2009-06-16  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* testsuite/gfortran.fortran-torture/compile/pr40413.f90: New file.\n+\n 2009-06-16  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/36947"}, {"sha": "d8fa73d6991c27bb8ef6b8c2aa77ce73713fb23e", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/pr40413.f90", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b26b801df0c37d2982a8c3667aea8b74d42c5c6/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr40413.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b26b801df0c37d2982a8c3667aea8b74d42c5c6/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr40413.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr40413.f90?ref=2b26b801df0c37d2982a8c3667aea8b74d42c5c6", "patch": "@@ -0,0 +1,46 @@\n+module state_matrices\n+\n+  implicit none\n+  private\n+\n+  public :: state_matrix_copy\n+  public :: state_matrix_t\n+  public :: matrix_element_t\n+\n+  type :: matrix_element_t\n+     private\n+     integer, dimension(:), allocatable :: f\n+  end type matrix_element_t\n+\n+  type :: state_matrix_t\n+     private\n+     type(matrix_element_t), dimension(:), allocatable :: me\n+  end type state_matrix_t\n+\n+  type :: polarization_t\n+     logical :: polarized = .false.\n+     integer :: spin_type = 0\n+     integer :: multiplicity = 0\n+     type(state_matrix_t) :: state\n+  end type polarization_t\n+\n+contains\n+\n+  function polarization_copy (pol_in) result (pol)\n+    type(polarization_t) :: pol\n+    type(polarization_t), intent(in) :: pol_in\n+    !!! type(state_matrix_t) :: state_dummy\n+    pol%polarized = pol_in%polarized\n+    pol%spin_type = pol_in%spin_type\n+    pol%multiplicity = pol_in%multiplicity\n+    !!! state_dummy = state_matrix_copy (pol_in%state)\n+    !!! pol%state = state_dummy\n+    pol%state = state_matrix_copy (pol_in%state)\n+  end function polarization_copy\n+\n+  function state_matrix_copy (state_in) result (state)\n+    type(state_matrix_t) :: state\n+    type(state_matrix_t), intent(in), target :: state_in\n+  end function state_matrix_copy\n+\n+end module state_matrices"}, {"sha": "ddb015c2397101699bd9cc9334e45069b48907c8", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b26b801df0c37d2982a8c3667aea8b74d42c5c6/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b26b801df0c37d2982a8c3667aea8b74d42c5c6/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=2b26b801df0c37d2982a8c3667aea8b74d42c5c6", "patch": "@@ -1544,7 +1544,7 @@ propagate_subacesses_accross_link (struct access *lacc, struct access *racc)\n \t  continue;\n \t}\n \n-      /* If a (part of) a union field in on the RHS of an assignment, it can\n+      /* If a (part of) a union field is on the RHS of an assignment, it can\n \t have sub-accesses which do not make sense on the LHS (PR 40351).\n \t Check that this is not the case.  */\n       if (!build_ref_for_offset (NULL, TREE_TYPE (lacc->base), norm_offset,\n@@ -1949,8 +1949,7 @@ load_assign_lhs_subreplacements (struct access *lacc, struct access *top_racc,\n \t      rhs = unshare_expr (top_racc->base);\n \t      repl_found = build_ref_for_offset (&rhs,\n \t\t\t\t\t\t TREE_TYPE (top_racc->base),\n-\t\t\t\t\t\t lacc->offset - left_offset,\n-\t\t\t\t\t\t lacc->type, false);\n+\t\t\t\t\t\t offset, lacc->type, false);\n \t      gcc_assert (repl_found);\n \t    }\n "}]}