{"sha": "44a5565d43aa79ea9fa56e5d696b59d12db33191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRhNTU2NWQ0M2FhNzllYTlmYTU2ZTVkNjk2YjU5ZDEyZGIzMzE5MQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-10-09T20:58:12Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-10-09T20:58:12Z"}, "message": "loop.c: Revert 2002-08-15 change.\n\n\t* loop.c: Revert 2002-08-15 change.\n\t(LOOP_REGNO_NREGS): Ensure type is int.\n\nFrom-SVN: r57992", "tree": {"sha": "e8ab6448a4498366d96fccbde4b0559abf84e9b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8ab6448a4498366d96fccbde4b0559abf84e9b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44a5565d43aa79ea9fa56e5d696b59d12db33191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a5565d43aa79ea9fa56e5d696b59d12db33191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44a5565d43aa79ea9fa56e5d696b59d12db33191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a5565d43aa79ea9fa56e5d696b59d12db33191/comments", "author": null, "committer": null, "parents": [{"sha": "c6449a1dbc2ede62cdf8fc3d73f52d2f2796567b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6449a1dbc2ede62cdf8fc3d73f52d2f2796567b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6449a1dbc2ede62cdf8fc3d73f52d2f2796567b"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "c2bdf92656c5f8fa21623dd8e96eb41b78fb7c37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a5565d43aa79ea9fa56e5d696b59d12db33191/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a5565d43aa79ea9fa56e5d696b59d12db33191/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44a5565d43aa79ea9fa56e5d696b59d12db33191", "patch": "@@ -1,3 +1,8 @@\n+2002-10-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* loop.c: Revert 2002-08-15 change.\n+\t(LOOP_REGNO_NREGS): Ensure type is int.\n+\n 2002-10-09  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.md (extenddftf2): Change to define_insn"}, {"sha": "d6b3a8091839bcb1a7e5fcc42eb16c25316dd317", "filename": "gcc/loop.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a5565d43aa79ea9fa56e5d696b59d12db33191/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a5565d43aa79ea9fa56e5d696b59d12db33191/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=44a5565d43aa79ea9fa56e5d696b59d12db33191", "patch": "@@ -151,7 +151,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #define LOOP_REGNO_NREGS(REGNO, SET_DEST) \\\n ((REGNO) < FIRST_PSEUDO_REGISTER \\\n- ? HARD_REGNO_NREGS ((REGNO), GET_MODE (SET_DEST)) : 1)\n+ ? (int) HARD_REGNO_NREGS ((REGNO), GET_MODE (SET_DEST)) : 1)\n \n \n /* Vector mapping INSN_UIDs to luids.\n@@ -946,7 +946,7 @@ scan_loop (loop, flags)\n \t\t  m->savings = regs->array[regno].n_times_set;\n \t\t  if (find_reg_note (p, REG_RETVAL, NULL_RTX))\n \t\t    m->savings += libcall_benefit (p);\n-\t\t  for (i = 0; i < (int) LOOP_REGNO_NREGS (regno, SET_DEST (set)); i++)\n+\t\t  for (i = 0; i < LOOP_REGNO_NREGS (regno, SET_DEST (set)); i++)\n \t\t    regs->array[regno+i].set_in_loop = move_insn ? -2 : -1;\n \t\t  /* Add M to the end of the chain MOVABLES.  */\n \t\t  loop_movables_add (movables, m);\n@@ -1050,7 +1050,7 @@ scan_loop (loop, flags)\n \t\t      m->lifetime = LOOP_REG_LIFETIME (loop, regno);\n \t\t      m->savings = 1;\n \t\t      for (i = 0;\n-\t\t\t   i < (int) LOOP_REGNO_NREGS (regno, SET_DEST (set));\n+\t\t\t   i < LOOP_REGNO_NREGS (regno, SET_DEST (set));\n \t\t\t   i++)\n \t\t\tregs->array[regno+i].set_in_loop = -1;\n \t\t      /* Add M to the end of the chain MOVABLES.  */\n@@ -2193,7 +2193,7 @@ move_movables (loop, movables, threshold, insn_count)\n \t      if (! m->partial)\n \t\t{\n \t\t  int i;\n-\t\t  for (i = 0; i < (int) LOOP_REGNO_NREGS (regno, m->set_dest); i++)\n+\t\t  for (i = 0; i < LOOP_REGNO_NREGS (regno, m->set_dest); i++)\n \t\t    regs->array[regno+i].set_in_loop = 0;\n \t\t}\n \n@@ -2258,7 +2258,7 @@ move_movables (loop, movables, threshold, insn_count)\n \t\t\t{\n \t\t\t  int i;\n \t\t\t  for (i = 0;\n-\t\t\t       i < (int) LOOP_REGNO_NREGS (regno, m1->set_dest);\n+\t\t\t       i < LOOP_REGNO_NREGS (regno, m1->set_dest);\n \t\t\t       i++)\n \t\t\t    regs->array[m1->regno+i].set_in_loop = 0;\n \t\t\t}\n@@ -3519,7 +3519,7 @@ count_one_set (regs, insn, x, last_set)\n \t{\n \t  int i;\n \t  int regno = REGNO (dest);\n-\t  for (i = 0; i < (int) LOOP_REGNO_NREGS (regno, dest); i++)\n+\t  for (i = 0; i < LOOP_REGNO_NREGS (regno, dest); i++)\n \t    {\n \t      /* If this is the first setting of this reg\n \t\t in current basic block, and it was set before,"}]}