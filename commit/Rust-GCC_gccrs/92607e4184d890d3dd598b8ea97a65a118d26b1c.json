{"sha": "92607e4184d890d3dd598b8ea97a65a118d26b1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2MDdlNDE4NGQ4OTBkM2RkNTk4YjhlYTk3YTY1YTExOGQyNmIxYw==", "commit": {"author": {"name": "Yi-Hsiu Hsu", "email": "ahsu@marvell.com", "date": "2013-01-20T20:35:23Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2013-01-20T20:35:23Z"}, "message": "Check in missing file for:\n\nAdd support for Marvell's PJ4 CPU\n\n2013-01-18  Yi-Hsiu Hsu  <ahsu@marvell.com>\n            Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n        * config/arm/marvell-pj4.md: New file.\n\nFrom-SVN: r195325", "tree": {"sha": "6f973f4cac1116274387500e4f2bcfe323f5fb02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f973f4cac1116274387500e4f2bcfe323f5fb02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92607e4184d890d3dd598b8ea97a65a118d26b1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92607e4184d890d3dd598b8ea97a65a118d26b1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92607e4184d890d3dd598b8ea97a65a118d26b1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92607e4184d890d3dd598b8ea97a65a118d26b1c/comments", "author": {"login": "ahsu", "id": 681361, "node_id": "MDQ6VXNlcjY4MTM2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/681361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahsu", "html_url": "https://github.com/ahsu", "followers_url": "https://api.github.com/users/ahsu/followers", "following_url": "https://api.github.com/users/ahsu/following{/other_user}", "gists_url": "https://api.github.com/users/ahsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahsu/subscriptions", "organizations_url": "https://api.github.com/users/ahsu/orgs", "repos_url": "https://api.github.com/users/ahsu/repos", "events_url": "https://api.github.com/users/ahsu/events{/privacy}", "received_events_url": "https://api.github.com/users/ahsu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a36c5b2ecf88367e2edbf98141349fe4f5ef0d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a36c5b2ecf88367e2edbf98141349fe4f5ef0d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a36c5b2ecf88367e2edbf98141349fe4f5ef0d9"}], "stats": {"total": 205, "additions": 205, "deletions": 0}, "files": [{"sha": "8f6d3150a0e5680f94261311d981b895635cd369", "filename": "gcc/config/arm/marvell-pj4.md", "status": "added", "additions": 205, "deletions": 0, "changes": 205, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92607e4184d890d3dd598b8ea97a65a118d26b1c/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92607e4184d890d3dd598b8ea97a65a118d26b1c/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md?ref=92607e4184d890d3dd598b8ea97a65a118d26b1c", "patch": "@@ -0,0 +1,205 @@\n+;; Marvell ARM Processor Pipeline Description\n+;; Copyright (C) 2010, 2011, 2012 Free Software Foundation, Inc.\n+;; Contributed by Marvell.\n+\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+;; Pipeline description for the Marvell PJ4, aka \"Flareon\".\n+(define_automaton \"pj4\")\n+\n+;; Issue resources\n+(define_cpu_unit    \"pj4_is1,pj4_is2\"        \"pj4\")\n+(define_reservation \"pj4_is\"             \"(pj4_is1|pj4_is2)\")\n+(define_reservation \"pj4_isb\"            \"(pj4_is1+pj4_is2)\")\n+\n+;; Functional units\n+(define_cpu_unit \"pj4_alu1,pj4_alu2,pj4_mul,pj4_div\" \"pj4\")\n+\n+;; Completion ports\n+(define_cpu_unit \"pj4_w1,pj4_w2\"             \"pj4\")\n+\n+;; Complete/Retire control\n+(define_cpu_unit    \"pj4_c1,pj4_c2\"          \"pj4\")\n+(define_reservation \"pj4_cp\"             \"(pj4_c1|pj4_c2)\")\n+(define_reservation \"pj4_cpb\"            \"(pj4_c1+pj4_c2)\")\n+\n+;; Integer arithmetic instructions\n+\n+(define_insn_reservation \"pj4_alu_e1\" 1\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"alu\")\n+       (not (eq_attr \"conds\" \"set\"))\n+       (eq_attr \"insn\" \"mov,mvn\"))\n+                               \"pj4_is,(pj4_alu1,pj4_w1+pj4_cp)|(pj4_alu2,pj4_w2+pj4_cp)\")\n+\n+(define_insn_reservation \"pj4_alu_e1_conds\" 4\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"alu\")\n+       (eq_attr \"conds\" \"set\")\n+       (eq_attr \"insn\" \"mov,mvn\"))\n+                               \"pj4_is,(pj4_alu1,pj4_w1+pj4_cp)|(pj4_alu2,pj4_w2+pj4_cp)\")\n+\n+(define_insn_reservation \"pj4_alu\" 1\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"alu\")\n+       (not (eq_attr \"conds\" \"set\"))\n+       (not (eq_attr \"insn\" \"mov,mvn\")))\n+                               \"pj4_is,(pj4_alu1,pj4_w1+pj4_cp)|(pj4_alu2,pj4_w2+pj4_cp)\")\n+\n+(define_insn_reservation \"pj4_alu_conds\" 4\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"alu\")\n+       (eq_attr \"conds\" \"set\")\n+       (not (eq_attr \"insn\" \"mov,mvn\")))\n+                               \"pj4_is,(pj4_alu1,pj4_w1+pj4_cp)|(pj4_alu2,pj4_w2+pj4_cp)\")\n+\n+(define_insn_reservation \"pj4_shift\" 1\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"alu_shift,alu_shift_reg\")\n+       (not (eq_attr \"conds\" \"set\"))\n+       (eq_attr \"shift\" \"1\"))  \"pj4_is,(pj4_alu1,pj4_w1+pj4_cp)|(pj4_alu2,pj4_w2+pj4_cp)\")\n+\n+(define_insn_reservation \"pj4_shift_conds\" 4\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"alu_shift,alu_shift_reg\")\n+       (eq_attr \"conds\" \"set\")\n+       (eq_attr \"shift\" \"1\"))  \"pj4_is,(pj4_alu1,pj4_w1+pj4_cp)|(pj4_alu2,pj4_w2+pj4_cp)\")\n+\n+(define_insn_reservation \"pj4_alu_shift\" 1\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (not (eq_attr \"conds\" \"set\"))\n+       (eq_attr \"type\" \"alu_shift,alu_shift_reg\"))\n+                               \"pj4_is,(pj4_alu1,nothing,pj4_w1+pj4_cp)|(pj4_alu2,nothing,pj4_w2+pj4_cp)\")\n+\n+(define_insn_reservation \"pj4_alu_shift_conds\" 4\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"conds\" \"set\")\n+       (eq_attr \"type\" \"alu_shift,alu_shift_reg\"))\n+                               \"pj4_is,(pj4_alu1,nothing,pj4_w1+pj4_cp)|(pj4_alu2,nothing,pj4_w2+pj4_cp)\")\n+\n+(define_bypass 2 \"pj4_alu_shift,pj4_shift\"\n+                 \"pj4_ir_mul,pj4_ir_div,pj4_core_to_vfp\")\n+\n+(define_insn_reservation \"pj4_ir_mul\" 3\n+  (and (eq_attr \"tune\" \"marvell_pj4\") (eq_attr \"type\" \"mult\")) \"pj4_is,pj4_mul,nothing*2,pj4_cp\")\n+\n+(define_insn_reservation \"pj4_ir_div\" 20\n+  (and (eq_attr \"tune\" \"marvell_pj4\") (eq_attr \"insn\" \"udiv,sdiv\")) \"pj4_is,pj4_div*19,pj4_cp\")\n+\n+;; Branches and calls.\n+\n+(define_insn_reservation \"pj4_branches\" 0\n+  (and (eq_attr \"tune\" \"marvell_pj4\") (eq_attr \"type\" \"branch\")) \"pj4_is\")\n+\n+(define_insn_reservation \"pj4_calls\" 32\n+  (and (eq_attr \"tune\" \"marvell_pj4\") (eq_attr \"type\" \"call\")) \"pj4_is\")\n+\n+;; Load/store instructions\n+\n+(define_insn_reservation \"pj4_ldr\"  3\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"load_byte,load1\"))\n+                       \"pj4_is,pj4_alu1,nothing*2,pj4_cp\")\n+\n+(define_insn_reservation \"pj4_ldrd\" 3\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"load2\"))\n+                       \"pj4_is,pj4_alu1,nothing*2,pj4_cpb\")\n+\n+(define_insn_reservation \"pj4_str\"  1\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"store1\"))\n+                       \"pj4_is,pj4_alu1,nothing*2,pj4_cp\")\n+\n+(define_insn_reservation \"pj4_strd\" 1\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"store2\"))\n+                       \"pj4_is,pj4_alu1,nothing*2,pj4_cpb\")\n+\n+(define_insn_reservation \"pj4_ldm\" 4\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"load3,load4\")) \"pj4_isb,pj4_isb+pj4_alu1,pj4_alu1,nothing,pj4_cp,pj4_cp\")\n+\n+(define_insn_reservation \"pj4_stm\" 2\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"store3,store4\")) \"pj4_isb,pj4_isb+pj4_alu1,pj4_alu1,nothing,pj4_cp,pj4_cp\")\n+\n+;; Loads forward at WR-stage to ALU pipes\n+(define_bypass 2 \"pj4_ldr,pj4_ldrd\" \"pj4_alu\")\n+(define_bypass 2 \"pj4_ldr,pj4_ldrd\" \"pj4_alu_shift\" \"arm_no_early_alu_shift_dep\")\n+\n+(define_bypass 4 \"pj4_ldr,pj4_ldrd\" \"pj4_ir_mul,pj4_ir_div,pj4_core_to_vfp\")\n+(define_bypass 5 \"pj4_ldm\" \"pj4_ir_mul,pj4_ir_div,pj4_core_to_vfp\")\n+\n+;; Loads to stores can back-to-back forward\n+(define_bypass 1 \"pj4_ldr,pj4_ldrd\" \"pj4_str,pj4_strd\" \"arm_no_early_store_addr_dep\")\n+\n+;; PJ4 VFP floating point unit\n+(define_automaton \"pj4_vfp\")\n+\n+(define_cpu_unit \"vissue\" \"pj4_vfp\")\n+(define_cpu_unit \"vadd\"   \"pj4_vfp\")\n+(define_cpu_unit \"vmul\"   \"pj4_vfp\")\n+(define_cpu_unit \"vdiv\"   \"pj4_vfp\")\n+(define_cpu_unit \"vfast\"  \"pj4_vfp\")\n+\n+(define_insn_reservation \"pj4_vfp_add\"  5\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"fadds,faddd\")) \"pj4_is,nothing*2,vissue,vadd,nothing*3\")\n+\n+(define_insn_reservation \"pj4_vfp_mul\"  6\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"fmuls,fmuld\")) \"pj4_is,nothing*2,vissue,vmul,nothing*4\")\n+\n+(define_insn_reservation \"pj4_vfp_divs\" 20\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"fdivs\"))       \"pj4_is,nothing*2,vissue,vdiv*18,nothing\")\n+\n+(define_insn_reservation \"pj4_vfp_divd\" 34\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"fdivd\"))       \"pj4_is,nothing*2,vissue,vdiv*32,nothing\")\n+\n+(define_insn_reservation \"pj4_vfp_mac\"  9\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"fmacs,fmacd\"))\n+                       \"pj4_is,nothing*2,vissue,vmul,nothing*3,vadd,nothing*3\")\n+\n+(define_bypass 5 \"pj4_vfp_mac\" \"pj4_vfp_mac\" \"arm_no_early_mul_dep\")\n+\n+(define_insn_reservation \"pj4_vfp_cpy\"  4\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"fcpys,ffariths,ffarithd,fconsts,fconstd,\\\n+                        fcmps,fcmpd,f_cvt\"))  \"pj4_is,nothing*2,vissue,vfast,nothing*2\")\n+\n+;; Enlarge latency, and wish that more nondependent insns are\n+;; scheduled immediately after VFP load.\n+(define_insn_reservation \"pj4_vfp_load\" 4\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"f_loads,f_loadd\"))    \"pj4_isb,pj4_alu1,nothing,vissue,pj4_cp\")\n+\n+(define_insn_reservation \"pj4_vfp_store\" 1\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"f_stores,f_stored\"))  \"pj4_isb,pj4_alu1,nothing,vissue,pj4_cp\")\n+\n+(define_insn_reservation \"pj4_vfp_to_core\" 7\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"f_2_r,f_flag\"))       \"pj4_isb,nothing,nothing,vissue,vfast,nothing*2\")\n+\n+(define_insn_reservation \"pj4_core_to_vfp\" 2\n+  (and (eq_attr \"tune\" \"marvell_pj4\")\n+       (eq_attr \"type\" \"r_2_f\"))              \"pj4_isb,pj4_alu1,pj4_w1,vissue,pj4_cp\")\n+"}]}