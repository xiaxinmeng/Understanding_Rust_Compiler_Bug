{"sha": "fab09a2494224143e42b78a8b4af1c318cc188cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFiMDlhMjQ5NDIyNDE0M2U0MmI3OGE4YjRhZjFjMzE4Y2MxODhjYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-12-15T16:15:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-12-15T16:15:52Z"}, "message": "* decl.c (pushdecl): Don't check for linkage on a non-decl.\n\nFrom-SVN: r38290", "tree": {"sha": "a93c275abcfc9a60e8703ae251ac53109640e4b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a93c275abcfc9a60e8703ae251ac53109640e4b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fab09a2494224143e42b78a8b4af1c318cc188cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab09a2494224143e42b78a8b4af1c318cc188cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fab09a2494224143e42b78a8b4af1c318cc188cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab09a2494224143e42b78a8b4af1c318cc188cb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e185c02d4e262b785467eee4de814e1b27118d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e185c02d4e262b785467eee4de814e1b27118d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e185c02d4e262b785467eee4de814e1b27118d6"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "3143094f058d419356a803d278666cccff48ba00", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab09a2494224143e42b78a8b4af1c318cc188cb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab09a2494224143e42b78a8b4af1c318cc188cb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fab09a2494224143e42b78a8b4af1c318cc188cb", "patch": "@@ -1,5 +1,7 @@\n 2000-12-15  Jason Merrill  <jason@redhat.com>\n \n+\t* decl.c (pushdecl): Don't check for linkage on a non-decl.\n+\n \t* call.c (build_op_delete_call): See through ARRAY_TYPEs.\n \n \t* call.c (build_new_function_call): Lose space before paren in"}, {"sha": "924447f402dbcc10f80becb9a7a234af09c298c9", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab09a2494224143e42b78a8b4af1c318cc188cb/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab09a2494224143e42b78a8b4af1c318cc188cb/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=fab09a2494224143e42b78a8b4af1c318cc188cb", "patch": "@@ -3821,8 +3821,9 @@ pushdecl (x)\n \t  /* Or in the innermost namespace.  */\n \t  if (! t)\n \t    t = namespace_binding (name, DECL_CONTEXT (x));\n-\t  /* Does it have linkage?  */\n-\t  if (t && ! (TREE_STATIC (t) || DECL_EXTERNAL (t)))\n+\t  /* Does it have linkage?  Note that if this isn't a DECL, it's an\n+\t     OVERLOAD, which is OK.  */\n+\t  if (t && DECL_P (t) && ! (TREE_STATIC (t) || DECL_EXTERNAL (t)))\n \t    t = NULL_TREE;\n \t  if (t)\n \t    different_binding_level = 1;"}, {"sha": "fd8f512f57f8d3b4e4816ce6f3fd1515e74f024d", "filename": "gcc/testsuite/g++.old-deja/g++.other/local4.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab09a2494224143e42b78a8b4af1c318cc188cb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flocal4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab09a2494224143e42b78a8b4af1c318cc188cb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flocal4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flocal4.C?ref=fab09a2494224143e42b78a8b4af1c318cc188cb", "patch": "@@ -0,0 +1,10 @@\n+// Test that a local declaration of one of a global overload set works\n+\n+int f () { return 0; }\n+int f (int);\n+\n+int main ()\n+{\n+  int f ();\n+  return f ();\n+}"}]}