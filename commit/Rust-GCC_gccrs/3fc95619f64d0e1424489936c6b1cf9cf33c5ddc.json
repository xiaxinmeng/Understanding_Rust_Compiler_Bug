{"sha": "3fc95619f64d0e1424489936c6b1cf9cf33c5ddc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZjOTU2MTlmNjRkMGUxNDI0NDg5OTM2YzZiMWNmOWNmMzNjNWRkYw==", "commit": {"author": {"name": "Ulrich Drepper", "email": "drepper@redhat.com", "date": "2007-05-04T19:20:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-05-04T19:20:28Z"}, "message": "crtstuff.c (HIDDEN_DTOR_LIST_END): New macro.\n\n\t* crtstuff.c (HIDDEN_DTOR_LIST_END): New macro.\n\t(__do_global_dtors_aux): Use more paranoid loop to run\n\tdestructors if HIDDEN_DTOR_LIST_END.\n\t(__DTOR_END__): Export as a hidden symbol when HIDDEN_DTOR_LIST_END.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r124444", "tree": {"sha": "c944a3efeda877a1fae18ad5d3e9fb158bc98ab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c944a3efeda877a1fae18ad5d3e9fb158bc98ab0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fc95619f64d0e1424489936c6b1cf9cf33c5ddc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fc95619f64d0e1424489936c6b1cf9cf33c5ddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fc95619f64d0e1424489936c6b1cf9cf33c5ddc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fc95619f64d0e1424489936c6b1cf9cf33c5ddc/comments", "author": null, "committer": null, "parents": [{"sha": "12aac30b21cd14421126930ec214463a2f536748", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12aac30b21cd14421126930ec214463a2f536748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12aac30b21cd14421126930ec214463a2f536748"}], "stats": {"total": 58, "additions": 49, "deletions": 9}, "files": [{"sha": "fd08e9054abad090f8288184d0aa12d52b39334c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc95619f64d0e1424489936c6b1cf9cf33c5ddc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc95619f64d0e1424489936c6b1cf9cf33c5ddc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fc95619f64d0e1424489936c6b1cf9cf33c5ddc", "patch": "@@ -1,3 +1,11 @@\n+2007-05-04  Ulrich Drepper  <drepper@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* crtstuff.c (HIDDEN_DTOR_LIST_END): New macro.\n+\t(__do_global_dtors_aux): Use more paranoid loop to run\n+\tdestructors if HIDDEN_DTOR_LIST_END.\n+\t(__DTOR_END__): Export as a hidden symbol when HIDDEN_DTOR_LIST_END.\n+\n 2007-05-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* varasm.c (align_variable): Don't increase alignment for"}, {"sha": "fc57d45afc83203644c1afe3a5734335501a6458", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 41, "deletions": 9, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fc95619f64d0e1424489936c6b1cf9cf33c5ddc/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fc95619f64d0e1424489936c6b1cf9cf33c5ddc/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=3fc95619f64d0e1424489936c6b1cf9cf33c5ddc", "patch": "@@ -106,6 +106,11 @@ call_ ## FUNC (void)\t\t\t\t\t\\\n # define EH_FRAME_SECTION_CONST\n #endif\n \n+#if !defined(DTOR_LIST_END) && defined(OBJECT_FORMAT_ELF) \\\n+    && defined(HAVE_GAS_HIDDEN) && !defined(FINI_ARRAY_SECTION_ASM_OP)\n+# define HIDDEN_DTOR_LIST_END\n+#endif\n+\n /* We do not want to add the weak attribute to the declarations of these\n    routines in unwind-dw2-fde.h because that will cause the definition of\n    these symbols to be weak as well.\n@@ -265,10 +270,6 @@ extern void __cxa_finalize (void *) TARGET_ATTRIBUTE_WEAK;\n static void __attribute__((used))\n __do_global_dtors_aux (void)\n {\n-#ifndef FINI_ARRAY_SECTION_ASM_OP\n-  static func_ptr *p = __DTOR_LIST__ + 1;\n-  func_ptr f;\n-#endif /* !defined(FINI_ARRAY_SECTION_ASM_OP)  */\n   static _Bool completed;\n \n   if (__builtin_expect (completed, 0))\n@@ -282,12 +283,32 @@ __do_global_dtors_aux (void)\n #ifdef FINI_ARRAY_SECTION_ASM_OP\n   /* If we are using .fini_array then destructors will be run via that\n      mechanism.  */\n+#elif defined(HIDDEN_DTOR_LIST_END)\n+  {\n+    /* Safer version that makes sure only .dtors function pointers are\n+       called even if the static variable is maliciously changed.  */\n+    extern func_ptr __DTOR_END__[] __attribute__((visibility (\"hidden\")));\n+    static size_t dtor_idx;\n+    const size_t max_idx = __DTOR_END__ - __DTOR_LIST__ - 1;\n+    func_ptr f;\n+\n+    while (dtor_idx < max_idx)\n+      {\n+\tf = __DTOR_LIST__[++dtor_idx];\n+\tf ();\n+      }\n+  }\n #else /* !defined (FINI_ARRAY_SECTION_ASM_OP) */\n-  while ((f = *p))\n-    {\n-      p++;\n-      f ();\n-    }\n+  {\n+    static func_ptr *p = __DTOR_LIST__ + 1;\n+    func_ptr f;\n+\n+    while ((f = *p))\n+      {\n+\tp++;\n+\tf ();\n+      }\n+  }\n #endif /* !defined(FINI_ARRAY_SECTION_ASM_OP) */\n \n #ifdef USE_EH_FRAME_REGISTRY\n@@ -471,6 +492,17 @@ STATIC func_ptr __CTOR_END__[1]\n \n #ifdef DTOR_LIST_END\n DTOR_LIST_END;\n+#elif defined(HIDDEN_DTOR_LIST_END)\n+#ifdef DTORS_SECTION_ASM_OP\n+asm (DTORS_SECTION_ASM_OP);\n+#endif\n+func_ptr __DTOR_END__[1]\n+  __attribute__ ((unused,\n+#ifndef DTORS_SECTION_ASM_OP\n+\t\t  section(\".dtors\"),\n+#endif\n+\t\t  aligned(sizeof(func_ptr)), visibility (\"hidden\")))\n+  = { (func_ptr) 0 };\n #elif defined(DTORS_SECTION_ASM_OP)\n asm (DTORS_SECTION_ASM_OP);\n STATIC func_ptr __DTOR_END__[1]"}]}