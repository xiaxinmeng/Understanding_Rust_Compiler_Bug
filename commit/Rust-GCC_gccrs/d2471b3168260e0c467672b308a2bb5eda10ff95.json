{"sha": "d2471b3168260e0c467672b308a2bb5eda10ff95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI0NzFiMzE2ODI2MGUwYzQ2NzY3MmIzMDhhMmJiNWVkYTEwZmY5NQ==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2017-01-11T16:38:42Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2017-01-11T16:38:42Z"}, "message": "My previous change to the Cortex-A53 scheduler resulted in a 13% regression on a proprietary benchmark.\n\nMy previous change to the Cortex-A53 scheduler resulted in a 13% regression on a\nproprietary benchmark.  This turned out to be due to non-optimal scheduling of int\nto float conversions.  This patch separates int to FP transfers from int to float\nconversions based on experiments to determine the best schedule.  As a result of\nthese tweaks the performance of the benchmark improves by 20%.\n\n    gcc/\n\t* config/arm/cortex-a53.md: Add bypasses for\n\tcortex_a53_r2f_cvt.\n\t(cortex_a53_r2f): Only use for transfers.\n\t(cortex_a53_f2r): Likewise.\n\t(cortex_a53_r2f_cvt): Add reservation for conversions.\n\t(cortex_a53_f2r_cvt): Likewise.\n\nFrom-SVN: r244322", "tree": {"sha": "41d764d66c719c39a698fd982608534d57c2593f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41d764d66c719c39a698fd982608534d57c2593f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2471b3168260e0c467672b308a2bb5eda10ff95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2471b3168260e0c467672b308a2bb5eda10ff95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2471b3168260e0c467672b308a2bb5eda10ff95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2471b3168260e0c467672b308a2bb5eda10ff95/comments", "author": null, "committer": null, "parents": [{"sha": "dbd8471076ba7d89e3c62a6f2fc82cc3abc82a9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd8471076ba7d89e3c62a6f2fc82cc3abc82a9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbd8471076ba7d89e3c62a6f2fc82cc3abc82a9d"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "d0aae19cc416194b6365e5c236d6c616b493ca1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2471b3168260e0c467672b308a2bb5eda10ff95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2471b3168260e0c467672b308a2bb5eda10ff95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2471b3168260e0c467672b308a2bb5eda10ff95", "patch": "@@ -1,3 +1,12 @@\n+2017-01-11  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/arm/cortex-a53.md: Add bypasses for\n+\tcortex_a53_r2f_cvt.\n+\t(cortex_a53_r2f): Only use for transfers.\n+\t(cortex_a53_f2r): Likewise.\n+\t(cortex_a53_r2f_cvt): Add reservation for conversions.\n+\t(cortex_a53_f2r_cvt): Likewise.\n+\n 2017-01-11  Tamar Christina  <tamar.christina@arm.com>\n \n \t* config/arm/arm_neon.h: Add __artificial__ and gnu_inline"}, {"sha": "7cf5fc5a0cd1d59efd0be3310b78303018138547", "filename": "gcc/config/arm/cortex-a53.md", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2471b3168260e0c467672b308a2bb5eda10ff95/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2471b3168260e0c467672b308a2bb5eda10ff95/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a53.md?ref=d2471b3168260e0c467672b308a2bb5eda10ff95", "patch": "@@ -260,9 +260,18 @@\n \t\t \"cortex_a53_r2f\")\n \n (define_bypass 1 \"cortex_a53_mul,\n-\t\t  cortex_a53_load*\"\n+\t\t  cortex_a53_load1,\n+\t\t  cortex_a53_load2\"\n \t\t \"cortex_a53_r2f\")\n \n+(define_bypass 2 \"cortex_a53_alu*\"\n+\t\t \"cortex_a53_r2f_cvt\")\n+\n+(define_bypass 3 \"cortex_a53_mul,\n+\t\t  cortex_a53_load1,\n+\t\t  cortex_a53_load2\"\n+\t\t \"cortex_a53_r2f_cvt\")\n+\n ;; Model flag forwarding to branches.\n \n (define_bypass 0 \"cortex_a53_alu*,cortex_a53_shift*\"\n@@ -522,19 +531,25 @@\n ;; Floating-point to/from core transfers.\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_insn_reservation \"cortex_a53_r2f\" 6\n+(define_insn_reservation \"cortex_a53_r2f\" 2\n+  (and (eq_attr \"tune\" \"cortexa53\")\n+       (eq_attr \"type\" \"f_mcr,f_mcrr\"))\n+  \"cortex_a53_slot_any,cortex_a53_fp_alu\")\n+\n+(define_insn_reservation \"cortex_a53_f2r\" 4\n+  (and (eq_attr \"tune\" \"cortexa53\")\n+       (eq_attr \"type\" \"f_mrc,f_mrrc\"))\n+  \"cortex_a53_slot_any,cortex_a53_fp_alu\")\n+\n+(define_insn_reservation \"cortex_a53_r2f_cvt\" 4\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"type\" \"f_mcr,f_mcrr,f_cvti2f,\n-\t\t\tneon_from_gp, neon_from_gp_q\"))\n-  \"cortex_a53_slot_any,cortex_a53_store,\n-   nothing,cortex_a53_fp_alu\")\n+       (eq_attr \"type\" \"f_cvti2f, neon_from_gp, neon_from_gp_q\"))\n+  \"cortex_a53_slot_any,cortex_a53_fp_alu\")\n \n-(define_insn_reservation \"cortex_a53_f2r\" 6\n+(define_insn_reservation \"cortex_a53_f2r_cvt\" 5\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"type\" \"f_mrc,f_mrrc,f_cvtf2i,\n-\t\t\tneon_to_gp, neon_to_gp_q\"))\n-  \"cortex_a53_slot_any,cortex_a53_fp_alu,\n-   nothing,cortex_a53_store\")\n+       (eq_attr \"type\" \"f_cvtf2i, neon_to_gp, neon_to_gp_q\"))\n+  \"cortex_a53_slot_any,cortex_a53_fp_alu\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;; Floating-point flag transfer."}]}