{"sha": "a88a7b22c9d0df1068bdc92522ea805d0edf676f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg4YTdiMjJjOWQwZGYxMDY4YmRjOTI1MjJlYTgwNWQwZWRmNjc2Zg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-05-25T20:41:01Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-05-25T20:41:01Z"}, "message": "tree-ssa-phiopt.c (factor_out_conditional_conversion): Remove redundant test and bail out if the type of the new operand is not a...\n\n\t* tree-ssa-phiopt.c (factor_out_conditional_conversion): Remove\n\tredundant test and bail out if the type of the new operand is not\n\ta GIMPLE register type after stripping a VIEW_CONVERT_EXPR.\n\nFrom-SVN: r236748", "tree": {"sha": "793a264e2566b1ca06cd1bc77b31678385a44bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/793a264e2566b1ca06cd1bc77b31678385a44bf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a88a7b22c9d0df1068bdc92522ea805d0edf676f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a88a7b22c9d0df1068bdc92522ea805d0edf676f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a88a7b22c9d0df1068bdc92522ea805d0edf676f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a88a7b22c9d0df1068bdc92522ea805d0edf676f/comments", "author": null, "committer": null, "parents": [{"sha": "125f02edbd9384baf312f2bb0bbbcf435a65cd18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125f02edbd9384baf312f2bb0bbbcf435a65cd18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/125f02edbd9384baf312f2bb0bbbcf435a65cd18"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "43be10fe61e0e21beb6be66bd9b903385360e996", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a88a7b22c9d0df1068bdc92522ea805d0edf676f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a88a7b22c9d0df1068bdc92522ea805d0edf676f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a88a7b22c9d0df1068bdc92522ea805d0edf676f", "patch": "@@ -1,3 +1,9 @@\n+2016-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree-ssa-phiopt.c (factor_out_conditional_conversion): Remove\n+\tredundant test and bail out if the type of the new operand is not\n+\ta GIMPLE register type after stripping a VIEW_CONVERT_EXPR.\n+\n 2016-05-25  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.opt (ix86_target_flags_explicit): Remove."}, {"sha": "23dc60d29b5ce686fc76ed9aabe406f784470061", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a88a7b22c9d0df1068bdc92522ea805d0edf676f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a88a7b22c9d0df1068bdc92522ea805d0edf676f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a88a7b22c9d0df1068bdc92522ea805d0edf676f", "patch": "@@ -1,3 +1,7 @@\n+2016-05-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt55.ad[sb]: New test.\n+\n 2016-05-25  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n \t* c-c++-common/Wduplicated-cond-1.c: Use smaller const literal."}, {"sha": "70f486b2ee3660af99574361f7dc8f2051b03a45", "filename": "gcc/testsuite/gnat.dg/opt55.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a88a7b22c9d0df1068bdc92522ea805d0edf676f/gcc%2Ftestsuite%2Fgnat.dg%2Fopt55.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a88a7b22c9d0df1068bdc92522ea805d0edf676f/gcc%2Ftestsuite%2Fgnat.dg%2Fopt55.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt55.adb?ref=a88a7b22c9d0df1068bdc92522ea805d0edf676f", "patch": "@@ -0,0 +1,20 @@\n+-- { dg-do compile }\r\n+-- { dg-options \"-O\" }\r\n+\r\n+package body Opt55 is\r\n+\r\n+   function Cond (B : Boolean; If_True, If_False : Date) return Date is\r\n+   begin\r\n+      if B then\r\n+         return If_True;\r\n+      else\r\n+         return If_False;\r\n+      end if;\r\n+   end;\r\n+\r\n+   function F (C : Rec2; B : Boolean) return Date is\r\n+   begin\r\n+      return Cond (B, C.D1, C.D2);\r\n+   end;\r\n+\r\n+end Opt55;\r"}, {"sha": "fec3c9ae2ef52451194586326d69482acda10391", "filename": "gcc/testsuite/gnat.dg/opt55.ads", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a88a7b22c9d0df1068bdc92522ea805d0edf676f/gcc%2Ftestsuite%2Fgnat.dg%2Fopt55.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a88a7b22c9d0df1068bdc92522ea805d0edf676f/gcc%2Ftestsuite%2Fgnat.dg%2Fopt55.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt55.ads?ref=a88a7b22c9d0df1068bdc92522ea805d0edf676f", "patch": "@@ -0,0 +1,22 @@\n+package Opt55 is\r\n+\r\n+   type Date is record\r\n+      D : Float;\r\n+   end record;\r\n+\r\n+   type Rec1 (Kind : Boolean := False) is record\r\n+      case Kind is\r\n+         when True => N : Natural;\r\n+         when False => null;\r\n+      end case;\r\n+   end record;\r\n+\r\n+   type Rec2 (D : Positive) is record\r\n+      R  : Rec1;\r\n+      D1 : Date;\r\n+      D2 : Date;\r\n+   end record;\r\n+\r\n+   function F (C : Rec2; B : Boolean) return Date;\r\n+\r\n+end Opt55;\r"}, {"sha": "caf591bc529fd123726a37d5f9b6c4040319d540", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a88a7b22c9d0df1068bdc92522ea805d0edf676f/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a88a7b22c9d0df1068bdc92522ea805d0edf676f/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=a88a7b22c9d0df1068bdc92522ea805d0edf676f", "patch": "@@ -438,15 +438,18 @@ factor_out_conditional_conversion (edge e0, edge e1, gphi *phi,\n   /* Check if arg0 is an SSA_NAME and the stmt which defines arg0 is\n      a conversion.  */\n   arg0_def_stmt = SSA_NAME_DEF_STMT (arg0);\n-  if (!is_gimple_assign (arg0_def_stmt)\n-      || !gimple_assign_cast_p (arg0_def_stmt))\n+  if (!gimple_assign_cast_p (arg0_def_stmt))\n     return NULL;\n \n   /* Use the RHS as new_arg0.  */\n   convert_code = gimple_assign_rhs_code (arg0_def_stmt);\n   new_arg0 = gimple_assign_rhs1 (arg0_def_stmt);\n   if (convert_code == VIEW_CONVERT_EXPR)\n-    new_arg0 = TREE_OPERAND (new_arg0, 0);\n+    {\n+      new_arg0 = TREE_OPERAND (new_arg0, 0);\n+      if (!is_gimple_reg_type (TREE_TYPE (new_arg0)))\n+\treturn NULL;\n+    }\n \n   if (TREE_CODE (arg1) == SSA_NAME)\n     {"}]}