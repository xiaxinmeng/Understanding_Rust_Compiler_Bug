{"sha": "41b8e86c9abcb1dbf93c78a1a8529ade77e39ff5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFiOGU4NmM5YWJjYjFkYmY5M2M3OGExYTg1MjlhZGU3N2UzOWZmNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-04-19T11:30:20Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-04-19T11:30:20Z"}, "message": "PR libstdc++/15002 (partial)\n\n2004-04-19  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/15002 (partial)\n\t* include/bits/basic_string.h (_M_replace_aux, _M_replace_safe):\n\tSpecial case __n2 == 1, not calling traits_type::assign/copy.\n\nFrom-SVN: r80847", "tree": {"sha": "46ccf576c3eb7f46f6e4062abf533bbed1597876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46ccf576c3eb7f46f6e4062abf533bbed1597876"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41b8e86c9abcb1dbf93c78a1a8529ade77e39ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b8e86c9abcb1dbf93c78a1a8529ade77e39ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41b8e86c9abcb1dbf93c78a1a8529ade77e39ff5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41b8e86c9abcb1dbf93c78a1a8529ade77e39ff5/comments", "author": null, "committer": null, "parents": [{"sha": "d6ce65ee1997a6a491a713c1e0e8b4d09e8d110f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6ce65ee1997a6a491a713c1e0e8b4d09e8d110f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6ce65ee1997a6a491a713c1e0e8b4d09e8d110f"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "0654d76f201622c640d041853be168968c426b08", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b8e86c9abcb1dbf93c78a1a8529ade77e39ff5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b8e86c9abcb1dbf93c78a1a8529ade77e39ff5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=41b8e86c9abcb1dbf93c78a1a8529ade77e39ff5", "patch": "@@ -1,3 +1,9 @@\n+2004-04-19  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/15002 (partial)\n+\t* include/bits/basic_string.h (_M_replace_aux, _M_replace_safe):\n+\tSpecial case __n2 == 1, not calling traits_type::assign/copy. \n+\n 2004-04-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/stl_bvector.h: Use _M_impl._M_start."}, {"sha": "6837e013fbbd9ac9782690abc4c4da5e99095660", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41b8e86c9abcb1dbf93c78a1a8529ade77e39ff5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41b8e86c9abcb1dbf93c78a1a8529ade77e39ff5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=41b8e86c9abcb1dbf93c78a1a8529ade77e39ff5", "patch": "@@ -1342,7 +1342,9 @@ namespace std\n \tif (this->max_size() - (this->size() - __n1) < __n2)\n \t  __throw_length_error(__N(\"basic_string::_M_replace_aux\"));\n \t_M_mutate(__pos1, __n1, __n2);\n-\tif (__n2)\n+\tif (__n2 == 1)\n+\t  _M_data()[__pos1] = __c;\n+\telse if (__n2)\n \t  traits_type::assign(_M_data() + __pos1, __n2, __c);\n \treturn *this;\n       }\n@@ -1352,7 +1354,9 @@ namespace std\n \t\t      size_type __n2)\n       {\n \t_M_mutate(__pos1, __n1, __n2);\n-\tif (__n2)\n+\tif (__n2 == 1)\n+\t  _M_data()[__pos1] = *__s;\n+\telse if (__n2)\n \t  traits_type::copy(_M_data() + __pos1, __s, __n2);\n \treturn *this;\n       }\n@@ -1960,7 +1964,7 @@ namespace std\n    *  @param rhs  Last string.\n    *  @return  New string with value of @a lhs followed by @a rhs.\n    */\n- template<typename _CharT, typename _Traits, typename _Alloc>\n+  template<typename _CharT, typename _Traits, typename _Alloc>\n     basic_string<_CharT, _Traits, _Alloc>\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n \t      const basic_string<_CharT, _Traits, _Alloc>& __rhs)"}]}