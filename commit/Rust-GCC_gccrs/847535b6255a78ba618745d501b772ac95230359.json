{"sha": "847535b6255a78ba618745d501b772ac95230359", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ3NTM1YjYyNTVhNzhiYTYxODc0NWQ1MDFiNzcyYWM5NTIzMDM1OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-08-31T12:08:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-08-31T12:08:35Z"}, "message": "re PR target/37168 (ICE: in final_scan_insn, at final.c:2615 (altivec))\n\n\tPR target/37168\n\t* config/rs6000/rs6000-protos.h (const_vector_elt_as_int): Add\n\tprototype.\n\t* config/rs6000/rs6000.c (const_vector_elt_as_int): No longer static.\n\t* config/rs6000/altivec.md (easy_vector_constant_add_self splitter):\n\tAlso split V4SFmode.\n\t* config/rs6000/predicates.md (easy_vector_constant_add_self): Handle\n\tvector float modes.\n\n\t* gcc.target/powerpc/pr37168.c: New test.\n\nFrom-SVN: r139828", "tree": {"sha": "a5c052f56169162e8db6cd4ae5efd79853f7f635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5c052f56169162e8db6cd4ae5efd79853f7f635"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/847535b6255a78ba618745d501b772ac95230359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/847535b6255a78ba618745d501b772ac95230359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/847535b6255a78ba618745d501b772ac95230359", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/847535b6255a78ba618745d501b772ac95230359/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "277b4867eee3e48b4423e7341b9b5670f827d1c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/277b4867eee3e48b4423e7341b9b5670f827d1c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/277b4867eee3e48b4423e7341b9b5670f827d1c8"}], "stats": {"total": 61, "additions": 49, "deletions": 12}, "files": [{"sha": "c5690fcd8e42eb91c1a4b86bb63bc49f53c650a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847535b6255a78ba618745d501b772ac95230359/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847535b6255a78ba618745d501b772ac95230359/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=847535b6255a78ba618745d501b772ac95230359", "patch": "@@ -1,3 +1,14 @@\n+2008-08-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/37168\n+\t* config/rs6000/rs6000-protos.h (const_vector_elt_as_int): Add\n+\tprototype.\n+\t* config/rs6000/rs6000.c (const_vector_elt_as_int): No longer static.\n+\t* config/rs6000/altivec.md (easy_vector_constant_add_self splitter):\n+\tAlso split V4SFmode.\n+\t* config/rs6000/predicates.md (easy_vector_constant_add_self): Handle\n+\tvector float modes.\n+\n 2008-08-31  Jan Hubicka  <jh@suse.cz>\n \n \t* predict.c (PROB_VERY_LIKELY): Make small enough so things"}, {"sha": "e8028edf06719375c337562764b50af8757e2987", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847535b6255a78ba618745d501b772ac95230359/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847535b6255a78ba618745d501b772ac95230359/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=847535b6255a78ba618745d501b772ac95230359", "patch": "@@ -1,5 +1,5 @@\n ;; AltiVec patterns.\n-;; Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007\n+;; Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008\n ;; Free Software Foundation, Inc.\n ;; Contributed by Aldy Hernandez (aldy@quesejoda.com)\n \n@@ -255,26 +255,32 @@\n })\n \n (define_split\n-  [(set (match_operand:VI 0 \"altivec_register_operand\" \"\")\n-\t(match_operand:VI 1 \"easy_vector_constant_add_self\" \"\"))]\n+  [(set (match_operand:V 0 \"altivec_register_operand\" \"\")\n+\t(match_operand:V 1 \"easy_vector_constant_add_self\" \"\"))]\n   \"TARGET_ALTIVEC && reload_completed\"\n   [(set (match_dup 0) (match_dup 3))\n-   (set (match_dup 0) (plus:VI (match_dup 0)\n-\t\t\t       (match_dup 0)))]\n+   (set (match_dup 0) (match_dup 4))]\n {\n   rtx dup = gen_easy_altivec_constant (operands[1]);\n   rtx const_vec;\n+  enum machine_mode op_mode = <MODE>mode;\n \n   /* Divide the operand of the resulting VEC_DUPLICATE, and use\n      simplify_rtx to make a CONST_VECTOR.  */\n   XEXP (dup, 0) = simplify_const_binary_operation (ASHIFTRT, QImode,\n \t\t\t\t\t\t   XEXP (dup, 0), const1_rtx);\n   const_vec = simplify_rtx (dup);\n \n-  if (GET_MODE (const_vec) == <MODE>mode)\n+  if (op_mode == V4SFmode)\n+    {\n+      op_mode = V4SImode;\n+      operands[0] = gen_lowpart (op_mode, operands[0]);\n+    }\n+  if (GET_MODE (const_vec) == op_mode)\n     operands[3] = const_vec;\n   else\n-    operands[3] = gen_lowpart (<MODE>mode, const_vec);\n+    operands[3] = gen_lowpart (op_mode, const_vec);\n+  operands[4] = gen_rtx_PLUS (op_mode, operands[0], operands[0]);\n })\n \n (define_insn \"get_vrsave_internal\""}, {"sha": "f6929706899068f510f1da714110a310972a6933", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847535b6255a78ba618745d501b772ac95230359/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847535b6255a78ba618745d501b772ac95230359/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=847535b6255a78ba618745d501b772ac95230359", "patch": "@@ -1,5 +1,5 @@\n ;; Predicate definitions for POWER and PowerPC.\n-;; Copyright (C) 2005, 2006, 2007 Free Software Foundation, Inc.\n+;; Copyright (C) 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;\n@@ -325,8 +325,8 @@\n        (and (match_test \"TARGET_ALTIVEC\")\n \t    (match_test \"easy_altivec_constant (op, mode)\")))\n {\n-  rtx last = CONST_VECTOR_ELT (op, GET_MODE_NUNITS (mode) - 1);\n-  HOST_WIDE_INT val = ((INTVAL (last) & 0xff) ^ 0x80) - 0x80;\n+  HOST_WIDE_INT val = const_vector_elt_as_int (op, GET_MODE_NUNITS (mode) - 1);\n+  val = ((val & 0xff) ^ 0x80) - 0x80;\n   return EASY_VECTOR_15_ADD_SELF (val);\n })\n "}, {"sha": "a9fb2ab237f1e6dcb86994e42095a77ff5e5a59d", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847535b6255a78ba618745d501b772ac95230359/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847535b6255a78ba618745d501b772ac95230359/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=847535b6255a78ba618745d501b772ac95230359", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for IBM RS/6000.\n-   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -31,6 +31,7 @@ extern void init_cumulative_args (CUMULATIVE_ARGS *, tree, rtx, int, int, int);\n #endif /* TREE_CODE */\n \n extern bool easy_altivec_constant (rtx, enum machine_mode);\n+extern HOST_WIDE_INT const_vector_elt_as_int (rtx, unsigned int);\n extern bool macho_lo_sum_memory_operand (rtx, enum machine_mode);\n extern int num_insns_constant (rtx, enum machine_mode);\n extern int num_insns_constant_wide (HOST_WIDE_INT);"}, {"sha": "d3821a8cfa91ca13983eb2cfa46faa483d939fbd", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847535b6255a78ba618745d501b772ac95230359/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847535b6255a78ba618745d501b772ac95230359/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=847535b6255a78ba618745d501b772ac95230359", "patch": "@@ -2690,7 +2690,7 @@ num_insns_constant (rtx op, enum machine_mode mode)\n    corresponding element of the vector, but for V4SFmode and V2SFmode,\n    the corresponding \"float\" is interpreted as an SImode integer.  */\n \n-static HOST_WIDE_INT\n+HOST_WIDE_INT\n const_vector_elt_as_int (rtx op, unsigned int elt)\n {\n   rtx tmp = CONST_VECTOR_ELT (op, elt);"}, {"sha": "c03514ceee01d74b8450d3b88215bbf6a5548ef4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847535b6255a78ba618745d501b772ac95230359/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847535b6255a78ba618745d501b772ac95230359/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=847535b6255a78ba618745d501b772ac95230359", "patch": "@@ -1,3 +1,8 @@\n+2008-08-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/37168\n+\t* gcc.target/powerpc/pr37168.c: New test.\n+\n 2008-08-31  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.target/i386/cold-attribute-1.c: New testcase."}, {"sha": "8d35157d0f4a31428e336c581c364ccc7aa8736d", "filename": "gcc/testsuite/gcc.target/powerpc/pr37168.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/847535b6255a78ba618745d501b772ac95230359/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr37168.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/847535b6255a78ba618745d501b772ac95230359/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr37168.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr37168.c?ref=847535b6255a78ba618745d501b772ac95230359", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/37168 */\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-O2 -maltivec\" } */\n+\n+#define C 3.68249351546114573519399405666776E-44f\n+#define vector __attribute__ ((altivec (vector__)))\n+\n+vector float\n+foo (vector float a)\n+{\n+  vector float b = __builtin_vec_madd (b, a, (vector float) { C, C, C, C });\n+  return b;\n+}"}]}