{"sha": "15469812ac10f2c390e1da454a5dbf3635c9d690", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU0Njk4MTJhYzEwZjJjMzkwZTFkYTQ1NGE1ZGJmMzYzNWM5ZDY5MA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-05-24T00:32:49Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-05-24T00:32:49Z"}, "message": "provide default for HAVE_mem_signal_fence\n\ngcc/ChangeLog:\n\n2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* defaults.h (gen_mem_signal_fence): New function.\n\t(HAVE_mem_signal_fence): Add default value.\n\t* optabs.c: Adjust.\n\nFrom-SVN: r223622", "tree": {"sha": "035dbd3a7dff2458f2dec94cb430f029f9a96234", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/035dbd3a7dff2458f2dec94cb430f029f9a96234"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15469812ac10f2c390e1da454a5dbf3635c9d690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15469812ac10f2c390e1da454a5dbf3635c9d690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15469812ac10f2c390e1da454a5dbf3635c9d690", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15469812ac10f2c390e1da454a5dbf3635c9d690/comments", "author": null, "committer": null, "parents": [{"sha": "c76a46105140316e3e7dabd3a2e32a0cffa27d5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76a46105140316e3e7dabd3a2e32a0cffa27d5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76a46105140316e3e7dabd3a2e32a0cffa27d5c"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "5e540b605872c15d324a77fb94712eedd2986b2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15469812ac10f2c390e1da454a5dbf3635c9d690/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15469812ac10f2c390e1da454a5dbf3635c9d690/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15469812ac10f2c390e1da454a5dbf3635c9d690", "patch": "@@ -1,3 +1,9 @@\n+2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* defaults.h (gen_mem_signal_fence): New function.\n+\t(HAVE_mem_signal_fence): Add default value.\n+\t* optabs.c: Adjust.\n+\n 2015-05-23  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* defaults.h (gen_memory_barrier): New function."}, {"sha": "50004d59e0028bf08cc0233c019cce39c4b91e94", "filename": "gcc/defaults.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15469812ac10f2c390e1da454a5dbf3635c9d690/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15469812ac10f2c390e1da454a5dbf3635c9d690/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=15469812ac10f2c390e1da454a5dbf3635c9d690", "patch": "@@ -1464,6 +1464,16 @@ gen_memory_barrier ()\n }\n #endif\n \n+#ifndef HAVE_mem_signal_fence\n+#define HAVE_mem_signal_fence 0\n+static inline rtx\n+gen_mem_signal_fence (rtx)\n+{\n+  gcc_unreachable ();\n+  return NULL;\n+}\n+#endif\n+\n #endif /* GCC_INSN_FLAGS_H  */\n \n #endif  /* ! GCC_DEFAULTS_H */"}, {"sha": "49e1c531c65dd95e0f0d040141952071d0d01a4f", "filename": "gcc/optabs.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15469812ac10f2c390e1da454a5dbf3635c9d690/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15469812ac10f2c390e1da454a5dbf3635c9d690/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=15469812ac10f2c390e1da454a5dbf3635c9d690", "patch": "@@ -7608,11 +7608,6 @@ expand_mem_thread_fence (enum memmodel model)\n /* This routine will either emit the mem_signal_fence pattern or issue a \n    sync_synchronize to generate a fence for memory model MEMMODEL.  */\n \n-#ifndef HAVE_mem_signal_fence\n-# define HAVE_mem_signal_fence 0\n-# define gen_mem_signal_fence(x) (gcc_unreachable (), NULL_RTX)\n-#endif\n-\n void\n expand_mem_signal_fence (enum memmodel model)\n {"}]}