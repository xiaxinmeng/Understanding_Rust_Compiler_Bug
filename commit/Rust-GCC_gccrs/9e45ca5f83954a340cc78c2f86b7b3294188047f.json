{"sha": "9e45ca5f83954a340cc78c2f86b7b3294188047f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU0NWNhNWY4Mzk1NGEzNDBjYzc4YzJmODZiN2IzMjk0MTg4MDQ3Zg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-07-18T23:14:29Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-07-18T23:14:29Z"}, "message": "re PR go/81451 (missing futex check - libgo/runtime/thread-linux.c:12:0 futex.h:13:12: error: expected \u2018=\u2019, \u2018,\u2019, \u2018;\u2019, \u2018asm\u2019 or \u2018__attribute__\u2019 before \u2018long\u2019)\n\n\tPR go/81451\n    runtime: inline runtime_osinit\n    \n    We had two identical copies of runtime_osinit. They set runtime_ncpu,\n    a variable that is no longer used. Removing that leaves us with two lines.\n    Inline those two lines in the two places the function was called.\n    \n    This fixes GCC PR 81451.\n    \n    Reviewed-on: https://go-review.googlesource.com/48862\n\nFrom-SVN: r250326", "tree": {"sha": "127c7047f2588027e80a69215a4ce7e2adb7b509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/127c7047f2588027e80a69215a4ce7e2adb7b509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e45ca5f83954a340cc78c2f86b7b3294188047f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e45ca5f83954a340cc78c2f86b7b3294188047f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e45ca5f83954a340cc78c2f86b7b3294188047f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e45ca5f83954a340cc78c2f86b7b3294188047f/comments", "author": null, "committer": null, "parents": [{"sha": "ab86687fee4024af20d852e26fbb743de05d0efe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab86687fee4024af20d852e26fbb743de05d0efe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab86687fee4024af20d852e26fbb743de05d0efe"}], "stats": {"total": 110, "additions": 20, "deletions": 90}, "files": [{"sha": "0b110e02d632f22dc985ebff214d0374ffc684d7", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e45ca5f83954a340cc78c2f86b7b3294188047f/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e45ca5f83954a340cc78c2f86b7b3294188047f/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=9e45ca5f83954a340cc78c2f86b7b3294188047f", "patch": "@@ -1,4 +1,4 @@\n-0036bd04d077f8bbe5aa9a62fb8830c53068209e\n+c49ddc84f3ce89310585aad23ab6e51ef5523748\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "9800d20bd9b789d4dc5b69c88d8ff45ec2ab0094", "filename": "libgo/Makefile.am", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=9e45ca5f83954a340cc78c2f86b7b3294188047f", "patch": "@@ -398,12 +398,6 @@ else\n rtems_task_variable_add_file =\n endif\n \n-if LIBGO_IS_LINUX\n-runtime_thread_files = runtime/thread-linux.c\n-else\n-runtime_thread_files = runtime/thread-sema.c\n-endif\n-\n if LIBGO_IS_LINUX\n runtime_getncpu_file = runtime/getncpu-linux.c\n else\n@@ -469,7 +463,6 @@ runtime_files = \\\n \truntime/runtime_c.c \\\n \truntime/stack.c \\\n \truntime/thread.c \\\n-\t$(runtime_thread_files) \\\n \truntime/yield.c \\\n \t$(rtems_task_variable_add_file) \\\n \t$(runtime_getncpu_file)"}, {"sha": "9a2bd47ff7b59371529ebf9d06abd4dc27ba7bc7", "filename": "libgo/Makefile.in", "status": "modified", "additions": 13, "deletions": 35, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=9e45ca5f83954a340cc78c2f86b7b3294188047f", "patch": "@@ -183,36 +183,33 @@ am__DEPENDENCIES_4 = $(am__DEPENDENCIES_2) \\\n \t$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \\\n \t$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)\n libgo_llgo_la_DEPENDENCIES = $(am__DEPENDENCIES_4)\n-@LIBGO_IS_LINUX_FALSE@am__objects_1 = thread-sema.lo\n-@LIBGO_IS_LINUX_TRUE@am__objects_1 = thread-linux.lo\n-@LIBGO_IS_RTEMS_TRUE@am__objects_2 = rtems-task-variable-add.lo\n-@LIBGO_IS_AIX_FALSE@@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_FALSE@@LIBGO_IS_SOLARIS_FALSE@am__objects_3 = getncpu-none.lo\n-@LIBGO_IS_AIX_TRUE@@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_FALSE@@LIBGO_IS_SOLARIS_FALSE@am__objects_3 = getncpu-aix.lo\n-@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_TRUE@@LIBGO_IS_SOLARIS_FALSE@am__objects_3 = getncpu-bsd.lo\n-@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_TRUE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_FALSE@am__objects_3 = getncpu-bsd.lo\n-@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_TRUE@am__objects_3 = getncpu-solaris.lo\n-@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_IRIX_TRUE@@LIBGO_IS_LINUX_FALSE@am__objects_3 = getncpu-irix.lo\n-@LIBGO_IS_DARWIN_TRUE@@LIBGO_IS_LINUX_FALSE@am__objects_3 =  \\\n+@LIBGO_IS_RTEMS_TRUE@am__objects_1 = rtems-task-variable-add.lo\n+@LIBGO_IS_AIX_FALSE@@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_FALSE@@LIBGO_IS_SOLARIS_FALSE@am__objects_2 = getncpu-none.lo\n+@LIBGO_IS_AIX_TRUE@@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_FALSE@@LIBGO_IS_SOLARIS_FALSE@am__objects_2 = getncpu-aix.lo\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_TRUE@@LIBGO_IS_SOLARIS_FALSE@am__objects_2 = getncpu-bsd.lo\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_TRUE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_FALSE@am__objects_2 = getncpu-bsd.lo\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_TRUE@am__objects_2 = getncpu-solaris.lo\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_IRIX_TRUE@@LIBGO_IS_LINUX_FALSE@am__objects_2 = getncpu-irix.lo\n+@LIBGO_IS_DARWIN_TRUE@@LIBGO_IS_LINUX_FALSE@am__objects_2 =  \\\n @LIBGO_IS_DARWIN_TRUE@@LIBGO_IS_LINUX_FALSE@\tgetncpu-bsd.lo\n-@LIBGO_IS_LINUX_TRUE@am__objects_3 = getncpu-linux.lo\n-am__objects_4 = aeshash.lo go-assert.lo go-caller.lo go-callers.lo \\\n+@LIBGO_IS_LINUX_TRUE@am__objects_2 = getncpu-linux.lo\n+am__objects_3 = aeshash.lo go-assert.lo go-caller.lo go-callers.lo \\\n \tgo-cdiv.lo go-cgo.lo go-construct-map.lo go-ffi.lo \\\n \tgo-fieldtrack.lo go-matherr.lo go-memclr.lo go-memcmp.lo \\\n \tgo-memequal.lo go-memmove.lo go-nanotime.lo go-now.lo \\\n \tgo-nosys.lo go-reflect-call.lo go-runtime-error.lo \\\n \tgo-setenv.lo go-signal.lo go-strslice.lo go-typedesc-equal.lo \\\n \tgo-unsafe-pointer.lo go-unsetenv.lo go-unwind.lo go-varargs.lo \\\n \tenv_posix.lo panic.lo print.lo proc.lo runtime_c.lo stack.lo \\\n-\tthread.lo $(am__objects_1) yield.lo $(am__objects_2) \\\n-\t$(am__objects_3)\n-am_libgo_llgo_la_OBJECTS = $(am__objects_4)\n+\tthread.lo yield.lo $(am__objects_1) $(am__objects_2)\n+am_libgo_llgo_la_OBJECTS = $(am__objects_3)\n libgo_llgo_la_OBJECTS = $(am_libgo_llgo_la_OBJECTS)\n libgo_llgo_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n \t$(libgo_llgo_la_LDFLAGS) $(LDFLAGS) -o $@\n @GOC_IS_LLGO_TRUE@am_libgo_llgo_la_rpath = -rpath $(toolexeclibdir)\n libgo_la_DEPENDENCIES = $(am__DEPENDENCIES_4)\n-am_libgo_la_OBJECTS = $(am__objects_4)\n+am_libgo_la_OBJECTS = $(am__objects_3)\n libgo_la_OBJECTS = $(am_libgo_la_OBJECTS)\n libgo_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(libgo_la_LDFLAGS) \\\n@@ -765,8 +762,6 @@ toolexeclibgounicode_DATA = \\\n \n @LIBGO_IS_RTEMS_FALSE@rtems_task_variable_add_file = \n @LIBGO_IS_RTEMS_TRUE@rtems_task_variable_add_file = runtime/rtems-task-variable-add.c\n-@LIBGO_IS_LINUX_FALSE@runtime_thread_files = runtime/thread-sema.c\n-@LIBGO_IS_LINUX_TRUE@runtime_thread_files = runtime/thread-linux.c\n @LIBGO_IS_AIX_FALSE@@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_FALSE@@LIBGO_IS_SOLARIS_FALSE@runtime_getncpu_file = runtime/getncpu-none.c\n @LIBGO_IS_AIX_TRUE@@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_FALSE@@LIBGO_IS_SOLARIS_FALSE@runtime_getncpu_file = runtime/getncpu-aix.c\n @LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_FREEBSD_FALSE@@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_NETBSD_TRUE@@LIBGO_IS_SOLARIS_FALSE@runtime_getncpu_file = runtime/getncpu-bsd.c\n@@ -810,7 +805,6 @@ runtime_files = \\\n \truntime/runtime_c.c \\\n \truntime/stack.c \\\n \truntime/thread.c \\\n-\t$(runtime_thread_files) \\\n \truntime/yield.c \\\n \t$(rtems_task_variable_add_file) \\\n \t$(runtime_getncpu_file)\n@@ -1525,8 +1519,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rtems-task-variable-add.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/runtime_c.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stack.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread-linux.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread-sema.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/yield.Plo@am__quote@\n \n@@ -1831,20 +1823,6 @@ thread.lo: runtime/thread.c\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o thread.lo `test -f 'runtime/thread.c' || echo '$(srcdir)/'`runtime/thread.c\n \n-thread-sema.lo: runtime/thread-sema.c\n-@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT thread-sema.lo -MD -MP -MF $(DEPDIR)/thread-sema.Tpo -c -o thread-sema.lo `test -f 'runtime/thread-sema.c' || echo '$(srcdir)/'`runtime/thread-sema.c\n-@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/thread-sema.Tpo $(DEPDIR)/thread-sema.Plo\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='runtime/thread-sema.c' object='thread-sema.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o thread-sema.lo `test -f 'runtime/thread-sema.c' || echo '$(srcdir)/'`runtime/thread-sema.c\n-\n-thread-linux.lo: runtime/thread-linux.c\n-@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT thread-linux.lo -MD -MP -MF $(DEPDIR)/thread-linux.Tpo -c -o thread-linux.lo `test -f 'runtime/thread-linux.c' || echo '$(srcdir)/'`runtime/thread-linux.c\n-@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/thread-linux.Tpo $(DEPDIR)/thread-linux.Plo\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='runtime/thread-linux.c' object='thread-linux.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o thread-linux.lo `test -f 'runtime/thread-linux.c' || echo '$(srcdir)/'`runtime/thread-linux.c\n-\n yield.lo: runtime/yield.c\n @am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT yield.lo -MD -MP -MF $(DEPDIR)/yield.Tpo -c -o yield.lo `test -f 'runtime/yield.c' || echo '$(srcdir)/'`runtime/yield.c\n @am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/yield.Tpo $(DEPDIR)/yield.Plo"}, {"sha": "30d87c4121b12ec92735c2f2bc8dac0095deb834", "filename": "libgo/go/runtime/stubs.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2Fgo%2Fruntime%2Fstubs.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2Fgo%2Fruntime%2Fstubs.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fstubs.go?ref=9e45ca5f83954a340cc78c2f86b7b3294188047f", "patch": "@@ -422,13 +422,13 @@ func getPanicking() uint32 {\n \treturn panicking\n }\n \n-// Temporary for gccgo until we initialize ncpu in Go.\n+// Called by C code to set the number of CPUs.\n //go:linkname setncpu runtime.setncpu\n func setncpu(n int32) {\n \tncpu = n\n }\n \n-// Temporary for gccgo until we reliably initialize physPageSize in Go.\n+// Called by C code to set the page size.\n //go:linkname setpagesize runtime.setpagesize\n func setpagesize(s uintptr) {\n \tif physPageSize == 0 {"}, {"sha": "5e3b8d9e48ad2d1222b38304b723f94fc4ac0fd9", "filename": "libgo/runtime/go-libmain.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2Fruntime%2Fgo-libmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2Fruntime%2Fgo-libmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-libmain.c?ref=9e45ca5f83954a340cc78c2f86b7b3294188047f", "patch": "@@ -105,7 +105,8 @@ gostart (void *arg)\n \n   runtime_check ();\n   runtime_args (a->argc, (byte **) a->argv);\n-  runtime_osinit ();\n+  setncpu (getproccount ());\n+  setpagesize (getpagesize ());\n   runtime_sched = runtime_getsched();\n   runtime_schedinit ();\n   __go_go (runtime_main, NULL);"}, {"sha": "1048161786c553d2722d91d247d579ec5b52b97e", "filename": "libgo/runtime/go-main.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2Fruntime%2Fgo-main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2Fruntime%2Fgo-main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-main.c?ref=9e45ca5f83954a340cc78c2f86b7b3294188047f", "patch": "@@ -51,7 +51,8 @@ main (int argc, char **argv)\n   runtime_cpuinit ();\n   runtime_check ();\n   runtime_args (argc, (byte **) argv);\n-  runtime_osinit ();\n+  setncpu (getproccount ());\n+  setpagesize (getpagesize ());\n   runtime_sched = runtime_getsched();\n   runtime_schedinit ();\n   __go_go (runtime_main, NULL);"}, {"sha": "3e3437e6a4795a79c85f9455de9b086ffa846c62", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=9e45ca5f83954a340cc78c2f86b7b3294188047f", "patch": "@@ -370,7 +370,6 @@ extern G* allocg(void)\n   __asm__ (GOSYM_PREFIX \"runtime.allocg\");\n \n Sched*\truntime_sched;\n-int32\truntime_ncpu;\n \n bool\truntime_isarchive;\n "}, {"sha": "3324038a57dc226d33355827e0d22c99bd60d27b", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e45ca5f83954a340cc78c2f86b7b3294188047f/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=9e45ca5f83954a340cc78c2f86b7b3294188047f", "patch": "@@ -217,7 +217,6 @@ extern\tM*\truntime_getallm(void)\n extern\tSched*  runtime_sched;\n extern\tuint32\truntime_panicking(void)\n   __asm__ (GOSYM_PREFIX \"runtime.getPanicking\");\n-extern\tint32\truntime_ncpu;\n extern\tstruct debugVars runtime_debug;\n \n extern\tbool\truntime_isstarted;\n@@ -237,7 +236,6 @@ void\truntime_gogo(G*)\n struct __go_func_type;\n void\truntime_args(int32, byte**)\n   __asm__ (GOSYM_PREFIX \"runtime.args\");\n-void\truntime_osinit();\n void\truntime_alginit(void)\n   __asm__ (GOSYM_PREFIX \"runtime.alginit\");\n void\truntime_goargs(void)"}, {"sha": "f6d8be90caa4f8da044d3b68ed9692680f08de9b", "filename": "libgo/runtime/thread-linux.c", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab86687fee4024af20d852e26fbb743de05d0efe/libgo%2Fruntime%2Fthread-linux.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab86687fee4024af20d852e26fbb743de05d0efe/libgo%2Fruntime%2Fthread-linux.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fthread-linux.c?ref=ab86687fee4024af20d852e26fbb743de05d0efe", "patch": "@@ -1,20 +0,0 @@\n-// Copyright 2009 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-#include \"runtime.h\"\n-#include \"defs.h\"\n-\n-// Linux futex.\n-\n-#include <unistd.h>\n-#include <syscall.h>\n-#include <linux/futex.h>\n-\n-void\n-runtime_osinit(void)\n-{\n-\truntime_ncpu = getproccount();\n-\tsetncpu(runtime_ncpu);\n-\tsetpagesize(getpagesize());\n-}"}, {"sha": "77d53c416843a2c5a2361694fbff27393a1c116a", "filename": "libgo/runtime/thread-sema.c", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab86687fee4024af20d852e26fbb743de05d0efe/libgo%2Fruntime%2Fthread-sema.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab86687fee4024af20d852e26fbb743de05d0efe/libgo%2Fruntime%2Fthread-sema.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fthread-sema.c?ref=ab86687fee4024af20d852e26fbb743de05d0efe", "patch": "@@ -1,20 +0,0 @@\n-// Copyright 2009 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-#include \"config.h\"\n-#include \"runtime.h\"\n-\n-#include <errno.h>\n-#include <stdlib.h>\n-#include <time.h>\n-#include <unistd.h>\n-#include <semaphore.h>\n-\n-void\n-runtime_osinit (void)\n-{\n-  runtime_ncpu = getproccount();\n-  setncpu(runtime_ncpu);\n-  setpagesize(getpagesize());\n-}"}]}