{"sha": "7c35745cbfe8a65e50014ebae515c6f58c8d1ab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MzNTc0NWNiZmU4YTY1ZTUwMDE0ZWJhZTUxNWM2ZjU4YzhkMWFiNg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2004-07-08T15:03:10Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2004-07-08T15:03:10Z"}, "message": "tree-ssa-operands.c (get_asm_expr_operands): Fix thinkos in the handling of clobbering ASM_EXPRs.\n\n\n\t* tree-ssa-operands.c (get_asm_expr_operands): Fix thinkos in\n\tthe handling of clobbering ASM_EXPRs.\n\nFrom-SVN: r84292", "tree": {"sha": "0826419886dde878e2b60951ba8f11f71c30c418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0826419886dde878e2b60951ba8f11f71c30c418"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c35745cbfe8a65e50014ebae515c6f58c8d1ab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c35745cbfe8a65e50014ebae515c6f58c8d1ab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c35745cbfe8a65e50014ebae515c6f58c8d1ab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c35745cbfe8a65e50014ebae515c6f58c8d1ab6/comments", "author": null, "committer": null, "parents": [{"sha": "6f2838e398cdad1972199dbc8136fac779bf850f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f2838e398cdad1972199dbc8136fac779bf850f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f2838e398cdad1972199dbc8136fac779bf850f"}], "stats": {"total": 78, "additions": 40, "deletions": 38}, "files": [{"sha": "d9152d9b7efaf92496924b28d52cf3aec3d432c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c35745cbfe8a65e50014ebae515c6f58c8d1ab6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c35745cbfe8a65e50014ebae515c6f58c8d1ab6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c35745cbfe8a65e50014ebae515c6f58c8d1ab6", "patch": "@@ -1,3 +1,8 @@\n+2004-07-08  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* tree-ssa-operands.c (get_asm_expr_operands): Fix thinkos in\n+\tthe handling of clobbering ASM_EXPRs.\n+\n 2004-07-08  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR target/16430"}, {"sha": "90b9d022b556706300737eee62e3518798589568", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 35, "deletions": 38, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c35745cbfe8a65e50014ebae515c6f58c8d1ab6/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c35745cbfe8a65e50014ebae515c6f58c8d1ab6/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=7c35745cbfe8a65e50014ebae515c6f58c8d1ab6", "patch": "@@ -1164,8 +1164,9 @@ get_expr_operands (tree stmt, tree *expr_p, int flags, voperands_t prev_vops)\n   abort ();\n }\n \n-/* Scan operands in ASM_EXPR STMT.  PREV_VOPS is as in\n-   append_v_may_def and append_vuse.  */\n+\n+/* Scan operands in ASM_EXPR STMT.  PREV_VOPS is as in append_v_may_def and\n+   append_vuse.  */\n \n static void\n get_asm_expr_operands (tree stmt, voperands_t prev_vops)\n@@ -1223,47 +1224,43 @@ get_asm_expr_operands (tree stmt, voperands_t prev_vops)\n       get_expr_operands (stmt, &TREE_VALUE (link), 0, prev_vops);\n     }\n \n+\n   /* Clobber memory for asm (\"\" : : : \"memory\");  */\n-  if (!aliases_computed_p)\n-    {\n-      /* If we still have not computed aliasing information,\n-\t mark the statement as having volatile operands to avoid\n-\t optimizations from messing around with it.  */\n-      stmt_ann (stmt)->has_volatile_ops = true;\n-    }\n-  else\n-    {\n-      /* Otherwise, if this ASM_EXPR clobbers memory, clobber\n-\t all the call-clobbered variables and the addressable\n-\t variables found by the alias analyzer.  */\n-      for (link = ASM_CLOBBERS (stmt); link; link = TREE_CHAIN (link))\n-\tif (!strcmp (TREE_STRING_POINTER (TREE_VALUE (link)), \"memory\"))\n+  for (link = ASM_CLOBBERS (stmt); link; link = TREE_CHAIN (link))\n+    if (strcmp (TREE_STRING_POINTER (TREE_VALUE (link)), \"memory\") == 0)\n+      {\n+\tsize_t i;\n+\n+\t/* If we still have not computed aliasing information, we\n+\t   won't know what variables are call-clobbered and/or\n+\t   addressable.  Just mark the statement as having volatile\n+\t   operands for now.  */\n+\tif (!aliases_computed_p)\n \t  {\n-\t    /* If we had created .GLOBAL_VAR earlier, use it.\n-\t       Otherwise, add a V_MAY_DEF operand for every\n-\t       call-clobbered and addressable variable.  See\n-\t       compute_may_aliases for the heuristic used to decide\n-\t       whether to create .GLOBAL_VAR or not.  */\n-\t    if (global_var)\n-\t      add_stmt_operand (&global_var, stmt, opf_is_def, prev_vops);\n-\t    else\n+\t    stmt_ann (stmt)->has_volatile_ops = true;\n+\t    break;\n+\t  }\n+\n+\t/* Clobber all call-clobbered variables (or .GLOBAL_VAR if we\n+\t   decided to group them).  */\n+\tif (global_var)\n+\t  add_stmt_operand (&global_var, stmt, opf_is_def, prev_vops);\n+\telse\n+\t  EXECUTE_IF_SET_IN_BITMAP (call_clobbered_vars, 0, i,\n \t      {\n-\t\tsize_t i;\n+\t\ttree var = referenced_var (i);\n+\t\tadd_stmt_operand (&var, stmt, opf_is_def, prev_vops);\n+\t      });\n \n-\t\tEXECUTE_IF_SET_IN_BITMAP (call_clobbered_vars, 0, i,\n-\t\t    {\n-\t\t      tree var = referenced_var (i);\n-\t\t      add_stmt_operand (&var, stmt, opf_is_def, prev_vops);\n-\t\t    });\n+\t/* Now clobber all addressables.  */\n+\tEXECUTE_IF_SET_IN_BITMAP (addressable_vars, 0, i,\n+\t    {\n+\t      tree var = referenced_var (i);\n+\t      add_stmt_operand (&var, stmt, opf_is_def, prev_vops);\n+\t    });\n \n-\t\tEXECUTE_IF_SET_IN_BITMAP (addressable_vars, 0, i,\n-\t\t    {\n-\t\t      tree var = referenced_var (i);\n-\t\t      add_stmt_operand (&var, stmt, opf_is_def, prev_vops);\n-\t\t    });\n-\t      }\n-\t  }\n-    }\n+\tbreak;\n+      }\n }\n \n "}]}