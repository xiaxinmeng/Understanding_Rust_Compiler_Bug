{"sha": "be40afb2b93a0f8f5739dd36c3c804e6f809d1d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU0MGFmYjJiOTNhMGY4ZjU3MzlkZDM2YzNjODA0ZTZmODA5ZDFkNA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-11-13T15:52:45Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-11-13T15:52:45Z"}, "message": "-fsave-optimization-record: compress the output using zlib\n\ngcc/ChangeLog:\n\t* doc/invoke.texi (-fsave-optimization-record): Note that the\n\toutput is compressed.\n\t* optinfo-emit-json.cc: Include <zlib.h>.\n\t(optrecord_json_writer::write): Compress the output.\n\nFrom-SVN: r266078", "tree": {"sha": "747ab50262a4fc7bca6c6ab7f2592d8e3720e8a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/747ab50262a4fc7bca6c6ab7f2592d8e3720e8a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be40afb2b93a0f8f5739dd36c3c804e6f809d1d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be40afb2b93a0f8f5739dd36c3c804e6f809d1d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be40afb2b93a0f8f5739dd36c3c804e6f809d1d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be40afb2b93a0f8f5739dd36c3c804e6f809d1d4/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f824e18c061f9ffa8c49275ba072c120a5b7cdba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f824e18c061f9ffa8c49275ba072c120a5b7cdba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f824e18c061f9ffa8c49275ba072c120a5b7cdba"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "18acf495a31ec3ea47bbfad153e131fbbaa6a218", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be40afb2b93a0f8f5739dd36c3c804e6f809d1d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be40afb2b93a0f8f5739dd36c3c804e6f809d1d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be40afb2b93a0f8f5739dd36c3c804e6f809d1d4", "patch": "@@ -1,3 +1,10 @@\n+2018-11-13  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* doc/invoke.texi (-fsave-optimization-record): Note that the\n+\toutput is compressed.\n+\t* optinfo-emit-json.cc: Include <zlib.h>.\n+\t(optrecord_json_writer::write): Compress the output.\n+\n 2018-11-13  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* tree-vrp.c (value_range_base::dump): Dump type."}, {"sha": "283d20fa29620c703991e344d80eefb5af5a9acd", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be40afb2b93a0f8f5739dd36c3c804e6f809d1d4/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be40afb2b93a0f8f5739dd36c3c804e6f809d1d4/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=be40afb2b93a0f8f5739dd36c3c804e6f809d1d4", "patch": "@@ -14524,11 +14524,11 @@ dumps from the vectorizer about missed opportunities.\n \n @item -fsave-optimization-record\n @opindex fsave-optimization-record\n-Write a SRCFILE.opt-record.json file detailing what optimizations\n+Write a SRCFILE.opt-record.json.gz file detailing what optimizations\n were performed, for those optimizations that support @option{-fopt-info}.\n \n-This option is experimental and the format of the data within the JSON\n-file is subject to change.\n+This option is experimental and the format of the data within the\n+compressed JSON file is subject to change.\n \n It is roughly equivalent to a machine-readable version of\n @option{-fopt-info-all}, as a collection of messages with source file,"}, {"sha": "6d4502c512940a015f610376461099545318a2ef", "filename": "gcc/optinfo-emit-json.cc", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be40afb2b93a0f8f5739dd36c3c804e6f809d1d4/gcc%2Foptinfo-emit-json.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be40afb2b93a0f8f5739dd36c3c804e6f809d1d4/gcc%2Foptinfo-emit-json.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptinfo-emit-json.cc?ref=be40afb2b93a0f8f5739dd36c3c804e6f809d1d4", "patch": "@@ -45,6 +45,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"pass_manager.h\"\n #include \"selftest.h\"\n #include \"dump-context.h\"\n+#include <zlib.h>\n \n /* A class for writing out optimization records in JSON format.  */\n \n@@ -133,16 +134,34 @@ optrecord_json_writer::~optrecord_json_writer ()\n void\n optrecord_json_writer::write () const\n {\n-  char *filename = concat (dump_base_name, \".opt-record.json\", NULL);\n-  FILE *outfile = fopen (filename, \"w\");\n-  if (outfile)\n+  pretty_printer pp;\n+  m_root_tuple->print (&pp);\n+\n+  bool emitted_error = false;\n+  char *filename = concat (dump_base_name, \".opt-record.json.gz\", NULL);\n+  gzFile outfile = gzopen (filename, \"w\");\n+  if (outfile == NULL)\n     {\n-      m_root_tuple->dump (outfile);\n-      fclose (outfile);\n+      error_at (UNKNOWN_LOCATION, \"cannot open file %qs for writing optimization records\",\n+\t\tfilename); // FIXME: more info?\n+      goto cleanup;\n     }\n-  else\n-    error_at (UNKNOWN_LOCATION, \"unable to write optimization records to %qs\",\n-\t      filename); // FIXME: more info?\n+\n+  if (gzputs (outfile, pp_formatted_text (&pp)) <= 0)\n+    {\n+      int tmp;\n+      error_at (UNKNOWN_LOCATION, \"error writing optimization records to %qs: %s\",\n+\t\tfilename, gzerror (outfile, &tmp));\n+      emitted_error = true;\n+    }\n+\n+ cleanup:\n+  if (outfile)\n+    if (gzclose (outfile) != Z_OK)\n+      if (!emitted_error)\n+\terror_at (UNKNOWN_LOCATION, \"error closing optimization records %qs\",\n+\t\t  filename);\n+\n   free (filename);\n }\n "}]}