{"sha": "45b97a09afcb101426a88ad1cd41740df9f6ca37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDViOTdhMDlhZmNiMTAxNDI2YTg4YWQxY2Q0MTc0MGRmOWY2Y2EzNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-11-30T10:37:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-11-30T10:37:39Z"}, "message": "re PR tree-optimization/88274 (ICE in check, at tree-vrp.c:188)\n\n2018-11-30  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/88274\n\t* tree-vrp.c (ranges_from_anti_range): Fix handling of\n\tTYPE_MIN/MAX_VALUE.\n\nFrom-SVN: r266659", "tree": {"sha": "bb9b7b3ed13f7ab06c5590001437a679e5616271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb9b7b3ed13f7ab06c5590001437a679e5616271"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45b97a09afcb101426a88ad1cd41740df9f6ca37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b97a09afcb101426a88ad1cd41740df9f6ca37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b97a09afcb101426a88ad1cd41740df9f6ca37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b97a09afcb101426a88ad1cd41740df9f6ca37/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "518a3a2106e4e8172a1c7628b79b63635857fec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/518a3a2106e4e8172a1c7628b79b63635857fec3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/518a3a2106e4e8172a1c7628b79b63635857fec3"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "de0acb9d50dd898962475bdd4541e6181ea44dfa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b97a09afcb101426a88ad1cd41740df9f6ca37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b97a09afcb101426a88ad1cd41740df9f6ca37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45b97a09afcb101426a88ad1cd41740df9f6ca37", "patch": "@@ -1,3 +1,9 @@\n+2018-11-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88274\n+\t* tree-vrp.c (ranges_from_anti_range): Fix handling of\n+\tTYPE_MIN/MAX_VALUE.\n+\n 2018-11-29  Andi Kleen  <ak@linux.intel.com>\n \n \t* config/i386/i386.c (current_fentry_section): Add."}, {"sha": "aa6309e9e7bd11cfead244f8317cdf9c1afba27f", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b97a09afcb101426a88ad1cd41740df9f6ca37/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b97a09afcb101426a88ad1cd41740df9f6ca37/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=45b97a09afcb101426a88ad1cd41740df9f6ca37", "patch": "@@ -1249,14 +1249,14 @@ ranges_from_anti_range (const value_range_base *ar,\n       || !vrp_val_max (type))\n     return false;\n \n-  if (!vrp_val_is_min (ar->min ()))\n-    *vr0 = value_range (VR_RANGE,\n-\t\t\tvrp_val_min (type),\n-\t\t\twide_int_to_tree (type, wi::to_wide (ar->min ()) - 1));\n-  if (!vrp_val_is_max (ar->max ()))\n-    *vr1 = value_range (VR_RANGE,\n-\t\t\twide_int_to_tree (type, wi::to_wide (ar->max ()) + 1),\n-\t\t\tvrp_val_max (type));\n+  if (tree_int_cst_lt (vrp_val_min (type), ar->min ()))\n+    vr0->set (VR_RANGE,\n+\t      vrp_val_min (type),\n+\t      wide_int_to_tree (type, wi::to_wide (ar->min ()) - 1));\n+  if (tree_int_cst_lt (ar->max (), vrp_val_max (type)))\n+    vr1->set (VR_RANGE,\n+\t      wide_int_to_tree (type, wi::to_wide (ar->max ()) + 1),\n+\t      vrp_val_max (type));\n   if (vr0->undefined_p ())\n     {\n       *vr0 = *vr1;"}]}