{"sha": "4280698d09e99c6881773d0850f98e4d1662103e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI4MDY5OGQwOWU5OWM2ODgxNzczZDA4NTBmOThlNGQxNjYyMTAzZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-03-26T19:27:02Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-03-26T19:27:02Z"}, "message": "re PR libstdc++/62259 (atomic class doesn't enforce required alignment on powerpc64)\n\n\tPR libstdc++/62259\n\tPR libstdc++/65147\n\t* include/std/atomic (atomic<T>): Increase alignment for types with\n\tthe same size as one of the integral types.\n\t* testsuite/29_atomics/atomic/60695.cc: Adjust dg-error line number.\n\t* testsuite/29_atomics/atomic/62259.cc: New.\n\nFrom-SVN: r221703", "tree": {"sha": "0a4d02dfca4ad37d7803167584a05155c2092b28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a4d02dfca4ad37d7803167584a05155c2092b28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4280698d09e99c6881773d0850f98e4d1662103e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4280698d09e99c6881773d0850f98e4d1662103e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4280698d09e99c6881773d0850f98e4d1662103e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4280698d09e99c6881773d0850f98e4d1662103e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "552b2afefbbb827b6b077aa618304c82184605ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/552b2afefbbb827b6b077aa618304c82184605ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/552b2afefbbb827b6b077aa618304c82184605ed"}], "stats": {"total": 87, "additions": 85, "deletions": 2}, "files": [{"sha": "3021c74e38103562d78a48338f503941fe80c93e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4280698d09e99c6881773d0850f98e4d1662103e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4280698d09e99c6881773d0850f98e4d1662103e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4280698d09e99c6881773d0850f98e4d1662103e", "patch": "@@ -1,3 +1,12 @@\n+2015-03-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/62259\n+\tPR libstdc++/65147\n+\t* include/std/atomic (atomic<T>): Increase alignment for types with\n+\tthe same size as one of the integral types.\n+\t* testsuite/29_atomics/atomic/60695.cc: Adjust dg-error line number.\n+\t* testsuite/29_atomics/atomic/62259.cc: New.\n+\n 2015-03-26  Richard Henderson  <rth@redhat.com>\n \n \tPR libstdc++/65033"}, {"sha": "88c8b17dbc9e4bbf66b2730487afc358654c0542", "filename": "libstdc++-v3/include/std/atomic", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4280698d09e99c6881773d0850f98e4d1662103e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4280698d09e99c6881773d0850f98e4d1662103e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fatomic?ref=4280698d09e99c6881773d0850f98e4d1662103e", "patch": "@@ -165,7 +165,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     struct atomic\n     {\n     private:\n-      _Tp _M_i;\n+      // Align 1/2/4/8/16-byte types the same as integer types of that size.\n+      // This matches the alignment effects of the C11 _Atomic qualifier.\n+      static constexpr int _S_min_alignment\n+\t= sizeof(_Tp) == sizeof(char)\t   ? alignof(char)\n+\t: sizeof(_Tp) == sizeof(short)\t   ? alignof(short)\n+\t: sizeof(_Tp) == sizeof(int)\t   ? alignof(int)\n+\t: sizeof(_Tp) == sizeof(long)\t   ? alignof(long)\n+\t: sizeof(_Tp) == sizeof(long long) ? alignof(long long)\n+#ifdef _GLIBCXX_USE_INT128\n+\t: sizeof(_Tp) == sizeof(__int128)  ? alignof(__int128)\n+#endif\n+\t: 0;\n+\n+      static constexpr int _S_alignment\n+        = _S_min_alignment > alignof(_Tp) ? _S_min_alignment : alignof(_Tp);\n+\n+      alignas(_S_alignment) _Tp _M_i;\n \n       static_assert(__is_trivially_copyable(_Tp),\n \t\t    \"std::atomic requires a trivially copyable type\");"}, {"sha": "6f618a0e7971c7f0aba3abec8f7e80ee90bc32cb", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/60695.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4280698d09e99c6881773d0850f98e4d1662103e/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2F60695.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4280698d09e99c6881773d0850f98e4d1662103e/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2F60695.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2F60695.cc?ref=4280698d09e99c6881773d0850f98e4d1662103e", "patch": "@@ -27,4 +27,4 @@ struct X {\n   char stuff[0]; // GNU extension, type has zero size\n };\n \n-std::atomic<X> a;  // { dg-error \"not supported\" \"\" { target *-*-* } 173 }\n+std::atomic<X> a;  // { dg-error \"not supported\" \"\" { target *-*-* } 189 }"}, {"sha": "cf5423a81dac4d30ff3a2b5c114277d9c4afd575", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/62259.cc", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4280698d09e99c6881773d0850f98e4d1662103e/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2F62259.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4280698d09e99c6881773d0850f98e4d1662103e/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2F62259.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2F62259.cc?ref=4280698d09e99c6881773d0850f98e4d1662103e", "patch": "@@ -0,0 +1,58 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-require-atomic-builtins \"\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+#include <atomic>\n+#include <cstdint>\n+\n+using std::int32_t;\n+using std::int64_t;\n+\n+// libstdc++/62259\n+\n+struct twoints {\n+  int32_t a;\n+  int32_t b;\n+};\n+\n+static_assert( alignof(std::atomic<twoints>) == alignof(int64_t),\n+               \"std::atomic not suitably aligned\" );\n+\n+// libstdc++/65147\n+\n+struct power_of_two_obj {\n+    char c [8];\n+};\n+\n+std::atomic<power_of_two_obj> obj1;\n+\n+static_assert( alignof(obj1) == alignof(int64_t),\n+               \"std::atomic not suitably aligned\" );\n+\n+struct container_struct {\n+   char c[1];\n+   std::atomic<power_of_two_obj> ao;\n+};\n+\n+container_struct obj2;\n+\n+static_assert( alignof(obj2.ao) == alignof(int64_t),\n+               \"std::atomic not suitably aligned\" );"}]}