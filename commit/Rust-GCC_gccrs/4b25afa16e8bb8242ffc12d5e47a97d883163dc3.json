{"sha": "4b25afa16e8bb8242ffc12d5e47a97d883163dc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIyNWFmYTE2ZThiYjgyNDJmZmMxMmQ1ZTQ3YTk3ZDg4MzE2M2RjMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-07T09:46:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-07T09:46:56Z"}, "message": "[multiple changes]\n\n2017-09-07  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_util.adb (Check_Part_Of_Reference): rename Conc_Typ to Conc_Obj\n\t(because it refers to the anonymous concurrent object, not its type);\n\tfix condition for emitting error message about task/protected type,\n\n2017-09-07  Bob Duff  <duff@adacore.com>\n\n\t* binde.adb (Debug_Flag_Old): If both -do and -dp\n\tare specified, behave as if just -do was specified, rather than\n\tusing a mixture.\n\n2017-09-07  Nicolas Roche  <roche@adacore.com>\n\n\t* system-vxworks-sparcv9.ads, s-vxwork-m68k.ads, s-vxwork-mips.ads,\n\tsystem-vxworks-m68k.ads, system-vxworks-mips.ads: Removed.\n\nFrom-SVN: r251837", "tree": {"sha": "b16c0b8abe97ad32b9982bfc4975bd96f7b9654b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b16c0b8abe97ad32b9982bfc4975bd96f7b9654b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b25afa16e8bb8242ffc12d5e47a97d883163dc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b25afa16e8bb8242ffc12d5e47a97d883163dc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b25afa16e8bb8242ffc12d5e47a97d883163dc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b25afa16e8bb8242ffc12d5e47a97d883163dc3/comments", "author": null, "committer": null, "parents": [{"sha": "1155ae01593b0b84cddf5031b7a85d684fe0dd0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1155ae01593b0b84cddf5031b7a85d684fe0dd0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1155ae01593b0b84cddf5031b7a85d684fe0dd0d"}], "stats": {"total": 654, "additions": 29, "deletions": 625}, "files": [{"sha": "dabb90f2982b3c5de26138d619c9f57a602879a9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b25afa16e8bb8242ffc12d5e47a97d883163dc3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b25afa16e8bb8242ffc12d5e47a97d883163dc3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4b25afa16e8bb8242ffc12d5e47a97d883163dc3", "patch": "@@ -1,3 +1,20 @@\n+2017-09-07  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_util.adb (Check_Part_Of_Reference): rename Conc_Typ to Conc_Obj\n+\t(because it refers to the anonymous concurrent object, not its type);\n+\tfix condition for emitting error message about task/protected type,\n+\n+2017-09-07  Bob Duff  <duff@adacore.com>\n+\n+\t* binde.adb (Debug_Flag_Old): If both -do and -dp\n+\tare specified, behave as if just -do was specified, rather than\n+\tusing a mixture.\n+\n+2017-09-07  Nicolas Roche  <roche@adacore.com>\n+\n+\t* system-vxworks-sparcv9.ads, s-vxwork-m68k.ads, s-vxwork-mips.ads,\n+\tsystem-vxworks-m68k.ads, system-vxworks-mips.ads: Removed.\n+\n 2017-09-07  Arnaud Charlet  <charlet@adacore.com>\n \n \t* sem_prag.adb (Find_Role): The Global_Seen flag"}, {"sha": "9318fd76fa7527389fabbb8f2919b4277ba7daa4", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b25afa16e8bb8242ffc12d5e47a97d883163dc3/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b25afa16e8bb8242ffc12d5e47a97d883163dc3/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=4b25afa16e8bb8242ffc12d5e47a97d883163dc3", "patch": "@@ -1160,7 +1160,10 @@ package body Binde is\n \n    function Debug_Flag_Old return Boolean is\n    begin\n-      return Debug_Flag_P;\n+      --  If the user specified both flags, we want to use the older algorithm,\n+      --  rather than some confusing mix of the two.\n+\n+      return Debug_Flag_P and not Debug_Flag_O;\n    end Debug_Flag_Old;\n \n    ----------------------"}, {"sha": "678ca5ae7c98af4f5ef4bfa8b86a8b12d54c680d", "filename": "gcc/ada/s-vxwork-m68k.ads", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1155ae01593b0b84cddf5031b7a85d684fe0dd0d/gcc%2Fada%2Fs-vxwork-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1155ae01593b0b84cddf5031b7a85d684fe0dd0d/gcc%2Fada%2Fs-vxwork-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwork-m68k.ads?ref=1155ae01593b0b84cddf5031b7a85d684fe0dd0d", "patch": "@@ -1,74 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n---                                                                          --\n---                        S Y S T E M . V X W O R K S                       --\n---                                                                          --\n---                                   S p e c                                --\n---                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software;  you can redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the M68K VxWorks version of this package\n-\n-with Interfaces.C;\n-\n-package System.VxWorks is\n-   pragma Preelaborate;\n-\n-   package IC renames Interfaces.C;\n-\n-   --  Floating point context record. 68K version\n-\n-   FP_NUM_DREGS        : constant := 8;\n-   FP_STATE_FRAME_SIZE : constant := 216;\n-\n-   type DOUBLEX is array (1 .. 12) of Interfaces.Unsigned_8;\n-   pragma Pack (DOUBLEX);\n-   for DOUBLEX'Size use 12 * 8;\n-\n-   type DOUBLEX_Array is array (1 .. FP_NUM_DREGS) of DOUBLEX;\n-   pragma Pack (DOUBLEX_Array);\n-   for DOUBLEX_Array'Size use FP_NUM_DREGS * 12 * 8;\n-\n-   type FPREG_SET is record\n-      fpcr  : IC.int;\n-      fpsr  : IC.int;\n-      fpiar : IC.int;\n-      fpx   : DOUBLEX_Array;\n-   end record;\n-\n-   type Fp_State_Frame_Array is array (1 .. FP_STATE_FRAME_SIZE) of IC.char;\n-   pragma Pack (Fp_State_Frame_Array);\n-   for Fp_State_Frame_Array'Size use 8 * FP_STATE_FRAME_SIZE;\n-\n-   type FP_CONTEXT is record\n-      fpRegSet   : FPREG_SET;\n-      stateFrame : Fp_State_Frame_Array;\n-   end record;\n-   pragma Convention (C, FP_CONTEXT);\n-\n-   Num_HW_Interrupts : constant := 256;\n-   --  Number of entries in the hardware interrupt vector table\n-\n-end System.VxWorks;"}, {"sha": "002087132580f3a3adee8fa4d6e847164bccd4b9", "filename": "gcc/ada/s-vxwork-mips.ads", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1155ae01593b0b84cddf5031b7a85d684fe0dd0d/gcc%2Fada%2Fs-vxwork-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1155ae01593b0b84cddf5031b7a85d684fe0dd0d/gcc%2Fada%2Fs-vxwork-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwork-mips.ads?ref=1155ae01593b0b84cddf5031b7a85d684fe0dd0d", "patch": "@@ -1,55 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                  GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                --\n---                                                                          --\n---                        S Y S T E M . V X W O R K S                       --\n---                                                                          --\n---                                   S p e c                                --\n---                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software;  you can redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the MIPS VxWorks version of this package\n-\n-with Interfaces.C;\n-\n-package System.VxWorks is\n-   pragma Preelaborate;\n-\n-   package IC renames Interfaces.C;\n-\n-   --  Floating point context record. MIPS version\n-\n-   FP_NUM_DREGS : constant := 16;\n-   type Fpx_Array is array (1 .. FP_NUM_DREGS) of IC.double;\n-\n-   type FP_CONTEXT is record\n-      fpx   : Fpx_Array;\n-      fpcsr : IC.int;\n-   end record;\n-   pragma Convention (C, FP_CONTEXT);\n-\n-   Num_HW_Interrupts : constant := 256;\n-   --  Number of entries in hardware interrupt vector table\n-\n-end System.VxWorks;"}, {"sha": "8573203cfd0a8c5c1f9b16280f5d7eb65d3d6ed1", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b25afa16e8bb8242ffc12d5e47a97d883163dc3/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b25afa16e8bb8242ffc12d5e47a97d883163dc3/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4b25afa16e8bb8242ffc12d5e47a97d883163dc3", "patch": "@@ -3187,7 +3187,7 @@ package body Sem_Util is\n    -----------------------------\n \n    procedure Check_Part_Of_Reference (Var_Id : Entity_Id; Ref : Node_Id) is\n-      Conc_Typ : constant Entity_Id := Encapsulating_State (Var_Id);\n+      Conc_Obj : constant Entity_Id := Encapsulating_State (Var_Id);\n       Decl     : Node_Id;\n       OK_Use   : Boolean := False;\n       Par      : Node_Id;\n@@ -3220,7 +3220,7 @@ package body Sem_Util is\n                Decl := Find_Related_Declaration_Or_Body (Par);\n \n                if Nkind (Decl) = N_Object_Declaration\n-                 and then Defining_Entity (Decl) = Conc_Typ\n+                 and then Defining_Entity (Decl) = Conc_Obj\n                then\n                   OK_Use := True;\n                   exit;\n@@ -3232,7 +3232,7 @@ package body Sem_Util is\n \n          elsif Nkind_In (Par, N_Single_Protected_Declaration,\n                               N_Single_Task_Declaration)\n-           and then Defining_Entity (Par) = Conc_Typ\n+           and then Defining_Entity (Par) = Conc_Obj\n          then\n             OK_Use := True;\n             exit;\n@@ -3248,7 +3248,7 @@ package body Sem_Util is\n             Spec_Id := Unique_Defining_Entity (Par);\n \n             if Present (Anonymous_Object (Spec_Id))\n-              and then Anonymous_Object (Spec_Id) = Conc_Typ\n+              and then Anonymous_Object (Spec_Id) = Conc_Obj\n             then\n                OK_Use := True;\n                exit;\n@@ -3304,12 +3304,13 @@ package body Sem_Util is\n             Ref, Var_Id);\n          Error_Msg_Name_1 := Chars (Var_Id);\n \n-         if Ekind (Conc_Typ) = E_Protected_Type then\n+         if Is_Single_Protected_Object (Conc_Obj) then\n             Error_Msg_NE\n-              (\"\\% is constituent of single protected type &\", Ref, Conc_Typ);\n+              (\"\\% is constituent of single protected type &\", Ref, Conc_Obj);\n+\n          else\n             Error_Msg_NE\n-              (\"\\% is constituent of single task type &\", Ref, Conc_Typ);\n+              (\"\\% is constituent of single task type &\", Ref, Conc_Obj);\n          end if;\n       end if;\n    end Check_Part_Of_Reference;"}, {"sha": "1fab781a7da16bf4f7c88cdc31e7e59285f5098d", "filename": "gcc/ada/system-vxworks-m68k.ads", "status": "removed", "additions": 0, "deletions": 162, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1155ae01593b0b84cddf5031b7a85d684fe0dd0d/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1155ae01593b0b84cddf5031b7a85d684fe0dd0d/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-m68k.ads?ref=1155ae01593b0b84cddf5031b7a85d684fe0dd0d", "patch": "@@ -1,162 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                          (VxWorks version M68K)                          --\n---                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 1.0 / 60.0;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := High_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   --  Ada priorities are mapped to VxWorks priorities using the following\n-   --  transformation: 255 - Ada Priority\n-\n-   --  Ada priorities are used as follows:\n-\n-   --  256        is reserved for the VxWorks kernel\n-   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n-   --  247        is a catchall default \"interrupt\" priority for signals,\n-   --             allowing higher priority than normal tasks, but lower than\n-   --             hardware priority levels.  Protected Object ceilings can\n-   --             override these values.\n-   --  246        is used by the Interrupt_Manager task\n-\n-   Max_Priority           : constant Positive := 245;\n-   Max_Interrupt_Priority : constant Positive := 255;\n-\n-   subtype Any_Priority       is Integer      range   0 .. 255;\n-   subtype Priority           is Any_Priority range   0 .. 245;\n-   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n-\n-   Default_Priority : constant Priority := 122;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := False;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := False;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := True;\n-   ZCX_By_Default            : constant Boolean := False;\n-\n-   Executable_Extension : constant String := \".out\";\n-\n-end System;"}, {"sha": "5cba6cd932b923fdfa1bb0257b102e3125ec1491", "filename": "gcc/ada/system-vxworks-mips.ads", "status": "removed", "additions": 0, "deletions": 162, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1155ae01593b0b84cddf5031b7a85d684fe0dd0d/gcc%2Fada%2Fsystem-vxworks-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1155ae01593b0b84cddf5031b7a85d684fe0dd0d/gcc%2Fada%2Fsystem-vxworks-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-mips.ads?ref=1155ae01593b0b84cddf5031b7a85d684fe0dd0d", "patch": "@@ -1,162 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                         (VxWorks Version Mips)                           --\n---                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 1.0 / 60.0;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := High_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   --  Ada priorities are mapped to VxWorks priorities using the following\n-   --  transformation: 255 - Ada Priority\n-\n-   --  Ada priorities are used as follows:\n-\n-   --  256        is reserved for the VxWorks kernel\n-   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n-   --  247        is a catchall default \"interrupt\" priority for signals,\n-   --             allowing higher priority than normal tasks, but lower than\n-   --             hardware priority levels.  Protected Object ceilings can\n-   --             override these values.\n-   --  246        is used by the Interrupt_Manager task\n-\n-   Max_Priority           : constant Positive := 245;\n-   Max_Interrupt_Priority : constant Positive := 255;\n-\n-   subtype Any_Priority       is Integer      range   0 .. 255;\n-   subtype Priority           is Any_Priority range   0 .. 245;\n-   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n-\n-   Default_Priority : constant Priority := 122;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := False;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := False;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := True;\n-   ZCX_By_Default            : constant Boolean := False;\n-\n-   Executable_Extension : constant String := \".out\";\n-\n-end System;"}, {"sha": "a7c0b5a0a47a8a693f0e0399ea0de151262d5065", "filename": "gcc/ada/system-vxworks-sparcv9.ads", "status": "removed", "additions": 0, "deletions": 164, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1155ae01593b0b84cddf5031b7a85d684fe0dd0d/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1155ae01593b0b84cddf5031b7a85d684fe0dd0d/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads?ref=1155ae01593b0b84cddf5031b7a85d684fe0dd0d", "patch": "@@ -1,164 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                       (VxWorks Version Sparc/64)                         --\n---                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 1.0 / 60.0;\n-\n-   --  Storage-related Declarations\n-\n-   --  VxWorks for UltraSparc uses 64bit words but 32bit pointers\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 32;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := High_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   --  Ada priorities are mapped to VxWorks priorities using the following\n-   --  transformation: 255 - Ada Priority\n-\n-   --  Ada priorities are used as follows:\n-\n-   --  256        is reserved for the VxWorks kernel\n-   --  248 - 255  correspond to hardware interrupt levels 0 .. 7\n-   --  247        is a catchall default \"interrupt\" priority for signals,\n-   --             allowing higher priority than normal tasks, but lower than\n-   --             hardware priority levels.  Protected Object ceilings can\n-   --             override these values.\n-   --  246        is used by the Interrupt_Manager task\n-\n-   Max_Priority           : constant Positive := 245;\n-   Max_Interrupt_Priority : constant Positive := 255;\n-\n-   subtype Any_Priority       is Integer      range   0 .. 255;\n-   subtype Priority           is Any_Priority range   0 .. 245;\n-   subtype Interrupt_Priority is Any_Priority range 246 .. 255;\n-\n-   Default_Priority : constant Priority := 122;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := False;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := True;\n-   ZCX_By_Default            : constant Boolean := False;\n-\n-   Executable_Extension : constant String := \".out\";\n-\n-end System;"}]}