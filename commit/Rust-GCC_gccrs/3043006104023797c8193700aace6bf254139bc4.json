{"sha": "3043006104023797c8193700aace6bf254139bc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA0MzAwNjEwNDAyMzc5N2M4MTkzNzAwYWFjZTZiZjI1NDEzOWJjNA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-22T00:16:27Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-22T00:16:27Z"}, "message": "Daily bump.", "tree": {"sha": "6992b2918ad51521dd62a68848b1a6dbe4c0970e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6992b2918ad51521dd62a68848b1a6dbe4c0970e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3043006104023797c8193700aace6bf254139bc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3043006104023797c8193700aace6bf254139bc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3043006104023797c8193700aace6bf254139bc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3043006104023797c8193700aace6bf254139bc4/comments", "author": null, "committer": null, "parents": [{"sha": "0a9d711df36b42b6494b73a90c7ebf050e904493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a9d711df36b42b6494b73a90c7ebf050e904493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a9d711df36b42b6494b73a90c7ebf050e904493"}], "stats": {"total": 252, "additions": 251, "deletions": 1}, "files": [{"sha": "8c06f731cc64aa6d12639fdaf7697e63955ca650", "filename": "gcc/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3043006104023797c8193700aace6bf254139bc4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3043006104023797c8193700aace6bf254139bc4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3043006104023797c8193700aace6bf254139bc4", "patch": "@@ -1,3 +1,50 @@\n+2020-07-21  Sunil K Pandey  <skpgkp2@gmail.com>\n+\n+\tPR target/95237\n+\t* config/i386/i386-protos.h (ix86_local_alignment): Add\n+\tanother function parameter may_lower alignment. Default is\n+\tfalse.\n+\t* config/i386/i386.c (ix86_lower_local_decl_alignment): New\n+\tfunction.\n+\t(ix86_local_alignment): Amend ix86_local_alignment to accept\n+\tanother parameter may_lower. If may_lower is true, new align\n+\tmay be lower than incoming alignment. If may_lower is false,\n+\tnew align will be greater or equal to incoming alignment.\n+\t(TARGET_LOWER_LOCAL_DECL_ALIGNMENT): Define.\n+\t* doc/tm.texi: Regenerate.\n+\t* doc/tm.texi.in (TARGET_LOWER_LOCAL_DECL_ALIGNMENT): New\n+\thook.\n+\t* target.def (lower_local_decl_alignment): New hook.\n+\n+2020-07-21  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/95750\n+\t* config/i386/sync.md (mfence_sse2): Enable for\n+\tTARGET_64BIT and TARGET_SSE2.\n+\t(mfence_nosse): Always enable.\n+\n+2020-07-21  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/msp430-protos.h (msp430_do_not_relax_short_jumps):\n+\tRemove.\n+\t* config/msp430/msp430.c (msp430_do_not_relax_short_jumps): Likewise.\n+\t* config/msp430/msp430.md (cbranchhi4_real): Remove special case for\n+\tmsp430_do_not_relax_short_jumps.\n+\n+2020-07-21  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/msp430.md: New \"extendqipsi2\" define_insn.\n+\n+2020-07-21  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/msp430.h (NO_FUNCTION_CSE): Set to true at -O2 and\n+\tabove.\n+\n+2020-07-21  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\tPR rtl-optimization/89310\n+\t* config/rs6000/rs6000.md (movsf_from_si2): New define_insn_and_split.\n+\n 2020-07-20  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/mmix/mmix.c (mmix_expand_prologue): Calculate the total"}, {"sha": "71fc8c18748fc8e82a63e55e7edf3c6f662709de", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3043006104023797c8193700aace6bf254139bc4/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3043006104023797c8193700aace6bf254139bc4/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=3043006104023797c8193700aace6bf254139bc4", "patch": "@@ -1 +1 @@\n-20200721\n+20200722"}, {"sha": "9478dcdd754e2988ed6fdab7cebd02c1638c4380", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3043006104023797c8193700aace6bf254139bc4/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3043006104023797c8193700aace6bf254139bc4/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=3043006104023797c8193700aace6bf254139bc4", "patch": "@@ -1,3 +1,9 @@\n+2020-07-21  Sunil K Pandey  <skpgkp2@gmail.com>\n+\n+\tPR target/95237\n+\t* c-decl.c (finish_decl): Call target hook\n+\tlower_local_decl_alignment to lower local decl alignment.\n+\n 2020-07-09  Julian Brown  <julian@codesourcery.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>\n "}, {"sha": "8d45a4016de630dccc23b45bd323b1f5f49c8720", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3043006104023797c8193700aace6bf254139bc4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3043006104023797c8193700aace6bf254139bc4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3043006104023797c8193700aace6bf254139bc4", "patch": "@@ -1,3 +1,17 @@\n+2020-07-21  Sunil K Pandey  <skpgkp2@gmail.com>\n+\n+\tPR target/95237\n+\t* decl.c (cp_finish_decl): Call target hook\n+\tlower_local_decl_alignment to lower local decl alignment.\n+\n+2020-07-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* parser.c (cp_lexer_consume_token): Drop PRAGMA_EOL assert.\n+\t(cp_parser_skip_to_closing_parenthesis_1): Only pass start token\n+\tto pragma skipper if recovering.\n+\t(cp_parser_skip_to_pragma_eol): Only purge and change pragma\n+\tstate when recovering.\n+\n 2020-07-20  Jason Merrill  <jason@redhat.com>\n \n \t* pt.c (type_dependent_expression_p): A pseudo-dtor can be"}, {"sha": "57c9db9c58fb1348f2b27f609ee99925fa3c41f3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3043006104023797c8193700aace6bf254139bc4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3043006104023797c8193700aace6bf254139bc4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3043006104023797c8193700aace6bf254139bc4", "patch": "@@ -1,3 +1,9 @@\n+2020-07-21  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/89574\n+\t* trans-decl.c (gfc_get_extern_function_decl): Check whether a\n+\tsymbol belongs to a different module.\n+\n 2020-07-19  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/96220"}, {"sha": "552f2df0fc28268aadd3c71ab9acfdf026aa0a50", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 177, "deletions": 0, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3043006104023797c8193700aace6bf254139bc4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3043006104023797c8193700aace6bf254139bc4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3043006104023797c8193700aace6bf254139bc4", "patch": "@@ -1,3 +1,180 @@\n+2020-07-21  Sunil K Pandey  <skpgkp2@gmail.com>\n+\n+\tPR target/95237\n+\t* c-c++-common/pr95237-1.c: New test.\n+\t* c-c++-common/pr95237-2.c: New test.\n+\t* c-c++-common/pr95237-3.c: New test.\n+\t* c-c++-common/pr95237-4.c: New test.\n+\t* c-c++-common/pr95237-5.c: New test.\n+\t* c-c++-common/pr95237-6.c: New test.\n+\t* c-c++-common/pr95237-7.c: New test.\n+\t* c-c++-common/pr95237-8.c: New test.\n+\t* c-c++-common/pr95237-9.c: New test.\n+\n+2020-07-21  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR target/92488\n+\t* gcc.target/powerpc/convert-fp-128.c (bl): Update POWER9 count.\n+\n+2020-07-21  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/parse/pr96257.C: New.\n+\n+2020-07-21  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/89574\n+\t* gfortran.dg/pr89574.f90: New file.\n+\n+2020-07-21  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* lib/profopt.exp (auto-profopt-execute): Pass -DFOR_AUTOFDO_TESTING\n+\ton command line for both compiles.\n+\t* gcc.dg/tree-prof/cold_partition_label.c: Scale down for\n+\tnon-FDO testing.\n+\t* gcc.dg/tree-prof/crossmodule-indir-call-topn-1.c: Likewise.\n+\t* gcc.dg/tree-prof/crossmodule-indir-call-topn-2.c: Likewise.\n+\t* gcc.dg/tree-prof/indir-call-prof-topn.c: Likewise.\n+\t* gcc.dg/tree-prof/section-attr-1.c: Likewise.\n+\t* gcc.dg/tree-prof/section-attr-2.c: Likewise.\n+\t* gcc.dg/tree-prof/section-attr-3.c: Likewise.\n+\n+2020-07-21  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* gcc.dg/attr-copy-4.c: Unpacked may still have alignment of 1\n+\ton targets with default_packed.\n+\t* gcc.dg/c11-align-9.c: Remove AVR target filter and replace\n+\twith default_packed filter.\n+\n+2020-07-21  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* gcc.dg/pr53037-1.c: Relax warning pattern.\n+\n+2020-07-21  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* c-c++-common/Waddress-of-packed-member-2.c: Add dg-warning for\n+\tignored attribute if target is default_packed.\n+\t* c-c++-common/Wattributes.c: Ditto.\n+\t* c-c++-common/attr-copy.c: Ditto.\n+\t* c-c++-common/builtin-has-attribute-4.c: Ditto.\n+\t* c-c++-common/pr51628-29.c: Ditto.\n+\t* c-c++-common/pr51628-30.c: Ditto.\n+\t* c-c++-common/pr51628-32.c: Ditto.\n+\t* gcc.dg/Wattributes-6.c: Ditto.\n+\t* gcc.dg/attr-copy-4.c: Ditto.\n+\t* gcc.dg/attr-copy-8.c: Ditto.\n+\n+2020-07-21  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* c-c++-common/Waddress-of-packed-member-1.c: Filter dg-warning\n+\tfor targets who pack by default.\n+\t* c-c++-common/Waddress-of-packed-member-2.c: Ditto.\n+\t* c-c++-common/pr51628-13.c: Ditto.\n+\t* c-c++-common/pr51628-15.c: Ditto.\n+\t* c-c++-common/pr51628-16.c: Ditto.\n+\t* c-c++-common/pr51628-26.c: Ditto.\n+\t* c-c++-common/pr51628-27.c: Ditto.\n+\t* c-c++-common/pr51628-28.c: Ditto.\n+\t* c-c++-common/pr51628-29.c: Ditto.\n+\t* c-c++-common/pr51628-3.c: Ditto.\n+\t* c-c++-common/pr51628-30.c: Ditto.\n+\t* c-c++-common/pr51628-31.c: Ditto.\n+\t* c-c++-common/pr51628-32.c: Ditto.\n+\t* c-c++-common/pr51628-33.c: Ditto.\n+\t* c-c++-common/pr51628-35.c: Ditto.\n+\t* c-c++-common/pr51628-4.c: Ditto.\n+\t* c-c++-common/pr51628-5.c: Ditto.\n+\t* c-c++-common/pr51628-6.c: Ditto.\n+\t* c-c++-common/pr51628-8.c: Ditto.\n+\t* c-c++-common/pr51628-9.c: Ditto.\n+\t* c-c++-common/pr88664-2.c: Ditto.\n+\t* gcc.dg/pr51628-17.c: Ditto.\n+\t* gcc.dg/pr51628-19.c: Ditto.\n+\t* gcc.dg/pr51628-20.c: Ditto.\n+\t* gcc.dg/pr51628-21.c: Ditto.\n+\t* gcc.dg/pr51628-22.c: Ditto.\n+\t* gcc.dg/pr51628-24.c: Ditto.\n+\t* gcc.dg/pr51628-25.c: Ditto.\n+\t* gcc.dg/pr51628-34.c: Ditto.\n+\t* gcc.dg/pr88928.c: Ditto.\n+\n+2020-07-21  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.dg/analyzer/signal-1.c: Add dg-require-effective-target\n+\tsignal.\n+\t* gcc.dg/analyzer/signal-2.c: Ditto.\n+\t* gcc.dg/analyzer/signal-3.c: Ditto.\n+\t* gcc.dg/analyzer/signal-4a.c: Ditto.\n+\t* gcc.dg/analyzer/signal-4b.c: Ditto.\n+\t* gcc.dg/analyzer/signal-5.c: Ditto.\n+\t* gcc.dg/analyzer/signal-6.c: Ditto.\n+\t* gcc.dg/analyzer/signal-exit.c: Ditto.\n+\n+2020-07-21  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\tPR rtl-optimization/89310\n+\t* gcc.target/powerpc/pr89310.c: New test.\n+\n+2020-07-21  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/p9-vec-length-1.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-2.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-3.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-4.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-5.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-6.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-7.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-8.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-1.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-2.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-3.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-4.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-5.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-6.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-7.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-8.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-run-1.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-run-2.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-run-3.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-run-4.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-run-5.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-run-6.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-run-7.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-epil-run-8.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-1.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-2.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-3.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-4.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-5.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-6.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-7.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-8.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-run-1.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-run-2.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-run-3.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-run-4.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-run-5.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-run-6.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-run-7.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-full-run-8.c: New test.\n+\t* gcc.target/powerpc/p9-vec-length-run-1.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-run-2.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-run-3.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-run-4.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-run-5.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-run-6.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-run-7.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length-run-8.h: New test.\n+\t* gcc.target/powerpc/p9-vec-length.h: New test.\n+\n+2020-07-21  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* gcc.dg/independent-cloneids-1.c: Skip for mmix.\n+\tflag_stack_usage_info.\n+\n+2020-07-21  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* gcc.dg/cdce3.c: Update matched line-number.\n+\n 2020-07-20  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/opt/flifetime-dse7.C: New test."}]}