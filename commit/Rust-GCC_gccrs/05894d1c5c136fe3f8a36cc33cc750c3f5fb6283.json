{"sha": "05894d1c5c136fe3f8a36cc33cc750c3f5fb6283", "node_id": "C_kwDOANBUbNoAKDA1ODk0ZDFjNWMxMzZmZTNmOGEzNmNjMzNjYzc1MGMzZjVmYjYyODM", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2022-11-18T15:05:12Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-22T12:34:51Z"}, "message": "ada: Disable checking of Elab_Spec procedures in CodePeer_Mode\n\nThis commit re-enables the Validate_Subprogram_Calls check that had been\ndisabled in a previous commit and has said check skip over Elab_Spec\nprocedures in CodePeer_Mode.\n\ngcc/ada/\n\n\t* frontend.adb (Frontend): Re-enable Validate_Subprogram_Calls.\n\t* exp_ch6.adb (Check_BIP_Actuals): When in CodePeer mode, do not\n\tattempt to validate procedures coming from an\n\tElab_Spec/Elab_Body/Elab_Subp_Body procedure.", "tree": {"sha": "afdad51d38f35504ffa2ce82d52e0380bfe8c4e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afdad51d38f35504ffa2ce82d52e0380bfe8c4e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05894d1c5c136fe3f8a36cc33cc750c3f5fb6283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05894d1c5c136fe3f8a36cc33cc750c3f5fb6283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05894d1c5c136fe3f8a36cc33cc750c3f5fb6283", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05894d1c5c136fe3f8a36cc33cc750c3f5fb6283/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29b7e00589f1c1c00029928ac1b7ba8ff53288f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29b7e00589f1c1c00029928ac1b7ba8ff53288f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29b7e00589f1c1c00029928ac1b7ba8ff53288f5"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "237a19d1327e36566ad4961372c9afb039170bd6", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05894d1c5c136fe3f8a36cc33cc750c3f5fb6283/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05894d1c5c136fe3f8a36cc33cc750c3f5fb6283/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=05894d1c5c136fe3f8a36cc33cc750c3f5fb6283", "patch": "@@ -1115,6 +1115,23 @@ package body Exp_Ch6 is\n                                         | N_Function_Call\n                                         | N_Procedure_Call_Statement);\n \n+      --  In CodePeer_Mode, the tree for `'Elab_Spec` procedures will be\n+      --  malformed because GNAT does not perform the usual expansion that\n+      --  results in the importation of external elaboration procedure symbols.\n+      --  This is expected: the CodePeer backend has special handling for this\n+      --  malformed tree.\n+      --  Thus, we do not need to check the tree (and in fact can't, because\n+      --  it's malformed).\n+\n+      if CodePeer_Mode\n+        and then Nkind (Name (Subp_Call)) = N_Attribute_Reference\n+        and then Attribute_Name (Name (Subp_Call)) in Name_Elab_Spec\n+                                                    | Name_Elab_Body\n+                                                    | Name_Elab_Subp_Body\n+      then\n+         return True;\n+      end if;\n+\n       Formal := First_Formal_With_Extras (Subp_Id);\n       Actual := First_Actual (Subp_Call);\n "}, {"sha": "033ecf3b7be750620451bcabb5e6d8a9f5e497fb", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05894d1c5c136fe3f8a36cc33cc750c3f5fb6283/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05894d1c5c136fe3f8a36cc33cc750c3f5fb6283/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=05894d1c5c136fe3f8a36cc33cc750c3f5fb6283", "patch": "@@ -531,7 +531,7 @@ begin\n    --  formals). It is invoked using pragma Debug to avoid adding any cost\n    --  when the compiler is built with assertions disabled.\n \n-   if not Debug_Flag_Underscore_XX and then not CodePeer_Mode then\n+   if not Debug_Flag_Underscore_XX then\n       pragma Debug (Exp_Ch6.Validate_Subprogram_Calls (Cunit (Main_Unit)));\n    end if;\n "}]}