{"sha": "f7a018474dc63bd2256a7bfeec67b4252481601b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhMDE4NDc0ZGM2M2JkMjI1NmE3YmZlZWM2N2I0MjUyNDgxNjAxYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-11-09T01:52:59Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-11-09T01:52:59Z"}, "message": "cgraphunit.c (cgraph_expand_function): Use cgraph_possibly_inlined_p.\n\n\t* cgraphunit.c (cgraph_expand_function): Use\n\tcgraph_possibly_inlined_p.\n\t* tree-optimize.c (tree_rest_of_compilation): Do not kill saved tree.\n\n\t* opts.c (common_handle_option): Do not set max-inline-insns.\n\t* params.def: Update comments.\n\t(PARAM_MAX_INLINE_INSNS): Kill.\n\t* invoke.texi (max-inline-insns): Kill.\n\nFrom-SVN: r73382", "tree": {"sha": "37bb338cdcb3d3cd3fe0a509334c421ed702478f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37bb338cdcb3d3cd3fe0a509334c421ed702478f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7a018474dc63bd2256a7bfeec67b4252481601b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a018474dc63bd2256a7bfeec67b4252481601b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7a018474dc63bd2256a7bfeec67b4252481601b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7a018474dc63bd2256a7bfeec67b4252481601b/comments", "author": null, "committer": null, "parents": [{"sha": "f10fe8f022ee410ffb1bf554770dc8f5fb4cf385", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f10fe8f022ee410ffb1bf554770dc8f5fb4cf385", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f10fe8f022ee410ffb1bf554770dc8f5fb4cf385"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "16f6c62a6687a395057c610f444a72c53de9823f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a018474dc63bd2256a7bfeec67b4252481601b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a018474dc63bd2256a7bfeec67b4252481601b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7a018474dc63bd2256a7bfeec67b4252481601b", "patch": "@@ -1,3 +1,14 @@\n+2003-11-09  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraphunit.c (cgraph_expand_function): Use\n+\tcgraph_possibly_inlined_p.\n+\t* tree-optimize.c (tree_rest_of_compilation): Do not kill saved tree.\n+\n+\t* opts.c (common_handle_option): Do not set max-inline-insns.\n+\t* params.def: Update comments.\n+\t(PARAM_MAX_INLINE_INSNS): Kill.\n+\t* invoke.texi (max-inline-insns): Kill.\n+\n 2003-11-08  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/3190"}, {"sha": "f2b53a9b3bb2d7bb20bd87d220726b58f9ad4719", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7a018474dc63bd2256a7bfeec67b4252481601b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7a018474dc63bd2256a7bfeec67b4252481601b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f7a018474dc63bd2256a7bfeec67b4252481601b", "patch": "@@ -3829,8 +3829,6 @@ The @option{-finline-limit=@var{n}} option sets some of these parameters\n as follows:\n \n @table @gcctabopt\n- @item max-inline-insns\n-  is set to @var{n}.\n  @item max-inline-insns-single\n   is set to @var{n}/2.\n  @item max-inline-insns-auto\n@@ -3841,8 +3839,7 @@ as follows:\n   is set to @var{n}.\n @end table\n \n-Using @option{-finline-limit=600} thus results in the default settings\n-for these parameters.  See below for a documentation of the individual\n+See below for a documentation of the individual\n parameters controlling inlining.\n \n @emph{Note:} pseudo instruction represents, in this particular context, an\n@@ -4776,17 +4773,6 @@ by the compiler will be investigated.  To those functions, a different\n be applied.\n The default value is 150.\n \n-@item max-inline-insns\n-The tree inliner does decrease the allowable size for single functions \n-to be inlined after we already inlined the number of instructions\n-given here by repeated inlining.  This number should be a factor of \n-two or more larger than the single function limit.\n-Higher numbers result in better runtime performance, but incur higher\n-compile-time resource (CPU time, memory) requirements and result in\n-larger binaries.  Very high values are not advisable, as too large\n-binaries may adversely affect runtime performance.\n-The default value is 200.\n-\n @item large-function-insns\n The limit specifying really large functions.  For functions greater than this\n limit inlining is constrained by @option{--param large-function-growth}.\n@@ -4811,7 +4797,6 @@ than tree inlining), you can set the maximum allowable size (counted\n in RTL instructions) for the RTL inliner with this parameter.\n The default value is 600.\n \n-\n @item max-unrolled-insns\n The maximum number of instructions that a loop should have if that loop\n is unrolled, and if the loop is unrolled, it determines how many times"}]}