{"sha": "e4614c187b7180754b6200412d5e3716c1df92a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ2MTRjMTg3YjcxODA3NTRiNjIwMDQxMmQ1ZTM3MTZjMWRmOTJhMw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2015-04-15T07:41:07Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2015-04-15T07:41:07Z"}, "message": "rx.opt (mallow-string-insns): New option.\n\n\t* config/rx/rx.opt (mallow-string-insns): New option.\n\t* config/rx/rx.c (RX_BUILTIN_RMPA): Disable the use of this\n\tbuiltin if string instructions are denied.\n\t* config/rx/rx.h (TARGET_CPU_CPP_BUILTINS): Define\n\t__RX_ALLOW_STRING_INSNS__ or __RX_DISALLOW_STRING_INSNS__, as\n\tappropriate.\n\t(ASM_SPEC): Pass -mno-allow-string-insns on to the assembler.\n\t* config/rx/rx.md (movstr): Enable pattern only if string\n\tinstructions are allowed.\n\t(rx_movstr, rx_strend, movmemsi, rx_movmem): Likewise.\n\t(cmpstrnsi, cmpstrsi, rx_cmpstrn, rmpa): Likewise.\n\t* config/rx/t-rx (MULTILIB_OPTIONS): Add mno-allow-string-insns.\n\t(MULTILIB_DIRNAMES): Add no-strings.\n\t* doc/invoke.texi: Document -mno-allow-string-insns.\n\n\t* gcc.target/rx/builtins.c: Disable RMPA test if string\n\tinstructions are not allowed.\n\nFrom-SVN: r222116", "tree": {"sha": "1dd41b6f817ea637b6089d9f0c0b92cb51f09798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dd41b6f817ea637b6089d9f0c0b92cb51f09798"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4614c187b7180754b6200412d5e3716c1df92a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4614c187b7180754b6200412d5e3716c1df92a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4614c187b7180754b6200412d5e3716c1df92a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4614c187b7180754b6200412d5e3716c1df92a3/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "984b20545fee1f42c758006b8144159319a8ecf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/984b20545fee1f42c758006b8144159319a8ecf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/984b20545fee1f42c758006b8144159319a8ecf7"}], "stats": {"total": 91, "additions": 80, "deletions": 11}, "files": [{"sha": "7757d3855740f761e4a01c95ee1761b07cace88e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4614c187b7180754b6200412d5e3716c1df92a3", "patch": "@@ -1,3 +1,19 @@\n+2015-04-15  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/rx/rx.opt (mallow-string-insns): New option.\n+\t* config/rx/rx.c (RX_BUILTIN_RMPA): Disable the use of this\n+\tbuiltin if string instructions are denied.\n+\t* config/rx/rx.h (TARGET_CPU_CPP_BUILTINS): Define\n+\t__RX_ALLOW_STRING_INSNS__ or __RX_DISALLOW_STRING_INSNS__, as\n+\tappropriate.\n+\t(ASM_SPEC): Pass -mno-allow-string-insns on to the assembler.\n+\t* config/rx/rx.md (movstr): Enable pattern only if string\n+\tinstructions are allowed.\n+\t(rx_movstr, rx_strend, movmemsi, rx_movmem): Likewise.\n+\t(cmpstrnsi, cmpstrsi, rx_cmpstrn, rmpa): Likewise.\n+\t* config/rx/t-rx (MULTILIB_OPTIONS): Add mno-allow-string-insns.\n+\t(MULTILIB_DIRNAMES): Add no-strings.\n+\t* doc/invoke.texi: Document -mno-allow-string-insns.\n 2015-04-15  Alan Modra  <amodra@gmail.com>\n \n \tPR target/65408"}, {"sha": "9180fe20f66bbc40b94f22c1344d22978d6edca0", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=e4614c187b7180754b6200412d5e3716c1df92a3", "patch": "@@ -2620,7 +2620,12 @@ rx_expand_builtin (tree exp,\n \t(op, gen_mvtachi, true);\n     case RX_BUILTIN_MVTACLO: return rx_expand_void_builtin_1_arg\n \t(op, gen_mvtaclo, true);\n-    case RX_BUILTIN_RMPA:    emit_insn (gen_rmpa ()); return NULL_RTX;\n+    case RX_BUILTIN_RMPA:\n+      if (rx_allow_string_insns)\n+\temit_insn (gen_rmpa ());\n+      else\n+\terror (\"-mno-allow-string-insns forbids the generation of the RMPA instruction\");\n+      return NULL_RTX;\n     case RX_BUILTIN_MVFC:    return rx_expand_builtin_mvfc (arg, target);\n     case RX_BUILTIN_MVTC:    return rx_expand_builtin_mvtc (exp);\n     case RX_BUILTIN_MVTIPL:  return rx_expand_builtin_mvtipl (op);"}, {"sha": "238f340bf27445ff56ed465f9510c7048afb15ce", "filename": "gcc/config/rx/rx.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fconfig%2Frx%2Frx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fconfig%2Frx%2Frx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.h?ref=e4614c187b7180754b6200412d5e3716c1df92a3", "patch": "@@ -67,6 +67,11 @@\n \tbuiltin_define (\"__RX_GCC_ABI__\");\t\\\n       else\t\t\t\t\t\\\n \tbuiltin_define (\"__RX_ABI__\");\t\t\\\n+\t\t\t\t\t\t\\\n+      if (rx_allow_string_insns)\t\t\\\n+\tbuiltin_define (\"__RX_ALLOW_STRING_INSNS__\"); \\\n+      else\t\t\t\t\t\\\n+\tbuiltin_define (\"__RX_DISALLOW_STRING_INSNS__\");\\\n     }                                           \\\n   while (0)\n \n@@ -97,6 +102,7 @@\n %{msmall-data-limit*:-msmall-data-limit} \\\n %{mrelax:-relax} \\\n %{mpid} \\\n+%{mno-allow-string-insns} \\\n %{mint-register=*} \\\n %{mgcc-abi:-mgcc-abi} %{!mgcc-abi:-mrx-abi} \\\n %{mcpu=*} \\"}, {"sha": "1e10327871d9441ace10e9273ce89c0730afe6f3", "filename": "gcc/config/rx/rx.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fconfig%2Frx%2Frx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fconfig%2Frx%2Frx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.md?ref=e4614c187b7180754b6200412d5e3716c1df92a3", "patch": "@@ -2165,7 +2165,7 @@\n \t(match_operand:BLK 2 \"memory_operand\"))   ;; Source\n    (use (match_operand:SI  0 \"register_operand\")) ;; Updated Dest\n   ]\n-  \"\"\n+  \"rx_allow_string_insns\"\n   {\n     rtx addr1 = gen_rtx_REG (SImode, 1);\n     rtx addr2 = gen_rtx_REG (SImode, 2);\n@@ -2192,7 +2192,7 @@\n    (clobber (reg:SI 1))\n    (clobber (reg:SI 2))\n    (clobber (reg:SI 3))]\n-  \"\"\n+  \"rx_allow_string_insns\"\n   \"smovu\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"timings\" \"1111\")] ;; The timing is a guesstimate.\n@@ -2207,7 +2207,7 @@\n    (clobber (reg:SI 3))\n    (clobber (reg:CC CC_REG))\n    ]\n-  \"\"\n+  \"rx_allow_string_insns\"\n   \"mov\\t%1, r1\\n\\tmov\\t#0, r2\\n\\tsuntil.b\\n\\tmov\\tr1, %0\\n\\tsub\\t#1, %0\"\n   [(set_attr \"length\" \"10\")\n    (set_attr \"timings\" \"1111\")] ;; The timing is a guesstimate.\n@@ -2221,7 +2221,7 @@\n      (match_operand          3 \"immediate_operand\") ;; Align\n      (unspec_volatile:BLK [(reg:SI 1) (reg:SI 2) (reg:SI 3)] UNSPEC_MOVMEM)]\n     )]\n-  \"\"\n+  \"rx_allow_string_insns\"\n   {\n     rtx addr1 = gen_rtx_REG (SImode, 1);\n     rtx addr2 = gen_rtx_REG (SImode, 2);\n@@ -2263,7 +2263,7 @@\n    (clobber (reg:SI 1))\n    (clobber (reg:SI 2))\n    (clobber (reg:SI 3))]\n-  \"\"\n+  \"rx_allow_string_insns\"\n   \"smovf\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"timings\" \"1111\")] ;; The timing is a guesstimate.\n@@ -2307,7 +2307,7 @@\n \t\t\t    UNSPEC_CMPSTRN))\n    (use (match_operand:SI                       3 \"register_operand\"))  ;; Max Length\n    (match_operand:SI                            4 \"immediate_operand\")] ;; Known Align\n-  \"\"\n+  \"rx_allow_string_insns\"\n   {\n     rtx str1 = gen_rtx_REG (SImode, 1);\n     rtx str2 = gen_rtx_REG (SImode, 2);\n@@ -2328,7 +2328,7 @@\n \t\t\t     (match_operand:BLK 2 \"memory_operand\")]    ;; String2\n \t\t\t    UNSPEC_CMPSTRN))\n    (match_operand:SI                            3 \"immediate_operand\")] ;; Known Align\n-  \"\"\n+  \"rx_allow_string_insns\"\n   {\n     rtx str1 = gen_rtx_REG (SImode, 1);\n     rtx str2 = gen_rtx_REG (SImode, 2);\n@@ -2353,7 +2353,7 @@\n    (clobber (reg:SI 2))\n    (clobber (reg:SI 3))\n    (clobber (reg:CC CC_REG))]\n-  \"\"\n+  \"rx_allow_string_insns\"\n   \"scmpu\t\t; Perform the string comparison\n    mov     #-1, %0      ; Set up -1 result (which cannot be created\n                         ; by the SC insn)\n@@ -2471,7 +2471,7 @@\n   (clobber (reg:SI 1))\n   (clobber (reg:SI 2))\n   (clobber (reg:SI 3))]\n-  \"\"\n+  \"rx_allow_string_insns\"\n   \"rmpa\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"timings\" \"1010\")]"}, {"sha": "11113e2e305a8c580059cb2a03b94e0fa8414ac5", "filename": "gcc/config/rx/rx.opt", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fconfig%2Frx%2Frx.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fconfig%2Frx%2Frx.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.opt?ref=e4614c187b7180754b6200412d5e3716c1df92a3", "patch": "@@ -128,6 +128,8 @@ mwarn-multiple-fast-interrupts\n Target Report Var(rx_warn_multiple_fast_interrupts) Init(1) Warning\n Warn when multiple, different, fast interrupt handlers are in the compilation unit.\n \n+;---------------------------------------------------\n+\n mgcc-abi\n Target RejectNegative Report Mask(GCC_ABI)\n Enable the use of the old, broken, ABI where all stacked function arguments are aligned to 32-bits.\n@@ -136,6 +138,14 @@ mrx-abi\n Target RejectNegative Report InverseMask(GCC_ABI)\n Enable the use the standard RX ABI where all stacked function arguments are naturally aligned.  This is the default.\n \n+;---------------------------------------------------\n+\n mlra\n Target Report Mask(ENABLE_LRA)\n Enable the use of the LRA register allocator.\n+\n+;---------------------------------------------------\n+\n+mallow-string-insns\n+Target Report Var(rx_allow_string_insns) Init(1)\n+Enables or disables the use of the SMOVF, SMOVB, SMOVU, SUNTIL, SWHILE and RMPA instructions.  Enabled by default."}, {"sha": "f29fd3dc0a5b4ffa2fd72fc5e627dd694035c94d", "filename": "gcc/config/rx/t-rx", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fconfig%2Frx%2Ft-rx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fconfig%2Frx%2Ft-rx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Ft-rx?ref=e4614c187b7180754b6200412d5e3716c1df92a3", "patch": "@@ -20,14 +20,17 @@\n \n # Enable multilibs:\n \n-MULTILIB_OPTIONS    = m64bit-doubles  nofpu        mbig-endian-data  mpid\n+MULTILIB_OPTIONS    = m64bit-doubles  mnofpu        mbig-endian-data  mpid\n MULTILIB_DIRNAMES   =  64-bit-double  no-fpu-libs   big-endian-data   pid\n \n # If necessary uncomment the next two lines to generate multilibs\n # using the old, broken, ABI.\n # MULTILIB_OPTIONS    += mgcc-abi\n # MULTILIB_DIRNAMES   +=  gcc-abi\n \n+MULTILIB_OPTIONS   += mno-allow-string-insns\n+MULTILIB_DIRNAMES  += no-strings\n+\n MULTILIB_MATCHES    = nofpu=mnofpu  nofpu=mcpu?rx200  nofpu=mcpu?rx100\n \n MULTILIB_EXCEPTIONS ="}, {"sha": "18f6990624865f1e221b9cfae4a5b2a9bc555df1", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e4614c187b7180754b6200412d5e3716c1df92a3", "patch": "@@ -940,6 +940,7 @@ See RS/6000 and PowerPC Options.\n -mmax-constant-size=@gol\n -mint-register=@gol\n -mpid@gol\n+-mallow-string-insns -mno-allow-string-insns@gol\n -mno-warn-multiple-fast-interrupts@gol\n -msave-acc-in-interrupts}\n \n@@ -20057,6 +20058,27 @@ fast interrupt handler when it is compiling a file.  The default is to\n issue a warning for each extra fast interrupt handler found, as the RX\n only supports one such interrupt.\n \n+@item -mallow-string-insns\n+@itemx -mno-allow-string-insns\n+@opindex mallow-string-insns\n+@opindex mno-allow-string-insns\n+Enables or disables the use of the string manipulation instructions\n+@code{SMOVF}, @code{SCMPU}, @code{SMOVB}, @code{SMOVU}, @code{SUNTIL}\n+@code{SWHILE} and also the @code{RMPA} instruction.  These\n+instructions may prefetch data, which is not safe to do if accessing\n+an I/O register.  (See section 12.2.7 of the RX62N Group User's Manual\n+for more information).\n+\n+The default is to allow these instructions, but it is not possible for\n+GCC to reliably detect all circumstances where a string instruction\n+might be used to access an I/O register, so their use cannot be\n+disabled automatically.  Instead it is reliant upon the programmer to\n+use the @option{-mno-allow-string-insns} option if their program\n+accesses I/O space.\n+\n+When the instructions are enabled GCC defines the C preprocessor\n+symbol @code{__RX_ALLOW_STRING_INSNS__}, otherwise it defines the\n+symbol @code{__RX_DISALLOW_STRING_INSNS__}.\n @end table\n \n @emph{Note:} The generic GCC command-line option @option{-ffixed-@var{reg}}"}, {"sha": "a007f32bb9a3d00793ef295e25f89415a1e5c06f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4614c187b7180754b6200412d5e3716c1df92a3", "patch": "@@ -1,3 +1,8 @@\n+2015-04-15  Nick Clifton  <nickc@redhat.com>\n+\n+\t* gcc.target/rx/builtins.c: Disable RMPA test if string\n+\tinstructions are not allowed.\n+\n 2015-04-15  Alan Modra  <amodra@gmail.com>\n \n \t* gcc.dg/pr65408.c: New."}, {"sha": "45071bb26df1f6159625e60e6af86333af18fb5f", "filename": "gcc/testsuite/gcc.target/rx/builtins.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4614c187b7180754b6200412d5e3716c1df92a3/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Frx%2Fbuiltins.c?ref=e4614c187b7180754b6200412d5e3716c1df92a3", "patch": "@@ -137,8 +137,10 @@ wait (void)\n   __builtin_rx_wait ();\n }\n \n+#ifndef __RX_DISALLOW_STRING_INSNS__\n void\n rmpa (int * multiplicand, int * multiplier, int num)\n {\n   __builtin_rx_rmpa ();\n }\n+#endif"}]}