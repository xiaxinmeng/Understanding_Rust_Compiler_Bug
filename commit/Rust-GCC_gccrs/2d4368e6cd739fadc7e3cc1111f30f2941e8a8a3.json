{"sha": "2d4368e6cd739fadc7e3cc1111f30f2941e8a8a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0MzY4ZTZjZDczOWZhZGM3ZTNjYzExMTFmMzBmMjk0MWU4YThhMw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2001-10-16T00:43:21Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2001-10-16T00:43:21Z"}, "message": "rs6000.md (cr_logical): Swap order of CODE and MODE arguments to\n        gen_rtx and compare operand with const0_rtx.\n\nFrom-SVN: r46273", "tree": {"sha": "f46a1ce2ae72ffaeb19e4aee57b2ec3cc6e613ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f46a1ce2ae72ffaeb19e4aee57b2ec3cc6e613ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d4368e6cd739fadc7e3cc1111f30f2941e8a8a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4368e6cd739fadc7e3cc1111f30f2941e8a8a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4368e6cd739fadc7e3cc1111f30f2941e8a8a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4368e6cd739fadc7e3cc1111f30f2941e8a8a3/comments", "author": null, "committer": null, "parents": [{"sha": "0e91d384700c0c20da6718a50658b7ec5d672887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e91d384700c0c20da6718a50658b7ec5d672887", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e91d384700c0c20da6718a50658b7ec5d672887"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "781864d94198c5745b104b9a40b628c8bd563ec7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4368e6cd739fadc7e3cc1111f30f2941e8a8a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4368e6cd739fadc7e3cc1111f30f2941e8a8a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d4368e6cd739fadc7e3cc1111f30f2941e8a8a3", "patch": "@@ -1,3 +1,8 @@\n+2001-10-15  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.md (cr_logical): Swap order of CODE and\n+\tMODE arguments to gen_rtx and compare operand with const0_rtx.\n+\n 2001-10-15  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* system.h: Poison old unused target macros."}, {"sha": "a443c048a73c5d8641c1ce5bc1160f1bca614ce4", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4368e6cd739fadc7e3cc1111f30f2941e8a8a3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4368e6cd739fadc7e3cc1111f30f2941e8a8a3/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=2d4368e6cd739fadc7e3cc1111f30f2941e8a8a3", "patch": "@@ -12516,24 +12516,24 @@\n   positive_2 = branch_positive_comparison_operator (operands[3], CCEQmode);\n \n   if (! positive_1)\n-    operands[1] = gen_rtx (SImode,\n-\t\t\t   rs6000_reverse_condition (GET_MODE (operands[2]),\n+    operands[1] = gen_rtx (rs6000_reverse_condition (GET_MODE (operands[2]),\n \t\t\t\t\t\t     GET_CODE (operands[1])),\n-\t\t\t   operands[2]);\n+\t\t\t   SImode,\n+\t\t\t   operands[2], const0_rtx);\n   else if (GET_MODE (operands[1]) != SImode)\n-    operands[1] = gen_rtx (SImode,\n-\t\t\t   GET_CODE (operands[1]),\n-\t\t\t   operands[2]);\n+    operands[1] = gen_rtx (GET_CODE (operands[1]),\n+\t\t\t   SImode,\n+\t\t\t   operands[2], const0_rtx);\n \n   if (! positive_2)\n-    operands[3] = gen_rtx (SImode,\n-\t\t\t   rs6000_reverse_condition (GET_MODE (operands[4]),\n+    operands[3] = gen_rtx (rs6000_reverse_condition (GET_MODE (operands[4]),\n \t\t\t\t\t\t     GET_CODE (operands[3])),\n-\t\t\t   operands[4]);\n+\t\t\t   SImode,\n+\t\t\t   operands[4], const0_rtx);\n   else if (GET_MODE (operands[3]) != SImode)\n-    operands[3] = gen_rtx (SImode,\n-\t\t\t   GET_CODE (operands[3]),\n-\t\t\t   operands[4]);\n+    operands[3] = gen_rtx (GET_CODE (operands[3]),\n+\t\t\t   SImode,\n+\t\t\t   operands[4], const0_rtx);\n \n   if (positive_1 == positive_2)\n     {"}]}