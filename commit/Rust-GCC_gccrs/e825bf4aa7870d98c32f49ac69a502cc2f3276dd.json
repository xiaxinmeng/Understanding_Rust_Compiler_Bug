{"sha": "e825bf4aa7870d98c32f49ac69a502cc2f3276dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgyNWJmNGFhNzg3MGQ5OGMzMmY0OWFjNjlhNTAyY2MyZjMyNzZkZA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2000-08-18T11:01:22Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2000-08-18T11:01:22Z"}, "message": "valarray_meta.h (_Expr<>::shift, [...]): Implement.\n\n\t* bits/valarray_meta.h (_Expr<>::shift, _Expr::cshift,\n\t_Expr<>::apply): Implement.\n\nFrom-SVN: r35785", "tree": {"sha": "a2efecd400051bf4fb44cb182275ed01228ba218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2efecd400051bf4fb44cb182275ed01228ba218"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e825bf4aa7870d98c32f49ac69a502cc2f3276dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e825bf4aa7870d98c32f49ac69a502cc2f3276dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e825bf4aa7870d98c32f49ac69a502cc2f3276dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e825bf4aa7870d98c32f49ac69a502cc2f3276dd/comments", "author": null, "committer": null, "parents": [{"sha": "2ae7bada94874ae1a4c6f0b4d3c1027c38e00aea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae7bada94874ae1a4c6f0b4d3c1027c38e00aea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae7bada94874ae1a4c6f0b4d3c1027c38e00aea"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "273a0abd23c8003055304c7817866fb5cabac256", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e825bf4aa7870d98c32f49ac69a502cc2f3276dd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e825bf4aa7870d98c32f49ac69a502cc2f3276dd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e825bf4aa7870d98c32f49ac69a502cc2f3276dd", "patch": "@@ -1,3 +1,8 @@\n+2000-08-18  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* bits/valarray_meta.h (_Expr<>::shift, _Expr::cshift,\n+\t_Expr<>::apply): Implement. \n+\n 2000-08-18  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* bits/valarray_meta.h (_Expr<>::min, _Expr<>::max): Implement."}, {"sha": "df637d0684abbeaa4d82261b5527228a9c0814f4", "filename": "libstdc++-v3/bits/valarray_meta.h", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e825bf4aa7870d98c32f49ac69a502cc2f3276dd/libstdc%2B%2B-v3%2Fbits%2Fvalarray_meta.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e825bf4aa7870d98c32f49ac69a502cc2f3276dd/libstdc%2B%2B-v3%2Fbits%2Fvalarray_meta.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fvalarray_meta.h?ref=e825bf4aa7870d98c32f49ac69a502cc2f3276dd", "patch": "@@ -672,10 +672,9 @@ namespace std {\n \n       value_type min() const;\n       value_type max() const;\n-//     _Meta<_ApplyFunctionWithValue<_Expr>, value_type>\n-//     apply (value_type _M_func (value_type)) const;\n-//     _Meta<_ApplyFunctionWithConstRef<_Expr>, value_type>\n-//     apply (value_type _M_func (const value_type&)) const;\n+\n+      valarray<value_type> apply(value_type (*) (const value_type&)) const;\n+      valarray<value_type> apply(value_type (*) (value_type)) const;\n         \n     private:\n         const _Clos _M_closure;\n@@ -718,7 +717,27 @@ namespace std {\n     template<class _Clos, typename _Tp>\n     inline size_t\n     _Expr<_Clos,_Tp>::size () const  { return _M_closure.size (); }\n+\n+  template<class _Clos, typename _Tp>\n+  inline valarray<_Tp>\n+  _Expr<_Clos, _Tp>::shift(int __n) const\n+  { return valarray<_Tp>(_M_closure).shift(__n); }\n+\n+  template<class _Clos, typename _Tp>\n+  inline valarray<_Tp>\n+  _Expr<_Clos, _Tp>::cshift(int __n) const\n+  { return valarray<_Tp>(_M_closure).cshift(__n); }\n+\n+  ttemplate<class _Clos, typename _Tp>\n+  inline valarray<_Tp>\n+  _Expr<_Clos, _Tp>::apply(_Tp __f(const _Tp&)) const\n+  { return valarray<_Tp>(_M_closure).apply(__f); }\n     \n+  ttemplate<class _Clos, typename _Tp>\n+  inline valarray<_Tp>\n+  _Expr<_Clos, _Tp>::apply(_Tp __f(_Tp)) const\n+  { return valarray<_Tp>(_M_closure).apply(__f); }\n+\n     // XXX: replace this with a more robust summation algorithm.\n     template<class _Clos, typename _Tp>\n     inline _Tp"}]}