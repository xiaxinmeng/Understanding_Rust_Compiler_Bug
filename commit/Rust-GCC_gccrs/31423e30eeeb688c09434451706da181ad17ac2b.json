{"sha": "31423e30eeeb688c09434451706da181ad17ac2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE0MjNlMzBlZWViNjg4YzA5NDM0NDUxNzA2ZGExODFhZDE3YWMyYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-05-03T16:39:50Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-05-03T16:39:50Z"}, "message": "com.c (ffecom_do_entry_): Use location_t and input_location directly.\n\n\t* com.c (ffecom_do_entry_): Use location_t and input_location\n\tdirectly.\n\t(ffecom_gen_sfuncdef_): Likewise.\n\t(ffecom_start_progunit_): Likewise.\n\t(ffecom_sym_transform_): Likewise.\n\t(ffecom_sym_transform_assign_): Likewise.\n\t* lex.c (ffelex_hash_): Likewise.\n\t(ffelex_include_): Likewise.\n\t* std.c (ffestd_exec_begin): Likewise.\n\t(ffestd_exec_end): Likewise.\n\t* ste.c (struct gbe_block): Likewise.\n\t(ffeste_start_block_): Likewise.\n\t(ffeste_start_stmt_): Likewise.\n\nFrom-SVN: r66432", "tree": {"sha": "0d5819f6b3ce73d7fa9752f37cbda68842d32200", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d5819f6b3ce73d7fa9752f37cbda68842d32200"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31423e30eeeb688c09434451706da181ad17ac2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31423e30eeeb688c09434451706da181ad17ac2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31423e30eeeb688c09434451706da181ad17ac2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31423e30eeeb688c09434451706da181ad17ac2b/comments", "author": null, "committer": null, "parents": [{"sha": "5a43f8c419e41730a6d6cf824395f1de2fa9dd9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a43f8c419e41730a6d6cf824395f1de2fa9dd9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a43f8c419e41730a6d6cf824395f1de2fa9dd9e"}], "stats": {"total": 85, "additions": 42, "deletions": 43}, "files": [{"sha": "503e851b971e9734f2886fdb404360a49e9064e5", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31423e30eeeb688c09434451706da181ad17ac2b/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31423e30eeeb688c09434451706da181ad17ac2b/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=31423e30eeeb688c09434451706da181ad17ac2b", "patch": "@@ -1,3 +1,19 @@\n+2003-05-03  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* com.c (ffecom_do_entry_): Use location_t and input_location\n+\tdirectly.\n+\t(ffecom_gen_sfuncdef_): Likewise.\n+\t(ffecom_start_progunit_): Likewise.\n+\t(ffecom_sym_transform_): Likewise.\n+\t(ffecom_sym_transform_assign_): Likewise.\n+\t* lex.c (ffelex_hash_): Likewise.\n+\t(ffelex_include_): Likewise.\n+\t* std.c (ffestd_exec_begin): Likewise.\n+\t(ffestd_exec_end): Likewise.\n+\t* ste.c (struct gbe_block): Likewise.\n+\t(ffeste_start_block_): Likewise.\n+\t(ffeste_start_stmt_): Likewise.\n+\n 2003-05-03  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* ansify.c (die_unless): Revert lineno change here."}, {"sha": "36658f2ce72cf4f339f917d4cda47fc25d1d2fbe", "filename": "gcc/f/com.c", "status": "modified", "additions": 14, "deletions": 23, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31423e30eeeb688c09434451706da181ad17ac2b/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31423e30eeeb688c09434451706da181ad17ac2b/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=31423e30eeeb688c09434451706da181ad17ac2b", "patch": "@@ -2582,9 +2582,9 @@ ffecom_do_entry_ (ffesymbol fn, int entrynum)\n \t\t\t\t   CHARACTER. */\n   bool cmplxfunc;\t\t/* Use f2c way of returning COMPLEX. */\n   bool multi;\t\t\t/* Master fn has multiple return types. */\n-  bool altreturning = FALSE;\t/* This entry point has alternate returns. */\n-  int old_lineno = input_line;\n-  const char *old_input_filename = input_filename;\n+  bool altreturning = FALSE;\t/* This entry point has alternate\n+\t\t\t\t   returns. */\n+  location_t old_loc = input_location;\n \n   input_filename = ffesymbol_where_filename (fn);\n   input_line = ffesymbol_where_filelinenum (fn);\n@@ -2917,9 +2917,8 @@ ffecom_do_entry_ (ffesymbol fn, int entrynum)\n \n   finish_function (0);\n \n-  input_line = old_lineno;\n-  input_filename = old_input_filename;\n-\n+  input_location = old_loc;\n+  \n   ffecom_doing_entry_ = FALSE;\n }\n \n@@ -6110,8 +6109,7 @@ ffecom_gen_sfuncdef_ (ffesymbol s, ffeinfoBasictype bt, ffeinfoKindtype kt)\n   tree result;\n   bool charfunc = (bt == FFEINFO_basictypeCHARACTER);\n   static bool recurse = FALSE;\n-  int old_lineno = input_line;\n-  const char *old_input_filename = input_filename;\n+  location_t old_loc = input_location;\n \n   ffecom_nested_entry_ = s;\n \n@@ -6221,8 +6219,7 @@ ffecom_gen_sfuncdef_ (ffesymbol s, ffeinfoBasictype bt, ffeinfoKindtype kt)\n \n   recurse = FALSE;\n \n-  input_line = old_lineno;\n-  input_filename = old_input_filename;\n+  input_location = old_loc;\n \n   ffecom_nested_entry_ = NULL;\n \n@@ -7080,8 +7077,7 @@ ffecom_start_progunit_ ()\n   && (ffecom_primary_entry_kind_ == FFEINFO_kindFUNCTION)\n   && (ffecom_master_bt_ == FFEINFO_basictypeNONE);\n   bool main_program = FALSE;\n-  int old_lineno = input_line;\n-  const char *old_input_filename = input_filename;\n+  location_t old_loc = input_location;\n \n   assert (fn != NULL);\n   assert (ffesymbol_hook (fn).decl_tree == NULL_TREE);\n@@ -7269,8 +7265,7 @@ ffecom_start_progunit_ ()\n   /* Disallow temp vars at this level.  */\n   current_binding_level->prep_state = 2;\n \n-  input_line = old_lineno;\n-  input_filename = old_input_filename;\n+  input_location = old_loc;\n \n   /* This handles any symbols still untransformed, in case -g specified.\n      This used to be done in ffecom_finish_progunit, but it turns out to\n@@ -7298,9 +7293,8 @@ ffecom_sym_transform_ (ffesymbol s)\n   ffeinfoBasictype bt;\n   ffeinfoKindtype kt;\n   ffeglobal g;\n-  int old_lineno = input_line;\n-  const char *old_input_filename = input_filename;\n-\n+  location_t old_loc = input_location;\n+  \n   /* Must ensure special ASSIGN variables are declared at top of outermost\n      block, else they'll end up in the innermost block when their first\n      ASSIGN is seen, which leaves them out of scope when they're the\n@@ -8294,8 +8288,7 @@ ffecom_sym_transform_ (ffesymbol s)\n   ffesymbol_hook (s).length_tree = tlen;\n   ffesymbol_hook (s).addr = addr;\n \n-  input_line = old_lineno;\n-  input_filename = old_input_filename;\n+  input_location = old_loc;\n \n   return s;\n }\n@@ -8312,8 +8305,7 @@ static ffesymbol\n ffecom_sym_transform_assign_ (ffesymbol s)\n {\n   tree t;\t\t\t/* Transformed thingy. */\n-  int old_lineno = input_line;\n-  const char *old_input_filename = input_filename;\n+  location_t old_loc = input_location;\n \n   if (ffesymbol_sfdummyparent (s) == NULL)\n     {\n@@ -8375,8 +8367,7 @@ ffecom_sym_transform_assign_ (ffesymbol s)\n \n   ffesymbol_hook (s).assign_tree = t;\n \n-  input_line = old_lineno;\n-  input_filename = old_input_filename;\n+  input_location = old_loc;\n \n   return s;\n }"}, {"sha": "0c1fdafa6a0b3215cfcd159895247a79232924fe", "filename": "gcc/f/lex.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31423e30eeeb688c09434451706da181ad17ac2b/gcc%2Ff%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31423e30eeeb688c09434451706da181ad17ac2b/gcc%2Ff%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flex.c?ref=31423e30eeeb688c09434451706da181ad17ac2b", "patch": "@@ -1193,8 +1193,7 @@ ffelex_hash_ (FILE *finput)\n   if ((token != NULL)\n       && (ffelex_token_type (token) == FFELEX_typeNUMBER))\n     {\n-      int old_lineno = input_line;\n-      const char *old_input_filename = input_filename;\n+      location_t old_loc = input_location;\n       ffewhereFile wf;\n \n       /* subtract one, because it is the following line that\n@@ -1281,14 +1280,14 @@ ffelex_hash_ (FILE *finput)\n \t  if (ffelex_kludge_flag_)\n \t    {\n \t      input_line = 1;\n-\t      input_filename = old_input_filename;\n+\t      input_filename = old_loc.file;\n \t      error (\"use `#line ...' instead of `# ...' in first line\");\n \t    }\n \n \t  if (num == 1)\n \t    {\n \t      /* Pushing to a new file.  */\n-\t      ffelex_file_push_ (old_lineno, input_filename);\n+\t      ffelex_file_push_ (old_loc.line, input_filename);\n \t    }\n \t  else if (num == 2)\n \t    {\n@@ -1325,7 +1324,7 @@ ffelex_hash_ (FILE *finput)\n \t  && ffelex_kludge_flag_)\n \t{\n \t  input_line = 1;\n-\t  input_filename = old_input_filename;\n+\t  input_filename = old_loc.file;\n \t  error (\"use `#line ...' instead of `# ...' in first line\");\n \t}\n       if (c == '\\n' || c == EOF)\n@@ -1470,8 +1469,7 @@ ffelex_include_ ()\n   ffewhereLineNumber linecount_current = ffelex_linecount_current_;\n   ffewhereLineNumber linecount_offset\n     = ffewhere_line_filelinenum (current_wl);\n-  int old_lineno = input_line;\n-  const char *old_input_filename = input_filename;\n+  location_t old_loc = input_location;\n \n   if (card_length != 0)\n     {\n@@ -1489,7 +1487,7 @@ ffelex_include_ ()\n \n   ffewhere_file_set (include_wherefile, TRUE, 0);\n \n-  ffelex_file_push_ (old_lineno, ffewhere_file_name (include_wherefile));\n+  ffelex_file_push_ (old_loc.line, ffewhere_file_name (include_wherefile));\n \n   if (ffelex_include_free_form_)\n     ffelex_file_free (include_wherefile, include_file);\n@@ -1512,8 +1510,7 @@ ffelex_include_ ()\n     }\n   ffelex_card_image_[card_length] = '\\0';\n \n-  input_filename = old_input_filename;\n-  input_line = old_lineno;\n+  input_location = old_loc;\n   ffelex_linecount_current_ = linecount_current;\n   ffelex_current_wf_ = current_wf;\n   ffelex_final_nontab_column_ = final_nontab_column;"}, {"sha": "27b5bfeb24ad76ef449c6f4cc4889dca7b17795f", "filename": "gcc/f/std.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31423e30eeeb688c09434451706da181ad17ac2b/gcc%2Ff%2Fstd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31423e30eeeb688c09434451706da181ad17ac2b/gcc%2Ff%2Fstd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstd.c?ref=31423e30eeeb688c09434451706da181ad17ac2b", "patch": "@@ -1423,8 +1423,7 @@ ffestd_exec_begin ()\n void\n ffestd_exec_end ()\n {\n-  int old_lineno = input_line;\n-  const char *old_input_filename = input_filename;\n+  location_t old_loc = input_location;\n \n   ffecom_end_transition ();\n \n@@ -1456,8 +1455,7 @@ ffestd_exec_end ()\n   ffestd_stmt_list_.last = NULL;\n   ffestd_2pass_entrypoints_ = 0;\n \n-  input_line = old_lineno;\n-  input_filename = old_input_filename;\n+  input_location = old_loc;\n }\n \n /* ffestd_init_3 -- Initialize for any program unit"}, {"sha": "f27c93ec2969d983a1cac31d03c1290f3bcca32c", "filename": "gcc/f/ste.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31423e30eeeb688c09434451706da181ad17ac2b/gcc%2Ff%2Fste.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31423e30eeeb688c09434451706da181ad17ac2b/gcc%2Ff%2Fste.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fste.c?ref=31423e30eeeb688c09434451706da181ad17ac2b", "patch": "@@ -387,8 +387,7 @@ typedef struct gbe_block\n {\n   struct gbe_block *outer;\n   ffestw block;\n-  int lineno;\n-  const char *filename;\n+  location_t location;\n   bool is_stmt;\n } *gbe_block;\n \n@@ -401,8 +400,7 @@ ffeste_start_block_ (ffestw block)\n \n   b->outer = ffeste_top_block_;\n   b->block = block;\n-  b->lineno = input_line;\n-  b->filename = input_filename;\n+  b->location = input_location;\n   b->is_stmt = FALSE;\n \n   ffeste_top_block_ = b;\n@@ -443,8 +441,7 @@ ffeste_start_stmt_(void)\n \n   b->outer = ffeste_top_block_;\n   b->block = NULL;\n-  b->lineno = input_line;\n-  b->filename = input_filename;\n+  b->location = input_location;\n   b->is_stmt = TRUE;\n \n   ffeste_top_block_ = b;"}]}