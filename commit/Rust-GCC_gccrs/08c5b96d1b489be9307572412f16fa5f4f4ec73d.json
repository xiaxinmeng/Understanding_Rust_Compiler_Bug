{"sha": "08c5b96d1b489be9307572412f16fa5f4f4ec73d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhjNWI5NmQxYjQ4OWJlOTMwNzU3MjQxMmYxNmZhNWY0ZjRlYzczZA==", "commit": {"author": {"name": "J. Brobecker", "email": "brobecker@gnat.com", "date": "2003-10-20T23:21:30Z"}, "committer": {"name": "Joel Brobecker", "email": "brobecke@gcc.gnu.org", "date": "2003-10-20T23:21:30Z"}, "message": "cplus-dem.c (demangle_template): Register a new Btype only when needed.\n\n        * cplus-dem.c (demangle_template): Register a new Btype only\n        when needed.\n        * testsuite/demangle-expected: Add a new test.\n\nFrom-SVN: r72729", "tree": {"sha": "c410c364acf6f3682b3033887a3663d841cccefe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c410c364acf6f3682b3033887a3663d841cccefe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08c5b96d1b489be9307572412f16fa5f4f4ec73d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c5b96d1b489be9307572412f16fa5f4f4ec73d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c5b96d1b489be9307572412f16fa5f4f4ec73d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c5b96d1b489be9307572412f16fa5f4f4ec73d/comments", "author": null, "committer": null, "parents": [{"sha": "9540958eff5708adcb43b901c168ca00f8a86f3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9540958eff5708adcb43b901c168ca00f8a86f3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9540958eff5708adcb43b901c168ca00f8a86f3a"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "6264fbf5a0b9e82a7a1dbcb5654c62d2847aac57", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c5b96d1b489be9307572412f16fa5f4f4ec73d/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c5b96d1b489be9307572412f16fa5f4f4ec73d/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=08c5b96d1b489be9307572412f16fa5f4f4ec73d", "patch": "@@ -1,3 +1,9 @@\n+2003-10-20  J. Brobecker  <brobecker@gnat.com>\n+\n+\t* cplus-dem.c (demangle_template): Register a new Btype only\n+\twhen needed.\n+\t* testsuite/demangle-expected: Add a new test.\n+\n 2003-10-16  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* testsuite/demangle-expected: Update the expected output of"}, {"sha": "5e2e7a7126c1321190b959164ebf8f07cf3b3d50", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c5b96d1b489be9307572412f16fa5f4f4ec73d/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c5b96d1b489be9307572412f16fa5f4f4ec73d/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=08c5b96d1b489be9307572412f16fa5f4f4ec73d", "patch": "@@ -2043,13 +2043,10 @@ demangle_template (work, mangled, tname, trawname, is_type, remember)\n   const char *start;\n   int is_java_array = 0;\n   string temp;\n-  int bindex = 0;\n \n   (*mangled)++;\n   if (is_type)\n     {\n-      if (remember)\n-\tbindex = register_Btype (work);\n       start = *mangled;\n       /* get template name */\n       if (**mangled == 'z')\n@@ -2226,7 +2223,10 @@ demangle_template (work, mangled, tname, trawname, is_type, remember)\n     }\n \n   if (is_type && remember)\n-    remember_Btype (work, tname->b, LEN_STRING (tname), bindex);\n+    {\n+      const int bindex = register_Btype (work);\n+      remember_Btype (work, tname->b, LEN_STRING (tname), bindex);\n+    }\n \n   /*\n     if (work -> static_type)"}, {"sha": "8dfab8e9bd0c1bf9f67feff6a99280ef91eebfe2", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c5b96d1b489be9307572412f16fa5f4f4ec73d/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c5b96d1b489be9307572412f16fa5f4f4ec73d/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=08c5b96d1b489be9307572412f16fa5f4f4ec73d", "patch": "@@ -2864,3 +2864,9 @@ r(int (G::*)(), int (G::*)() const, G, int (H::*)(), int (G::*)(), what<G const>\n --format=auto\n __CPR212____ct__Q3_3std141list__tm__128_Q2_3edm41THandle__tm__26_Q2_4emid15EMparticleChunkQ2_3std68allocator__tm__51_Q2_3edmJ37J14const_iteratorFRCQ3_3std18list__tm__7_Z1ZZ2Z8iterator\n __CPR212____ct__Q3_3std141list__tm__128_Q2_3edm41THandle__tm__26_Q2_4emid15EMparticleChunkQ2_3std68allocator__tm__51_Q2_3edmJ37J14const_iteratorFRCQ3_3std18list__tm__7_Z1ZZ2Z8iterator\n+#\n+# This used to cause a crash. It doesn't follow the C++ encoding so\n+# the demangled name should be identical to the original symbol name.\n+--format=auto\n+_test_array__L_1__B23b___clean.6\n+_test_array__L_1__B23b___clean.6"}]}