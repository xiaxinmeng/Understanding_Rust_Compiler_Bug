{"sha": "a1c3776604184797b285078a4e3ff5250abaa44d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFjMzc3NjYwNDE4NDc5N2IyODUwNzhhNGUzZmY1MjUwYWJhYTQ0ZA==", "commit": {"author": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-01-10T22:33:45Z"}, "committer": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-01-10T22:33:45Z"}, "message": "# Fix misspellings in comments.\n\nFrom-SVN: r3182", "tree": {"sha": "9ae5a78fb4998badb785b66be14d6e714fdc2645", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ae5a78fb4998badb785b66be14d6e714fdc2645"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1c3776604184797b285078a4e3ff5250abaa44d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c3776604184797b285078a4e3ff5250abaa44d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c3776604184797b285078a4e3ff5250abaa44d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c3776604184797b285078a4e3ff5250abaa44d/comments", "author": null, "committer": null, "parents": [{"sha": "8008b228017883a466865c19bc34ef261f7bb088", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8008b228017883a466865c19bc34ef261f7bb088", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8008b228017883a466865c19bc34ef261f7bb088"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "79be0499a630e3a9e0748fea2239fdac19db68aa", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c3776604184797b285078a4e3ff5250abaa44d/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c3776604184797b285078a4e3ff5250abaa44d/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=a1c3776604184797b285078a4e3ff5250abaa44d", "patch": "@@ -2204,7 +2204,7 @@ process_command (argc, argv)\n       else if (argv[i][0] == '+' && argv[i][1] == 'e')\n \t{\n \t  /* Compensate for the +e options to the C++ front-end;\n-\t     they're there simply for cfront call-compatability.  We do\n+\t     they're there simply for cfront call-compatibility.  We do\n \t     some magic in default_compilers to pass them down properly.\n \t     Note we deliberately start at the `+' here, to avoid passing\n \t     -e0 or -e1 down into the linker.  */"}, {"sha": "efd1edb21c6fb43ce65e98efda1a88a3ec54c693", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c3776604184797b285078a4e3ff5250abaa44d/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c3776604184797b285078a4e3ff5250abaa44d/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=a1c3776604184797b285078a4e3ff5250abaa44d", "patch": "@@ -62,10 +62,10 @@ typedef\t\tfloat XFtype\t__attribute__ ((mode (XF)));\n typedef\t\tfloat TFtype\t__attribute__ ((mode (TF)));\n #endif\n \n-/* Make sure that we don't accidentaly use any normal C language built-in\n+/* Make sure that we don't accidentally use any normal C language built-in\n    type names in the first part of this file.  Instead we want to use *only*\n    the type names defined above.  The following macro definitions insure\n-   that if we *do* accidently use soem normal C language built-in type name,\n+   that if we *do* accidentally use soem normal C language built-in type name,\n    we will get a syntax error.  */\n \n #define char bogus_type"}]}