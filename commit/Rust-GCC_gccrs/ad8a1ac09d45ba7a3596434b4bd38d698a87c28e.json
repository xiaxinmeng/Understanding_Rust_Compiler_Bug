{"sha": "ad8a1ac09d45ba7a3596434b4bd38d698a87c28e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ4YTFhYzA5ZDQ1YmE3YTM1OTY0MzRiNGJkMzhkNjk4YTg3YzI4ZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-21T12:42:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-21T12:42:24Z"}, "message": "re PR tree-optimization/39829 (ICE with some code that produces VCE)\n\n2009-04-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/39829\n\t* gimple.c (walk_stmt_load_store_addr_ops): Catch addresses\n\tinside VIEW_CONVERT_EXPRs.\n\n\t* gcc.dg/torture/pr39829.c: New testcase.\n\nFrom-SVN: r146521", "tree": {"sha": "22d69e3254dfc52ade3d116fba35897999da5b53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22d69e3254dfc52ade3d116fba35897999da5b53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7156c8abaf8f39f797463f60ec353b86c5c95bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7156c8abaf8f39f797463f60ec353b86c5c95bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7156c8abaf8f39f797463f60ec353b86c5c95bf6"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "589426280a583971fd924861af17ded829b3ddf4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad8a1ac09d45ba7a3596434b4bd38d698a87c28e", "patch": "@@ -1,3 +1,9 @@\n+2009-04-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/39829\n+\t* gimple.c (walk_stmt_load_store_addr_ops): Catch addresses\n+\tinside VIEW_CONVERT_EXPRs.\n+\n 2009-04-21  Martin Jambor  <mjambor@suse.cz>\n \n \t* tree-switch-conversion.c (build_constructors): Split a long line."}, {"sha": "5487cbc380d191fe5846713a6fe23fc1cc6c0406", "filename": "gcc/gimple.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=ad8a1ac09d45ba7a3596434b4bd38d698a87c28e", "patch": "@@ -3231,6 +3231,8 @@ walk_stmt_load_store_addr_ops (gimple stmt, void *data,\n \t    ret |= visit_store (stmt, lhs, data);\n \t}\n       rhs = gimple_assign_rhs1 (stmt);\n+      while (handled_component_p (rhs))\n+\trhs = TREE_OPERAND (rhs, 0);\n       if (visit_addr)\n \t{\n \t  if (TREE_CODE (rhs) == ADDR_EXPR)"}, {"sha": "066f4ea26c83b835d6227b3b1f77e9012502c868", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad8a1ac09d45ba7a3596434b4bd38d698a87c28e", "patch": "@@ -1,3 +1,8 @@\n+2009-04-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/39829\n+\t* gcc.dg/torture/pr39829.c: New testcase.\n+\n 2009-04-21  Martin Jambor  <mjambor@suse.cz>\n \n \t* gcc.dg/tree-ssa/cswtch-2.c: New test."}, {"sha": "da15a56e106d6744a41a67c589937a73697e060f", "filename": "gcc/testsuite/gcc.dg/torture/pr39829.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr39829.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad8a1ac09d45ba7a3596434b4bd38d698a87c28e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr39829.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr39829.c?ref=ad8a1ac09d45ba7a3596434b4bd38d698a87c28e", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-w\" } */\n+\n+void foo (void * DAG_temp117584)\n+{\n+  char  uA;\n+  void* pA;\n+  void* pB;\n+  void* pC;\n+  do {\n+      int DAG_temp117585;\n+      int DAG_temp117586;\n+      void ** __indir_union1 = (void**)DAG_temp117584;\n+      DAG_temp117585 = (long)*__indir_union1;\n+      DAG_temp117586 = DAG_temp117585;\n+      if ( DAG_temp117586 != (int)268435456 )\n+\tpA = (void*)&uA;\n+      pB = (void*)&pA;\n+      pC = pB;\n+      union __block_indir0_u {  struct {  long val; }  __indir_struct; }\n+      * __indir_union = (union __block_indir0_u*)pC;\n+      f(__indir_union->__indir_struct.val);\n+\n+      DAG_temp117584 += 64;\n+  } while (1);\n+}\n+"}]}