{"sha": "fc2d730302da5cdf340a5100882337a807097f47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMyZDczMDMwMmRhNWNkZjM0MGE1MTAwODgyMzM3YTgwNzA5N2Y0Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-10-14T14:03:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-10-14T14:03:35Z"}, "message": "re PR middle-end/92046 (Command line options (that are per-functions) are affecting --params which are global.)\n\n2019-10-14  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/92046\n\t* dse.c (scan_insn): Use param max_active_local_stores.\n\t(dse_step1): Get PARAM_MAX_DSE_ACTIVE_LOCAL_STORES and adjust\n\tbased on optimization level.\n\t* loop-invariant.c (move_loop_invariants): Adjust\n\tLOOP_INVARIANT_MAX_BBS_IN_LOOP based on optimization level.\n\t* opts.c (default_options_optimization): Do not adjust\n\tPARAM_MAX_DSE_ACTIVE_LOCAL_STORES and\n\tLOOP_INVARIANT_MAX_BBS_IN_LOOP here.\n\nFrom-SVN: r276963", "tree": {"sha": "65f3e0e6394e85f54af41bfd50cfafb1c0fc8c59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65f3e0e6394e85f54af41bfd50cfafb1c0fc8c59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc2d730302da5cdf340a5100882337a807097f47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc2d730302da5cdf340a5100882337a807097f47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc2d730302da5cdf340a5100882337a807097f47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc2d730302da5cdf340a5100882337a807097f47/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2317d50ae2402e5335f2ed807a166359565566b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2317d50ae2402e5335f2ed807a166359565566b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2317d50ae2402e5335f2ed807a166359565566b"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "5db905719bac8c8d1b105696977c0ce3f29d12a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc2d730302da5cdf340a5100882337a807097f47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc2d730302da5cdf340a5100882337a807097f47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc2d730302da5cdf340a5100882337a807097f47", "patch": "@@ -1,3 +1,15 @@\n+2019-10-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/92046\n+\t* dse.c (scan_insn): Use param max_active_local_stores.\n+\t(dse_step1): Get PARAM_MAX_DSE_ACTIVE_LOCAL_STORES and adjust\n+\tbased on optimization level.\n+\t* loop-invariant.c (move_loop_invariants): Adjust\n+\tLOOP_INVARIANT_MAX_BBS_IN_LOOP based on optimization level.\n+\t* opts.c (default_options_optimization): Do not adjust\n+\tPARAM_MAX_DSE_ACTIVE_LOCAL_STORES and\n+\tLOOP_INVARIANT_MAX_BBS_IN_LOOP here.\n+\n 2019-10-14  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/arm/arm.c (arm_legitimize_address): Remove Thumb-2 bailout."}, {"sha": "5d8c6f990ec69e97e8b2cc723891a96b7e08c1c2", "filename": "gcc/dse.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc2d730302da5cdf340a5100882337a807097f47/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc2d730302da5cdf340a5100882337a807097f47/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=fc2d730302da5cdf340a5100882337a807097f47", "patch": "@@ -2401,7 +2401,7 @@ copy_fixed_regs (const_bitmap in)\n    non-register target.  */\n \n static void\n-scan_insn (bb_info_t bb_info, rtx_insn *insn)\n+scan_insn (bb_info_t bb_info, rtx_insn *insn, int max_active_local_stores)\n {\n   rtx body;\n   insn_info_type *insn_info = insn_info_type_pool.allocate ();\n@@ -2523,8 +2523,7 @@ scan_insn (bb_info_t bb_info, rtx_insn *insn)\n \t\t    fprintf (dump_file, \"handling memset as BLKmode store\\n\");\n \t\t  if (mems_found == 1)\n \t\t    {\n-\t\t      if (active_local_stores_len++\n-\t\t\t  >= PARAM_VALUE (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES))\n+\t\t      if (active_local_stores_len++ >= max_active_local_stores)\n \t\t\t{\n \t\t\t  active_local_stores_len = 1;\n \t\t\t  active_local_stores = NULL;\n@@ -2584,8 +2583,7 @@ scan_insn (bb_info_t bb_info, rtx_insn *insn)\n      it as cannot delete.  This simplifies the processing later.  */\n   if (mems_found == 1)\n     {\n-      if (active_local_stores_len++\n-\t  >= PARAM_VALUE (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES))\n+      if (active_local_stores_len++ >= max_active_local_stores)\n \t{\n \t  active_local_stores_len = 1;\n \t  active_local_stores = NULL;\n@@ -2657,6 +2655,12 @@ dse_step1 (void)\n   bitmap_set_bit (all_blocks, ENTRY_BLOCK);\n   bitmap_set_bit (all_blocks, EXIT_BLOCK);\n \n+  /* For -O1 reduce the maximum number of active local stores for RTL DSE\n+     since this can consume huge amounts of memory (PR89115).  */\n+  int max_active_local_stores = PARAM_VALUE (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES);\n+  if (optimize < 2)\n+    max_active_local_stores /= 10;\n+\n   FOR_ALL_BB_FN (bb, cfun)\n     {\n       insn_info_t ptr;\n@@ -2684,7 +2688,7 @@ dse_step1 (void)\n \t  FOR_BB_INSNS (bb, insn)\n \t    {\n \t      if (INSN_P (insn))\n-\t\tscan_insn (bb_info, insn);\n+\t\tscan_insn (bb_info, insn, max_active_local_stores);\n \t      cselib_process_insn (insn);\n \t      if (INSN_P (insn))\n \t\tdf_simulate_one_insn_forwards (bb, insn, regs_live);"}, {"sha": "ef46c8aea22dac2ff522292f89f8583205172723", "filename": "gcc/loop-invariant.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc2d730302da5cdf340a5100882337a807097f47/gcc%2Floop-invariant.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc2d730302da5cdf340a5100882337a807097f47/gcc%2Floop-invariant.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-invariant.c?ref=fc2d730302da5cdf340a5100882337a807097f47", "patch": "@@ -2276,9 +2276,13 @@ move_loop_invariants (void)\n   FOR_EACH_LOOP (loop, LI_FROM_INNERMOST)\n     {\n       curr_loop = loop;\n-      /* move_single_loop_invariants for very large loops\n-\t is time consuming and might need a lot of memory.  */\n-      if (loop->num_nodes <= (unsigned) LOOP_INVARIANT_MAX_BBS_IN_LOOP)\n+      /* move_single_loop_invariants for very large loops is time consuming\n+\t and might need a lot of memory.  For -O1 only do loop invariant\n+\t motion for very small loops.  */\n+      unsigned max_bbs = LOOP_INVARIANT_MAX_BBS_IN_LOOP;\n+      if (optimize < 2)\n+\tmax_bbs /= 10;\n+      if (loop->num_nodes <= max_bbs)\n \tmove_single_loop_invariants (loop);\n     }\n "}, {"sha": "ff95853845e3d241cb3bb929aca04c80ca84f881", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc2d730302da5cdf340a5100882337a807097f47/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc2d730302da5cdf340a5100882337a807097f47/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=fc2d730302da5cdf340a5100882337a807097f47", "patch": "@@ -671,21 +671,6 @@ default_options_optimization (struct gcc_options *opts,\n      opt2 ? 100 : default_param_value (PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE),\n      opts->x_param_values, opts_set->x_param_values);\n \n-  /* For -O1 only do loop invariant motion for very small loops.  */\n-  maybe_set_param_value\n-    (PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP,\n-     opt2 ? default_param_value (PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP)\n-     : default_param_value (PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP) / 10,\n-     opts->x_param_values, opts_set->x_param_values);\n-\n-  /* For -O1 reduce the maximum number of active local stores for RTL DSE\n-     since this can consume huge amounts of memory (PR89115).  */\n-  maybe_set_param_value\n-    (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES,\n-     opt2 ? default_param_value (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES)\n-     : default_param_value (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES) / 10,\n-     opts->x_param_values, opts_set->x_param_values);\n-\n   /* At -Ofast, allow store motion to introduce potential race conditions.  */\n   maybe_set_param_value\n     (PARAM_ALLOW_STORE_DATA_RACES,"}]}