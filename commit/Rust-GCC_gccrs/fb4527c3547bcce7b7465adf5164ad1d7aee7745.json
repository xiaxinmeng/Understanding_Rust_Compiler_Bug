{"sha": "fb4527c3547bcce7b7465adf5164ad1d7aee7745", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI0NTI3YzM1NDdiY2NlN2I3NDY1YWRmNTE2NGFkMWQ3YWVlNzc0NQ==", "commit": {"author": {"name": "Neil Booth", "email": "neilb@earthling.net", "date": "2000-05-10T09:11:06Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2000-05-10T09:11:06Z"}, "message": "cpplex.c (_cpp_lex_line): Maintain PREV_WHITESPACE flag when removing escaped newlines.\n\n        * cpplex.c (_cpp_lex_line): Maintain PREV_WHITESPACE flag\n        when removing escaped newlines.  Reverse sense of test for\n        escaped newline.\n\nFrom-SVN: r33816", "tree": {"sha": "809b131b60c8d731244973f0c075e172802ed345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/809b131b60c8d731244973f0c075e172802ed345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb4527c3547bcce7b7465adf5164ad1d7aee7745", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4527c3547bcce7b7465adf5164ad1d7aee7745", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb4527c3547bcce7b7465adf5164ad1d7aee7745", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb4527c3547bcce7b7465adf5164ad1d7aee7745/comments", "author": null, "committer": null, "parents": [{"sha": "62c3ad8bb2e737d1d8ec1db767ce2e8c05bd87b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c3ad8bb2e737d1d8ec1db767ce2e8c05bd87b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c3ad8bb2e737d1d8ec1db767ce2e8c05bd87b3"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "654951d127865aa9cc965203b7e21c83afa75a65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4527c3547bcce7b7465adf5164ad1d7aee7745/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4527c3547bcce7b7465adf5164ad1d7aee7745/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb4527c3547bcce7b7465adf5164ad1d7aee7745", "patch": "@@ -1,3 +1,9 @@\n+Wed 10 May 09:08:30 2000  Neil Booth  <NeilB@earthling.net>\n+\n+        * cpplex.c (_cpp_lex_line): Maintain PREV_WHITESPACE flag\n+        when removing escaped newlines.  Reverse sense of test for\n+        escaped newline.\n+\n 2000-05-09  Richard Henderson  <rth@cygnus.com>\n \n \t* flow.c (find_basic_blocks_1): Do not delete the first"}, {"sha": "c828eef7724cff82f281a1c74093ec935e7477b7", "filename": "gcc/cpplex.c", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb4527c3547bcce7b7465adf5164ad1d7aee7745/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb4527c3547bcce7b7465adf5164ad1d7aee7745/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=fb4527c3547bcce7b7465adf5164ad1d7aee7745", "patch": "@@ -3010,30 +3010,31 @@ _cpp_lex_line (pfile, list)\n \tcase '\\n':\n \tcase '\\r':\n \t  handle_newline (cur, buffer->rlimit, c);\n-\t  if (PREV_TOKEN_TYPE != CPP_BACKSLASH || !IMMED_TOKEN ())\n+\t  if (PREV_TOKEN_TYPE == CPP_BACKSLASH && IMMED_TOKEN ())\n \t    {\n-\t      if (PREV_TOKEN_TYPE == CPP_BACKSLASH)\n+\t      /* Remove the escaped newline.  Then continue to process\n+\t\t any interrupted name or number.  */\n+\t      cur_token--;\n+\t      if (IMMED_TOKEN ())\n \t\t{\n-\t\t  buffer->cur = cur;\n-\t\t  cpp_warning (pfile,\n-\t\t\t       \"backslash and newline separated by space\");\n+\t\t  cur_token--;\n+\t\t  if (cur_token->type == CPP_NAME)\n+\t\t    goto continue_name;\n+\t\t  else if (cur_token->type == CPP_NUMBER)\n+\t\t    goto continue_number;\n+\t\t  cur_token++;\n \t\t}\n-\t      PUSH_TOKEN (CPP_VSPACE);\n-\t      goto out;\n+\t      /* Remember whitespace setting.  */\n+\t      flags = cur_token->flags;\n+\t      break;\n \t    }\n-\t  /* Remove the escaped newline.  Then continue to process\n-\t     any interrupted name or number.  */\n-\t  cur_token--;\n-\t  if (IMMED_TOKEN ())\n+\t  if (PREV_TOKEN_TYPE == CPP_BACKSLASH)\n \t    {\n-\t      cur_token--;\n-\t      if (cur_token->type == CPP_NAME)\n-\t\tgoto continue_name;\n-\t      else if (cur_token->type == CPP_NUMBER)\n-\t\tgoto continue_number;\n-\t      cur_token++;\n+\t      buffer->cur = cur;\n+\t      cpp_warning (pfile, \"backslash and newline separated by space\");\n \t    }\n-\t  break;\n+\t  PUSH_TOKEN (CPP_VSPACE);\n+\t  goto out;\n \n \tcase '-':\n \t  if (IMMED_TOKEN () && PREV_TOKEN_TYPE == CPP_MINUS)"}]}