{"sha": "1be4def3c6aa88e74c2a74a445405191706e323e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJlNGRlZjNjNmFhODhlNzRjMmE3NGE0NDU0MDUxOTE3MDZlMzIzZQ==", "commit": {"author": {"name": "Carlo Wood", "email": "carlo@alinoe.com", "date": "2003-03-11T13:48:16Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-03-11T13:48:16Z"}, "message": "demangle.h: Prepend accessors of class qualifier with 'get_' in order to fix warnings when...\n\n\n2003-03-11  Carlo Wood  <carlo@alinoe.com>\n\n\t* include/bits/demangle.h: Prepend accessors of\n\tclass qualifier with 'get_' in order to fix warnings\n\twhen compiling with -Wshadow.\n\nFrom-SVN: r64172", "tree": {"sha": "28dc113399b7733b071c9fcf4738ae34f926ae38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28dc113399b7733b071c9fcf4738ae34f926ae38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1be4def3c6aa88e74c2a74a445405191706e323e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1be4def3c6aa88e74c2a74a445405191706e323e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1be4def3c6aa88e74c2a74a445405191706e323e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1be4def3c6aa88e74c2a74a445405191706e323e/comments", "author": {"login": "CarloWood", "id": 590303, "node_id": "MDQ6VXNlcjU5MDMwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/590303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarloWood", "html_url": "https://github.com/CarloWood", "followers_url": "https://api.github.com/users/CarloWood/followers", "following_url": "https://api.github.com/users/CarloWood/following{/other_user}", "gists_url": "https://api.github.com/users/CarloWood/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarloWood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarloWood/subscriptions", "organizations_url": "https://api.github.com/users/CarloWood/orgs", "repos_url": "https://api.github.com/users/CarloWood/repos", "events_url": "https://api.github.com/users/CarloWood/events{/privacy}", "received_events_url": "https://api.github.com/users/CarloWood/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bff6a7c25d12e7ab0ec20c719b151023aea3106e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff6a7c25d12e7ab0ec20c719b151023aea3106e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bff6a7c25d12e7ab0ec20c719b151023aea3106e"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "69543e1919a90133f3c0775107348064a2355acb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be4def3c6aa88e74c2a74a445405191706e323e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be4def3c6aa88e74c2a74a445405191706e323e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1be4def3c6aa88e74c2a74a445405191706e323e", "patch": "@@ -1,3 +1,9 @@\n+2003-03-11  Carlo Wood  <carlo@alinoe.com>\n+\n+\t* include/bits/demangle.h: Prepend accessors of\n+\tclass qualifier with 'get_' in order to fix warnings\n+\twhen compiling with -Wshadow.\n+\n 2003-03-11  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* config/os/bsd/freebsd/ctype_inline.h:  Support _M_table\n@@ -25,8 +31,8 @@\n \t_M_really_overflow, seekoff): Use the boolean parameter in the calls.\n \t* include/std/std_fstream.h (sync): Likewise.\n \t* src/fstream.cc (basic_filebuf<>::_M_underflow_common): Likewise.\n-\t* src/ios.cc (ios_base::Init::_S_ios_create(bool)): Revert libstdc++/8399\n-\tcommit involving isatty(0).\n+\t* src/ios.cc (ios_base::Init::_S_ios_create(bool)): Revert\n+\tlibstdc++/8399 commit involving isatty(0).\n \t* acinclude.m4 (GLIBCPP_CHECK_UNISTD_DECL_AND_LINKAGE_1): Remove.\n \t(GLIBCPP_CHECK_UNISTD_SUPPORT): Remove\n \t* configure.in: Remove call.\n@@ -59,9 +65,10 @@\n 2003-03-08  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* testsuite/26_numerics/c99_classification_macros_c.cc: Tweak test.\n-\n-\t* config/locale/generic/c_locale.cc (locale::facet::_S_create_c_locale):\n-\tThrow runtime exception when unsupported language is specified.\n+\t\n+\t* config/locale/generic/c_locale.cc\n+\t(locale::facet::_S_create_c_locale): Throw runtime exception when\n+\tunsupported language is specified.\n \t* testsuite/testsuite_hooks.h\n \t(run_test_wrapped_generic_locale_exception_catcher): New function.\n \t* testsuite/testsuite_hooks.cc (run_tests_wrapped_locale):"}, {"sha": "41347a2bb134afdd324c4642c00d40a29ec4cd2d", "filename": "libstdc++-v3/include/bits/demangle.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be4def3c6aa88e74c2a74a445405191706e323e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be4def3c6aa88e74c2a74a445405191706e323e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h?ref=1be4def3c6aa88e74c2a74a445405191706e323e", "patch": "@@ -172,7 +172,7 @@ namespace __gnu_cxx\n \t{ }\n \n \tint\n-\tstart_pos(void) const\n+\tget_start_pos(void) const\n \t{ return M_start_pos; }\n \n \tchar\n@@ -187,7 +187,7 @@ namespace __gnu_cxx\n \t}\n \n \tstring_type const&\n-\toptional_type(void) const\n+\tget_optional_type(void) const\n \t{ return M_optional_type; }\n \n \tbool\n@@ -1382,7 +1382,7 @@ namespace __gnu_cxx\n \t  {\n \t    int saved_inside_substitution = M_demangler.M_inside_substitution;\n \t    M_demangler.M_inside_substitution = 0;\n-\t    M_demangler.add_substitution((*iter).start_pos(), type);\n+\t    M_demangler.add_substitution((*iter).get_start_pos(), type);\n \t    M_demangler.M_inside_substitution = saved_inside_substitution;\n \t  }\n \t  char qualifier_char = (*iter).first_qualifier();\n@@ -1407,7 +1407,7 @@ namespace __gnu_cxx\n \t\tcontinue;\n \t      case 'A':\n \t      {\n-\t\tstring_type index = (*iter).optional_type();\n+\t\tstring_type index = (*iter).get_optional_type();\n \t\tif (++iter != M_qualifier_starts.rend()\n \t\t    && (*iter).first_qualifier() != 'A')\n \t\t{\n@@ -1420,12 +1420,12 @@ namespace __gnu_cxx\n \t      }\n \t      case 'M':\n \t\tprefix += \" \";\n-\t\tprefix += (*iter).optional_type();\n+\t\tprefix += (*iter).get_optional_type();\n \t\tprefix += \"::*\";\n \t\tbreak;\n \t      case 'U':\n \t\tprefix += \" \";\n-\t\tprefix += (*iter).optional_type();\n+\t\tprefix += (*iter).get_optional_type();\n \t\tbreak;\n \t      case 'G':\t// Only here so we added a substitution.\n \t\tbreak;"}]}