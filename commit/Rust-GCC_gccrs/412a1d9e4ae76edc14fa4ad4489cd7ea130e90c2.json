{"sha": "412a1d9e4ae76edc14fa4ad4489cd7ea130e90c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEyYTFkOWU0YWU3NmVkYzE0ZmE0YWQ0NDg5Y2Q3ZWExMzBlOTBjMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-14T10:44:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-14T10:44:44Z"}, "message": "gimplify.c (gimplify_expr): Remove odd code.\n\n2012-05-14  Richard Guenther  <rguenther@suse.de>\n\n\t* gimplify.c (gimplify_expr): Remove odd code.\n\nFrom-SVN: r187453", "tree": {"sha": "2e7d3b86f96d03d6946781a077f575669fee9667", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e7d3b86f96d03d6946781a077f575669fee9667"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/412a1d9e4ae76edc14fa4ad4489cd7ea130e90c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/412a1d9e4ae76edc14fa4ad4489cd7ea130e90c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/412a1d9e4ae76edc14fa4ad4489cd7ea130e90c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/412a1d9e4ae76edc14fa4ad4489cd7ea130e90c2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9cbbba287d1ca590c503682d72df99fa2800b985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbbba287d1ca590c503682d72df99fa2800b985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cbbba287d1ca590c503682d72df99fa2800b985"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "143cefcfa544592dd5eba900fca84bca947cce20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/412a1d9e4ae76edc14fa4ad4489cd7ea130e90c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/412a1d9e4ae76edc14fa4ad4489cd7ea130e90c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=412a1d9e4ae76edc14fa4ad4489cd7ea130e90c2", "patch": "@@ -1,3 +1,7 @@\n+2012-05-14  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gimplify.c (gimplify_expr): Remove odd code.\n+\n 2012-05-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* stor-layout.c (bit_from_pos): Distribute conversion to bitsizetype"}, {"sha": "63195ae8f995e20c53e3a8a8b5bb94a7efc36c86", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/412a1d9e4ae76edc14fa4ad4489cd7ea130e90c2/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/412a1d9e4ae76edc14fa4ad4489cd7ea130e90c2/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=412a1d9e4ae76edc14fa4ad4489cd7ea130e90c2", "patch": "@@ -7947,19 +7947,7 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t TMP.  First, make sure that the expression has a type so that\n \t it can be assigned into a temporary.  */\n       gcc_assert (!VOID_TYPE_P (TREE_TYPE (*expr_p)));\n-\n-      if (!gimple_seq_empty_p (internal_post) || (fallback & fb_lvalue))\n-\t/* The postqueue might change the value of the expression between\n-\t   the initialization and use of the temporary, so we can't use a\n-\t   formal temp.  FIXME do we care?  */\n-\t{\n-\t  *expr_p = get_initialized_tmp_var (*expr_p, pre_p, post_p);\n-\t  if (TREE_CODE (TREE_TYPE (*expr_p)) == COMPLEX_TYPE\n-\t      || TREE_CODE (TREE_TYPE (*expr_p)) == VECTOR_TYPE)\n-\t    DECL_GIMPLE_REG_P (*expr_p) = 1;\n-\t}\n-      else\n-\t*expr_p = get_formal_tmp_var (*expr_p, pre_p);\n+      *expr_p = get_formal_tmp_var (*expr_p, pre_p);\n     }\n   else\n     {"}]}