{"sha": "c9665100d6ee2421d8dfe4d001d23019bd4e656b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk2NjUxMDBkNmVlMjQyMWQ4ZGZlNGQwMDFkMjMwMTliZDRlNjU2Yg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2015-08-14T10:37:14Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2015-08-14T10:37:14Z"}, "message": "Add DWARF2_LINENO_DEBUGGING_INFO, and use it for nvptx\n\n\tgcc/\n\t* config/nvptx/nvptx.c (nvptx_option_override): Don't override\n\tdebug options.\n\t* config/nvptx/nvptx.h (DWARF2_LINENO_DEBUGGING_INFO): Define.\n\t(DWARF2_DEBUGGING_INFO): Don't define.\n\t* debug.h (dwarf2_lineno_debug_hooks): Declare.\n\t* toplev.c (process_options): Add a case for it.\n\t* dwarf2out.c (dwarf2_lineno_debug_hooks): New variable.\n\t(dwarf2out_init): Skip most initializations if\n\tDWARF2_LINENO_DEBUGGING_INFO, but set cur_line_info_table in that\n\tcase.\n\t* defaults.h (PREFERRED_DEBUGGING_TYPE): Also use DWARF2_DEBUG if\n\tDWARF2_LINENO_DEBUGGING_INFO.\n\t* opts.c (set_debug_level): Likewise.\n\nCo-Authored-By: Bernd Schmidt <bernds@codesourcery.com>\n\nFrom-SVN: r226890", "tree": {"sha": "8189e99af744125ec05335a8f2882bd1a974d006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8189e99af744125ec05335a8f2882bd1a974d006"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9665100d6ee2421d8dfe4d001d23019bd4e656b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9665100d6ee2421d8dfe4d001d23019bd4e656b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9665100d6ee2421d8dfe4d001d23019bd4e656b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9665100d6ee2421d8dfe4d001d23019bd4e656b/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4436a80d12ba748d790b0c699641a065a5599a3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4436a80d12ba748d790b0c699641a065a5599a3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4436a80d12ba748d790b0c699641a065a5599a3d"}], "stats": {"total": 73, "additions": 68, "deletions": 5}, "files": [{"sha": "154c0778c536cd7f9dcc435afbc64675b066a1dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9665100d6ee2421d8dfe4d001d23019bd4e656b", "patch": "@@ -1,3 +1,20 @@\n+2015-08-14  Thomas Schwinge  <thomas@codesourcery.com>\n+\t    Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* config/nvptx/nvptx.c (nvptx_option_override): Don't override\n+\tdebug options.\n+\t* config/nvptx/nvptx.h (DWARF2_LINENO_DEBUGGING_INFO): Define.\n+\t(DWARF2_DEBUGGING_INFO): Don't define.\n+\t* debug.h (dwarf2_lineno_debug_hooks): Declare.\n+\t* toplev.c (process_options): Add a case for it.\n+\t* dwarf2out.c (dwarf2_lineno_debug_hooks): New variable.\n+\t(dwarf2out_init): Skip most initializations if\n+\tDWARF2_LINENO_DEBUGGING_INFO, but set cur_line_info_table in that\n+\tcase.\n+\t* defaults.h (PREFERRED_DEBUGGING_TYPE): Also use DWARF2_DEBUG if\n+\tDWARF2_LINENO_DEBUGGING_INFO.\n+\t* opts.c (set_debug_level): Likewise.\n+\n 2015-08-14  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/arm/types.md (is_neon_type): Add missing types."}, {"sha": "a3569670d62615255ceb1b8cfc8d02d50fcc60b4", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=c9665100d6ee2421d8dfe4d001d23019bd4e656b", "patch": "@@ -103,8 +103,6 @@ nvptx_option_override (void)\n   flag_toplevel_reorder = 1;\n   /* Assumes that it will see only hard registers.  */\n   flag_var_tracking = 0;\n-  write_symbols = NO_DEBUG;\n-  debug_info_level = DINFO_LEVEL_NONE;\n \n   declared_fndecls_htab = hash_table<tree_hasher>::create_ggc (17);\n   needed_fndecls_htab = hash_table<tree_hasher>::create_ggc (17);"}, {"sha": "afe4fcdd361fbbd2ecdb758cf85f4bf0ab87bc73", "filename": "gcc/config/nvptx/nvptx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.h?ref=c9665100d6ee2421d8dfe4d001d23019bd4e656b", "patch": "@@ -339,7 +339,7 @@ struct GTY(()) machine_function\n \n /* Misc.  */\n \n-#define DWARF2_DEBUGGING_INFO 1\n+#define DWARF2_LINENO_DEBUGGING_INFO 1\n \n #define CLZ_DEFINED_VALUE_AT_ZERO(MODE, VALUE) \\\n   ((VALUE) = GET_MODE_BITSIZE ((MODE)), 2)"}, {"sha": "9784300d748b31f2bf0914dbc3d2bfb70723b8ab", "filename": "gcc/debug.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fdebug.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fdebug.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.h?ref=c9665100d6ee2421d8dfe4d001d23019bd4e656b", "patch": "@@ -207,6 +207,7 @@ extern const struct gcc_debug_hooks dbx_debug_hooks;\n extern const struct gcc_debug_hooks sdb_debug_hooks;\n extern const struct gcc_debug_hooks xcoff_debug_hooks;\n extern const struct gcc_debug_hooks dwarf2_debug_hooks;\n+extern const struct gcc_debug_hooks dwarf2_lineno_debug_hooks;\n extern const struct gcc_debug_hooks vmsdbg_debug_hooks;\n \n /* Dwarf2 frame information.  */"}, {"sha": "713ca077c79f8beea605aa23bfad26d769c3f2fa", "filename": "gcc/defaults.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=c9665100d6ee2421d8dfe4d001d23019bd4e656b", "patch": "@@ -932,7 +932,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #elif defined SDB_DEBUGGING_INFO\n #define PREFERRED_DEBUGGING_TYPE SDB_DEBUG\n \n-#elif defined DWARF2_DEBUGGING_INFO\n+#elif defined DWARF2_DEBUGGING_INFO || defined DWARF2_LINENO_DEBUGGING_INFO\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n #elif defined VMS_DEBUGGING_INFO"}, {"sha": "92903f89638e633ed943f66f482c2d5ada810315", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=c9665100d6ee2421d8dfe4d001d23019bd4e656b", "patch": "@@ -2489,6 +2489,43 @@ const struct gcc_debug_hooks dwarf2_debug_hooks =\n   1,                            /* start_end_main_source_file */\n   TYPE_SYMTAB_IS_DIE            /* tree_type_symtab_field */\n };\n+\n+const struct gcc_debug_hooks dwarf2_lineno_debug_hooks =\n+{\n+  dwarf2out_init,\n+  debug_nothing_charstar,\n+  debug_nothing_void,\n+  debug_nothing_void,\n+  debug_nothing_int_charstar,\n+  debug_nothing_int_charstar,\n+  debug_nothing_int_charstar,\n+  debug_nothing_int,\n+  debug_nothing_int_int,\t         /* begin_block */\n+  debug_nothing_int_int,\t         /* end_block */\n+  debug_true_const_tree,\t         /* ignore_block */\n+  dwarf2out_source_line,\t /* source_line */\n+  debug_nothing_int_charstar,\t         /* begin_prologue */\n+  debug_nothing_int_charstar,\t         /* end_prologue */\n+  debug_nothing_int_charstar,\t         /* begin_epilogue */\n+  debug_nothing_int_charstar,\t         /* end_epilogue */\n+  debug_nothing_tree,\t\t         /* begin_function */\n+  debug_nothing_int,\t\t         /* end_function */\n+  debug_nothing_tree,\t\t\t /* register_main_translation_unit */\n+  debug_nothing_tree,\t\t         /* function_decl */\n+  debug_nothing_tree,\t\t         /* early_global_decl */\n+  debug_nothing_tree,\t\t         /* late_global_decl */\n+  debug_nothing_tree_int,\t\t /* type_decl */\n+  debug_nothing_tree_tree_tree_bool,\t /* imported_module_or_decl */\n+  debug_nothing_tree,\t\t         /* deferred_inline_function */\n+  debug_nothing_tree,\t\t         /* outlining_inline_function */\n+  debug_nothing_rtx_code_label,\t         /* label */\n+  debug_nothing_int,\t\t         /* handle_pch */\n+  debug_nothing_rtx_insn,\t         /* var_location */\n+  debug_nothing_void,                    /* switch_text_section */\n+  debug_nothing_tree_tree,\t\t /* set_name */\n+  0,                                     /* start_end_main_source_file */\n+  TYPE_SYMTAB_IS_ADDRESS                 /* tree_type_symtab_field */\n+};\n \f\n /* NOTE: In the comments in this file, many references are made to\n    \"Debugging Information Entries\".  This term is abbreviated as `DIE'\n@@ -23183,6 +23220,7 @@ dwarf2out_init (const char *filename ATTRIBUTE_UNUSED)\n   /* Allocate the file_table.  */\n   file_table = hash_table<dwarf_file_hasher>::create_ggc (50);\n \n+#ifndef DWARF2_LINENO_DEBUGGING_INFO\n   /* Allocate the decl_die_table.  */\n   decl_die_table = hash_table<decl_die_hasher>::create_ggc (10);\n \n@@ -23298,11 +23336,16 @@ dwarf2out_init (const char *filename ATTRIBUTE_UNUSED)\n \n   switch_to_section (text_section);\n   ASM_OUTPUT_LABEL (asm_out_file, text_section_label);\n+#endif\n \n   /* Make sure the line number table for .text always exists.  */\n   text_section_line_info = new_line_info_table ();\n   text_section_line_info->end_label = text_end_label;\n \n+#ifdef DWARF2_LINENO_DEBUGGING_INFO\n+  cur_line_info_table = text_section_line_info;\n+#endif\n+\n   /* If front-ends already registered a main translation unit but we were not\n      ready to perform the association, do this now.  */\n   if (main_translation_unit != NULL_TREE)"}, {"sha": "9d5de96f3f360de8f9e0bf0f955978a149af432d", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=c9665100d6ee2421d8dfe4d001d23019bd4e656b", "patch": "@@ -2223,7 +2223,7 @@ set_debug_level (enum debug_info_type type, int extended, const char *arg,\n \n \t  if (extended == 2)\n \t    {\n-#ifdef DWARF2_DEBUGGING_INFO\n+#if defined DWARF2_DEBUGGING_INFO || defined DWARF2_LINENO_DEBUGGING_INFO\n \t      opts->x_write_symbols = DWARF2_DEBUG;\n #elif defined DBX_DEBUGGING_INFO\n \t      opts->x_write_symbols = DBX_DEBUG;"}, {"sha": "d6efd0e7d17a6e700b3005b063b3bf36768d4f2d", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9665100d6ee2421d8dfe4d001d23019bd4e656b/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c9665100d6ee2421d8dfe4d001d23019bd4e656b", "patch": "@@ -1481,6 +1481,10 @@ process_options (void)\n #ifdef VMS_DEBUGGING_INFO\n   else if (write_symbols == VMS_DEBUG || write_symbols == VMS_AND_DWARF2_DEBUG)\n     debug_hooks = &vmsdbg_debug_hooks;\n+#endif\n+#ifdef DWARF2_LINENO_DEBUGGING_INFO\n+  else if (write_symbols == DWARF2_DEBUG)\n+    debug_hooks = &dwarf2_lineno_debug_hooks;\n #endif\n   else\n     error (\"target system does not support the %qs debug format\","}]}