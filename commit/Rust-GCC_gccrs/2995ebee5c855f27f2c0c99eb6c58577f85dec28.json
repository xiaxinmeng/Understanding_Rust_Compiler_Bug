{"sha": "2995ebee5c855f27f2c0c99eb6c58577f85dec28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk5NWViZWU1Yzg1NWYyN2YyYzBjOTllYjZjNTg1NzdmODVkZWMyOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-11T15:48:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-11T15:48:14Z"}, "message": "[multiple changes]\n\n2009-06-11  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb (Resolve_Attribute, case 'access): Add missing\n\taccessibiliy check on access_to_subprogram in the context of an\n\tanonymous access that is not an access parameter.\n\n2009-06-11  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* tracebak.c (i386 section): Define IS_BAD_PTR on Solaris.\n\t\n2009-06-11  Quentin Ochem  <ochem@adacore.com>\n\n\t* sem_warn.adb, scng.adb, sfn_scan.adb, freeze.adb: Add CODEFIX\n\tcomments for message handled by GPS.\n\n2009-06-11  Matthew Gingell  <gingell@adacore.com>\n\n\t* adaint.c: Use fopen64 instead of fopen on platforms where we know\n\tit's supported.\n\n2009-06-11  Pascal Obry  <obry@adacore.com>\n\n\t* g-cgi.ads: Fix comment typo.\n\n\t* g-cgi.adb: Properly decode \"+\" in CGI parameters as spaces.\n\nFrom-SVN: r148392", "tree": {"sha": "19753f5474920d21f293504fc129ecc940941eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19753f5474920d21f293504fc129ecc940941eac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2995ebee5c855f27f2c0c99eb6c58577f85dec28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2995ebee5c855f27f2c0c99eb6c58577f85dec28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2995ebee5c855f27f2c0c99eb6c58577f85dec28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2995ebee5c855f27f2c0c99eb6c58577f85dec28/comments", "author": null, "committer": null, "parents": [{"sha": "6be6462e0081b3eef6628546fc4f7648db62c6c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be6462e0081b3eef6628546fc4f7648db62c6c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be6462e0081b3eef6628546fc4f7648db62c6c4"}], "stats": {"total": 77, "additions": 60, "deletions": 17}, "files": [{"sha": "8f29f5b3f2471b93a697a87dd7c43b19257fc110", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2995ebee5c855f27f2c0c99eb6c58577f85dec28", "patch": "@@ -1,3 +1,29 @@\n+2009-06-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_attr.adb (Resolve_Attribute, case 'access): Add missing\n+\taccessibiliy check on access_to_subprogram in the context of an\n+\tanonymous access that is not an access parameter.\n+\n+2009-06-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tracebak.c (i386 section): Define IS_BAD_PTR on Solaris.\n+\t\n+2009-06-11  Quentin Ochem  <ochem@adacore.com>\n+\n+\t* sem_warn.adb, scng.adb, sfn_scan.adb, freeze.adb: Add CODEFIX\n+\tcomments for message handled by GPS.\n+\n+2009-06-11  Matthew Gingell  <gingell@adacore.com>\n+\n+\t* adaint.c: Use fopen64 instead of fopen on platforms where we know\n+\tit's supported.\n+\n+2009-06-11  Pascal Obry  <obry@adacore.com>\n+\n+\t* g-cgi.ads: Fix comment typo.\n+\n+\t* g-cgi.adb: Properly decode \"+\" in CGI parameters as spaces.\n+\n 2009-06-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>: Use"}, {"sha": "dd36bac4cb6f65360d14218d99e5dc272f0f9246", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=2995ebee5c855f27f2c0c99eb6c58577f85dec28", "patch": "@@ -775,8 +775,16 @@ __gnat_fopen (char *path, char *mode, int encoding ATTRIBUTE_UNUSED)\n #elif defined (VMS)\n   return decc$fopen (path, mode);\n #else\n+\n+#if defined (__GLIBC__) || defined (sun)\n+  /* GLIBC and Solaris provides fopen64, which allows IO on files\n+     larger than 2GB on systems that support it. */\n+  return fopen64 (path, mode);\n+#else\n   return fopen (path, mode);\n #endif\n+\n+#endif\n }\n \n FILE *"}, {"sha": "079b39cd0ec1b05f76fd6e6cbf2a263cb1a42831", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=2995ebee5c855f27f2c0c99eb6c58577f85dec28", "patch": "@@ -2205,9 +2205,9 @@ package body Freeze is\n                declare\n                   Sz : constant Node_Id := Size_Clause (Rec);\n                begin\n-                  Error_Msg_NE\n+                  Error_Msg_NE --  CODEFIX\n                     (\"size given for& too small\", Sz, Rec);\n-                  Error_Msg_N\n+                  Error_Msg_N --  CODEFIX\n                     (\"\\use explicit pragma Pack \"\n                      & \"or use pragma Implicit_Packing\", Sz);\n                end;"}, {"sha": "b1b6789e4fb7c4d8c318cb71d0fe02e0f531e618", "filename": "gcc/ada/g-cgi.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fg-cgi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fg-cgi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgi.adb?ref=2995ebee5c855f27f2c0c99eb6c58577f85dec28", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                      Copyright (C) 2001-2006, AdaCore                    --\n+--                      Copyright (C) 2001-2009, AdaCore                    --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -123,6 +123,11 @@ package body GNAT.CGI is\n               (Natural'Value (\"16#\" & S (K + 1 .. K + 2) & '#'));\n             K := K + 3;\n \n+         elsif S (K) = '+' then\n+            --  + sign is decoded as a space\n+            Result (J) := ' ';\n+            K := K + 1;\n+\n          else\n             Result (J) := S (K);\n             K := K + 1;"}, {"sha": "b444b586edd702e42623cd32849a7794026115fe", "filename": "gcc/ada/g-cgi.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fg-cgi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fg-cgi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgi.ads?ref=2995ebee5c855f27f2c0c99eb6c58577f85dec28", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2006, AdaCore                     --\n+--                     Copyright (C) 2000-2009, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,7 +78,7 @@\n --           --  the HTML form) and that one of them is called \"client_name\".\n \n --           if CGI.Argument_Count = 2\n---             and the CGI.Key_Exists (\"client_name\")\n+--             and then CGI.Key_Exists (\"client_name\")\n --           then\n --              Add_Client_To_Database (CGI.Value (\"client_name\"));\n --           end if;"}, {"sha": "e7d9edc336ec785425467f63291d8faeb6b8a3ed", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=2995ebee5c855f27f2c0c99eb6c58577f85dec28", "patch": "@@ -875,7 +875,8 @@ package body Scng is\n                end if;\n             end if;\n \n-            Error_Msg_S (\"missing string quote\");\n+            Error_Msg_S --  CODEFIX\n+              (\"missing string quote\");\n          end Error_Unterminated_String;\n \n          ----------------"}, {"sha": "51536ae5bd15ad72b212440e0fe743fae15be59a", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=2995ebee5c855f27f2c0c99eb6c58577f85dec28", "patch": "@@ -7834,16 +7834,16 @@ package body Sem_Attr is\n                   --  Check the static accessibility rule of 3.10.2(32).\n                   --  This rule also applies within the private part of an\n                   --  instantiation. This rule does not apply to anonymous\n-                  --  access-to-subprogram types (Ada 2005).\n+                  --  access-to-subprogram types in access parameters.\n \n                   elsif Attr_Id = Attribute_Access\n                     and then not In_Instance_Body\n+                    and then\n+                      (Ekind (Btyp) = E_Access_Subprogram_Type\n+                        or else Is_Local_Anonymous_Access (Btyp))\n+\n                     and then Subprogram_Access_Level (Entity (P)) >\n                                Type_Access_Level (Btyp)\n-                    and then Ekind (Btyp) /=\n-                               E_Anonymous_Access_Subprogram_Type\n-                    and then Ekind (Btyp) /=\n-                               E_Anonymous_Access_Protected_Subprogram_Type\n                   then\n                      Error_Msg_F\n                        (\"subprogram must not be deeper than access type\", P);"}, {"sha": "0ba87cccc4cd9c6992857fb6c42f8f306302a6e2", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=2995ebee5c855f27f2c0c99eb6c58577f85dec28", "patch": "@@ -3523,11 +3523,11 @@ package body Sem_Warn is\n \n             if Nkind (Original_Node (X)) = N_Integer_Literal then\n                if Intval (X) = Low_Bound then\n-                  Error_Msg_FE\n+                  Error_Msg_FE --  CODEFIX\n                     (\"\\suggested replacement: `&''First`\", X, Ent);\n                else\n                   Error_Msg_Uint_1 := Intval (X) - Low_Bound;\n-                  Error_Msg_FE\n+                  Error_Msg_FE --  CODEFIX\n                     (\"\\suggested replacement: `&''First + ^`\", X, Ent);\n \n                end if;\n@@ -3633,7 +3633,7 @@ package body Sem_Warn is\n \n                --  Replacement subscript is now in string buffer\n \n-               Error_Msg_FE\n+               Error_Msg_FE --  CODEFIX\n                  (\"\\suggested replacement: `&~`\", Original_Node (X), Ent);\n             end if;\n "}, {"sha": "dc6ab38d448eed8064c8da25034aaa8500c6dca3", "filename": "gcc/ada/sfn_scan.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fsfn_scan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Fsfn_scan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsfn_scan.adb?ref=2995ebee5c855f27f2c0c99eb6c58577f85dec28", "patch": "@@ -637,7 +637,8 @@ package body SFN_Scan is\n \n       loop\n          if At_EOF or else S (P) = LF or else S (P) = CR then\n-            Error (\"missing string quote\");\n+            Error --  CODEFIX\n+              (\"missing string quote\");\n \n          elsif S (P) = HT then\n             Error (\"tab character in string\");"}, {"sha": "63f93b37eb78e56ab8684319d10aa5adbf5c9d68", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2995ebee5c855f27f2c0c99eb6c58577f85dec28/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=2995ebee5c855f27f2c0c99eb6c58577f85dec28", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                     Copyright (C) 2000-2008, AdaCore                     *\n+ *                     Copyright (C) 2000-2009, AdaCore                     *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -294,9 +294,11 @@ struct layout\n \n #elif defined (i386)\n \n-#ifdef __WIN32\n+#if defined (__WIN32)\n #include <windows.h>\n #define IS_BAD_PTR(ptr) (IsBadCodePtr((void *)ptr))\n+#elif defined (sun)\n+#define IS_BAD_PTR(ptr) ((unsigned long)ptr == -1)\n #else\n #define IS_BAD_PTR(ptr) 0\n #endif"}]}