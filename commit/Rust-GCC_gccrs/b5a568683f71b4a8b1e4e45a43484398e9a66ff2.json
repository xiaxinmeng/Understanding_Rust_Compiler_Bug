{"sha": "b5a568683f71b4a8b1e4e45a43484398e9a66ff2", "node_id": "C_kwDOANBUbNoAKGI1YTU2ODY4M2Y3MWI0YThiMWU0ZTQ1YTQzNDg0Mzk4ZTlhNjZmZjI", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-12-01T20:58:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-12-02T16:46:28Z"}, "message": "libstdc++: Restore unconditional atomic load in COW std::string\n\nThe relaxed load is already optimal, checking the __single_threaded\nglobal before doing a non-atomic load isn't an optimization.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/cow_string.h (basic_string::_M_is_leaked()):\n\tRevert change to check __is_single_threaded() before using\n\tatomic load.", "tree": {"sha": "3fcc70af8566481446db259a09d3c451d49b704e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fcc70af8566481446db259a09d3c451d49b704e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5a568683f71b4a8b1e4e45a43484398e9a66ff2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5a568683f71b4a8b1e4e45a43484398e9a66ff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5a568683f71b4a8b1e4e45a43484398e9a66ff2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5a568683f71b4a8b1e4e45a43484398e9a66ff2/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d08236359eb22918ba067489edcec02857109d09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d08236359eb22918ba067489edcec02857109d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d08236359eb22918ba067489edcec02857109d09"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "389b39583e476c25a1e6b86d371e23532d332354", "filename": "libstdc++-v3/include/bits/cow_string.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5a568683f71b4a8b1e4e45a43484398e9a66ff2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcow_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5a568683f71b4a8b1e4e45a43484398e9a66ff2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcow_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcow_string.h?ref=b5a568683f71b4a8b1e4e45a43484398e9a66ff2", "patch": "@@ -207,10 +207,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  // so we need to use an atomic load. However, _M_is_leaked\n \t  // predicate does not change concurrently (i.e. the string is either\n \t  // leaked or not), so a relaxed load is enough.\n-\t  if (!__gnu_cxx::__is_single_threaded())\n-\t    return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;\n-#endif\n+\t  return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;\n+#else\n \t  return this->_M_refcount < 0;\n+#endif\n \t}\n \n \tbool"}]}