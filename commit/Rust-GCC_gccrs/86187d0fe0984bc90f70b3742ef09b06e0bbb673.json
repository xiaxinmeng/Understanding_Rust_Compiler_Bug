{"sha": "86187d0fe0984bc90f70b3742ef09b06e0bbb673", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYxODdkMGZlMDk4NGJjOTBmNzBiMzc0MmVmMDliMDZlMGJiYjY3Mw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-08-29T10:33:09Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-08-29T10:33:09Z"}, "message": "trans-decl.c (generate_coarray_sym_init): Use GFC_CAF_COARRAY_STATIC for static coarrays.\n\ngcc/fortran/\n2011-08-29  Tobias Burnus  <burnus@net-b.de>\n\n        * trans-decl.c (generate_coarray_sym_init): Use\n        GFC_CAF_COARRAY_STATIC for static coarrays.\n\nlibgfortan/\n2011-08-29  Tobias Burnus  <burnus@net-b.de>\n\n        * caf/libcaf.h (_gfortran_caf_deregister): Update prototype.\n        * caf/mpi.c (_gfortran_caf_deregister): Modify prototype,\n        actually free memory and add error diagnostic.\n        (_gfortran_caf_finalize): Add additional free calls.\n        * caf/single.c (_gfortran_caf_deregister): Modify prototype,\n        actually free memory and add error diagnostic.\n        (_gfortran_caf_finalize): Add additional free calls.\n\nFrom-SVN: r178193", "tree": {"sha": "53945bc4072488d8d24857a6fbc9d9459dfb6c2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53945bc4072488d8d24857a6fbc9d9459dfb6c2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86187d0fe0984bc90f70b3742ef09b06e0bbb673", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86187d0fe0984bc90f70b3742ef09b06e0bbb673", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86187d0fe0984bc90f70b3742ef09b06e0bbb673", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86187d0fe0984bc90f70b3742ef09b06e0bbb673/comments", "author": null, "committer": null, "parents": [{"sha": "d986066d17e534ec854499decc44436559a2db5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d986066d17e534ec854499decc44436559a2db5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d986066d17e534ec854499decc44436559a2db5d"}], "stats": {"total": 83, "additions": 69, "deletions": 14}, "files": [{"sha": "a00723ea82619c914d24c526192afdbfad25e28b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86187d0fe0984bc90f70b3742ef09b06e0bbb673/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86187d0fe0984bc90f70b3742ef09b06e0bbb673/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=86187d0fe0984bc90f70b3742ef09b06e0bbb673", "patch": "@@ -1,7 +1,12 @@\n+2011-08-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* trans-decl.c (generate_coarray_sym_init): Use\n+\tGFC_CAF_COARRAY_STATIC for static coarrays.\n+\n 2011-08-28  Dodji Seketeli  <dodji@redhat.com>\n \n \t* scanner.c (load_file): Don't abuse LC_RENAME reason while\n-    \t(indirectly) calling linemap_add.\n+\t(indirectly) calling linemap_add.\n \n 2011-08-26  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "ead8acf20b229ea4fc94a168300f6c64ccade3f7", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86187d0fe0984bc90f70b3742ef09b06e0bbb673/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86187d0fe0984bc90f70b3742ef09b06e0bbb673/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=86187d0fe0984bc90f70b3742ef09b06e0bbb673", "patch": "@@ -4241,7 +4241,7 @@ generate_coarray_sym_init (gfc_symbol *sym)\n \n   tmp = build_call_expr_loc (input_location, gfor_fndecl_caf_register, 6, size,\n \t\t\t     build_int_cst (integer_type_node,\n-\t\t\t\t\t    GFC_CAF_COARRAY_ALLOC), /* type.  */\n+\t\t\t\t\t    GFC_CAF_COARRAY_STATIC), /* type.  */\n \t\t\t     token, null_pointer_node, /* token, stat.  */\n \t\t\t     null_pointer_node, /* errgmsg, errmsg_len.  */\n \t\t\t     build_int_cst (integer_type_node, 0));"}, {"sha": "f20713e579e23ddf8962af0abc62aa0724f419f2", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86187d0fe0984bc90f70b3742ef09b06e0bbb673/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86187d0fe0984bc90f70b3742ef09b06e0bbb673/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=86187d0fe0984bc90f70b3742ef09b06e0bbb673", "patch": "@@ -1,3 +1,13 @@\n+2011-08-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* caf/libcaf.h (_gfortran_caf_deregister): Update prototype.\n+\t* caf/mpi.c (_gfortran_caf_deregister): Modify prototype,\n+\tactually free memory and add error diagnostic.\n+\t(_gfortran_caf_finalize): Add additional free calls.\n+\t* caf/single.c (_gfortran_caf_deregister): Modify prototype,\n+\tactually free memory and add error diagnostic.\n+\t(_gfortran_caf_finalize): Add additional free calls.\n+\n 2011-08-29  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libfortran/50192"}, {"sha": "e6be7ce7aceaba44010066838642e11b54324b9c", "filename": "libgfortran/caf/libcaf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86187d0fe0984bc90f70b3742ef09b06e0bbb673/libgfortran%2Fcaf%2Flibcaf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86187d0fe0984bc90f70b3742ef09b06e0bbb673/libgfortran%2Fcaf%2Flibcaf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fcaf%2Flibcaf.h?ref=86187d0fe0984bc90f70b3742ef09b06e0bbb673", "patch": "@@ -69,7 +69,7 @@ void _gfortran_caf_finalize (void);\n \n void * _gfortran_caf_register (ptrdiff_t, caf_register_t, void **, int *,\n \t\t\t       char *, int);\n-int _gfortran_caf_deregister (void **);\n+void _gfortran_caf_deregister (void **, int *, char *, int);\n \n \n void _gfortran_caf_sync_all (int *, char *, int);"}, {"sha": "c69c5b9574ff75ad348b65fd88dfe1853ed30f9e", "filename": "libgfortran/caf/mpi.c", "status": "modified", "additions": 37, "deletions": 6, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86187d0fe0984bc90f70b3742ef09b06e0bbb673/libgfortran%2Fcaf%2Fmpi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86187d0fe0984bc90f70b3742ef09b06e0bbb673/libgfortran%2Fcaf%2Fmpi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fcaf%2Fmpi.c?ref=86187d0fe0984bc90f70b3742ef09b06e0bbb673", "patch": "@@ -103,8 +103,12 @@ _gfortran_caf_finalize (void)\n {\n   while (caf_static_list != NULL)\n     {\n-      free(caf_static_list->token[caf_this_image-1]);\n-      caf_static_list = caf_static_list->prev;\n+      caf_static_t *tmp = caf_static_list->prev;\n+\n+      free (caf_static_list->token[caf_this_image-1]);\n+      free (caf_static_list->token);\n+      free (caf_static_list);\n+      caf_static_list = tmp;\n     }\n \n   if (!caf_mpi_initialized)\n@@ -187,10 +191,37 @@ _gfortran_caf_register (ptrdiff_t size, caf_register_t type, void **token,\n }\n \n \n-int\n-_gfortran_caf_deregister (void **token __attribute__ ((unused)))\n+void\n+_gfortran_caf_deregister (void **token, int *stat, char *errmsg, int errmsg_len)\n {\n-  return 0;\n+  if (unlikely (caf_is_finalized))\n+    {\n+      const char msg[] = \"Failed to deallocate coarray - \"\n+\t\t\t  \"there are stopped images\";\n+      if (stat)\n+\t{\n+\t  *stat = STAT_STOPPED_IMAGE;\n+\t\n+\t  if (errmsg_len > 0)\n+\t    {\n+\t      int len = ((int) sizeof (msg) - 1 > errmsg_len)\n+\t\t\t? errmsg_len : (int) sizeof (msg) - 1;\n+\t      memcpy (errmsg, msg, len);\n+\t      if (errmsg_len > len)\n+\t\tmemset (&errmsg[len], ' ', errmsg_len-len);\n+\t    }\n+\t  return;\n+\t}\n+      caf_runtime_error (msg);\n+    }\n+\n+  _gfortran_caf_sync_all (NULL, NULL, 0);\n+\n+  if (stat)\n+    *stat = 0;\n+\n+  free (token[caf_this_image-1]);\n+  free (token);\n }\n \n \n@@ -267,7 +298,7 @@ _gfortran_caf_sync_images (int count, int images[], int *stat, char *errmsg,\n     }\n \n   /* Handle SYNC IMAGES(*).  */\n-  if (unlikely(caf_is_finalized))\n+  if (unlikely (caf_is_finalized))\n     ierr = STAT_STOPPED_IMAGE;\n   else\n     ierr = MPI_Barrier (MPI_COMM_WORLD);"}, {"sha": "5353c7b86f7788dad70fe038bb0e8e7a884c81b5", "filename": "libgfortran/caf/single.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86187d0fe0984bc90f70b3742ef09b06e0bbb673/libgfortran%2Fcaf%2Fsingle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86187d0fe0984bc90f70b3742ef09b06e0bbb673/libgfortran%2Fcaf%2Fsingle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fcaf%2Fsingle.c?ref=86187d0fe0984bc90f70b3742ef09b06e0bbb673", "patch": "@@ -71,8 +71,11 @@ _gfortran_caf_finalize (void)\n {\n   while (caf_static_list != NULL)\n     {\n-      free(caf_static_list->token[0]);\n-      caf_static_list = caf_static_list->prev;\n+      caf_static_t *tmp = caf_static_list->prev;\n+      free (caf_static_list->token[0]);\n+      free (caf_static_list->token);\n+      free (caf_static_list);\n+      caf_static_list = tmp;\n     }\n }\n \n@@ -121,10 +124,16 @@ _gfortran_caf_register (ptrdiff_t size, caf_register_t type, void **token,\n }\n \n \n-int\n-_gfortran_caf_deregister (void **token __attribute__ ((unused)))\n+void\n+_gfortran_caf_deregister (void **token, int *stat,\n+\t\t\t  char *errmsg __attribute__ ((unused)),\n+\t\t\t  int errmsg_len __attribute__ ((unused)))\n {\n-  return 0;\n+  free (*token);\n+  free (token);\n+\n+  if (stat)\n+    *stat = 0;\n }\n \n "}]}