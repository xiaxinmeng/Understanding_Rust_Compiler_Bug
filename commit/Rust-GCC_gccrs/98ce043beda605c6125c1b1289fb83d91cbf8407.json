{"sha": "98ce043beda605c6125c1b1289fb83d91cbf8407", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThjZTA0M2JlZGE2MDVjNjEyNWMxYjEyODlmYjgzZDkxY2JmODQwNw==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2004-01-30T17:01:29Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2004-01-30T17:01:29Z"}, "message": "* parser.c (cp_parser_labeled_statement): Accept case ranges.\n\nFrom-SVN: r76972", "tree": {"sha": "422c5bb7a187475a33ddf6acc0f5702d4437456d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/422c5bb7a187475a33ddf6acc0f5702d4437456d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98ce043beda605c6125c1b1289fb83d91cbf8407", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ce043beda605c6125c1b1289fb83d91cbf8407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98ce043beda605c6125c1b1289fb83d91cbf8407", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ce043beda605c6125c1b1289fb83d91cbf8407/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0acf599c8d6c56929f309ecc5761ce1bf57fa57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0acf599c8d6c56929f309ecc5761ce1bf57fa57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0acf599c8d6c56929f309ecc5761ce1bf57fa57"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "41bc855bb2d087bc61d0a4cfdb2e6ad234cfea96", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98ce043beda605c6125c1b1289fb83d91cbf8407/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98ce043beda605c6125c1b1289fb83d91cbf8407/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=98ce043beda605c6125c1b1289fb83d91cbf8407", "patch": "@@ -1,3 +1,7 @@\n+2004-01-30  Michael Matz  <matz@suse.de>\n+\n+\t* parser.c (cp_parser_labeled_statement): Accept case ranges.\n+\n 2004-01-30  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tDR206"}, {"sha": "77f703f49f685fc3b4c1f0e78266dbfb046f050e", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98ce043beda605c6125c1b1289fb83d91cbf8407/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98ce043beda605c6125c1b1289fb83d91cbf8407/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=98ce043beda605c6125c1b1289fb83d91cbf8407", "patch": "@@ -5472,7 +5472,12 @@ cp_parser_statement (cp_parser* parser, bool in_statement_expr_p)\n    labeled-statement:\n      identifier : statement\n      case constant-expression : statement\n-     default : statement  \n+     default : statement\n+\n+   GNU Extension:\n+   \n+   labeled-statement:\n+     case constant-expression ... constant-expression : statement\n \n    Returns the new CASE_LABEL, for a `case' or `default' label.  For\n    an ordinary label, returns a LABEL_STMT.  */\n@@ -5496,18 +5501,35 @@ cp_parser_labeled_statement (cp_parser* parser, bool in_statement_expr_p)\n     {\n     case RID_CASE:\n       {\n-\ttree expr;\n+\ttree expr, expr_hi;\n+\tcp_token *ellipsis;\n \n \t/* Consume the `case' token.  */\n \tcp_lexer_consume_token (parser->lexer);\n \t/* Parse the constant-expression.  */\n \texpr = cp_parser_constant_expression (parser, \n \t\t\t\t\t      /*allow_non_constant_p=*/false,\n \t\t\t\t\t      NULL);\n+\n+\tellipsis = cp_lexer_peek_token (parser->lexer);\n+\tif (ellipsis->type == CPP_ELLIPSIS)\n+\t  {\n+            /* Consume the `...' token.  */\n+\t    cp_lexer_consume_token (parser->lexer);\n+\t    expr_hi =\n+\t      cp_parser_constant_expression (parser,\n+\t    \t\t\t\t     /*allow_non_constant_p=*/false,\n+\t\t\t\t\t     NULL);\n+\t    /* We don't need to emit warnings here, as the common code\n+\t       will do this for us.  */\n+\t  }\n+\telse\n+\t  expr_hi = NULL_TREE;\n+\n \tif (!parser->in_switch_statement_p)\n \t  error (\"case label `%E' not within a switch statement\", expr);\n \telse\n-\t  statement = finish_case_label (expr, NULL_TREE);\n+\t  statement = finish_case_label (expr, expr_hi);\n       }\n       break;\n "}]}