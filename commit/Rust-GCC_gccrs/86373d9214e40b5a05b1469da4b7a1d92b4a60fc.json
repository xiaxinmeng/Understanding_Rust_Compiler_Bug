{"sha": "86373d9214e40b5a05b1469da4b7a1d92b4a60fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYzNzNkOTIxNGU0MGI1YTA1YjE0NjlkYTRiN2ExZDkyYjRhNjBmYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-09-07T11:20:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-09-07T11:20:40Z"}, "message": "re PR target/81979 (Assembler messages: Error: can't resolve `.got2' {.got2 section} - `.LCF0' {.text.unlikely section})\n\n\tPR target/81979\n\t* output.h (switch_to_other_text_partition): New declaration.\n\t* varasm.c (switch_to_other_text_partition): New function.\n\t* config/rs6000/rs6000.c (uses_TOC): Return 2 if\n\tNOTE_INSN_SWITCH_TEXT_SECTIONS is seen before finding load_toc_* insn.\n\t(rs6000_elf_declare_function_name): If uses_TOC returned 2, switch\n\tto the other text partition before emitting LCL label and switch back\n\tafter emitting the word after it.\n\n\t* gcc.dg/pr81979.c: New test.\n\nFrom-SVN: r251843", "tree": {"sha": "e19f3204ac224f9a848867cd139c2f2267adc1ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e19f3204ac224f9a848867cd139c2f2267adc1ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86373d9214e40b5a05b1469da4b7a1d92b4a60fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86373d9214e40b5a05b1469da4b7a1d92b4a60fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86373d9214e40b5a05b1469da4b7a1d92b4a60fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed323421344929d7b6104566d8301ce4f88fd00c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed323421344929d7b6104566d8301ce4f88fd00c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed323421344929d7b6104566d8301ce4f88fd00c"}], "stats": {"total": 111, "additions": 92, "deletions": 19}, "files": [{"sha": "4b6d9c2b233d0ec4fdb5653443f58536a80d25b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86373d9214e40b5a05b1469da4b7a1d92b4a60fc", "patch": "@@ -1,3 +1,14 @@\n+2017-09-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/81979\n+\t* output.h (switch_to_other_text_partition): New declaration.\n+\t* varasm.c (switch_to_other_text_partition): New function.\n+\t* config/rs6000/rs6000.c (uses_TOC): Return 2 if\n+\tNOTE_INSN_SWITCH_TEXT_SECTIONS is seen before finding load_toc_* insn.\n+\t(rs6000_elf_declare_function_name): If uses_TOC returned 2, switch\n+\tto the other text partition before emitting LCL label and switch back\n+\tafter emitting the word after it.\n+\n 2017-09-07  Richard Biener  <rguenther@suse.de>\n \n \t* passes.def (pass_split_crit_edges): Remove instance before PRE."}, {"sha": "ecdf776b986f890a02f5a18e9beb5fc493eeb221", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 33, "deletions": 19, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=86373d9214e40b5a05b1469da4b7a1d92b4a60fc", "patch": "@@ -25277,32 +25277,41 @@ get_TOC_alias_set (void)\n \n /* This returns nonzero if the current function uses the TOC.  This is\n    determined by the presence of (use (unspec ... UNSPEC_TOC)), which\n-   is generated by the ABI_V4 load_toc_* patterns.  */\n+   is generated by the ABI_V4 load_toc_* patterns.\n+   Return 2 instead of 1 if the load_toc_* pattern is in the function\n+   partition that doesn't start the function.  */\n #if TARGET_ELF\n static int\n uses_TOC (void)\n {\n   rtx_insn *insn;\n+  int ret = 1;\n \n   for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n-    if (INSN_P (insn))\n-      {\n-\trtx pat = PATTERN (insn);\n-\tint i;\n+    {\n+      if (INSN_P (insn))\n+\t{\n+\t  rtx pat = PATTERN (insn);\n+\t  int i;\n \n-\tif (GET_CODE (pat) == PARALLEL)\n-\t  for (i = 0; i < XVECLEN (pat, 0); i++)\n-\t    {\n-\t      rtx sub = XVECEXP (pat, 0, i);\n-\t      if (GET_CODE (sub) == USE)\n-\t\t{\n-\t\t  sub = XEXP (sub, 0);\n-\t\t  if (GET_CODE (sub) == UNSPEC\n-\t\t      && XINT (sub, 1) == UNSPEC_TOC)\n-\t\t    return 1;\n-\t\t}\n-\t    }\n-      }\n+\t  if (GET_CODE (pat) == PARALLEL)\n+\t    for (i = 0; i < XVECLEN (pat, 0); i++)\n+\t      {\n+\t\trtx sub = XVECEXP (pat, 0, i);\n+\t\tif (GET_CODE (sub) == USE)\n+\t\t  {\n+\t\t    sub = XEXP (sub, 0);\n+\t\t    if (GET_CODE (sub) == UNSPEC\n+\t\t\t&& XINT (sub, 1) == UNSPEC_TOC)\n+\t\t      return ret;\n+\t\t  }\n+\t      }\n+\t}\n+      else if (crtl->has_bb_partition\n+\t       && NOTE_P (insn)\n+\t       && NOTE_KIND (insn) == NOTE_INSN_SWITCH_TEXT_SECTIONS)\n+\tret = 2;\n+    }\n   return 0;\n }\n #endif\n@@ -33336,14 +33345,17 @@ rs6000_elf_declare_function_name (FILE *file, const char *name, tree decl)\n       return;\n     }\n \n+  int uses_toc;\n   if (DEFAULT_ABI == ABI_V4\n       && (TARGET_RELOCATABLE || flag_pic > 1)\n       && !TARGET_SECURE_PLT\n       && (!constant_pool_empty_p () || crtl->profile)\n-      && uses_TOC ())\n+      && (uses_toc = uses_TOC ()))\n     {\n       char buf[256];\n \n+      if (uses_toc == 2)\n+\tswitch_to_other_text_partition ();\n       (*targetm.asm_out.internal_label) (file, \"LCL\", rs6000_pic_labelno);\n \n       fprintf (file, \"\\t.long \");\n@@ -33353,6 +33365,8 @@ rs6000_elf_declare_function_name (FILE *file, const char *name, tree decl)\n       ASM_GENERATE_INTERNAL_LABEL (buf, \"LCF\", rs6000_pic_labelno);\n       assemble_name (file, buf);\n       putc ('\\n', file);\n+      if (uses_toc == 2)\n+\tswitch_to_other_text_partition ();\n     }\n \n   ASM_OUTPUT_TYPE_DIRECTIVE (file, name, \"function\");"}, {"sha": "e98a911c64744c2cbe096b17616d206bed4b9b71", "filename": "gcc/output.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=86373d9214e40b5a05b1469da4b7a1d92b4a60fc", "patch": "@@ -537,6 +537,7 @@ extern section *mergeable_constant_section (machine_mode,\n extern section *function_section (tree);\n extern section *unlikely_text_section (void);\n extern section *current_function_section (void);\n+extern void switch_to_other_text_partition (void);\n \n /* Return the numbered .ctors.N (if CONSTRUCTOR_P) or .dtors.N (if\n    not) section for PRIORITY.  */"}, {"sha": "1080030cf5f5c297b1d3db18482f2203122d9657", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86373d9214e40b5a05b1469da4b7a1d92b4a60fc", "patch": "@@ -1,3 +1,8 @@\n+2017-09-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/81979\n+\t* gcc.dg/pr81979.c: New test.\n+\n 2017-09-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/82126"}, {"sha": "4ac9addbc04e8d6a2b432a0564eeaea65c03da6e", "filename": "gcc/testsuite/gcc.dg/pr81979.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81979.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81979.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr81979.c?ref=86373d9214e40b5a05b1469da4b7a1d92b4a60fc", "patch": "@@ -0,0 +1,32 @@\n+/* PR target/81979 */\n+/* { dg-do link } */\n+/* { dg-options \"-O2 -w\" } */\n+/* { dg-additional-options \"-fPIC\" { target fpic } } */\n+/* { dg-additional-options \"-freorder-blocks-and-partition\" { target freorder } } */\n+\n+int d;\n+\n+__attribute__((noinline, noclone)) void\n+foo (int x)\n+{\n+  int c;\n+  while (c < 1)\n+    {\n+      int o;\n+      for (o = 0; o < 4; ++o)\n+\tc /= (x != 0) ? 2 : x;\n+    }\n+\n+  d = 1;\n+  for (;;)\n+    ;\n+}\n+\n+int\n+main ()\n+{\n+  asm volatile (\"\" : : \"r\" (&d) : \"memory\");\n+  foo (d);\n+  asm volatile (\"\" : : \"r\" (&d) : \"memory\");\n+  return 0;\n+}"}, {"sha": "a7dca89e6dede86fc10949048223b2f6af23cb53", "filename": "gcc/varasm.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86373d9214e40b5a05b1469da4b7a1d92b4a60fc/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=86373d9214e40b5a05b1469da4b7a1d92b4a60fc", "patch": "@@ -695,6 +695,16 @@ unlikely_text_section_p (section *sect)\n   return sect == function_section_1 (current_function_decl, true);\n }\n \n+/* Switch to the other function partition (if inside of hot section\n+   into cold section, otherwise into the hot section).  */\n+\n+void\n+switch_to_other_text_partition (void)\n+{\n+  in_cold_section_p = !in_cold_section_p;\n+  switch_to_section (current_function_section ());\n+}\n+\n /* Return the read-only data section associated with function DECL.  */\n \n section *"}]}