{"sha": "c163789bfda0bec10cf515a6a26cfd81c8340e84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE2Mzc4OWJmZGEwYmVjMTBjZjUxNWE2YTI2Y2ZkODFjODM0MGU4NA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2016-02-26T15:24:55Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2016-02-26T15:24:55Z"}, "message": "p8vector-ldst.c: Adjust to test desired functionality for both 32-bit and 64-bit.\n\n2016-02-26  Michael Meissner <meissner@linux.vnet.ibm.com>\n\t    Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/p8vector-ldst.c: Adjust to test desired\n\tfunctionality for both 32-bit and 64-bit.\n\n\nCo-Authored-By: Bill Schmidt <wschmidt@linux.vnet.ibm.com>\n\nFrom-SVN: r233739", "tree": {"sha": "551c472ef89275a5713a2d4c797706b209db459e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/551c472ef89275a5713a2d4c797706b209db459e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c163789bfda0bec10cf515a6a26cfd81c8340e84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c163789bfda0bec10cf515a6a26cfd81c8340e84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c163789bfda0bec10cf515a6a26cfd81c8340e84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c163789bfda0bec10cf515a6a26cfd81c8340e84/comments", "author": null, "committer": null, "parents": [{"sha": "f443514b822d45e6895a8d461195ce7206cd0985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f443514b822d45e6895a8d461195ce7206cd0985", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f443514b822d45e6895a8d461195ce7206cd0985"}], "stats": {"total": 180, "additions": 95, "deletions": 85}, "files": [{"sha": "52b1d9e77c400dcc7f16a8d58631548e672fe916", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c163789bfda0bec10cf515a6a26cfd81c8340e84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c163789bfda0bec10cf515a6a26cfd81c8340e84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c163789bfda0bec10cf515a6a26cfd81c8340e84", "patch": "@@ -1,3 +1,9 @@\n+2016-02-26  Michael Meissner <meissner@linux.vnet.ibm.com>\n+\t    Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/p8vector-ldst.c: Adjust to test desired\n+\tfunctionality for both 32-bit and 64-bit.\n+\n 2016-02-26  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69551"}, {"sha": "de3f1b4ebbf226ca5257e28993337edfbd02e688", "filename": "gcc/testsuite/gcc.target/powerpc/p8vector-ldst.c", "status": "modified", "additions": 89, "deletions": 85, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c163789bfda0bec10cf515a6a26cfd81c8340e84/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-ldst.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c163789bfda0bec10cf515a6a26cfd81c8340e84/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-ldst.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-ldst.c?ref=c163789bfda0bec10cf515a6a26cfd81c8340e84", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n+/* { dg-do compile { target { powerpc*-*-* } } } */\n /* { dg-skip-if \"\" { powerpc*-*-darwin* } { \"*\" } { \"\" } } */\n /* { dg-require-effective-target powerpc_p8vector_ok } */\n /* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n@@ -51,13 +51,14 @@ load_store_sf (unsigned long num,\n   float value37\t= 0.0f;\n   float value38\t= 0.0f;\n   float value39\t= 0.0f;\n-  unsigned long in_mask;\n-  unsigned long out_mask;\n+  unsigned long in_mask, in_mask2;\n+  unsigned long out_mask, out_mask2;\n   unsigned long i;\n \n   for (i = 0; i < num; i++)\n     {\n       in_mask = *in_mask_ptr++;\n+      in_mask2 = *in_mask_ptr++;\n       if ((in_mask & (1L <<  0)) != 0L)\n \tvalue00 = *from_ptr++;\n \n@@ -118,67 +119,68 @@ load_store_sf (unsigned long num,\n       if ((in_mask & (1L << 19)) != 0L)\n \tvalue19 = *from_ptr++;\n \n-      if ((in_mask & (1L << 20)) != 0L)\n+      if ((in_mask2 & (1L << 0)) != 0L)\n \tvalue20 = *from_ptr++;\n \n-      if ((in_mask & (1L << 21)) != 0L)\n+      if ((in_mask2 & (1L << 1)) != 0L)\n \tvalue21 = *from_ptr++;\n \n-      if ((in_mask & (1L << 22)) != 0L)\n+      if ((in_mask2 & (1L << 2)) != 0L)\n \tvalue22 = *from_ptr++;\n \n-      if ((in_mask & (1L << 23)) != 0L)\n+      if ((in_mask2 & (1L << 3)) != 0L)\n \tvalue23 = *from_ptr++;\n \n-      if ((in_mask & (1L << 24)) != 0L)\n+      if ((in_mask2 & (1L << 4)) != 0L)\n \tvalue24 = *from_ptr++;\n \n-      if ((in_mask & (1L << 25)) != 0L)\n+      if ((in_mask2 & (1L << 5)) != 0L)\n \tvalue25 = *from_ptr++;\n \n-      if ((in_mask & (1L << 26)) != 0L)\n+      if ((in_mask2 & (1L << 6)) != 0L)\n \tvalue26 = *from_ptr++;\n \n-      if ((in_mask & (1L << 27)) != 0L)\n+      if ((in_mask2 & (1L << 7)) != 0L)\n \tvalue27 = *from_ptr++;\n \n-      if ((in_mask & (1L << 28)) != 0L)\n+      if ((in_mask2 & (1L << 8)) != 0L)\n \tvalue28 = *from_ptr++;\n \n-      if ((in_mask & (1L << 29)) != 0L)\n+      if ((in_mask2 & (1L << 9)) != 0L)\n \tvalue29 = *from_ptr++;\n \n-      if ((in_mask & (1L << 30)) != 0L)\n+      if ((in_mask2 & (1L << 10)) != 0L)\n \tvalue30 = *from_ptr++;\n \n-      if ((in_mask & (1L << 31)) != 0L)\n+      if ((in_mask2 & (1L << 11)) != 0L)\n \tvalue31 = *from_ptr++;\n \n-      if ((in_mask & (1L << 32)) != 0L)\n+      if ((in_mask2 & (1L << 12)) != 0L)\n \tvalue32 = *from_ptr++;\n \n-      if ((in_mask & (1L << 33)) != 0L)\n+      if ((in_mask2 & (1L << 13)) != 0L)\n \tvalue33 = *from_ptr++;\n \n-      if ((in_mask & (1L << 34)) != 0L)\n+      if ((in_mask2 & (1L << 14)) != 0L)\n \tvalue34 = *from_ptr++;\n \n-      if ((in_mask & (1L << 35)) != 0L)\n+      if ((in_mask2 & (1L << 15)) != 0L)\n \tvalue35 = *from_ptr++;\n \n-      if ((in_mask & (1L << 36)) != 0L)\n+      if ((in_mask2 & (1L << 16)) != 0L)\n \tvalue36 = *from_ptr++;\n \n-      if ((in_mask & (1L << 37)) != 0L)\n+      if ((in_mask2 & (1L << 17)) != 0L)\n \tvalue37 = *from_ptr++;\n \n-      if ((in_mask & (1L << 38)) != 0L)\n+      if ((in_mask2 & (1L << 18)) != 0L)\n \tvalue38 = *from_ptr++;\n \n-      if ((in_mask & (1L << 39)) != 0L)\n+      if ((in_mask2 & (1L << 19)) != 0L)\n \tvalue39 = *from_ptr++;\n \n       out_mask = *out_mask_ptr++;\n+      out_mask2 = *out_mask_ptr++;\n       if ((out_mask & (1L <<  0)) != 0L)\n \t*to_ptr++ = value00;\n \n@@ -239,64 +241,64 @@ load_store_sf (unsigned long num,\n       if ((out_mask & (1L << 19)) != 0L)\n \t*to_ptr++ = value19;\n \n-      if ((out_mask & (1L << 20)) != 0L)\n+      if ((out_mask2 & (1L << 0)) != 0L)\n \t*to_ptr++ = value20;\n \n-      if ((out_mask & (1L << 21)) != 0L)\n+      if ((out_mask2 & (1L << 1)) != 0L)\n \t*to_ptr++ = value21;\n \n-      if ((out_mask & (1L << 22)) != 0L)\n+      if ((out_mask2 & (1L << 2)) != 0L)\n \t*to_ptr++ = value22;\n \n-      if ((out_mask & (1L << 23)) != 0L)\n+      if ((out_mask2 & (1L << 3)) != 0L)\n \t*to_ptr++ = value23;\n \n-      if ((out_mask & (1L << 24)) != 0L)\n+      if ((out_mask2 & (1L << 4)) != 0L)\n \t*to_ptr++ = value24;\n \n-      if ((out_mask & (1L << 25)) != 0L)\n+      if ((out_mask2 & (1L << 5)) != 0L)\n \t*to_ptr++ = value25;\n \n-      if ((out_mask & (1L << 26)) != 0L)\n+      if ((out_mask2 & (1L << 6)) != 0L)\n \t*to_ptr++ = value26;\n \n-      if ((out_mask & (1L << 27)) != 0L)\n+      if ((out_mask2 & (1L << 7)) != 0L)\n \t*to_ptr++ = value27;\n \n-      if ((out_mask & (1L << 28)) != 0L)\n+      if ((out_mask2 & (1L << 8)) != 0L)\n \t*to_ptr++ = value28;\n \n-      if ((out_mask & (1L << 29)) != 0L)\n+      if ((out_mask2 & (1L << 9)) != 0L)\n \t*to_ptr++ = value29;\n \n-      if ((out_mask & (1L << 30)) != 0L)\n+      if ((out_mask2 & (1L << 10)) != 0L)\n \t*to_ptr++ = value30;\n \n-      if ((out_mask & (1L << 31)) != 0L)\n+      if ((out_mask2 & (1L << 11)) != 0L)\n \t*to_ptr++ = value31;\n \n-      if ((out_mask & (1L << 32)) != 0L)\n+      if ((out_mask2 & (1L << 12)) != 0L)\n \t*to_ptr++ = value32;\n \n-      if ((out_mask & (1L << 33)) != 0L)\n+      if ((out_mask2 & (1L << 13)) != 0L)\n \t*to_ptr++ = value33;\n \n-      if ((out_mask & (1L << 34)) != 0L)\n+      if ((out_mask2 & (1L << 14)) != 0L)\n \t*to_ptr++ = value34;\n \n-      if ((out_mask & (1L << 35)) != 0L)\n+      if ((out_mask2 & (1L << 15)) != 0L)\n \t*to_ptr++ = value35;\n \n-      if ((out_mask & (1L << 36)) != 0L)\n+      if ((out_mask2 & (1L << 16)) != 0L)\n \t*to_ptr++ = value36;\n \n-      if ((out_mask & (1L << 37)) != 0L)\n+      if ((out_mask2 & (1L << 17)) != 0L)\n \t*to_ptr++ = value37;\n \n-      if ((out_mask & (1L << 38)) != 0L)\n+      if ((out_mask2 & (1L << 18)) != 0L)\n \t*to_ptr++ = value38;\n \n-      if ((out_mask & (1L << 39)) != 0L)\n+      if ((out_mask2 & (1L << 19)) != 0L)\n \t*to_ptr++ = value39;\n     }\n \n@@ -357,13 +359,14 @@ load_store_df (unsigned long num,\n   double value37\t= 0.0;\n   double value38\t= 0.0;\n   double value39\t= 0.0;\n-  unsigned long in_mask;\n-  unsigned long out_mask;\n+  unsigned long in_mask, in_mask2;\n+  unsigned long out_mask, out_mask2;\n   unsigned long i;\n \n   for (i = 0; i < num; i++)\n     {\n       in_mask = *in_mask_ptr++;\n+      in_mask2 = *in_mask_ptr++;\n       if ((in_mask & (1L <<  0)) != 0L)\n \tvalue00 = *from_ptr++;\n \n@@ -424,67 +427,68 @@ load_store_df (unsigned long num,\n       if ((in_mask & (1L << 19)) != 0L)\n \tvalue19 = *from_ptr++;\n \n-      if ((in_mask & (1L << 20)) != 0L)\n+      if ((in_mask2 & (1L << 0)) != 0L)\n \tvalue20 = *from_ptr++;\n \n-      if ((in_mask & (1L << 21)) != 0L)\n+      if ((in_mask2 & (1L << 1)) != 0L)\n \tvalue21 = *from_ptr++;\n \n-      if ((in_mask & (1L << 22)) != 0L)\n+      if ((in_mask2 & (1L << 2)) != 0L)\n \tvalue22 = *from_ptr++;\n \n-      if ((in_mask & (1L << 23)) != 0L)\n+      if ((in_mask2 & (1L << 3)) != 0L)\n \tvalue23 = *from_ptr++;\n \n-      if ((in_mask & (1L << 24)) != 0L)\n+      if ((in_mask2 & (1L << 4)) != 0L)\n \tvalue24 = *from_ptr++;\n \n-      if ((in_mask & (1L << 25)) != 0L)\n+      if ((in_mask2 & (1L << 5)) != 0L)\n \tvalue25 = *from_ptr++;\n \n-      if ((in_mask & (1L << 26)) != 0L)\n+      if ((in_mask2 & (1L << 6)) != 0L)\n \tvalue26 = *from_ptr++;\n \n-      if ((in_mask & (1L << 27)) != 0L)\n+      if ((in_mask2 & (1L << 7)) != 0L)\n \tvalue27 = *from_ptr++;\n \n-      if ((in_mask & (1L << 28)) != 0L)\n+      if ((in_mask2 & (1L << 8)) != 0L)\n \tvalue28 = *from_ptr++;\n \n-      if ((in_mask & (1L << 29)) != 0L)\n+      if ((in_mask2 & (1L << 9)) != 0L)\n \tvalue29 = *from_ptr++;\n \n-      if ((in_mask & (1L << 30)) != 0L)\n+      if ((in_mask2 & (1L << 10)) != 0L)\n \tvalue30 = *from_ptr++;\n \n-      if ((in_mask & (1L << 31)) != 0L)\n+      if ((in_mask2 & (1L << 11)) != 0L)\n \tvalue31 = *from_ptr++;\n \n-      if ((in_mask & (1L << 32)) != 0L)\n+      if ((in_mask2 & (1L << 12)) != 0L)\n \tvalue32 = *from_ptr++;\n \n-      if ((in_mask & (1L << 33)) != 0L)\n+      if ((in_mask2 & (1L << 13)) != 0L)\n \tvalue33 = *from_ptr++;\n \n-      if ((in_mask & (1L << 34)) != 0L)\n+      if ((in_mask2 & (1L << 14)) != 0L)\n \tvalue34 = *from_ptr++;\n \n-      if ((in_mask & (1L << 35)) != 0L)\n+      if ((in_mask2 & (1L << 15)) != 0L)\n \tvalue35 = *from_ptr++;\n \n-      if ((in_mask & (1L << 36)) != 0L)\n+      if ((in_mask2 & (1L << 16)) != 0L)\n \tvalue36 = *from_ptr++;\n \n-      if ((in_mask & (1L << 37)) != 0L)\n+      if ((in_mask2 & (1L << 17)) != 0L)\n \tvalue37 = *from_ptr++;\n \n-      if ((in_mask & (1L << 38)) != 0L)\n+      if ((in_mask2 & (1L << 18)) != 0L)\n \tvalue38 = *from_ptr++;\n \n-      if ((in_mask & (1L << 39)) != 0L)\n+      if ((in_mask2 & (1L << 19)) != 0L)\n \tvalue39 = *from_ptr++;\n \n       out_mask = *out_mask_ptr++;\n+      out_mask2 = *out_mask_ptr++;\n       if ((out_mask & (1L <<  0)) != 0L)\n \t*to_ptr++ = value00;\n \n@@ -545,64 +549,64 @@ load_store_df (unsigned long num,\n       if ((out_mask & (1L << 19)) != 0L)\n \t*to_ptr++ = value19;\n \n-      if ((out_mask & (1L << 20)) != 0L)\n+      if ((out_mask2 & (1L << 0)) != 0L)\n \t*to_ptr++ = value20;\n \n-      if ((out_mask & (1L << 21)) != 0L)\n+      if ((out_mask2 & (1L << 1)) != 0L)\n \t*to_ptr++ = value21;\n \n-      if ((out_mask & (1L << 22)) != 0L)\n+      if ((out_mask2 & (1L << 2)) != 0L)\n \t*to_ptr++ = value22;\n \n-      if ((out_mask & (1L << 23)) != 0L)\n+      if ((out_mask2 & (1L << 3)) != 0L)\n \t*to_ptr++ = value23;\n \n-      if ((out_mask & (1L << 24)) != 0L)\n+      if ((out_mask2 & (1L << 4)) != 0L)\n \t*to_ptr++ = value24;\n \n-      if ((out_mask & (1L << 25)) != 0L)\n+      if ((out_mask2 & (1L << 5)) != 0L)\n \t*to_ptr++ = value25;\n \n-      if ((out_mask & (1L << 26)) != 0L)\n+      if ((out_mask2 & (1L << 6)) != 0L)\n \t*to_ptr++ = value26;\n \n-      if ((out_mask & (1L << 27)) != 0L)\n+      if ((out_mask2 & (1L << 7)) != 0L)\n \t*to_ptr++ = value27;\n \n-      if ((out_mask & (1L << 28)) != 0L)\n+      if ((out_mask2 & (1L << 8)) != 0L)\n \t*to_ptr++ = value28;\n \n-      if ((out_mask & (1L << 29)) != 0L)\n+      if ((out_mask2 & (1L << 9)) != 0L)\n \t*to_ptr++ = value29;\n \n-      if ((out_mask & (1L << 30)) != 0L)\n+      if ((out_mask2 & (1L << 10)) != 0L)\n \t*to_ptr++ = value30;\n \n-      if ((out_mask & (1L << 31)) != 0L)\n+      if ((out_mask2 & (1L << 11)) != 0L)\n \t*to_ptr++ = value31;\n \n-      if ((out_mask & (1L << 32)) != 0L)\n+      if ((out_mask2 & (1L << 12)) != 0L)\n \t*to_ptr++ = value32;\n \n-      if ((out_mask & (1L << 33)) != 0L)\n+      if ((out_mask2 & (1L << 13)) != 0L)\n \t*to_ptr++ = value33;\n \n-      if ((out_mask & (1L << 34)) != 0L)\n+      if ((out_mask2 & (1L << 14)) != 0L)\n \t*to_ptr++ = value34;\n \n-      if ((out_mask & (1L << 35)) != 0L)\n+      if ((out_mask2 & (1L << 15)) != 0L)\n \t*to_ptr++ = value35;\n \n-      if ((out_mask & (1L << 36)) != 0L)\n+      if ((out_mask2 & (1L << 16)) != 0L)\n \t*to_ptr++ = value36;\n \n-      if ((out_mask & (1L << 37)) != 0L)\n+      if ((out_mask2 & (1L << 17)) != 0L)\n \t*to_ptr++ = value37;\n \n-      if ((out_mask & (1L << 38)) != 0L)\n+      if ((out_mask2 & (1L << 18)) != 0L)\n \t*to_ptr++ = value38;\n \n-      if ((out_mask & (1L << 39)) != 0L)\n+      if ((out_mask2 & (1L << 19)) != 0L)\n \t*to_ptr++ = value39;\n     }\n "}]}