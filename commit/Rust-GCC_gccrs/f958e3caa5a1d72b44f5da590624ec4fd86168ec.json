{"sha": "f958e3caa5a1d72b44f5da590624ec4fd86168ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk1OGUzY2FhNWExZDcyYjQ0ZjVkYTU5MDYyNGVjNGZkODYxNjhlYw==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2009-01-04T23:02:02Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2009-01-04T23:02:02Z"}, "message": "configure.ac: Exchange the order of GLIBCXX_ENABLE_THREADS and GLIBCXX_ENABLE_ATOMIC_BUILTINS...\n\n\t* configure.ac: Exchange the order of GLIBCXX_ENABLE_THREADS and\n\tGLIBCXX_ENABLE_ATOMIC_BUILTINS macro invocations.\n\t* configure: Regenerate.\n\nFrom-SVN: r143062", "tree": {"sha": "99400288920c663de3dcc3cca9f499ffb1972fcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99400288920c663de3dcc3cca9f499ffb1972fcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f958e3caa5a1d72b44f5da590624ec4fd86168ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f958e3caa5a1d72b44f5da590624ec4fd86168ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f958e3caa5a1d72b44f5da590624ec4fd86168ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f958e3caa5a1d72b44f5da590624ec4fd86168ec/comments", "author": null, "committer": null, "parents": [{"sha": "0009b473a0fe5c76e303f1cc34251df0cba2d478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0009b473a0fe5c76e303f1cc34251df0cba2d478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0009b473a0fe5c76e303f1cc34251df0cba2d478"}], "stats": {"total": 68, "additions": 37, "deletions": 31}, "files": [{"sha": "77014c1563fb3969485aae32488c6c85950c3727", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f958e3caa5a1d72b44f5da590624ec4fd86168ec/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f958e3caa5a1d72b44f5da590624ec4fd86168ec/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f958e3caa5a1d72b44f5da590624ec4fd86168ec", "patch": "@@ -1,3 +1,9 @@\n+2009-01-05  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* configure.ac: Exchange the order of GLIBCXX_ENABLE_THREADS and\n+\tGLIBCXX_ENABLE_ATOMIC_BUILTINS macro invocations.\n+\t* configure: Regenerate.\n+\n 2009-01-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR libstdc++/38720"}, {"sha": "c61affc4101eae4af44002dd4fec6c44eaaf2487", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f958e3caa5a1d72b44f5da590624ec4fd86168ec/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f958e3caa5a1d72b44f5da590624ec4fd86168ec/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=f958e3caa5a1d72b44f5da590624ec4fd86168ec", "patch": "@@ -14722,6 +14722,32 @@ echo \"${ECHO_T}$enable_libstdcxx_pch\" >&6\n \n \n \n+  echo \"$as_me:$LINENO: checking for thread model used by GCC\" >&5\n+echo $ECHO_N \"checking for thread model used by GCC... $ECHO_C\" >&6\n+  target_thread_file=`$CXX -v 2>&1 | sed -n 's/^Thread model: //p'`\n+  echo \"$as_me:$LINENO: result: $target_thread_file\" >&5\n+echo \"${ECHO_T}$target_thread_file\" >&6\n+\n+  if test $target_thread_file != single; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_GTHR_DEFAULT 1\n+_ACEOF\n+\n+  fi\n+\n+  glibcxx_thread_h=gthr-$target_thread_file.h\n+\n+    gthread_file=${toplevel_srcdir}/gcc/${glibcxx_thread_h}\n+  if grep __GTHREADS $gthread_file >/dev/null 2>&1 ; then\n+    enable_thread=yes\n+  else\n+   enable_thread=no\n+  fi\n+\n+\n+\n+\n \n \n   ac_ext=cc\n@@ -14739,7 +14765,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for a builtins test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 14742 \"configure\"\n+#line 14768 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -14778,7 +14804,7 @@ echo \"${ECHO_T}$enable_atomic_builtinsb\" >&6\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 14781 \"configure\"\n+#line 14807 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -14817,7 +14843,7 @@ echo \"${ECHO_T}$enable_atomic_builtinss\" >&6\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 14820 \"configure\"\n+#line 14846 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -14857,7 +14883,7 @@ echo \"${ECHO_T}$enable_atomic_builtinsi\" >&6\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 14860 \"configure\"\n+#line 14886 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -14929,32 +14955,6 @@ echo \"$as_me: WARNING: Performance of certain classes will degrade as a result.\"\n \n \n \n-  echo \"$as_me:$LINENO: checking for thread model used by GCC\" >&5\n-echo $ECHO_N \"checking for thread model used by GCC... $ECHO_C\" >&6\n-  target_thread_file=`$CXX -v 2>&1 | sed -n 's/^Thread model: //p'`\n-  echo \"$as_me:$LINENO: result: $target_thread_file\" >&5\n-echo \"${ECHO_T}$target_thread_file\" >&6\n-\n-  if test $target_thread_file != single; then\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_GTHR_DEFAULT 1\n-_ACEOF\n-\n-  fi\n-\n-  glibcxx_thread_h=gthr-$target_thread_file.h\n-\n-    gthread_file=${toplevel_srcdir}/gcc/${glibcxx_thread_h}\n-  if grep __GTHREADS $gthread_file >/dev/null 2>&1 ; then\n-    enable_thread=yes\n-  else\n-   enable_thread=no\n-  fi\n-\n-\n-\n-\n # Checks for compiler support that doesn't require linking.\n \n   # All these tests are for C++; save the language and the compiler flags."}, {"sha": "7fc802e4be9a657dbf4b7322e1ad1beabe11d805", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f958e3caa5a1d72b44f5da590624ec4fd86168ec/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f958e3caa5a1d72b44f5da590624ec4fd86168ec/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=f958e3caa5a1d72b44f5da590624ec4fd86168ec", "patch": "@@ -97,8 +97,8 @@ GLIBCXX_ENABLE_HOSTED\n # Enable compiler support that doesn't require linking.\n GLIBCXX_ENABLE_SJLJ_EXCEPTIONS\n GLIBCXX_ENABLE_PCH($is_hosted)\n-GLIBCXX_ENABLE_ATOMIC_BUILTINS\n GLIBCXX_ENABLE_THREADS\n+GLIBCXX_ENABLE_ATOMIC_BUILTINS\n \n # Checks for compiler support that doesn't require linking.\n GLIBCXX_CHECK_COMPILER_FEATURES"}]}