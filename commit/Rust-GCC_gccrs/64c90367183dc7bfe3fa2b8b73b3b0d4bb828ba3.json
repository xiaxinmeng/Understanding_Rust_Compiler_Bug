{"sha": "64c90367183dc7bfe3fa2b8b73b3b0d4bb828ba3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRjOTAzNjcxODNkYzdiZmUzZmEyYjhiNzNiM2IwZDRiYjgyOGJhMw==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2006-05-11T20:53:04Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2006-05-11T20:53:04Z"}, "message": "NameFinder.java (blacklist): New static field.\n\n2006-05-11  Bryce McKinlay  <mckinlay@redhat.com>\n\n\t* gnu/gcj/runtime/NameFinder.java (blacklist): New static field.\n\t(lookup): If addr2line fails to find an address, flag the binary as\n\thaving no debug info and avoid calling addr2line on it again.\n\nFrom-SVN: r113711", "tree": {"sha": "2ebddb0c7876525f8fd0157cba925718c4cc7d8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ebddb0c7876525f8fd0157cba925718c4cc7d8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64c90367183dc7bfe3fa2b8b73b3b0d4bb828ba3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64c90367183dc7bfe3fa2b8b73b3b0d4bb828ba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64c90367183dc7bfe3fa2b8b73b3b0d4bb828ba3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64c90367183dc7bfe3fa2b8b73b3b0d4bb828ba3/comments", "author": null, "committer": null, "parents": [{"sha": "1dbf8c2405ea8618f493c0d5bb985f4c28d73570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dbf8c2405ea8618f493c0d5bb985f4c28d73570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dbf8c2405ea8618f493c0d5bb985f4c28d73570"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "fa8be5db688dfb73cceda5e60186f96a38191312", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c90367183dc7bfe3fa2b8b73b3b0d4bb828ba3/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c90367183dc7bfe3fa2b8b73b3b0d4bb828ba3/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=64c90367183dc7bfe3fa2b8b73b3b0d4bb828ba3", "patch": "@@ -1,3 +1,9 @@\n+2006-05-11  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\t* gnu/gcj/runtime/NameFinder.java (blacklist): New static field.\n+\t(lookup): If addr2line fails to find an address, flag the binary as\n+\thaving no debug info and avoid calling addr2line on it again.\n+\n 2006-05-11  David Daney  <ddaney@avtrex.com>\n \n \t* testsuite/libjava.compile/PR20418.java: New."}, {"sha": "bfc3e25d34545293cbb8eafcf8a9c4aaae95531b", "filename": "libjava/gnu/gcj/runtime/NameFinder.java", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c90367183dc7bfe3fa2b8b73b3b0d4bb828ba3/libjava%2Fgnu%2Fgcj%2Fruntime%2FNameFinder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c90367183dc7bfe3fa2b8b73b3b0d4bb828ba3/libjava%2Fgnu%2Fgcj%2Fruntime%2FNameFinder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FNameFinder.java?ref=64c90367183dc7bfe3fa2b8b73b3b0d4bb828ba3", "patch": "@@ -20,8 +20,11 @@\n import java.io.OutputStreamWriter;\n import java.io.IOException;\n import java.io.File;\n+import java.util.Collections;\n import java.util.Iterator;\n import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Set;\n \n \n /**\n@@ -54,6 +57,10 @@\n   private String sourceFile;\n   private int lineNum;\n   private HashMap procs = new HashMap();\n+  /**\n+   * Set of binary files that addr2line should not be called on.\n+   */\n+  private static Set blacklist = Collections.synchronizedSet(new HashSet());\n \n   private static final boolean use_addr2line\n           = Boolean.valueOf(System.getProperty\n@@ -150,7 +157,7 @@ public void lookup (String file, long addr)\n     sourceFile = null;\n     lineNum = -1;\n     \n-    if (! use_addr2line)\n+    if (! use_addr2line || blacklist.contains(file))\n       return;\n     Addr2Line addr2line = (Addr2Line) procs.get(file);\n     if (addr2line == null)\n@@ -179,6 +186,12 @@ public void lookup (String file, long addr)\n \t  String lineNumStr = result.substring(split + 1, result.length());\n \t  lineNum = Integer.parseInt (lineNumStr);\n \t}\n+      else\n+        {\n+\t  /* This binary has no debug info (assuming addr was valid). \n+\t     Avoid repeat addr2line invocations. */\n+ \t  blacklist.add(binaryFile);\n+\t}\n       }\n     catch (IOException ioe)\n       {"}]}