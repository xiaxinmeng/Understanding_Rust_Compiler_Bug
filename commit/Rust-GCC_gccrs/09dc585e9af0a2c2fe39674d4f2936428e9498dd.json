{"sha": "09dc585e9af0a2c2fe39674d4f2936428e9498dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlkYzU4NWU5YWYwYTJjMmZlMzk2NzRkNGYyOTM2NDI4ZTk0OThkZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-09-27T13:44:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-09-27T13:44:10Z"}, "message": "re PR middle-end/58551 (ICE with abort in OpenMP SESE region inside of some loop)\n\n\tPR middle-end/58551\n\t* tree-cfg.c (move_sese_region_to_fn): Also move loops that\n\tare children of outermost saved_cfun's loop, and set it up to\n\tbe moved to dest_cfun's outermost loop.  Fix up num_nodes adjustments\n\tif loop != loop0 and SESE region contains bbs that belong to loop0.\n\n\t* c-c++-common/gomp/pr58551.c: New test.\n\nFrom-SVN: r202972", "tree": {"sha": "397b9bfaf3b6c235b4e2f991fd202f64d3ef1996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/397b9bfaf3b6c235b4e2f991fd202f64d3ef1996"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09dc585e9af0a2c2fe39674d4f2936428e9498dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09dc585e9af0a2c2fe39674d4f2936428e9498dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09dc585e9af0a2c2fe39674d4f2936428e9498dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09dc585e9af0a2c2fe39674d4f2936428e9498dd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ec5a350405c8c57cbe7dd264964f2577e834baab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec5a350405c8c57cbe7dd264964f2577e834baab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec5a350405c8c57cbe7dd264964f2577e834baab"}], "stats": {"total": 79, "additions": 71, "deletions": 8}, "files": [{"sha": "620229e3b3bd874b0efeef37cd406a4e2ed278a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09dc585e9af0a2c2fe39674d4f2936428e9498dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09dc585e9af0a2c2fe39674d4f2936428e9498dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09dc585e9af0a2c2fe39674d4f2936428e9498dd", "patch": "@@ -1,3 +1,11 @@\n+2013-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/58551\n+\t* tree-cfg.c (move_sese_region_to_fn): Also move loops that\n+\tare children of outermost saved_cfun's loop, and set it up to\n+\tbe moved to dest_cfun's outermost loop.  Fix up num_nodes adjustments\n+\tif loop != loop0 and SESE region contains bbs that belong to loop0.\n+\n 2013-09-27  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* rtlanal.c (must_be_base_p, must_be_index_p): Delete."}, {"sha": "2696aa2ea85e1f8488259a94a24d0ad2c3dc44f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09dc585e9af0a2c2fe39674d4f2936428e9498dd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09dc585e9af0a2c2fe39674d4f2936428e9498dd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09dc585e9af0a2c2fe39674d4f2936428e9498dd", "patch": "@@ -1,3 +1,8 @@\n+2013-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/58551\n+\t* c-c++-common/gomp/pr58551.c: New test.\n+\n 2013-09-27  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/58459"}, {"sha": "e2db70f9e8696a06fd0def787c23ba2322e3f783", "filename": "gcc/testsuite/c-c++-common/gomp/pr58551.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09dc585e9af0a2c2fe39674d4f2936428e9498dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr58551.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09dc585e9af0a2c2fe39674d4f2936428e9498dd/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr58551.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr58551.c?ref=09dc585e9af0a2c2fe39674d4f2936428e9498dd", "patch": "@@ -0,0 +1,33 @@\n+/* PR middle-end/58551 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O0 -fopenmp\" } */\n+\n+void\n+foo (int *a)\n+{\n+  int i;\n+  for (i = 0; i < 8; i++)\n+    #pragma omp task\n+    if (a[i])\n+      __builtin_abort ();\n+}\n+\n+void bar (int, int);\n+\n+void\n+baz (int *a)\n+{\n+  int i;\n+  for (i = 0; i < 8; i++)\n+    #pragma omp task\n+    if (a[i])\n+      {\n+\tint j, k;\n+\tfor (j = 0; j < 10; j++)\n+\t  for (k = 0; k < 8; k++)\n+\t    bar (j, k);\n+\tfor (k = 0; k < 12; k++)\n+\t  bar (-1, k);\n+\t__builtin_abort ();\n+      }\n+}"}, {"sha": "d1a6c31c27d526295066ce92bafa7fb6f112fee6", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09dc585e9af0a2c2fe39674d4f2936428e9498dd/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09dc585e9af0a2c2fe39674d4f2936428e9498dd/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=09dc585e9af0a2c2fe39674d4f2936428e9498dd", "patch": "@@ -6662,12 +6662,13 @@ move_sese_region_to_fn (struct function *dest_cfun, basic_block entry_bb,\n   struct function *saved_cfun = cfun;\n   int *entry_flag, *exit_flag;\n   unsigned *entry_prob, *exit_prob;\n-  unsigned i, num_entry_edges, num_exit_edges;\n+  unsigned i, num_entry_edges, num_exit_edges, num_nodes;\n   edge e;\n   edge_iterator ei;\n   htab_t new_label_map;\n   struct pointer_map_t *vars_map, *eh_map;\n   struct loop *loop = entry_bb->loop_father;\n+  struct loop *loop0 = get_loop (saved_cfun, 0);\n   struct move_stmt_d d;\n \n   /* If ENTRY does not strictly dominate EXIT, this cannot be an SESE\n@@ -6760,16 +6761,29 @@ move_sese_region_to_fn (struct function *dest_cfun, basic_block entry_bb,\n   set_loops_for_fn (dest_cfun, loops);\n \n   /* Move the outlined loop tree part.  */\n+  num_nodes = bbs.length ();\n   FOR_EACH_VEC_ELT (bbs, i, bb)\n     {\n-      if (bb->loop_father->header == bb\n-\t  && loop_outer (bb->loop_father) == loop)\n+      if (bb->loop_father->header == bb)\n \t{\n \t  struct loop *this_loop = bb->loop_father;\n-\t  flow_loop_tree_node_remove (bb->loop_father);\n-\t  flow_loop_tree_node_add (get_loop (dest_cfun, 0), this_loop);\n-\t  fixup_loop_arrays_after_move (saved_cfun, cfun, this_loop);\n+\t  struct loop *outer = loop_outer (this_loop);\n+\t  if (outer == loop\n+\t      /* If the SESE region contains some bbs ending with\n+\t\t a noreturn call, those are considered to belong\n+\t\t to the outermost loop in saved_cfun, rather than\n+\t\t the entry_bb's loop_father.  */\n+\t      || outer == loop0)\n+\t    {\n+\t      if (outer != loop)\n+\t\tnum_nodes -= this_loop->num_nodes;\n+\t      flow_loop_tree_node_remove (bb->loop_father);\n+\t      flow_loop_tree_node_add (get_loop (dest_cfun, 0), this_loop);\n+\t      fixup_loop_arrays_after_move (saved_cfun, cfun, this_loop);\n+\t    }\n \t}\n+      else if (bb->loop_father == loop0 && loop0 != loop)\n+\tnum_nodes--;\n \n       /* Remove loop exits from the outlined region.  */\n       if (loops_for_fn (saved_cfun)->exits)\n@@ -6789,6 +6803,7 @@ move_sese_region_to_fn (struct function *dest_cfun, basic_block entry_bb,\n \n   /* Setup a mapping to be used by move_block_to_fn.  */\n   loop->aux = current_loops->tree_root;\n+  loop0->aux = current_loops->tree_root;\n \n   pop_cfun ();\n \n@@ -6817,11 +6832,13 @@ move_sese_region_to_fn (struct function *dest_cfun, basic_block entry_bb,\n     }\n \n   loop->aux = NULL;\n+  loop0->aux = NULL;\n   /* Loop sizes are no longer correct, fix them up.  */\n-  loop->num_nodes -= bbs.length ();\n+  loop->num_nodes -= num_nodes;\n   for (struct loop *outer = loop_outer (loop);\n        outer; outer = loop_outer (outer))\n-    outer->num_nodes -= bbs.length ();\n+    outer->num_nodes -= num_nodes;\n+  loop0->num_nodes -= bbs.length () - num_nodes;\n \n   if (saved_cfun->has_simduid_loops || saved_cfun->has_force_vect_loops)\n     {"}]}