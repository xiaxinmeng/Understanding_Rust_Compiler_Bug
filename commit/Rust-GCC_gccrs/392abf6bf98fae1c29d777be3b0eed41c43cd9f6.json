{"sha": "392abf6bf98fae1c29d777be3b0eed41c43cd9f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkyYWJmNmJmOThmYWUxYzI5ZDc3N2JlM2IwZWVkNDFjNDNjZDlmNg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2004-07-23T11:49:59Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2004-07-23T11:49:59Z"}, "message": "System.java (static): Set http.agent system property when not yet set.\n\n       * java/lang/System.java (static): Set http.agent system property when\n       not yet set.\n       * gnu/java/net/protocol/http/Connection.java (static): Get httpAgent\n       from system property inside AccessController.doPrivileged() call.\n       (proxyPort): Made package private.\n       (proxyInUse): Likewise.\n       (proxyHost): Likewise.\n       (userAgent): Likewise.\n\nFrom-SVN: r85078", "tree": {"sha": "64aea4322a219bf57b033cdd9cbe3dd03d623c2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64aea4322a219bf57b033cdd9cbe3dd03d623c2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/392abf6bf98fae1c29d777be3b0eed41c43cd9f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392abf6bf98fae1c29d777be3b0eed41c43cd9f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/392abf6bf98fae1c29d777be3b0eed41c43cd9f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/392abf6bf98fae1c29d777be3b0eed41c43cd9f6/comments", "author": null, "committer": null, "parents": [{"sha": "6d97cb60ec7029e1cab1e85eb56b0c322870f6fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d97cb60ec7029e1cab1e85eb56b0c322870f6fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d97cb60ec7029e1cab1e85eb56b0c322870f6fc"}], "stats": {"total": 99, "additions": 66, "deletions": 33}, "files": [{"sha": "e9dd6797d3463ada4ce953fabf1782ace6db440b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392abf6bf98fae1c29d777be3b0eed41c43cd9f6/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392abf6bf98fae1c29d777be3b0eed41c43cd9f6/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=392abf6bf98fae1c29d777be3b0eed41c43cd9f6", "patch": "@@ -1,3 +1,14 @@\n+2004-07-23  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/lang/System.java (static): Set http.agent system property when\n+\tnot yet set.\n+\t* gnu/java/net/protocol/http/Connection.java (static): Get httpAgent\n+\tfrom system property inside AccessController.doPrivileged() call.\n+\t(proxyPort): Made package private.\n+\t(proxyInUse): Likewise.\n+\t(proxyHost): Likewise.\n+\t(userAgent): Likewise.\n+\n 2004-07-23  Mark Wielaard  <mark@klomp.org>\n \n \t* gnu/java/net/DefaultContentHandlerFactory.java: New dummy"}, {"sha": "728d14a7e6b9d1329bb86fe69826315f6bd0253e", "filename": "libjava/gnu/java/net/protocol/http/Connection.java", "status": "modified", "additions": 39, "deletions": 32, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392abf6bf98fae1c29d777be3b0eed41c43cd9f6/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392abf6bf98fae1c29d777be3b0eed41c43cd9f6/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java?ref=392abf6bf98fae1c29d777be3b0eed41c43cd9f6", "patch": "@@ -1,5 +1,6 @@\n /* HttpURLConnection.java -- URLConnection class for HTTP protocol\n-   Copyright (C) 1998, 1999, 2000, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2002, 2003, 2004\n+   Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -52,6 +53,8 @@\n import java.net.Socket;\n import java.net.URL;\n import java.net.URLConnection;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n@@ -76,41 +79,45 @@ public final class Connection extends HttpURLConnection\n    * The socket we are connected to\n    */\n   private Socket socket;\n-  private static int proxyPort = 80;\n-  private static boolean proxyInUse = false;\n-  private static String proxyHost = null;\n-\n-  private static final String userAgent;\n+  \n+  // Properties depeending on system properties settings\n+  static int proxyPort = 80;\n+  static boolean proxyInUse = false;\n+  static String proxyHost = null;\n+  static String userAgent;\n \n   static \n   {\n-    // Recognize some networking properties listed at\n-    // http://java.sun.com/j2se/1.4/docs/guide/net/properties.html.\n-    String port = null;\n-    proxyHost = System.getProperty(\"http.proxyHost\");\n-    if (proxyHost != null)\n-      {\n-\tproxyInUse = true;\n-\tif ((port = System.getProperty(\"http.proxyPort\")) != null)\n-\t  {\n-\t    try\n-\t      {\n-\t\tproxyPort = Integer.parseInt(port);\n-\t      }\n-\t    catch (Throwable t)\n-\t      {\n-\t\t// Nothing.  \n-\t      }\n-\t  }\n-      }\n+    // Make sure access control for system properties depends only on\n+    // our class ProtectionDomain, not on any (indirect) callers.\n+    AccessController.doPrivileged(new PrivilegedAction() {\n+\tpublic Object run()\n+\t{\n+\t  // Recognize some networking properties listed at\n+\t  // http://java.sun.com/j2se/1.4/docs/guide/net/properties.html.\n+\t  String port = null;\n+\t  proxyHost = System.getProperty(\"http.proxyHost\");\n+\t  if (proxyHost != null)\n+\t    {\n+\t      proxyInUse = true;\n+\t      if ((port = System.getProperty(\"http.proxyPort\")) != null)\n+\t\t{\n+\t\t  try\n+\t\t    {\n+\t\t      proxyPort = Integer.parseInt(port);\n+\t\t    }\n+\t\t  catch (Throwable t)\n+\t\t    {\n+\t\t      // Nothing.  \n+\t\t    }\n+\t\t}\n+\t    }\n+\t  \n+\t  userAgent = System.getProperty(\"http.agent\");\n \n-    userAgent = \"gnu-classpath/\"\n-      + System.getProperty(\"gnu.classpath.version\")\n-      + \" (\"\n-      + System.getProperty(\"gnu.classpath.vm.shortname\")\n-      + \"/\"\n-      + System.getProperty(\"java.vm.version\")\n-      + \")\";\n+\t  return null;\n+\t}\n+      });\n   }\n \n   /**"}, {"sha": "a8c0c23c0db9845fca864e7d2996e29a2b289e07", "filename": "libjava/java/lang/System.java", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/392abf6bf98fae1c29d777be3b0eed41c43cd9f6/libjava%2Fjava%2Flang%2FSystem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/392abf6bf98fae1c29d777be3b0eed41c43cd9f6/libjava%2Fjava%2Flang%2FSystem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FSystem.java?ref=392abf6bf98fae1c29d777be3b0eed41c43cd9f6", "patch": "@@ -1,5 +1,6 @@\n /* System.java -- useful methods to interface with the system\n-   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+   Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -98,6 +99,20 @@\n \tdefaultProperties.put(\"gnu.classpath.vm.shortname\", value);\n       }\n \n+    // Network properties\n+    if (defaultProperties.get(\"http.agent\") == null)\n+      {\n+\tString userAgent\n+\t  = (\"gnu-classpath/\"\n+\t     + defaultProperties.getProperty(\"gnu.classpath.version\")\n+\t     + \" (\"\n+\t     + defaultProperties.getProperty(\"gnu.classpath.vm.shortname\")\n+\t     + \"/\"\n+\t     + defaultProperties.getProperty(\"java.vm.version\")\n+\t     + \")\");\n+\tdefaultProperties.put(\"http.agent\", userAgent);\n+      }\n+\n     defaultProperties.put(\"gnu.cpu.endian\",\n \t\t\t  isWordsBigEndian() ? \"big\" : \"little\");\n "}]}