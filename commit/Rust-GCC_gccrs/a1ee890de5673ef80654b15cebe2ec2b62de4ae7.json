{"sha": "a1ee890de5673ef80654b15cebe2ec2b62de4ae7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFlZTg5MGRlNTY3M2VmODA2NTRiMTVjZWJlMmVjMmI2MmRlNGFlNw==", "commit": {"author": {"name": "Martin v. Loewis", "email": "martin@mira.isdn.cs.tu-berlin.de", "date": "1998-07-10T21:45:18Z"}, "committer": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "1998-07-10T21:45:18Z"}, "message": "singleton.C: Return error value instead of taking SIGSEGV.\n\n\t*  g++.other/singleton.C: Return error value instead of taking\n\tSIGSEGV.\n\nFrom-SVN: r21054", "tree": {"sha": "364ffb118769386354eaab4fc9e4d4e2dc920c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/364ffb118769386354eaab4fc9e4d4e2dc920c7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1ee890de5673ef80654b15cebe2ec2b62de4ae7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ee890de5673ef80654b15cebe2ec2b62de4ae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ee890de5673ef80654b15cebe2ec2b62de4ae7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ee890de5673ef80654b15cebe2ec2b62de4ae7/comments", "author": null, "committer": null, "parents": [{"sha": "4dfb04c6f44ca1dfe578eea00f008d98bb0561d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfb04c6f44ca1dfe578eea00f008d98bb0561d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dfb04c6f44ca1dfe578eea00f008d98bb0561d3"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "d48ad946a9e702b70531bec5e967a763bcf8a00f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ee890de5673ef80654b15cebe2ec2b62de4ae7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ee890de5673ef80654b15cebe2ec2b62de4ae7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a1ee890de5673ef80654b15cebe2ec2b62de4ae7", "patch": "@@ -1,3 +1,8 @@\n+Fri Jul 10 23:43:33 1998 Martin von Loewis <martin@mira.isdn.cs.tu-berlin.de>\n+\t\n+\t*  g++.other/singleton.C: Return error value instead of taking\n+\tSIGSEGV.\n+\n Fri Jul 10 10:02:03 1998  Klaus-Georg Adams <Klaus-Georg.Adams@chemie.uni-karlsruhe.de> \n \n \t*  g++.other/singleton.C: New test.   Warning is under dispute."}, {"sha": "fda64fb9a465698b6f74038283c340189f3f0d5b", "filename": "gcc/testsuite/g++.old-deja/g++.other/singleton.C", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ee890de5673ef80654b15cebe2ec2b62de4ae7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsingleton.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ee890de5673ef80654b15cebe2ec2b62de4ae7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsingleton.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsingleton.C?ref=a1ee890de5673ef80654b15cebe2ec2b62de4ae7", "patch": "@@ -1,38 +1,40 @@\n+// execution test - re-initialization of statics XFAIL *-*-*\n // This tests two things:\n-// 1. there is an annoying warning. singleton.C:27: warning: `class\n-// singleton' only defines private constructors and has no friends egcs\n-// fails to see that there is a public static accessor function.\n+// 1. there is an annoying warning.\n+// singleton.C:26: warning: `class singleton' only defines private constructors\n+and has no friends\n+// egcs fails to see that there is a public static accessor function.\n // 2. the program crashes, because apparently the static variable s in\n // singleton::instance() is considered constructed although the ctor\n-// exited via an exception.\n+// exited via an exception. (crash changed to non-zero return here)\n \n class singleton {\n public:\n        static singleton& instance() {\n                static singleton s;\n                return s;\n        }\n-       ~singleton() { delete sigsegv; }\n-       int crash() { return *sigsegv; }\n+       int check() {return initialized;}\n \n private:\n-       singleton() : sigsegv(0) {\n+       singleton() : initialized(1) {\n                if ( counter++ == 0 ) throw \"just for the heck of it\";\n-               sigsegv = new int(0);\n+               initialized = 2;\n        }\n        singleton( const singleton& rhs );\n        void operator=( const singleton& rhs );\n-       int* sigsegv;\n+       int initialized;\n        static int counter;\n-};\n+};  // gets bogus error - class is not useless XFAIL *-*-*\n \n int singleton::counter;\n \n int main()\n {\n        while (1) {\n                try {\n-                       return singleton::instance().crash();\n+                       return singleton::instance().ok()-2;\n                } catch (...) { }\n        }\n }\n+"}]}