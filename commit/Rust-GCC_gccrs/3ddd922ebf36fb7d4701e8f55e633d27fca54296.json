{"sha": "3ddd922ebf36fb7d4701e8f55e633d27fca54296", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RkZDkyMmViZjM2ZmI3ZDQ3MDFlOGY1NWU2MzNkMjdmY2E1NDI5Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T13:33:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T13:33:32Z"}, "message": "[multiple changes]\n\n2011-08-29  Yannick Moy  <moy@adacore.com>\n\n\t* exp_ch13.adb: Adjust previous change.\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb, prj.adb, sem_util.adb, sem_res.adb, gnat1drv.adb,\n\texp_ch4.adb, sem_ch8.adb: Minor code reorganization\n\tMinor reformatting.\n\nFrom-SVN: r178226", "tree": {"sha": "2cd208abe1d4a90b529b90894e8a74cc9c7d3425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cd208abe1d4a90b529b90894e8a74cc9c7d3425"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ddd922ebf36fb7d4701e8f55e633d27fca54296", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ddd922ebf36fb7d4701e8f55e633d27fca54296", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ddd922ebf36fb7d4701e8f55e633d27fca54296", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ddd922ebf36fb7d4701e8f55e633d27fca54296/comments", "author": null, "committer": null, "parents": [{"sha": "444acbddf8211319b4adc6c9b161ce836db7d129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/444acbddf8211319b4adc6c9b161ce836db7d129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/444acbddf8211319b4adc6c9b161ce836db7d129"}], "stats": {"total": 59, "additions": 40, "deletions": 19}, "files": [{"sha": "6d02bc6dd38758c38f917269a3d90c6d33f0ca97", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3ddd922ebf36fb7d4701e8f55e633d27fca54296", "patch": "@@ -1,3 +1,13 @@\n+2011-08-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_ch13.adb: Adjust previous change.\n+\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb, prj.adb, sem_util.adb, sem_res.adb, gnat1drv.adb,\n+\texp_ch4.adb, sem_ch8.adb: Minor code reorganization\n+\tMinor reformatting.\n+\n 2011-08-29  Emmanuel Briot  <briot@adacore.com>\n \n \t* make.adb, prj.adb, prj.ads (Compute_All_Imported_Projects): Also"}, {"sha": "a6890d72746313516902c340dfc7f1512a41c747", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=3ddd922ebf36fb7d4701e8f55e633d27fca54296", "patch": "@@ -307,13 +307,6 @@ package body Exp_Ch13 is\n       Delete         : Boolean := False;\n \n    begin\n-      --  In formal verification mode, do not generate useless and confusing\n-      --  expansion for freeze nodes.\n-\n-      if ALFA_Mode then\n-         return;\n-      end if;\n-\n       --  If there are delayed aspect specifications, we insert them just\n       --  before the freeze node. They are already analyzed so we don't need\n       --  to reanalyze them (they were analyzed before the type was frozen),"}, {"sha": "8ac78ac1f5e0da031ee858ee6460313fa9d74f53", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=3ddd922ebf36fb7d4701e8f55e633d27fca54296", "patch": "@@ -7593,6 +7593,9 @@ package body Exp_Ch4 is\n       Test         : Node_Id;\n \n    begin\n+      --  Do not expand quantified expressions in ALFA mode\n+      --  why not???\n+\n       if ALFA_Mode then\n          return;\n       end if;"}, {"sha": "daab3d0be30710183eb8cc166a645269c37cc24d", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=3ddd922ebf36fb7d4701e8f55e633d27fca54296", "patch": "@@ -351,7 +351,7 @@ procedure Gnat1drv is\n       if Debug_Flag_Dot_XX then\n          Use_Expression_With_Actions := True;\n \n-      --  Debug flag -gnatd.Y decisively set usage off\n+      --  Debug flag -gnatd.Y decisively sets usage off\n \n       elsif Debug_Flag_Dot_YY then\n          Use_Expression_With_Actions := False;\n@@ -445,6 +445,7 @@ procedure Gnat1drv is\n          Debug_Flag_HH := True;\n \n          --  Disable Expressions_With_Actions nodes\n+\n          --  The gnat2why backend does not deal with Expressions_With_Actions\n          --  in all places (in particular assertions). It is difficult to\n          --  determine in the frontend which cases are allowed, so we disable"}, {"sha": "626b8eee0d75a1417bd761df5bd7b7bd1482e74f", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=3ddd922ebf36fb7d4701e8f55e633d27fca54296", "patch": "@@ -1288,7 +1288,8 @@ package body Prj is\n       Tree         : Project_Tree_Ref)\n    is\n       procedure Analyze_Tree\n-        (Local_Root : Project_Id; Local_Tree : Project_Tree_Ref);\n+        (Local_Root : Project_Id;\n+         Local_Tree : Project_Tree_Ref);\n       --  Process Project and all its aggregated project to analyze their own\n       --  imported projects.\n \n@@ -1297,7 +1298,8 @@ package body Prj is\n       ------------------\n \n       procedure Analyze_Tree\n-        (Local_Root : Project_Id; Local_Tree : Project_Tree_Ref)\n+        (Local_Root : Project_Id;\n+         Local_Tree : Project_Tree_Ref)\n       is\n          pragma Unreferenced (Local_Root);\n \n@@ -1320,8 +1322,8 @@ package body Prj is\n             Dummy : in out Boolean)\n          is\n             pragma Unreferenced (Dummy, Tree);\n-            List    : Project_List;\n-            Prj2    : Project_Id;\n+            List : Project_List;\n+            Prj2 : Project_Id;\n \n          begin\n             --  A project is not importing itself\n@@ -1357,6 +1359,7 @@ package body Prj is\n \n          Dummy   : Boolean := False;\n          List    : Project_List;\n+\n       begin\n          List := Local_Tree.Projects;\n          while List /= null loop\n@@ -1372,6 +1375,8 @@ package body Prj is\n       procedure For_Aggregates is\n         new For_Project_And_Aggregated (Analyze_Tree);\n \n+   --  Start of processing for Compute_All_Imported_Projects\n+\n    begin\n       For_Aggregates (Root_Project, Tree);\n    end Compute_All_Imported_Projects;"}, {"sha": "46bdf73ab0d05620a8639725202c4b1440c52201", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=3ddd922ebf36fb7d4701e8f55e633d27fca54296", "patch": "@@ -5542,7 +5542,6 @@ package body Sem_Ch8 is\n                                 Scope_Depth (Old_S)\n                               then\n                                  return Old_S;\n-\n                               else\n                                  return It.Nam;\n                               end if;\n@@ -5555,7 +5554,7 @@ package body Sem_Ch8 is\n                            return Report_Overload;\n                         end if;\n \n-                     --  If not within an instance, ambiguity is real.\n+                     --  If not within an instance, ambiguity is real\n \n                      else\n                         return Report_Overload;"}, {"sha": "c16a671e0d36bd15844246a8c38f9653c56843b5", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=3ddd922ebf36fb7d4701e8f55e633d27fca54296", "patch": "@@ -13326,6 +13326,7 @@ package body Sem_Prag is\n             if Arg_Count = 4 then\n                Check_Identifier (Arg3, Name_Requires);\n                Check_Identifier (Arg4, Name_Ensures);\n+\n             elsif Arg_Count = 3 then\n                Check_Identifier_Is_One_Of (Arg3, Name_Requires, Name_Ensures);\n             end if;"}, {"sha": "f56b849cbed654bb8b6aec13cb53b500c7717b73", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=3ddd922ebf36fb7d4701e8f55e633d27fca54296", "patch": "@@ -8076,6 +8076,8 @@ package body Sem_Res is\n \n    procedure Resolve_Quantified_Expression (N : Node_Id; Typ : Entity_Id) is\n    begin\n+      --  Normal mode (not ALFA)\n+\n       if not ALFA_Mode then\n \n          --  The loop structure is already resolved during its analysis, only\n@@ -8086,11 +8088,10 @@ package body Sem_Res is\n          Expander_Mode_Save_And_Set (False);\n          Resolve (Condition (N), Typ);\n          Expander_Mode_Restore;\n-      else\n \n-         --  In ALFA_Mode, no such magic needs to happen, we just resolve the\n-         --  underlying nodes.\n+      --  In ALFA_Mode, no magic needed, we just resolve the underlying nodes\n \n+      else\n          Resolve (Condition (N), Typ);\n       end if;\n    end Resolve_Quantified_Expression;"}, {"sha": "814eaa4e9659e72a746a042086c85c1b345cf815", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ddd922ebf36fb7d4701e8f55e633d27fca54296/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=3ddd922ebf36fb7d4701e8f55e633d27fca54296", "patch": "@@ -4274,17 +4274,21 @@ package body Sem_Util is\n \n    function Get_Ensures_From_Test_Case_Pragma (N : Node_Id) return Node_Id is\n       Args : constant List_Id := Pragma_Argument_Associations (N);\n-      Res  : Node_Id := Empty;\n+      Res  : Node_Id;\n \n    begin\n       if List_Length (Args) = 4 then\n          Res := Pick (Args, 4);\n \n       elsif List_Length (Args) = 3 then\n          Res := Pick (Args, 3);\n+\n          if Chars (Res) /= Name_Ensures then\n             Res := Empty;\n          end if;\n+\n+      else\n+         Res := Empty;\n       end if;\n \n       return Res;\n@@ -4436,14 +4440,18 @@ package body Sem_Util is\n \n    function Get_Requires_From_Test_Case_Pragma (N : Node_Id) return Node_Id is\n       Args : constant List_Id := Pragma_Argument_Associations (N);\n-      Res  : Node_Id := Empty;\n+      Res  : Node_Id;\n \n    begin\n       if List_Length (Args) >= 3 then\n          Res := Pick (Args, 3);\n+\n          if Chars (Res) /= Name_Requires then\n             Res := Empty;\n          end if;\n+\n+      else\n+         Res := Empty;\n       end if;\n \n       return Res;"}]}