{"sha": "fb51a3a867e20f574bde3b929ec9ccfba6cc374b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI1MWEzYTg2N2UyMGY1NzRiZGUzYjkyOWVjOWNjZmJhNmNjMzc0Yg==", "commit": {"author": {"name": "Fredrik Noring", "email": "noring@nocrew.org", "date": "2018-11-27T16:01:10Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@gcc.gnu.org", "date": "2018-11-27T16:01:10Z"}, "message": "MIPS: Add `-mfix-r5900' option for the R5900 short loop erratum\n\nThe short loop bug under certain conditions causes loops to\nexecute only once or twice, due to a hardware bug in the R5900 chip.\n\n`-march=r5900' already enables the R5900 short loop workaround.\nHowever, the R5900 ISA and most other MIPS ISAs are mutually\nexclusive since R5900-specific instructions are generated as well.\n\nThe `-mfix-r5900' option can be used in combination with e.g.\n`-mips2' or `-mips3' to generate generic MIPS binaries that also\nwork with the R5900 target.  The workaround is implemented by GAS\nrather than by GCC.\n\nThe following small `shortloop.c' file has been used as a test\nwith GCC 8.2.0:\n\nvoid shortloop(void)\n{\n    __asm__ __volatile__ (\n\t\"\tli $3, 300\\n\"\n\t\"loop:\\n\"\n\t\"\taddi $3, -1\\n\"\n\t\"\taddi $4, -1\\n\"\n\t\"\tbne $3, $0, loop\\n\"\n\t\"\tli $4, 3\\n\"\n\t::);\n}\n\nThe following six combinations have been tested:\n\n% mipsr5900el-unknown-linux-gnu-gcc -O1 -c shortloop.c\n% mipsr5900el-unknown-linux-gnu-gcc -O1 -c shortloop.c -mfix-r5900\n% mipsr5900el-unknown-linux-gnu-gcc -O1 -c shortloop.c -mno-fix-r5900\n\n% mipsr4000el-unknown-linux-gnu-gcc -O1 -c shortloop.c\n% mipsr4000el-unknown-linux-gnu-gcc -O1 -c shortloop.c -mfix-r5900\n% mipsr4000el-unknown-linux-gnu-gcc -O1 -c shortloop.c -mno-fix-r5900\n\nThe R5900 short loop erratum is corrected in exactly three cases:\n\n1. for the target `mipsr5900el' by default;\n\n2. for the target `mipsr5900el' with `-mfix-r5900';\n\n3. for any other MIPS target (e.g. `mipsr4000el') with `-mfix-r5900'.\n\nIn all other cases the correction is not made.\n\n2018-11-27  Fredrik Noring  <noring@nocrew.org>\n\n\tgcc/\n\t* config/mips/mips.c (mips_reorg_process_insns)\n\t(mips_option_override): Handle `-mfix-r5900'.\n\t* config/mips/mips.h (ASM_SPEC): Add `mfix-r5900' and\n\t`mno-fix-r5900'.\n\t* config/mips/mips.opt (mfix-r5900): New option.\n\t* doc/invoke.texi: Document the `r5900' processor name, and\n\t`-mfix-r5900' and `-mno-fix-r5900' options.\n\nFrom-SVN: r266519", "tree": {"sha": "0add77034e2751dfbb9c5579e20fb2200edb6415", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0add77034e2751dfbb9c5579e20fb2200edb6415"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb51a3a867e20f574bde3b929ec9ccfba6cc374b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb51a3a867e20f574bde3b929ec9ccfba6cc374b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb51a3a867e20f574bde3b929ec9ccfba6cc374b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb51a3a867e20f574bde3b929ec9ccfba6cc374b/comments", "author": {"login": "frno7", "id": 24862794, "node_id": "MDQ6VXNlcjI0ODYyNzk0", "avatar_url": "https://avatars.githubusercontent.com/u/24862794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frno7", "html_url": "https://github.com/frno7", "followers_url": "https://api.github.com/users/frno7/followers", "following_url": "https://api.github.com/users/frno7/following{/other_user}", "gists_url": "https://api.github.com/users/frno7/gists{/gist_id}", "starred_url": "https://api.github.com/users/frno7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frno7/subscriptions", "organizations_url": "https://api.github.com/users/frno7/orgs", "repos_url": "https://api.github.com/users/frno7/repos", "events_url": "https://api.github.com/users/frno7/events{/privacy}", "received_events_url": "https://api.github.com/users/frno7/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d8da4df6b6c2c7b89a6cc402bc134b69911e922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d8da4df6b6c2c7b89a6cc402bc134b69911e922", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d8da4df6b6c2c7b89a6cc402bc134b69911e922"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "766fd4b6dd191a4aca64f3ccf99abf10f1eb2801", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb51a3a867e20f574bde3b929ec9ccfba6cc374b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb51a3a867e20f574bde3b929ec9ccfba6cc374b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb51a3a867e20f574bde3b929ec9ccfba6cc374b", "patch": "@@ -1,3 +1,13 @@\n+2018-11-27  Fredrik Noring  <noring@nocrew.org>\n+\n+\t* config/mips/mips.c (mips_reorg_process_insns)\n+\t(mips_option_override): Handle `-mfix-r5900'.\n+\t* config/mips/mips.h (ASM_SPEC): Add `mfix-r5900' and\n+\t`mno-fix-r5900'.\n+\t* config/mips/mips.opt (mfix-r5900): New option.\n+\t* doc/invoke.texi: Document the `r5900' processor name, and\n+\t`-mfix-r5900' and `-mno-fix-r5900' options.\n+\n 2018-11-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/88188"}, {"sha": "55b44078518c80da8a5d7e0bf2630b32a8a595a3", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb51a3a867e20f574bde3b929ec9ccfba6cc374b/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb51a3a867e20f574bde3b929ec9ccfba6cc374b/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=fb51a3a867e20f574bde3b929ec9ccfba6cc374b", "patch": "@@ -18908,13 +18908,13 @@ mips_reorg_process_insns (void)\n   if (crtl->profile)\n     cfun->machine->all_noreorder_p = false;\n \n-  /* Code compiled with -mfix-vr4120, -mfix-rm7000 or -mfix-24k can't be\n-     all noreorder because we rely on the assembler to work around some\n-     errata.  The R5900 too has several bugs.  */\n+  /* Code compiled with -mfix-vr4120, -mfix-r5900, -mfix-rm7000 or\n+     -mfix-24k can't be all noreorder because we rely on the assembler\n+     to work around some errata.  The R5900 target has several bugs.  */\n   if (TARGET_FIX_VR4120\n       || TARGET_FIX_RM7000\n       || TARGET_FIX_24K\n-      || TARGET_MIPS5900)\n+      || TARGET_FIX_R5900)\n     cfun->machine->all_noreorder_p = false;\n \n   /* The same is true for -mfix-vr4130 if we might generate MFLO or\n@@ -20289,6 +20289,12 @@ mips_option_override (void)\n       && strcmp (mips_arch_info->name, \"r4400\") == 0)\n     target_flags |= MASK_FIX_R4400;\n \n+  /* Default to working around R5900 errata only if the processor\n+     was selected explicitly.  */\n+  if ((target_flags_explicit & MASK_FIX_R5900) == 0\n+      && strcmp (mips_arch_info->name, \"r5900\") == 0)\n+    target_flags |= MASK_FIX_R5900;\n+\n   /* Default to working around R10000 errata only if the processor\n      was selected explicitly.  */\n   if ((target_flags_explicit & MASK_FIX_R10000) == 0"}, {"sha": "d2205f08972e576e717b1390a903a13fd76dc9f5", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb51a3a867e20f574bde3b929ec9ccfba6cc374b/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb51a3a867e20f574bde3b929ec9ccfba6cc374b/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=fb51a3a867e20f574bde3b929ec9ccfba6cc374b", "patch": "@@ -1411,6 +1411,7 @@ struct mips_cpu_info {\n %{mloongson-ext2} %{mno-loongson-ext2} \\\n %{msmartmips} %{mno-smartmips} \\\n %{mmt} %{mno-mt} \\\n+%{mfix-r5900} %{mno-fix-r5900} \\\n %{mfix-rm7000} %{mno-fix-rm7000} \\\n %{mfix-vr4120} %{mfix-vr4130} \\\n %{mfix-24k} \\"}, {"sha": "7533210043505d7665088e45e202b17970a68825", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb51a3a867e20f574bde3b929ec9ccfba6cc374b/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb51a3a867e20f574bde3b929ec9ccfba6cc374b/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=fb51a3a867e20f574bde3b929ec9ccfba6cc374b", "patch": "@@ -165,6 +165,10 @@ mfix-r4400\n Target Report Mask(FIX_R4400)\n Work around certain R4400 errata.\n \n+mfix-r5900\n+Target Report Mask(FIX_R5900)\n+Work around the R5900 short loop erratum.\n+\n mfix-rm7000\n Target Report Var(TARGET_FIX_RM7000)\n Work around certain RM7000 errata."}, {"sha": "682da942553561da8108552070436102bf4210b9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb51a3a867e20f574bde3b929ec9ccfba6cc374b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb51a3a867e20f574bde3b929ec9ccfba6cc374b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fb51a3a867e20f574bde3b929ec9ccfba6cc374b", "patch": "@@ -948,6 +948,7 @@ Objective-C and Objective-C++ Dialects}.\n -mmad  -mno-mad  -mimadd  -mno-imadd  -mfused-madd  -mno-fused-madd  -nocpp @gol\n -mfix-24k  -mno-fix-24k @gol\n -mfix-r4000  -mno-fix-r4000  -mfix-r4400  -mno-fix-r4400 @gol\n+-mfix-r5900  -mno-fix-r5900 @gol\n -mfix-r10000  -mno-fix-r10000  -mfix-rm7000  -mno-fix-rm7000 @gol\n -mfix-vr4120  -mno-fix-vr4120 @gol\n -mfix-vr4130  -mno-fix-vr4130  -mfix-sb1  -mno-fix-sb1 @gol\n@@ -21290,7 +21291,8 @@ The processor names are:\n @samp{orion},\n @samp{p5600}, @samp{p6600},\n @samp{r2000}, @samp{r3000}, @samp{r3900}, @samp{r4000}, @samp{r4400},\n-@samp{r4600}, @samp{r4650}, @samp{r4700}, @samp{r6000}, @samp{r8000},\n+@samp{r4600}, @samp{r4650}, @samp{r4700}, @samp{r5900},\n+@samp{r6000}, @samp{r8000},\n @samp{rm7000}, @samp{rm9000},\n @samp{r10000}, @samp{r12000}, @samp{r14000}, @samp{r16000},\n @samp{sb1},\n@@ -22082,6 +22084,16 @@ branch-likely instructions.  @option{-mfix-r10000} is the default when\n @option{-march=r10000} is used; @option{-mno-fix-r10000} is the default\n otherwise.\n \n+@item -mfix-r5900\n+@itemx -mno-fix-r5900\n+@opindex mfix-r5900\n+Do not attempt to schedule the preceding instruction into the delay slot\n+of a branch instruction placed at the end of a short loop of six\n+instructions or fewer and always schedule a @code{nop} instruction there\n+instead.  The short loop bug under certain conditions causes loops to\n+execute only once or twice, due to a hardware bug in the R5900 chip.  The\n+workaround is implemented by the assembler rather than by GCC@.\n+\n @item -mfix-rm7000\n @itemx -mno-fix-rm7000\n @opindex mfix-rm7000"}]}