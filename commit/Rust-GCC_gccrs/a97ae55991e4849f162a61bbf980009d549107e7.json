{"sha": "a97ae55991e4849f162a61bbf980009d549107e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk3YWU1NTk5MWU0ODQ5ZjE2MmE2MWJiZjk4MDAwOWQ1NDkxMDdlNw==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2017-11-22T20:42:39Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2017-11-22T20:42:39Z"}, "message": "Make shift argument to eoshift0 and eoshift2 be of type index_type\n\nTest case that requires 4 GB RAM that exercises eoshift0:\n\nprogram main\n  implicit none\n  integer(1) :: line(2_8**31+10)\n  line = 42\n  line = eoshift(line, 2_8**31+7)\n  print *, line(1:4)\n  print *, line((ubound(line, 1, kind=8)-4):ubound(line, 1, kind=8))\nend program main\n\nBefore patch:\n\u276f ./a.out\n    0    0    0    0\n    42   42   42   42   42\n\nWith patch:\n\u276f ./a.out\n   42   42   42    0\n   0    0    0    0    0\n\nRegtested on x86_64-pc-linux-gnu.\n\nlibgfortran/ChangeLog:\n\n2017-11-22  Janne Blomqvist  <jb@gcc.gnu.org>\n\n        * intrinsics/eoshift0.c (eoshift0): Make shift an index_type.\n        * intrinsics/eoshift2.c (eoshift2): Make shift an index_type.\n\nFrom-SVN: r255077", "tree": {"sha": "63c0592974232e6ab2c30f747bf0f95b29215ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63c0592974232e6ab2c30f747bf0f95b29215ae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a97ae55991e4849f162a61bbf980009d549107e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a97ae55991e4849f162a61bbf980009d549107e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a97ae55991e4849f162a61bbf980009d549107e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a97ae55991e4849f162a61bbf980009d549107e7/comments", "author": null, "committer": null, "parents": [{"sha": "ce95abc41e998c8d1e1b2112a634d5a6cdd9ede0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce95abc41e998c8d1e1b2112a634d5a6cdd9ede0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce95abc41e998c8d1e1b2112a634d5a6cdd9ede0"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "7715cb3e8f2283e9ed3592f691ef96469c6ed674", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a97ae55991e4849f162a61bbf980009d549107e7/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a97ae55991e4849f162a61bbf980009d549107e7/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=a97ae55991e4849f162a61bbf980009d549107e7", "patch": "@@ -1,3 +1,8 @@\n+2017-11-22  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* intrinsics/eoshift0.c (eoshift0): Make shift an index_type.\n+        * intrinsics/eoshift2.c (eoshift2): Make shift an index_type.\n+\n 2017-11-22  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/83097"}, {"sha": "dd8c81d6a05183b4c4c4083894b2cfe380eb4547", "filename": "libgfortran/intrinsics/eoshift0.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a97ae55991e4849f162a61bbf980009d549107e7/libgfortran%2Fintrinsics%2Feoshift0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a97ae55991e4849f162a61bbf980009d549107e7/libgfortran%2Fintrinsics%2Feoshift0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Feoshift0.c?ref=a97ae55991e4849f162a61bbf980009d549107e7", "patch": "@@ -26,12 +26,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n #include <string.h>\n \n-/* TODO: make this work for large shifts when\n-   sizeof(int) < sizeof (index_type).  */\n \n static void\n eoshift0 (gfc_array_char * ret, const gfc_array_char * array,\n-\t  int shift, const char * pbound, int which, index_type size,\n+\t  index_type shift, const char * pbound, int which, index_type size,\n \t  const char *filler, index_type filler_len)\n {\n   /* r.* indicates the return array.  */"}, {"sha": "ab760f768a55fc82c9de4544634acf83d88c0b67", "filename": "libgfortran/intrinsics/eoshift2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a97ae55991e4849f162a61bbf980009d549107e7/libgfortran%2Fintrinsics%2Feoshift2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a97ae55991e4849f162a61bbf980009d549107e7/libgfortran%2Fintrinsics%2Feoshift2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Feoshift2.c?ref=a97ae55991e4849f162a61bbf980009d549107e7", "patch": "@@ -26,12 +26,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgfortran.h\"\n #include <string.h>\n \n-/* TODO: make this work for large shifts when\n-   sizeof(int) < sizeof (index_type).  */\n \n static void\n eoshift2 (gfc_array_char *ret, const gfc_array_char *array,\n-\t  int shift, const gfc_array_char *bound, int which,\n+\t  index_type shift, const gfc_array_char *bound, int which,\n \t  const char *filler, index_type filler_len)\n {\n   /* r.* indicates the return array.  */"}]}