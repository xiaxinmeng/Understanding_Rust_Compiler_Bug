{"sha": "457cee0b8470f50b68638f433f480cbbebddef51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU3Y2VlMGI4NDcwZjUwYjY4NjM4ZjQzM2Y0ODBjYmJlYmRkZWY1MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T10:52:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T10:52:13Z"}, "message": "[multiple changes]\n\n2017-04-25  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* fname.adb (Is_Internal_File_Name): Arrange for the slices to\n\thave a length which is a power of 2.\n\t(Is_Predefined_File_Name): Likewise. Adjust comment.\n\n2017-04-25  Bob Duff  <duff@adacore.com>\n\n\t* exp_aggr.adb (Component_Count): Protect the\n\tarithmetic from attempting to convert a value >= 2**31 to Int,\n\twhich would otherwise raise Constraint_Error.\n\n2017-04-25  Bob Duff  <duff@adacore.com>\n\n\t* opt.ads (Locking_Policy): Fix incorrect documentation. The\n\tfirst character of the policy name is not unique.\n\n2017-04-25  Bob Duff  <duff@adacore.com>\n\n\t* s-fileio.adb (Name): Raise Use_Error if the file is a temp file.\n\t* s-ficobl.ads (Is_Temporary_File): Remove incorrect comment\n\tabout this flag not being used. It was already used, and it is\n\tnow used more.\n\nFrom-SVN: r247183", "tree": {"sha": "8b695b54b9f7bc3cdeb4b829b14b43c8a52438cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b695b54b9f7bc3cdeb4b829b14b43c8a52438cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/457cee0b8470f50b68638f433f480cbbebddef51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/457cee0b8470f50b68638f433f480cbbebddef51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/457cee0b8470f50b68638f433f480cbbebddef51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/457cee0b8470f50b68638f433f480cbbebddef51/comments", "author": null, "committer": null, "parents": [{"sha": "cf9a473e6494aef4d6e36dfdab64b3c42bfe5958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9a473e6494aef4d6e36dfdab64b3c42bfe5958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf9a473e6494aef4d6e36dfdab64b3c42bfe5958"}], "stats": {"total": 79, "additions": 64, "deletions": 15}, "files": [{"sha": "cc1403c0226802d1173f954f2d7543baa37422e8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=457cee0b8470f50b68638f433f480cbbebddef51", "patch": "@@ -1,3 +1,27 @@\n+2017-04-25  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* fname.adb (Is_Internal_File_Name): Arrange for the slices to\n+\thave a length which is a power of 2.\n+\t(Is_Predefined_File_Name): Likewise. Adjust comment.\n+\n+2017-04-25  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_aggr.adb (Component_Count): Protect the\n+\tarithmetic from attempting to convert a value >= 2**31 to Int,\n+\twhich would otherwise raise Constraint_Error.\n+\n+2017-04-25  Bob Duff  <duff@adacore.com>\n+\n+\t* opt.ads (Locking_Policy): Fix incorrect documentation. The\n+\tfirst character of the policy name is not unique.\n+\n+2017-04-25  Bob Duff  <duff@adacore.com>\n+\n+\t* s-fileio.adb (Name): Raise Use_Error if the file is a temp file.\n+\t* s-ficobl.ads (Is_Temporary_File): Remove incorrect comment\n+\tabout this flag not being used. It was already used, and it is\n+\tnow used more.\n+\n 2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* einfo.adb Flag301 is now known as Ignore_SPARK_Mode_Pragmas."}, {"sha": "685edaafa7244a93643cd2829f4b0ffade7f15b7", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=457cee0b8470f50b68638f433f480cbbebddef51", "patch": "@@ -352,7 +352,7 @@ package body Exp_Aggr is\n       --  which hit memory limits in the backend.\n \n       function Component_Count (T : Entity_Id) return Nat;\n-      --  The limit is applied to the total number of components that the\n+      --  The limit is applied to the total number of subcomponents that the\n       --  aggregate will have, which is the number of static expressions\n       --  that will appear in the flattened array. This requires a recursive\n       --  computation of the number of scalar components of the structure.\n@@ -399,8 +399,20 @@ package body Exp_Aggr is\n                   return 0;\n \n                else\n-                  return\n-                    Siz * UI_To_Int (Expr_Value (Hi) - Expr_Value (Lo) + 1);\n+                  --  If the number of components is greater than Int'Last,\n+                  --  then return Int'Last, so caller will return False (Aggr\n+                  --  size is not OK). Otherwise, UI_To_Int will crash.\n+\n+                  declare\n+                     UI : constant Uint :=\n+                            Expr_Value (Hi) - Expr_Value (Lo) + 1;\n+                  begin\n+                     if UI_Is_In_Int_Range (UI) then\n+                        return Siz * UI_To_Int (UI);\n+                     else\n+                        return Int'Last;\n+                     end if;\n+                  end;\n                end if;\n             end;\n "}, {"sha": "c75048bb63a912fe1e001d498f9ac4242721a402", "filename": "gcc/ada/fname.adb", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2Ffname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2Ffname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname.adb?ref=457cee0b8470f50b68638f433f480cbbebddef51", "patch": "@@ -119,7 +119,15 @@ package body Fname is\n          return False;\n       end if;\n \n-      return Has_Prefix (Fname, \"g-\") or else Has_Prefix (Fname, \"gnat.\");\n+      --  Definitely internal if prefix is g-\n+\n+      if Has_Prefix (Fname, \"g-\") then\n+         return True;\n+      end if;\n+\n+      --  See the note in Is_Predefined_File_Name for the rationale\n+\n+      return Fname'Length = 8 and then Has_Prefix (Fname, \"gnat\");\n    end Is_Internal_File_Name;\n \n    function Is_Internal_File_Name\n@@ -154,9 +162,12 @@ package body Fname is\n          \"text_io.\");  --  Text_IO\n \n       --  Note: the implementation is optimized to perform uniform comparisons\n-      --  on string slices whose length is known at compile time and at most 8\n-      --  characters; the remaining calls to Has_Prefix must be inlined so as\n-      --  to expose the compile-time known length.\n+      --  on string slices whose length is known at compile time and is a small\n+      --  power of 2 (at most 8 characters); the remaining calls to Has_Prefix\n+      --  must be inlined to expose the compile-time known length. There must\n+      --  be no calls to the fallback string comparison routine (e.g. memcmp)\n+      --  left in the object code for the function; this can save up to 10% of\n+      --  the entire compilation time spent in the front end.\n \n    begin\n       if not Has_Internal_Extension (Fname) then\n@@ -187,7 +198,7 @@ package body Fname is\n \n       if Has_Prefix (Fname, \"ada.\")             --  Ada\n         or else Has_Prefix (Fname, \"interfac\")  --  Interfaces\n-        or else Has_Prefix (Fname, \"system.\")   --  System\n+        or else Has_Prefix (Fname, \"system.a\")  --  System\n       then\n          return True;\n       end if;"}, {"sha": "94be519e29796b347783be4dd956b6cc50777cc3", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=457cee0b8470f50b68638f433f480cbbebddef51", "patch": "@@ -1021,9 +1021,12 @@ package Opt is\n \n    Locking_Policy : Character := ' ';\n    --  GNAT, GNATBIND\n-   --  Set to ' ' for the default case (no locking policy specified). Reset to\n-   --  first character (uppercase) of locking policy name if a valid pragma\n-   --  Locking_Policy is encountered.\n+\n+   --  Set to ' ' for the default case (no locking policy specified). Otherwise\n+   --  set based on the pragma Locking_Policy:\n+   --     Ceiling_Locking: 'C'\n+   --     Concurrent_Readers_Locking: 'R'\n+   --     Inheritance_Locking: 'I'\n \n    Locking_Policy_Sloc : Source_Ptr := No_Location;\n    --  GNAT, GNATBIND"}, {"sha": "a3b4bcf3120853853df0529b1d09bcc5e58d03c5", "filename": "gcc/ada/s-ficobl.ads", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2Fs-ficobl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2Fs-ficobl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-ficobl.ads?ref=457cee0b8470f50b68638f433f480cbbebddef51", "patch": "@@ -108,10 +108,7 @@ package System.File_Control_Block is\n \n       Is_Temporary_File : Boolean;\n       --  A flag set only for temporary files (i.e. files created using the\n-      --  Create function with a null name parameter, using tmpfile). This\n-      --  is currently not used since temporary files are deleted by the\n-      --  operating system, but it is set properly in case some systems\n-      --  need this information in the future.\n+      --  Create function with a null name parameter).\n \n       Is_System_File : Boolean;\n       --  A flag set only for system files (stdin, stdout, stderr)"}, {"sha": "fdc99278cee97d46c045e303241a436e1cd35795", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/457cee0b8470f50b68638f433f480cbbebddef51/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=457cee0b8470f50b68638f433f480cbbebddef51", "patch": "@@ -744,6 +744,8 @@ package body System.File_IO is\n    begin\n       if File = null then\n          raise Status_Error with \"Name: file not open\";\n+      elsif File.Is_Temporary_File then\n+         raise Use_Error with \"Name: temporary file has no name\";\n       else\n          return File.Name.all (1 .. File.Name'Length - 1);\n       end if;"}]}