{"sha": "0254608834efa030201186ebed5299a0c8c8c951", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI1NDYwODgzNGVmYTAzMDIwMTE4NmViZWQ1Mjk5YTBjOGM4Yzk1MQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2000-12-16T02:06:29Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-12-16T02:06:29Z"}, "message": "libjava.compile test fixes.\n\n\t* lib/libjava.exp (libjava_tcompile): New proc.\n\t(test_libjava_from_source): Use it.\n\t(test_libjava_from_javac): Likewise.\n\t(find_javac): New proc.\n\t(bytecompile_file): Use it.\n\t(test_libjava_from_javac): Handle `xfail-gcjC' tag.  If no-exec\n\tset, then don't link even if program has a `main'.\n\n\t* libjava.compile/static_3.xfail: New file.\n\t* libjava.compile/weirddecl.xfail: New file.\n\t* libjava.compile/static_2.xfail: New file.\n\t* libjava.compile/not_a_redef.xfail: New file.\n\t* libjava.compile/inner_1.xfail: New file.\n\t* libjava.compile/assignment_2.xfail: New file.\n\t* libjava.compile/assignment.xfail: New file.\n\t* libjava.compile/abstr.xfail: New file.\n\t* libjava.compile/PR375.xfail: New file.\n\t* libjava.compile/PR374.java: New file.\n\t* libjava.compile/PR238.xfail: New file.\n\t* libjava.compile/PR208.xfail: New file.\n\t* libjava.compile/PR207.xfail: New file.\n\nFrom-SVN: r38296", "tree": {"sha": "1a0a4de67a53b7fb992e932d3a71c9f4dbd14959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a0a4de67a53b7fb992e932d3a71c9f4dbd14959"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0254608834efa030201186ebed5299a0c8c8c951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0254608834efa030201186ebed5299a0c8c8c951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0254608834efa030201186ebed5299a0c8c8c951", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0254608834efa030201186ebed5299a0c8c8c951/comments", "author": null, "committer": null, "parents": [{"sha": "325de66c4c853988ad1965cc476b6afc10eb7ea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/325de66c4c853988ad1965cc476b6afc10eb7ea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/325de66c4c853988ad1965cc476b6afc10eb7ea1"}], "stats": {"total": 115, "additions": 90, "deletions": 25}, "files": [{"sha": "b4348247ac33b302d24802a6a8a2ae7edd189203", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -1,3 +1,27 @@\n+2000-12-15  Tom Tromey  <tromey@redhat.com>\n+\n+\t* lib/libjava.exp (libjava_tcompile): New proc.\n+\t(test_libjava_from_source): Use it.\n+\t(test_libjava_from_javac): Likewise.\n+\t(find_javac): New proc.\n+\t(bytecompile_file): Use it.\n+\t(test_libjava_from_javac): Handle `xfail-gcjC' tag.  If no-exec\n+\tset, then don't link even if program has a `main'.\n+\n+\t* libjava.compile/static_3.xfail: New file.\n+\t* libjava.compile/weirddecl.xfail: New file.\n+\t* libjava.compile/static_2.xfail: New file.\n+\t* libjava.compile/not_a_redef.xfail: New file.\n+\t* libjava.compile/inner_1.xfail: New file.\n+\t* libjava.compile/assignment_2.xfail: New file.\n+\t* libjava.compile/assignment.xfail: New file.\n+\t* libjava.compile/abstr.xfail: New file.\n+\t* libjava.compile/PR375.xfail: New file.\n+\t* libjava.compile/PR374.java: New file.\n+\t* libjava.compile/PR238.xfail: New file.\n+\t* libjava.compile/PR208.xfail: New file.\n+\t* libjava.compile/PR207.xfail: New file.\n+\n 2000-11-30  Tom Tromey  <tromey@cygnus.com>\n \n \t* libjava.lang/instinit.java: Don't extend `foo'."}, {"sha": "e6b37444b5382bb82788c24605cfc51d4b4bfd96", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 46, "deletions": 25, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -10,6 +10,19 @@ if ![info exists tmpdir] {\n     set tmpdir \"/tmp\"\n }\n \n+# This is like `target_compile' but it does some surgery to work\n+# around stupid DejaGNU bugs.  In particular DejaGNU has very poor\n+# quoting, so for instance a `$' will be re-evaluated at spawn time.\n+# We don't want that.\n+proc libjava_tcompile {source destfile type options} {\n+    # This strange-looking expression really does quote the `$'.\n+    regsub -all -- {\\$} $source {\\$} source\n+    regsub -all -- {\\$} $destfile {\\$} destfile\n+    verbose \"Now source = $source\"\n+    verbose \"Now destfile = $destfile\"\n+    return [target_compile $source $destfile $type $options]\n+}\n+\n # Read an `xfail' file if it exists.  Returns a list of xfail tokens.\n proc libjava_read_xfail {file} {\n     if {! [file exists $file]} {\n@@ -46,12 +59,8 @@ proc find_gcjh {} {\n     return [libjava_find_program gcjh]\n }\n \n-proc bytecompile_file { file objdir {classpath {}} } {\n-    global env\n-    global SUN_JAVAC\n-    global GCJ_UNDER_TEST\n-    set dirname [file dirname $file]\n-\n+proc find_javac {} {\n+    global SUN_JAVAC GCJ_UNDER_TEST env\n     # If JDK doesn't run on your platform but some other\n     # JDK-compatible javac does, you may set SUN_JAVAC to point to it.\n     # One of the most important properties of a SUN_JAVAC is that it\n@@ -60,22 +69,29 @@ proc bytecompile_file { file objdir {classpath {}} } {\n     # those that have.  For example, Pizza won't do it, but you can\n     # use `kaffe sun.tools.javac.Main', if you have Sun's classes.zip\n     # in the kaffe's default search path.\n-    if ![info exists SUN_JAVAC] {\n-\tif [info exists env(SUN_JAVAC)] {\n+    if {![info exists SUN_JAVAC]} {\n+\tif {[info exists env(SUN_JAVAC)]} {\n \t    set SUN_JAVAC $env(SUN_JAVAC)\n \t} else {\n \t    set SUN_JAVAC \"$GCJ_UNDER_TEST -C\"\n \t}\n     }\n+    return $SUN_JAVAC\n+}\n+\n+proc bytecompile_file { file objdir {classpath {}} } {\n+    global env\n+    set dirname [file dirname $file]\n \n+    set javac [find_javac]\n     catch {unset env(CLASSPATH)}\n     if {$classpath != \"\"} then {\n         set env(CLASSPATH) $classpath\n     }\n     if {[catch {\n \tset here [pwd]\n \tcd $dirname\n-\tset q [eval exec \"$SUN_JAVAC [list $file] -d $objdir 2>@ stdout\"]\n+\tset q [eval exec \"$javac [list $file] -d $objdir 2>@ stdout\"]\n \tcd $here\n \t# \"return\" a result\n \tset q $q\n@@ -338,7 +354,7 @@ proc test_libjava_from_source { options srcfile compile_args inpfile resultfile\n     }\n \n     set x [prune_warnings \\\n-\t     [target_compile $srcfile \"$executable\" $target $args]]\n+\t     [libjava_tcompile $srcfile \"$executable\" $target $args]]\n     if {[info exists opts(xfail-gcj)]} {\n \tsetup_xfail *-*-*\n     }\n@@ -449,9 +465,15 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n \n     # bytecompile files with Sun's compiler for now.\n     set bc_ok [bytecompile_file $srcfile $objdir]\n-    # FIXME: assumes we are using javac to compile to bytecode.\n-    # This is not always the case.\n-    if {[info exists opts(xfail-javac)]} {\n+\n+    set javac [find_javac]\n+    # This is an ugly heuristic but it will have to do.\n+    if {[string match *gcj* $javac]} {\n+\tset tag gcjC\n+    } else {\n+\tset tag javac\n+    }\n+    if {[info exists opts(xfail-$tag)]} {\n \tsetup_xfail *-*-*\n     }\n     if {! $bc_ok} then {\n@@ -481,12 +503,12 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n     verbose \"jvscan is $jvscan\"\n     set main_name [string trim \\\n \t\t     [prune_warnings \\\n-\t\t\t[target_compile $srcfile \"\" none \\\n+\t\t\t[libjava_tcompile $srcfile \"\" none \\\n \t\t\t   \"compiler=$jvscan additional_flags=--print-main\"]]]\n     verbose \"main name is $main_name\"\n     set class_out [string trim \\\n \t\t     [prune_warnings \\\n-\t\t\t[target_compile $srcfile \"\" none \\\n+\t\t\t[libjava_tcompile $srcfile \"\" none \\\n \t\t\t   \"compiler=$jvscan additional_flags=--list-class\"]]]\n     verbose \"class list is $class_out\"\n \n@@ -519,14 +541,13 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n \tset opts(no-exec) x\n     }\n     set largs {}\n-    if {$main_name == \"\"} {\n-\tif {! [info exists opts(no-exec)]} {\n-\t    perror \"No `main' given in program $errname\"\n-\t    return\n-\t} else {\n-\t    set type object\n-\t    set mode compile\n-\t}\n+\n+    if {[info exists opts(no-exec)]} {\n+\tset type object\n+\tset mode compile\n+    } elseif {$main_name == \"\"} {\n+\tperror \"No `main' given in program $errname\"\n+\treturn\n     } else {\n \tset type executable\n \tlappend largs \"additional_flags=--main=$main_name\"\n@@ -554,14 +575,14 @@ proc test_libjava_from_javac { options srcfile compile_args inpfile resultfile e\n \tforeach c_file $class_files {\n \t    set executable [file rootname [file tail $c_file]].o\n \t    set x [prune_warnings \\\n-\t\t     [target_compile $c_file \"$executable\" $type $args]]\n+\t\t     [libjava_tcompile $c_file \"$executable\" $type $args]]\n \t    if {$x != \"\"} {\n \t\tbreak\n \t    }\n \t}\n     } else {\n \tset x [prune_warnings \\\n-\t\t [target_compile $class_files \"$executable\" $type $args]]\n+\t\t [libjava_tcompile $class_files \"$executable\" $type $args]]\n     }\n     if {[info exists opts(xfail-byte)]} {\n \tsetup_xfail *-*-*"}, {"sha": "b3630c99118b66d3d9cf451677b4636600b1c07a", "filename": "libjava/testsuite/libjava.compile/PR207.xfail", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2FPR207.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2FPR207.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2FPR207.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1,2 @@\n+no-link\n+xfail-byte"}, {"sha": "b3630c99118b66d3d9cf451677b4636600b1c07a", "filename": "libjava/testsuite/libjava.compile/PR208.xfail", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2FPR208.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2FPR208.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2FPR208.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1,2 @@\n+no-link\n+xfail-byte"}, {"sha": "76540afa49bc4bcf06f3b8ace8131a7cd6650f91", "filename": "libjava/testsuite/libjava.compile/PR238.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2FPR238.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2FPR238.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2FPR238.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1 @@\n+no-link"}, {"sha": "a61ff5be362126e11526cf65d48aea4cb13344d8", "filename": "libjava/testsuite/libjava.compile/PR374.xfail", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2FPR374.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2FPR374.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2FPR374.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1,2 @@\n+xfail-gcj\n+xfail-gcjC"}, {"sha": "755ab8794dfab1519adff4b16fcad2d5a9a4070e", "filename": "libjava/testsuite/libjava.compile/PR375.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2FPR375.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2FPR375.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2FPR375.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1 @@\n+xfail-gcj"}, {"sha": "b3630c99118b66d3d9cf451677b4636600b1c07a", "filename": "libjava/testsuite/libjava.compile/abstr.xfail", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fabstr.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fabstr.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2Fabstr.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -1 +1,2 @@\n no-link\n+xfail-byte"}, {"sha": "a61ff5be362126e11526cf65d48aea4cb13344d8", "filename": "libjava/testsuite/libjava.compile/assignment.xfail", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fassignment.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fassignment.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2Fassignment.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1,2 @@\n+xfail-gcj\n+xfail-gcjC"}, {"sha": "a61ff5be362126e11526cf65d48aea4cb13344d8", "filename": "libjava/testsuite/libjava.compile/assignment_2.xfail", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fassignment_2.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fassignment_2.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2Fassignment_2.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1,2 @@\n+xfail-gcj\n+xfail-gcjC"}, {"sha": "755ab8794dfab1519adff4b16fcad2d5a9a4070e", "filename": "libjava/testsuite/libjava.compile/inner_1.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Finner_1.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Finner_1.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2Finner_1.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1 @@\n+xfail-gcj"}, {"sha": "76540afa49bc4bcf06f3b8ace8131a7cd6650f91", "filename": "libjava/testsuite/libjava.compile/not_a_redef.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fnot_a_redef.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fnot_a_redef.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2Fnot_a_redef.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1 @@\n+no-link"}, {"sha": "76540afa49bc4bcf06f3b8ace8131a7cd6650f91", "filename": "libjava/testsuite/libjava.compile/static_2.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fstatic_2.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fstatic_2.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2Fstatic_2.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1 @@\n+no-link"}, {"sha": "76540afa49bc4bcf06f3b8ace8131a7cd6650f91", "filename": "libjava/testsuite/libjava.compile/static_3.xfail", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fstatic_3.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fstatic_3.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2Fstatic_3.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1 @@\n+no-link"}, {"sha": "4d57feea2ab488164e9cbd2aee30e86a4757d571", "filename": "libjava/testsuite/libjava.compile/weirddecl.xfail", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fweirddecl.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0254608834efa030201186ebed5299a0c8c8c951/libjava%2Ftestsuite%2Flibjava.compile%2Fweirddecl.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.compile%2Fweirddecl.xfail?ref=0254608834efa030201186ebed5299a0c8c8c951", "patch": "@@ -0,0 +1,3 @@\n+no-link\n+xfail-gcj\n+xfail-gcjC"}]}