{"sha": "9937c1eb7288216e4b59303389d64ff1125516f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkzN2MxZWI3Mjg4MjE2ZTRiNTkzMDMzODlkNjRmZjExMjU1MTZmMA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2016-10-16T06:28:15Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2016-10-16T06:28:15Z"}, "message": "PR 48587 Newunit allocator, cleanup\n\nImprove error message, and remove a redundant check, as the same check is\ndone a bit earlier due to the PR 48587 patch.\n\n2016-10-16  Janne Blomqvist  <jb@gcc.gnu.org>\n\n        PR libfortran/48587\n        * io/transfer.c (data_transfer_init): Improve error message,\n        remove redundant check.\n\nRegtested on x86_64-pc-linux-gnu.\n\nFrom-SVN: r241211", "tree": {"sha": "a341f4354565e5e662dd7a014dc22f320f207565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a341f4354565e5e662dd7a014dc22f320f207565"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9937c1eb7288216e4b59303389d64ff1125516f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9937c1eb7288216e4b59303389d64ff1125516f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9937c1eb7288216e4b59303389d64ff1125516f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9937c1eb7288216e4b59303389d64ff1125516f0/comments", "author": null, "committer": null, "parents": [{"sha": "4698eb35ad78f3ed657e644218438fcab73c4ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4698eb35ad78f3ed657e644218438fcab73c4ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4698eb35ad78f3ed657e644218438fcab73c4ef1"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "bfda86df86cf1a8096302020b87725d3460721ab", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9937c1eb7288216e4b59303389d64ff1125516f0/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9937c1eb7288216e4b59303389d64ff1125516f0/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=9937c1eb7288216e4b59303389d64ff1125516f0", "patch": "@@ -1,3 +1,9 @@\n+2016-10-16  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/48587\n+\t* io/transfer.c (data_transfer_init): Improve error message,\n+\tremove redundant check.\n+\n 2016-10-15  Janne Blomqvist  <jb@gcc.gnu.org>\n \n         PR libfortran/48587"}, {"sha": "2232417af6b4be3d0fd623c99ea929ece3e18681", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9937c1eb7288216e4b59303389d64ff1125516f0/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9937c1eb7288216e4b59303389d64ff1125516f0/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=9937c1eb7288216e4b59303389d64ff1125516f0", "patch": "@@ -2606,22 +2606,15 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n       /* This means we tried to access an external unit < 0 without\n \t having opened it first with NEWUNIT=.  */\n       generate_error (&dtp->common, LIBERROR_BAD_OPTION,\n-\t\t      \"Invalid unit number in statement\");\n+\t\t      \"Unit number is negative and unit was not already \"\n+\t\t      \"opened with OPEN(NEWUNIT=...)\");\n       return;\n     }\n   else if (dtp->u.p.current_unit->s == NULL)\n     {  /* Open the unit with some default flags.  */\n        st_parameter_open opp;\n        unit_convert conv;\n \n-      if (dtp->common.unit < 0 && !is_internal_unit (dtp))\n-\t{\n-\t  close_unit (dtp->u.p.current_unit);\n-\t  dtp->u.p.current_unit = NULL;\n-\t  generate_error (&dtp->common, LIBERROR_BAD_OPTION,\n-\t\t\t  \"Bad unit number in statement\");\n-\t  return;\n-\t}\n       memset (&u_flags, '\\0', sizeof (u_flags));\n       u_flags.access = ACCESS_SEQUENTIAL;\n       u_flags.action = ACTION_READWRITE;"}]}