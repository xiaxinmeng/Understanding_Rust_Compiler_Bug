{"sha": "8b7b0c36aa8546ae6893a01a53995baf680c2388", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI3YjBjMzZhYTg1NDZhZTY4OTNhMDFhNTM5OTViYWY2ODBjMjM4OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-01-18T15:42:05Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-01-18T15:42:05Z"}, "message": "re PR ada/42068 (ICE in function_and_variable_visibility)\n\n\tPR middle-end/42068\n\t(create_var_decl_1): Do not set COMMON flag for unit local variables.\n\nFrom-SVN: r156010", "tree": {"sha": "b651b6fca641f62fb15a629675a5e9a97f9ad4a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b651b6fca641f62fb15a629675a5e9a97f9ad4a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b7b0c36aa8546ae6893a01a53995baf680c2388", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7b0c36aa8546ae6893a01a53995baf680c2388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7b0c36aa8546ae6893a01a53995baf680c2388", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7b0c36aa8546ae6893a01a53995baf680c2388/comments", "author": null, "committer": null, "parents": [{"sha": "413ebfc3359f5c8dfe11cea333b04a65134c0edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/413ebfc3359f5c8dfe11cea333b04a65134c0edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/413ebfc3359f5c8dfe11cea333b04a65134c0edc"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "aa01613abe4f013d917505a962680917428ce11b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b7b0c36aa8546ae6893a01a53995baf680c2388/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b7b0c36aa8546ae6893a01a53995baf680c2388/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8b7b0c36aa8546ae6893a01a53995baf680c2388", "patch": "@@ -1,3 +1,8 @@\n+2010-01-18  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/42068\n+\t(create_var_decl_1): Do not set COMMON flag for unit local variables.\n+\n 2010-01-17  Laurent GUERBY  <laurent@guerby.net>\n \n \t* gcc-interface/Makefile.in: Fix typo in arm*-*-linux-gnueabi."}, {"sha": "51756544183e640824aa60735c1c0615ffff8842", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b7b0c36aa8546ae6893a01a53995baf680c2388/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b7b0c36aa8546ae6893a01a53995baf680c2388/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=8b7b0c36aa8546ae6893a01a53995baf680c2388", "patch": "@@ -1387,22 +1387,23 @@ create_var_decl_1 (tree var_name, tree asm_name, tree type, tree var_init,\n      that is, not violating a No_Elaboration_Code restriction.  */\n   if (global_bindings_p () && var_init != 0 && ! init_const)\n     Check_Elaboration_Code_Allowed (gnat_node);\n+  DECL_INITIAL  (var_decl) = var_init;\n+  TREE_READONLY (var_decl) = const_flag;\n+  DECL_EXTERNAL (var_decl) = extern_flag;\n+  TREE_PUBLIC   (var_decl) = public_flag || extern_flag;\n+  TREE_CONSTANT (var_decl) = constant_p;\n+  TREE_THIS_VOLATILE (var_decl) = TREE_SIDE_EFFECTS (var_decl)\n+    = TYPE_VOLATILE (type);\n \n   /* Ada doesn't feature Fortran-like COMMON variables so we shouldn't\n      try to fiddle with DECL_COMMON.  However, on platforms that don't\n      support global BSS sections, uninitialized global variables would\n      go in DATA instead, thus increasing the size of the executable.  */\n   if (!flag_no_common\n       && TREE_CODE (var_decl) == VAR_DECL\n+      && TREE_PUBLIC   (var_decl)\n       && !have_global_bss_p ())\n     DECL_COMMON (var_decl) = 1;\n-  DECL_INITIAL  (var_decl) = var_init;\n-  TREE_READONLY (var_decl) = const_flag;\n-  DECL_EXTERNAL (var_decl) = extern_flag;\n-  TREE_PUBLIC   (var_decl) = public_flag || extern_flag;\n-  TREE_CONSTANT (var_decl) = constant_p;\n-  TREE_THIS_VOLATILE (var_decl) = TREE_SIDE_EFFECTS (var_decl)\n-    = TYPE_VOLATILE (type);\n \n   /* If it's public and not external, always allocate storage for it.\n      At the global binding level we need to allocate static storage for the"}]}