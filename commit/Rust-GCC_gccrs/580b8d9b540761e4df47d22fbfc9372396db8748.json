{"sha": "580b8d9b540761e4df47d22fbfc9372396db8748", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgwYjhkOWI1NDA3NjFlNGRmNDdkMjJmYmZjOTM3MjM5NmRiODc0OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-04T08:44:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-04T08:44:12Z"}, "message": "re PR c++/88103 (Wrong value category when conditional expression result is used as object expression)\n\n\tPR c++/88103\n\t* typeck.c (build_class_member_access_expr): If unary_complex_lvalue\n\tturned xvalue_p into non-xvalue_p, call move on it.\n\n\t* g++.dg/cpp0x/rv-cond3.C: New test.\n\nFrom-SVN: r266772", "tree": {"sha": "ae816e7bce27a5c49e457b707e062410154eb296", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae816e7bce27a5c49e457b707e062410154eb296"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/580b8d9b540761e4df47d22fbfc9372396db8748", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/580b8d9b540761e4df47d22fbfc9372396db8748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/580b8d9b540761e4df47d22fbfc9372396db8748", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/580b8d9b540761e4df47d22fbfc9372396db8748/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "056775650ac086fb069e00415bf262e22f7579c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/056775650ac086fb069e00415bf262e22f7579c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/056775650ac086fb069e00415bf262e22f7579c5"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "48f802b4221620397309b0f46941fa73ad2d7485", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/580b8d9b540761e4df47d22fbfc9372396db8748/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/580b8d9b540761e4df47d22fbfc9372396db8748/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=580b8d9b540761e4df47d22fbfc9372396db8748", "patch": "@@ -1,3 +1,9 @@\n+2018-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/88103\n+\t* typeck.c (build_class_member_access_expr): If unary_complex_lvalue\n+\tturned xvalue_p into non-xvalue_p, call move on it.\n+\n 2018-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/88258"}, {"sha": "86c95d7b87fb207900c0f32607249e247ef13557", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/580b8d9b540761e4df47d22fbfc9372396db8748/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/580b8d9b540761e4df47d22fbfc9372396db8748/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=580b8d9b540761e4df47d22fbfc9372396db8748", "patch": "@@ -2422,7 +2422,13 @@ build_class_member_access_expr (cp_expr object, tree member,\n   {\n     tree temp = unary_complex_lvalue (ADDR_EXPR, object);\n     if (temp)\n-      object = cp_build_fold_indirect_ref (temp);\n+      {\n+\ttemp = cp_build_fold_indirect_ref (temp);\n+\tif (xvalue_p (object) && !xvalue_p (temp))\n+\t  /* Preserve xvalue kind.  */\n+\t  temp = move (temp);\n+\tobject = temp;\n+      }\n   }\n \n   /* In [expr.ref], there is an explicit list of the valid choices for"}, {"sha": "99a444397545a21ecb2ce4d7bb3a598b037bc8b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/580b8d9b540761e4df47d22fbfc9372396db8748/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/580b8d9b540761e4df47d22fbfc9372396db8748/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=580b8d9b540761e4df47d22fbfc9372396db8748", "patch": "@@ -1,3 +1,8 @@\n+2018-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/88103\n+\t* g++.dg/cpp0x/rv-cond3.C: New test.\n+\n 2018-12-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/88315"}, {"sha": "74b010b055c21012b13be3113ab43fcbdba55a4f", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-cond3.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/580b8d9b540761e4df47d22fbfc9372396db8748/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cond3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/580b8d9b540761e4df47d22fbfc9372396db8748/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cond3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cond3.C?ref=580b8d9b540761e4df47d22fbfc9372396db8748", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/88103\n+// { dg-do compile { target c++11 } }\n+\n+struct A {\n+  A (int);\n+  A&& foo () &&;\n+  int i;\n+};\n+void free (A&&);\n+\n+void test_xvalue (A a){\n+  A&& ref = true ? static_cast<A&&> (a) : static_cast<A&&> (a); \n+  free (true ? static_cast<A&&> (a) : static_cast<A&&> (a));\n+  (true ? static_cast<A&&> (a) : static_cast<A&&> (a)).foo ();\n+  int&& k = (true ? static_cast<A&&> (a) : static_cast<A&&> (a)).i;\n+}\n+void test_prvalue (A a){\n+  A&& ref = true ? static_cast<A&&> (a) : 1; \n+  free (true ? static_cast<A&&> (a) : 1);\n+  (true ? static_cast<A&&> (a) : 1).foo ();\n+  int&& k = (true ? static_cast<A&&> (a) : 1).i;\n+}"}]}