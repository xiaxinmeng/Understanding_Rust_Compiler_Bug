{"sha": "c72f711f8aa995eef830a3189fd0ca65c663544e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzcyZjcxMWY4YWE5OTVlZWY4MzBhMzE4OWZkMGNhNjVjNjYzNTQ0ZQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-07-25T20:23:50Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-07-25T20:23:50Z"}, "message": "tree-ssa-reassoc.c (reassociate_expr): Allow scaler floating point types when flag_unsafe_math_optimizations is true.\n\n2005-07-25  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * tree-ssa-reassoc.c (reassociate_expr): Allow scaler floating point\n        types when flag_unsafe_math_optimizations is true.\n\n2005-07-25  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * gcc.dg/tree-ssa/reassoc-3.c: New test.\n        * gcc.dg/tree-ssa/reassoc-4.c: New test.\n\nFrom-SVN: r102368", "tree": {"sha": "84e5a56aec9d4dbd3e5bb74ed964647e3c00138e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84e5a56aec9d4dbd3e5bb74ed964647e3c00138e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c72f711f8aa995eef830a3189fd0ca65c663544e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c72f711f8aa995eef830a3189fd0ca65c663544e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c72f711f8aa995eef830a3189fd0ca65c663544e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c72f711f8aa995eef830a3189fd0ca65c663544e/comments", "author": null, "committer": null, "parents": [{"sha": "160633c62690e70e5af6bad15c3e0ccab8b59578", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/160633c62690e70e5af6bad15c3e0ccab8b59578", "html_url": "https://github.com/Rust-GCC/gccrs/commit/160633c62690e70e5af6bad15c3e0ccab8b59578"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "22171428681bba17779dc70bae748653554e7e03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c72f711f8aa995eef830a3189fd0ca65c663544e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c72f711f8aa995eef830a3189fd0ca65c663544e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c72f711f8aa995eef830a3189fd0ca65c663544e", "patch": "@@ -1,3 +1,8 @@\n+2005-07-25  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* tree-ssa-reassoc.c (reassociate_expr): Allow scaler floating point\n+\ttypes when flag_unsafe_math_optimizations is true.\n+\n 2005-07-25  Mark Mitchell  <mark@codesourcery.com>\n \n \t* gcc.c (option_map): Add --sysroot."}, {"sha": "bcdb54cf70e809c9390951d3459dcad0314f0cbb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c72f711f8aa995eef830a3189fd0ca65c663544e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c72f711f8aa995eef830a3189fd0ca65c663544e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c72f711f8aa995eef830a3189fd0ca65c663544e", "patch": "@@ -1,3 +1,8 @@\n+2005-07-25  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* gcc.dg/tree-ssa/reassoc-3.c: New test.\n+\t* gcc.dg/tree-ssa/reassoc-4.c: New test.\n+\n 2005-07-25  Adam Nemet  <anemet@lnxw.com>\n \n         * lib/profopt.exp (profopt-execute): Check for profiling data"}, {"sha": "3800497e9004e9b89c39e19d5cb6782efa964942", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-3.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c72f711f8aa995eef830a3189fd0ca65c663544e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c72f711f8aa995eef830a3189fd0ca65c663544e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-3.c?ref=c72f711f8aa995eef830a3189fd0ca65c663544e", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */ \n+/* { dg-options \"-O2 -fdump-tree-optimized -ffast-math\" } */\n+float a, b, c, d;\n+extern int printf (const char *, ...);\n+int main(void)\n+{\n+  float e;\n+  float f;\n+  /* We should be able to transform these into the same expression, and only have two additions.  */\n+  e = a + b;\n+  e = e + c;\n+  f = c + a;\n+  f = f + b;\n+  printf (\"%f %f\\n\", e, f);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"\\\\\\+\" 2 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "6f46752df865a9f1b99cc991cc8706ad9bfda29c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-4.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c72f711f8aa995eef830a3189fd0ca65c663544e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c72f711f8aa995eef830a3189fd0ca65c663544e/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-4.c?ref=c72f711f8aa995eef830a3189fd0ca65c663544e", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */ \n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+float a, b, c, d;\n+extern int printf (const char *, ...);\n+int main(void)\n+{\n+  float e;\n+  float f;\n+  /* We should not be able to transform these into the same expression, and only have two additions.  */\n+  e = a + b;\n+  e = e + c;\n+  f = c + a;\n+  f = f + b;\n+  printf (\"%f %f\\n\", e, f);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"\\\\\\+\" 4 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "e0d45612b011a66c4a0b9155ae1ba1e736d7702d", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c72f711f8aa995eef830a3189fd0ca65c663544e/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c72f711f8aa995eef830a3189fd0ca65c663544e/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=c72f711f8aa995eef830a3189fd0ca65c663544e", "patch": "@@ -435,10 +435,13 @@ reassociate_expr (tree bexpr, block_stmt_iterator *currbsi)\n   unsigned int lhsrank = get_rank (lhs);\n   unsigned int rhsrank = get_rank (rhs);\n \n-  /* I don't want to get into the business of floating point\n-     reassociation.  */\n-  if (!INTEGRAL_TYPE_P (TREE_TYPE (lhs))\n-      || !INTEGRAL_TYPE_P (TREE_TYPE (rhs)))\n+  /* If unsafe math optimizations we can do reassociation for non integal\n+     types.  */\n+  if ((!INTEGRAL_TYPE_P (TREE_TYPE (lhs))\n+       || !INTEGRAL_TYPE_P (TREE_TYPE (rhs)))\n+      && (!SCALAR_FLOAT_TYPE_P (TREE_TYPE (rhs))\n+\t  || !SCALAR_FLOAT_TYPE_P (TREE_TYPE(lhs))\n+\t  || !flag_unsafe_math_optimizations))\n     return false;\n     \n   /* We want the greater ranked operand to be our \"LHS\" for simplicity"}]}