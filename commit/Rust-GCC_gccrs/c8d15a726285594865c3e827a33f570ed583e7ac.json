{"sha": "c8d15a726285594865c3e827a33f570ed583e7ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhkMTVhNzI2Mjg1NTk0ODY1YzNlODI3YTMzZjU3MGVkNTgzZTdhYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-11-15T16:11:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-11-15T16:11:56Z"}, "message": "re PR c++/54903 (Auto + static in-class constant initialization not working)\n\n\tPR c++/54903\n\t* decl2.c (mark_used): Don't complain about auto in templates.\n\nFrom-SVN: r193535", "tree": {"sha": "206b8fd5edfc32a0f670b04f78f7156947ccf813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/206b8fd5edfc32a0f670b04f78f7156947ccf813"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8d15a726285594865c3e827a33f570ed583e7ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d15a726285594865c3e827a33f570ed583e7ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8d15a726285594865c3e827a33f570ed583e7ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d15a726285594865c3e827a33f570ed583e7ac/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f64bcb29f5f44c2d8d4ec722dcd9df6c9c235968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f64bcb29f5f44c2d8d4ec722dcd9df6c9c235968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f64bcb29f5f44c2d8d4ec722dcd9df6c9c235968"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "232822a59083ea55fd7f83178214fca0d78f7a85", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d15a726285594865c3e827a33f570ed583e7ac/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d15a726285594865c3e827a33f570ed583e7ac/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c8d15a726285594865c3e827a33f570ed583e7ac", "patch": "@@ -1,5 +1,8 @@\n 2012-11-14  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54903\n+\t* decl2.c (mark_used): Don't complain about auto in templates.\n+\n \tPR c++/37276\n \t* decl.c (decls_match): Remove #ifdef around earlier fix.\n "}, {"sha": "9f20757c30f3a0fe491ae3efea611e62e99fecec", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d15a726285594865c3e827a33f570ed583e7ac/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d15a726285594865c3e827a33f570ed583e7ac/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=c8d15a726285594865c3e827a33f570ed583e7ac", "patch": "@@ -4534,8 +4534,8 @@ mark_used (tree decl)\n      it to find out its type.  */\n   if ((decl_maybe_constant_var_p (decl)\n        || (TREE_CODE (decl) == FUNCTION_DECL\n-\t   && (DECL_DECLARED_CONSTEXPR_P (decl)\n-\t       || type_uses_auto (TREE_TYPE (TREE_TYPE (decl))))))\n+\t   && DECL_DECLARED_CONSTEXPR_P (decl))\n+       || type_uses_auto (TREE_TYPE (decl)))\n       && DECL_LANG_SPECIFIC (decl)\n       && DECL_TEMPLATE_INFO (decl)\n       && !uses_template_parms (DECL_TI_ARGS (decl)))\n@@ -4550,6 +4550,14 @@ mark_used (tree decl)\n       --function_depth;\n     }\n \n+  if (processing_template_decl)\n+    return true;\n+\n+  /* Check this too in case we're within fold_non_dependent_expr.  */\n+  if (DECL_TEMPLATE_INFO (decl)\n+      && uses_template_parms (DECL_TI_ARGS (decl)))\n+    return true;\n+\n   if (type_uses_auto (TREE_TYPE (decl)))\n     {\n       error (\"use of %qD before deduction of %<auto%>\", decl);\n@@ -4560,14 +4568,6 @@ mark_used (tree decl)\n   if (cp_unevaluated_operand != 0)\n     return true;\n \n-  if (processing_template_decl)\n-    return true;\n-\n-  /* Check this too in case we're within fold_non_dependent_expr.  */\n-  if (DECL_TEMPLATE_INFO (decl)\n-      && uses_template_parms (DECL_TI_ARGS (decl)))\n-    return true;\n-\n   DECL_ODR_USED (decl) = 1;\n   if (DECL_CLONED_FUNCTION_P (decl))\n     DECL_ODR_USED (DECL_CLONED_FUNCTION (decl)) = 1;"}, {"sha": "c3530401bd281cc7b0ca6cfb88e46722e3e93c25", "filename": "gcc/testsuite/g++.dg/cpp0x/auto36.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d15a726285594865c3e827a33f570ed583e7ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d15a726285594865c3e827a33f570ed583e7ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto36.C?ref=c8d15a726285594865c3e827a33f570ed583e7ac", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/54903\n+// { dg-options -std=c++11 }\n+\n+template<int N, int D>\n+struct Modulus\n+{\n+        static auto const value = N % D;\n+};\n+\n+template<int N>\n+struct Angle\n+{\n+        static auto const value = Modulus<N, 360>::value; // ERROR\n+        //static int const value = Modulus<N, 360>::value;  // OK\n+        //static auto const value = N % 360;                // OK\n+\n+        typedef Angle<value> type;\n+};"}]}