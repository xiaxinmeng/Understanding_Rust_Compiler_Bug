{"sha": "04e61bd4dd50def56f95dc0f00c428d29cab9242", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRlNjFiZDRkZDUwZGVmNTZmOTVkYzBmMDBjNDI4ZDI5Y2FiOTI0Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-01T20:14:21Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-01T20:14:21Z"}, "message": "(PIC_CASE_VECTOR_ADDRESS): Defined.\n\n(GO_IF_LEGITIMATE_ADDRESS): If pic, accept LABEL+INDEX.\n\nFrom-SVN: r5051", "tree": {"sha": "663e3537e84702b88590a15e609eb577db03a7b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/663e3537e84702b88590a15e609eb577db03a7b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04e61bd4dd50def56f95dc0f00c428d29cab9242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04e61bd4dd50def56f95dc0f00c428d29cab9242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04e61bd4dd50def56f95dc0f00c428d29cab9242", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04e61bd4dd50def56f95dc0f00c428d29cab9242/comments", "author": null, "committer": null, "parents": [{"sha": "19b2fd27ea262649afb3869fa0b1e98153121829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19b2fd27ea262649afb3869fa0b1e98153121829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19b2fd27ea262649afb3869fa0b1e98153121829"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "72d94572b14a9e52b3791171175671ea3488c4c5", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04e61bd4dd50def56f95dc0f00c428d29cab9242/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04e61bd4dd50def56f95dc0f00c428d29cab9242/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=04e61bd4dd50def56f95dc0f00c428d29cab9242", "patch": "@@ -1217,9 +1217,19 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n \t    || INTVAL (XEXP (X, 1)) == 4\t\t\\\n \t    || INTVAL (XEXP (X, 1)) == 8)))\n \n-#define GO_IF_LEGITIMATE_ADDRESS(MODE, X, ADDR)  \\\n-{ GO_IF_NONINDEXED_ADDRESS (X, ADDR);\t\t\t\\\n-  GO_IF_INDEXED_ADDRESS (X, ADDR); }\n+/* If pic, we accept INDEX+LABEL, which is what do_tablejump makes.  */\n+#define GO_IF_LEGITIMATE_ADDRESS(MODE, X, ADDR)\t\t\t\t\\\n+{ GO_IF_NONINDEXED_ADDRESS (X, ADDR);\t\t\t\t\t\\\n+  GO_IF_INDEXED_ADDRESS (X, ADDR);\t\t\t\t\t\\\n+  if (flag_pic && MODE == CASE_VECTOR_MODE && GET_CODE (X) == PLUS\t\\\n+      && LEGITIMATE_INDEX_P (XEXP (X, 0))\t\t\t\t\\\n+      && GET_CODE (XEXP (X, 1)) == LABEL_REF)\t\t\t\t\\\n+    goto ADDR; }\n+\n+/* Don't call memory_address_noforce for the address to fetch\n+   the switch offset.  This address is ok as it stands (see above),\n+   but memory_address_noforce would alter it.  */\n+#define PIC_CASE_VECTOR_ADDRESS(index) index\n \f\n /* Try machine-dependent ways of modifying an illegitimate address\n    to be legitimate.  If we find one, return the new, valid address."}]}