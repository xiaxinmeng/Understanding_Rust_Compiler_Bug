{"sha": "e34495985e49545c468e664ee10bd0e66c7395bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM0NDk1OTg1ZTQ5NTQ1YzQ2OGU2NjRlZTEwYmQwZTY2YzczOTViZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-05-08T15:18:20Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-05-08T15:25:12Z"}, "message": "Fix uniqueness of address for aliased objects\n\nTwo aliased objects must have distinct addresses, even if they have\nsize zero, so we make sure to allocate at least one byte for them.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Force at\n\tleast the unit size for an aliased object of a constrained nominal\n\tsubtype whose size is variable.", "tree": {"sha": "ee654f813c85e07812e4b4564d5078fef176cc32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee654f813c85e07812e4b4564d5078fef176cc32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e34495985e49545c468e664ee10bd0e66c7395bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34495985e49545c468e664ee10bd0e66c7395bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e34495985e49545c468e664ee10bd0e66c7395bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34495985e49545c468e664ee10bd0e66c7395bf/comments", "author": null, "committer": null, "parents": [{"sha": "bb1ec4773a01e5bbb7cb6e2f53ea338a74a6797f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb1ec4773a01e5bbb7cb6e2f53ea338a74a6797f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb1ec4773a01e5bbb7cb6e2f53ea338a74a6797f"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "35d111401e2923a33695300690f2244b2f010af1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34495985e49545c468e664ee10bd0e66c7395bf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34495985e49545c468e664ee10bd0e66c7395bf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e34495985e49545c468e664ee10bd0e66c7395bf", "patch": "@@ -1,3 +1,9 @@\n+2020-05-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Force at\n+\tleast the unit size for an aliased object of a constrained nominal\n+\tsubtype whose size is variable.\n+\n 2020-05-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Subtype>: Deal"}, {"sha": "9c1acd9f23f4532debaf76bdf84cc6a6affa7e4f", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34495985e49545c468e664ee10bd0e66c7395bf/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34495985e49545c468e664ee10bd0e66c7395bf/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=e34495985e49545c468e664ee10bd0e66c7395bf", "patch": "@@ -969,10 +969,19 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t  align = MINIMUM_ATOMIC_ALIGNMENT;\n #endif\n \n-\t/* Make a new type with the desired size and alignment, if needed.\n-\t   But do not take into account alignment promotions to compute the\n-\t   size of the object.  */\n+\t/* Do not take into account aliased adjustments or alignment promotions\n+\t   to compute the size of the object.  */\n \ttree gnu_object_size = gnu_size ? gnu_size : TYPE_SIZE (gnu_type);\n+\n+\t/* If the object is aliased, of a constrained nominal subtype and its\n+\t   size might be zero at run time, we force at least the unit size.  */\n+\tif (Is_Aliased (gnat_entity)\n+\t    && !Is_Constr_Subt_For_UN_Aliased (gnat_type)\n+\t    && Is_Array_Type (Underlying_Type (gnat_type))\n+\t    && !TREE_CONSTANT (gnu_object_size))\n+\t  gnu_size = size_binop (MAX_EXPR, gnu_object_size, bitsize_unit_node);\n+\n+\t/* Make a new type with the desired size and alignment, if needed.  */\n \tif (gnu_size || align > 0)\n \t  {\n \t    tree orig_type = gnu_type;"}, {"sha": "8dc87d3948de3eba032b42c9d2b6343f8dd432c1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34495985e49545c468e664ee10bd0e66c7395bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34495985e49545c468e664ee10bd0e66c7395bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e34495985e49545c468e664ee10bd0e66c7395bf", "patch": "@@ -1,3 +1,7 @@\n+2020-05-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/addr15.adb: New test.\n+\n 2020-05-08  Richard Biener  <rguenther@suse.de>\n \n \t* gnat.dg/opt83.adb: New testcase."}, {"sha": "bb79dff862f5c90e4e62af4e65d89ad8cccc722b", "filename": "gcc/testsuite/gnat.dg/addr15.adb", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34495985e49545c468e664ee10bd0e66c7395bf/gcc%2Ftestsuite%2Fgnat.dg%2Faddr15.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34495985e49545c468e664ee10bd0e66c7395bf/gcc%2Ftestsuite%2Fgnat.dg%2Faddr15.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faddr15.adb?ref=e34495985e49545c468e664ee10bd0e66c7395bf", "patch": "@@ -0,0 +1,19 @@\n+--  { dg-do run }\n+\n+with System; use System;\n+\n+procedure Addr15 is\n+\n+  function Get_Bound (Param : Integer) return Integer is (Param);\n+\n+  type Alpha_Typ is array (1 .. Get_Bound (1)) of Integer;\n+  type Beta_Typ  is array (1 .. Get_Bound (0)) of Integer;\n+\n+  Alpha : Alpha_Typ;\n+  Beta  : aliased Beta_Typ;\n+\n+begin\n+  if Alpha'Address = Beta'Address then\n+    raise Program_Error;\n+  end if;\n+end;"}]}