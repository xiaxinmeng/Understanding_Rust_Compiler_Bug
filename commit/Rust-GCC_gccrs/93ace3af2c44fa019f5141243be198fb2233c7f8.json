{"sha": "93ace3af2c44fa019f5141243be198fb2233c7f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNhY2UzYWYyYzQ0ZmEwMTlmNTE0MTI0M2JlMTk4ZmIyMjMzYzdmOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-11-08T11:58:45Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-11-08T11:58:45Z"}, "message": "Fix code order in tree-sra.c:create_access\n\nIf get_ref_base_and_extent returns poly_int offsets or sizes,\ntree-sra.c:create_access prevents SRA from being applied to the base.\nHowever, we haven't verified by that point that we have a valid base\nto disqualify.\n\nThis originally led to an ICE on the attached testcase, but it\nno longer triggers there after the introduction of IPA SRA.\n\n2019-11-08  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-sra.c (create_access): Delay disqualifying the base\n\tfor poly_int values until we know we have a base.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/acle/general/inline_2.c: New test.\n\nFrom-SVN: r277965", "tree": {"sha": "30b41e500b3c8d0bda47f2bd6a66bb0c8dd9ec78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30b41e500b3c8d0bda47f2bd6a66bb0c8dd9ec78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93ace3af2c44fa019f5141243be198fb2233c7f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93ace3af2c44fa019f5141243be198fb2233c7f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93ace3af2c44fa019f5141243be198fb2233c7f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93ace3af2c44fa019f5141243be198fb2233c7f8/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b602712b3ea2a0729a2eda61bd9ee795aba6138f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b602712b3ea2a0729a2eda61bd9ee795aba6138f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b602712b3ea2a0729a2eda61bd9ee795aba6138f"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "519896dcaae68c69daf17d4a02ee3dda6d0c94bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ace3af2c44fa019f5141243be198fb2233c7f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ace3af2c44fa019f5141243be198fb2233c7f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93ace3af2c44fa019f5141243be198fb2233c7f8", "patch": "@@ -1,3 +1,8 @@\n+2019-11-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-sra.c (create_access): Delay disqualifying the base\n+\tfor poly_int values until we know we have a base.\n+\n 2019-11-08  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* tree-vect-loop.c (vect_analyze_loop): Disable epilogue vectorization"}, {"sha": "06ec4028518ebe75a67aab47d00f936201adff77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ace3af2c44fa019f5141243be198fb2233c7f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ace3af2c44fa019f5141243be198fb2233c7f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=93ace3af2c44fa019f5141243be198fb2233c7f8", "patch": "@@ -1,3 +1,7 @@\n+2019-11-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/acle/general/inline_2.c: New test.\n+\n 2019-11-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/92038"}, {"sha": "04f0b7c4b3509309cc201fcbb2005a5cb7801b86", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/general/inline_2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ace3af2c44fa019f5141243be198fb2233c7f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Finline_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ace3af2c44fa019f5141243be198fb2233c7f8/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Finline_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fgeneral%2Finline_2.c?ref=93ace3af2c44fa019f5141243be198fb2233c7f8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O2\" } */\n+\n+typedef struct s { double d[4]; } TYPE;\n+\n+static inline void\n+copy (TYPE *dst, TYPE *src)\n+{\n+  __SVFloat64_t tmp = *(__SVFloat64_t *) src;\n+  *dst = *(TYPE *) &tmp;\n+}\n+\n+void\n+foo (TYPE *a)\n+{\n+  copy (a, a + 1);\n+}"}, {"sha": "8bcfef42e35c9fef79975a537ab8860dc0ea83cd", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93ace3af2c44fa019f5141243be198fb2233c7f8/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93ace3af2c44fa019f5141243be198fb2233c7f8/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=93ace3af2c44fa019f5141243be198fb2233c7f8", "patch": "@@ -789,19 +789,11 @@ create_access (tree expr, gimple *stmt, bool write)\n {\n   struct access *access;\n   poly_int64 poffset, psize, pmax_size;\n-  HOST_WIDE_INT offset, size, max_size;\n   tree base = expr;\n   bool reverse, unscalarizable_region = false;\n \n   base = get_ref_base_and_extent (expr, &poffset, &psize, &pmax_size,\n \t\t\t\t  &reverse);\n-  if (!poffset.is_constant (&offset)\n-      || !psize.is_constant (&size)\n-      || !pmax_size.is_constant (&max_size))\n-    {\n-      disqualify_candidate (base, \"Encountered a polynomial-sized access.\");\n-      return NULL;\n-    }\n \n   /* For constant-pool entries, check we can substitute the constant value.  */\n   if (constant_decl_p (base))\n@@ -824,6 +816,15 @@ create_access (tree expr, gimple *stmt, bool write)\n   if (!DECL_P (base) || !bitmap_bit_p (candidate_bitmap, DECL_UID (base)))\n     return NULL;\n \n+  HOST_WIDE_INT offset, size, max_size;\n+  if (!poffset.is_constant (&offset)\n+      || !psize.is_constant (&size)\n+      || !pmax_size.is_constant (&max_size))\n+    {\n+      disqualify_candidate (base, \"Encountered a polynomial-sized access.\");\n+      return NULL;\n+    }\n+\n   if (size != max_size)\n     {\n       size = max_size;"}]}