{"sha": "bb408e876c536829cc57439df8e4a28c43e68456", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI0MDhlODc2YzUzNjgyOWNjNTc0MzlkZjhlNGEyOGM0M2U2ODQ1Ng==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2010-05-07T15:55:59Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2010-05-07T15:55:59Z"}, "message": "Remove free_mem\n\nFrom-SVN: r159160", "tree": {"sha": "bbdaaba9870daa7c26073e634bce50437a73cd07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbdaaba9870daa7c26073e634bce50437a73cd07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb408e876c536829cc57439df8e4a28c43e68456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb408e876c536829cc57439df8e4a28c43e68456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb408e876c536829cc57439df8e4a28c43e68456", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb408e876c536829cc57439df8e4a28c43e68456/comments", "author": null, "committer": null, "parents": [{"sha": "5cd0e96b0e8248436fa6f743feb057114abd2f62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd0e96b0e8248436fa6f743feb057114abd2f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cd0e96b0e8248436fa6f743feb057114abd2f62"}], "stats": {"total": 147, "additions": 85, "deletions": 62}, "files": [{"sha": "bfe2f7ef1feaa120188822c2ad492cc275d3ed87", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -1,3 +1,31 @@\n+2010-05-07  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+        * libgfortran.h (free_mem): Remove prototype.\n+        * runtime/memory.c (free_mem): Remove function.\n+        * intrinsics/date_and_time.c (secnds): Replace free_mem() with\n+        free().\n+        * io/fbuf.c (fbuf_destroy): Likewise.\n+        * io/format.c (free_format_hash_table): Likewise.\n+        (save_parsed_format): Likewise.\n+        (free_format_data): Likewise.\n+        * io/list_read.c (free_saved): Likewise.\n+        (free_line): Likewise.\n+        (nml_touch_nodes): Likewise.\n+        (nml_read_obj): Likewise\n+        * io/lock.c (free_ionml): Likewise.\n+        * io/open.c (new_unit): Likewise.\n+        (already_open): Likewise.\n+        * io/unit.c (destroy_unit_mutex): Likewise.\n+        (free_internal_unit): Likewise.\n+        (close_unit_1): Likewise.\n+        * io/unix.c (raw_close): Likewise.\n+        (buf_close): Likewise.\n+        (mem_close): Likewise.\n+        (tempfile): Likewise.\n+        * io/write.c (nml_write_obj): Likewise.\n+        * io/write_float.def (output_float_FMT_G_##): Likewise.\n+        * runtime/error.c (show_locus): Likewise.\n+\n 2010-05-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR other/43620"}, {"sha": "647dd9ad7a36121418f52488cb8b3439e5bb0022", "filename": "libgfortran/intrinsics/date_and_time.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fintrinsics%2Fdate_and_time.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fintrinsics%2Fdate_and_time.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fdate_and_time.c?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -3,7 +3,7 @@\n    Free Software Foundation, Inc.\n    Contributed by Steven Bosscher.\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -366,7 +366,7 @@ secnds (GFC_REAL_4 *x)\n \n   date_and_time (NULL, NULL, NULL, avalues, 0, 0, 0);\n \n-  free_mem (avalues);\n+  free (avalues);\n \n   temp1 = 3600.0 * (GFC_REAL_4)values[4] +\n \t    60.0 * (GFC_REAL_4)values[5] +"}, {"sha": "82b3f6ba6c699efa641e7edad1528507eba24637", "filename": "libgfortran/io/fbuf.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Ffbuf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Ffbuf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffbuf.c?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Janne Blomqvist\n \n This file is part of the GNU Fortran runtime library (libgfortran).\n@@ -52,8 +52,8 @@ fbuf_destroy (gfc_unit * u)\n   if (u->fbuf == NULL)\n     return;\n   if (u->fbuf->buf)\n-    free_mem (u->fbuf->buf);\n-  free_mem (u->fbuf);\n+    free (u->fbuf->buf);\n+  free (u->fbuf);\n   u->fbuf = NULL;\n }\n "}, {"sha": "5771777a1211d3c12d1022ad30f76902752d1a6a", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -3,7 +3,7 @@\n    Contributed by Andy Vaught\n    F2003 I/O support contributed by Jerry DeLisle\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -33,6 +33,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <ctype.h>\n #include <string.h>\n #include <stdbool.h>\n+#include <stdlib.h>\n \n #define FARRAY_SIZE 64\n \n@@ -90,7 +91,7 @@ free_format_hash_table (gfc_unit *u)\n       if (u->format_hash_table[i].hashed_fmt != NULL)\n \t{\n \t  free_format_data (u->format_hash_table[i].hashed_fmt);\n-\t  free_mem (u->format_hash_table[i].key);\n+\t  free (u->format_hash_table[i].key);\n \t}\n       u->format_hash_table[i].key = NULL;\n       u->format_hash_table[i].key_len = 0;      \n@@ -171,7 +172,7 @@ save_parsed_format (st_parameter_dt *dtp)\n   u->format_hash_table[hash].hashed_fmt = NULL;\n \n   if (u->format_hash_table[hash].key != NULL)\n-    free_mem (u->format_hash_table[hash].key);\n+    free (u->format_hash_table[hash].key);\n   u->format_hash_table[hash].key = get_mem (dtp->format_len);\n   memcpy (u->format_hash_table[hash].key, dtp->format, dtp->format_len);\n \n@@ -282,10 +283,10 @@ free_format_data (format_data *fmt)\n   for (fa = fmt->array.next; fa; fa = fa_next)\n     {\n       fa_next = fa->next;\n-      free_mem (fa);\n+      free (fa);\n     }\n \n-  free_mem (fmt);\n+  free (fmt);\n   fmt = NULL;\n }\n "}, {"sha": "2f0f931ab5a0dddb6e9e53ffa0847e4d91cdc9d8", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -4,7 +4,7 @@\n    Namelist input contributed by Paul Thomas\n    F2003 I/O support contributed by Jerry DeLisle\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -110,7 +110,7 @@ free_saved (st_parameter_dt *dtp)\n   if (dtp->u.p.saved_string == NULL)\n     return;\n \n-  free_mem (dtp->u.p.saved_string);\n+  free (dtp->u.p.saved_string);\n \n   dtp->u.p.saved_string = NULL;\n   dtp->u.p.saved_used = 0;\n@@ -128,7 +128,7 @@ free_line (st_parameter_dt *dtp)\n   if (dtp->u.p.line_buffer == NULL)\n     return;\n \n-  free_mem (dtp->u.p.line_buffer);\n+  free (dtp->u.p.line_buffer);\n   dtp->u.p.line_buffer = NULL;\n }\n \n@@ -2175,7 +2175,7 @@ nml_touch_nodes (namelist_info * nl)\n       else\n \tbreak;\n     }\n-  free_mem (ext_name);\n+  free (ext_name);\n   return;\n }\n \n@@ -2440,18 +2440,18 @@ nml_read_obj (st_parameter_dt *dtp, namelist_info * nl, index_type offset,\n \t\t\t\t  pprev_nl, nml_err_msg, nml_err_msg_size,\n \t\t\t\t  clow, chigh) == FAILURE)\n \t\t  {\n-\t\t    free_mem (obj_name);\n+\t\t    free (obj_name);\n \t\t    return FAILURE;\n \t\t  }\n \n \t\tif (dtp->u.p.input_complete)\n \t\t  {\n-\t\t    free_mem (obj_name);\n+\t\t    free (obj_name);\n \t\t    return SUCCESS;\n \t\t  }\n \t      }\n \n-\t    free_mem (obj_name);\n+\t    free (obj_name);\n \t    goto incr_idx;\n \n           default:"}, {"sha": "9e7e9513e0788a3360c526232676f00a8f7ad3bf", "filename": "libgfortran/io/lock.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Flock.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Flock.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flock.c?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -1,8 +1,9 @@\n /* Thread/recursion locking\n-   Copyright 2002, 2003, 2004, 2005, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright 2002, 2003, 2004, 2005, 2007, 2009, 2010 \n+   Free Software Foundation, Inc.\n    Contributed by Paul Brook <paul@nowt.org> and Andy Vaught\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -25,6 +26,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #include \"io.h\"\n #include <string.h>\n+#include <stdlib.h>\n \n /* library_start()-- Called with a library call is entered.  */\n \n@@ -52,13 +54,13 @@ free_ionml (st_parameter_dt *dtp)\n \t{\n \t  t2 = t1;\n \t  t1 = t1->next;\n-\t  free_mem (t2->var_name);\n+\t  free (t2->var_name);\n \t  if (t2->var_rank)\n \t    {\n-\t     free_mem (t2->dim);\n-\t     free_mem (t2->ls);\n+\t     free (t2->dim);\n+\t     free (t2->ls);\n \t    }\n-\t  free_mem (t2);\n+\t  free (t2);\n \t}\n     }\n   dtp->u.p.ionml = NULL;"}, {"sha": "be8f4bb0b4369f9f4bf890f5deb4d767bff7d04d", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -1,9 +1,9 @@\n-/* Copyright (C) 2002, 2003, 2004, 2005, 2007, 2008, 2009\n+/* Copyright (C) 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n    F2003 I/O support contributed by Jerry DeLisle\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -30,6 +30,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <unistd.h>\n #include <string.h>\n #include <errno.h>\n+#include <stdlib.h>\n \n \n static const st_option access_opt[] = {\n@@ -623,7 +624,7 @@ new_unit (st_parameter_open *opp, gfc_unit *u, unit_flags * flags)\n   test_endfile (u);\n \n   if (flags->status == STATUS_SCRATCH && opp->file != NULL)\n-    free_mem (opp->file);\n+    free (opp->file);\n     \n   if (flags->form == FORM_FORMATTED)\n     {\n@@ -644,7 +645,7 @@ new_unit (st_parameter_open *opp, gfc_unit *u, unit_flags * flags)\n   /* Free memory associated with a temporary filename.  */\n \n   if (flags->status == STATUS_SCRATCH && opp->file != NULL)\n-    free_mem (opp->file);\n+    free (opp->file);\n \n  fail:\n \n@@ -689,7 +690,7 @@ already_open (st_parameter_open *opp, gfc_unit * u, unit_flags * flags)\n \n       u->s = NULL;\n       if (u->file)\n-\tfree_mem (u->file);\n+\tfree (u->file);\n       u->file = NULL;\n       u->file_len = 0;\n "}, {"sha": "bbe112010ba73a55af405a3fe13445c8adb16555", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -1,8 +1,9 @@\n-/* Copyright (C) 2002, 2003, 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 2002, 2003, 2005, 2007, 2008, 2009, 2010 \n+   Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n    F2003 I/O support contributed by Jerry DeLisle\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -210,7 +211,7 @@ static void\n destroy_unit_mutex (gfc_unit * u)\n {\n   __gthread_mutex_destroy (&u->lock);\n-  free_mem (u);\n+  free (u);\n }\n \n \n@@ -473,10 +474,10 @@ free_internal_unit (st_parameter_dt *dtp)\n   if (dtp->u.p.current_unit != NULL)\n     {\n       if (dtp->u.p.current_unit->ls != NULL)\n-\tfree_mem (dtp->u.p.current_unit->ls);\n+\tfree (dtp->u.p.current_unit->ls);\n   \n       if (dtp->u.p.current_unit->s)\n-\tfree_mem (dtp->u.p.current_unit->s);\n+\tfree (dtp->u.p.current_unit->s);\n   \n       destroy_unit_mutex (dtp->u.p.current_unit);\n     }\n@@ -642,7 +643,7 @@ close_unit_1 (gfc_unit *u, int locked)\n   delete_unit (u);\n \n   if (u->file)\n-    free_mem (u->file);\n+    free (u->file);\n   u->file = NULL;\n   u->file_len = 0;\n "}, {"sha": "f0cd3b9b16cb7800fbba586c5b308d62f455bb23", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -3,7 +3,7 @@\n    Contributed by Andy Vaught\n    F2003 I/O support contributed by Jerry DeLisle\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -351,7 +351,7 @@ raw_close (unix_stream * s)\n     retval = close (s->fd);\n   else\n     retval = 0;\n-  free_mem (s);\n+  free (s);\n   return retval;\n }\n \n@@ -564,7 +564,7 @@ buf_close (unix_stream * s)\n {\n   if (buf_flush (s) != 0)\n     return -1;\n-  free_mem (s->buffer);\n+  free (s->buffer);\n   return raw_close (s);\n }\n \n@@ -739,7 +739,7 @@ static int\n mem_close (unix_stream * s)\n {\n   if (s != NULL)\n-    free_mem (s);\n+    free (s);\n \n   return 0;\n }\n@@ -937,7 +937,7 @@ tempfile (st_parameter_open *opp)\n #endif /* HAVE_MKSTEMP */\n \n   if (fd < 0)\n-    free_mem (template);\n+    free (template);\n   else\n     {\n       opp->file = template;\n@@ -1395,7 +1395,7 @@ find_file (const char *file, gfc_charlen_type file_len)\n \t  __gthread_mutex_lock (&unit_lock);\n \t  __gthread_mutex_unlock (&u->lock);\n \t  if (predec_waiting_locked (u) == 0)\n-\t    free_mem (u);\n+\t    free (u);\n \t  goto retry;\n \t}\n \n@@ -1460,7 +1460,7 @@ flush_all_units (void)\n \t  __gthread_mutex_lock (&unit_lock);\n \t  __gthread_mutex_unlock (&u->lock);\n \t  if (predec_waiting_locked (u) == 0)\n-\t    free_mem (u);\n+\t    free (u);\n \t}\n     }\n   while (1);"}, {"sha": "ee2ce0c391513c3b544dc5d7878e04039fa7de48", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -1,10 +1,10 @@\n-/* Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+/* Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n    Namelist output contributed by Paul Thomas\n    F2003 I/O support contributed by Jerry DeLisle\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -1683,8 +1683,8 @@ nml_write_obj (st_parameter_dt *dtp, namelist_info * obj, index_type offset,\n \t\t\t\t\t  obj, ext_name);\n \t\t}\n \n-\t      free_mem (obj_name);\n-\t      free_mem (ext_name);\n+\t      free (obj_name);\n+\t      free (ext_name);\n \t      goto obj_loop;\n \n             default:"}, {"sha": "45c2a17a50d805e7f9c7e45d2aab6d7f8e5ba1b5", "filename": "libgfortran/io/write_float.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Fwrite_float.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fio%2Fwrite_float.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite_float.def?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -3,7 +3,7 @@\n    Write float code factoring to this file by Jerry DeLisle   \n    F2003 I/O support contributed by Jerry DeLisle\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -743,7 +743,7 @@ output_float_FMT_G_ ## x (st_parameter_dt *dtp, const fnode *f, \\\n \t\tedigits);\\\n   dtp->u.p.scale_factor = save_scale_factor;\\\n \\\n-  free_mem(newf);\\\n+  free (newf);\\\n \\\n   if (nb > 0 && !dtp->u.p.g0_no_blanks)\\\n     { \\"}, {"sha": "f51ef00e1c5ceef9bf83f2abdf4ceade21a88b47", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -4,7 +4,7 @@\n    Contributed by Paul Brook <paul@nowt.org>, and\n    Andy Vaught <andy@xena.eas.asu.edu>\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -767,9 +767,6 @@ internal_proto(set_fpu);\n extern void *get_mem (size_t) __attribute__ ((malloc));\n internal_proto(get_mem);\n \n-extern void free_mem (void *);\n-internal_proto(free_mem);\n-\n extern void *internal_malloc_size (size_t) __attribute__ ((malloc));\n internal_proto(internal_malloc_size);\n "}, {"sha": "65983ad4cb56e704647adca1af0d21d97160733a", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -2,7 +2,7 @@\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -159,7 +159,7 @@ show_locus (st_parameter_common *cmp)\n \t{\n \t  st_printf (\"At line %d of file %s (unit = %d, file = '%s')\\n\",\n \t\t   (int) cmp->line, cmp->filename, (int) cmp->unit, filename);\n-\t  free_mem (filename);\n+\t  free (filename);\n \t}\n       else\n \t{"}, {"sha": "5f710849e529141ce179961cec86b64f2ae0e4d8", "filename": "libgfortran/runtime/memory.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fruntime%2Fmemory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb408e876c536829cc57439df8e4a28c43e68456/libgfortran%2Fruntime%2Fmemory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fmemory.c?ref=bb408e876c536829cc57439df8e4a28c43e68456", "patch": "@@ -1,8 +1,8 @@\n /* Memory management routines.\n-   Copyright 2002, 2005, 2006, 2007, 2009 Free Software Foundation, Inc.\n+   Copyright 2002, 2005, 2006, 2007, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Paul Brook <paul@nowt.org>\n \n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n+This file is part of the GNU Fortran runtime library (libgfortran).\n \n Libgfortran is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public\n@@ -49,13 +49,6 @@ get_mem (size_t n)\n }\n \n \n-void\n-free_mem (void *p)\n-{\n-  free (p);\n-}\n-\n-\n /* Allocate memory for internal (compiler generated) use.  */\n \n void *"}]}