{"sha": "1d749ee003f6ee1b0a531c64e8929be20d2adf24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ3NDllZTAwM2Y2ZWUxYjBhNTMxYzY0ZTg5MjliZTIwZDJhZGYyNA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-29T10:33:57Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-29T10:33:57Z"}, "message": "2003-10-29  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc\n\t(setOption): Directly return if no error occured.\n\t* gnu/java/net/natPlainSocketImplPosix.cc\n\t(setOption): Likewise.\n\nFrom-SVN: r73033", "tree": {"sha": "1528a074bac86d2ff083dd471a3cec66d57a5034", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1528a074bac86d2ff083dd471a3cec66d57a5034"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d749ee003f6ee1b0a531c64e8929be20d2adf24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d749ee003f6ee1b0a531c64e8929be20d2adf24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d749ee003f6ee1b0a531c64e8929be20d2adf24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d749ee003f6ee1b0a531c64e8929be20d2adf24/comments", "author": null, "committer": null, "parents": [{"sha": "657a9dd94da7d0ea2a6488a1a1f404f86a82132c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/657a9dd94da7d0ea2a6488a1a1f404f86a82132c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/657a9dd94da7d0ea2a6488a1a1f404f86a82132c"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "8a846f6a04ac344c1d73b43afeb7967153b1ecb3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d749ee003f6ee1b0a531c64e8929be20d2adf24/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d749ee003f6ee1b0a531c64e8929be20d2adf24/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1d749ee003f6ee1b0a531c64e8929be20d2adf24", "patch": "@@ -1,3 +1,10 @@\n+2003-10-29  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc\n+\t(setOption): Directly return if no error occured.\n+\t* gnu/java/net/natPlainSocketImplPosix.cc\n+\t(setOption): Likewise.\n+\n 2003-10-28  Bryce McKinlay  <bryce@mckinlay.net.nz>\n \n \t* java/lang/natClass.cc (_Jv_LayoutVTableMethods): Always assign a"}, {"sha": "89c50551b03a728413b59479eb3c02478fc1bfc9", "filename": "libjava/gnu/java/net/natPlainDatagramSocketImplPosix.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d749ee003f6ee1b0a531c64e8929be20d2adf24/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d749ee003f6ee1b0a531c64e8929be20d2adf24/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplPosix.cc?ref=1d749ee003f6ee1b0a531c64e8929be20d2adf24", "patch": "@@ -516,12 +516,12 @@ gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n         if (::setsockopt (native_fd, SOL_SOCKET, SO_BROADCAST, (char *) &val,\n                           val_len) != 0)\n           goto error;\n-\tbreak;\n+\treturn;\n \t\n       case _Jv_SO_OOBINLINE_ :\n         throw new ::java::net::SocketException (\n           JvNewStringUTF (\"SO_OOBINLINE: not valid for UDP\"));\n-        break;\n+        return;\n \t\n       case _Jv_SO_SNDBUF_ :\n       case _Jv_SO_RCVBUF_ :\n@@ -590,12 +590,12 @@ gnu::java::net::PlainDatagramSocketImpl::setOption (jint optID,\n       case _Jv_IP_MULTICAST_IF2_ :\n         throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_IF2: not yet implemented\"));\n-        break;\n+        return;\n \t\n       case _Jv_IP_MULTICAST_LOOP_ :\n         throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_LOOP: not yet implemented\"));\n-        break;\n+        return;\n \t\n       case _Jv_IP_TOS_ :\n         if (::setsockopt (native_fd, SOL_SOCKET, IP_TOS, (char *) &val,"}, {"sha": "9a3f7aff9fb23b6e07840b53c4b4a20433882b36", "filename": "libjava/gnu/java/net/natPlainSocketImplPosix.cc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d749ee003f6ee1b0a531c64e8929be20d2adf24/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d749ee003f6ee1b0a531c64e8929be20d2adf24/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplPosix.cc?ref=1d749ee003f6ee1b0a531c64e8929be20d2adf24", "patch": "@@ -622,18 +622,18 @@ gnu::java::net::PlainSocketImpl::setOption (jint optID, ::java::lang::Object *va\n         if (::setsockopt (native_fd, SOL_SOCKET, SO_KEEPALIVE, (char *) &val,\n                           val_len) != 0)\n           goto error;\n-        break;\n+        return;\n       \n       case _Jv_SO_BROADCAST_ :\n         throw new ::java::net::SocketException\n           (JvNewStringUTF (\"SO_BROADCAST not valid for TCP\"));\n-        break;\n+        return;\n \t\n       case _Jv_SO_OOBINLINE_ :\n         if (::setsockopt (native_fd, SOL_SOCKET, SO_OOBINLINE, (char *) &val,\n                           val_len) != 0)\n           goto error;\n-        break;\n+        return;\n \n       case _Jv_SO_LINGER_ :\n #ifdef SO_LINGER\n@@ -676,18 +676,18 @@ gnu::java::net::PlainSocketImpl::setOption (jint optID, ::java::lang::Object *va\n       case _Jv_IP_MULTICAST_IF2_ :\n         throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_IF2: not valid for TCP\"));\n-        break;\n+        return;\n \t\n       case _Jv_IP_MULTICAST_LOOP_ :\n         throw new ::java::net::SocketException (\n           JvNewStringUTF (\"IP_MULTICAST_LOOP: not valid for TCP\"));\n-        break;\n+        return;\n \t\n       case _Jv_IP_TOS_ :\n         if (::setsockopt (native_fd, SOL_SOCKET, IP_TOS, (char *) &val,\n                           val_len) != 0)\n           goto error;    \n-        break;\n+        return;\n \t\n       case _Jv_SO_REUSEADDR_ :\n         throw new ::java::net::SocketException ("}]}