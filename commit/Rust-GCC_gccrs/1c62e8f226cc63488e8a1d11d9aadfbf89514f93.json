{"sha": "1c62e8f226cc63488e8a1d11d9aadfbf89514f93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM2MmU4ZjIyNmNjNjM0ODhlOGExZDExZDlhYWRmYmY4OTUxNGY5Mw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-04-25T10:20:58Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-04-25T10:20:58Z"}, "message": "tm.texi (REGNO_OK_FOR_BASE_P, [...]): Mention strict/nonstrict difference.\n\n2009-04-25  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* doc/tm.texi (REGNO_OK_FOR_BASE_P, REGNO_MODE_OK_FOR_BASE_P,\n\tREGNO_MODE_OK_FOR_REG_BASE_P, REGNO_MODE_CODE_OK_FOR_BASE_P,\n\tREGNO_OK_FOR_INDEX_P): Mention strict/nonstrict difference.\n\nFrom-SVN: r146765", "tree": {"sha": "7949217881ee84eadde364497117d3d4ec66283a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7949217881ee84eadde364497117d3d4ec66283a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c62e8f226cc63488e8a1d11d9aadfbf89514f93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c62e8f226cc63488e8a1d11d9aadfbf89514f93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c62e8f226cc63488e8a1d11d9aadfbf89514f93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c62e8f226cc63488e8a1d11d9aadfbf89514f93/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "496a4ef59d7830dbedecb7718cb2b4c0a7377528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/496a4ef59d7830dbedecb7718cb2b4c0a7377528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/496a4ef59d7830dbedecb7718cb2b4c0a7377528"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "afc41ccc87a9b4419bfca5071ac35031d1bc29a1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c62e8f226cc63488e8a1d11d9aadfbf89514f93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c62e8f226cc63488e8a1d11d9aadfbf89514f93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c62e8f226cc63488e8a1d11d9aadfbf89514f93", "patch": "@@ -1,3 +1,9 @@\n+2009-04-25  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* doc/tm.texi (REGNO_OK_FOR_BASE_P, REGNO_MODE_OK_FOR_BASE_P,\n+\tREGNO_MODE_OK_FOR_REG_BASE_P, REGNO_MODE_CODE_OK_FOR_BASE_P,\n+\tREGNO_OK_FOR_INDEX_P): Mention strict/nonstrict difference.\n+\n 2009-04-25  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-eh.c (tree_remove_unreachable_handlers): Handle shared labels."}, {"sha": "9c561b6e8a3513c2cf9c7c05a81b531baa92c3c3", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c62e8f226cc63488e8a1d11d9aadfbf89514f93/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c62e8f226cc63488e8a1d11d9aadfbf89514f93/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=1c62e8f226cc63488e8a1d11d9aadfbf89514f93", "patch": "@@ -2503,9 +2503,18 @@ added to another register (as well as added to a displacement).\n \n @defmac REGNO_OK_FOR_BASE_P (@var{num})\n A C expression which is nonzero if register number @var{num} is\n-suitable for use as a base register in operand addresses.  It may be\n-either a suitable hard register or a pseudo register that has been\n-allocated such a hard register.\n+suitable for use as a base register in operand addresses.\n+Like @code{GO_IF_LEGITIMATE_ADDRESS}, this macro should also\n+exist in strict or non-strict variants.  Both variants behave\n+the same for hard register; for pseudos, the strict variant will\n+pass only those that have been allocated to a valid hard registers,\n+while the non-strict variant will pass all pseudos.\n+\n+@findex REG_OK_STRICT\n+Compiler source files that want to use the strict variant of this and\n+other macros define the macro @code{REG_OK_STRICT}.  You should use an\n+@code{#ifdef REG_OK_STRICT} conditional to define the strict variant in\n+that case and the non-strict variant otherwise.\n @end defmac\n \n @defmac REGNO_MODE_OK_FOR_BASE_P (@var{num}, @var{mode})\n@@ -2518,6 +2527,7 @@ you define this macro, the compiler will use it instead of\n addresses that appear outside a @code{MEM}, i.e., as an\n @code{address_operand}.\n \n+This macro also has strict and non-strict variants.\n @end defmac\n \n @defmac REGNO_MODE_OK_FOR_REG_BASE_P (@var{num}, @var{mode})\n@@ -2530,6 +2540,8 @@ than other base register uses.\n \n Use of this macro is deprecated; please use the more general\n @code{REGNO_MODE_CODE_OK_FOR_BASE_P}.\n+\n+This macro also has strict and non-strict variants.\n @end defmac\n \n @defmac REGNO_MODE_CODE_OK_FOR_BASE_P (@var{num}, @var{mode}, @var{outer_code}, @var{index_code})\n@@ -2542,6 +2554,8 @@ address, @code{ADDRESS} for something that occurs in an\n corresponding index expression if @var{outer_code} is @code{PLUS};\n @code{SCRATCH} otherwise.  The mode may be @code{VOIDmode} for addresses\n that appear outside a @code{MEM}, i.e., as an @code{address_operand}.\n+\n+This macro also has strict and non-strict variants.\n @end defmac\n \n @defmac REGNO_OK_FOR_INDEX_P (@var{num})\n@@ -2558,6 +2572,8 @@ labeling is used must fit the machine's constraints of which registers\n may serve in each capacity.  The compiler will try both labelings,\n looking for one that is valid, and will reload one or both registers\n only if neither labeling works.\n+\n+This macro also has strict and non-strict variants.\n @end defmac\n \n @defmac PREFERRED_RELOAD_CLASS (@var{x}, @var{class})"}]}