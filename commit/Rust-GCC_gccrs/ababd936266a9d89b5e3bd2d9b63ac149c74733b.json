{"sha": "ababd936266a9d89b5e3bd2d9b63ac149c74733b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJhYmQ5MzYyNjZhOWQ4OWI1ZTNiZDJkOWI2M2FjMTQ5Yzc0NzMzYg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-09-02T15:57:56Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-09-02T15:57:56Z"}, "message": "[ARM][1/2] Implement lceil, lfloor, lround optabs with new ARMv8-A instructions.\n\n                                                                                                                                                                             \n      PR target/62275\n      * config/arm/iterators.md (FIXUORS): New code iterator.\n      (VCVT): New int iterator.\n      (su_optab): New code attribute.\n      (su): Likewise.\n      * config/arm/vfp.md (l<vrint_pattern><su_optab><mode>si2): New pattern.\n\n      PR target/62275\n      * gcc.target/arm/lceil-vcvt_1.c: New test.\n      * gcc.target/arm/lfloor-vcvt_1.c: Likewise.\n      * gcc.target/arm/lround-vcvt_1.c: Likewise.\n\nFrom-SVN: r214825", "tree": {"sha": "9155c6d09111d7fc1978a5d7f1a7632d7c417853", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9155c6d09111d7fc1978a5d7f1a7632d7c417853"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ababd936266a9d89b5e3bd2d9b63ac149c74733b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ababd936266a9d89b5e3bd2d9b63ac149c74733b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ababd936266a9d89b5e3bd2d9b63ac149c74733b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ababd936266a9d89b5e3bd2d9b63ac149c74733b/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd5660ab1229ff6b47987f81769d908970ea0950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5660ab1229ff6b47987f81769d908970ea0950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd5660ab1229ff6b47987f81769d908970ea0950"}], "stats": {"total": 103, "additions": 103, "deletions": 0}, "files": [{"sha": "b46d009219db87eff25718e2d2cf4c5fc0bfb6cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ababd936266a9d89b5e3bd2d9b63ac149c74733b", "patch": "@@ -1,3 +1,12 @@\n+2014-09-02  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/62275\n+\t* config/arm/iterators.md (FIXUORS): New code iterator.\n+\t(VCVT): New int iterator.\n+\t(su_optab): New code attribute.\n+\t(su): Likewise.\n+\t* config/arm/vfp.md (l<vrint_pattern><su_optab><mode>si2): New pattern.\n+\n 2014-09-02  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/predicates.md (aarch64_comparison_operation):"}, {"sha": "f7e0e1483c9aad1442b832e277ca3ca4279e995a", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=ababd936266a9d89b5e3bd2d9b63ac149c74733b", "patch": "@@ -194,6 +194,9 @@\n ;; Right shifts\n (define_code_iterator rshifts [ashiftrt lshiftrt])\n \n+;; Iterator for integer conversions\n+(define_code_iterator FIXUORS [fix unsigned_fix])\n+\n ;; Binary operators whose second operand can be shifted.\n (define_code_iterator shiftable_ops [plus minus ior xor and])\n \n@@ -215,6 +218,8 @@\n (define_int_iterator VRINT [UNSPEC_VRINTZ UNSPEC_VRINTP UNSPEC_VRINTM\n                             UNSPEC_VRINTR UNSPEC_VRINTX UNSPEC_VRINTA])\n \n+(define_int_iterator VCVT [UNSPEC_VRINTP UNSPEC_VRINTM UNSPEC_VRINTA])\n+\n (define_int_iterator NEON_VRINT [UNSPEC_NVRINTP UNSPEC_NVRINTZ UNSPEC_NVRINTM\n                               UNSPEC_NVRINTX UNSPEC_NVRINTA UNSPEC_NVRINTN])\n \n@@ -519,6 +524,13 @@\n ;; Assembler mnemonics for signedness of widening operations.\n (define_code_attr US [(sign_extend \"s\") (zero_extend \"u\")])\n \n+;; Signedness suffix for float->fixed conversions.  Empty for signed\n+;; conversion.\n+(define_code_attr su_optab [(fix \"\") (unsigned_fix \"u\")])\n+\n+;; Sign prefix to use in instruction type suffixes, i.e. s32, u32.\n+(define_code_attr su [(fix \"s\") (unsigned_fix \"u\")])\n+\n ;; Right shifts\n (define_code_attr shift [(ashiftrt \"ashr\") (lshiftrt \"lshr\")])\n (define_code_attr shifttype [(ashiftrt \"signed\") (lshiftrt \"unsigned\")])"}, {"sha": "3686e1c081af7c41a45863d540b63400616f6c5b", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=ababd936266a9d89b5e3bd2d9b63ac149c74733b", "patch": "@@ -1303,6 +1303,18 @@\n    (set_attr \"conds\" \"<vrint_conds>\")]\n )\n \n+;; Implements the lround, lfloor and lceil optabs.\n+(define_insn \"l<vrint_pattern><su_optab><mode>si2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=t\")\n+        (FIXUORS:SI (unspec:SDF\n+                        [(match_operand:SDF 1\n+                           \"register_operand\" \"<F_constraint>\")] VCVT)))]\n+  \"TARGET_HARD_FLOAT && TARGET_FPU_ARMV8 <vfp_double_cond>\"\n+  \"vcvt<vrint_variant>%?.<su>32.<V_if_elem>\\\\t%0, %<V_reg>1\"\n+  [(set_attr \"predicable\" \"no\")\n+   (set_attr \"type\" \"f_cvtf2i\")]\n+)\n+\n ;; MIN_EXPR and MAX_EXPR eventually map to 'smin' and 'smax' in RTL.\n ;; The 'smax' and 'smin' RTL standard pattern names do not specify which\n ;; operand will be returned when both operands are zero (i.e. they may not"}, {"sha": "cc340df2d6d85793f8967188a6e1ed3f74771045", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ababd936266a9d89b5e3bd2d9b63ac149c74733b", "patch": "@@ -1,3 +1,10 @@\n+2014-09-02  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/62275\n+\t* gcc.target/arm/lceil-vcvt_1.c: New test.\n+\t* gcc.target/arm/lfloor-vcvt_1.c: Likewise.\n+\t* gcc.target/arm/lround-vcvt_1.c: Likewise.\n+\n 2014-09-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tDR 1453"}, {"sha": "bbe42717ad9e4c41725468174d38f0e9a2e1c9f2", "filename": "gcc/testsuite/gcc.target/arm/lceil-vcvt_1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flceil-vcvt_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flceil-vcvt_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flceil-vcvt_1.c?ref=ababd936266a9d89b5e3bd2d9b63ac149c74733b", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2 -march=armv8-a\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+int\n+foofloat (float x)\n+{\n+  return __builtin_lceilf (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcvtp.s32.f32\\ts\\[0-9\\]+, s\\[0-9\\]+\" 1 } } */\n+\n+\n+int\n+foodouble (double x)\n+{\n+  return __builtin_lceil (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcvtp.s32.f64\\ts\\[0-9\\]+, d\\[0-9\\]+\" 1 } } */"}, {"sha": "88671d36960bc8d2618b7bb3009d19a21c9750ee", "filename": "gcc/testsuite/gcc.target/arm/lfloor-vcvt_1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flfloor-vcvt_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flfloor-vcvt_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flfloor-vcvt_1.c?ref=ababd936266a9d89b5e3bd2d9b63ac149c74733b", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2 -march=armv8-a\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+int\n+foofloat (float x)\n+{\n+  return __builtin_lfloorf (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcvtm.s32.f32\\ts\\[0-9\\]+, s\\[0-9\\]+\" 1 } } */\n+\n+\n+int\n+foodouble (double x)\n+{\n+  return __builtin_lfloor (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcvtm.s32.f64\\ts\\[0-9\\]+, d\\[0-9\\]+\" 1 } } */"}, {"sha": "8b1f6a7c3a0c946032f8e6b26862ae15b9a8f80a", "filename": "gcc/testsuite/gcc.target/arm/lround-vcvt_1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flround-vcvt_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ababd936266a9d89b5e3bd2d9b63ac149c74733b/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flround-vcvt_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Flround-vcvt_1.c?ref=ababd936266a9d89b5e3bd2d9b63ac149c74733b", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2 -march=armv8-a -ffast-math\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+int\n+foofloat (float x)\n+{\n+  return __builtin_lroundf (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcvta.s32.f32\\ts\\[0-9\\]+, s\\[0-9\\]+\" 1 } } */\n+\n+\n+int\n+foodouble (double x)\n+{\n+  return __builtin_lround (x);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcvta.s32.f64\\ts\\[0-9\\]+, d\\[0-9\\]+\" 1 } } */"}]}