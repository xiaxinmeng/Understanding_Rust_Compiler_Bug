{"sha": "3346313740b113e22f2567638f6161414589cc73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM0NjMxMzc0MGIxMTNlMjJmMjU2NzYzOGY2MTYxNDE0NTg5Y2M3Mw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-05-06T23:50:42Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-05-06T23:50:42Z"}, "message": "rs6000: Renumber the registers\n\nThis renumbers the registers.\n\nIt moves the VRs to 64..95, right after the GPRs and the FPRS.  This\nmeans that the VSRs (which are aliases to the FPRs and the VRs, in\nthat order) are consecutive now.\n\nIt removes MQ, which has been just a stub for ages (it is a leftover\nfrom RIOS, old POWER).\n\nIt moves the CR fields to 100..107, which is a bit easier to read\nthan the 68..75 is was before.\n\nThe rest fills the holes.  It should be easy to move anything else\nafter this series, so the exact order isn't very important anymore,\nwe aren't stuck with it if we dislike it.\n\nMany things still want the GPRs to be at 0..31, and some things want\nthe FPRs at 32..63.  I don't think we'll ever want to change that,\nso I left it be.\n\nSmall things...  It removes DWARF_FRAME_REGISTERS, it used to save\n1000 or so words of memory, but it has been just a handful for a\nwhile, and now it is one.  Some whitespace fixes.  Testing showed one\nor two places where register allocation was different (not worse, not\nbetter, just different).\n\n\n\t* config/rs6000/rs6000.md (FIRST_ALTIVEC_REGNO, LAST_ALTIVEC_REGNO)\n\t(LR_REGNO, CTR_REGNO, CA_REGNO, ARG_POINTER_REGNUM, CR0_REGNO)\n\t(CR1_REGNO, CR2_REGNO, CR3_REGNO, CR4_REGNO, CR5_REGNO, CR6_REGNO)\n\t(CR7_REGNO, MAX_CR_REGNO, VRSAVE_REGNO, VSCR_REGNO)\n\t(FRAME_POINTER_REGNUM): Change numbering.\n\t* config/rs6000/rs6000.c (rs6000_reg_names): Adjust.\n\t(alt_reg_names): Adjust.\n\t(rs6000_conditional_register_usage): Don't mark hard register 64 as\n\tfixed.\n\t* config/rs6000/rs6000.h (FIRST_PSEUDO_REGISTER): Adjust.\n\t(DWARF_FRAME_REGISTERS): Delete.\n\t(DWARF2_FRAME_REG_OUT): Fix whitespace.\n\t(FIXED_REGISTERS, CALL_USED_REGISTERS, CALL_REALLY_USED_REGISTERS):\n\tAdjust.\n\t(REG_ALLOC_ORDER): Adjust.\n\t(FRAME_POINTER_REGNUM, ARG_POINTER_REGNUM): Adjust.\n\t(REG_CLASS_CONTENTS): Adjust.\n\t(RETURN_ADDR_RTX): Change comment.\n\t(REGNO_OK_FOR_INDEX_P, REGNO_OK_FOR_BASE_P): Use ARG_POINTER_REGNUM\n\tinstead of 67.\n\t(REGISTER_NAMES): Adjust.\n\t(ADDITIONAL_REGISTER_NAMES): Adjust.\n\t* config/rs6000/darwin.h (REGISTER_NAMES): Adjust.\n\nFrom-SVN: r270929", "tree": {"sha": "584085591fd26d46fc079328b3cc056b4a7f2401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/584085591fd26d46fc079328b3cc056b4a7f2401"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3346313740b113e22f2567638f6161414589cc73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3346313740b113e22f2567638f6161414589cc73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3346313740b113e22f2567638f6161414589cc73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3346313740b113e22f2567638f6161414589cc73/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c21ffa3e53606d421c44f13fbd9e96a49b0cf833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21ffa3e53606d421c44f13fbd9e96a49b0cf833", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21ffa3e53606d421c44f13fbd9e96a49b0cf833"}], "stats": {"total": 416, "additions": 228, "deletions": 188}, "files": [{"sha": "41b158cf773557bd954409c5ca7cf01657d6138f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3346313740b113e22f2567638f6161414589cc73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3346313740b113e22f2567638f6161414589cc73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3346313740b113e22f2567638f6161414589cc73", "patch": "@@ -1,3 +1,29 @@\n+2019-05-06  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (FIRST_ALTIVEC_REGNO, LAST_ALTIVEC_REGNO)\n+\t(LR_REGNO, CTR_REGNO, CA_REGNO, ARG_POINTER_REGNUM, CR0_REGNO)\n+\t(CR1_REGNO, CR2_REGNO, CR3_REGNO, CR4_REGNO, CR5_REGNO, CR6_REGNO)\n+\t(CR7_REGNO, MAX_CR_REGNO, VRSAVE_REGNO, VSCR_REGNO)\n+\t(FRAME_POINTER_REGNUM): Change numbering.\n+\t* config/rs6000/rs6000.c (rs6000_reg_names): Adjust.\n+\t(alt_reg_names): Adjust.\n+\t(rs6000_conditional_register_usage): Don't mark hard register 64 as\n+\tfixed.\n+\t* config/rs6000/rs6000.h (FIRST_PSEUDO_REGISTER): Adjust.\n+\t(DWARF_FRAME_REGISTERS): Delete.\n+\t(DWARF2_FRAME_REG_OUT): Fix whitespace.\n+\t(FIXED_REGISTERS, CALL_USED_REGISTERS, CALL_REALLY_USED_REGISTERS):\n+\tAdjust.\n+\t(REG_ALLOC_ORDER): Adjust.\n+\t(FRAME_POINTER_REGNUM, ARG_POINTER_REGNUM): Adjust.\n+\t(REG_CLASS_CONTENTS): Adjust.\n+\t(RETURN_ADDR_RTX): Change comment.\n+\t(REGNO_OK_FOR_INDEX_P, REGNO_OK_FOR_BASE_P): Use ARG_POINTER_REGNUM\n+\tinstead of 67.\n+\t(REGISTER_NAMES): Adjust.\n+\t(ADDITIONAL_REGISTER_NAMES): Adjust.\n+\t* config/rs6000/darwin.h (REGISTER_NAMES): Adjust.\n+\n 2019-05-06  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (TFHAR_REGNO, TFIAR_REGNO, TEXASR_REGNO):"}, {"sha": "4774d1db23f288e968ab3420855156dfb02cea33", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3346313740b113e22f2567638f6161414589cc73/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3346313740b113e22f2567638f6161414589cc73/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=3346313740b113e22f2567638f6161414589cc73", "patch": "@@ -215,23 +215,27 @@ extern int darwin_emit_branch_islands;\n #undef REGISTER_NAMES\n #define REGISTER_NAMES\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n+  /* GPRs */\t\t\t\t\t\t\t\t\\\n      \"r0\",  \"r1\",  \"r2\",  \"r3\",  \"r4\",  \"r5\",  \"r6\",  \"r7\",\t\t\\\n      \"r8\",  \"r9\", \"r10\", \"r11\", \"r12\", \"r13\", \"r14\", \"r15\",\t\t\\\n     \"r16\", \"r17\", \"r18\", \"r19\", \"r20\", \"r21\", \"r22\", \"r23\",\t\t\\\n     \"r24\", \"r25\", \"r26\", \"r27\", \"r28\", \"r29\", \"r30\", \"r31\",\t\t\\\n+  /* FPRs */\t\t\t\t\t\t\t\t\\\n      \"f0\",  \"f1\",  \"f2\",  \"f3\",  \"f4\",  \"f5\",  \"f6\",  \"f7\",\t\t\\\n      \"f8\",  \"f9\", \"f10\", \"f11\", \"f12\", \"f13\", \"f14\", \"f15\",\t\t\\\n     \"f16\", \"f17\", \"f18\", \"f19\", \"f20\", \"f21\", \"f22\", \"f23\",\t\t\\\n     \"f24\", \"f25\", \"f26\", \"f27\", \"f28\", \"f29\", \"f30\", \"f31\",\t\t\\\n-     \"mq\",  \"lr\", \"ctr\",  \"ap\",\t\t\t\t\t\t\\\n+  /* VRs */\t\t\t\t\t\t\t\t\\\n+     \"v0\",  \"v1\",  \"v2\",  \"v3\",  \"v4\",  \"v5\",  \"v6\",  \"v7\",\t\t\\\n+     \"v8\",  \"v9\", \"v10\", \"v11\", \"v12\", \"v13\", \"v14\", \"v15\",\t\t\\\n+    \"v16\", \"v17\", \"v18\", \"v19\", \"v20\", \"v21\", \"v22\", \"v23\",\t\t\\\n+    \"v24\", \"v25\", \"v26\", \"v27\", \"v28\", \"v29\", \"v30\", \"v31\",\t\t\\\n+  /* lr ctr ca ap */\t\t\t\t\t\t\t\\\n+     \"lr\", \"ctr\", \"xer\",  \"ap\",\t\t\t\t\t\t\\\n+  /* cr0..cr7 */\t\t\t\t\t\t\t\\\n     \"cr0\", \"cr1\", \"cr2\", \"cr3\", \"cr4\", \"cr5\", \"cr6\", \"cr7\",\t\t\\\n-    \"xer\",\t\t\t\t\t\t\t\t\\\n-     \"v0\",  \"v1\",  \"v2\",  \"v3\",  \"v4\",  \"v5\",  \"v6\",  \"v7\",             \\\n-     \"v8\",  \"v9\", \"v10\", \"v11\", \"v12\", \"v13\", \"v14\", \"v15\",             \\\n-    \"v16\", \"v17\", \"v18\", \"v19\", \"v20\", \"v21\", \"v22\", \"v23\",             \\\n-    \"v24\", \"v25\", \"v26\", \"v27\", \"v28\", \"v29\", \"v30\", \"v31\",             \\\n-    \"vrsave\", \"vscr\",\t\t\t\t\t\t\t\\\n-    \"sfp\"\t\t\t\t\t\t\t\t\\\n+  /* vrsave vscr sfp */\t\t\t\t\t\t\t\\\n+    \"vrsave\", \"vscr\", \"sfp\"\t\t\t\t\t\t\\\n }\n \n /* This outputs NAME to FILE.  */"}, {"sha": "1114cab51341bab0f8c61096a2e252b0331b7d13", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 30, "deletions": 34, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3346313740b113e22f2567638f6161414589cc73/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3346313740b113e22f2567638f6161414589cc73/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=3346313740b113e22f2567638f6161414589cc73", "patch": "@@ -1464,53 +1464,53 @@ static GTY (()) hash_table<builtin_hasher> *builtin_hash_table;\n /* Default register names.  */\n char rs6000_reg_names[][8] =\n {\n+  /* GPRs */\n       \"0\",  \"1\",  \"2\",  \"3\",  \"4\",  \"5\",  \"6\",  \"7\",\n       \"8\",  \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\n      \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\",\n      \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\",\n+  /* FPRs */\n       \"0\",  \"1\",  \"2\",  \"3\",  \"4\",  \"5\",  \"6\",  \"7\",\n       \"8\",  \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\n      \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\",\n      \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\",\n-     \"mq\", \"lr\", \"ctr\",\"ap\",\n+  /* VRs */\n       \"0\",  \"1\",  \"2\",  \"3\",  \"4\",  \"5\",  \"6\",  \"7\",\n-      \"ca\",\n-      /* AltiVec registers.  */\n-      \"0\",  \"1\",  \"2\",  \"3\",  \"4\",  \"5\",  \"6\", \"7\",\n-      \"8\",  \"9\",  \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\n-      \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\",\n-      \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\",\n-      \"vrsave\", \"vscr\",\n-      /* Soft frame pointer.  */\n-      \"sfp\",\n-      /* HTM SPR registers.  */\n-      \"tfhar\", \"tfiar\", \"texasr\"\n+      \"8\",  \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\n+     \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\",\n+     \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\",\n+  /* lr ctr ca ap */\n+     \"lr\", \"ctr\", \"ca\", \"ap\",\n+  /* cr0..cr7 */\n+      \"0\",  \"1\",  \"2\",  \"3\",  \"4\",  \"5\",  \"6\",  \"7\",\n+  /* vrsave vscr sfp */\n+      \"vrsave\", \"vscr\", \"sfp\",\n };\n \n #ifdef TARGET_REGNAMES\n static const char alt_reg_names[][8] =\n {\n-   \"%r0\",   \"%r1\",  \"%r2\",  \"%r3\",  \"%r4\",  \"%r5\",  \"%r6\",  \"%r7\",\n-   \"%r8\",   \"%r9\", \"%r10\", \"%r11\", \"%r12\", \"%r13\", \"%r14\", \"%r15\",\n-  \"%r16\",  \"%r17\", \"%r18\", \"%r19\", \"%r20\", \"%r21\", \"%r22\", \"%r23\",\n-  \"%r24\",  \"%r25\", \"%r26\", \"%r27\", \"%r28\", \"%r29\", \"%r30\", \"%r31\",\n-   \"%f0\",   \"%f1\",  \"%f2\",  \"%f3\",  \"%f4\",  \"%f5\",  \"%f6\",  \"%f7\",\n-   \"%f8\",   \"%f9\", \"%f10\", \"%f11\", \"%f12\", \"%f13\", \"%f14\", \"%f15\",\n-  \"%f16\",  \"%f17\", \"%f18\", \"%f19\", \"%f20\", \"%f21\", \"%f22\", \"%f23\",\n-  \"%f24\",  \"%f25\", \"%f26\", \"%f27\", \"%f28\", \"%f29\", \"%f30\", \"%f31\",\n-    \"mq\",    \"lr\",  \"ctr\",   \"ap\",\n-  \"%cr0\",  \"%cr1\", \"%cr2\", \"%cr3\", \"%cr4\", \"%cr5\", \"%cr6\", \"%cr7\",\n-   \"ca\",\n-  /* AltiVec registers.  */\n-   \"%v0\",  \"%v1\",  \"%v2\",  \"%v3\",  \"%v4\",  \"%v5\",  \"%v6\", \"%v7\",\n+  /* GPRs */\n+   \"%r0\",  \"%r1\",  \"%r2\",  \"%r3\",  \"%r4\",  \"%r5\",  \"%r6\",  \"%r7\",\n+   \"%r8\",  \"%r9\", \"%r10\", \"%r11\", \"%r12\", \"%r13\", \"%r14\", \"%r15\",\n+  \"%r16\", \"%r17\", \"%r18\", \"%r19\", \"%r20\", \"%r21\", \"%r22\", \"%r23\",\n+  \"%r24\", \"%r25\", \"%r26\", \"%r27\", \"%r28\", \"%r29\", \"%r30\", \"%r31\",\n+  /* FPRs */\n+   \"%f0\",  \"%f1\",  \"%f2\",  \"%f3\",  \"%f4\",  \"%f5\",  \"%f6\",  \"%f7\",\n+   \"%f8\",  \"%f9\", \"%f10\", \"%f11\", \"%f12\", \"%f13\", \"%f14\", \"%f15\",\n+  \"%f16\", \"%f17\", \"%f18\", \"%f19\", \"%f20\", \"%f21\", \"%f22\", \"%f23\",\n+  \"%f24\", \"%f25\", \"%f26\", \"%f27\", \"%f28\", \"%f29\", \"%f30\", \"%f31\",\n+  /* VRs */\n+   \"%v0\",  \"%v1\",  \"%v2\",  \"%v3\",  \"%v4\",  \"%v5\",  \"%v6\",  \"%v7\",\n    \"%v8\",  \"%v9\", \"%v10\", \"%v11\", \"%v12\", \"%v13\", \"%v14\", \"%v15\",\n   \"%v16\", \"%v17\", \"%v18\", \"%v19\", \"%v20\", \"%v21\", \"%v22\", \"%v23\",\n   \"%v24\", \"%v25\", \"%v26\", \"%v27\", \"%v28\", \"%v29\", \"%v30\", \"%v31\",\n-  \"vrsave\", \"vscr\",\n-  /* Soft frame pointer.  */\n-  \"sfp\",\n-  /* HTM SPR registers.  */\n-  \"tfhar\", \"tfiar\", \"texasr\"\n+  /* lr ctr ca ap */\n+    \"lr\",  \"ctr\",   \"ca\",   \"ap\",\n+  /* cr0..cr7 */\n+  \"%cr0\",  \"%cr1\", \"%cr2\", \"%cr3\", \"%cr4\", \"%cr5\", \"%cr6\", \"%cr7\",\n+  /* vrsave vscr sfp */\n+  \"vrsave\", \"vscr\", \"sfp\",\n };\n #endif\n \n@@ -9495,10 +9495,6 @@ rs6000_conditional_register_usage (void)\n   if (TARGET_DEBUG_TARGET)\n     fprintf (stderr, \"rs6000_conditional_register_usage called\\n\");\n \n-  /* Set MQ register fixed (already call_used) so that it will not be\n-     allocated.  */\n-  fixed_regs[64] = 1;\n-\n   /* 64-bit AIX and Linux reserve GPR13 for thread-private data.  */\n   if (TARGET_64BIT)\n     fixed_regs[13] = call_used_regs[13]"}, {"sha": "15d00e620c7fa2ef7eb0e969e387e5ca1e26d9cb", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 142, "deletions": 128, "changes": 270, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3346313740b113e22f2567638f6161414589cc73/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3346313740b113e22f2567638f6161414589cc73/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=3346313740b113e22f2567638f6161414589cc73", "patch": "@@ -811,14 +811,9 @@ enum data_align { align_abi, align_opt, align_both };\n    in inline functions.\n \n    Another pseudo (not included in DWARF_FRAME_REGISTERS) is soft frame\n-   pointer, which is eventually eliminated in favor of SP or FP.\n+   pointer, which is eventually eliminated in favor of SP or FP.  */\n \n-   The 3 HTM registers aren't also included in DWARF_FRAME_REGISTERS.  */\n-\n-#define FIRST_PSEUDO_REGISTER 112\n-\n-/* The sfp register isn't included in DWARF_FRAME_REGISTERS.  */\n-#define DWARF_FRAME_REGISTERS (FIRST_PSEUDO_REGISTER - 1)\n+#define FIRST_PSEUDO_REGISTER 111\n \n /* Use standard DWARF numbering for DWARF debugging information.  */\n #define DBX_REGISTER_NUMBER(REGNO) rs6000_dbx_register_number ((REGNO), 0)\n@@ -830,7 +825,7 @@ enum data_align { align_abi, align_opt, align_both };\n    collected using DWARF_FRAME_REGNUM to those that should be output in\n    .debug_frame and .eh_frame.  */\n #define DWARF2_FRAME_REG_OUT(REGNO, FOR_EH) \\\n-  rs6000_dbx_register_number ((REGNO), (FOR_EH)? 2 : 1)\n+  rs6000_dbx_register_number ((REGNO), (FOR_EH) ? 2 : 1)\n \n /* 1 for registers that have pervasive standard uses\n    and are not available for the register allocator.\n@@ -841,16 +836,21 @@ enum data_align { align_abi, align_opt, align_both };\n    On System V implementations, r13 is fixed and not available for use.  */\n \n #define FIXED_REGISTERS  \\\n-  {0, 1, FIXED_R2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, FIXED_R13, 0, 0, \\\n+  {/* GPRs */\t\t\t\t\t   \\\n+   0, 1, FIXED_R2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, FIXED_R13, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+   /* FPRs */\t\t\t\t\t   \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1,\t   \\\n-   /* AltiVec registers.  */\t\t\t   \\\n+   /* VRs */\t\t\t\t\t   \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   1, 1\t\t\t\t\t\t   \\\n-   , 1\t\t\t\t\t\t   \\\n+   /* lr ctr ca ap */\t\t\t\t   \\\n+   0, 0, 1, 1,\t\t\t\t\t   \\\n+   /* cr0..cr7 */\t\t\t\t   \\\n+   0, 0, 0, 0, 0, 0, 0, 0,\t\t\t   \\\n+   /* vrsave vscr sfp */\t\t\t   \\\n+   1, 1, 1\t\t\t\t\t   \\\n }\n \n /* 1 for registers not available across function calls.\n@@ -861,16 +861,21 @@ enum data_align { align_abi, align_opt, align_both };\n    Aside from that, you can include as many other registers as you like.  */\n \n #define CALL_USED_REGISTERS  \\\n-  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, FIXED_R13, 0, 0, \\\n+  {/* GPRs */\t\t\t\t\t   \\\n+   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, FIXED_R13, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+   /* FPRs */\t\t\t\t\t   \\\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\t   \\\n-   /* AltiVec registers.  */\t\t\t   \\\n+   /* VRs */\t\t\t\t\t   \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   1, 1\t\t\t\t\t\t   \\\n-   , 1\t\t\t\t\t\t   \\\n+   /* lr ctr ca ap */\t\t\t\t   \\\n+   1, 1, 1, 1,\t\t\t\t\t   \\\n+   /* cr0..cr7 */\t\t\t\t   \\\n+   1, 1, 0, 0, 0, 1, 1, 1,\t\t\t   \\\n+   /* vrsave vscr sfp */\t\t\t   \\\n+   1, 1, 1\t\t\t\t\t   \\\n }\n \n /* Like `CALL_USED_REGISTERS' except this macro doesn't require that\n@@ -880,16 +885,21 @@ enum data_align { align_abi, align_opt, align_both };\n    of `CALL_USED_REGISTERS'.  */\n \n #define CALL_REALLY_USED_REGISTERS  \\\n-  {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, FIXED_R13, 0, 0, \\\n+  {/* GPRs */\t\t\t\t\t   \\\n+   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, FIXED_R13, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+   /* FPRs */\t\t\t\t\t   \\\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\t   \\\n-   /* AltiVec registers.  */\t\t\t   \\\n+   /* VRs */\t\t\t\t\t   \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   0, 0\t\t\t\t\t\t   \\\n-   , 0\t\t\t\t\t\t   \\\n+   /* lr ctr ca ap */\t\t\t\t   \\\n+   1, 1, 1, 1,\t\t\t\t\t   \\\n+   /* cr0..cr7 */\t\t\t\t   \\\n+   1, 1, 0, 0, 0, 1, 1, 1,\t\t\t   \\\n+   /* vrsave vscr sfp */\t\t\t   \\\n+   0, 0, 0\t\t\t\t\t   \\\n }\n \n #define TOTAL_ALTIVEC_REGS\t(LAST_ALTIVEC_REGNO - FIRST_ALTIVEC_REGNO + 1)\n@@ -954,22 +964,22 @@ enum data_align { align_abi, align_opt, align_both };\n    33,\t\t\t\t\t\t\t\t\\\n    63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51,\t\t\\\n    50, 49, 48, 47, 46,\t\t\t\t\t\t\\\n-   68, 75, 73, 74, 69, 72, 71, 70,\t\t\t\t\\\n+   100, 107, 105, 106, 101, 104, 103, 102,\t\t\t\\\n    MAYBE_R2_AVAILABLE\t\t\t\t\t\t\\\n    9, 10, 8, 7, 6, 5, 4,\t\t\t\t\t\\\n    3, EARLY_R12 11, 0,\t\t\t\t\t\t\\\n    31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19,\t\t\\\n    18, 17, 16, 15, 14, 13, LATE_R12\t\t\t\t\\\n-   66, 65,\t\t\t\t\t\t\t\\\n-   1, MAYBE_R2_FIXED 67, 76,\t\t\t\t\t\\\n+   97, 96,\t\t\t\t\t\t\t\\\n+   1, MAYBE_R2_FIXED 99, 98,\t\t\t\t\t\\\n    /* AltiVec registers.  */\t\t\t\t\t\\\n-   77, 78,\t\t\t\t\t\t\t\\\n-   90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80,\t\t\t\\\n-   79,\t\t\t\t\t\t\t\t\\\n-   96, 95, 94, 93, 92, 91,\t\t\t\t\t\\\n-   108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97,\t\\\n-   109, 110,\t\t\t\t\t\t\t\\\n-   111\t\t\t\t\t\t\t\t\\\n+   64, 65,\t\t\t\t\t\t\t\\\n+   77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67,\t\t\t\\\n+   66,\t\t\t\t\t\t\t\t\\\n+   83, 82, 81, 80, 79, 78,\t\t\t\t\t\\\n+   95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84,\t\t\\\n+   108, 109,\t\t\t\t\t\t\t\\\n+   110\t\t\t\t\t\t\t\t\\\n }\n \n /* True if register is floating-point.  */\n@@ -1077,10 +1087,10 @@ enum data_align { align_abi, align_opt, align_both };\n #define HARD_FRAME_POINTER_REGNUM 31\n \n /* Base register for access to local variables of the function.  */\n-#define FRAME_POINTER_REGNUM 111\n+#define FRAME_POINTER_REGNUM 110\n \n /* Base register for access to arguments of the function.  */\n-#define ARG_POINTER_REGNUM 67\n+#define ARG_POINTER_REGNUM 99\n \n /* Place to put static chain when calling a function that requires it.  */\n #define STATIC_CHAIN_REGNUM 11\n@@ -1180,41 +1190,41 @@ enum reg_class\n   /* NO_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t\t\t\\\n   /* BASE_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0xfffffffe, 0x00000000, 0x00000008, 0x00008000 },\t\t\t\\\n+  { 0xfffffffe, 0x00000000, 0x00000000, 0x00004008 },\t\t\t\\\n   /* GENERAL_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0xffffffff, 0x00000000, 0x00000008, 0x00008000 },\t\t\t\\\n+  { 0xffffffff, 0x00000000, 0x00000000, 0x00004008 },\t\t\t\\\n   /* FLOAT_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0xffffffff, 0x00000000, 0x00000000 },\t\t\t\\\n   /* ALTIVEC_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0xffffe000, 0x00001fff },\t\t\t\\\n+  { 0x00000000, 0x00000000, 0xffffffff, 0x00000000 },\t\t\t\\\n   /* VSX_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0xffffffff, 0xffffe000, 0x00001fff },\t\t\t\\\n+  { 0x00000000, 0xffffffff, 0xffffffff, 0x00000000 },\t\t\t\\\n   /* VRSAVE_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0x00002000 },\t\t\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00001000 },\t\t\t\\\n   /* VSCR_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0x00004000 },\t\t\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00002000 },\t\t\t\\\n   /* GEN_OR_FLOAT_REGS.  */\t\t\t\t\t\t\\\n-  { 0xffffffff, 0xffffffff, 0x00000008, 0x00008000 },\t\t\t\\\n+  { 0xffffffff, 0xffffffff, 0x00000000, 0x00004008 },\t\t\t\\\n   /* LINK_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000002, 0x00000000 },\t\t\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00000001 },\t\t\t\\\n   /* CTR_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000004, 0x00000000 },\t\t\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00000002 },\t\t\t\\\n   /* LINK_OR_CTR_REGS.  */\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000006, 0x00000000 },\t\t\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00000003 },\t\t\t\\\n   /* SPECIAL_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000006, 0x00002000 },\t\t\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00001003 },\t\t\t\\\n   /* SPEC_OR_GEN_REGS.  */\t\t\t\t\t\t\\\n-  { 0xffffffff, 0x00000000, 0x0000000e, 0x0000a000 },\t\t\t\\\n+  { 0xffffffff, 0x00000000, 0x00000000, 0x0000500b },\t\t\t\\\n   /* CR0_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000010, 0x00000000 },\t\t\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00000010 },\t\t\t\\\n   /* CR_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000ff0, 0x00000000 },\t\t\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00000ff0 },\t\t\t\\\n   /* NON_FLOAT_REGS.  */\t\t\t\t\t\t\\\n-  { 0xffffffff, 0x00000000, 0x00000ffe, 0x00008000 },\t\t\t\\\n+  { 0xffffffff, 0x00000000, 0x00000000, 0x00004ffb },\t\t\t\\\n   /* CA_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00001000, 0x00000000 },\t\t\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00000004 },\t\t\t\\\n   /* ALL_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0xffffffff, 0xffffffff, 0xfffffffe, 0x0000ffff }\t\t\t\\\n+  { 0xffffffff, 0xffffffff, 0xffffffff, 0x00007fff }\t\t\t\\\n }\n \n /* The same information, inverted:\n@@ -1625,7 +1635,7 @@ typedef struct rs6000_args\n #define RETURN_ADDRESS_OFFSET \\\n   ((DEFAULT_ABI == ABI_V4 ? 4 : 8) << (TARGET_64BIT ? 1 : 0))\n \n-/* The current return address is in link register (65).  The return address\n+/* The current return address is in the link register.  The return address\n    of anything farther back is accessed normally at an offset of 8 from the\n    frame pointer.  */\n #define RETURN_ADDR_RTX(COUNT, FRAME)                 \\\n@@ -1679,18 +1689,22 @@ typedef struct rs6000_args\n \n #define REGNO_OK_FOR_INDEX_P(REGNO)\t\t\t\t\\\n (HARD_REGISTER_NUM_P (REGNO)\t\t\t\t\t\\\n- ? (REGNO) <= 31 || (REGNO) == 67\t\t\t\t\\\n+ ? (REGNO) <= 31\t\t\t\t\t\t\\\n+   || (REGNO) == ARG_POINTER_REGNUM\t\t\t\t\\\n    || (REGNO) == FRAME_POINTER_REGNUM\t\t\t\t\\\n  : (reg_renumber[REGNO] >= 0\t\t\t\t\t\\\n-    && (reg_renumber[REGNO] <= 31 || reg_renumber[REGNO] == 67\t\\\n+    && (reg_renumber[REGNO] <= 31\t\t\t\t\\\n+\t|| reg_renumber[REGNO] == ARG_POINTER_REGNUM\t\t\\\n \t|| reg_renumber[REGNO] == FRAME_POINTER_REGNUM)))\n \n #define REGNO_OK_FOR_BASE_P(REGNO)\t\t\t\t\\\n (HARD_REGISTER_NUM_P (REGNO)\t\t\t\t\t\\\n- ? ((REGNO) > 0 && (REGNO) <= 31) || (REGNO) == 67\t\t\\\n+ ? ((REGNO) > 0 && (REGNO) <= 31)\t\t\t\t\\\n+   || (REGNO) == ARG_POINTER_REGNUM\t\t\t\t\\\n    || (REGNO) == FRAME_POINTER_REGNUM\t\t\t\t\\\n  : (reg_renumber[REGNO] > 0\t\t\t\t\t\\\n-    && (reg_renumber[REGNO] <= 31 || reg_renumber[REGNO] == 67\t\\\n+    && (reg_renumber[REGNO] <= 31\t\t\t\t\\\n+\t|| reg_renumber[REGNO] == ARG_POINTER_REGNUM\t\t\\\n \t|| reg_renumber[REGNO] == FRAME_POINTER_REGNUM)))\n \n /* Nonzero if X is a hard reg that can be used as an index\n@@ -2022,7 +2036,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n {\t\t\t\t\t\t\t\t\t\\\n   &rs6000_reg_names[ 0][0],\t/* r0   */\t\t\t\t\\\n   &rs6000_reg_names[ 1][0],\t/* r1\t*/\t\t\t\t\\\n-  &rs6000_reg_names[ 2][0],     /* r2\t*/\t\t\t\t\\\n+  &rs6000_reg_names[ 2][0],\t/* r2\t*/\t\t\t\t\\\n   &rs6000_reg_names[ 3][0],\t/* r3\t*/\t\t\t\t\\\n   &rs6000_reg_names[ 4][0],\t/* r4\t*/\t\t\t\t\\\n   &rs6000_reg_names[ 5][0],\t/* r5\t*/\t\t\t\t\\\n@@ -2053,7 +2067,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   &rs6000_reg_names[30][0],\t/* r30  */\t\t\t\t\\\n   &rs6000_reg_names[31][0],\t/* r31  */\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  &rs6000_reg_names[32][0],     /* fr0  */\t\t\t\t\\\n+  &rs6000_reg_names[32][0],\t/* fr0  */\t\t\t\t\\\n   &rs6000_reg_names[33][0],\t/* fr1  */\t\t\t\t\\\n   &rs6000_reg_names[34][0],\t/* fr2  */\t\t\t\t\\\n   &rs6000_reg_names[35][0],\t/* fr3  */\t\t\t\t\\\n@@ -2086,57 +2100,57 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   &rs6000_reg_names[62][0],\t/* fr30 */\t\t\t\t\\\n   &rs6000_reg_names[63][0],\t/* fr31 */\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  &rs6000_reg_names[64][0],     /* was mq  */\t\t\t\t\\\n-  &rs6000_reg_names[65][0],\t/* lr   */\t\t\t\t\\\n-  &rs6000_reg_names[66][0],\t/* ctr  */\t\t\t\t\\\n-  &rs6000_reg_names[67][0],\t/* ap   */\t\t\t\t\\\n+  &rs6000_reg_names[64][0],\t/* vr0  */\t\t\t\t\\\n+  &rs6000_reg_names[65][0],\t/* vr1  */\t\t\t\t\\\n+  &rs6000_reg_names[66][0],\t/* vr2  */\t\t\t\t\\\n+  &rs6000_reg_names[67][0],\t/* vr3  */\t\t\t\t\\\n+  &rs6000_reg_names[68][0],\t/* vr4  */\t\t\t\t\\\n+  &rs6000_reg_names[69][0],\t/* vr5  */\t\t\t\t\\\n+  &rs6000_reg_names[70][0],\t/* vr6  */\t\t\t\t\\\n+  &rs6000_reg_names[71][0],\t/* vr7  */\t\t\t\t\\\n+  &rs6000_reg_names[72][0],\t/* vr8  */\t\t\t\t\\\n+  &rs6000_reg_names[73][0],\t/* vr9  */\t\t\t\t\\\n+  &rs6000_reg_names[74][0],\t/* vr10 */\t\t\t\t\\\n+  &rs6000_reg_names[75][0],\t/* vr11 */\t\t\t\t\\\n+  &rs6000_reg_names[76][0],\t/* vr12 */\t\t\t\t\\\n+  &rs6000_reg_names[77][0],\t/* vr13 */\t\t\t\t\\\n+  &rs6000_reg_names[78][0],\t/* vr14 */\t\t\t\t\\\n+  &rs6000_reg_names[79][0],\t/* vr15 */\t\t\t\t\\\n+  &rs6000_reg_names[80][0],\t/* vr16 */\t\t\t\t\\\n+  &rs6000_reg_names[81][0],\t/* vr17 */\t\t\t\t\\\n+  &rs6000_reg_names[82][0],\t/* vr18 */\t\t\t\t\\\n+  &rs6000_reg_names[83][0],\t/* vr19 */\t\t\t\t\\\n+  &rs6000_reg_names[84][0],\t/* vr20 */\t\t\t\t\\\n+  &rs6000_reg_names[85][0],\t/* vr21 */\t\t\t\t\\\n+  &rs6000_reg_names[86][0],\t/* vr22 */\t\t\t\t\\\n+  &rs6000_reg_names[87][0],\t/* vr23 */\t\t\t\t\\\n+  &rs6000_reg_names[88][0],\t/* vr24 */\t\t\t\t\\\n+  &rs6000_reg_names[89][0],\t/* vr25 */\t\t\t\t\\\n+  &rs6000_reg_names[90][0],\t/* vr26 */\t\t\t\t\\\n+  &rs6000_reg_names[91][0],\t/* vr27 */\t\t\t\t\\\n+  &rs6000_reg_names[92][0],\t/* vr28 */\t\t\t\t\\\n+  &rs6000_reg_names[93][0],\t/* vr29 */\t\t\t\t\\\n+  &rs6000_reg_names[94][0],\t/* vr30 */\t\t\t\t\\\n+  &rs6000_reg_names[95][0],\t/* vr31 */\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  &rs6000_reg_names[96][0],\t/* lr   */\t\t\t\t\\\n+  &rs6000_reg_names[97][0],\t/* ctr  */\t\t\t\t\\\n+  &rs6000_reg_names[98][0],\t/* ca  */\t\t\t\t\\\n+  &rs6000_reg_names[99][0],\t/* ap   */\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  &rs6000_reg_names[68][0],\t/* cr0  */\t\t\t\t\\\n-  &rs6000_reg_names[69][0],\t/* cr1  */\t\t\t\t\\\n-  &rs6000_reg_names[70][0],\t/* cr2  */\t\t\t\t\\\n-  &rs6000_reg_names[71][0],\t/* cr3  */\t\t\t\t\\\n-  &rs6000_reg_names[72][0],\t/* cr4  */\t\t\t\t\\\n-  &rs6000_reg_names[73][0],\t/* cr5  */\t\t\t\t\\\n-  &rs6000_reg_names[74][0],\t/* cr6  */\t\t\t\t\\\n-  &rs6000_reg_names[75][0],\t/* cr7  */\t\t\t\t\\\n+  &rs6000_reg_names[100][0],\t/* cr0  */\t\t\t\t\\\n+  &rs6000_reg_names[101][0],\t/* cr1  */\t\t\t\t\\\n+  &rs6000_reg_names[102][0],\t/* cr2  */\t\t\t\t\\\n+  &rs6000_reg_names[103][0],\t/* cr3  */\t\t\t\t\\\n+  &rs6000_reg_names[104][0],\t/* cr4  */\t\t\t\t\\\n+  &rs6000_reg_names[105][0],\t/* cr5  */\t\t\t\t\\\n+  &rs6000_reg_names[106][0],\t/* cr6  */\t\t\t\t\\\n+  &rs6000_reg_names[107][0],\t/* cr7  */\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  &rs6000_reg_names[76][0],\t/* ca  */\t\t\t\t\\\n+  &rs6000_reg_names[108][0],\t/* vrsave  */\t\t\t\t\\\n+  &rs6000_reg_names[109][0],\t/* vscr  */\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  &rs6000_reg_names[77][0],\t/* v0  */\t\t\t\t\\\n-  &rs6000_reg_names[78][0],\t/* v1  */\t\t\t\t\\\n-  &rs6000_reg_names[79][0],\t/* v2  */\t\t\t\t\\\n-  &rs6000_reg_names[80][0],\t/* v3  */\t\t\t\t\\\n-  &rs6000_reg_names[81][0],\t/* v4  */\t\t\t\t\\\n-  &rs6000_reg_names[82][0],\t/* v5  */\t\t\t\t\\\n-  &rs6000_reg_names[83][0],\t/* v6  */\t\t\t\t\\\n-  &rs6000_reg_names[84][0],\t/* v7  */\t\t\t\t\\\n-  &rs6000_reg_names[85][0],\t/* v8  */\t\t\t\t\\\n-  &rs6000_reg_names[86][0],\t/* v9  */\t\t\t\t\\\n-  &rs6000_reg_names[87][0],\t/* v10  */\t\t\t\t\\\n-  &rs6000_reg_names[88][0],\t/* v11  */\t\t\t\t\\\n-  &rs6000_reg_names[89][0],\t/* v12  */\t\t\t\t\\\n-  &rs6000_reg_names[90][0],\t/* v13  */\t\t\t\t\\\n-  &rs6000_reg_names[91][0],\t/* v14  */\t\t\t\t\\\n-  &rs6000_reg_names[92][0],\t/* v15  */\t\t\t\t\\\n-  &rs6000_reg_names[93][0],\t/* v16  */\t\t\t\t\\\n-  &rs6000_reg_names[94][0],\t/* v17  */\t\t\t\t\\\n-  &rs6000_reg_names[95][0],\t/* v18  */\t\t\t\t\\\n-  &rs6000_reg_names[96][0],\t/* v19  */\t\t\t\t\\\n-  &rs6000_reg_names[97][0],\t/* v20  */\t\t\t\t\\\n-  &rs6000_reg_names[98][0],\t/* v21  */\t\t\t\t\\\n-  &rs6000_reg_names[99][0],\t/* v22  */\t\t\t\t\\\n-  &rs6000_reg_names[100][0],\t/* v23  */\t\t\t\t\\\n-  &rs6000_reg_names[101][0],\t/* v24  */\t\t\t\t\\\n-  &rs6000_reg_names[102][0],\t/* v25  */\t\t\t\t\\\n-  &rs6000_reg_names[103][0],\t/* v26  */\t\t\t\t\\\n-  &rs6000_reg_names[104][0],\t/* v27  */\t\t\t\t\\\n-  &rs6000_reg_names[105][0],\t/* v28  */\t\t\t\t\\\n-  &rs6000_reg_names[106][0],\t/* v29  */\t\t\t\t\\\n-  &rs6000_reg_names[107][0],\t/* v30  */\t\t\t\t\\\n-  &rs6000_reg_names[108][0],\t/* v31  */\t\t\t\t\\\n-  &rs6000_reg_names[109][0],\t/* vrsave  */\t\t\t\t\\\n-  &rs6000_reg_names[110][0],\t/* vscr  */\t\t\t\t\\\n-  &rs6000_reg_names[111][0]\t/* sfp  */\t\t\t\t\\\n+  &rs6000_reg_names[110][0]\t/* sfp  */\t\t\t\t\\\n }\n \n /* Table of additional register names to use in user input.  */\n@@ -2158,21 +2172,21 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   {\"fr20\", 52}, {\"fr21\", 53}, {\"fr22\", 54}, {\"fr23\", 55},\t\\\n   {\"fr24\", 56}, {\"fr25\", 57}, {\"fr26\", 58}, {\"fr27\", 59},\t\\\n   {\"fr28\", 60}, {\"fr29\", 61}, {\"fr30\", 62}, {\"fr31\", 63},\t\\\n-  {\"v0\",   77}, {\"v1\",   78}, {\"v2\",   79}, {\"v3\",   80},       \\\n-  {\"v4\",   81}, {\"v5\",   82}, {\"v6\",   83}, {\"v7\",   84},       \\\n-  {\"v8\",   85}, {\"v9\",   86}, {\"v10\",  87}, {\"v11\",  88},       \\\n-  {\"v12\",  89}, {\"v13\",  90}, {\"v14\",  91}, {\"v15\",  92},       \\\n-  {\"v16\",  93}, {\"v17\",  94}, {\"v18\",  95}, {\"v19\",  96},       \\\n-  {\"v20\",  97}, {\"v21\",  98}, {\"v22\",  99}, {\"v23\",  100},\t\\\n-  {\"v24\",  101},{\"v25\",  102},{\"v26\",  103},{\"v27\",  104},      \\\n-  {\"v28\",  105},{\"v29\",  106},{\"v30\",  107},{\"v31\",  108},      \\\n-  {\"vrsave\", 109}, {\"vscr\", 110},\t\t\t\t\\\n+  {\"v0\",   64}, {\"v1\",   65}, {\"v2\",   66}, {\"v3\",   67},\t\\\n+  {\"v4\",   68}, {\"v5\",   69}, {\"v6\",   70}, {\"v7\",   71},\t\\\n+  {\"v8\",   72}, {\"v9\",   73}, {\"v10\",  74}, {\"v11\",  75},\t\\\n+  {\"v12\",  76}, {\"v13\",  77}, {\"v14\",  78}, {\"v15\",  79},\t\\\n+  {\"v16\",  80}, {\"v17\",  81}, {\"v18\",  82}, {\"v19\",  83},\t\\\n+  {\"v20\",  84}, {\"v21\",  85}, {\"v22\",  86}, {\"v23\",  87},\t\\\n+  {\"v24\",  88}, {\"v25\",  89}, {\"v26\",  90}, {\"v27\",  91},\t\\\n+  {\"v28\",  92}, {\"v29\",  93}, {\"v30\",  94}, {\"v31\",  95},\t\\\n+  {\"vrsave\", 108}, {\"vscr\", 109},\t\t\t\t\\\n   /* no additional names for: lr, ctr, ap */\t\t\t\\\n-  {\"cr0\",  68}, {\"cr1\",  69}, {\"cr2\",  70}, {\"cr3\",  71},\t\\\n-  {\"cr4\",  72}, {\"cr5\",  73}, {\"cr6\",  74}, {\"cr7\",  75},\t\\\n-  {\"cc\",   68}, {\"sp\",    1}, {\"toc\",   2},\t\t\t\\\n+  {\"cr0\",  100},{\"cr1\",  101},{\"cr2\",  102},{\"cr3\",  103},\t\\\n+  {\"cr4\",  104},{\"cr5\",  105},{\"cr6\",  106},{\"cr7\",  107},\t\\\n+  {\"cc\",   100},{\"sp\",    1}, {\"toc\",   2},\t\t\t\\\n   /* CA is only part of XER, but we do not model the other parts (yet).  */ \\\n-  {\"xer\",  76},\t\t\t\t\t\t\t\\\n+  {\"xer\",  98},\t\t\t\t\t\t\t\\\n   /* VSX registers overlaid on top of FR, Altivec registers */\t\\\n   {\"vs0\",  32}, {\"vs1\",  33}, {\"vs2\",  34}, {\"vs3\",  35},\t\\\n   {\"vs4\",  36}, {\"vs5\",  37}, {\"vs6\",  38}, {\"vs7\",  39},\t\\\n@@ -2182,14 +2196,14 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   {\"vs20\", 52}, {\"vs21\", 53}, {\"vs22\", 54}, {\"vs23\", 55},\t\\\n   {\"vs24\", 56}, {\"vs25\", 57}, {\"vs26\", 58}, {\"vs27\", 59},\t\\\n   {\"vs28\", 60}, {\"vs29\", 61}, {\"vs30\", 62}, {\"vs31\", 63},\t\\\n-  {\"vs32\", 77}, {\"vs33\", 78}, {\"vs34\", 79}, {\"vs35\", 80},       \\\n-  {\"vs36\", 81}, {\"vs37\", 82}, {\"vs38\", 83}, {\"vs39\", 84},       \\\n-  {\"vs40\", 85}, {\"vs41\", 86}, {\"vs42\", 87}, {\"vs43\", 88},       \\\n-  {\"vs44\", 89}, {\"vs45\", 90}, {\"vs46\", 91}, {\"vs47\", 92},       \\\n-  {\"vs48\", 93}, {\"vs49\", 94}, {\"vs50\", 95}, {\"vs51\", 96},       \\\n-  {\"vs52\", 97}, {\"vs53\", 98}, {\"vs54\", 99}, {\"vs55\", 100},\t\\\n-  {\"vs56\", 101},{\"vs57\", 102},{\"vs58\", 103},{\"vs59\", 104},      \\\n-  {\"vs60\", 105},{\"vs61\", 106},{\"vs62\", 107},{\"vs63\", 108},\t\\\n+  {\"vs32\", 64}, {\"vs33\", 65}, {\"vs34\", 66}, {\"vs35\", 67},\t\\\n+  {\"vs36\", 68}, {\"vs37\", 69}, {\"vs38\", 70}, {\"vs39\", 71},\t\\\n+  {\"vs40\", 72}, {\"vs41\", 73}, {\"vs42\", 74}, {\"vs43\", 75},\t\\\n+  {\"vs44\", 76}, {\"vs45\", 77}, {\"vs46\", 78}, {\"vs47\", 79},\t\\\n+  {\"vs48\", 80}, {\"vs49\", 81}, {\"vs50\", 82}, {\"vs51\", 83},\t\\\n+  {\"vs52\", 84}, {\"vs53\", 85}, {\"vs54\", 86}, {\"vs55\", 87},\t\\\n+  {\"vs56\", 88}, {\"vs57\", 89}, {\"vs58\", 90}, {\"vs59\", 91},\t\\\n+  {\"vs60\", 92}, {\"vs61\", 93}, {\"vs62\", 94}, {\"vs63\", 95},\t\\\n }\n \n /* This is how to output an element of a case-vector that is relative.  */"}, {"sha": "411d7f0d352767af40283baf0aba4ecd721774b0", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3346313740b113e22f2567638f6161414589cc73/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3346313740b113e22f2567638f6161414589cc73/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=3346313740b113e22f2567638f6161414589cc73", "patch": "@@ -33,24 +33,24 @@\n    (LAST_GPR_REGNO\t\t31)\n    (FIRST_FPR_REGNO\t\t32)\n    (LAST_FPR_REGNO\t\t63)\n-   (LR_REGNO\t\t\t65)\n-   (CTR_REGNO\t\t\t66)\n-   (ARG_POINTER_REGNUM\t\t67)\n-   (CR0_REGNO\t\t\t68)\n-   (CR1_REGNO\t\t\t69)\n-   (CR2_REGNO\t\t\t70)\n-   (CR3_REGNO\t\t\t71)\n-   (CR4_REGNO\t\t\t72)\n-   (CR5_REGNO\t\t\t73)\n-   (CR6_REGNO\t\t\t74)\n-   (CR7_REGNO\t\t\t75)\n-   (MAX_CR_REGNO\t\t75)\n-   (CA_REGNO\t\t\t76)\n-   (FIRST_ALTIVEC_REGNO\t\t77)\n-   (LAST_ALTIVEC_REGNO\t\t108)\n-   (VRSAVE_REGNO\t\t109)\n-   (VSCR_REGNO\t\t\t110)\n-   (FRAME_POINTER_REGNUM\t111)\n+   (FIRST_ALTIVEC_REGNO\t\t64)\n+   (LAST_ALTIVEC_REGNO\t\t95)\n+   (LR_REGNO\t\t\t96)\n+   (CTR_REGNO\t\t\t97)\n+   (CA_REGNO\t\t\t98)\n+   (ARG_POINTER_REGNUM\t\t99)\n+   (CR0_REGNO\t\t\t100)\n+   (CR1_REGNO\t\t\t101)\n+   (CR2_REGNO\t\t\t102)\n+   (CR3_REGNO\t\t\t103)\n+   (CR4_REGNO\t\t\t104)\n+   (CR5_REGNO\t\t\t105)\n+   (CR6_REGNO\t\t\t106)\n+   (CR7_REGNO\t\t\t107)\n+   (MAX_CR_REGNO\t\t107)\n+   (VRSAVE_REGNO\t\t108)\n+   (VSCR_REGNO\t\t\t109)\n+   (FRAME_POINTER_REGNUM\t110)\n   ])\n \n ;;"}]}