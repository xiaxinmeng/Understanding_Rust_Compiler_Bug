{"sha": "c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzEyMWI0Yjc4YmE1N2Q5YTg3YzNjZjM1NTMxOWZjZjhjN2FkYzJhYQ==", "commit": {"author": {"name": "Terry Guo", "email": "terry.guo@arm.com", "date": "2014-11-17T07:06:54Z"}, "committer": {"name": "Xuepeng Guo", "email": "xguo@gcc.gnu.org", "date": "2014-11-17T07:06:54Z"}, "message": "thumb1.md (*addsi3_cbranch_scratch): Updated to UAL format.\n\ngcc/\n2014-11-17  Terry Guo  <terry.guo@arm.com>\n\n\t* config/arm/thumb1.md (*addsi3_cbranch_scratch): Updated to UAL\n\tformat.\n\ngcc/testsuite/\n2014-11-17  Terry Guo  <terry.guo@arm.com>\n\n\t* gcc.target/arm/thumb1-ual-1.c: New test.\n\nFrom-SVN: r217647", "tree": {"sha": "418601fb757b64778d7a02bae1a1ec4baeda832a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/418601fb757b64778d7a02bae1a1ec4baeda832a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa/comments", "author": null, "committer": null, "parents": [{"sha": "4696acf0d351041af6c75cf6a33703c0acdbdc76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4696acf0d351041af6c75cf6a33703c0acdbdc76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4696acf0d351041af6c75cf6a33703c0acdbdc76"}], "stats": {"total": 100, "additions": 98, "deletions": 2}, "files": [{"sha": "543e24b84e403e842677042710138bbcbc7bdc7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa", "patch": "@@ -1,3 +1,8 @@\n+2014-11-17  Terry Guo  <terry.guo@arm.com>\n+\n+\t* config/arm/thumb1.md (*addsi3_cbranch_scratch): Updated to UAL\n+\tformat.\n+\n 2014-11-17  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n \n \t* ifcvt.c (HAVE_cbranchcc4): Define."}, {"sha": "ddedc397a55acf814c75b6342a9edee0cd5d441c", "filename": "gcc/config/arm/thumb1.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa/gcc%2Fconfig%2Farm%2Fthumb1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa/gcc%2Fconfig%2Farm%2Fthumb1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb1.md?ref=c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa", "patch": "@@ -1420,13 +1420,13 @@\n \t if (INTVAL (operands[2]) < 0)\n \t   output_asm_insn (\\\"subs\\t%0, %1, %2\\\", operands);\n \t else\n-\t   output_asm_insn (\\\"add\\t%0, %1, %2\\\", operands);\n+\t   output_asm_insn (\\\"adds\\t%0, %1, %2\\\", operands);\n \t break;\n        case 3:\n \t if (INTVAL (operands[2]) < 0)\n \t   output_asm_insn (\\\"subs\\t%0, %0, %2\\\", operands);\n \t else\n-\t   output_asm_insn (\\\"add\\t%0, %0, %2\\\", operands);\n+\t   output_asm_insn (\\\"adds\\t%0, %0, %2\\\", operands);\n \t break;\n        }\n "}, {"sha": "e4b0d9cc9301044ae58fcb5e1ff8e6de5054bf21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa", "patch": "@@ -1,3 +1,7 @@\n+2014-11-17  Terry Guo  <terry.guo@arm.com>\n+\n+\t* gcc.target/arm/thumb1-ual-1.c: New test.\n+\n 2014-11-16  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR middle-end/63790"}, {"sha": "a2e439c6c4bbf688f4aa182df51910dfea93dc5d", "filename": "gcc/testsuite/gcc.target/arm/thumb1-ual-1.c", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-ual-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-ual-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-ual-1.c?ref=c121b4b78ba57d9a87c3cf355319fcf8c7adc2aa", "patch": "@@ -0,0 +1,87 @@\n+/* Test Thumb1 insn pattern addsi3_cbranch_scratch.  */\n+/* { dg-options \"-O2\" } */\n+/* { dg-skip-if \"\" { ! { arm_thumb1 } } } */\n+\n+struct real_value {\n+\n+  unsigned int cl : 2;\n+  unsigned int decimal : 1;\n+  unsigned int sign : 1;\n+  unsigned int signalling : 1;\n+  unsigned int canonical : 1;\n+  unsigned int uexp : (32 - 6);\n+  unsigned long sig[((128 + (8 * 4)) / (8 * 4))];\n+};\n+\n+enum real_value_class {\n+      rvc_zero,\n+      rvc_normal,\n+      rvc_inf,\n+      rvc_nan\n+};\n+\n+extern void exit(int);\n+extern int foo(long long *, int, int);\n+\n+int\n+real_to_integer (const struct real_value *r, int *fail, int precision)\n+{\n+  long long val[2 * (((64*(8)) + 64) / 64)];\n+  int exp;\n+  int words, w;\n+  int result;\n+\n+  switch (r->cl)\n+    {\n+    case rvc_zero:\n+    underflow:\n+      return 100;\n+\n+    case rvc_inf:\n+    case rvc_nan:\n+    overflow:\n+      *fail = 1;\n+\n+      if (r->sign)\n+ return 200;\n+      else\n+ return 300;\n+\n+    case rvc_normal:\n+      if (r->decimal)\n+ return 400;\n+\n+      exp = ((int)((r)->uexp ^ (unsigned int)(1 << ((32 - 6) - 1))) - (1 << ((32 - 6) - 1)));\n+      if (exp <= 0)\n+ goto underflow;\n+\n+\n+      if (exp > precision)\n+ goto overflow;\n+      words = (precision + 64 - 1) / 64;\n+      w = words * 64;\n+      for (int i = 0; i < words; i++)\n+ {\n+   int j = ((128 + (8 * 4)) / (8 * 4)) - (words * 2) + (i * 2);\n+   if (j < 0)\n+     val[i] = 0;\n+   else\n+     val[i] = r->sig[j];\n+   j += 1;\n+   if (j >= 0)\n+     val[i] |= (unsigned long long) r->sig[j] << (8 * 4);\n+ }\n+\n+\n+      result = foo(val, words, w);\n+\n+      if (r->sign)\n+ return -result;\n+      else\n+ return result;\n+\n+    default:\n+      exit(2);\n+    }\n+}\n+"}]}