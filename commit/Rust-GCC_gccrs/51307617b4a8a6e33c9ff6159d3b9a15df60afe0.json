{"sha": "51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "node_id": "C_kwDOANBUbNoAKDUxMzA3NjE3YjRhOGE2ZTMzYzlmZjYxNTlkM2I5YTE1ZGY2MGFmZTA", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-14T13:48:26Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-15T13:42:04Z"}, "message": "RISC-V: Add vnmsub vv C api tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vnmsub_vv-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vnmsub_vv_tumu-3.c: New test.", "tree": {"sha": "4e9b0893f917a12c04bd66af3054b6de4f072378", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e9b0893f917a12c04bd66af3054b6de4f072378"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "645bfe04ce118a462ad2b3d59a323619dea95560", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/645bfe04ce118a462ad2b3d59a323619dea95560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/645bfe04ce118a462ad2b3d59a323619dea95560"}], "stats": {"total": 5256, "additions": 5256, "deletions": 0}, "files": [{"sha": "68606a6c0492fc1581bfc54b16b3791d32b87e76", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv-1.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8(vd,vs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "5c9680467ec4326db8c9c9d6e5838366ce6a4814", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv-2.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8(vd,vs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "bc68b145cce79bd9d4cdddc565cdec959dfd4fa1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv-3.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8(vd,vs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "837e8a5cb06d832e165d2022e6cb88b1815ccd2b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_m-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_m-1.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_m(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_m(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_m(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_m(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_m(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_m(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_m(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_m(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_m(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_m(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_m(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_m(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_m(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_m(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_m(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_m(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_m(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_m(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_m(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_m(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_m(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_m(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_m(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_m(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_m(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_m(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_m(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_m(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_m(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_m(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_m(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_m(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_m(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_m(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_m(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_m(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_m(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_m(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_m(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_m(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_m(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_m(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_m(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_m(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_m(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "8b92cb2f52ca2994361eaaaad35cf019a430bb03", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_m-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_m-2.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_m(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_m(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_m(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_m(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_m(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_m(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_m(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_m(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_m(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_m(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_m(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_m(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_m(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_m(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_m(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_m(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_m(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_m(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_m(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_m(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_m(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_m(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_m(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_m(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_m(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_m(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_m(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_m(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_m(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_m(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_m(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_m(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_m(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_m(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_m(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_m(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_m(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_m(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_m(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_m(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_m(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_m(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_m(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_m(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_m(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "045e283d117d6b1594d970ad3bfd18a377d464b8", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_m-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_m-3.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_m(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_m(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_m(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_m(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_m(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_m(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_m(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_m(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_m(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_m(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_m(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_m(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_m(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_m(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_m(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_m(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_m(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_m(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_m(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_m(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_m(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_m(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_m(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_m(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_m(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_m(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_m(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_m(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_m(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_m(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_m(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_m(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_m(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_m(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_m(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_m(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_m(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_m(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_m(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_m(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_m(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_m(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_m(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_m(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_m(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "8b60e6d3461597069a664af3d1f2db4cd03ddcce", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_mu-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_mu-1.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_mu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_mu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_mu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_mu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_mu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_mu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_mu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_mu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_mu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_mu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_mu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_mu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_mu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_mu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_mu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_mu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_mu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_mu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_mu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_mu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_mu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_mu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_mu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_mu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_mu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_mu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_mu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_mu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_mu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_mu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_mu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_mu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_mu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_mu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_mu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_mu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_mu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_mu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_mu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_mu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_mu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_mu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_mu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_mu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "5feb0451922e149e92415684452d1b6120658242", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_mu-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_mu-2.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_mu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_mu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_mu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_mu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_mu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_mu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_mu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_mu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_mu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_mu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_mu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_mu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_mu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_mu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_mu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_mu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_mu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_mu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_mu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_mu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_mu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_mu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_mu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_mu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_mu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_mu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_mu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_mu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_mu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_mu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_mu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_mu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_mu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_mu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_mu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_mu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_mu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_mu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_mu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_mu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_mu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_mu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_mu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_mu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "cc277981ec39199629f4fe3435981dd405122a34", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_mu-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_mu-3.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_mu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_mu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_mu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_mu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_mu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_mu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_mu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_mu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_mu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_mu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_mu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_mu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_mu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_mu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_mu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_mu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_mu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_mu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_mu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_mu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_mu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_mu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_mu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_mu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_mu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_mu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_mu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_mu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_mu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_mu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_mu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_mu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_mu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_mu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_mu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_mu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_mu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_mu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_mu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_mu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_mu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_mu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_mu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_mu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "b264f48dc3cc45f4d780a60928c9a2a8a7c8a805", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_tu-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tu-1.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_tu(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_tu(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_tu(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_tu(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_tu(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_tu(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_tu(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_tu(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_tu(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_tu(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_tu(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_tu(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_tu(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_tu(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_tu(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_tu(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_tu(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_tu(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_tu(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_tu(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_tu(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_tu(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_tu(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_tu(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_tu(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_tu(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_tu(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_tu(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_tu(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_tu(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_tu(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_tu(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_tu(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_tu(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_tu(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_tu(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_tu(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_tu(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_tu(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_tu(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_tu(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_tu(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_tu(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_tu(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "c980809b8330fdc9f8e58a114a7487e7827c0172", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_tu-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tu-2.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_tu(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_tu(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_tu(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_tu(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_tu(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_tu(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_tu(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_tu(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_tu(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_tu(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_tu(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_tu(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_tu(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_tu(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_tu(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_tu(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_tu(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_tu(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_tu(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_tu(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_tu(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_tu(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_tu(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_tu(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_tu(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_tu(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_tu(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_tu(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_tu(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_tu(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_tu(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_tu(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_tu(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_tu(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_tu(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_tu(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_tu(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_tu(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_tu(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_tu(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_tu(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_tu(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_tu(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_tu(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "b9b34a023345860e96dd30c0478bff192fcb5cb4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_tu-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tu-3.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_tu(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_tu(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_tu(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_tu(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_tu(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_tu(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_tu(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_tu(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_tu(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_tu(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_tu(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_tu(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_tu(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_tu(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_tu(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_tu(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_tu(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_tu(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_tu(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_tu(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_tu(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_tu(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_tu(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_tu(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_tu(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_tu(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_tu(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_tu(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_tu(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_tu(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_tu(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_tu(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_tu(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_tu(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_tu(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_tu(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_tu(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_tu(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_tu(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_tu(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_tu(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_tu(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_tu(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_tu(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+} 2 } } */"}, {"sha": "e83b9120f7768db6b28b7c4edacc6a7a8204d7e0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_tum-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tum-1.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_tum(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_tum(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_tum(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_tum(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_tum(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_tum(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_tum(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_tum(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_tum(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_tum(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_tum(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_tum(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_tum(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_tum(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_tum(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_tum(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_tum(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_tum(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_tum(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_tum(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_tum(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_tum(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_tum(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_tum(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_tum(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_tum(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_tum(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_tum(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_tum(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_tum(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_tum(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_tum(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_tum(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_tum(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_tum(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_tum(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_tum(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_tum(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_tum(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_tum(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_tum(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_tum(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_tum(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_tum(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "297f899020fba1cdbf3f5b2c40e666db9d13a1f8", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_tum-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tum-2.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_tum(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_tum(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_tum(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_tum(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_tum(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_tum(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_tum(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_tum(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_tum(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_tum(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_tum(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_tum(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_tum(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_tum(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_tum(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_tum(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_tum(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_tum(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_tum(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_tum(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_tum(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_tum(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_tum(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_tum(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_tum(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_tum(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_tum(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_tum(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_tum(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_tum(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_tum(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_tum(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_tum(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_tum(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_tum(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_tum(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_tum(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_tum(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_tum(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_tum(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_tum(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_tum(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_tum(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_tum(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "54407b2b4a2cd5215c0afb026c3374da870262c4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_tum-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tum-3.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_tum(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_tum(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_tum(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_tum(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_tum(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_tum(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_tum(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_tum(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_tum(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_tum(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_tum(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_tum(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_tum(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_tum(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_tum(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_tum(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_tum(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_tum(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_tum(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_tum(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_tum(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_tum(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_tum(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_tum(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_tum(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_tum(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_tum(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_tum(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_tum(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_tum(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_tum(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_tum(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_tum(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_tum(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_tum(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_tum(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_tum(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_tum(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_tum(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_tum(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_tum(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_tum(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_tum(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_tum(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "5e692514ae9893a84277637ddac3f3093f82c6c9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_tumu-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tumu-1.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_tumu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_tumu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_tumu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_tumu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_tumu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_tumu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_tumu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_tumu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_tumu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_tumu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_tumu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_tumu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_tumu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_tumu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_tumu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_tumu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_tumu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_tumu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_tumu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_tumu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_tumu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_tumu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_tumu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_tumu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_tumu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_tumu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_tumu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_tumu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_tumu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_tumu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_tumu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_tumu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_tumu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_tumu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_tumu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_tumu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_tumu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_tumu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_tumu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_tumu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_tumu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_tumu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_tumu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_tumu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "10fbf29994fb78bd50885aa8de144b8c3aaeccd5", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_tumu-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tumu-2.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_tumu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_tumu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_tumu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_tumu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_tumu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_tumu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_tumu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_tumu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_tumu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_tumu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_tumu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_tumu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_tumu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_tumu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_tumu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_tumu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_tumu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_tumu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_tumu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_tumu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_tumu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_tumu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_tumu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_tumu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_tumu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_tumu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_tumu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_tumu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_tumu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_tumu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_tumu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_tumu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_tumu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_tumu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_tumu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_tumu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_tumu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_tumu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_tumu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_tumu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_tumu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_tumu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_tumu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_tumu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}, {"sha": "9927eb0169033620de6b70ac7e3de6e414d76f1d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vnmsub_vv_tumu-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51307617b4a8a6e33c9ff6159d3b9a15df60afe0/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvnmsub_vv_tumu-3.c?ref=51307617b4a8a6e33c9ff6159d3b9a15df60afe0", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsub_vv_i8mf8_tumu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf8_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsub_vv_i8mf4_tumu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsub_vv_i8mf2_tumu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8mf2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsub_vv_i8m1_tumu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m1_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsub_vv_i8m2_tumu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsub_vv_i8m4_tumu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsub_vv_i8m8_tumu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i8m8_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsub_vv_i16mf4_tumu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsub_vv_i16mf2_tumu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16mf2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsub_vv_i16m1_tumu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m1_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsub_vv_i16m2_tumu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsub_vv_i16m4_tumu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsub_vv_i16m8_tumu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i16m8_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsub_vv_i32mf2_tumu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32mf2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsub_vv_i32m1_tumu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m1_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsub_vv_i32m2_tumu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsub_vv_i32m4_tumu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsub_vv_i32m8_tumu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i32m8_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsub_vv_i64m1_tumu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m1_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsub_vv_i64m2_tumu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsub_vv_i64m4_tumu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsub_vv_i64m8_tumu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_i64m8_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsub_vv_u8mf8_tumu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf8_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsub_vv_u8mf4_tumu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsub_vv_u8mf2_tumu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8mf2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsub_vv_u8m1_tumu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m1_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsub_vv_u8m2_tumu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsub_vv_u8m4_tumu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsub_vv_u8m8_tumu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u8m8_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsub_vv_u16mf4_tumu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsub_vv_u16mf2_tumu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16mf2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsub_vv_u16m1_tumu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m1_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsub_vv_u16m2_tumu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsub_vv_u16m4_tumu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsub_vv_u16m8_tumu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u16m8_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsub_vv_u32mf2_tumu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32mf2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsub_vv_u32m1_tumu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m1_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsub_vv_u32m2_tumu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsub_vv_u32m4_tumu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsub_vv_u32m8_tumu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u32m8_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsub_vv_u64m1_tumu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m1_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsub_vv_u64m2_tumu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m2_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsub_vv_u64m4_tumu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m4_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsub_vv_u64m8_tumu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsub_vv_u64m8_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 2 } } */"}]}