{"sha": "81bd903a6aa90326fb2a3cb451f86423f069793b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFiZDkwM2E2YWE5MDMyNmZiMmEzY2I0NTFmODY0MjNmMDY5NzkzYg==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2017-11-07T11:04:14Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2017-11-07T11:04:14Z"}, "message": "More fold_negate in match.pd\n\ngcc/ChangeLog:\n\n2017-11-07  Marc Glisse  <marc.glisse@inria.fr>\n\n\t* fold-const.c (negate_expr_p) [PLUS_EXPR, MINUS_EXPR]: Handle\n\tnon-scalar integral types.\n\t* match.pd (negate_expr_p): Handle MINUS_EXPR.\n\t(-(A-B), -(~A)): New transformations.\n\ngcc/testsuite/ChangeLog:\n\n2017-11-07  Marc Glisse  <marc.glisse@inria.fr>\n\n\t* gcc.dg/tree-ssa/negminus.c: New test.\n\nFrom-SVN: r254494", "tree": {"sha": "d4d7509c7039e1f2279eb7a947b41a5781f7d6ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4d7509c7039e1f2279eb7a947b41a5781f7d6ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81bd903a6aa90326fb2a3cb451f86423f069793b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81bd903a6aa90326fb2a3cb451f86423f069793b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81bd903a6aa90326fb2a3cb451f86423f069793b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81bd903a6aa90326fb2a3cb451f86423f069793b/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13792cce5f6b3f01081eda5b4f0326a0aac4f368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13792cce5f6b3f01081eda5b4f0326a0aac4f368", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13792cce5f6b3f01081eda5b4f0326a0aac4f368"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "d06fcee491ec14680bb8cfd7a09d259536ce59f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81bd903a6aa90326fb2a3cb451f86423f069793b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81bd903a6aa90326fb2a3cb451f86423f069793b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81bd903a6aa90326fb2a3cb451f86423f069793b", "patch": "@@ -1,3 +1,10 @@\n+2017-11-07  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* fold-const.c (negate_expr_p) [PLUS_EXPR, MINUS_EXPR]: Handle\n+\tnon-scalar integral types.\n+\t* match.pd (negate_expr_p): Handle MINUS_EXPR.\n+\t(-(A-B), -(~A)): New transformations.\n+\n 2017-11-07  Tom de Vries  <tom@codesourcery.com>\n \n \t* config/powerpcspe/aix43.h (SUBTARGET_OVERRIDE_OPTIONS): Remove"}, {"sha": "e9cd968887f5d9ab356a433c4071476d54fa6bec", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81bd903a6aa90326fb2a3cb451f86423f069793b/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81bd903a6aa90326fb2a3cb451f86423f069793b/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=81bd903a6aa90326fb2a3cb451f86423f069793b", "patch": "@@ -428,7 +428,7 @@ negate_expr_p (tree t)\n     case PLUS_EXPR:\n       if (HONOR_SIGN_DEPENDENT_ROUNDING (element_mode (type))\n \t  || HONOR_SIGNED_ZEROS (element_mode (type))\n-\t  || (INTEGRAL_TYPE_P (type)\n+\t  || (ANY_INTEGRAL_TYPE_P (type)\n \t      && ! TYPE_OVERFLOW_WRAPS (type)))\n \treturn false;\n       /* -(A + B) -> (-B) - A.  */\n@@ -441,7 +441,7 @@ negate_expr_p (tree t)\n       /* We can't turn -(A-B) into B-A when we honor signed zeros.  */\n       return !HONOR_SIGN_DEPENDENT_ROUNDING (element_mode (type))\n \t     && !HONOR_SIGNED_ZEROS (element_mode (type))\n-\t     && (! INTEGRAL_TYPE_P (type)\n+\t     && (! ANY_INTEGRAL_TYPE_P (type)\n \t\t || TYPE_OVERFLOW_WRAPS (type));\n \n     case MULT_EXPR:"}, {"sha": "9113fd183acf7efd153b714b4c60d1736bfd067e", "filename": "gcc/match.pd", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81bd903a6aa90326fb2a3cb451f86423f069793b/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81bd903a6aa90326fb2a3cb451f86423f069793b/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=81bd903a6aa90326fb2a3cb451f86423f069793b", "patch": "@@ -958,6 +958,12 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (match negate_expr_p\n  VECTOR_CST\n  (if (FLOAT_TYPE_P (TREE_TYPE (type)) || TYPE_OVERFLOW_WRAPS (type))))\n+(match negate_expr_p\n+ (minus @0 @1)\n+ (if ((ANY_INTEGRAL_TYPE_P (type) && TYPE_OVERFLOW_WRAPS (type))\n+      || (FLOAT_TYPE_P (type)\n+\t  && !HONOR_SIGN_DEPENDENT_ROUNDING (type)\n+\t  && !HONOR_SIGNED_ZEROS (type)))))\n \n /* (-A) * (-B) -> A * B  */\n (simplify\n@@ -973,6 +979,15 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n       && !HONOR_SIGNED_ZEROS (element_mode (type)))\n   (minus (negate @1) @0)))\n \n+/* -(A - B) -> B - A.  */\n+(simplify\n+ (negate (minus @0 @1))\n+ (if ((ANY_INTEGRAL_TYPE_P (type) && !TYPE_OVERFLOW_SANITIZED (type))\n+      || (FLOAT_TYPE_P (type)\n+\t  && !HONOR_SIGN_DEPENDENT_ROUNDING (type)\n+\t  && !HONOR_SIGNED_ZEROS (type)))\n+  (minus @1 @0)))\n+\n /* A - B -> A + (-B) if B is easily negatable.  */\n (simplify\n  (minus @0 negate_expr_p@1)\n@@ -1082,6 +1097,11 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n       || !TYPE_UNSIGNED (TREE_TYPE (@0)))\n   (convert (minus @0 { build_each_one_cst (TREE_TYPE (@0)); }))))\n \n+/* Convert - (~A) to A + 1.  */\n+(simplify\n+ (negate (nop_convert (bit_not @0)))\n+ (plus (view_convert @0) { build_each_one_cst (type); }))\n+\n /* Convert ~ (A - 1) or ~ (A + -1) to -A.  */\n (simplify\n  (bit_not (convert? (minus @0 integer_each_onep)))"}, {"sha": "7f33b7c7337f51bcb32bb521228b412dfb77614c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81bd903a6aa90326fb2a3cb451f86423f069793b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81bd903a6aa90326fb2a3cb451f86423f069793b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=81bd903a6aa90326fb2a3cb451f86423f069793b", "patch": "@@ -1,3 +1,7 @@\n+2017-11-07  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* gcc.dg/tree-ssa/negminus.c: New test.\n+\n 2017-11-06  Jeff Law  <law@redhat.com>\n \n \t* gcc.target/i386/stack-check-12.c: Revert to initial version.  Then.."}, {"sha": "f857a007983ea78115b8710a26138ece6701e441", "filename": "gcc/testsuite/gcc.dg/tree-ssa/negminus.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81bd903a6aa90326fb2a3cb451f86423f069793b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fnegminus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81bd903a6aa90326fb2a3cb451f86423f069793b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fnegminus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fnegminus.c?ref=81bd903a6aa90326fb2a3cb451f86423f069793b", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fno-rounding-math -fno-signed-zeros -fdump-tree-optimized-raw\" } */\n+\n+double f(double a, double b){\n+    double c = a - b;\n+    return -c;\n+}\n+\n+int g(unsigned x){\n+    unsigned y = ~x;\n+    int z = (int) y;\n+    return -z;\n+}\n+\n+unsigned h(unsigned a, unsigned b, unsigned c){\n+    unsigned d = b - c;\n+    unsigned e = a + d;\n+    return -e;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"negate_expr\" \"optimized\"} } */"}]}