{"sha": "63bb8fba4b60296c9200fe3e2aa47c536f99c905", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNiYjhmYmE0YjYwMjk2YzkyMDBmZTNlMmFhNDdjNTM2Zjk5YzkwNQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2019-10-21T06:54:42Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2019-10-21T06:54:42Z"}, "message": "Fix some fallout for small targets.\n\n\tPR testsuite/52641\n\t* gcc.dg/torture/pr86034.c: Use 32-bit base type for a bitfield of\n\twidth > 16 bits.\n\t* gcc.dg/torture/pr90972.c [avr]: Add option \"-w\".\n\t* gcc.dg/torture/pr87693.c: Same.\n\t* gcc.dg/torture/pr91178.c: Add dg-require-effective-target size32plus.\n\t* gcc.dg/torture/pr91178-2.c: Same.\n\t* gcc.dg/torture/20181024-1.c\n\t* gcc.dg/torture/pr86554-1.c: Use 32-bit integers.\n\t* gcc.dg/tree-ssa/pr91091-1.c: Same.\n\nFrom-SVN: r277236", "tree": {"sha": "97a87156ae64e6efe1ea2d8c917711fdf44fce6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97a87156ae64e6efe1ea2d8c917711fdf44fce6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63bb8fba4b60296c9200fe3e2aa47c536f99c905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63bb8fba4b60296c9200fe3e2aa47c536f99c905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63bb8fba4b60296c9200fe3e2aa47c536f99c905", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63bb8fba4b60296c9200fe3e2aa47c536f99c905/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba7f76dd6bbf038948bbe516764a8bb0c851f750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7f76dd6bbf038948bbe516764a8bb0c851f750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba7f76dd6bbf038948bbe516764a8bb0c851f750"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "9199be887cf64da582059dee612c9eecc62af285", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=63bb8fba4b60296c9200fe3e2aa47c536f99c905", "patch": "@@ -1,3 +1,18 @@\n+2019-10-20  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tFix some fallout for small targets.\n+\n+\tPR testsuite/52641\n+\t* gcc.dg/torture/pr86034.c: Use 32-bit base type for a bitfield of\n+\twidth > 16 bits.\n+\t* gcc.dg/torture/pr90972.c [avr]: Add option \"-w\".\n+\t* gcc.dg/torture/pr87693.c: Same.\n+\t* gcc.dg/torture/pr91178.c: Add dg-require-effective-target size32plus.\n+\t* gcc.dg/torture/pr91178-2.c: Same.\n+\t* gcc.dg/torture/20181024-1.c\n+\t* gcc.dg/torture/pr86554-1.c: Use 32-bit integers.\n+\t* gcc.dg/tree-ssa/pr91091-1.c: Same.\n+\n 2019-10-20  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gcc.c-torture/execute/alias-access-path-2.c: New testcase."}, {"sha": "a3cce24b873598b5e0b3635bad5f5be67f08c07b", "filename": "gcc/testsuite/gcc.dg/torture/20181024-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2F20181024-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2F20181024-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2F20181024-1.c?ref=63bb8fba4b60296c9200fe3e2aa47c536f99c905", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target size32plus } */\n /* { dg-additional-options \"-march=core-avx2\" { target { x86_64-*-* i?86-*-* } } } */\n \n typedef enum {"}, {"sha": "d83ea394ce9028a91b56d887b5765520e353ed20", "filename": "gcc/testsuite/gcc.dg/torture/pr86034.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr86034.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr86034.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr86034.c?ref=63bb8fba4b60296c9200fe3e2aa47c536f99c905", "patch": "@@ -6,7 +6,7 @@\n struct A\n {\n   int b;\n-  int c:24;\n+  __INT32_TYPE__ c:24;\n   int d:10;\n   int e;\n } f;"}, {"sha": "562a187a5c451acec72e84056242eb9b6fb503d9", "filename": "gcc/testsuite/gcc.dg/torture/pr86554-1.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr86554-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr86554-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr86554-1.c?ref=63bb8fba4b60296c9200fe3e2aa47c536f99c905", "patch": "@@ -2,25 +2,25 @@\n \n struct foo\n {\n-  unsigned x;\n+  __UINT32_TYPE__ x;\n };\n typedef struct foo foo;\n \n-static inline int zot(foo *f)\n+static inline __INT32_TYPE__ zot(foo *f)\n {\n   int ret;\n \n   if (f->x > 0x7FFFFFFF)\n-    ret = (int)(f->x - 0x7FFFFFFF);\n+    ret = (__INT32_TYPE__)(f->x - 0x7FFFFFFF);\n   else\n-    ret = (int)f->x - 0x7FFFFFFF;\n+    ret = (__INT32_TYPE__)f->x - 0x7FFFFFFF;\n   return ret;\n }\n \n void __attribute__((noinline,noclone)) bar(foo *f)\n {\n-  int ret = zot(f);\n-  volatile int x = ret;\n+  __INT32_TYPE__ ret = zot(f);\n+  volatile __INT32_TYPE__ x = ret;\n   if (ret < 1)\n     __builtin_abort ();\n }"}, {"sha": "eb6d163d0f08a41c0e1610b4d556cc491ea0d162", "filename": "gcc/testsuite/gcc.dg/torture/pr87693.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87693.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87693.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87693.c?ref=63bb8fba4b60296c9200fe3e2aa47c536f99c905", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target indirect_jumps } */\n-\n+/* { dg-additional-options \"-w\" { target avr-*-* } } */\n+   \n void f (void);\n void g (void);\n void h (int a)"}, {"sha": "b18ccbd540e87cbb50189c0922d82a5c530fc3fb", "filename": "gcc/testsuite/gcc.dg/torture/pr90972.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr90972.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr90972.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr90972.c?ref=63bb8fba4b60296c9200fe3e2aa47c536f99c905", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-additional-options \"-mcpu=power8\" { target powerpc*-*-* } } */\n+/* { dg-additional-options \"-w\" { target avr-*-* } } */\n \n long f;\n void a();"}, {"sha": "ac5ae0e4fe5ce5d8874ea45ea8935cfc55faaf80", "filename": "gcc/testsuite/gcc.dg/torture/pr91178-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91178-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91178-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91178-2.c?ref=63bb8fba4b60296c9200fe3e2aa47c536f99c905", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target size32plus } */\n \n int a[100][70304];\n int b[100];"}, {"sha": "fc72d6812c1d15c492ee19477c549da22860a1d3", "filename": "gcc/testsuite/gcc.dg/torture/pr91178.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91178.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91178.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr91178.c?ref=63bb8fba4b60296c9200fe3e2aa47c536f99c905", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target size32plus } */\n \n int a;\n extern int f[10][91125];"}, {"sha": "5a6ac1b386440f9d5db8a7ef1fd79a4e5fb614bd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr91091-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91091-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63bb8fba4b60296c9200fe3e2aa47c536f99c905/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91091-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr91091-1.c?ref=63bb8fba4b60296c9200fe3e2aa47c536f99c905", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-O3 -fno-strict-aliasing\" } */\n \n-struct s { int x; } __attribute__((packed));\n-struct t { int x; };\n+struct s { __INT32_TYPE__ x; } __attribute__((packed));\n+struct t { __INT32_TYPE__ x; };\n \n void __attribute__((noinline,noipa))\n swap(struct s* p, struct t* q)"}]}