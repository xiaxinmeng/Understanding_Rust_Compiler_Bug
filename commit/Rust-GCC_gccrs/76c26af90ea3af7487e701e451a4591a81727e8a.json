{"sha": "76c26af90ea3af7487e701e451a4591a81727e8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZjMjZhZjkwZWEzYWY3NDg3ZTcwMWU0NTFhNDU5MWE4MTcyN2U4YQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-11-12T10:07:37Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-11-12T10:07:37Z"}, "message": "Param to options conversion.\n\n2019-11-12  Martin Liska  <mliska@suse.cz>\n\n\t* common.opt: Remove --param and --param= options.\n\t* opt-functions.awk: Mark CL_PARAMS for options\n\tthat have Param keyword.\n\t* opts-common.c (decode_cmdline_options_to_array):\n\tReplace --param key=value with --param=key=value.\n\t* opts.c (print_filtered_help): Remove special\n\tprinting of params.\n\t(print_specific_help): Update title for params.\n\t(common_handle_option): Do not handle OPT__param.\n\topts.h (SET_OPTION_IF_UNSET): New macro.\n\t* doc/options.texi: Document Param keyword.\n\nFrom-SVN: r278083", "tree": {"sha": "f06db17114922ff30c4c817dbb00a5852f3b043e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f06db17114922ff30c4c817dbb00a5852f3b043e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76c26af90ea3af7487e701e451a4591a81727e8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76c26af90ea3af7487e701e451a4591a81727e8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76c26af90ea3af7487e701e451a4591a81727e8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76c26af90ea3af7487e701e451a4591a81727e8a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62aee289e4791fd68aace01accf433fb26b3eeae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62aee289e4791fd68aace01accf433fb26b3eeae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62aee289e4791fd68aace01accf433fb26b3eeae"}], "stats": {"total": 84, "additions": 39, "deletions": 45}, "files": [{"sha": "a1a3c8b5c5c9d2c9d9452df3ad780235d39eebbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76c26af90ea3af7487e701e451a4591a81727e8a", "patch": "@@ -1,3 +1,17 @@\n+2019-11-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* common.opt: Remove --param and --param= options.\n+\t* opt-functions.awk: Mark CL_PARAMS for options\n+\tthat have Param keyword.\n+\t* opts-common.c (decode_cmdline_options_to_array):\n+\tReplace --param key=value with --param=key=value.\n+\t* opts.c (print_filtered_help): Remove special\n+\tprinting of params.\n+\t(print_specific_help): Update title for params.\n+\t(common_handle_option): Do not handle OPT__param.\n+\topts.h (SET_OPTION_IF_UNSET): New macro.\n+\t* doc/options.texi: Document Param keyword.\n+\n 2019-11-12  Maciej W. Rozycki  <macro@codesourcery.com>\n \t    Frederik Harwath  <frederik@codesourcery.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>"}, {"sha": "8c6acabb1fcb6643485865e0bd4e5019d68f7f02", "filename": "gcc/common.opt", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=76c26af90ea3af7487e701e451a4591a81727e8a", "patch": "@@ -437,13 +437,6 @@ Common Driver Alias(-target-help)\n fversion\n Common Driver Alias(-version)\n \n--param\n-Common Separate\n---param <param>=<value>\tSet parameter <param> to value.  See below for a complete list of parameters.\n-\n--param=\n-Common Joined Alias(-param)\n-\n -sysroot\n Driver Separate Alias(-sysroot=)\n "}, {"sha": "c7c70acd52616ba18cf128198e4ffab44a08f570", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=76c26af90ea3af7487e701e451a4591a81727e8a", "patch": "@@ -475,6 +475,9 @@ affect executable code generation may use this flag instead, so that the\n option is not taken into account in ways that might affect executable\n code generation.\n \n+@item Param\n+This is an option that is a parameter.\n+\n @item Undocumented\n The option is deliberately missing documentation and should not\n be included in the @option{--help} output."}, {"sha": "4f02b74e97c3a5fe1dab7f894cd53ef188293ed8", "filename": "gcc/opt-functions.awk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fopt-functions.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fopt-functions.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-functions.awk?ref=76c26af90ea3af7487e701e451a4591a81727e8a", "patch": "@@ -105,7 +105,8 @@ function switch_flags (flags)\n \t  test_flag(\"Undocumented\", flags,  \" | CL_UNDOCUMENTED\") \\\n \t  test_flag(\"NoDWARFRecord\", flags,  \" | CL_NO_DWARF_RECORD\") \\\n \t  test_flag(\"Warning\", flags,  \" | CL_WARNING\") \\\n-\t  test_flag(\"(Optimization|PerFunction)\", flags,  \" | CL_OPTIMIZATION\")\n+\t  test_flag(\"(Optimization|PerFunction)\", flags,  \" | CL_OPTIMIZATION\") \\\n+\t  test_flag(\"Param\", flags,  \" | CL_PARAMS\")\n \tsub( \"^0 \\\\| \", \"\", result )\n \treturn result\n }"}, {"sha": "d55dc93e165a150e5aa7cc62295c46fd022659bf", "filename": "gcc/opts-common.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=76c26af90ea3af7487e701e451a4591a81727e8a", "patch": "@@ -961,6 +961,15 @@ decode_cmdline_options_to_array (unsigned int argc, const char **argv,\n \t  continue;\n \t}\n \n+      /* Interpret \"--param\" \"key=name\" as \"--param=key=name\".  */\n+      const char *needle = \"--param\";\n+      if (i + 1 < argc && strcmp (opt, needle) == 0)\n+\t{\n+\t  const char *replacement\n+\t    = opts_concat (needle, \"=\", argv[i + 1], NULL);\n+\t  argv[++i] = replacement;\n+\t}\n+\n       n = decode_cmdline_option (argv + i, lang_mask,\n \t\t\t\t &opt_array[num_decoded_options]);\n       num_decoded_options++;"}, {"sha": "394cbfd1c5642fbdb5fadb504bc222b74a96e2d0", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=76c26af90ea3af7487e701e451a4591a81727e8a", "patch": "@@ -1278,38 +1278,6 @@ print_filtered_help (unsigned int include_flags,\n   bool displayed = false;\n   char new_help[256];\n \n-  if (include_flags == CL_PARAMS)\n-    {\n-      for (i = 0; i < LAST_PARAM; i++)\n-\t{\n-\t  const char *param = compiler_params[i].option;\n-\n-\t  help = compiler_params[i].help;\n-\t  if (help == NULL || *help == '\\0')\n-\t    {\n-\t      if (exclude_flags & CL_UNDOCUMENTED)\n-\t\tcontinue;\n-\t      help = undocumented_msg;\n-\t    }\n-\n-\t  /* Get the translation.  */\n-\t  help = _(help);\n-\n-\t  if (!opts->x_quiet_flag)\n-\t    {\n-\t      snprintf (new_help, sizeof (new_help),\n-\t\t\t_(\"default %d minimum %d maximum %d\"),\n-\t\t\tcompiler_params[i].default_value,\n-\t\t\tcompiler_params[i].min_value,\n-\t\t\tcompiler_params[i].max_value);\n-\t      help = new_help;\n-\t    }\n-\t  wrap_help (help, param, strlen (param), columns);\n-\t}\n-      putchar ('\\n');\n-      return;\n-    }\n-\n   if (!opts->x_help_printed)\n     opts->x_help_printed = XCNEWVAR (char, cl_options_count);\n \n@@ -1679,7 +1647,7 @@ print_specific_help (unsigned int include_flags,\n \t  description = _(\"The following options are language-independent\");\n \t  break;\n \tcase CL_PARAMS:\n-\t  description = _(\"The --param option recognizes the following as parameters\");\n+\t  description = _(\"The following options control parameters\");\n \t  break;\n \tdefault:\n \t  if (i >= cl_lang_count)\n@@ -2241,10 +2209,6 @@ common_handle_option (struct gcc_options *opts,\n \n   switch (code)\n     {\n-    case OPT__param:\n-      handle_param (opts, opts_set, loc, arg);\n-      break;\n-\n     case OPT__help:\n       {\n \tunsigned int all_langs_mask = (1U << cl_lang_count) - 1;"}, {"sha": "0de8e4269db94c26a2a83bbba24f52303ec6ffa9", "filename": "gcc/opts.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76c26af90ea3af7487e701e451a4591a81727e8a/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=76c26af90ea3af7487e701e451a4591a81727e8a", "patch": "@@ -461,4 +461,14 @@ extern bool parse_and_check_align_values (const char *flag,\n \t\t\t\t\t  bool report_error,\n \t\t\t\t\t  location_t loc);\n \n+/* Set OPTION in OPTS to VALUE if the option is not set in OPTS_SET.  */\n+\n+#define SET_OPTION_IF_UNSET(OPTS, OPTS_SET, OPTION, VALUE) \\\n+  do \\\n+  { \\\n+    if (!(OPTS_SET)->x_ ## OPTION) \\\n+      (OPTS)->x_ ## OPTION = VALUE; \\\n+  } \\\n+  while (false)\n+\n #endif"}]}