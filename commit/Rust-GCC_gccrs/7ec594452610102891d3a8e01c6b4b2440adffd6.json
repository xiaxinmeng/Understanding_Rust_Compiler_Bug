{"sha": "7ec594452610102891d3a8e01c6b4b2440adffd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VjNTk0NDUyNjEwMTAyODkxZDNhOGUwMWM2YjRiMjQ0MGFkZmZkNg==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2008-10-01T07:38:53Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-10-01T07:38:53Z"}, "message": "offsetof.C (main): Use __SIZE_TYPE__ instead of unsigned long for pointer cast.\n\n2008-10-01  Kai Tietz  <kai.tietz@onevision.com>\n\n        * g++.dg/abi/offsetof.C (main): Use __SIZE_TYPE__ instead of\n        unsigned long for pointer cast.\n        * g++.dg/init/struct1.C: Likewise.\n        * g++.dg/init/struct2.C: Likewise.\n        * g++.dg/init/struct3.C: Likewise.\n        * g++.dg/ext/utf-cvt.C: Correct for w64.\n        * gcc.dg/utf-cvt.c: Likewise.\n        * lib/target-supports.exp (check_effective_target_llp64): New.\n\nFrom-SVN: r140807", "tree": {"sha": "71e39a990d3b9b554ea818a4804e9eebe5c2b190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71e39a990d3b9b554ea818a4804e9eebe5c2b190"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ec594452610102891d3a8e01c6b4b2440adffd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec594452610102891d3a8e01c6b4b2440adffd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec594452610102891d3a8e01c6b4b2440adffd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec594452610102891d3a8e01c6b4b2440adffd6/comments", "author": null, "committer": null, "parents": [{"sha": "40ed87f7a5476ba2045faed6cffb440ee56da638", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40ed87f7a5476ba2045faed6cffb440ee56da638", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40ed87f7a5476ba2045faed6cffb440ee56da638"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "755a9701033023fdeecb0938cec5a714b74f63e8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ec594452610102891d3a8e01c6b4b2440adffd6", "patch": "@@ -1,3 +1,14 @@\n+2008-10-01  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* g++.dg/abi/offsetof.C (main): Use __SIZE_TYPE__ instead of\n+\tunsigned long for pointer cast.\n+\t* g++.dg/init/struct1.C: Likewise.\n+\t* g++.dg/init/struct2.C: Likewise.\n+\t* g++.dg/init/struct3.C: Likewise.\n+\t* g++.dg/ext/utf-cvt.C: Correct for w64.\n+\t* gcc.dg/utf-cvt.c: Likewise.\n+\t* lib/target-supports.exp (check_effective_target_llp64): New.\n+\n 2008-09-30  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR c++/37555"}, {"sha": "d6a53e6f80a283398867f69e3ab5834373bbd732", "filename": "gcc/testsuite/g++.dg/abi/offsetof.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Foffsetof.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Foffsetof.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Foffsetof.C?ref=7ec594452610102891d3a8e01c6b4b2440adffd6", "patch": "@@ -18,5 +18,5 @@ struct C: public B { };\n \n int main ()\n {\n-  return ((unsigned long) &((C*)0)->i) != sizeof(void*); // { dg-warning \"offsetof|invalid\" \"\" }\n+  return ((__SIZE_TYPE__) &((C*)0)->i) != sizeof(void*); // { dg-warning \"offsetof|invalid\" \"\" }\n }"}, {"sha": "286a0d007151df4a435652d2feaf059e0526c753", "filename": "gcc/testsuite/g++.dg/ext/utf-cvt.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf-cvt.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf-cvt.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf-cvt.C?ref=7ec594452610102891d3a8e01c6b4b2440adffd6", "patch": "@@ -46,8 +46,8 @@ void m(char16_t c0, char32_t c1)\n     f_i (c1);\t/* { dg-warning \"change the sign\" } */\n     fsi (c1);\t/* { dg-warning \"change the sign\" } */\n     fui (c1);\n-    f_l (c1);\t/* { dg-warning \"change the sign\" \"\" { target { ilp32 } } } */\n-    fsl (c1);\t/* { dg-warning \"change the sign\" \"\" { target { ilp32 } } } */\n+    f_l (c1);\t/* { dg-warning \"change the sign\" \"\" { target { llp64 || ilp32 } } } */\n+    fsl (c1);\t/* { dg-warning \"change the sign\" \"\" { target { llp64 || ilp32 } } } */\n     ful (c1);\n     f_ll (c1);\n     fsll (c1);"}, {"sha": "e23faef507390b75b8ab010e0e3cf49fb063f059", "filename": "gcc/testsuite/g++.dg/init/struct1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstruct1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstruct1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstruct1.C?ref=7ec594452610102891d3a8e01c6b4b2440adffd6", "patch": "@@ -1,6 +1,6 @@\n struct bug {\n   const char *name;\n-  unsigned long type;\n+  __SIZE_TYPE__ type;\n };\n \n-struct bug s = { 0, (unsigned long) &s | 1 };\n+struct bug s = { 0, (__SIZE_TYPE__) &s | 1 };"}, {"sha": "85aacc6fa09bdd2d816b3b809a169ee25dc97947", "filename": "gcc/testsuite/g++.dg/init/struct2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstruct2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstruct2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstruct2.C?ref=7ec594452610102891d3a8e01c6b4b2440adffd6", "patch": "@@ -15,7 +15,7 @@ void saveOrLoad() {\n     };    \n \n     SaveLoadEntry trackEntries = {\n-\t((long) (&((Track *) 42)->soundName[0])) - 42,\n+\t((long) (__SIZE_TYPE__) (&((Track *) 42)->soundName[0])) - 42,\n         0, 1\n     };\n     saveLoadEntries(&trackEntries);"}, {"sha": "53804b3d1533ae82a2a2ff1a394cdb58f98c2a8b", "filename": "gcc/testsuite/g++.dg/init/struct3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstruct3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstruct3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fstruct3.C?ref=7ec594452610102891d3a8e01c6b4b2440adffd6", "patch": "@@ -12,4 +12,4 @@ struct SaveLoadEntry {\n   int size;\n };    \n \n-int foobar = ((long) (& ((Track *) 42)->soundName[0])) - 42;\n+int foobar = ((long) (__SIZE_TYPE__) (& ((Track *) 42)->soundName[0])) - 42;"}, {"sha": "6a69310ceeb6be91464b2d90191f2696c129e0bc", "filename": "gcc/testsuite/gcc.dg/utf-cvt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fgcc.dg%2Futf-cvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Fgcc.dg%2Futf-cvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Futf-cvt.c?ref=7ec594452610102891d3a8e01c6b4b2440adffd6", "patch": "@@ -50,8 +50,8 @@ void m (char16_t c0, char32_t c1)\n     f_i (c1);\t/* { dg-warning \"change the sign\" } */\n     fsi (c1);\t/* { dg-warning \"change the sign\" } */\n     fui (c1);\n-    f_l (c1);\t/* { dg-warning \"change the sign\" \"\" { target { ilp32 } } } */\n-    fsl (c1);\t/* { dg-warning \"change the sign\" \"\" { target { ilp32 } } } */\n+    f_l (c1);\t/* { dg-warning \"change the sign\" \"\" { target { llp64 || ilp32 } } } */\n+    fsl (c1);\t/* { dg-warning \"change the sign\" \"\" { target { llp64 || ilp32 } } } */\n     ful (c1);\n     f_ll (c1);\n     fsll (c1);"}, {"sha": "3d118af7dda1b425f329750ff42fa4dafeadfad8", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ec594452610102891d3a8e01c6b4b2440adffd6/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=7ec594452610102891d3a8e01c6b4b2440adffd6", "patch": "@@ -1057,6 +1057,18 @@ proc check_effective_target_lp64 { } {\n     }]\n }\n \n+# Return 1 if we're generating 64-bit code using default llp64 options,\n+# 0 otherwise.\n+\n+proc check_effective_target_llp64 { } {\n+    return [check_no_compiler_messages llp64 object {\n+\tint dummy[sizeof (int) == 4\n+\t\t  && sizeof (void *) == 8\n+\t\t  && sizeof (long long) == 8\n+\t\t  && sizeof (long) == 4 ? 1 : -1];\n+    }]\n+}\n+\n # Return 1 if the target supports long double larger than double,\n # 0 otherwise.\n "}]}