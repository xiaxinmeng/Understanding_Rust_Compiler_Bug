{"sha": "66c7257b675068fe62505d74873371fd0508b499", "node_id": "C_kwDOANBUbNoAKDY2YzcyNTdiNjc1MDY4ZmU2MjUwNWQ3NDg3MzM3MWZkMDUwOGI0OTk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-04-13T00:16:48Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-04-13T00:16:48Z"}, "message": "Daily bump.", "tree": {"sha": "14392c348c33bc8959fe234bfcf81bf9de282752", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14392c348c33bc8959fe234bfcf81bf9de282752"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66c7257b675068fe62505d74873371fd0508b499", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c7257b675068fe62505d74873371fd0508b499", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66c7257b675068fe62505d74873371fd0508b499", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c7257b675068fe62505d74873371fd0508b499/comments", "author": null, "committer": null, "parents": [{"sha": "adda0e288727eab5635d8df153f104021e0121d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adda0e288727eab5635d8df153f104021e0121d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adda0e288727eab5635d8df153f104021e0121d6"}], "stats": {"total": 255, "additions": 254, "deletions": 1}, "files": [{"sha": "995e9b2f952a9e997ebf12854e136fda15280818", "filename": "gcc/ChangeLog", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c7257b675068fe62505d74873371fd0508b499/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c7257b675068fe62505d74873371fd0508b499/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66c7257b675068fe62505d74873371fd0508b499", "patch": "@@ -1,3 +1,78 @@\n+2023-04-12  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\tPR target/109479\n+\t* config/riscv/riscv-vector-builtins-types.def (vint8mf8_t): Fix predicate.\n+\t(vint16mf4_t): Ditto.\n+\t(vint32mf2_t): Ditto.\n+\t(vint64m1_t): Ditto.\n+\t(vint64m2_t): Ditto.\n+\t(vint64m4_t): Ditto.\n+\t(vint64m8_t): Ditto.\n+\t(vuint8mf8_t): Ditto.\n+\t(vuint16mf4_t): Ditto.\n+\t(vuint32mf2_t): Ditto.\n+\t(vuint64m1_t): Ditto.\n+\t(vuint64m2_t): Ditto.\n+\t(vuint64m4_t): Ditto.\n+\t(vuint64m8_t): Ditto.\n+\t(vfloat32mf2_t): Ditto.\n+\t(vbool64_t): Ditto.\n+\t* config/riscv/riscv-vector-builtins.cc (register_builtin_type): Add comments.\n+\t(register_vector_type): Ditto.\n+\t(check_required_extensions): Fix condition.\n+\t* config/riscv/riscv-vector-builtins.h (RVV_REQUIRE_ZVE64): Remove it.\n+\t(RVV_REQUIRE_ELEN_64): New define.\n+\t(RVV_REQUIRE_MIN_VLEN_64): Ditto.\n+\t* config/riscv/riscv-vector-switch.def (TARGET_VECTOR_FP32): Remove it.\n+\t(TARGET_VECTOR_FP64): Ditto.\n+\t(ENTRY): Fix predicate.\n+\t* config/riscv/vector-iterators.md: Fix predicate.\n+\n+2023-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/109410\n+\t* tree-ssa-reassoc.cc (build_and_add_sum): Split edge from entry\n+\tblock if first statement of the function is a call to returns_twice\n+\tfunction.\n+\n+2023-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/109458\n+\t* config/i386/i386.cc: Include rtl-error.h.\n+\t(ix86_print_operand): For z modifier warning, use warning_for_asm\n+\tif this_is_asm_operands.  For Z modifier errors, use %c and code\n+\tinstead of hardcoded Z.\n+\n+2023-04-12  Costas Argyris  <costas.argyris@gmail.com>\n+\n+\t* config/i386/x-mingw32-utf8: Remove extrataneous $@\n+\n+2023-04-12  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/109462\n+\t* gimple-range-cache.cc (ranger_cache::fill_block_cache): Don't\n+\tcheck for equivalences if NAME is a phi node.\n+\n+2023-04-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109473\n+\t* tree-vect-loop.cc (vect_create_epilog_for_reduction):\n+\tConvert scalar result to the computation type before performing\n+\tthe reduction adjustment.\n+\n+2023-04-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109469\n+\t* tree-vect-slp.cc (vect_slp_function): Skip region starts with\n+\ta returns-twice call.\n+\n+2023-04-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109434\n+\t* tree-ssa-dse.cc (initialize_ao_ref_for_dse): Properly\n+\thandle possibly throwing calls when processing the LHS\n+\tand may-defs are not OK.\n+\n 2023-04-11  Lin Sinan  <mynameisxiaou@gmail.com>\n \n \t* config/riscv/predicates.md (uimm_extra_bit_or_twobits): Adjust"}, {"sha": "3c5dae80bb1eb4336544f203ebb048c491e613b5", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c7257b675068fe62505d74873371fd0508b499/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c7257b675068fe62505d74873371fd0508b499/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=66c7257b675068fe62505d74873371fd0508b499", "patch": "@@ -1 +1 @@\n-20230412\n+20230413"}, {"sha": "d64791cf7147a36f591bbd492e5b44e211b58122", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c7257b675068fe62505d74873371fd0508b499/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c7257b675068fe62505d74873371fd0508b499/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=66c7257b675068fe62505d74873371fd0508b499", "patch": "@@ -1,3 +1,11 @@\n+2023-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Make-lang.in (s-cp-module-version): New target.\n+\t(cp/module.o): Depend on it.\n+\t(MODULE_VERSION): Remove variable.\n+\t(CFLAGS-cp/module.o): For -DMODULE_VERSION= argument just\n+\tcat s-cp-module-version.\n+\n 2023-04-09  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* coroutines.cc (coro_rewrite_function_body): Ensure that added"}, {"sha": "a4c7eab438b9cd8e14bfde13ae25d7a051b5b19e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c7257b675068fe62505d74873371fd0508b499/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c7257b675068fe62505d74873371fd0508b499/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=66c7257b675068fe62505d74873371fd0508b499", "patch": "@@ -1,3 +1,21 @@\n+2023-04-12  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/104312\n+\t* resolve.cc (resolve_entries): Handle functions with ENTRY and\n+\tALLOCATABLE results.\n+\t* trans-expr.cc (gfc_conv_procedure_call): Functions with a result\n+\twith the POINTER or ALLOCATABLE attribute shall not get any special\n+\ttreatment with -ff2c, as they cannot be written in Fortran 77.\n+\t* trans-types.cc (gfc_return_by_reference): Likewise.\n+\t(gfc_get_function_type): Likewise.\n+\n+2023-04-12  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/61615\n+\tPR fortran/99982\n+\t* interface.cc (compare_parameter): Enable type and rank checks for\n+\targuments of derived type from the intrinsic module ISO_C_BINDING.\n+\n 2023-04-08  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/87477"}, {"sha": "57a804a0de308d80813d3e56a470be238935acb3", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c7257b675068fe62505d74873371fd0508b499/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c7257b675068fe62505d74873371fd0508b499/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=66c7257b675068fe62505d74873371fd0508b499", "patch": "@@ -1,3 +1,17 @@\n+2023-04-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* de.po: Update.\n+\n+2023-04-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* be.po, da.po, de.po, el.po, es.po, fi.po, fr.po, hr.po, id.po,\n+\tja.po, nl.po, ru.po, sr.po, sv.po, tr.po, uk.po, vi.po, zh_CN.po,\n+\tzh_TW.po: Update.\n+\n+2023-04-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sv.po: Update.\n+\n 2023-04-04  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.pot: Regenerate."}, {"sha": "9a68fe975afa6d0735479fe792e306581738dbb9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c7257b675068fe62505d74873371fd0508b499/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c7257b675068fe62505d74873371fd0508b499/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66c7257b675068fe62505d74873371fd0508b499", "patch": "@@ -1,3 +1,67 @@\n+2023-04-12  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\tPR target/109479\n+\t* gcc.target/riscv/rvv/base/pr109479-1.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr109479-2.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr109479-3.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr109479-4.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr109479-5.c: New test.\n+\t* gcc.target/riscv/rvv/base/pr109479-6.c: New test.\n+\n+2023-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/109410\n+\t* gcc.dg/pr109410.c: New test.\n+\n+2023-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/109458\n+\t* gcc.target/i386/pr109458.c: New test.\n+\n+2023-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/109462\n+\t* g++.dg/opt/pr109462.C: New test.\n+\n+2023-04-12  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/109462\n+\t* gcc.dg/uninit-pr101912.c: XFAIL the warning.\n+\n+2023-04-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109473\n+\t* gcc.dg/vect/pr109473.c: New testcase.\n+\n+2023-04-12  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/104312\n+\t* gfortran.dg/entry_26.f90: New test.\n+\t* gfortran.dg/entry_27.f90: New test.\n+\n+2023-04-12  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/61615\n+\tPR fortran/99982\n+\t* gfortran.dg/interface_49.f90: New test.\n+\n+2023-04-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109469\n+\t* gcc.dg/torture/pr109469.c: New testcase.\n+\n+2023-04-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/109434\n+\t* g++.dg/opt/pr109434.C: New testcase.\n+\n+2023-04-12  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR testsuite/108815\n+\t* gcc.target/powerpc/pr83677.c (v_expand_u8, v_expand_u16,\n+\tv_load_deinterleave_f32, v_store_interleave_f32): Adjust some code by\n+\tconsidering BE.\n+\n 2023-04-11  Lin Sinan  <mynameisxiaou@gmail.com>\n \n \t* gcc.target/riscv/zbs-extra-bit-or-twobits.c: New test."}, {"sha": "b70b74c8af93e071bd598cdb8927cf86d52016bf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66c7257b675068fe62505d74873371fd0508b499/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66c7257b675068fe62505d74873371fd0508b499/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=66c7257b675068fe62505d74873371fd0508b499", "patch": "@@ -1,3 +1,77 @@\n+2023-04-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/using.xml: Document libstdc++exp.a library.\n+\t* doc/html/*: Regenerate.\n+\n+2023-04-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/17_intro/names.cc [_AIX]: Do not define policy.\n+\t* testsuite/19_diagnostics/error_code/cons/lwg3629.cc: Rename\n+\tnamespace to avoid clashing with libc struct.\n+\t* testsuite/19_diagnostics/error_condition/cons/lwg3629.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/96088.cc: Skip on AIX.\n+\t* testsuite/23_containers/unordered_multimap/96088.cc: Likewise.\n+\t* testsuite/23_containers/unordered_multiset/96088.cc: Likewise.\n+\t* testsuite/23_containers/unordered_set/96088.cc: Likewise.\n+\t* testsuite/experimental/synchronized_value.cc: Require gthreads\n+\tand add missing option for pthreads targets.\n+\n+2023-04-12  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/std/ranges (__cpp_lib_ranges_enumerate): Define\n+\tfor C++23.\n+\t(__detail::__range_with_movable_reference): Likewise.\n+\t(enumerate_view): Likewise.\n+\t(enumerate_view::_Iterator): Likewise.\n+\t(enumerate_view::_Sentinel): Likewise.\n+\t(views::__detail::__can_enumerate_view): Likewise.\n+\t(views::_Enumerate, views::enumerate): Likewise.\n+\t* include/std/version (__cpp_lib_ranges_enumerate): Likewise.\n+\t* testsuite/std/ranges/version_c++23.cc: Verify value of\n+\t__cpp_lib_ranges_enumerate.\n+\t* testsuite/std/ranges/adaptors/enumerate/1.cc: New test.\n+\n+2023-04-12  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/std/ranges (lazy_split_view::_OuterIter::_OuterIter):\n+\tPropagate _M_trailing_empty in the const-converting constructor\n+\tas per LWG 3904.\n+\t* testsuite/std/ranges/adaptors/adjacent/1.cc (test04): Correct\n+\tassertion.\n+\t* testsuite/std/ranges/adaptors/lazy_split.cc (test12): New test.\n+\n+2023-04-12  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* src/c++17/floating_from_chars.cc: Include <algorithm>,\n+\t<iterator>, <limits> and <cstdint>.\n+\n+2023-04-12  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR libstdc++/108291\n+\t* include/std/ranges (chunk_by_view::_M_find_next): Generalize\n+\tparameter types of the lambda wrapper passed to adjacent_find.\n+\t(chunk_by_view::_M_find_prev): Likewise.\n+\t* testsuite/std/ranges/adaptors/chunk_by/1.cc (test04, test05):\n+\tNew tests.\n+\n+2023-04-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/109482\n+\t* include/experimental/internet (basic_endpoint::basic_endpoint()):\n+\tEnsure that the required union members are active. Only define\n+\tas constexpr for C++20 and later.\n+\t(basic_endpoint::basic_endpoint(const protocol_type&, port_type)):\n+\tLikewise.\n+\t* testsuite/experimental/net/internet/endpoint/cons.cc: Only\n+\tcheck constexpr default constructor for C++20 and later.\n+\t* testsuite/experimental/net/internet/endpoint/extensible.cc:\n+\tLikewise.\n+\n+2023-04-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/c++20/tzdata.zi: Import new file from 2023c release.\n+\n 2023-04-05  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n \n \t* include/precompiled/stdc++.h (C++17): Don't double-include"}]}