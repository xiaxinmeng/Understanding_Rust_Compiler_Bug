{"sha": "5de5e977aa0b653e9c4982db5da5e3e428840a22", "node_id": "C_kwDOANBUbNoAKDVkZTVlOTc3YWEwYjY1M2U5YzQ5ODJkYjVkYTVlM2U0Mjg4NDBhMjI", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2023-02-08T03:03:14Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2023-03-31T06:15:57Z"}, "message": "Adjust memory_move_cost for MASK_REGS when MODE_SIZE > 8.\n\nIt's impossible to put modes whose size > 8 into MASK_REGS.\n\ngcc/ChangeLog:\n\n\t* config/i386/i386.cc (inline_memory_move_cost): Return 100\n\tfor MASK_REGS when MODE_SIZE > 8.", "tree": {"sha": "20c724098881d3692bd92277c2b7b8d39a830567", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20c724098881d3692bd92277c2b7b8d39a830567"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5de5e977aa0b653e9c4982db5da5e3e428840a22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de5e977aa0b653e9c4982db5da5e3e428840a22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5de5e977aa0b653e9c4982db5da5e3e428840a22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de5e977aa0b653e9c4982db5da5e3e428840a22/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65dd42d2c3dac76afc26228750821dd05e75fca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65dd42d2c3dac76afc26228750821dd05e75fca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65dd42d2c3dac76afc26228750821dd05e75fca8"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "2581b800a061db6a9a13c2b0420b2311f76a3584", "filename": "gcc/config/i386/i386.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5de5e977aa0b653e9c4982db5da5e3e428840a22/gcc%2Fconfig%2Fi386%2Fi386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5de5e977aa0b653e9c4982db5da5e3e428840a22/gcc%2Fconfig%2Fi386%2Fi386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.cc?ref=5de5e977aa0b653e9c4982db5da5e3e428840a22", "patch": "@@ -19847,9 +19847,12 @@ inline_memory_move_cost (machine_mode mode, enum reg_class regclass, int in)\n \t  index = 1;\n \t  break;\n \t/* DImode loads and stores assumed to cost the same as SImode.  */\n-\tdefault:\n+\tcase 4:\n+\tcase 8:\n \t  index = 2;\n \t  break;\n+\tdefault:\n+\t  return 100;\n \t}\n \n       if (in == 2)"}]}