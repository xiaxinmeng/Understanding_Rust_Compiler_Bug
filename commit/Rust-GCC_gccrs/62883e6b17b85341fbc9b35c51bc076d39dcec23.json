{"sha": "62883e6b17b85341fbc9b35c51bc076d39dcec23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI4ODNlNmIxN2I4NTM0MWZiYzliMzVjNTFiYzA3NmQzOWRjZWMyMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2014-08-01T08:12:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T08:12:27Z"}, "message": "binde.adb, [...]: Remove VMS handling.\n\n2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n\n\t* binde.adb, bindgen.adb, butil.adb, clean.adb, gnatbind.adb,\n\tgnatchop.adb, gnatcmd.adb, gnatls.adb, gnatname.adb, krunch.adb,\n\tmake.adb, makeutl.adb, memtrack.adb, mlib-prj.adb, mlib.adb,\n\tmlib.ads, tempdir.adb: Remove VMS handling.\n\nFrom-SVN: r213413", "tree": {"sha": "8b274633bd4a9796bb8f946cf618a08545de0628", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b274633bd4a9796bb8f946cf618a08545de0628"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62883e6b17b85341fbc9b35c51bc076d39dcec23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62883e6b17b85341fbc9b35c51bc076d39dcec23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62883e6b17b85341fbc9b35c51bc076d39dcec23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62883e6b17b85341fbc9b35c51bc076d39dcec23/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "148c744a1789b29b3c3c32b45ea3be913fef6a52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148c744a1789b29b3c3c32b45ea3be913fef6a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/148c744a1789b29b3c3c32b45ea3be913fef6a52"}], "stats": {"total": 880, "additions": 251, "deletions": 629}, "files": [{"sha": "28cde03e477aefa28a3768c7613cac5993cf6cdb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -1,3 +1,10 @@\n+2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* binde.adb, bindgen.adb, butil.adb, clean.adb, gnatbind.adb,\n+\tgnatchop.adb, gnatcmd.adb, gnatls.adb, gnatname.adb, krunch.adb,\n+\tmake.adb, makeutl.adb, memtrack.adb, mlib-prj.adb, mlib.adb,\n+\tmlib.ads, tempdir.adb: Remove VMS handling.\n+\n 2014-08-01  Pascal Obry  <obry@adacore.com>\n \n \t* adaint.h, adaint.c (__gnat_file_length): Returns an __int64."}, {"sha": "f22e53ba68a9ed00c6dbccf480919226acbf8c67", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,6 @@ with Namet;    use Namet;\n with Opt;      use Opt;\n with Osint;\n with Output;   use Output;\n-with Targparm; use Targparm;\n \n with System.Case_Util; use System.Case_Util;\n \n@@ -1089,12 +1088,7 @@ package body Binde is\n       if Pessimistic_Elab_Order\n         and not Dynamic_Elaboration_Checks_Specified\n       then\n-         if OpenVMS_On_Target then\n-            Error_Msg (\"?use of /PESSIMISTIC_ELABORATION questionable\");\n-         else\n-            Error_Msg (\"?use of -p switch questionable\");\n-         end if;\n-\n+         Error_Msg (\"?use of -p switch questionable\");\n          Error_Msg (\"?since all units compiled with static elaboration model\");\n       end if;\n "}, {"sha": "6363e1b498ae593d675368e5828d1333035e9b0e", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 93, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -52,10 +52,6 @@ package body Bindgen is\n    Last : Natural := 0;\n    --  Last location in Statement_Buffer currently set\n \n-   With_DECGNAT : Boolean := False;\n-   --  Flag which indicates whether the program uses the DECGNAT library\n-   --  (presence of the unit DEC).\n-\n    With_GNARL : Boolean := False;\n    --  Flag which indicates whether the program uses the GNARL library\n    --  (presence of the unit System.OS_Interface)\n@@ -325,9 +321,7 @@ package body Bindgen is\n    --  Move routine for sorting linker options\n \n    procedure Resolve_Binder_Options;\n-   --  Set the value of With_GNARL and With_DECGNAT. The latter only on VMS\n-   --  since it tests for a package named \"dec\" which might cause a conflict\n-   --  on non-VMS systems.\n+   --  Set the value of With_GNARL.\n \n    procedure Set_Char (C : Character);\n    --  Set given character in Statement_Buffer at the Last + 1 position\n@@ -659,36 +653,6 @@ package body Bindgen is\n                  \"\"\"__gnat_finalize_library_objects\"\");\");\n          end if;\n \n-         --  Import entry point for environment feature enable/disable\n-         --  routine, and indication that it's been called previously.\n-\n-         if OpenVMS_On_Target then\n-            WBI (\"\");\n-            WBI (\"      procedure Set_Features;\");\n-            WBI (\"      pragma Import (C, Set_Features, \" &\n-                 \"\"\"__gnat_set_features\"\");\");\n-            WBI (\"\");\n-            WBI (\"      Features_Set : Integer;\");\n-            WBI (\"      pragma Import (C, Features_Set, \" &\n-                 \"\"\"__gnat_features_set\"\");\");\n-\n-            if Opt.Heap_Size /= 0 then\n-               WBI (\"\");\n-               WBI (\"      Heap_Size : Integer;\");\n-               WBI (\"      pragma Import (C, Heap_Size, \" &\n-                    \"\"\"__gl_heap_size\"\");\");\n-\n-               Write_Statement_Buffer;\n-            end if;\n-\n-            WBI (\"\");\n-            WBI (\"      Float_Format : Character;\");\n-            WBI (\"      pragma Import (C, Float_Format, \" &\n-                    \"\"\"__gl_float_format\"\");\");\n-\n-            Write_Statement_Buffer;\n-         end if;\n-\n          --  Initialize stack limit variable of the environment task if the\n          --  stack check method is stack limit and stack check is enabled.\n \n@@ -886,44 +850,6 @@ package body Bindgen is\n             WBI (\"         Install_Handler;\");\n             WBI (\"      end if;\");\n          end if;\n-\n-         --  Generate call to Set_Features\n-\n-         if OpenVMS_On_Target then\n-\n-            --  Set_Features will call IEEE$SET_FP_CONTROL appropriately\n-            --  depending on the setting of Float_Format.\n-\n-            WBI (\"\");\n-            Set_String (\"      Float_Format := '\");\n-\n-            if Float_Format_Specified = 'G'\n-                 or else\n-               Float_Format_Specified = 'D'\n-            then\n-               Set_Char ('V');\n-            else\n-               Set_Char ('I');\n-            end if;\n-\n-            Set_String (\"';\");\n-            Write_Statement_Buffer;\n-\n-            WBI (\"\");\n-            WBI (\"      if Features_Set = 0 then\");\n-            WBI (\"         Set_Features;\");\n-            WBI (\"      end if;\");\n-\n-            --  Features_Set may twiddle the heap size according to a logical\n-            --  name, but the binder switch must override.\n-\n-            if Opt.Heap_Size /= 0 then\n-               Set_String (\"      Heap_Size := \");\n-               Set_Int (Opt.Heap_Size);\n-               Set_Char   (';');\n-               Write_Statement_Buffer;\n-            end if;\n-         end if;\n       end if;\n \n       --  Generate call to set Initialize_Scalar values if active\n@@ -2138,18 +2064,6 @@ package body Bindgen is\n \n          WBI (\"   --   \" & Name_Buffer (1 .. Name_Len));\n \n-         if With_DECGNAT then\n-            Name_Len := 0;\n-\n-            if Opt.Shared_Libgnat then\n-               Add_Str_To_Name_Buffer (Shared_Lib (\"decgnat\"));\n-            else\n-               Add_Str_To_Name_Buffer (\"-ldecgnat\");\n-            end if;\n-\n-            Write_Linker_Option;\n-         end if;\n-\n          if With_GNARL then\n             Name_Len := 0;\n \n@@ -3025,12 +2939,6 @@ package body Bindgen is\n \n          Check_Package (With_GNARL, \"system.os_interface%s\");\n \n-         --  Ditto for declib and the \"dec\" package\n-\n-         if OpenVMS_On_Target then\n-            Check_Package (With_DECGNAT, \"dec%s\");\n-         end if;\n-\n          --  Ditto for the use of restricted tasking\n \n          Check_Package"}, {"sha": "8ca4994cb03feb0f47e1f005b87da00e52a98b7a", "filename": "gcc/ada/butil.adb", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fbutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fbutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbutil.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,8 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Output;   use Output;\n-with Targparm; use Targparm;\n+with Output; use Output;\n \n package body Butil is\n \n@@ -41,14 +40,7 @@ package body Butil is\n         or else (Name_Len > 4\n                    and then (Name_Buffer (1 .. 5) = \"gnat%\"\n                                or else\n-                             Name_Buffer (1 .. 5) = \"gnat.\"))\n-        or else\n-          (OpenVMS_On_Target\n-           and then Name_Len > 3\n-           and then (Name_Buffer (1 .. 4) = \"dec%\"\n-                      or else\n-                     Name_Buffer (1 .. 4) = \"dec.\"));\n-\n+                             Name_Buffer (1 .. 5) = \"gnat.\"));\n    end Is_Internal_Unit;\n \n    ------------------------"}, {"sha": "a41729ad66606d41ab38435597f213e853c15883", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 6, "deletions": 38, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -64,15 +64,12 @@ package body Clean is\n    ALI_Suffix      : constant String := \".ali\";\n    Tree_Suffix     : constant String := \".adt\";\n    Object_Suffix   : constant String := Get_Target_Object_Suffix.all;\n-   Debug_Suffix    : String          := \".dg\";\n-   --  Changed to \"_dg\" for VMS in the body of the package\n+   Debug_Suffix    : constant String := \".dg\";\n+   Repinfo_Suffix  : constant String := \".rep\";\n+   --  Suffix of representation info files.\n \n-   Repinfo_Suffix  : String := \".rep\";\n-   --  Changed to \"_rep\" for VMS in the body of the package\n-\n-   B_Start : String_Ptr := new String'(\"b~\");\n+   B_Start : constant String := \"b~\";\n    --  Prefix of binder generated file, and number of actual characters used.\n-   --  Changed to \"b__\" for VMS in the body of the package.\n \n    Project_Tree : constant Project_Tree_Ref :=\n      new Project_Tree_Data (Is_Root_Tree => True);\n@@ -1266,27 +1263,7 @@ package body Clean is\n            or else Is_Writable_File (Full_Name (1 .. Last))\n            or else Is_Symbolic_Link (Full_Name (1 .. Last))\n          then\n-            --  On VMS, we have to delete all versions of the file\n-\n-            if OpenVMS_On_Target then\n-               declare\n-                  Host_Full_Name : constant String_Access :=\n-                    To_Host_File_Spec (Full_Name (1 .. Last));\n-               begin\n-                  if Host_Full_Name = null\n-                    or else Host_Full_Name'Length = 0\n-                  then\n-                     Success := False;\n-                  else\n-                     Delete_File (Host_Full_Name.all & \";*\", Success);\n-                  end if;\n-               end;\n-\n-            --  Otherwise just delete the specified file\n-\n-            else\n-               Delete_File (Full_Name (1 .. Last), Success);\n-            end if;\n+            Delete_File (Full_Name (1 .. Last), Success);\n \n          --  Here if no deletion required\n \n@@ -1327,7 +1304,7 @@ package body Clean is\n \n       --  Build the file name (before the extension)\n \n-      File_Name (1 .. B_Start'Length) := B_Start.all;\n+      File_Name (1 .. B_Start'Length) := B_Start;\n       File_Name (B_Start'Length + 1 .. Last) := Source_Name;\n \n       --  Spec\n@@ -1590,16 +1567,7 @@ package body Clean is\n          Prj.Tree.Initialize (Project_Node_Tree);\n \n          Prj.Initialize (Project_Tree);\n-\n-         --  Check if the platform is VMS and, if it is, change some variables\n-\n          Targparm.Get_Target_Parameters;\n-\n-         if OpenVMS_On_Target then\n-            Debug_Suffix (Debug_Suffix'First) := '_';\n-            Repinfo_Suffix (Repinfo_Suffix'First) := '_';\n-            B_Start := new String'(\"b__\");\n-         end if;\n       end if;\n \n       --  Reset global variables"}, {"sha": "7cba0c684f2300260721f519cc54109decbec5bf", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -77,8 +77,6 @@ procedure Gnatbind is\n    Output_File_Name_Seen : Boolean := False;\n    Output_File_Name      : String_Ptr := new String'(\"\");\n \n-   L_Switch_Seen : Boolean := False;\n-\n    Mapping_File : String_Ptr := null;\n \n    package Closure_Sources is new Table.Table\n@@ -338,12 +336,6 @@ procedure Gnatbind is\n          elsif Argv (2) = 'L' then\n             if Argv'Length >= 3 then\n \n-               --  Remember that the -L switch was specified, so that if this\n-               --  is on OpenVMS, the export names are put in uppercase.\n-               --  This is not known before the target parameters are read.\n-\n-               L_Switch_Seen := True;\n-\n                Opt.Bind_For_Library := True;\n                Opt.Ada_Init_Name :=\n                  new String'(Argv (3 .. Argv'Last) & Opt.Ada_Init_Suffix);\n@@ -642,17 +634,6 @@ begin\n \n    Cumulative_Restrictions := Targparm.Restrictions_On_Target;\n \n-   --  On OpenVMS, when -L is used, all external names used in pragmas Export\n-   --  are in upper case. The reason is that on OpenVMS, the macro-assembler\n-   --  MACASM-32, used to build Stand-Alone Libraries, only understands\n-   --  uppercase.\n-\n-   if L_Switch_Seen and then OpenVMS_On_Target then\n-      To_Upper (Opt.Ada_Init_Name.all);\n-      To_Upper (Opt.Ada_Final_Name.all);\n-      To_Upper (Opt.Ada_Main_Name.all);\n-   end if;\n-\n    --  Acquire configurable run-time mode\n \n    if Configurable_Run_Time_On_Target then"}, {"sha": "6170f8858fcf39d6c36d4180118acad4c2d3a395", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 29, "deletions": 72, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -36,7 +36,6 @@ with GNAT.OS_Lib;                use GNAT.OS_Lib;\n with GNAT.Heap_Sort_G;\n with GNAT.Table;\n \n-with Hostparm;\n with Switch;                     use Switch;\n with Types;\n \n@@ -273,10 +272,7 @@ procedure Gnatchop is\n       Success  : out Boolean);\n    --  Reads file associated with FS into the newly allocated\n    --  string Contents.\n-   --  [VMS] Success is true iff the number of bytes read is less than or\n-   --   equal to the file size.\n-   --  [Other] Success is true iff the number of bytes read is equal to\n-   --   the file size.\n+   --  Success is true iff the number of bytes read is equal to the file size.\n \n    function Report_Duplicate_Units return Boolean;\n    --  Output messages about duplicate units in the input files in Unit.Table\n@@ -387,15 +383,8 @@ procedure Gnatchop is\n \n             begin\n                if Is_Writable_File (Info.File_Name.all) then\n-                  if Hostparm.OpenVMS then\n-                     Error_Msg\n-                       (Info.File_Name.all\n-                        & \" already exists, use /OVERWRITE to overwrite\");\n-                  else\n-                     Error_Msg (Info.File_Name.all\n-                                 & \" already exists, use -w to overwrite\");\n-                  end if;\n-\n+                  Error_Msg (Info.File_Name.all\n+                              & \" already exists, use -w to overwrite\");\n                   Exists := True;\n                end if;\n             end;\n@@ -1018,15 +1007,7 @@ procedure Gnatchop is\n          Free (Buffer);\n       end if;\n \n-      --  Things aren't simple on VMS due to the plethora of file types and\n-      --  organizations. It seems clear that there shouldn't be more bytes\n-      --  read than are contained in the file though.\n-\n-      if Hostparm.OpenVMS then\n-         Success := Read_Ptr <= Length + 1;\n-      else\n-         Success := Read_Ptr = Length + 1;\n-      end if;\n+      Success := Read_Ptr = Length + 1;\n    end Read_File;\n \n    ----------------------------\n@@ -1083,12 +1064,7 @@ procedure Gnatchop is\n       end loop;\n \n       if Duplicates and not Overwrite_Files then\n-         if Hostparm.OpenVMS then\n-            Put_Line\n-              (\"use /OVERWRITE to overwrite files and keep last version\");\n-         else\n-            Put_Line (\"use -w to overwrite files and keep last version\");\n-         end if;\n+         Put_Line (\"use -w to overwrite files and keep last version\");\n       end if;\n \n       return Duplicates;\n@@ -1136,23 +1112,13 @@ procedure Gnatchop is\n                   if Param.all /= \"\" then\n                      for J in Param'Range loop\n                         if Param (J) not in '0' .. '9' then\n-                           if Hostparm.OpenVMS then\n-                              Error_Msg (\"/FILE_NAME_MAX_LENGTH=nnn\" &\n-                                         \" requires numeric parameter\");\n-                           else\n-                              Error_Msg (\"-k# requires numeric parameter\");\n-                           end if;\n-\n+                           Error_Msg (\"-k# requires numeric parameter\");\n                            return False;\n                         end if;\n                      end loop;\n \n                   else\n-                     if Hostparm.OpenVMS then\n-                        Param := new String'(\"39\");\n-                     else\n-                        Param := new String'(\"8\");\n-                     end if;\n+                     Param := new String'(\"8\");\n                   end if;\n \n                   Gnat_Args :=\n@@ -1273,13 +1239,7 @@ procedure Gnatchop is\n          return False;\n \n       when Invalid_Parameter =>\n-         if Hostparm.OpenVMS then\n-            Error_Msg (\"/FILE_NAME_MAX_LENGTH=nnn qualifier\" &\n-                       \" requires numeric parameter\");\n-         else\n-            Error_Msg (\"-k switch requires numeric parameter\");\n-         end if;\n-\n+         Error_Msg (\"-k switch requires numeric parameter\");\n          return False;\n    end Scan_Arguments;\n \n@@ -1770,33 +1730,30 @@ procedure Gnatchop is\n \n begin\n    --  Add the directory where gnatchop is invoked in front of the path, if\n-   --  gnatchop is invoked with directory information. Only do this if the\n-   --  platform is not VMS, where the notion of path does not really exist.\n+   --  gnatchop is invoked with directory information.\n \n-   if not Hostparm.OpenVMS then\n-      declare\n-         Command : constant String := Command_Name;\n+   declare\n+      Command : constant String := Command_Name;\n \n-      begin\n-         for Index in reverse Command'Range loop\n-            if Command (Index) = Directory_Separator then\n-               declare\n-                  Absolute_Dir : constant String :=\n-                                   Normalize_Pathname\n-                                     (Command (Command'First .. Index));\n-                  PATH         : constant String :=\n-                                   Absolute_Dir\n-                                   & Path_Separator\n-                                   & Getenv (\"PATH\").all;\n-               begin\n-                  Setenv (\"PATH\", PATH);\n-               end;\n+   begin\n+      for Index in reverse Command'Range loop\n+         if Command (Index) = Directory_Separator then\n+            declare\n+               Absolute_Dir : constant String :=\n+                                Normalize_Pathname\n+                                  (Command (Command'First .. Index));\n+               PATH         : constant String :=\n+                                Absolute_Dir\n+                                & Path_Separator\n+                                & Getenv (\"PATH\").all;\n+            begin\n+               Setenv (\"PATH\", PATH);\n+            end;\n \n-               exit;\n-            end if;\n-         end loop;\n-      end;\n-   end if;\n+            exit;\n+         end if;\n+      end loop;\n+   end;\n \n    --  Process command line options and initialize global variables\n "}, {"sha": "9cca2d83ea845ce5082f00b7194c90041ef2a1fd", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 119, "deletions": 174, "changes": 293, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -26,7 +26,6 @@\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n with Csets;\n-with Hostparm; use Hostparm;\n with Makeutl;  use Makeutl;\n with MLib.Tgt; use MLib.Tgt;\n with MLib.Utl;\n@@ -66,8 +65,8 @@ procedure GNATCmd is\n    Current_Verbosity : Prj.Verbosity := Prj.Default;\n    Tool_Package_Name : Name_Id       := No_Name;\n \n-   B_Start : String_Ptr    := new String'(\"b~\");\n-   --  Prefix of binder generated file, changed to b__ for VMS\n+   B_Start : constant String := \"b~\";\n+   --  Prefix of binder generated file, changed to b__ for gprbuild\n \n    Project_Tree : constant Project_Tree_Ref :=\n                     new Project_Tree_Data (Is_Root_Tree => True);\n@@ -192,8 +191,7 @@ procedure GNATCmd is\n    --  The index of the command in the arguments of the GNAT driver\n \n    My_Exit_Status : Exit_Status := Success;\n-   --  The exit status of the spawned tool. Used to set the correct VMS\n-   --  exit status.\n+   --  The exit status of the spawned tool.\n \n    Current_Work_Dir : constant String := Get_Current_Dir;\n    --  The path of the working directory\n@@ -203,9 +201,6 @@ procedure GNATCmd is\n    --  indicate that the underlying tool (gnatcheck, gnatpp or gnatmetric)\n    --  should be invoked for all sources of all projects.\n \n-   Max_OpenVMS_Logical_Length : constant Integer := 255;\n-   --  The maximum length of OpenVMS logicals\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -452,7 +447,7 @@ procedure GNATCmd is\n                            Add_To_Response_File\n                              (Get_Name_String\n                                 (Proj.Project.Object_Directory.Name) &\n-                              B_Start.all                            &\n+                              B_Start                                &\n                               MLib.Fil.Ext_To\n                                 (Get_Name_String\n                                    (Project_Tree.Shared.String_Elements.Table\n@@ -465,7 +460,6 @@ procedure GNATCmd is\n                            --  such files.\n \n                            if not Is_Regular_File (Name_Buffer (1 .. Name_Len))\n-                             and then B_Start.all /= \"b__\"\n                            then\n                               Add_To_Response_File\n                                 (Get_Name_String\n@@ -491,7 +485,7 @@ procedure GNATCmd is\n                            Add_To_Response_File\n                              (Get_Name_String\n                                 (Proj.Project.Object_Directory.Name)      &\n-                              B_Start.all                                 &\n+                              B_Start                                     &\n                               Get_Name_String (Proj.Project.Library_Name) &\n                               \".ci\");\n \n@@ -501,7 +495,6 @@ procedure GNATCmd is\n                            --  such files.\n \n                            if not Is_Regular_File (Name_Buffer (1 .. Name_Len))\n-                               and then B_Start.all /= \"b__\"\n                            then\n                               Add_To_Response_File\n                                 (Get_Name_String\n@@ -1429,179 +1422,154 @@ begin\n       Add_Str_To_Name_Buffer (Argument (J));\n    end loop;\n \n-   --  On OpenVMS, setenv creates a logical whose length is limited to\n-   --  255 bytes.\n-\n-   if OpenVMS and then Name_Len > Max_OpenVMS_Logical_Length then\n-      Name_Buffer (Max_OpenVMS_Logical_Length - 2\n-                     .. Max_OpenVMS_Logical_Length) := \"...\";\n-      Name_Len := Max_OpenVMS_Logical_Length;\n-   end if;\n-\n    Setenv (\"GNAT_DRIVER_COMMAND_LINE\", Name_Buffer (1 .. Name_Len));\n \n    --  Add the directory where the GNAT driver is invoked in front of the path,\n-   --  if the GNAT driver is invoked with directory information. Do not do this\n-   --  for VMS, where the notion of path does not really exist.\n+   --  if the GNAT driver is invoked with directory information.\n \n-   if not OpenVMS then\n-      declare\n-         Command : constant String := Command_Name;\n-\n-      begin\n-         for Index in reverse Command'Range loop\n-            if Command (Index) = Directory_Separator then\n-               declare\n-                  Absolute_Dir : constant String :=\n-                                   Normalize_Pathname\n-                                     (Command (Command'First .. Index));\n-\n-                  PATH : constant String :=\n-                           Absolute_Dir & Path_Separator & Getenv (\"PATH\").all;\n+   declare\n+      Command : constant String := Command_Name;\n+   begin\n+      for Index in reverse Command'Range loop\n+         if Command (Index) = Directory_Separator then\n+            declare\n+               Absolute_Dir : constant String :=\n+                                Normalize_Pathname\n+                                  (Command (Command'First .. Index));\n \n-               begin\n-                  Setenv (\"PATH\", PATH);\n-               end;\n+               PATH : constant String :=\n+                        Absolute_Dir & Path_Separator & Getenv (\"PATH\").all;\n \n-               exit;\n-            end if;\n-         end loop;\n-      end;\n-   end if;\n+            begin\n+               Setenv (\"PATH\", PATH);\n+            end;\n \n-   --  If on VMS, or if VMS emulation is on, convert VMS style /qualifiers,\n-   --  filenames and pathnames to Unix style.\n+            exit;\n+         end if;\n+      end loop;\n+   end;\n \n-   if Hostparm.OpenVMS\n-     or else To_Lower (Getenv (\"EMULATE_VMS\").all) = \"true\"\n-   then\n-      VMS_Conversion (The_Command);\n+   --  Scan the command line\n \n-      B_Start := new String'(\"b__\");\n+   --  First, scan to detect --version and/or --help\n \n-   --  If not on VMS, scan the command line directly\n+   Check_Version_And_Help (\"GNAT\", \"1996\");\n \n-   else\n-      --  First, scan to detect --version and/or --help\n+   begin\n+      loop\n+         if Command_Arg <= Argument_Count\n+           and then Argument (Command_Arg) = \"-v\"\n+         then\n+            Verbose_Mode := True;\n+            Command_Arg := Command_Arg + 1;\n \n-      Check_Version_And_Help (\"GNAT\", \"1996\");\n+         elsif Command_Arg <= Argument_Count\n+           and then Argument (Command_Arg) = \"-dn\"\n+         then\n+            Keep_Temporary_Files := True;\n+            Command_Arg := Command_Arg + 1;\n \n-      begin\n-         loop\n-            if Command_Arg <= Argument_Count\n-              and then Argument (Command_Arg) = \"-v\"\n-            then\n-               Verbose_Mode := True;\n-               Command_Arg := Command_Arg + 1;\n+         else\n+            exit;\n+         end if;\n+      end loop;\n \n-            elsif Command_Arg <= Argument_Count\n-              and then Argument (Command_Arg) = \"-dn\"\n-            then\n-               Keep_Temporary_Files := True;\n-               Command_Arg := Command_Arg + 1;\n+      --  If there is no command, just output the usage\n \n-            else\n-               exit;\n-            end if;\n-         end loop;\n+      if Command_Arg > Argument_Count then\n+         Non_VMS_Usage;\n+         return;\n+      end if;\n \n-         --  If there is no command, just output the usage\n+      The_Command := Real_Command_Type'Value (Argument (Command_Arg));\n \n-         if Command_Arg > Argument_Count then\n-            Non_VMS_Usage;\n-            return;\n-         end if;\n+      if Command_List (The_Command).VMS_Only then\n+         Non_VMS_Usage;\n+         Fail\n+           (\"command \"\"\"\n+            & Command_List (The_Command).Cname.all\n+            & \"\"\" can only be used on VMS\");\n+      end if;\n \n-         The_Command := Real_Command_Type'Value (Argument (Command_Arg));\n+   exception\n+      when Constraint_Error =>\n \n-         if Command_List (The_Command).VMS_Only then\n-            Non_VMS_Usage;\n-            Fail\n-              (\"command \"\"\"\n-               & Command_List (The_Command).Cname.all\n-               & \"\"\" can only be used on VMS\");\n-         end if;\n+         --  Check if it is an alternate command\n \n-      exception\n-         when Constraint_Error =>\n+         declare\n+            Alternate : Alternate_Command;\n \n-            --  Check if it is an alternate command\n+         begin\n+            Alternate := Alternate_Command'Value\n+                           (Argument (Command_Arg));\n+            The_Command := Corresponding_To (Alternate);\n \n-            declare\n-               Alternate : Alternate_Command;\n+         exception\n+            when Constraint_Error =>\n+               Non_VMS_Usage;\n+               Fail (\"unknown command: \" & Argument (Command_Arg));\n+         end;\n+   end;\n \n-            begin\n-               Alternate := Alternate_Command'Value\n-                              (Argument (Command_Arg));\n-               The_Command := Corresponding_To (Alternate);\n-\n-            exception\n-               when Constraint_Error =>\n-                  Non_VMS_Usage;\n-                  Fail (\"unknown command: \" & Argument (Command_Arg));\n-            end;\n-      end;\n+   --  Get the arguments from the command line and from the eventual\n+   --  argument file(s) specified on the command line.\n \n-      --  Get the arguments from the command line and from the eventual\n-      --  argument file(s) specified on the command line.\n+   for Arg in Command_Arg + 1 .. Argument_Count loop\n+      declare\n+         The_Arg : constant String := Argument (Arg);\n \n-      for Arg in Command_Arg + 1 .. Argument_Count loop\n-         declare\n-            The_Arg : constant String := Argument (Arg);\n+      begin\n+         --  Check if an argument file is specified\n \n-         begin\n-            --  Check if an argument file is specified\n+         if The_Arg (The_Arg'First) = '@' then\n+            declare\n+               Arg_File : Ada.Text_IO.File_Type;\n+               Line     : String (1 .. 256);\n+               Last     : Natural;\n \n-            if The_Arg (The_Arg'First) = '@' then\n-               declare\n-                  Arg_File : Ada.Text_IO.File_Type;\n-                  Line     : String (1 .. 256);\n-                  Last     : Natural;\n+            begin\n+               --  Open the file and fail if the file cannot be found\n \n                begin\n-                  --  Open the file and fail if the file cannot be found\n-\n-                  begin\n-                     Open\n-                       (Arg_File, In_File,\n-                        The_Arg (The_Arg'First + 1 .. The_Arg'Last));\n-\n-                  exception\n-                     when others =>\n-                        Put (Standard_Error, \"Cannot open argument file \"\"\");\n-                        Put (Standard_Error,\n-                             The_Arg (The_Arg'First + 1 .. The_Arg'Last));\n-                        Put_Line (Standard_Error, \"\"\"\");\n-                        raise Error_Exit;\n-                  end;\n+                  Open\n+                    (Arg_File, In_File,\n+                     The_Arg (The_Arg'First + 1 .. The_Arg'Last));\n+\n+               exception\n+                  when others =>\n+                     Put (Standard_Error, \"Cannot open argument file \"\"\");\n+                     Put (Standard_Error,\n+                          The_Arg (The_Arg'First + 1 .. The_Arg'Last));\n+                     Put_Line (Standard_Error, \"\"\"\");\n+                     raise Error_Exit;\n+               end;\n \n-                  --  Read line by line and put the content of each non-\n-                  --  empty line in the Last_Switches table.\n+               --  Read line by line and put the content of each non-\n+               --  empty line in the Last_Switches table.\n \n-                  while not End_Of_File (Arg_File) loop\n-                     Get_Line (Arg_File, Line, Last);\n+               while not End_Of_File (Arg_File) loop\n+                  Get_Line (Arg_File, Line, Last);\n \n-                     if Last /= 0 then\n-                        Last_Switches.Increment_Last;\n-                        Last_Switches.Table (Last_Switches.Last) :=\n-                          new String'(Line (1 .. Last));\n-                     end if;\n-                  end loop;\n+                  if Last /= 0 then\n+                     Last_Switches.Increment_Last;\n+                     Last_Switches.Table (Last_Switches.Last) :=\n+                       new String'(Line (1 .. Last));\n+                  end if;\n+               end loop;\n \n-                  Close (Arg_File);\n-               end;\n+               Close (Arg_File);\n+            end;\n \n-            else\n-               --  It is not an argument file; just put the argument in\n-               --  the Last_Switches table.\n+         else\n+            --  It is not an argument file; just put the argument in\n+            --  the Last_Switches table.\n \n-               Last_Switches.Increment_Last;\n-               Last_Switches.Table (Last_Switches.Last) :=\n-                 new String'(The_Arg);\n-            end if;\n-         end;\n-      end loop;\n-   end if;\n+            Last_Switches.Increment_Last;\n+            Last_Switches.Table (Last_Switches.Last) :=\n+              new String'(The_Arg);\n+         end if;\n+      end;\n+   end loop;\n \n    declare\n       Program   : String_Access;\n@@ -2618,20 +2586,6 @@ begin\n          if ASIS_Main /= null then\n             Get_Closure;\n \n-            --  On VMS, set up the env var again for source dirs file. This is\n-            --  because the call to gnatmake has set this env var to another\n-            --  file that has now been deleted.\n-\n-            if Hostparm.OpenVMS then\n-\n-               --  First make sure that the recorded file names are empty\n-\n-               Prj.Env.Initialize (Project_Tree);\n-\n-               Prj.Env.Set_Ada_Paths\n-                 (Project, Project_Tree, Including_Libraries => False);\n-            end if;\n-\n          --  For gnat check, gnat sync, gnat pretty, gnat metric, gnat list,\n          --  and gnat stack, if no file has been put on the command line, call\n          --  tool with all the sources of the main project.\n@@ -2726,14 +2680,5 @@ exception\n          Delete_Temp_Config_Files;\n       end if;\n \n-      --  Since GNATCmd is normally called from DCL (the VMS shell), it must\n-      --  return an understandable VMS exit status. However the exit status\n-      --  returned *to* GNATCmd is a Posix style code, so we test it and return\n-      --  just a simple success or failure on VMS.\n-\n-      if Hostparm.OpenVMS and then My_Exit_Status /= Success then\n-         Set_Exit_Status (Failure);\n-      else\n-         Set_Exit_Status (My_Exit_Status);\n-      end if;\n+      Set_Exit_Status (My_Exit_Status);\n end GNATCmd;"}, {"sha": "c270e6016322555944ed230d6c5f06d650f996e0", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -191,9 +191,9 @@ procedure Gnatls is\n    --  Returns the capitalized image of Restriction\n \n    function Normalize (Path : String) return String;\n-   --  Returns a normalized path name, except on VMS where the argument Path\n-   --  is returned, to keep the host pathname syntax. On Windows, the directory\n-   --  separators are set to '\\' in Normalize_Pathname.\n+   --  Returns a normalized path name.\n+   --  On Windows, the directory separators are set to '\\' in\n+   --  Normalize_Pathname.\n \n    ------------------------------------------\n    -- GNATDIST specific output subprograms --\n@@ -839,11 +839,7 @@ procedure Gnatls is\n \n    function Normalize (Path : String) return String is\n    begin\n-      if OpenVMS_On_Target then\n-         return Path;\n-      else\n-         return Normalize_Pathname (Path);\n-      end if;\n+      return Normalize_Pathname (Path);\n    end Normalize;\n \n    --------------------------------\n@@ -1632,8 +1628,8 @@ begin\n \n    Osint.Add_Default_Search_Dirs;\n \n-   --  Get the target parameters to know if the target is OpenVMS, but only if\n-   --  switch -nostdinc was not specified.\n+   --  Get the target parameters, but only if switch -nostdinc was not\n+   --  specified. Likely not strictly needed now that VMS is baselined???\n \n    if not Opt.No_Stdinc then\n       Get_Target_Parameters;"}, {"sha": "dd485a6b8b3ac19ceab4915fbd16659cc7264881", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 23, "deletions": 29, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -30,7 +30,6 @@ with GNAT.Command_Line; use GNAT.Command_Line;\n with GNAT.Dynamic_Tables;\n with GNAT.OS_Lib;       use GNAT.OS_Lib;\n \n-with Hostparm;\n with Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n@@ -549,35 +548,30 @@ procedure Gnatname is\n begin\n    --  Add the directory where gnatname is invoked in front of the\n    --  path, if gnatname is invoked with directory information.\n-   --  Only do this if the platform is not VMS, where the notion of path\n-   --  does not really exist.\n \n-   if not Hostparm.OpenVMS then\n-      declare\n-         Command : constant String := Command_Name;\n-\n-      begin\n-         for Index in reverse Command'Range loop\n-            if Command (Index) = Directory_Separator then\n-               declare\n-                  Absolute_Dir : constant String :=\n-                                   Normalize_Pathname\n-                                     (Command (Command'First .. Index));\n-\n-                  PATH         : constant String :=\n-                                   Absolute_Dir &\n-                                   Path_Separator &\n-                                   Getenv (\"PATH\").all;\n-\n-               begin\n-                  Setenv (\"PATH\", PATH);\n-               end;\n-\n-               exit;\n-            end if;\n-         end loop;\n-      end;\n-   end if;\n+   declare\n+      Command : constant String := Command_Name;\n+   begin\n+      for Index in reverse Command'Range loop\n+         if Command (Index) = Directory_Separator then\n+            declare\n+               Absolute_Dir : constant String :=\n+                                Normalize_Pathname\n+                                  (Command (Command'First .. Index));\n+\n+               PATH         : constant String :=\n+                                Absolute_Dir &\n+                                Path_Separator &\n+                                Getenv (\"PATH\").all;\n+\n+            begin\n+               Setenv (\"PATH\", PATH);\n+            end;\n+\n+            exit;\n+         end if;\n+      end loop;\n+   end;\n \n    --  Initialize tables\n "}, {"sha": "b98f3538bd47f48e610d91b0adede8174f2fcac3", "filename": "gcc/ada/krunch.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fkrunch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fkrunch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fkrunch.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,8 +29,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Hostparm;\n-\n procedure Krunch\n   (Buffer        : in out String;\n    Len           : in out Natural;\n@@ -128,9 +126,7 @@ begin\n      and then (B1 = 'a' or else B1 = 'g' or else B1 = 'i' or else B1 = 's')\n      and then Len <= Maxlen\n    then\n-      --  When VMS is the host, it is always also the target\n-\n-      if Hostparm.OpenVMS or else VMS_On_Target then\n+      if VMS_On_Target then\n          Len := Len + 1;\n          Buffer (4 .. Len) := Buffer (3 .. Len - 1);\n          Buffer (2) := '_';"}, {"sha": "b71c28a2b1f1f9e6f5e46c6a08e941d21436ea2f", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 36, "deletions": 74, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -2256,6 +2256,7 @@ package body Make is\n       Is_Main_Source : Boolean;\n       Args           : Argument_List)\n    is\n+      pragma Unreferenced (Is_Main_Source);\n    begin\n       Arguments_Project := No_Project;\n       Last_Argument := 0;\n@@ -2424,29 +2425,6 @@ package body Make is\n          end;\n       end if;\n \n-      --  For VMS, when compiling the main source, add switch\n-      --  -mdebug-main=_ada_ so that the executable can be debugged\n-      --  by the standard VMS debugger.\n-\n-      if not No_Main_Subprogram\n-        and then Targparm.OpenVMS_On_Target\n-        and then Is_Main_Source\n-      then\n-         --  First, check if compilation will be invoked with -g\n-\n-         for J in 1 .. Last_Argument loop\n-            if Arguments (J)'Length >= 2\n-              and then Arguments (J) (1 .. 2) = \"-g\"\n-              and then (Arguments (J)'Length < 5\n-                        or else Arguments (J) (1 .. 5) /= \"-gnat\")\n-            then\n-               Add_Arguments\n-                 ((1 => new String'(\"-mdebug-main=_ada_\")));\n-               exit;\n-            end if;\n-         end loop;\n-      end if;\n-\n       --  Set Output_Is_Object, depending if there is a -S switch.\n       --  If the bind step is not performed, and there is a -S switch,\n       --  then we will not check for a valid object file.\n@@ -2650,8 +2628,8 @@ package body Make is\n          --  The loop here is a work-around for a problem on VMS; in some\n          --  circumstances (shared library and several executables, for\n          --  example), there are child processes other than compilation\n-         --  processes that are received. Until this problem is resolved,\n-         --  we will ignore such processes.\n+         --  processes that are received. ??? Revisit now that VMS is no\n+         --  longer supported.\n \n          loop\n             Wait_Process (Pid, OK);\n@@ -4231,9 +4209,7 @@ package body Make is\n                if\n                  Library_Projs.Table (Index).Extended_By = No_Project\n                then\n-                  if Library_Projs.Table (Index).Library_Kind = Static\n-                    and then not Targparm.OpenVMS_On_Target\n-                  then\n+                  if Library_Projs.Table (Index).Library_Kind = Static then\n                      Linker_Switches.Increment_Last;\n                      Linker_Switches.Table (Linker_Switches.Last) :=\n                        new String'\n@@ -5826,17 +5802,6 @@ package body Make is\n \n             Osint.Add_Default_Search_Dirs;\n \n-            --  Get the target parameters, so that the correct binder generated\n-            --  files are generated if OpenVMS is the target.\n-\n-            begin\n-               Targparm.Get_Target_Parameters;\n-\n-            exception\n-               when Unrecoverable_Error =>\n-                  Make_Failed (\"*** make failed.\");\n-            end;\n-\n             --  And bind and or link the library\n \n             MLib.Prj.Build_Library\n@@ -6438,45 +6403,42 @@ package body Make is\n \n       --  Add the directory where gnatmake is invoked in front of the path,\n       --  if gnatmake is invoked from a bin directory or with directory\n-      --  information. Only do this if the platform is not VMS, where the\n-      --  notion of path does not really exist.\n+      --  information.\n \n-      if not OpenVMS then\n-         declare\n-            Prefix  : constant String := Executable_Prefix_Path;\n-            Command : constant String := Command_Name;\n+      declare\n+         Prefix  : constant String := Executable_Prefix_Path;\n+         Command : constant String := Command_Name;\n \n-         begin\n-            if Prefix'Length > 0 then\n-               declare\n-                  PATH : constant String :=\n-                    Prefix & Directory_Separator & \"bin\" & Path_Separator &\n-                      Getenv (\"PATH\").all;\n-               begin\n-                  Setenv (\"PATH\", PATH);\n-               end;\n+      begin\n+         if Prefix'Length > 0 then\n+            declare\n+               PATH : constant String :=\n+                 Prefix & Directory_Separator & \"bin\" & Path_Separator &\n+                   Getenv (\"PATH\").all;\n+            begin\n+               Setenv (\"PATH\", PATH);\n+            end;\n \n-            else\n-               for Index in reverse Command'Range loop\n-                  if Command (Index) = Directory_Separator then\n-                     declare\n-                        Absolute_Dir : constant String :=\n-                                         Normalize_Pathname\n-                                           (Command (Command'First .. Index));\n-                        PATH         : constant String :=\n-                                         Absolute_Dir &\n-                                         Path_Separator &\n-                                         Getenv (\"PATH\").all;\n-                     begin\n-                        Setenv (\"PATH\", PATH);\n-                     end;\n+         else\n+            for Index in reverse Command'Range loop\n+               if Command (Index) = Directory_Separator then\n+                  declare\n+                     Absolute_Dir : constant String :=\n+                                      Normalize_Pathname\n+                                        (Command (Command'First .. Index));\n+                     PATH         : constant String :=\n+                                      Absolute_Dir &\n+                                      Path_Separator &\n+                                      Getenv (\"PATH\").all;\n+                  begin\n+                     Setenv (\"PATH\", PATH);\n+                  end;\n \n-                     exit;\n-                  end if;\n-               end loop;\n-            end if;\n-         end;\n-      end if;\n+                  exit;\n+               end if;\n+            end loop;\n+         end if;\n+      end;\n \n       --  Scan the switches and arguments\n "}, {"sha": "7d4b762f9596206f5d4a4b806ff50125238ffa3b", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -29,7 +29,6 @@ with Debug;\n with Err_Vars; use Err_Vars;\n with Errutil;\n with Fname;\n-with Hostparm;\n with Osint;    use Osint;\n with Output;   use Output;\n with Opt;      use Opt;\n@@ -740,12 +739,6 @@ package body Makeutl is\n    --  Beginning of Executable_Prefix_Path\n \n    begin\n-      --  For VMS, the path returned is always /gnu/\n-\n-      if Hostparm.OpenVMS then\n-         return \"/gnu/\";\n-      end if;\n-\n       --  First determine if a path prefix was placed in front of the\n       --  executable name.\n "}, {"sha": "869990de95a86c8d9c3d3593e71cc9296ab64318", "filename": "gcc/ada/memtrack.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmemtrack.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmemtrack.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmemtrack.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -60,7 +60,6 @@\n --    GNU/Linux\n --    HP-UX\n --    Solaris\n---    Alpha OpenVMS\n \n --  NOTE FOR FUTURE PLATFORMS SUPPORT: It is assumed that type Duration is\n --  64 bit. If the need arises to support architectures where this assumption"}, {"sha": "3686be317fa8a9c6d065648034b2f2ec1e32656c", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 10, "deletions": 54, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2013, AdaCore                     --\n+--                     Copyright (C) 2001-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,6 @@ with Sinput.P;\n with Snames;   use Snames;\n with Switch;   use Switch;\n with Table;\n-with Targparm; use Targparm;\n with Tempdir;\n with Types;    use Types;\n \n@@ -61,8 +60,8 @@ package body MLib.Prj is\n \n    ALI_Suffix : constant String := \".ali\";\n \n-   B_Start : String_Ptr := new String'(\"b~\");\n-   --  Prefix of bind file, changed to b__ for VMS\n+   B_Start : constant String := \"b~\";\n+   --  Prefix of bind file\n \n    S_Osinte_Ads : File_Name_Type := No_File;\n    --  Name_Id for \"s-osinte.ads\"\n@@ -310,9 +309,6 @@ package body MLib.Prj is\n       Libgnarl_Needed   : Yes_No_Unknown := For_Project.Libgnarl_Needed;\n       --  Set True if library needs to be linked with libgnarl\n \n-      Libdecgnat_Needed : Boolean := False;\n-      --  On OpenVMS, set True if library needs to be linked with libdecgnat\n-\n       Object_Directory_Path : constant String :=\n                                 Get_Name_String\n                                   (For_Project.Object_Directory.Display_Name);\n@@ -367,9 +363,7 @@ package body MLib.Prj is\n       procedure Check_Libs (ALI_File : String; Main_Project : Boolean);\n       --  Set Libgnarl_Needed if the ALI_File indicates that there is a need\n       --  to link with -lgnarl (this is the case when there is a dependency\n-      --  on s-osinte.ads). On OpenVMS, set Libdecgnat_Needed if the ALI file\n-      --  indicates that there is a need to link with -ldecgnat (this is the\n-      --  case when there is a dependency on dec.ads).\n+      --  on s-osinte.ads).\n \n       procedure Process (The_ALI : File_Name_Type);\n       --  Check if the closure of a library unit which is or should be in the\n@@ -503,11 +497,7 @@ package body MLib.Prj is\n          Id       : ALI.ALI_Id;\n \n       begin\n-         if Libgnarl_Needed /= Yes\n-           or else\n-            (Main_Project\n-              and then OpenVMS_On_Target)\n-         then\n+         if Libgnarl_Needed /= Yes then\n             --  Scan the ALI file\n \n             Name_Len := ALI_File'Length;\n@@ -536,11 +526,6 @@ package body MLib.Prj is\n                   else\n                      exit;\n                   end if;\n-\n-               elsif OpenVMS_On_Target then\n-                  if ALI.Sdep.Table (Index).Sfile = S_Dec_Ads then\n-                     Libdecgnat_Needed := True;\n-                  end if;\n                end if;\n             end loop;\n          end if;\n@@ -857,13 +842,8 @@ package body MLib.Prj is\n             Arguments (1) := No_Main;\n             Arguments (2) := Output_Switch;\n \n-            if OpenVMS_On_Target then\n-               B_Start := new String'(\"b__\");\n-            end if;\n-\n             Add_Argument\n-              (B_Start.all\n-               & Get_Name_String (For_Project.Library_Name) & \".adb\");\n+              (B_Start & Get_Name_String (For_Project.Library_Name) & \".adb\");\n \n             --  Make sure that the init procedure is never \"adainit\"\n \n@@ -1220,13 +1200,8 @@ package body MLib.Prj is\n             Arguments (1) := Compile_Switch;\n             Arguments (2) := No_Warning;\n \n-            if OpenVMS_On_Target then\n-               B_Start := new String'(\"b__\");\n-            end if;\n-\n             Add_Argument\n-              (B_Start.all\n-               & Get_Name_String (For_Project.Library_Name) & \".adb\");\n+              (B_Start & Get_Name_String (For_Project.Library_Name) & \".adb\");\n \n             --  If necessary, add the PIC option\n \n@@ -1429,7 +1404,7 @@ package body MLib.Prj is\n                            if In_Main_Object_Directory\n                              or else Last < 5\n                              or else\n-                               C_Filename (1 .. B_Start'Length) /= B_Start.all\n+                               C_Filename (1 .. B_Start'Length) /= B_Start\n                            then\n                               Name_Len := 0;\n                               Add_Str_To_Name_Buffer (C_Filename);\n@@ -1458,7 +1433,7 @@ package body MLib.Prj is\n                                           (Last >= 5\n                                              and then\n                                                C_Filename (1 .. B_Start'Length)\n-                                                 = B_Start.all);\n+                                                 = B_Start);\n \n                                     if Is_Regular_File (ALI_Path) then\n \n@@ -1624,21 +1599,6 @@ package body MLib.Prj is\n             end if;\n          end if;\n \n-         if Libdecgnat_Needed then\n-            Opts.Increment_Last;\n-\n-            Opts.Table (Opts.Last) :=\n-              new String'(\"-L\" & Lib_Directory & \"/../declib\");\n-\n-            Opts.Increment_Last;\n-\n-            if The_Build_Mode = Static then\n-               Opts.Table (Opts.Last) := new String'(\"-ldecgnat\");\n-            else\n-               Opts.Table (Opts.Last) := new String'(Shared_Lib (\"decgnat\"));\n-            end if;\n-         end if;\n-\n          Opts.Increment_Last;\n \n          if The_Build_Mode = Static then\n@@ -2131,10 +2091,6 @@ package body MLib.Prj is\n                Object_Dir : Dir_Type;\n \n             begin\n-               if OpenVMS_On_Target then\n-                  B_Start := new String'(\"b__\");\n-               end if;\n-\n                --  If the library file does not exist, then the time stamp will\n                --  be Empty_Time_Stamp, earlier than any other time stamp.\n \n@@ -2152,7 +2108,7 @@ package body MLib.Prj is\n                   --  generated file.\n \n                   if Is_Obj (Name_Buffer (1 .. Name_Len))\n-                    and then Name_Buffer (1 .. B_Start'Length) /= B_Start.all\n+                    and then Name_Buffer (1 .. B_Start'Length) /= B_Start\n                   then\n                      --  Get the object file time stamp\n "}, {"sha": "1c34efeee22b5d15ef916c6ee1aa8134684f751a", "filename": "gcc/ada/mlib.adb", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmlib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmlib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2009, AdaCore                     --\n+--                     Copyright (C) 1999-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,7 +27,6 @@ with Ada.Characters.Handling; use Ada.Characters.Handling;\n with Interfaces.C.Strings;\n with System;\n \n-with Hostparm;\n with Opt;\n with Output; use Output;\n \n@@ -459,12 +458,4 @@ package body MLib is\n       return Separate_Paths;\n    end Separate_Run_Path_Options;\n \n---  Package elaboration\n-\n-begin\n-   --  Copy_Attributes always fails on VMS\n-\n-   if Hostparm.OpenVMS then\n-      Preserve := None;\n-   end if;\n end MLib;"}, {"sha": "c8f32287657d228f21356220e2de36833cca8601", "filename": "gcc/ada/mlib.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmlib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Fmlib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib.ads?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2009, AdaCore                     --\n+--                     Copyright (C) 1999-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -91,7 +91,6 @@ package MLib is\n private\n \n    Preserve : Attribute := Time_Stamps;\n-   --  Used by Copy_ALI_Files. Changed to None for OpenVMS, because\n-   --  Copy_Attributes always fails on VMS.\n+   --  Used by Copy_ALI_Files.\n \n end MLib;"}, {"sha": "4936c26c5aaea80ecc5fd7fea0c7bc442386e2b5", "filename": "gcc/ada/tempdir.adb", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Ftempdir.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62883e6b17b85341fbc9b35c51bc076d39dcec23/gcc%2Fada%2Ftempdir.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftempdir.adb?ref=62883e6b17b85341fbc9b35c51bc076d39dcec23", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,17 +25,15 @@\n \n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n-with Hostparm; use Hostparm;\n with Opt;      use Opt;\n with Output;   use Output;\n \n package body Tempdir is\n \n    Tmpdir_Needs_To_Be_Displayed : Boolean := True;\n \n-   Tmpdir    : constant String := \"TMPDIR\";\n-   Gnutmpdir : constant String := \"GNUTMPDIR\";\n-   Temp_Dir  : String_Access   := new String'(\"\");\n+   Tmpdir   : constant String := \"TMPDIR\";\n+   Temp_Dir : String_Access   := new String'(\"\");\n \n    ----------------------\n    -- Create_Temp_File --\n@@ -118,21 +116,7 @@ package body Tempdir is\n \n    begin\n       if Status then\n-\n-         --  On VMS, if GNUTMPDIR is defined, use it\n-\n-         if OpenVMS then\n-            Dir := Getenv (Gnutmpdir);\n-\n-            --  Otherwise, if GNUTMPDIR is not defined, try TMPDIR\n-\n-            if Dir'Length = 0 then\n-               Dir := Getenv (Tmpdir);\n-            end if;\n-\n-         else\n-            Dir := Getenv (Tmpdir);\n-         end if;\n+         Dir := Getenv (Tmpdir);\n       end if;\n \n       Free (Temp_Dir);"}]}