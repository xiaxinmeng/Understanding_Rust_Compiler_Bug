{"sha": "d74fd3c72be778a1ff4663bf73443bae771d4ce1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc0ZmQzYzcyYmU3NzhhMWZmNDY2M2JmNzM0NDNiYWU3NzFkNGNlMQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2014-05-26T20:56:45Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2014-05-26T20:56:45Z"}, "message": "Introduce xrealloc, use it.\n\n2014-05-26  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* libgfortran.h (xrealloc): New prototype.\n\t* runtime/memory.c (xrealloc): New function.\n\t* io/fbuf.c (fbuf_alloc): Use xrealloc.\n\t* io/list_read.c (push_char_default): Likewise.\n\t(push_char4): Likewise.\n\nFrom-SVN: r210948", "tree": {"sha": "3876dc747d154274cf385e6bca409643f21a1cae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3876dc747d154274cf385e6bca409643f21a1cae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d74fd3c72be778a1ff4663bf73443bae771d4ce1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d74fd3c72be778a1ff4663bf73443bae771d4ce1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d74fd3c72be778a1ff4663bf73443bae771d4ce1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d74fd3c72be778a1ff4663bf73443bae771d4ce1/comments", "author": null, "committer": null, "parents": [{"sha": "b4fb1c2135318e40127da0194c6239eed3d3c4d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4fb1c2135318e40127da0194c6239eed3d3c4d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4fb1c2135318e40127da0194c6239eed3d3c4d6"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "ebcae7f0bcc6bb89228e690a7f646b436a18336b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74fd3c72be778a1ff4663bf73443bae771d4ce1/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74fd3c72be778a1ff4663bf73443bae771d4ce1/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=d74fd3c72be778a1ff4663bf73443bae771d4ce1", "patch": "@@ -1,3 +1,11 @@\n+2014-05-26  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* libgfortran.h (xrealloc): New prototype.\n+\t* runtime/memory.c (xrealloc): New function.\n+\t* io/fbuf.c (fbuf_alloc): Use xrealloc.\n+\t* io/list_read.c (push_char_default): Likewise.\n+\t(push_char4): Likewise.\n+\n 2014-05-26  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/61310"}, {"sha": "e24da62d99c1105c4312d98fa3d8ea3bf6d89f8e", "filename": "libgfortran/io/fbuf.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74fd3c72be778a1ff4663bf73443bae771d4ce1/libgfortran%2Fio%2Ffbuf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74fd3c72be778a1ff4663bf73443bae771d4ce1/libgfortran%2Fio%2Ffbuf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffbuf.c?ref=d74fd3c72be778a1ff4663bf73443bae771d4ce1", "patch": "@@ -121,10 +121,7 @@ fbuf_alloc (gfc_unit * u, int len)\n     {\n       /* Round up to nearest multiple of the current buffer length.  */\n       newlen = ((u->fbuf->pos + len) / u->fbuf->len + 1) * u->fbuf->len;\n-      dest = realloc (u->fbuf->buf, newlen);\n-      if (dest == NULL)\n-\treturn NULL;\n-      u->fbuf->buf = dest;\n+      u->fbuf->buf = xrealloc (u->fbuf->buf, newlen);\n       u->fbuf->len = newlen;\n     }\n "}, {"sha": "a7e4f888f1ca073719edd552d2a8f383987babe4", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74fd3c72be778a1ff4663bf73443bae771d4ce1/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74fd3c72be778a1ff4663bf73443bae771d4ce1/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=d74fd3c72be778a1ff4663bf73443bae771d4ce1", "patch": "@@ -79,7 +79,7 @@ typedef unsigned char uchar;\n static void\n push_char_default (st_parameter_dt *dtp, int c)\n {\n-  char *new;\n+\n \n   if (dtp->u.p.saved_string == NULL)\n     {\n@@ -92,13 +92,11 @@ push_char_default (st_parameter_dt *dtp, int c)\n   if (dtp->u.p.saved_used >= dtp->u.p.saved_length)\n     {\n       dtp->u.p.saved_length = 2 * dtp->u.p.saved_length;\n-      new = realloc (dtp->u.p.saved_string, dtp->u.p.saved_length);\n-      if (new == NULL)\n-\tgenerate_error (&dtp->common, LIBERROR_OS, NULL);\n-      dtp->u.p.saved_string = new;\n+      dtp->u.p.saved_string = \n+\txrealloc (dtp->u.p.saved_string, dtp->u.p.saved_length);\n       \n       // Also this should not be necessary.\n-      memset (new + dtp->u.p.saved_used, 0, \n+      memset (dtp->u.p.saved_string + dtp->u.p.saved_used, 0, \n \t      dtp->u.p.saved_length - dtp->u.p.saved_used);\n \n     }\n@@ -126,10 +124,7 @@ push_char4 (st_parameter_dt *dtp, int c)\n   if (dtp->u.p.saved_used >= dtp->u.p.saved_length)\n     {\n       dtp->u.p.saved_length = 2 * dtp->u.p.saved_length;\n-      new = realloc (p, dtp->u.p.saved_length * sizeof (gfc_char4_t));\n-      if (new == NULL)\n-\tgenerate_error (&dtp->common, LIBERROR_OS, NULL);\n-      p = new;\n+      p = xrealloc (p, dtp->u.p.saved_length * sizeof (gfc_char4_t));\n       \n       memset4 (new + dtp->u.p.saved_used, 0, \n \t      dtp->u.p.saved_length - dtp->u.p.saved_used);"}, {"sha": "b3e8a2e7cfd7c1405b2195f035d72f59bd31572a", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74fd3c72be778a1ff4663bf73443bae771d4ce1/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74fd3c72be778a1ff4663bf73443bae771d4ce1/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=d74fd3c72be778a1ff4663bf73443bae771d4ce1", "patch": "@@ -771,6 +771,8 @@ internal_proto(xmalloc);\n extern void *xcalloc (size_t, size_t) __attribute__ ((malloc));\n internal_proto(xcalloc);\n \n+extern void *xrealloc (void *, size_t);\n+internal_proto(xrealloc);\n \n /* environ.c */\n "}, {"sha": "b18b50532c762ca19fe50824c94627fab634033b", "filename": "libgfortran/runtime/memory.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74fd3c72be778a1ff4663bf73443bae771d4ce1/libgfortran%2Fruntime%2Fmemory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74fd3c72be778a1ff4663bf73443bae771d4ce1/libgfortran%2Fruntime%2Fmemory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fmemory.c?ref=d74fd3c72be778a1ff4663bf73443bae771d4ce1", "patch": "@@ -58,3 +58,17 @@ xcalloc (size_t nmemb, size_t size)\n \n   return p;\n }\n+\n+\n+void *\n+xrealloc (void *ptr, size_t size)\n+{\n+  if (size == 0)\n+    size = 1;\n+\n+  void *newp = realloc (ptr, size);\n+  if (!newp)\n+    os_error (\"Memory allocation failure in xrealloc\");\n+\n+  return newp;\n+}"}]}