{"sha": "ee8c0889cdc4960ac1f6fa9e1322291bb145cff6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU4YzA4ODljZGM0OTYwYWMxZjZmYTllMTMyMjI5MWJiMTQ1Y2ZmNg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2015-03-26T04:07:21Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2015-03-26T04:07:21Z"}, "message": "re PR target/65569 (Fix for PR target/65240 causes a regression in building Spec for power4/power5/power6)\n\n2015-03-25  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/65569\n\t* config/rs6000/rs6000.md (extenddftf2_fprs): On VSX systems use\n\tXXLXOR to create 0.0.  On pre-VSX systems make sure the constant\n\t0.0 is correctly setup.\n\t(extenddftf2_internal): Likewise.\n\nFrom-SVN: r221683", "tree": {"sha": "f8bca2f0543f3731835379de20cc574bf158e79f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8bca2f0543f3731835379de20cc574bf158e79f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee8c0889cdc4960ac1f6fa9e1322291bb145cff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee8c0889cdc4960ac1f6fa9e1322291bb145cff6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee8c0889cdc4960ac1f6fa9e1322291bb145cff6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee8c0889cdc4960ac1f6fa9e1322291bb145cff6/comments", "author": null, "committer": null, "parents": [{"sha": "9c5b1bf7953f9717943e40241be26cfc2422cd04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c5b1bf7953f9717943e40241be26cfc2422cd04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c5b1bf7953f9717943e40241be26cfc2422cd04"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "5733d909d9fd1c08798c8d6f3bacce22dad66573", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee8c0889cdc4960ac1f6fa9e1322291bb145cff6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee8c0889cdc4960ac1f6fa9e1322291bb145cff6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee8c0889cdc4960ac1f6fa9e1322291bb145cff6", "patch": "@@ -1,3 +1,11 @@\n+2015-03-25  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/65569\n+\t* config/rs6000/rs6000.md (extenddftf2_fprs): On VSX systems use\n+\tXXLXOR to create 0.0.  On pre-VSX systems make sure the constant\n+\t0.0 is correctly setup.\n+\t(extenddftf2_internal): Likewise.\n+\n 2015-03-25  Sebastian Pop  <s.pop@samsung.com>\n \n \tPR tree-optimization/65177"}, {"sha": "da9628770570b2e87dff776c7fe7544f37875ec9", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee8c0889cdc4960ac1f6fa9e1322291bb145cff6/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee8c0889cdc4960ac1f6fa9e1322291bb145cff6/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=ee8c0889cdc4960ac1f6fa9e1322291bb145cff6", "patch": "@@ -8357,16 +8357,21 @@\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT \n    && TARGET_LONG_DOUBLE_128\"\n {\n-  operands[2] = CONST0_RTX (DFmode);\n-  /* Generate GOT reference early for SVR4 PIC.  */\n-  if (DEFAULT_ABI == ABI_V4 && flag_pic)\n-    operands[2] = validize_mem (force_const_mem (DFmode, operands[2]));\n+  /* VSX can create 0.0 directly, otherwise let rs6000_emit_move create\n+     the proper constant.  */\n+  if (TARGET_VSX)\n+    operands[2] = CONST0_RTX (DFmode);\n+  else\n+    {\n+      operands[2] = gen_reg_rtx (DFmode);\n+      rs6000_emit_move (operands[2], CONST0_RTX (DFmode), DFmode);\n+    }\n })\n \n (define_insn_and_split \"*extenddftf2_internal\"\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=m,Y,d,&d,r\")\n-       (float_extend:TF (match_operand:DF 1 \"input_operand\" \"d,r,md,md,rm\")))\n-   (use (match_operand:DF 2 \"zero_reg_mem_operand\" \"d,r,m,d,n\"))]\n+  [(set (match_operand:TF 0 \"nonimmediate_operand\" \"=m,Y,ws,d,&d,r\")\n+       (float_extend:TF (match_operand:DF 1 \"input_operand\" \"d,r,md,md,md,rm\")))\n+   (use (match_operand:DF 2 \"zero_reg_mem_operand\" \"d,r,j,m,d,n\"))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_FPRS && TARGET_DOUBLE_FLOAT \n    && TARGET_LONG_DOUBLE_128\""}]}