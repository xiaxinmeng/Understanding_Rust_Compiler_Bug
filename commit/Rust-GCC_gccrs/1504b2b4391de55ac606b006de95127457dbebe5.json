{"sha": "1504b2b4391de55ac606b006de95127457dbebe5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUwNGIyYjQzOTFkZTU1YWM2MDZiMDA2ZGU5NTEyNzQ1N2RiZWJlNQ==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-03-30T11:35:27Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-03-30T11:35:27Z"}, "message": "[multiple changes]\n\nTue Mar 30 11:31:53 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* parse.y (patch_bc_statement): Fixed identation and a bogus\n \t`printf' format.\nTue Mar 30 11:29:29 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* parse.y (patch_assignment): Allow static variables in other\n \tclasses to be assigned.\n\nFrom-SVN: r26065", "tree": {"sha": "c91d14fd2135dc69866b22eddf93d62bd9bd8fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c91d14fd2135dc69866b22eddf93d62bd9bd8fb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1504b2b4391de55ac606b006de95127457dbebe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1504b2b4391de55ac606b006de95127457dbebe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1504b2b4391de55ac606b006de95127457dbebe5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1504b2b4391de55ac606b006de95127457dbebe5/comments", "author": null, "committer": null, "parents": [{"sha": "04d87103d4df4b7f0188faaa3201385e36d026a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04d87103d4df4b7f0188faaa3201385e36d026a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04d87103d4df4b7f0188faaa3201385e36d026a7"}], "stats": {"total": 54, "additions": 36, "deletions": 18}, "files": [{"sha": "4d7c8afe04d8b0029d1ab992cd718dccc399de3b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504b2b4391de55ac606b006de95127457dbebe5/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504b2b4391de55ac606b006de95127457dbebe5/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1504b2b4391de55ac606b006de95127457dbebe5", "patch": "@@ -1,3 +1,13 @@\n+Tue Mar 30 11:31:53 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (patch_bc_statement): Fixed identation and a bogus\n+ \t`printf' format.\n+\n+Tue Mar 30 11:29:29 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (patch_assignment): Allow static variables in other\n+ \tclasses to be assigned.\n+\n Sun Mar 28 22:12:10 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* class.c (maybe_add_interface): Remove unused variable"}, {"sha": "512738d9f4fa40ffe30a592850dcfc15b1c30064", "filename": "gcc/java/parse.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504b2b4391de55ac606b006de95127457dbebe5/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504b2b4391de55ac606b006de95127457dbebe5/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=1504b2b4391de55ac606b006de95127457dbebe5", "patch": "@@ -11169,13 +11169,17 @@ patch_assignment (node, wfl_op1, wfl_op2)\n   /* Otherwise, we might want to try to write into an optimized static\n      final, this is an of a different nature, reported further on. */\n   else if (TREE_CODE (wfl_op1) == EXPR_WITH_FILE_LOCATION\n-\t   && resolve_expression_name (wfl_op1, &llvalue)\n-\t   && check_final_assignment (llvalue, wfl_op1))\n+\t   && resolve_expression_name (wfl_op1, &llvalue))\n     {\n-      error_found = 1;\n-      /* What we should do instead is resetting the all the flags\n-         previously set, exchange lvalue for llvalue and continue. */\n-      return error_mark_node;\n+      if (check_final_assignment (llvalue, wfl_op1))\n+\t{\n+\t  /* What we should do instead is resetting the all the flags\n+\t     previously set, exchange lvalue for llvalue and continue. */\n+\t  error_found = 1;\n+\t  return error_mark_node;\n+\t}\n+      else \n+\tlhs_type = TREE_TYPE (lvalue);\n     }\n   else \n     {\n@@ -13271,9 +13275,9 @@ patch_bc_statement (node)\n \t\tparse_error_context (wfl_operator,\n \t\t\t\t     \"`continue' must be in loop\");\n \t      else\n-\t\tparse_error_context (wfl_operator,\n-\t\t\t\t     \"continue label `%d' does not name a loop\",\n-\t\t\t\t     IDENTIFIER_POINTER (bc_label));\n+\t\tparse_error_context \n+\t\t  (wfl_operator, \"continue label `%s' does not name a loop\",\n+\t\t   IDENTIFIER_POINTER (bc_label));\n \t      return error_mark_node;\n \t    }\n \t  if ((DECL_NAME (LABELED_BLOCK_LABEL (labeled_block))"}, {"sha": "7ab2ef6ef26f0e266466828e1a8517303d064f17", "filename": "gcc/java/parse.y", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1504b2b4391de55ac606b006de95127457dbebe5/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1504b2b4391de55ac606b006de95127457dbebe5/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=1504b2b4391de55ac606b006de95127457dbebe5", "patch": "@@ -8568,13 +8568,17 @@ patch_assignment (node, wfl_op1, wfl_op2)\n   /* Otherwise, we might want to try to write into an optimized static\n      final, this is an of a different nature, reported further on. */\n   else if (TREE_CODE (wfl_op1) == EXPR_WITH_FILE_LOCATION\n-\t   && resolve_expression_name (wfl_op1, &llvalue)\n-\t   && check_final_assignment (llvalue, wfl_op1))\n+\t   && resolve_expression_name (wfl_op1, &llvalue))\n     {\n-      error_found = 1;\n-      /* What we should do instead is resetting the all the flags\n-         previously set, exchange lvalue for llvalue and continue. */\n-      return error_mark_node;\n+      if (check_final_assignment (llvalue, wfl_op1))\n+\t{\n+\t  /* What we should do instead is resetting the all the flags\n+\t     previously set, exchange lvalue for llvalue and continue. */\n+\t  error_found = 1;\n+\t  return error_mark_node;\n+\t}\n+      else \n+\tlhs_type = TREE_TYPE (lvalue);\n     }\n   else \n     {\n@@ -10670,9 +10674,9 @@ patch_bc_statement (node)\n \t\tparse_error_context (wfl_operator,\n \t\t\t\t     \"`continue' must be in loop\");\n \t      else\n-\t\tparse_error_context (wfl_operator,\n-\t\t\t\t     \"continue label `%d' does not name a loop\",\n-\t\t\t\t     IDENTIFIER_POINTER (bc_label));\n+\t\tparse_error_context \n+\t\t  (wfl_operator, \"continue label `%s' does not name a loop\",\n+\t\t   IDENTIFIER_POINTER (bc_label));\n \t      return error_mark_node;\n \t    }\n \t  if ((DECL_NAME (LABELED_BLOCK_LABEL (labeled_block))"}]}