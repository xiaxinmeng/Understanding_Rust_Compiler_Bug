{"sha": "0313e85b82d26887adb3cdab1dd8ce0a135135a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDMxM2U4NWI4MmQyNjg4N2FkYjNjZGFiMWRkOGNlMGExMzUxMzVhMw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zackw@stanford.edu", "date": "2001-04-02T16:29:32Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-04-02T16:29:32Z"}, "message": "genattr.c, [...]: Wrap generated header in multiple-include guard.\n\n\t* genattr.c, gencheck.c, gencodes.c, genconfig.c, genflags.c,\n\tgengenrtl.c:  Wrap generated header in multiple-include guard.\n\tImprove error checking.\n\nFrom-SVN: r41006", "tree": {"sha": "113af7fdc2e163e99c91162b13799deeae6fdb8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/113af7fdc2e163e99c91162b13799deeae6fdb8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0313e85b82d26887adb3cdab1dd8ce0a135135a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0313e85b82d26887adb3cdab1dd8ce0a135135a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0313e85b82d26887adb3cdab1dd8ce0a135135a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0313e85b82d26887adb3cdab1dd8ce0a135135a3/comments", "author": null, "committer": null, "parents": [{"sha": "79cb7361fad4c4b58a09c1f6e64cf81c3cf9b8dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79cb7361fad4c4b58a09c1f6e64cf81c3cf9b8dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79cb7361fad4c4b58a09c1f6e64cf81c3cf9b8dc"}], "stats": {"total": 89, "additions": 63, "deletions": 26}, "files": [{"sha": "5453873b1da82d3a25ec97e4aa3609574b64ae31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0313e85b82d26887adb3cdab1dd8ce0a135135a3", "patch": "@@ -1,3 +1,9 @@\n+2001-04-02  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* genattr.c, gencheck.c, gencodes.c, genconfig.c, genflags.c,\n+\tgengenrtl.c:  Wrap generated header in multiple-include guard.\n+\tImprove error checking.\n+\n 2001-04-02  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.in: Don't check for putenv."}, {"sha": "4fff3a100f85acfee31f7478dcd5ce6355fda76e", "filename": "gcc/genattr.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgenattr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgenattr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr.c?ref=0313e85b82d26887adb3cdab1dd8ce0a135135a3", "patch": "@@ -213,14 +213,16 @@ main (argc, argv)\n   if (init_md_reader (argv[1]) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);\n \n-  printf (\"/* Generated automatically by the program `genattr'\\n\\\n-from the machine description file `md'.  */\\n\\n\");\n+  puts (\"/* Generated automatically by the program `genattr'\");\n+  puts (\"   from the machine description file `md'.  */\\n\");\n+  puts (\"#ifndef GCC_INSN_ATTR_H\");\n+  puts (\"#define GCC_INSN_ATTR_H\\n\");\n \n   /* For compatibility, define the attribute `alternative', which is just\n      a reference to the variable `which_alternative'.  */\n \n-  printf (\"#define HAVE_ATTR_alternative\\n\");\n-  printf (\"#define get_attr_alternative(insn) which_alternative\\n\");\n+  puts (\"#define HAVE_ATTR_alternative\");\n+  puts (\"#define get_attr_alternative(insn) which_alternative\");\n      \n   /* Read the machine description.  */\n \n@@ -359,8 +361,12 @@ from the machine description file `md'.  */\\n\\n\");\n   printf(\"#define ATTR_FLAG_unlikely\\t0x10\\n\");\n   printf(\"#define ATTR_FLAG_very_unlikely\\t0x20\\n\");\n \n-  fflush (stdout);\n-  return (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);\n+  puts(\"\\n#endif /* GCC_INSN_ATTR_H */\");\n+\n+  if (ferror (stdout) || fflush (stdout) || fclose (stdout))\n+    return FATAL_EXIT_CODE;\n+\n+  return SUCCESS_EXIT_CODE;\n }\n \n /* Define this so we can link with print-rtl.o to get debug_rtx function.  */"}, {"sha": "c55048aa6f870ffc9e83f3b1db4400f8d25c7937", "filename": "gcc/gencheck.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgencheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgencheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgencheck.c?ref=0313e85b82d26887adb3cdab1dd8ce0a135135a3", "patch": "@@ -35,7 +35,7 @@ static void usage PARAMS ((void));\n static void\n usage ()\n {\n-  fprintf (stderr,\"Usage: gencheck\\n\");\n+  fputs (\"Usage: gencheck\\n\", stderr);\n }\n \n extern int main PARAMS ((int, char **));\n@@ -57,13 +57,17 @@ main (argc, argv)\n       return (1);\n     }\n \n-  printf (\"/* This file is generated using gencheck. Do not edit. */\\n\");\n+  puts (\"/* This file is generated using gencheck. Do not edit. */\\n\");\n+  puts (\"#ifndef GCC_TREE_CHECK_H\");\n+  puts (\"#define GCC_TREE_CHECK_H\\n\");\n+\n   for (i = 0; tree_codes[i]; i++)\n     {\n       printf (\"#define %s_CHECK(t)\\tTREE_CHECK (t, %s)\\n\",\n \t      tree_codes[i], tree_codes[i]);\n     }\n \n+  puts (\"\\n#endif /* GCC_TREE_CHECK_H */\");\n   return 0;\n }\n "}, {"sha": "7e4f964426316adb4dad2c8a296bed7576558669", "filename": "gcc/gencodes.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgencodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgencodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgencodes.c?ref=0313e85b82d26887adb3cdab1dd8ce0a135135a3", "patch": "@@ -88,10 +88,10 @@ main (argc, argv)\n   if (init_md_reader (argv[1]) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);\n \n-  printf (\"/* Generated automatically by the program `gencodes'\\n\\\n-from the machine description file `md'.  */\\n\\n\");\n-\n-  printf (\"#ifndef MAX_INSN_CODE\\n\\n\");\n+  puts (\"/* Generated automatically by the program `gencodes'\");\n+  puts (\"   from the machine description file `md'.  */\\n\");\n+  puts (\"#ifndef GCC_INSN_CODES_H\");\n+  puts (\"#define GCC_INSN_CODES_H\\n\");\n \n   /* Read the machine description.  */\n \n@@ -118,10 +118,12 @@ from the machine description file `md'.  */\\n\\n\");\n \n   output_predicate_decls ();\n \n-  printf (\"\\n#endif /* MAX_INSN_CODE */\\n\");\n+  puts(\"\\n#endif /* GCC_INSN_CODES_H */\");\n+\n+  if (ferror (stdout) || fflush (stdout) || fclose (stdout))\n+    return FATAL_EXIT_CODE;\n \n-  fflush (stdout);\n-  return (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);\n+  return SUCCESS_EXIT_CODE;\n }\n \n /* Define this so we can link with print-rtl.o to get debug_rtx function.  */"}, {"sha": "bd61827d1632efa0e8c981dd25b3badbc4472af1", "filename": "gcc/genconfig.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgenconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgenconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconfig.c?ref=0313e85b82d26887adb3cdab1dd8ce0a135135a3", "patch": "@@ -280,8 +280,10 @@ main (argc, argv)\n   if (init_md_reader (argv[1]) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);\n \n-  printf (\"/* Generated automatically by the program `genconfig'\\n\\\n-from the machine description file `md'.  */\\n\\n\");\n+  puts (\"/* Generated automatically by the program `genconfig'\");\n+  puts (\"   from the machine description file `md'.  */\\n\");\n+  puts (\"#ifndef GCC_INSN_CONFIG_H\");\n+  puts (\"#define GCC_INSN_CONFIG_H\\n\");\n \n   /* Allow at least 10 operands for the sake of asm constructs.  */\n   max_recog_operands = 9;  /* We will add 1 later.  */\n@@ -356,8 +358,12 @@ from the machine description file `md'.  */\\n\\n\");\n       printf (\"#define MAX_INSNS_PER_PEEP2 %d\\n\", max_insns_per_peep2);\n     }\n \n-  fflush (stdout);\n-  return (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);\n+  puts(\"\\n#endif /* GCC_INSN_CONFIG_H */\");\n+\n+  if (ferror (stdout) || fflush (stdout) || fclose (stdout))\n+    return FATAL_EXIT_CODE;\n+\n+  return SUCCESS_EXIT_CODE;\n }\n \n /* Define this so we can link with print-rtl.o to get debug_rtx function.  */"}, {"sha": "0ff0377d6a5fc19ecc18e4cf2b893a3f32041425", "filename": "gcc/genflags.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgenflags.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgenflags.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenflags.c?ref=0313e85b82d26887adb3cdab1dd8ce0a135135a3", "patch": "@@ -233,8 +233,10 @@ main (argc, argv)\n   if (init_md_reader (argv[1]) != SUCCESS_EXIT_CODE)\n     return (FATAL_EXIT_CODE);\n   \n-  printf (\"/* Generated automatically by the program `genflags'\\n\\\n-from the machine description file `md'.  */\\n\\n\");\n+  puts (\"/* Generated automatically by the program `genflags'\");\n+  puts (\"   from the machine description file `md'.  */\\n\");\n+  puts (\"#ifndef GCC_INSN_FLAGS_H\");\n+  puts (\"#define GCC_INSN_FLAGS_H\\n\");\n \n   /* Read the machine description.  */\n \n@@ -258,8 +260,12 @@ from the machine description file `md'.  */\\n\\n\");\n   for (insn_ptr = insns; *insn_ptr; insn_ptr++)\n     gen_proto (*insn_ptr);\n \n-  fflush (stdout);\n-  return (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);\n+  puts(\"\\n#endif /* GCC_INSN_FLAGS_H */\");\n+\n+  if (ferror (stdout) || fflush (stdout) || fclose (stdout))\n+    return FATAL_EXIT_CODE;\n+\n+  return SUCCESS_EXIT_CODE;\n }\n \n /* Define this so we can link with print-rtl.o to get debug_rtx function.  */"}, {"sha": "21f46df1461a37f80f59af4383756ba3b58b70b1", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0313e85b82d26887adb3cdab1dd8ce0a135135a3/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=0313e85b82d26887adb3cdab1dd8ce0a135135a3", "patch": "@@ -351,7 +351,10 @@ genheader ()\n {\n   int i;\n   const char **fmt;\n-  \n+\n+  puts (\"#ifndef GCC_GENRTL_H\");\n+  puts (\"#define GCC_GENRTL_H\\n\");\n+\n   for (fmt = formats; *fmt; ++fmt)\n     gendecl (*fmt);\n \n@@ -360,6 +363,8 @@ genheader ()\n   for (i = 0; i < NUM_RTX_CODE; i++)\n     if (! special_format (defs[i].format))\n       genmacro (i);\n+\n+  puts (\"\\n#endif /* GCC_GENRTL_H */\");\n }\n \n /* Generate the text of the code file we write, genrtl.c.  */\n@@ -420,6 +425,8 @@ main (argc, argv)\n   else\n     gencode ();\n \n-  fflush (stdout);\n-  return (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);\n+  if (ferror (stdout) || fflush (stdout) || fclose (stdout))\n+    return FATAL_EXIT_CODE;\n+\n+  return SUCCESS_EXIT_CODE;\n }"}]}