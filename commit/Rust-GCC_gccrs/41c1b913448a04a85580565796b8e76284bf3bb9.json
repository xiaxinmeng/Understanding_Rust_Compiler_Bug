{"sha": "41c1b913448a04a85580565796b8e76284bf3bb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFjMWI5MTM0NDhhMDRhODU1ODA1NjU3OTZiOGU3NjI4NGJmM2JiOQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2019-12-30T21:46:21Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2019-12-30T21:46:21Z"}, "message": "Setup system header wrappers for C++ on VxWorks\n\nStarting from VxWorks 7, the system comes with a Dinkumware\nenvironment which requires the inclusion of \"yvals.h\" before other\nsystem headers.  We provide wrapped versions of a few headers to\naccommodate such constraints.\n\n2019-12-30  Jerome Lambourg  <lambourg@adaccore.com>\n            Olivier Hainque  <hainque@adacore.com>\n\n\tgcc/\n\t* config/vxworks/_yvals.h: New file.\n\t* config/vxworks/_yvals-wrapper.h: New file.\n\t* gcc/config/vxworks/math.h: Use it to wrap the VxWorks\n\tmath.h header.\n\t* gcc/config/vxworks/complex.h: Likewise.\n\t* gcc/config/vxworks/setjmp.h: Likewise.\n\t* gcc/config/vxworks/inttypes.h: Likewise.\n\t* config.gcc (*-*-vxworks*): Add system header wrappers\n\tto extra_headers.\n\t(powerpc-*-vxworks*): Reuse the common extra_headers.\n\nFrom-SVN: r279784", "tree": {"sha": "457d6e8107b42cd41fc3fe9c1163c00b5056bf6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/457d6e8107b42cd41fc3fe9c1163c00b5056bf6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41c1b913448a04a85580565796b8e76284bf3bb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c1b913448a04a85580565796b8e76284bf3bb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41c1b913448a04a85580565796b8e76284bf3bb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c1b913448a04a85580565796b8e76284bf3bb9/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "abb6c3eecf6680814624bd1fe454844002dfc892", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb6c3eecf6680814624bd1fe454844002dfc892", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abb6c3eecf6680814624bd1fe454844002dfc892"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "54f99916ae348af5d9dd8402b0c048e6a4f0f7a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c1b913448a04a85580565796b8e76284bf3bb9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c1b913448a04a85580565796b8e76284bf3bb9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41c1b913448a04a85580565796b8e76284bf3bb9", "patch": "@@ -1,3 +1,16 @@\n+2019-12-30  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/vxworks/_yvals.h: New file.\n+\t* config/vxworks/_yvals-wrapper.h: New file.\n+\t* gcc/config/vxworks/math.h: Use it to wrap the VxWorks\n+\tmath.h header.\n+\t* gcc/config/vxworks/complex.h: Likewise.\n+\t* gcc/config/vxworks/setjmp.h: Likewise.\n+\t* gcc/config/vxworks/inttypes.h: Likewise.\n+\t* config.gcc (*-*-vxworks*): Add system header wrappers\n+\tto extra_headers.\n+\t(powerpc-*-vxworks*): Reuse the common extra_headers.\n+\n 2019-12-30  Olivier Hainque  <hainque@adacore.com>\n \n \t* config/vxworks/_vxworks-versions.h: New file."}, {"sha": "42e4251a3a624196a5ff2eccdd4730ec6be715ee", "filename": "gcc/config.gcc", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c1b913448a04a85580565796b8e76284bf3bb9/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c1b913448a04a85580565796b8e76284bf3bb9/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=41c1b913448a04a85580565796b8e76284bf3bb9", "patch": "@@ -953,12 +953,15 @@ case ${target} in\n *-*-vxworks*)\n   tmake_file=t-vxworks\n   xm_defines=POSIX\n+\n   extra_options=\"${extra_options} vxworks.opt\"\n   extra_objs=\"$extra_objs vxworks.o\"\n+\n   c_target_objs=\"${c_target_objs} vxworks-c.o\"\n   cxx_target_objs=\"${cxx_target_objs} vxworks-c.o\"\n   extra_headers=\"${extra_headers} ../vxworks/vxworks-predef.h\"\n   target_has_targetcm=\"yes\"\n+\n   use_gcc_stdint=provide\n   tm_file=\"${tm_file} vxworks-stdint.h\"\n \n@@ -968,6 +971,17 @@ case ${target} in\n \n   extra_headers=\"${extra_headers} ../vxworks/_vxworks-versions.h\"\n \n+  # Starting from VxWorks 7, the system comes with a Dinkumware\n+  # environment which requires the inclusion of \"yvals.h\" before other\n+  # system headers.  We provide wrapped versions of a few headers to\n+  # accomodate such constraints:\n+\n+  extra_headers=\"${extra_headers} ../vxworks/_yvals.h\"\n+  extra_headers=\"${extra_headers} ../vxworks/_yvals-wrapper.h\"\n+\n+  extra_headers=\"${extra_headers} ../vxworks/math.h ../vxworks/complex.h\"\n+  extra_headers=\"${extra_headers} ../vxworks/inttypes.h ../vxworks/setjmp.h\"\n+\n   case ${enable_threads} in\n     no) ;;\n     \"\" | yes | vxworks) thread_file='vxworks' ;;\n@@ -2930,7 +2944,7 @@ powerpc-wrs-vxworks*)\n \ttm_file=\"${tm_file} elfos.h gnu-user.h freebsd-spec.h rs6000/sysv4.h\"\n \ttmake_file=\"${tmake_file} rs6000/t-fprules rs6000/t-ppccomm rs6000/t-vxworks\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n-\textra_headers=ppc-asm.h\n+\textra_headers=\"${extra_headers} ppc-asm.h\"\n \tcase ${target} in\n           *-vxworksmils*)\n             tm_file=\"${tm_file} vx-common.h vxworksae.h rs6000/vxworks.h rs6000/vxworksmils.h\""}]}