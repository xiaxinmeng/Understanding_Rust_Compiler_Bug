{"sha": "229aa352300d92a4cd3061d3fedd4b45a3052ca9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI5YWEzNTIzMDBkOTJhNGNkMzA2MWQzZmVkZDRiNDVhMzA1MmNhOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-07-02T06:31:49Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-02T06:31:49Z"}, "message": "alpha.c (struct machine_function): Add gp_save_rtx.\n\n        * config/alpha/alpha.c (struct machine_function): Add gp_save_rtx.\n        (alpha_gp_save_rtx): Use assign_stack_local instead of\n        gen_mem_addressof.\n\nFrom-SVN: r84015", "tree": {"sha": "6dfbf23bd42bd6ba9771dc47df56a47f3f693ab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dfbf23bd42bd6ba9771dc47df56a47f3f693ab8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/229aa352300d92a4cd3061d3fedd4b45a3052ca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/229aa352300d92a4cd3061d3fedd4b45a3052ca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/229aa352300d92a4cd3061d3fedd4b45a3052ca9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/229aa352300d92a4cd3061d3fedd4b45a3052ca9/comments", "author": null, "committer": null, "parents": [{"sha": "8260c194b7ee859e189226d198f84defc373f8d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8260c194b7ee859e189226d198f84defc373f8d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8260c194b7ee859e189226d198f84defc373f8d2"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "1987b5dec05e32e4798974f42b20b2f9a2ba8623", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/229aa352300d92a4cd3061d3fedd4b45a3052ca9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/229aa352300d92a4cd3061d3fedd4b45a3052ca9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=229aa352300d92a4cd3061d3fedd4b45a3052ca9", "patch": "@@ -1,3 +1,9 @@\n+2004-07-01  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.c (struct machine_function): Add gp_save_rtx.\n+\t(alpha_gp_save_rtx): Use assign_stack_local instead of\n+\tgen_mem_addressof.\n+\n 2004-07-01  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (struct alpha_rtx_cost_data): Add int_div."}, {"sha": "23f35ebf4f1034434e2a71f82b1bdc14569f9b69", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/229aa352300d92a4cd3061d3fedd4b45a3052ca9/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/229aa352300d92a4cd3061d3fedd4b45a3052ca9/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=229aa352300d92a4cd3061d3fedd4b45a3052ca9", "patch": "@@ -5189,6 +5189,9 @@ struct machine_function GTY(())\n \n   /* For OSF.  */\n   const char *some_ld_name;\n+\n+  /* For TARGET_LD_BUGGY_LDGP.  */\n+  struct rtx_def *gp_save_rtx;\n };\n \n /* How to allocate a 'struct machine_function'.  */\n@@ -5213,16 +5216,30 @@ alpha_return_addr (int count, rtx frame ATTRIBUTE_UNUSED)\n   return get_hard_reg_initial_val (Pmode, REG_RA);\n }\n \n-/* Return or create a pseudo containing the gp value for the current\n+/* Return or create a memory slot containing the gp value for the current\n    function.  Needed only if TARGET_LD_BUGGY_LDGP.  */\n \n rtx\n alpha_gp_save_rtx (void)\n {\n-  rtx r = get_hard_reg_initial_val (DImode, 29);\n-  if (GET_CODE (r) != MEM)\n-    r = gen_mem_addressof (r, NULL_TREE, /*rescan=*/true);\n-  return r;\n+  rtx seq, m = cfun->machine->gp_save_rtx;\n+\n+  if (m == NULL)\n+    {\n+      start_sequence ();\n+\n+      m = assign_stack_local (DImode, UNITS_PER_WORD, BITS_PER_WORD);\n+      m = validize_mem (m);\n+      emit_move_insn (m, pic_offset_table_rtx);\n+\n+      seq = get_insns ();\n+      end_sequence ();\n+      emit_insn_after (seq, entry_of_function ());\n+\n+      cfun->machine->gp_save_rtx = m;\n+    }\n+\n+  return m;\n }\n \n static int"}]}