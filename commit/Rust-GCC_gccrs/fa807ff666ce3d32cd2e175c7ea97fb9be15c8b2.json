{"sha": "fa807ff666ce3d32cd2e175c7ea97fb9be15c8b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE4MDdmZjY2NmNlM2QzMmNkMmUxNzVjN2VhOTdmYjliZTE1YzhiMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2006-05-19T12:52:26Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2006-05-19T12:52:26Z"}, "message": "linux-unwind.h: Include <asm/unistd.h>\n\n\t* config/mips/linux-unwind.h: Include <asm/unistd.h>\n\t(mips_fallback_frame_state): Use syscall numbers to determine\n\tthe appropriate li instruction for the current ABI.  Only use\n\t__NR_sigreturn for o32.\n\nFrom-SVN: r113906", "tree": {"sha": "5970398af173f09f8b7191f346b00c223616482f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5970398af173f09f8b7191f346b00c223616482f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa807ff666ce3d32cd2e175c7ea97fb9be15c8b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa807ff666ce3d32cd2e175c7ea97fb9be15c8b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa807ff666ce3d32cd2e175c7ea97fb9be15c8b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa807ff666ce3d32cd2e175c7ea97fb9be15c8b2/comments", "author": null, "committer": null, "parents": [{"sha": "721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721a8ac58bbc00df746ccdfd6529f2d5424b11f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/721a8ac58bbc00df746ccdfd6529f2d5424b11f3"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "c4a65123d45b961ccbcf89ed8c20c59a448e11db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa807ff666ce3d32cd2e175c7ea97fb9be15c8b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa807ff666ce3d32cd2e175c7ea97fb9be15c8b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa807ff666ce3d32cd2e175c7ea97fb9be15c8b2", "patch": "@@ -1,3 +1,10 @@\n+2006-05-19  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/mips/linux-unwind.h: Include <asm/unistd.h>\n+\t(mips_fallback_frame_state): Use syscall numbers to determine\n+\tthe appropriate li instruction for the current ABI.  Only use\n+\t__NR_sigreturn for o32.\n+\n 2006-05-19  Nicolas Setton  <setton@adacore.com>\n \n \t* langhooks.h (struct lang_hooks): Add dwarf_name language hook."}, {"sha": "4f96e95e940b99c845f9e69b53848548616b878c", "filename": "gcc/config/mips/linux-unwind.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa807ff666ce3d32cd2e175c7ea97fb9be15c8b2/gcc%2Fconfig%2Fmips%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa807ff666ce3d32cd2e175c7ea97fb9be15c8b2/gcc%2Fconfig%2Fmips%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux-unwind.h?ref=fa807ff666ce3d32cd2e175c7ea97fb9be15c8b2", "patch": "@@ -31,6 +31,7 @@ Boston, MA 02110-1301, USA.  */\n    state data appropriately.  See unwind-dw2.c for the structs.  */\n \n #include <signal.h>\n+#include <asm/unistd.h>\n \n /* The third parameter to the signal handler points to something with\n  * this structure defined in asm/ucontext.h, but the name clashes with\n@@ -59,20 +60,23 @@ mips_fallback_frame_state (struct _Unwind_Context *context,\n   /*    or */\n   /* 24021017 li v0, 0x1017 (sigreturn) */\n   /* 0000000c syscall  */\n-  if (*(pc + 1) != 0x0000000c)\n+  if (pc[1] != 0x0000000c)\n     return _URC_END_OF_STACK;\n-  if (*(pc + 0) == 0x24021017)\n+#if _MIPS_SIM == _ABIO32\n+  if (pc[0] == (0x24020000 | __NR_sigreturn))\n     {\n       struct sigframe {\n-\tu_int32_t  trampoline[2];\n+\tu_int32_t trampoline[2];\n \tstruct sigcontext sigctx;\n       } *rt_ = context->ra;\n       sc = &rt_->sigctx;\n     }\n-  else if (*(pc + 0) == 0x24021061)\n+  else\n+#endif\n+  if (pc[0] == (0x24020000 | __NR_rt_sigreturn))\n     {\n       struct rt_sigframe {\n-\tu_int32_t  trampoline[2];\n+\tu_int32_t trampoline[2];\n \tstruct siginfo info;\n \t_sig_ucontext_t uc;\n       } *rt_ = context->ra;"}]}