{"sha": "916a659b3714a18e1b757476c790039baff2da6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE2YTY1OWIzNzE0YTE4ZTFiNzU3NDc2Yzc5MDAzOWJhZmYyZGE2Zg==", "commit": {"author": {"name": "Rask Ingemann Lambertsen", "email": "rask@sygehus.dk", "date": "2007-11-26T13:20:19Z"}, "committer": {"name": "Rask Ingemann Lambertsen", "email": "rask@gcc.gnu.org", "date": "2007-11-26T13:20:19Z"}, "message": "re PR target/34174 (gcc produces erroneous asm for movdi)\n\n\tPR target/34174\n\t* config/fr30/fr30.c (fr30_move_double): Sanitize mem->reg case. Copy\n\tthe address before it is clobbered.\n\ntestsuite/\n\t* gcc.dg/torture/pr34174-1.c: New.\n\nFrom-SVN: r130438", "tree": {"sha": "6f58da5b15fd0a15696502ec57a557360598571b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f58da5b15fd0a15696502ec57a557360598571b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/916a659b3714a18e1b757476c790039baff2da6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/916a659b3714a18e1b757476c790039baff2da6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/916a659b3714a18e1b757476c790039baff2da6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/916a659b3714a18e1b757476c790039baff2da6f/comments", "author": null, "committer": null, "parents": [{"sha": "f6284d979e752b69dfdce8f07318f08489d3a6c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6284d979e752b69dfdce8f07318f08489d3a6c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6284d979e752b69dfdce8f07318f08489d3a6c4"}], "stats": {"total": 103, "additions": 67, "deletions": 36}, "files": [{"sha": "6f273449f5102894d93ce0938a349ad720e8d0c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/916a659b3714a18e1b757476c790039baff2da6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/916a659b3714a18e1b757476c790039baff2da6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=916a659b3714a18e1b757476c790039baff2da6f", "patch": "@@ -1,3 +1,9 @@\n+2007-11-26  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n+\n+\tPR target/34174\n+\t* config/fr30/fr30.c (fr30_move_double): Sanitize mem->reg case. Copy\n+\tthe address before it is clobbered.\n+\n 2007-11-26  Nick Clifton  <nickc@redhat.com>\n \n \t* config/mn10300/mn10300.md: (call_internal): Remove mode on"}, {"sha": "8c523567bb9a4c0651349f56f1f5ff725b08ee4b", "filename": "gcc/config/fr30/fr30.c", "status": "modified", "additions": 12, "deletions": 36, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/916a659b3714a18e1b757476c790039baff2da6f/gcc%2Fconfig%2Ffr30%2Ffr30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/916a659b3714a18e1b757476c790039baff2da6f/gcc%2Fconfig%2Ffr30%2Ffr30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.c?ref=916a659b3714a18e1b757476c790039baff2da6f", "patch": "@@ -828,47 +828,23 @@ fr30_move_double (rtx * operands)\n \t{\n \t  rtx addr = XEXP (src, 0);\n \t  int dregno = REGNO (dest);\n-\t  rtx dest0;\n-\t  rtx dest1;\n+\t  rtx dest0 = operand_subword (dest, 0, TRUE, mode);;\n+\t  rtx dest1 = operand_subword (dest, 1, TRUE, mode);;\n \t  rtx new_mem;\n \t  \n-\t  /* If the high-address word is used in the address, we\n-\t     must load it last.  Otherwise, load it first.  */\n-\t  int reverse = (refers_to_regno_p (dregno, dregno + 1, addr, 0) != 0);\n-\n \t  gcc_assert (GET_CODE (addr) == REG);\n \t  \n-\t  dest0 = operand_subword (dest, reverse, TRUE, mode);\n-\t  dest1 = operand_subword (dest, !reverse, TRUE, mode);\n-\n-\t  if (reverse)\n-\t    {\n-\t      emit_insn (gen_rtx_SET (VOIDmode, dest1,\n-\t\t\t\t      adjust_address (src, SImode, 0)));\n-\t      emit_insn (gen_rtx_SET (SImode, dest0,\n-\t\t\t\t      gen_rtx_REG (SImode, REGNO (addr))));\n-\t      emit_insn (gen_rtx_SET (SImode, dest0,\n-\t\t\t\t      plus_constant (dest0, UNITS_PER_WORD)));\n-\n-\t      new_mem = gen_rtx_MEM (SImode, dest0);\n-\t      MEM_COPY_ATTRIBUTES (new_mem, src);\n-\t      \n-\t      emit_insn (gen_rtx_SET (VOIDmode, dest0, new_mem));\n-\t    }\n-\t  else\n-\t    {\n-\t      emit_insn (gen_rtx_SET (VOIDmode, dest0,\n-\t\t\t\t      adjust_address (src, SImode, 0)));\n-\t      emit_insn (gen_rtx_SET (SImode, dest1,\n-\t\t\t\t      gen_rtx_REG (SImode, REGNO (addr))));\n-\t      emit_insn (gen_rtx_SET (SImode, dest1,\n-\t\t\t\t      plus_constant (dest1, UNITS_PER_WORD)));\n-\n-\t      new_mem = gen_rtx_MEM (SImode, dest1);\n-\t      MEM_COPY_ATTRIBUTES (new_mem, src);\n+\t  /* Copy the address before clobbering it.  See PR 34174.  */\n+\t  emit_insn (gen_rtx_SET (SImode, dest1, addr));\n+\t  emit_insn (gen_rtx_SET (VOIDmode, dest0,\n+\t\t\t\t  adjust_address (src, SImode, 0)));\n+\t  emit_insn (gen_rtx_SET (SImode, dest1,\n+\t\t\t\t  plus_constant (dest1, UNITS_PER_WORD)));\n+\n+\t  new_mem = gen_rtx_MEM (SImode, dest1);\n+\t  MEM_COPY_ATTRIBUTES (new_mem, src);\n \t      \n-\t      emit_insn (gen_rtx_SET (VOIDmode, dest1, new_mem));\n-\t    }\n+\t  emit_insn (gen_rtx_SET (VOIDmode, dest1, new_mem));\n \t}\n       else if (src_code == CONST_INT || src_code == CONST_DOUBLE)\n \t{"}, {"sha": "d45e36f015927082df141634455ef9fbd16f9882", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/916a659b3714a18e1b757476c790039baff2da6f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/916a659b3714a18e1b757476c790039baff2da6f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=916a659b3714a18e1b757476c790039baff2da6f", "patch": "@@ -1,3 +1,8 @@\n+2007-11-26  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n+\n+\tPR target/34174\n+\t* gcc.dg/torture/pr34174-1.c: New.\n+\n 2007-11-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/34233"}, {"sha": "0f1ed067fb47631701203f538101bf7ac74b05b3", "filename": "gcc/testsuite/gcc.dg/torture/pr34174-1.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/916a659b3714a18e1b757476c790039baff2da6f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr34174-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/916a659b3714a18e1b757476c790039baff2da6f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr34174-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr34174-1.c?ref=916a659b3714a18e1b757476c790039baff2da6f", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do run } */\n+/* Based on PR target/27386 testcase by Joerg Wunsch.  */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+#if __INT_MAX__ >= 9223372036854775807LL\n+typedef unsigned int uint64_t;\n+#elif __LONG_MAX__ >= 9223372036854775807LL\n+typedef unsigned long int uint64_t;\n+#elif __LONG_LONG_MAX__ >= 9223372036854775807LL\n+typedef unsigned long long int uint64_t;\n+#else\n+int\n+main (void)\n+{\n+  exit (0);\n+}\n+#endif\n+\n+uint64_t a, b, c;\n+\n+int\n+foo (uint64_t x, uint64_t y, uint64_t z, int i)\n+{\n+  a = x;\n+  b = y;\n+  c = z;\n+  return 2 * i;\n+}\n+\n+int\n+main (void)\n+{\n+  if (foo (1234512345123ull, 3456734567345ull, 7897897897897ull, 42) != 84)\n+    abort ();\n+  if (a != 1234512345123ull)\n+    abort ();\n+  if (b != 3456734567345ull)\n+    abort ();\n+  if (c != 7897897897897ull)\n+    abort ();\n+  exit (0);\n+}"}]}