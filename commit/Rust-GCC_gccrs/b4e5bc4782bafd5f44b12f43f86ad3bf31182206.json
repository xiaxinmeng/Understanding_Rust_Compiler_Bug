{"sha": "b4e5bc4782bafd5f44b12f43f86ad3bf31182206", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRlNWJjNDc4MmJhZmQ1ZjQ0YjEyZjQzZjg2YWQzYmYzMTE4MjIwNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-11-17T18:54:36Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-11-17T18:54:36Z"}, "message": "Use IFN_SQRT in tree-vect-patterns.c\n\nIn practice all targets that can vectorise sqrt define the appropriate\nsqrt<mode>2 optab.  The only case where this isn't immediately obvious\nis the libmass support in rs6000.c, but Mike Meissner said that it shouldn't\nbe exercised for sqrt.\n\nThis patch therefore uses the internal function interface instead of\ngoing via the target hook.\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu, arm-linux-gnueabi and\npowerpc64-linux-gnu.\n\ngcc/\n\t* tree-vect-patterns.c: Include internal-fn.h.\n\t(vect_recog_pow_pattern): Use IFN_SQRT instead of BUILT_IN_SQRT*.\n\nFrom-SVN: r230490", "tree": {"sha": "03c2b90c6bf3c9064ace36e1d8a6dbb5ad9a9db2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03c2b90c6bf3c9064ace36e1d8a6dbb5ad9a9db2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4e5bc4782bafd5f44b12f43f86ad3bf31182206", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e5bc4782bafd5f44b12f43f86ad3bf31182206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4e5bc4782bafd5f44b12f43f86ad3bf31182206", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e5bc4782bafd5f44b12f43f86ad3bf31182206/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03dc244a81378e83fd824c920ff680607e17f239", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03dc244a81378e83fd824c920ff680607e17f239", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03dc244a81378e83fd824c920ff680607e17f239"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "c6ddc5a46ff29e3fe3fc66f7a8ade3dcef8b332a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e5bc4782bafd5f44b12f43f86ad3bf31182206/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e5bc4782bafd5f44b12f43f86ad3bf31182206/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4e5bc4782bafd5f44b12f43f86ad3bf31182206", "patch": "@@ -1,3 +1,8 @@\n+2015-11-17  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-patterns.c: Include internal-fn.h.\n+\t(vect_recog_pow_pattern): Use IFN_SQRT instead of BUILT_IN_SQRT*.\n+\n 2015-11-17  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree.h (BUILTIN_EXP10_P, BUILTIN_EXPONENT_P, BUILTIN_SQRT_P)"}, {"sha": "5bab1f57a18f14724b90608c64a915696fbcbbc9", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4e5bc4782bafd5f44b12f43f86ad3bf31182206/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4e5bc4782bafd5f44b12f43f86ad3bf31182206/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=b4e5bc4782bafd5f44b12f43f86ad3bf31182206", "patch": "@@ -39,6 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-vectorizer.h\"\n #include \"dumpfile.h\"\n #include \"builtins.h\"\n+#include \"internal-fn.h\"\n #include \"case-cfn-macros.h\"\n \n /* Pattern recognition functions  */\n@@ -1054,18 +1055,13 @@ vect_recog_pow_pattern (vec<gimple *> *stmts, tree *type_in,\n   if (TREE_CODE (exp) == REAL_CST\n       && real_equal (&TREE_REAL_CST (exp), &dconsthalf))\n     {\n-      tree newfn = mathfn_built_in (TREE_TYPE (base), BUILT_IN_SQRT);\n       *type_in = get_vectype_for_scalar_type (TREE_TYPE (base));\n-      if (*type_in)\n+      if (*type_in && direct_internal_fn_supported_p (IFN_SQRT, *type_in))\n \t{\n-\t  gcall *stmt = gimple_build_call (newfn, 1, base);\n-\t  if (vectorizable_function (stmt, *type_in, *type_in)\n-\t      != NULL_TREE)\n-\t    {\n-\t      var = vect_recog_temp_ssa_var (TREE_TYPE (base), stmt);\n-\t      gimple_call_set_lhs (stmt, var);\n-\t      return stmt;\n-\t    }\n+\t  gcall *stmt = gimple_build_call_internal (IFN_SQRT, 1, base);\n+\t  var = vect_recog_temp_ssa_var (TREE_TYPE (base), stmt);\n+\t  gimple_call_set_lhs (stmt, var);\n+\t  return stmt;\n \t}\n     }\n "}]}