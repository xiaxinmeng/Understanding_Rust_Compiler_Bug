{"sha": "c91fba509bdb2e7503496317011f35241053e947", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkxZmJhNTA5YmRiMmU3NTAzNDk2MzE3MDExZjM1MjQxMDUzZTk0Nw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-08-05T03:27:49Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-08-05T03:27:49Z"}, "message": "t-a29kbare: Fix some comments.\n\n\t* a29k/t-a29kbare: Fix some comments.\n\t(LIB2FUNCS_EXTRA): Remove fp-bit.c and dp-bit.c\n\t(FPBIT, DPBIT): Define.\n\t* a29k/t-vx29k: Likewise.\n\t* arc/t-arc: Likewise.\n\t* arm/t-arm-elf: Likewise.\n\t* arm/t-bare: Likewise.\n\t* arm/t-pe: Likewise.\n\t* arm/t-pe-thumb: Likewise.\n\t* arm/t-semi: Likewise.\n\t* arm/t-thumb: Likewise.\n\t* arm/t-thumb-elf: Likewise.\n\t* arm/t-thumb-linux: Likewise.\n\t* h8300/t-h8300: Likewise.\n\t* i960/t-i960: Likewise.\n\t* i960/t-vxworks960: Likewise.\n\t* m32r/t-m32r: Likewise.\n\t* mips/t-ecoff: Likewise.\n\t* mips/t-elf: Likewise.\n\t* mips/t-r3900: Likewise.\n\t* pa/t-pro: Likewise.\n\t* rs6000/t-aix43: Likewise.\n\t* rs6000/t-beos: Likewise.\n\t* rs6000/t-newas: Likewise.\n\t* rs6000/t-ppccomm: Likewise.\n\t* rs6000/t-rs6000: Likewise.\n\t* rs6000/t-winnt: Likewise.\n\t* rs6000/t-xnewas: Likewise.\n\t* rs6000/t-xrs6000: Likewise.\n\t* sh/t-sh: Likewise.\n\t* sparc/t-elf: Likewise.\n\t* sparc/t-sparcbare: Likewise.\n\t* sparc/t-sparclite: Likewise.\n\t* sparc/t-splet: Likewise.\n\t* v850/t-v850: Likewise.\n\t* mn10200/t-mn10200: Fix comments.\n\t* mn10300/t-mn10300: Likewise.\n\nFrom-SVN: r28518", "tree": {"sha": "62c2ba20c2a7b5ac3584db6490a0f8fd140f1a57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62c2ba20c2a7b5ac3584db6490a0f8fd140f1a57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c91fba509bdb2e7503496317011f35241053e947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91fba509bdb2e7503496317011f35241053e947", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91fba509bdb2e7503496317011f35241053e947", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91fba509bdb2e7503496317011f35241053e947/comments", "author": null, "committer": null, "parents": [{"sha": "edd6ede777870525c0a564d4df6e31431cc69f7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edd6ede777870525c0a564d4df6e31431cc69f7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edd6ede777870525c0a564d4df6e31431cc69f7c"}], "stats": {"total": 282, "additions": 183, "deletions": 99}, "files": [{"sha": "07d6b585a2ac51ca1c9d797b6c058c7ec97fcee5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -69,6 +69,44 @@ Wed Aug  4 12:53:44 1999  Michael Tiemann  <tiemann@holodeck.cygnus.com>\n \n Wed Aug  4 13:12:17 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* a29k/t-a29kbare: Fix some comments.\n+\t(LIB2FUNCS_EXTRA): Remove fp-bit.c and dp-bit.c\n+\t(FPBIT, DPBIT): Define.\n+\t* a29k/t-vx29k: Likewise.\n+\t* arc/t-arc: Likewise.\n+\t* arm/t-arm-elf: Likewise.\n+\t* arm/t-bare: Likewise.\n+\t* arm/t-pe: Likewise.\n+\t* arm/t-pe-thumb: Likewise.\n+\t* arm/t-semi: Likewise.\n+\t* arm/t-thumb: Likewise.\n+\t* arm/t-thumb-elf: Likewise.\n+\t* arm/t-thumb-linux: Likewise.\n+\t* h8300/t-h8300: Likewise.\n+\t* i960/t-i960: Likewise.\n+\t* i960/t-vxworks960: Likewise.\n+\t* m32r/t-m32r: Likewise.\n+\t* mips/t-ecoff: Likewise.\n+\t* mips/t-elf: Likewise.\n+\t* mips/t-r3900: Likewise.\n+\t* pa/t-pro: Likewise.\n+\t* rs6000/t-aix43: Likewise.\n+\t* rs6000/t-beos: Likewise.\n+\t* rs6000/t-newas: Likewise.\n+\t* rs6000/t-ppccomm: Likewise.\n+\t* rs6000/t-rs6000: Likewise.\n+\t* rs6000/t-winnt: Likewise.\n+\t* rs6000/t-xnewas: Likewise.\n+\t* rs6000/t-xrs6000: Likewise.\n+\t* sh/t-sh: Likewise.\n+\t* sparc/t-elf: Likewise.\n+\t* sparc/t-sparcbare: Likewise.\n+\t* sparc/t-sparclite: Likewise.\n+\t* sparc/t-splet: Likewise.\n+\t* v850/t-v850: Likewise.\n+\t* mn10200/t-mn10200: Fix comments.\n+\t* mn10300/t-mn10300: Likewise.\n+\n \t* pa.md (divsi3, udivsi3, modsi3, umodsi3 expanders): Clobber a new\n \tdummy operand.  Allocate a new pseudo for the dummy operand.\n \t(divsi3, udivsi3, modis3, umodsi3 patterns): Corresponding changes."}, {"sha": "c6702348d1499675e5e4ee6539c7aa626e7779b2", "filename": "gcc/config/a29k/t-a29kbare", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fa29k%2Ft-a29kbare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fa29k%2Ft-a29kbare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Ft-a29kbare?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -4,10 +4,10 @@ CROSS_LIBGCC1 =\n # We need crt0.o.\n LIBGCC1_TEST =\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so... \n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "298871e4122e2ba5dde351453cb44ac8556c4fae", "filename": "gcc/config/a29k/t-vx29k", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fa29k%2Ft-vx29k", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fa29k%2Ft-vx29k", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Ft-vx29k?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -7,7 +7,11 @@ LIBGCC1_TEST =\n # We don't want to put exit in libgcc.a for VxWorks, because VxWorks\n # does not have _exit.\n TARGET_LIBGCC2_CFLAGS = -Dexit=unused_exit\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "339e25c1fc20ec55dec99cc9b914ff5b52824b75", "filename": "gcc/config/arc/t-arc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farc%2Ft-arc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farc%2Ft-arc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Ft-arc?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -7,10 +7,10 @@ LIB1ASMFUNCS = _mulsi3 _umulsidi3 _udivsi3 _divsi3 _umodsi3 _modsi3 _divmod_tool\n # ??? -mmangle-cpu passed by default for now.\n #LIBGCC2_CFLAGS = -g1 -O2 $(LIBGCC2_INCLUDES) $(GCC_CFLAGS) -mmangle-cpu\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#ifndef __big_endian__' > dp-bit.c"}, {"sha": "eb77fc5b7e33fd84c0e8f12c01b6b16dc60ddcdb", "filename": "gcc/config/arm/t-arm-elf", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-arm-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-arm-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm-elf?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -2,10 +2,10 @@ CROSS_LIBGCC1 = libgcc1-asm.a\n LIB1ASMSRC = arm/lib1funcs.asm\n LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c"}, {"sha": "71062ee9458d16f08cb6051d4158c191f76d726b", "filename": "gcc/config/arm/t-bare", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-bare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-bare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-bare?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -2,10 +2,10 @@ CROSS_LIBGCC1 = libgcc1-asm.a\n LIB1ASMSRC = arm/lib1funcs.asm\n LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c"}, {"sha": "0ffcfffaab344379be80424d79d970219260fe54", "filename": "gcc/config/arm/t-pe", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-pe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-pe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-pe?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -2,10 +2,10 @@ CROSS_LIBGCC1 = libgcc1-asm.a\n LIB1ASMSRC = arm/lib1funcs.asm\n LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _call_via_rX _interwork_call_via_rX\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c"}, {"sha": "d12beadc5984091b55a8114edf87eb3a6d16f0e9", "filename": "gcc/config/arm/t-pe-thumb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-pe-thumb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-pe-thumb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-pe-thumb?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -5,10 +5,10 @@ CROSS_LIBGCC1 = libgcc1-asm.a\n LIB1ASMSRC = arm/lib1thumb.asm\n LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _call_via_rX _interwork_call_via_rX\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c"}, {"sha": "bc793e8bcfa12b8fdc4dffb98623ff5a11be90f4", "filename": "gcc/config/arm/t-semi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-semi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-semi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-semi?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -17,10 +17,10 @@ LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _call_via_rX _interwo\n #Don't try to run fixproto\n STMP_FIXPROTO =\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#ifdef __SOFTFP__' > fp-bit.c"}, {"sha": "eb3e0111a8dfc729d6327c59f0592b0cff8647c2", "filename": "gcc/config/arm/t-thumb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-thumb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-thumb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-thumb?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -4,10 +4,10 @@ LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _call_via_rX _interwo\n # adddi3/subdi3 added to machine description\n #LIB1ASMFUNCS = _adddi3 _subdi3 _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c"}, {"sha": "302a20be1ab3d712857664fcdf7d59c9c371b4ad", "filename": "gcc/config/arm/t-thumb-elf", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-thumb-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-thumb-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-thumb-elf?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -3,10 +3,10 @@ LIB1ASMSRC = arm/lib1thumb.asm\n LIB1ASMFUNCS = _udivsi3 _divsi3 _umodsi3 _modsi3 _dvmd_tls _call_via_rX _interwork_call_via_rX\n # adddi3/subdi3 added to machine description\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c"}, {"sha": "e028ac04c4eb5b34686cf7a6debb0d59cb1cf16c", "filename": "gcc/config/arm/t-thumb-linux", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-thumb-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Farm%2Ft-thumb-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-thumb-linux?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -21,7 +21,10 @@ EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o\n LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c"}, {"sha": "fbc4d7314406076936b94267ed68a1e3e00508e3", "filename": "gcc/config/h8300/t-h8300", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fh8300%2Ft-h8300", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fh8300%2Ft-h8300", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Ft-h8300?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -5,7 +5,9 @@ LIB1ASMFUNCS = _cmpsi2 _ucmpsi2 _divhi3 _divsi3 _mulhi3 _mulsi3\n # We do not have DF or DI types, so fake out the libgcc2 compilation.\n TARGET_LIBGCC2_CFLAGS = -DDF=SF -DDI=SI\n \n-LIB2FUNCS_EXTRA = fp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n \n fp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT' > fp-bit.c"}, {"sha": "5c6b8274bb69807412214befef82bd90f0103348", "filename": "gcc/config/i960/t-960bare", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fi960%2Ft-960bare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fi960%2Ft-960bare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Ft-960bare?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -1,7 +1,12 @@\n LIBGCC1 =\n CROSS_LIBGCC1 =\n \n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c xp-bit.c\n+LIB2FUNCS_EXTRA = xp-bit.c\n+\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT_BIT_ORDER_MISMATCH' > dp-bit.c"}, {"sha": "43949fa4f84da0240fb21dfb57e9c6de835f553f", "filename": "gcc/config/i960/t-vxworks960", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fi960%2Ft-vxworks960", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fi960%2Ft-vxworks960", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Ft-vxworks960?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -4,7 +4,12 @@ CROSS_LIBGCC1 =\n # We don't want to put exit in libgcc.a for VxWorks, because VxWorks\n # does not have _exit.\n TARGET_LIBGCC2_CFLAGS = -Dexit=unused_exit\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c xp-bit.c\n+LIB2FUNCS_EXTRA = xp-bit.c\n+\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define FLOAT_BIT_ORDER_MISMATCH' > dp-bit.c"}, {"sha": "5a60e18adc16c2d108f2d83266f91663a4843986", "filename": "gcc/config/m32r/t-m32r", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fm32r%2Ft-m32r", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fm32r%2Ft-m32r", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Ft-m32r?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -1,10 +1,10 @@\n # lib1funcs.asm is currently empty.\n CROSS_LIBGCC1 =\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n # Turn off the SDA while compiling libgcc2.  There are no headers for it\n # and we want maximal upward compatibility here."}, {"sha": "55855a0ed85c6299959d4ee794cbaf307712b0ef", "filename": "gcc/config/mips/t-ecoff", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fmips%2Ft-ecoff", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fmips%2Ft-ecoff", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-ecoff?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -32,7 +32,10 @@ TARGET_LIBGCC2_CFLAGS = -G 0\n \n # fp-bit and dp-bit are really part of libgcc1, but this will cause\n # them to be built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#ifdef __MIPSEL__' > dp-bit.c"}, {"sha": "416e39a7ba0bf4f2930b3fb24be140008ca8f33a", "filename": "gcc/config/mips/t-elf", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fmips%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fmips%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-elf?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -36,7 +36,10 @@ TARGET_LIBGCC2_CFLAGS = -G 0\n \n # fp-bit and dp-bit are really part of libgcc1, but this will cause\n # them to be built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#ifdef __MIPSEL__' > dp-bit.c"}, {"sha": "ebc249ed5a640599901998694100f51fd721b2ea", "filename": "gcc/config/mips/t-r3900", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fmips%2Ft-r3900", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fmips%2Ft-r3900", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-r3900?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -32,7 +32,10 @@ TARGET_LIBGCC2_CFLAGS = -G 0\n \n # fp-bit and dp-bit are really part of libgcc1, but this will cause\n # them to be built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#ifdef __MIPSEL__' > dp-bit.c"}, {"sha": "f27815a2dc068fa1e78ef37e4c12c061138f5984", "filename": "gcc/config/mn10200/t-mn10200", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fmn10200%2Ft-mn10200", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fmn10200%2Ft-mn10200", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Ft-mn10200?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -31,9 +31,6 @@ LIB1ASMFUNCS    = _divhi3 \\\n \t\t  _epilogue_noreturn\n \n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n # We do not have DF or DI types, so fake out the libgcc2 compilation.\n TARGET_LIBGCC2_CFLAGS=-DDF=SF -DDI=SI\n LIB2FUNCS_EXTRA = $(srcdir)/config/mn10200/udivmodsi4.c \\"}, {"sha": "5dbb46f5cb0dc02fe91f19caa52b7108ab6dbe12", "filename": "gcc/config/mn10300/t-mn10300", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fmn10300%2Ft-mn10300", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fmn10300%2Ft-mn10300", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Ft-mn10300?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -1,9 +1,6 @@\n LIBGCC1=libgcc1.null\n CROSS_LIBGCC1=libgcc1.null\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries.\n FPBIT = fp-bit.c"}, {"sha": "26ced7e73dd994d6d4eb9f0f139a5c19405f9e89", "filename": "gcc/config/pa/t-pro", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fpa%2Ft-pro", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fpa%2Ft-pro", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pro?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -7,7 +7,13 @@ LIBGCC1_TEST =\n \n ADA_CFLAGS=-mdisable-indexing\n \n-LIB2FUNCS_EXTRA=fp-bit.c dp-bit.c lib2funcs.asm \n+LIB2FUNCS_EXTRA=lib2funcs.asm \n+\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n+\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "8897c5626357a90d8e48ef62dab3c10fae10d8e7", "filename": "gcc/config/rs6000/t-aix43", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-aix43", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-aix43", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-aix43?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -2,9 +2,10 @@\n LIBGCC1 =\n CROSS_LIBGCC1 =\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "b9b578ce2b80001b7f19f912c6b338a9b31cbcac", "filename": "gcc/config/rs6000/t-beos", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-beos", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-beos", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-beos?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -2,9 +2,10 @@\n LIBGCC1 =\n CROSS_LIBGCC1 =\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "cadcb95d34774c14c9f754b6a3cdea0f189875c2", "filename": "gcc/config/rs6000/t-newas", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-newas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-newas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-newas?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -2,9 +2,10 @@\n LIBGCC1 =\n CROSS_LIBGCC1 =\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "408f535f85d14d18fdcb3afb71a608fd4c40982c", "filename": "gcc/config/rs6000/t-ppccomm", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-ppccomm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-ppccomm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppccomm?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -6,7 +6,13 @@ CROSS_LIBGCC1 =\n \n # These are really part of libgcc1, but this will cause them to be\n # built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c eabi.S eabi-ctors.c tramp.S\n+LIB2FUNCS_EXTRA = eabi.S eabi-ctors.c tramp.S\n+\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n+\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "98f4473c48c9de5aa05e52505046539a599fb07d", "filename": "gcc/config/rs6000/t-rs6000", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-rs6000?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -2,9 +2,10 @@\n LIBGCC1 =\n CROSS_LIBGCC1 =\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "1aafae47422c9c3287941461e2ba364916b73a83", "filename": "gcc/config/rs6000/t-winnt", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-winnt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-winnt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-winnt?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -6,7 +6,13 @@ EXTRA_PARTS = crti.o crtn.o\n \n # These are really part of libgcc1, but this will cause them to be\n # built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c ntstack.S\n+LIB2FUNCS_EXTRA = ntstack.S\n+\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n+\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "219eaf3079f031c27ecd9522cfd1713dc33f4e1e", "filename": "gcc/config/rs6000/t-xnewas", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-xnewas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-xnewas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-xnewas?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -8,9 +8,10 @@ LIBGCC1_TEST =\n LIBGCC1 =\n CROSS_LIBGCC1 =\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "fc6cc602632168ce535141e10ddcc347740a7989", "filename": "gcc/config/rs6000/t-xrs6000", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-xrs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Frs6000%2Ft-xrs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-xrs6000?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -8,9 +8,10 @@ LIBGCC1_TEST =\n LIBGCC1 =\n CROSS_LIBGCC1 =\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so... [taken from t-sparclite]\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "ebe013e31f911623ddd3b13faf5a5ae49e2a4245", "filename": "gcc/config/sh/t-sh", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-sh?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -3,10 +3,10 @@ LIB1ASMSRC = sh/lib1funcs.asm\n LIB1ASMFUNCS = _ashiftrt _ashiftrt_n _ashiftlt _lshiftrt _movstr \\\n   _movstr_i4 _mulsi3 _sdivsi3 _sdivsi3_i4 _udivsi3 _udivsi3_i4 _set_fpscr\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#ifdef __LITTLE_ENDIAN__' > dp-bit.c"}, {"sha": "d05f9907a1295e6e69f69adf7bbe554e3f6c45f8", "filename": "gcc/config/sparc/t-elf", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fsparc%2Ft-elf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fsparc%2Ft-elf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-elf?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -8,10 +8,10 @@ LIB1ASMFUNCS = _mulsi3 _divsi3 _modsi3\n # crt0 is built elsewhere\n LIBGCC1_TEST =\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "01562b24b7c26b604b9633f9fc9c8b86a24f7bc0", "filename": "gcc/config/sparc/t-sparcbare", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fsparc%2Ft-sparcbare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fsparc%2Ft-sparcbare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sparcbare?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -4,10 +4,10 @@ CROSS_LIBGCC1 = libgcc1-asm.a\n LIB1ASMSRC = sparc/lb1spc.asm\n LIB1ASMFUNCS = _mulsi3 _divsi3 _modsi3\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "b5ccbb1e99fc9c41617b4057a586a8dc7f57a2cb", "filename": "gcc/config/sparc/t-sparclite", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fsparc%2Ft-sparclite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fsparc%2Ft-sparclite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sparclite?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -2,10 +2,10 @@ CROSS_LIBGCC1 = libgcc1-asm.a\n LIB1ASMSRC = sparc/lb1spl.asm\n LIB1ASMFUNCS = _divsi3 _udivsi3 _modsi3 _umodsi3\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#define US_SOFTWARE_GOFAST' > dp-bit.c"}, {"sha": "ecead404966ad2c1722f1fe1bb65bae2ce41cd06", "filename": "gcc/config/sparc/t-splet", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fsparc%2Ft-splet", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fsparc%2Ft-splet", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-splet?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -4,10 +4,10 @@ CROSS_LIBGCC1 = libgcc1-asm.a\n LIB1ASMSRC = sparc/lb1spc.asm\n LIB1ASMFUNCS = _mulsi3 _divsi3 _modsi3\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \tcat $(srcdir)/config/fp-bit.c > dp-bit.c"}, {"sha": "290d28b4441ecd9261ea613c98cec8c38d5827f8", "filename": "gcc/config/v850/t-v850", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fv850%2Ft-v850", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c91fba509bdb2e7503496317011f35241053e947/gcc%2Fconfig%2Fv850%2Ft-v850", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850?ref=c91fba509bdb2e7503496317011f35241053e947", "patch": "@@ -33,10 +33,10 @@ LIB1ASMFUNCS\t= _mulsi3 \\\n \t\t  _save_all_interrupt\n \t\n \n-# These are really part of libgcc1, but this will cause them to be\n-# built correctly, so...\n-\n-LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+# We want fine grained libraries, so use the new code to build the\n+# floating point emulation libraries.\n+FPBIT = fp-bit.c\n+DPBIT = dp-bit.c\n \n dp-bit.c: $(srcdir)/config/fp-bit.c\n \techo '#ifdef __LITTLE_ENDIAN__' > dp-bit.c"}]}