{"sha": "73b0ac0b82fb81dbbab5738d6443b14225c3fe53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNiMGFjMGI4MmZiODFkYmJhYjU3MzhkNjQ0M2IxNDIyNWMzZmU1Mw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2017-10-26T17:33:38Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2017-10-26T17:33:38Z"}, "message": "aix.h (TARGET_IEEEQUAD_DEFAULT): Set long double default to IBM.\n\n[gcc]\n2017-10-26  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* config/rs6000/aix.h (TARGET_IEEEQUAD_DEFAULT): Set long double\n\tdefault to IBM.\n\t* config/rs6000/darwin.h (TARGET_IEEEQUAD_DEFAULT): Likewise.\n\t* config/rs6000/rs6000.opt (-mabi=ieeelongdouble): Move the\n\twarning to rs6000.c.  Remove the Undocumented flag, since it has\n\tbeen documented.\n\t(-mabi=ibmlongdouble): Likewise.\n\t* config/rs6000/rs6000.c (TARGET_IEEEQUAD_DEFAULT): If it is not\n\talready set, set the default format for long double.\n\t(rs6000_debug_reg_global): Print whether long double is IBM or\n\tIEEE.\n\t(rs6000_option_override_internal): Rework setting long double\n\tformat.  Only warn if the user is changing the long double default\n\tand they did not use -Wno-psabi.\n\t* doc/invoke.texi (PowerPC options): Update the documentation for\n\t-mabi=ieeelongdouble and -mabi=ibmlongdouble.\n\nFrom-SVN: r254116", "tree": {"sha": "1202fcd30619978b42d76853077820c36057cd5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1202fcd30619978b42d76853077820c36057cd5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73b0ac0b82fb81dbbab5738d6443b14225c3fe53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73b0ac0b82fb81dbbab5738d6443b14225c3fe53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73b0ac0b82fb81dbbab5738d6443b14225c3fe53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/comments", "author": null, "committer": null, "parents": [{"sha": "bd5a2c67cfd636b6c78f213c8ee6dac62323eff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5a2c67cfd636b6c78f213c8ee6dac62323eff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5a2c67cfd636b6c78f213c8ee6dac62323eff9"}], "stats": {"total": 85, "additions": 75, "deletions": 10}, "files": [{"sha": "c6e0b8501b40d8e3fbdf283b0a88a3b766e4c675", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73b0ac0b82fb81dbbab5738d6443b14225c3fe53", "patch": "@@ -1,3 +1,22 @@\n+2017-10-26  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/aix.h (TARGET_IEEEQUAD_DEFAULT): Set long double\n+\tdefault to IBM.\n+\t* config/rs6000/darwin.h (TARGET_IEEEQUAD_DEFAULT): Likewise.\n+\t* config/rs6000/rs6000.opt (-mabi=ieeelongdouble): Move the\n+\twarning to rs6000.c.  Remove the Undocumented flag, since it has\n+\tbeen documented.\n+\t(-mabi=ibmlongdouble): Likewise.\n+\t* config/rs6000/rs6000.c (TARGET_IEEEQUAD_DEFAULT): If it is not\n+\talready set, set the default format for long double.\n+\t(rs6000_debug_reg_global): Print whether long double is IBM or\n+\tIEEE.\n+\t(rs6000_option_override_internal): Rework setting long double\n+\tformat.  Only warn if the user is changing the long double default\n+\tand they did not use -Wno-psabi.\n+\t* doc/invoke.texi (PowerPC options): Update the documentation for\n+\t-mabi=ieeelongdouble and -mabi=ibmlongdouble.\n+\n 2017-10-26  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "73541819fdeaf2097cf9b0fe4768cd4e3dfe5b88", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=73b0ac0b82fb81dbbab5738d6443b14225c3fe53", "patch": "@@ -76,6 +76,9 @@\n #undef  TARGET_IEEEQUAD\n #define TARGET_IEEEQUAD 0\n \n+#undef  TARGET_IEEEQUAD_DEFAULT\n+#define TARGET_IEEEQUAD_DEFAULT 0\n+\n /* The AIX linker will discard static constructors in object files before\n    collect has a chance to see them, so scan the object files directly.  */\n #define COLLECT_EXPORT_LIST"}, {"sha": "a6a7b2c554c30de10086a5a5fe0fce5cbffcba43", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=73b0ac0b82fb81dbbab5738d6443b14225c3fe53", "patch": "@@ -272,6 +272,9 @@ extern int darwin_emit_branch_islands;\n #undef  TARGET_IEEEQUAD\n #define TARGET_IEEEQUAD 0\n \n+#undef  TARGET_IEEEQUAD_DEFAULT\n+#define TARGET_IEEEQUAD_DEFAULT 0\n+\n /* Since Darwin doesn't do TOCs, stub this out.  */\n \n #define ASM_OUTPUT_SPECIAL_POOL_ENTRY_P(X, MODE)  ((void)X, (void)MODE, 0)"}, {"sha": "3162d522fe388ad779f25d473b0c7cd384a79755", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 40, "deletions": 6, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=73b0ac0b82fb81dbbab5738d6443b14225c3fe53", "patch": "@@ -84,6 +84,20 @@\n \n #ifndef TARGET_NO_PROTOTYPE\n #define TARGET_NO_PROTOTYPE 0\n+#endif\n+\n+  /* Set -mabi=ieeelongdouble on some old targets.  In the future, power server\n+     systems will also set long double to be IEEE 128-bit.  AIX and Darwin\n+     explicitly redefine TARGET_IEEEQUAD and TARGET_IEEEQUAD_DEFAULT to 0, so\n+     those systems will not pick up this default.  This needs to be after all\n+     of the include files, so that POWERPC_LINUX and POWERPC_FREEBSD are\n+     properly defined.  */\n+#ifndef TARGET_IEEEQUAD_DEFAULT\n+#if !defined (POWERPC_LINUX) && !defined (POWERPC_FREEBSD)\n+#define TARGET_IEEEQUAD_DEFAULT 1\n+#else\n+#define TARGET_IEEEQUAD_DEFAULT 0\n+#endif\n #endif\n \n #define min(A,B)\t((A) < (B) ? (A) : (B))\n@@ -2878,6 +2892,13 @@ rs6000_debug_reg_global (void)\n   fprintf (stderr, DEBUG_FMT_D, \"tls_size\", rs6000_tls_size);\n   fprintf (stderr, DEBUG_FMT_D, \"long_double_size\",\n \t   rs6000_long_double_type_size);\n+  if (rs6000_long_double_type_size == 128)\n+    {\n+      fprintf (stderr, DEBUG_FMT_S, \"long double type\",\n+\t       TARGET_IEEEQUAD ? \"IEEE\" : \"IBM\");\n+      fprintf (stderr, DEBUG_FMT_S, \"default long double type\",\n+\t       TARGET_IEEEQUAD_DEFAULT ? \"IEEE\" : \"IBM\");\n+    }\n   fprintf (stderr, DEBUG_FMT_D, \"sched_restricted_insns_priority\",\n \t   (int)rs6000_sched_restricted_insns_priority);\n   fprintf (stderr, DEBUG_FMT_D, \"Number of standard builtins\",\n@@ -4560,13 +4581,26 @@ rs6000_option_override_internal (bool global_init_p)\n \trs6000_long_double_type_size = RS6000_DEFAULT_LONG_DOUBLE_SIZE;\n     }\n \n-  /* Set -mabi=ieeelongdouble on some old targets.  Note, AIX and Darwin\n-     explicitly redefine TARGET_IEEEQUAD to 0, so those systems will not\n-     pick up this default.  */\n-#if !defined (POWERPC_LINUX) && !defined (POWERPC_FREEBSD)\n+  /* Set -mabi=ieeelongdouble on some old targets.  In the future, power server\n+     systems will also set long double to be IEEE 128-bit.  AIX and Darwin\n+     explicitly redefine TARGET_IEEEQUAD and TARGET_IEEEQUAD_DEFAULT to 0, so\n+     those systems will not pick up this default.  Warn if the user changes the\n+     default unless -Wno-psabi.  */\n   if (!global_options_set.x_rs6000_ieeequad)\n-    rs6000_ieeequad = 1;\n-#endif\n+    rs6000_ieeequad = TARGET_IEEEQUAD_DEFAULT;\n+\n+  else if (rs6000_ieeequad != TARGET_IEEEQUAD_DEFAULT && TARGET_LONG_DOUBLE_128)\n+    {\n+      static bool warned_change_long_double;\n+      if (!warned_change_long_double)\n+\t{\n+\t  warned_change_long_double = true;\n+\t  if (TARGET_IEEEQUAD)\n+\t    warning (OPT_Wpsabi, \"Using IEEE extended precision long double\");\n+\t  else\n+\t    warning (OPT_Wpsabi, \"Using IBM extended precision long double\");\n+\t}\n+    }\n \n   /* Enable the default support for IEEE 128-bit floating point on Linux VSX\n      sytems.  In GCC 7, we would enable the the IEEE 128-bit floating point"}, {"sha": "e7d0829495e03ebcb0bb7184ce5ad9a282d63bca", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=73b0ac0b82fb81dbbab5738d6443b14225c3fe53", "patch": "@@ -381,10 +381,10 @@ mabi=d32\n Target RejectNegative Undocumented Warn(using old darwin ABI) Var(rs6000_darwin64_abi, 0)\n \n mabi=ieeelongdouble\n-Target RejectNegative Undocumented Warn(using IEEE extended precision long double) Var(rs6000_ieeequad) Save\n+Target RejectNegative Var(rs6000_ieeequad) Save\n \n mabi=ibmlongdouble\n-Target RejectNegative Undocumented Warn(using IBM extended precision long double) Var(rs6000_ieeequad, 0)\n+Target RejectNegative Var(rs6000_ieeequad, 0)\n \n mcpu=\n Target RejectNegative Joined Var(rs6000_cpu_index) Init(-1) Enum(rs6000_cpu_opt_value) Save"}, {"sha": "f950c3ca3941a21466d42e11bc049f672576e557", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b0ac0b82fb81dbbab5738d6443b14225c3fe53/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=73b0ac0b82fb81dbbab5738d6443b14225c3fe53", "patch": "@@ -22614,12 +22614,18 @@ Disable Book-E SPE ABI extensions for the current ABI@.\n @item -mabi=ibmlongdouble\n @opindex mabi=ibmlongdouble\n Change the current ABI to use IBM extended-precision long double.\n-This is a PowerPC 32-bit SYSV ABI option.\n+This is not likely to work if your system defaults to using IEEE\n+extended-precision long double.  If you change the long double type\n+from IEEE extended-precision, the compiler will issue a warning unless\n+you use the @option{-Wno-psabi} option.\n \n @item -mabi=ieeelongdouble\n @opindex mabi=ieeelongdouble\n Change the current ABI to use IEEE extended-precision long double.\n-This is a PowerPC 32-bit Linux ABI option.\n+This is not likely to work if your system defaults to using IBM\n+extended-precision long double.  If you change the long double type\n+from IBM extended-precision, the compiler will issue a warning unless\n+you use the @option{-Wno-psabi} option.\n \n @item -mabi=elfv1\n @opindex mabi=elfv1"}]}