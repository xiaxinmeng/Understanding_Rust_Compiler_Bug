{"sha": "449cd5af046c35e021ff0a6261c728479ae6fb91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ5Y2Q1YWYwNDZjMzVlMDIxZmYwYTYyNjFjNzI4NDc5YWU2ZmI5MQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2017-01-20T15:29:21Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2017-01-20T15:29:21Z"}, "message": "Skip optional_mthumb tests if GCC has a default mode\n\n2017-01-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/testsuite/\n    * lib/target-supports.exp (check_configured_with): New procedure.\n    (check_effective_target_default_mode): new effective target.\n    * gcc.target/arm/optional_thumb-1.c: Skip if GCC was configured with a\n    default mode.  Fix dg-skip-if target selector syntax.\n    * gcc.target/arm/optional_thumb-2.c: Likewise.\n    * gcc.target/arm/optional_thumb-3.c: Fix dg-skip-if target selector\n    syntax.\n\nFrom-SVN: r244723", "tree": {"sha": "707571242512a63ab07685f563273fd96e5ec9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/707571242512a63ab07685f563273fd96e5ec9e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/449cd5af046c35e021ff0a6261c728479ae6fb91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/449cd5af046c35e021ff0a6261c728479ae6fb91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/449cd5af046c35e021ff0a6261c728479ae6fb91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/449cd5af046c35e021ff0a6261c728479ae6fb91/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12905f106c1cc8c6757038e3c41df478077bb870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12905f106c1cc8c6757038e3c41df478077bb870", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12905f106c1cc8c6757038e3c41df478077bb870"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "cc98016025e3f8df4755341627cc23de2a6153f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/449cd5af046c35e021ff0a6261c728479ae6fb91/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/449cd5af046c35e021ff0a6261c728479ae6fb91/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=449cd5af046c35e021ff0a6261c728479ae6fb91", "patch": "@@ -1,3 +1,13 @@\n+2017-01-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* lib/target-supports.exp (check_configured_with): New procedure.\n+\t(check_effective_target_default_mode): new effective target.\n+\t* gcc.target/arm/optional_thumb-1.c: Skip if GCC was configured with a\n+\tdefault mode.  Fix dg-skip-if target selector syntax.\n+\t* gcc.target/arm/optional_thumb-2.c: Likewise.\n+\t* gcc.target/arm/optional_thumb-3.c: Fix dg-skip-if target selector\n+\tsyntax.\n+\n 2017-01-20  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/77829"}, {"sha": "99cb0c3f33b601fff4493feef72765f7590e18f6", "filename": "gcc/testsuite/gcc.target/arm/optional_thumb-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/449cd5af046c35e021ff0a6261c728479ae6fb91/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Foptional_thumb-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/449cd5af046c35e021ff0a6261c728479ae6fb91/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Foptional_thumb-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Foptional_thumb-1.c?ref=449cd5af046c35e021ff0a6261c728479ae6fb91", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile } */\n-/* { dg-skip-if \"-marm/-mthumb/-march/-mcpu given\" { *-*-*} { \"-marm\" \"-mthumb\" \"-march=*\" \"-mcpu=*\" } } */\n+/* { dg-do compile { target { ! default_mode } } } */\n+/* { dg-skip-if \"-marm/-mthumb/-march/-mcpu given\" { *-*-* } { \"-marm\" \"-mthumb\" \"-march=*\" \"-mcpu=*\" } } */\n /* { dg-options \"-march=armv6-m\" } */\n \n /* Check that -mthumb is not needed when compiling for a Thumb-only target.  */"}, {"sha": "280dfb3fec55570b6cfe934303c9bd3d50322b86", "filename": "gcc/testsuite/gcc.target/arm/optional_thumb-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/449cd5af046c35e021ff0a6261c728479ae6fb91/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Foptional_thumb-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/449cd5af046c35e021ff0a6261c728479ae6fb91/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Foptional_thumb-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Foptional_thumb-2.c?ref=449cd5af046c35e021ff0a6261c728479ae6fb91", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile } */\n-/* { dg-skip-if \"-marm/-mthumb/-march/-mcpu given\" { *-*-*} { \"-marm\" \"-mthumb\" \"-march=*\" \"-mcpu=*\" } } */\n+/* { dg-do compile { target { ! default_mode } } } */\n+/* { dg-skip-if \"-marm/-mthumb/-march/-mcpu given\" { *-*-* } { \"-marm\" \"-mthumb\" \"-march=*\" \"-mcpu=*\" } } */\n /* { dg-options \"-mcpu=cortex-m4\" } */\n \n /* Check that -mthumb is not needed when compiling for a Thumb-only target.  */"}, {"sha": "d9150e09e475dfbeb7b0b0c153c913b1ad6f0777", "filename": "gcc/testsuite/gcc.target/arm/optional_thumb-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/449cd5af046c35e021ff0a6261c728479ae6fb91/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Foptional_thumb-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/449cd5af046c35e021ff0a6261c728479ae6fb91/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Foptional_thumb-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Foptional_thumb-3.c?ref=449cd5af046c35e021ff0a6261c728479ae6fb91", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target arm_cortex_m } */\n-/* { dg-skip-if \"-mthumb given\" { *-*-*} { \"-mthumb\" } } */\n+/* { dg-skip-if \"-mthumb given\" { *-*-* } { \"-mthumb\" } } */\n /* { dg-options \"-marm\" } */\n-/* { dg-error \"target CPU does not support ARM mode\" \"missing error with -marm on Thumb-only targets\" { target *-*-*} 0 } */\n+/* { dg-error \"target CPU does not support ARM mode\" \"missing error with -marm on Thumb-only targets\" { target *-*-* } 0 } */\n \n /* Check that -marm gives an error when compiling for a Thumb-only target.  */\n "}, {"sha": "e1d6dcbf088c285a1c9e55ac67f23c37c5f451ad", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/449cd5af046c35e021ff0a6261c728479ae6fb91/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/449cd5af046c35e021ff0a6261c728479ae6fb91/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=449cd5af046c35e021ff0a6261c728479ae6fb91", "patch": "@@ -252,6 +252,20 @@ proc check_runtime {prop args} {\n     }]\n }\n \n+# Return 1 if GCC was configured with $pattern.\n+proc check_configured_with { pattern } {\n+    global tool\n+\n+    set gcc_output [${tool}_target_compile \"-v\" \"\" \"none\" \"\"]\n+    if { [ regexp \"Configured with: \\[^\\n\\]*$pattern\" $gcc_output ] } {\n+        verbose \"Matched: $pattern\" 2\n+        return 1\n+    }\n+\n+    verbose \"Failed to match: $pattern\" 2\n+    return 0\n+}\n+\n ###############################\n # proc check_weak_available { }\n ###############################\n@@ -3817,6 +3831,12 @@ proc add_options_for_arm_arch_v7ve { flags } {\n     return \"$flags -march=armv7ve\"\n }\n \n+# Return 1 if GCC was configured with --with-mode=\n+proc check_effective_target_default_mode { } {\n+\n+    return [check_configured_with \"with-mode=\"]\n+}\n+\n # Return 1 if this is an ARM target where -marm causes ARM to be\n # used (not Thumb)\n "}]}