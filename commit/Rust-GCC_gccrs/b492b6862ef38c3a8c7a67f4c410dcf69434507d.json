{"sha": "b492b6862ef38c3a8c7a67f4c410dcf69434507d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ5MmI2ODYyZWYzOGMzYThjN2E2N2Y0YzQxMGRjZjY5NDM0NTA3ZA==", "commit": {"author": {"name": "Gary Funck", "email": "gary@intrepid.com", "date": "2012-01-09T08:48:43Z"}, "committer": {"name": "Gary Funck", "email": "gfunck@gcc.gnu.org", "date": "2012-01-09T08:48:43Z"}, "message": "re PR preprocessor/33919 (__BASE_FILE__ does not expand correctly when included from the command line)\n\nlibcpp/\n\tPR preprocessor/33919\n\t* files.c (_cpp_get_file_name): New. Implement file name\n\taccess function.\n\t* internal.h (_cpp_get_file_name): New prototype.\n\t* macro.c (_cpp_builtin_macro_text): Call _cpp_get_file_name()\n\tto use pfile->main_file in lieu of traversing INCLUDED_FROM chain.\n\ngcc/testsuite/\n\tPR preprocessor/33919\n\t* gcc.dg/pr33919.c: New test.\n\t* gcc.dg/pr33919-0.h: New test header file.\n\t* gcc.dg/pr33919-1.h: Ditto.\n\t* gcc.dg/pr33919-2.h: Ditto.\n\nFrom-SVN: r183003", "tree": {"sha": "2b2f237168b3048e8f7a77942d33aaf369c7cae0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b2f237168b3048e8f7a77942d33aaf369c7cae0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b492b6862ef38c3a8c7a67f4c410dcf69434507d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b492b6862ef38c3a8c7a67f4c410dcf69434507d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b492b6862ef38c3a8c7a67f4c410dcf69434507d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b492b6862ef38c3a8c7a67f4c410dcf69434507d/comments", "author": {"login": "gary-funck", "id": 2517592, "node_id": "MDQ6VXNlcjI1MTc1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2517592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gary-funck", "html_url": "https://github.com/gary-funck", "followers_url": "https://api.github.com/users/gary-funck/followers", "following_url": "https://api.github.com/users/gary-funck/following{/other_user}", "gists_url": "https://api.github.com/users/gary-funck/gists{/gist_id}", "starred_url": "https://api.github.com/users/gary-funck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gary-funck/subscriptions", "organizations_url": "https://api.github.com/users/gary-funck/orgs", "repos_url": "https://api.github.com/users/gary-funck/repos", "events_url": "https://api.github.com/users/gary-funck/events{/privacy}", "received_events_url": "https://api.github.com/users/gary-funck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fdff9f3d33732e60f9c1a22e4a3c40a3aeea7447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdff9f3d33732e60f9c1a22e4a3c40a3aeea7447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdff9f3d33732e60f9c1a22e4a3c40a3aeea7447"}], "stats": {"total": 70, "additions": 62, "deletions": 8}, "files": [{"sha": "06ad7c6d319a6e28decd451d59eab5b750703d99", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b492b6862ef38c3a8c7a67f4c410dcf69434507d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b492b6862ef38c3a8c7a67f4c410dcf69434507d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b492b6862ef38c3a8c7a67f4c410dcf69434507d", "patch": "@@ -1,3 +1,11 @@\n+2012-01-09  Gary Funck  <gary@intrepid.com>\n+\n+\tPR preprocessor/33919\n+\t* gcc.dg/pr33919.c: New test.\n+\t* gcc.dg/pr33919-0.h: New test header file.\n+\t* gcc.dg/pr33919-1.h: Ditto.\n+\t* gcc.dg/pr33919-2.h: Ditto.\n+\n 2012-01-07  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimize/51694"}, {"sha": "21966c6ce13776b9aad607695b232f4fc2ae9125", "filename": "gcc/testsuite/gcc.dg/pr33919-0.h", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b492b6862ef38c3a8c7a67f4c410dcf69434507d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919-0.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b492b6862ef38c3a8c7a67f4c410dcf69434507d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919-0.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919-0.h?ref=b492b6862ef38c3a8c7a67f4c410dcf69434507d", "patch": "@@ -0,0 +1 @@\n+char *pre_inc_base_file = __BASE_FILE__;"}, {"sha": "c7345aa5812f5b4b714b22e9fe8dff7610c0bfad", "filename": "gcc/testsuite/gcc.dg/pr33919-1.h", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b492b6862ef38c3a8c7a67f4c410dcf69434507d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b492b6862ef38c3a8c7a67f4c410dcf69434507d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919-1.h?ref=b492b6862ef38c3a8c7a67f4c410dcf69434507d", "patch": "@@ -0,0 +1,2 @@\n+#include \"pr33919-2.h\"\n+char *inc_base_file = __BASE_FILE__;"}, {"sha": "3c222576262834262f3096985135bf81fabf590b", "filename": "gcc/testsuite/gcc.dg/pr33919-2.h", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b492b6862ef38c3a8c7a67f4c410dcf69434507d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919-2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b492b6862ef38c3a8c7a67f4c410dcf69434507d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919-2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919-2.h?ref=b492b6862ef38c3a8c7a67f4c410dcf69434507d", "patch": "@@ -0,0 +1 @@\n+char *nested_inc_base_file = __BASE_FILE__;"}, {"sha": "14ea3746cf63da4aeeca3b274a199a2ed410b182", "filename": "gcc/testsuite/gcc.dg/pr33919.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b492b6862ef38c3a8c7a67f4c410dcf69434507d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b492b6862ef38c3a8c7a67f4c410dcf69434507d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33919.c?ref=b492b6862ef38c3a8c7a67f4c410dcf69434507d", "patch": "@@ -0,0 +1,26 @@\n+/* PR preprocessor/pr33919 */\n+/* { dg-do run } */\n+/* { dg-options \"-I . -include ${srcdir}/gcc.dg/pr33919-0.h\" } */\n+\n+#include \"pr33919-1.h\"\n+\n+const char *base_file = __BASE_FILE__;\n+\n+extern int strcmp (const char *, const char *);\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+  if (!strcmp (pre_inc_base_file, \"<command line>\"))\n+    abort ();\n+  if (strcmp (pre_inc_base_file, __FILE__))\n+    abort ();\n+  if (strcmp (base_file, __FILE__))\n+    abort ();\n+  if (strcmp (inc_base_file, __FILE__))\n+    abort ();\n+  if (strcmp (nested_inc_base_file, __FILE__))\n+    abort ();\n+  return 0;\n+}"}, {"sha": "8a1eb05c5e5a2d74adf056b8f3f2c4a8f8f2a0df", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b492b6862ef38c3a8c7a67f4c410dcf69434507d/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b492b6862ef38c3a8c7a67f4c410dcf69434507d/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=b492b6862ef38c3a8c7a67f4c410dcf69434507d", "patch": "@@ -1,3 +1,12 @@\n+2012-01-09  Gary Funck  <gary@intrepid.com>\n+\n+\tPR preprocessor/33919\n+\t* files.c (_cpp_get_file_name): New. Implement file name\n+\taccess function.\n+\t* internal.h (_cpp_get_file_name): New prototype.\n+\t* macro.c (_cpp_builtin_macro_text): Call _cpp_get_file_name()\n+\tto use pfile->main_file in lieu of traversing INCLUDED_FROM chain.\n+\n 2012-01-03  Olivier Hainque  <hainque@adacore.com>\n \n \t* system.h: Prior to #define, #undef fopen and freopen unconditionally."}, {"sha": "29ccf3b701390b44f67d95dc3d7fd1f4e3cae161", "filename": "libcpp/files.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b492b6862ef38c3a8c7a67f4c410dcf69434507d/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b492b6862ef38c3a8c7a67f4c410dcf69434507d/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=b492b6862ef38c3a8c7a67f4c410dcf69434507d", "patch": "@@ -1,7 +1,7 @@\n /* Part of CPP library.  File handling.\n    Copyright (C) 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n-   Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+   2006, 2007, 2008, 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n    Written by Per Bothner, 1994.\n    Based on CCCP program by Paul Rubin, June 1986\n    Adapted to ANSI C, Richard Stallman, Jan 1987\n@@ -1370,6 +1370,13 @@ _cpp_pop_file_buffer (cpp_reader *pfile, _cpp_file *file)\n     }\n }\n \n+/* Return the file name associated with FILE.  */\n+const char *\n+_cpp_get_file_name (_cpp_file *file)\n+{\n+  return file->name;\n+}\n+\n /* Inteface to file statistics record in _cpp_file structure. */\n struct stat *\n _cpp_get_file_stat (_cpp_file *file)"}, {"sha": "5b3731bba1d7e44531e96421bce8ee9254f934d6", "filename": "libcpp/internal.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b492b6862ef38c3a8c7a67f4c410dcf69434507d/libcpp%2Finternal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b492b6862ef38c3a8c7a67f4c410dcf69434507d/libcpp%2Finternal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finternal.h?ref=b492b6862ef38c3a8c7a67f4c410dcf69434507d", "patch": "@@ -1,6 +1,6 @@\n /* Part of CPP library.\n    Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007,\n-   2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n+   2008, 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n \n This program is free software; you can redistribute it and/or modify it\n under the terms of the GNU General Public License as published by the\n@@ -635,6 +635,7 @@ extern void _cpp_cleanup_files (cpp_reader *);\n extern void _cpp_pop_file_buffer (cpp_reader *, struct _cpp_file *);\n extern bool _cpp_save_file_entries (cpp_reader *pfile, FILE *f);\n extern bool _cpp_read_file_entries (cpp_reader *, FILE *);\n+extern const char *_cpp_get_file_name (_cpp_file *);\n extern struct stat *_cpp_get_file_stat (_cpp_file *);\n \n /* In expr.c */"}, {"sha": "32f99ca030a3c01d614903fbdd0f393c3a5b84bd", "filename": "libcpp/macro.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b492b6862ef38c3a8c7a67f4c410dcf69434507d/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b492b6862ef38c3a8c7a67f4c410dcf69434507d/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=b492b6862ef38c3a8c7a67f4c410dcf69434507d", "patch": "@@ -1,7 +1,7 @@\n /* Part of CPP library.  (Macro and #define handling.)\n    Copyright (C) 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1998,\n    1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-   2006, 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n+   2006, 2007, 2008, 2009, 2010, 2011, 2012 Free Software Foundation, Inc.\n    Written by Per Bothner, 1994.\n    Based on CCCP program by Paul Rubin, June 1986\n    Adapted to ANSI C, Richard Stallman, Jan 1987\n@@ -278,10 +278,9 @@ _cpp_builtin_macro_text (cpp_reader *pfile, cpp_hashnode *node)\n \t\t\t\t\t\t pfile->line_table->highest_line);\n \telse\n \t  {\n-\t    map = linemap_lookup (pfile->line_table, pfile->line_table->highest_line);\n-\t    while (! MAIN_FILE_P (map))\n-\t      map = INCLUDED_FROM (pfile->line_table, map);\n-\t    name = ORDINARY_MAP_FILE_NAME (map);\n+\t    name = _cpp_get_file_name (pfile->main_file);\n+\t    if (!name)\n+\t      abort ();\n \t  }\n \tlen = strlen (name);\n \tbuf = _cpp_unaligned_alloc (pfile, len * 2 + 3);"}]}