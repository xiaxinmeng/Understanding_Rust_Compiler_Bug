{"sha": "134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM0ZmVlNjU4ZDBiYjRkOGRiYWEwZmUzYWNkMzUyNDkyZDJhYzBhOA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-12T13:20:50Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-12T13:20:50Z"}, "message": "Action.java, [...]: Removed redundant modifiers.\n\n2003-10-12  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/Action.java,\n\tjavax/swing/BoundedRangeModel.java,\n\tjavax/swing/CellEditor.java,\n\tjavax/swing/ComboBoxEditor.java,\n\tjavax/swing/ComboBoxModel.java,\n\tjavax/swing/DesktopManager.java,\n\tjavax/swing/JComboBox.java,\n\tjavax/swing/ListCellRenderer.java,\n\tjavax/swing/ListSelectionModel.java,\n\tjavax/swing/MenuElement.java,\n\tjavax/swing/MutableComboBoxModel.java,\n\tjavax/swing/Renderer.java,\n\tjavax/swing/RootPaneContainer.java,\n\tjavax/swing/ScrollPaneConstants.java,\n\tjavax/swing/SingleSelectionModel.java,\n\tjavax/swing/SpinnerModel.java,\n\tjavax/swing/SwingConstants.java,\n\tjavax/swing/UIDefaults.java,\n\tjavax/swing/WindowConstants.java,\n\tjavax/swing/border/Border.java,\n\tjavax/swing/colorchooser/ColorSelectionModel.java:\n\tRemoved redundant modifiers.\n\nFrom-SVN: r72394", "tree": {"sha": "fd2071184b4faf99edb465e391b9a3c71076ce96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd2071184b4faf99edb465e391b9a3c71076ce96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/comments", "author": null, "committer": null, "parents": [{"sha": "f5677b1560c4d29dd5979dbf7da43195f7e11dc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5677b1560c4d29dd5979dbf7da43195f7e11dc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5677b1560c4d29dd5979dbf7da43195f7e11dc1"}], "stats": {"total": 323, "additions": 174, "deletions": 149}, "files": [{"sha": "23c46a24e82a99d153397097183a5314679bf732", "filename": "libjava/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -1,3 +1,28 @@\n+2003-10-12  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/Action.java,\n+\tjavax/swing/BoundedRangeModel.java,\n+\tjavax/swing/CellEditor.java,\n+\tjavax/swing/ComboBoxEditor.java,\n+\tjavax/swing/ComboBoxModel.java,\n+\tjavax/swing/DesktopManager.java,\n+\tjavax/swing/JComboBox.java,\n+\tjavax/swing/ListCellRenderer.java,\n+\tjavax/swing/ListSelectionModel.java,\n+\tjavax/swing/MenuElement.java,\n+\tjavax/swing/MutableComboBoxModel.java,\n+\tjavax/swing/Renderer.java,\n+\tjavax/swing/RootPaneContainer.java,\n+\tjavax/swing/ScrollPaneConstants.java,\n+\tjavax/swing/SingleSelectionModel.java,\n+\tjavax/swing/SpinnerModel.java,\n+\tjavax/swing/SwingConstants.java,\n+\tjavax/swing/UIDefaults.java,\n+\tjavax/swing/WindowConstants.java,\n+\tjavax/swing/border/Border.java,\n+\tjavax/swing/colorchooser/ColorSelectionModel.java:\n+\tRemoved redundant modifiers.\n+\n 2003-10-11  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/transaction/Status.java,"}, {"sha": "d1650b2ddd5e6d3bf2c88eebf411197e0471bacc", "filename": "libjava/javax/swing/Action.java", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FAction.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -56,42 +56,42 @@ public interface Action extends ActionListener {\n \t/**\n \t * DEFAULT\n \t */\n-\tpublic static final\tString\tDEFAULT\t\t\t\t= \"Default\";\n+\tString\tDEFAULT\t\t\t\t= \"Default\";\n \n \t/**\n \t * LONG_DESCRIPTION\n \t */\n-\tpublic static final\tString\tLONG_DESCRIPTION\t= \"LongDescription\";\n+\tString\tLONG_DESCRIPTION\t= \"LongDescription\";\n \n \t/**\n \t * NAME\n \t */\n-\tpublic static final\tString\tNAME\t\t\t\t= \"Name\";\n+\tString\tNAME\t\t\t\t= \"Name\";\n \n \t/**\n \t * SHORT_DESCRIPTION\n \t */\n-\tpublic static final\tString\tSHORT_DESCRIPTION\t= \"ShortDescription\";\n+\tString\tSHORT_DESCRIPTION\t= \"ShortDescription\";\n \n \t/**\n \t * SMALL_ICON\n \t */\n-\tpublic static final\tString\tSMALL_ICON\t\t\t= \"SmallIcon\";\n+\tString\tSMALL_ICON\t\t\t= \"SmallIcon\";\n \n \t/**\n \t * ACCELERATOR_KEY\n \t */\n-\tpublic static final String ACCELERATOR_KEY = \"AcceleratorKey\";\n+\tString ACCELERATOR_KEY = \"AcceleratorKey\";\n \n \t/**\n \t * ACTION_COMMAND_KEY\n \t */\n-\tpublic static final String ACTION_COMMAND_KEY = \"ActionCommandKey\";\n+\tString ACTION_COMMAND_KEY = \"ActionCommandKey\";\n \n \t/**\n \t * MNEMONIC_KEY\n \t */\n-\tpublic static final String MNEMONIC_KEY = \"MnemonicKey\";\n+\tString MNEMONIC_KEY = \"MnemonicKey\";\n \n \n \t//-------------------------------------------------------------\n@@ -103,38 +103,38 @@ public interface Action extends ActionListener {\n \t * @param key TODO\n \t * @returns TODO\n \t */\n-\tpublic Object getValue(String key);\n+\tObject getValue(String key);\n \n \t/**\n \t * setValue\n \t * @param key TODO\n \t * @param value TODO\n \t */\n-\tpublic void putValue(String key, Object value);\n+\tvoid putValue(String key, Object value);\n \n \t/**\n \t * isEnabled\n \t * @returns TODO\n \t */\n-\tpublic boolean isEnabled();\n+\tboolean isEnabled();\n \n \t/**\n \t * setEnabled\n \t * @param b TODO\n \t */\n-\tpublic void setEnabled(boolean b);\n+\tvoid setEnabled(boolean b);\n \n \t/**\n \t * addPropertyChangeListener\n \t * @param listener TODO\n \t */\n-\tpublic void addPropertyChangeListener(PropertyChangeListener listener);\n+\tvoid addPropertyChangeListener(PropertyChangeListener listener);\n \n \t/**\n \t * removePropertyChangeListener\n \t * @param listener TODO\n \t */\n-\tpublic void removePropertyChangeListener(PropertyChangeListener listener);\n+\tvoid removePropertyChangeListener(PropertyChangeListener listener);\n \n \n } // Action"}, {"sha": "76bbb2043772a3e5e71725f2a94e4b3a0c8bf0cf", "filename": "libjava/javax/swing/BoundedRangeModel.java", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FBoundedRangeModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FBoundedRangeModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FBoundedRangeModel.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -55,61 +55,61 @@ public interface BoundedRangeModel {\n \t * getValue\n \t * @returns int\n \t */\n-\tpublic int getValue();\n+\tint getValue();\n \n \t/**\n \t * setValue\n \t * @param value TODO\n \t */\n-\tpublic void setValue(int value);\n+\tvoid setValue(int value);\n \n \t/**\n \t * getMinimum\n \t * @returns int\n \t */\n-\tpublic int getMinimum();\n+\tint getMinimum();\n \n \t/**\n \t * setMinimum\n \t * @param minimum TODO\n \t */\n-\tpublic void setMinimum(int minimum);\n+\tvoid setMinimum(int minimum);\n \n \t/**\n \t * getMaximum\n \t * @returns int\n \t */\n-\tpublic int getMaximum();\n+\tint getMaximum();\n \n \t/**\n \t * setMaximum\n \t * @param maximum TODO\n \t */\n-\tpublic void setMaximum(int maximum);\n+\tvoid setMaximum(int maximum);\n \n \t/**\n \t * getValueIsAdjusting\n \t * @returns boolean\n \t */\n-\tpublic boolean getValueIsAdjusting();\n+\tboolean getValueIsAdjusting();\n \n \t/**\n \t * setValueIsAdjusting\n \t * @param adjusting TODO\n \t */\n-\tpublic void setValueIsAdjusting(boolean adjusting);\n+\tvoid setValueIsAdjusting(boolean adjusting);\n \n \t/**\n \t * getExtent\n \t * @returns int\n \t */\n-\tpublic int getExtent();\n+\tint getExtent();\n \n \t/**\n \t * setExtent\n \t * @param extent TODO\n \t */\n-\tpublic void setExtent(int extent);\n+\tvoid setExtent(int extent);\n \n \t/**\n \t * setRangeProperties\n@@ -119,20 +119,20 @@ public interface BoundedRangeModel {\n \t * @param max TODO\n \t * @param adjusting TODO\n \t */\n-\tpublic void setRangeProperties(int value, int extent, int min, \n+\tvoid setRangeProperties(int value, int extent, int min, \n \t\t\t\t\tint max, boolean adjusting);\n \n \t/**\n \t * addChangeListener\n \t * @param listener TODO\n \t */\n-\tpublic void addChangeListener(ChangeListener listener);\n+\tvoid addChangeListener(ChangeListener listener);\n \n \t/**\n \t * removeChangeListener\n \t * @param listener TODO\n \t */\n-\tpublic void removeChangeListener(ChangeListener listener);\n+\tvoid removeChangeListener(ChangeListener listener);\n \n \n } // BoundedRangeModel"}, {"sha": "e1c3ecef1027e2390d5601be4b28e543445d279f", "filename": "libjava/javax/swing/CellEditor.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FCellEditor.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -56,44 +56,44 @@ public interface CellEditor {\n \t * getCellEditorValue\n \t * @returns Object\n \t */\n-\tpublic Object getCellEditorValue();\n+\tObject getCellEditorValue();\n \n \t/**\n \t * isCellEditable\n \t * @param event TODO\n \t * @returns boolean\n \t */\n-\tpublic boolean isCellEditable(EventObject event);\n+\tboolean isCellEditable(EventObject event);\n \n \t/**\n \t * shouldSelectCell\n \t * @param event TODO\n \t * @returns boolean\n \t */\n-\tpublic boolean shouldSelectCell(EventObject event);\n+\tboolean shouldSelectCell(EventObject event);\n \n \t/**\n \t * stopCellEditing\n \t * @returns boolean\n \t */\n-\tpublic boolean stopCellEditing();\n+\tboolean stopCellEditing();\n \n \t/**\n \t * cancelCellEditing\n \t */\n-\tpublic void cancelCellEditing();\n+\tvoid cancelCellEditing();\n \n \t/**\n \t * addCellEditorListener\n \t * @param value0 TODO\n \t */\n-\tpublic void addCellEditorListener(CellEditorListener listener);\n+\tvoid addCellEditorListener(CellEditorListener listener);\n \n \t/**\n \t * removeCellEditorListener\n \t * @param listener TODO\n \t */\n-\tpublic void removeCellEditorListener(CellEditorListener listener);\n+\tvoid removeCellEditorListener(CellEditorListener listener);\n \n \n } // CellEditor"}, {"sha": "080e615f57961b12acb0fd7eda9022816b704597", "filename": "libjava/javax/swing/ComboBoxEditor.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FComboBoxEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FComboBoxEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FComboBoxEditor.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -56,36 +56,36 @@ public interface ComboBoxEditor {\n \t * getEditorComponent\n \t * @returns Component\n \t */\n-\tpublic Component getEditorComponent();\n+\tComponent getEditorComponent();\n \n \t/**\n \t * setItem\n \t * @param item TODO\n \t */\n-\tpublic void setItem(Object item);\n+\tvoid setItem(Object item);\n \n \t/**\n \t * getItem\n \t * @returns Object\n \t */\n-\tpublic Object getItem();\n+\tObject getItem();\n \n \t/**\n \t * selectAll\n \t */\n-\tpublic void selectAll();\n+\tvoid selectAll();\n \n \t/**\n \t * addActionListener\n \t * @param listener TODO\n \t */\n-\tpublic void addActionListener(ActionListener listener);\n+\tvoid addActionListener(ActionListener listener);\n \n \t/**\n \t * removeActionListener\n \t * @param listener TODO\n \t */\n-\tpublic void removeActionListener(ActionListener listener);\n+\tvoid removeActionListener(ActionListener listener);\n \n \n } // ComboBoxEditor"}, {"sha": "b3b2112b582539dc965a2591c85eebeb53f4b377", "filename": "libjava/javax/swing/ComboBoxModel.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FComboBoxModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FComboBoxModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FComboBoxModel.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -52,13 +52,13 @@ public interface ComboBoxModel extends ListModel {\n \t * setSelectedItem\n \t * @param item TODO\n \t */\n-\tpublic void setSelectedItem(Object item);\n+\tvoid setSelectedItem(Object item);\n \n \t/**\n \t * getSelectedItem\n \t * @returns Object\n \t */\n-\tpublic Object getSelectedItem();\n+\tObject getSelectedItem();\n \n \n } // ComboBoxModel"}, {"sha": "222039d1d41a957cdb8c5cba7c3ff0017f3bed63", "filename": "libjava/javax/swing/DesktopManager.java", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FDesktopManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FDesktopManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FDesktopManager.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -52,76 +52,76 @@ public interface DesktopManager {\n \t * openFrame\n \t * @param frame TODO\n \t */\n-\tpublic void openFrame(JInternalFrame frame);\n+\tvoid openFrame(JInternalFrame frame);\n \n \t/**\n \t * closeFrame\n \t * @param frame TODO\n \t */\n-\tpublic void closeFrame(JInternalFrame frame);\n+\tvoid closeFrame(JInternalFrame frame);\n \n \t/**\n \t * maximizeFrame\n \t * @param frame TODO\n \t */\n-\tpublic void maximizeFrame(JInternalFrame frame);\n+\tvoid maximizeFrame(JInternalFrame frame);\n \n \t/**\n \t * minimizeFrame\n \t * @param frame TODO\n \t */\n-\tpublic void minimizeFrame(JInternalFrame frame);\n+\tvoid minimizeFrame(JInternalFrame frame);\n \n \t/**\n \t * iconifyFrame\n \t * @param frame TODO\n \t */\n-\tpublic void iconifyFrame(JInternalFrame frame);\n+\tvoid iconifyFrame(JInternalFrame frame);\n \n \t/**\n \t * deiconifyFrame\n \t * @param frame TODO\n \t */\n-\tpublic void deiconifyFrame(JInternalFrame frame);\n+\tvoid deiconifyFrame(JInternalFrame frame);\n \n \t/**\n \t * activateFrame\n \t * @param frame TODO\n \t */\n-\tpublic void activateFrame(JInternalFrame vframe);\n+\tvoid activateFrame(JInternalFrame vframe);\n \n \t/**\n \t * deactivateFrame\n \t * @param frame TODO\n \t */\n-\tpublic void deactivateFrame(JInternalFrame frame);\n+\tvoid deactivateFrame(JInternalFrame frame);\n \n \t/**\n \t * beginDraggingFrame\n \t * @param frame TODO\n \t */\n-\tpublic void beginDraggingFrame(JComponent frame);\n+\tvoid beginDraggingFrame(JComponent frame);\n \n \t/**\n \t * dragFrame\n \t * @param frame TODO\n \t * @param x TODO\n \t * @param y TODO\n \t */\n-\tpublic void dragFrame(JComponent frame, int x, int y);\n+\tvoid dragFrame(JComponent frame, int x, int y);\n \n \t/**\n \t * endDraggingFrame\n \t * @param frame TODO\n \t */\n-\tpublic void endDraggingFrame(JComponent frame);\n+\tvoid endDraggingFrame(JComponent frame);\n \n \t/**\n \t * beginResizingFrame\n \t * @param frame TODO\n \t * @param direction TODO\n \t */\n-\tpublic void beginResizingFrame(JComponent frame, int direction);\n+\tvoid beginResizingFrame(JComponent frame, int direction);\n \n \t/**\n \t * resizeFrame\n@@ -131,14 +131,14 @@ public interface DesktopManager {\n \t * @param width TODO\n \t * @param height TODO\n \t */\n-\tpublic void resizeFrame(JComponent frame, int x, int y, \n+\tvoid resizeFrame(JComponent frame, int x, int y, \n \t\t\t\t\tint width, int height);\n \n \t/**\n \t * endResizingFrame\n \t * @param frame TODO\n \t */\n-\tpublic void endResizingFrame(JComponent frame);\n+\tvoid endResizingFrame(JComponent frame);\n \n \t/**\n \t * setBoundsForFrame\n@@ -148,7 +148,7 @@ public void resizeFrame(JComponent frame, int x, int y,\n \t * @param width TODO\n \t * @param height TODO\n \t */\n-\tpublic void setBoundsForFrame(JComponent frame, int x, int y, \n+\tvoid setBoundsForFrame(JComponent frame, int x, int y, \n \t\t\t\t\tint width, int height);\n \n "}, {"sha": "6da2b2e7bebbb584cec3698ee4096f54fa71cc72", "filename": "libjava/javax/swing/JComboBox.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FJComboBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FJComboBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComboBox.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -232,7 +232,7 @@ public static interface KeySelectionManager {\n \t\t * @param value1 TODO\n \t\t * @returns int\n \t\t */\n-\t\tpublic abstract int selectionForKey(char value0, ComboBoxModel value1);\n+\t\tint selectionForKey(char value0, ComboBoxModel value1);\n \n \n \t} // KeySelectionManager"}, {"sha": "36bc964e5c12b836eb394cd8dfe831fb075c7ee2", "filename": "libjava/javax/swing/ListCellRenderer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FListCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FListCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FListCellRenderer.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -41,7 +41,7 @@\n \n public interface ListCellRenderer\n {\n-    public Component getListCellRendererComponent(JList list,\n+    Component getListCellRendererComponent(JList list,\n \t\t\t\t\t\t  Object value,\n \t\t\t\t\t\t  int index,\n \t\t\t\t\t\t  boolean isSelected,"}, {"sha": "4314667880f8cc2fe6e5a071fb539a092b9022ff", "filename": "libjava/javax/swing/ListSelectionModel.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FListSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FListSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FListSelectionModel.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -42,9 +42,9 @@\n \n public interface ListSelectionModel\n {\n-    final static int SINGLE_SELECTION = 0;\n-    final static int SINGLE_INTERVAL_SELECTION = 1;\n-    final static int MULTIPLE_INTERVAL_SELECTION = 1;\n+    int SINGLE_SELECTION = 0;\n+    int SINGLE_INTERVAL_SELECTION = 1;\n+    int MULTIPLE_INTERVAL_SELECTION = 1;\n \n     void setSelectionMode(int a);\n     int getSelectionMode();"}, {"sha": "3f198a7e9a414051e50febee06328133ca348b2e", "filename": "libjava/javax/swing/MenuElement.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FMenuElement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FMenuElement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FMenuElement.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -58,7 +58,7 @@ public interface MenuElement {\n \t * @param path TODO\n \t * @param manager TODO\n \t */\n-\tpublic void processMouseEvent(MouseEvent event,\n+\tvoid processMouseEvent(MouseEvent event,\n \t\t\tMenuElement[] path, MenuSelectionManager manager);\n \n \t/**\n@@ -67,26 +67,26 @@ public void processMouseEvent(MouseEvent event,\n \t * @param path TODO\n \t * @param manager TODO\n \t */\n-\tpublic abstract void processKeyEvent(KeyEvent event, \n+\tvoid processKeyEvent(KeyEvent event, \n \t\t\tMenuElement[] path, MenuSelectionManager manager);\n \n \t/**\n \t * menuSelectionChanged\n \t * @param included TODO\n \t */\n-\tpublic abstract void menuSelectionChanged(boolean included);\n+\tvoid menuSelectionChanged(boolean included);\n \n \t/**\n \t * getSubElements\n \t * @returns MenuElement[]\n \t */\n-\tpublic abstract MenuElement[] getSubElements();\n+\tMenuElement[] getSubElements();\n \n \t/**\n \t * getComponent\n \t * @returns Component\n \t */\n-\tpublic abstract Component getComponent();\n+\tComponent getComponent();\n \n \n } // MenuElement"}, {"sha": "678aeaf6f7674773ea8cc523f0340ca566f87014", "filename": "libjava/javax/swing/MutableComboBoxModel.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FMutableComboBoxModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FMutableComboBoxModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FMutableComboBoxModel.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -52,26 +52,26 @@ public interface MutableComboBoxModel extends ComboBoxModel {\n \t * addElement\n \t * @param object TODO\n \t */\n-\tpublic void addElement(Object object);\n+\tvoid addElement(Object object);\n \n \t/**\n \t * removeElementAt\n \t * @param index TODO\n \t */\n-\tpublic void removeElementAt(int index);\n+\tvoid removeElementAt(int index);\n \n \t/**\n \t * insertElementAt\n \t * @param object TODO\n \t * @param index TODO\n \t */\n-\tpublic void insertElementAt(Object object, int index);\n+\tvoid insertElementAt(Object object, int index);\n \n \t/**\n \t * removeElement\n \t * @param object TODO\n \t */\n-\tpublic void removeElement(Object object);\n+\tvoid removeElement(Object object);\n \n \n } // MutableComboBoxModel"}, {"sha": "4cf5d5e042da7707273b76a861fed7c7c66f12b3", "filename": "libjava/javax/swing/Renderer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FRenderer.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -56,13 +56,13 @@ public interface Renderer {\n \t * @param value TODO\n \t * @param selected TODO\n \t */\n-\tpublic void setValue(Object value, boolean selected);\n+\tvoid setValue(Object value, boolean selected);\n \n \t/**\n \t * getComponent\n \t * @returns Component\n \t */\n-\tpublic Component getComponent();\n+\tComponent getComponent();\n \n \n } // Renderer"}, {"sha": "0bc37c9f4ea008e5b178f64ee66dbeba29e525cf", "filename": "libjava/javax/swing/RootPaneContainer.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FRootPaneContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FRootPaneContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FRootPaneContainer.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -55,43 +55,43 @@ public interface RootPaneContainer {\n \t * getRootPane\n \t * @returns JRootPane\n \t */\n-\tpublic JRootPane getRootPane();\n+\tJRootPane getRootPane();\n \n \t/**\n \t * setContentPane\n \t * @param contentPane TODO\n \t */\n-\tpublic void setContentPane(Container contentPane);\n+\tvoid setContentPane(Container contentPane);\n \n \t/**\n \t * getContentPane\n \t * @returns Container\n \t */\n-\tpublic Container getContentPane();\n+\tContainer getContentPane();\n \n \t/**\n \t * setLayeredPane\n \t * @param layeredPane TODO\n \t */\n-\tpublic void setLayeredPane(JLayeredPane layeredPane);\n+\tvoid setLayeredPane(JLayeredPane layeredPane);\n \n \t/**\n \t * getLayeredPane\n \t * @returns JLayeredPane\n \t */\n-\tpublic JLayeredPane getLayeredPane();\n+\tJLayeredPane getLayeredPane();\n \n \t/**\n \t * setGlassPane\n \t * @param glassPane TODO\n \t */\n-\tpublic void setGlassPane(Component glassPane);\n+\tvoid setGlassPane(Component glassPane);\n \n \t/**\n \t * getGlassPane\n \t * @returns Component\n \t */\n-\tpublic Component getGlassPane();\n+\tComponent getGlassPane();\n \n \n } // RootPaneContainer"}, {"sha": "e08fedb7a9c6b5433ea02346fe619dda64df8ee1", "filename": "libjava/javax/swing/ScrollPaneConstants.java", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FScrollPaneConstants.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FScrollPaneConstants.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FScrollPaneConstants.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -51,107 +51,107 @@ public interface ScrollPaneConstants {\n \t/**\n \t * VIEWPORT\n \t */\n-\tpublic static final String VIEWPORT = \"VIEWPORT\";\n+\tString VIEWPORT = \"VIEWPORT\";\n \n \t/**\n \t * VERTICAL_SCROLLBAR\n \t */\n-\tpublic static final String VERTICAL_SCROLLBAR = \"VERTICAL_SCROLLBAR\";\n+\tString VERTICAL_SCROLLBAR = \"VERTICAL_SCROLLBAR\";\n \n \t/**\n \t * HORIZONTAL_SCROLLBAR\n \t */\n-\tpublic static final String HORIZONTAL_SCROLLBAR = \"HORIZONTAL_SCROLLBAR\";\n+\tString HORIZONTAL_SCROLLBAR = \"HORIZONTAL_SCROLLBAR\";\n \n \t/**\n \t * ROW_HEADER\n \t */\n-\tpublic static final String ROW_HEADER = \"ROW_HEADER\";\n+\tString ROW_HEADER = \"ROW_HEADER\";\n \n \t/**\n \t * COLUMN_HEADER\n \t */\n-\tpublic static final String COLUMN_HEADER = \"COLUMN_HEADER\";\n+\tString COLUMN_HEADER = \"COLUMN_HEADER\";\n \n \t/**\n \t * LOWER_LEFT_CORNER\n \t */\n-\tpublic static final String LOWER_LEFT_CORNER = \"LOWER_LEFT_CORNER\";\n+\tString LOWER_LEFT_CORNER = \"LOWER_LEFT_CORNER\";\n \n \t/**\n \t * LOWER_RIGHT_CORNER\n \t */\n-\tpublic static final String LOWER_RIGHT_CORNER = \"LOWER_RIGHT_CORNER\";\n+\tString LOWER_RIGHT_CORNER = \"LOWER_RIGHT_CORNER\";\n \n \t/**\n \t * UPPER_LEFT_CORNER\n \t */\n-\tpublic static final String UPPER_LEFT_CORNER = \"UPPER_LEFT_CORNER\";\n+\tString UPPER_LEFT_CORNER = \"UPPER_LEFT_CORNER\";\n \n \t/**\n \t * UPPER_RIGHT_CORNER\n \t */\n-\tpublic static final String UPPER_RIGHT_CORNER = \"UPPER_RIGHT_CORNER\";\n+\tString UPPER_RIGHT_CORNER = \"UPPER_RIGHT_CORNER\";\n \n \t/**\n \t * LOWER_LEADING_CORNER\n \t */\n-\tpublic static final String LOWER_LEADING_CORNER = \"LOWER_LEADING_CORNER\";\n+\tString LOWER_LEADING_CORNER = \"LOWER_LEADING_CORNER\";\n \n \t/**\n \t * LOWER_TRAILING_CORNER\n \t */\n-\tpublic static final String LOWER_TRAILING_CORNER = \"LOWER_TRAILING_CORNER\";\n+\tString LOWER_TRAILING_CORNER = \"LOWER_TRAILING_CORNER\";\n \n \t/**\n \t * UPPER_LEADING_CORNER\n \t */\n-\tpublic static final String UPPER_LEADING_CORNER = \"UPPER_LEADING_CORNER\";\n+\tString UPPER_LEADING_CORNER = \"UPPER_LEADING_CORNER\";\n \n \t/**\n \t * UPPER_TRAILING_CORNER\n \t */\n-\tpublic static final String UPPER_TRAILING_CORNER = \"UPPER_TRAILING_CORNER\";\n+\tString UPPER_TRAILING_CORNER = \"UPPER_TRAILING_CORNER\";\n \n \t/**\n \t * VERTICAL_SCROLLBAR_POLICY\n \t */\n-\tpublic static final String VERTICAL_SCROLLBAR_POLICY = \"VERTICAL_SCROLLBAR_POLICY\";\n+\tString VERTICAL_SCROLLBAR_POLICY = \"VERTICAL_SCROLLBAR_POLICY\";\n \n \t/**\n \t * HORIZONTAL_SCROLLBAR_POLICY\n \t */\n-\tpublic static final String HORIZONTAL_SCROLLBAR_POLICY = \"HORIZONTAL_SCROLLBAR_POLICY\";\n+\tString HORIZONTAL_SCROLLBAR_POLICY = \"HORIZONTAL_SCROLLBAR_POLICY\";\n \n \t/**\n \t * VERTICAL_SCROLLBAR_AS_NEEDED\n \t */\n-\tpublic static final int VERTICAL_SCROLLBAR_AS_NEEDED = 20;\n+\tint VERTICAL_SCROLLBAR_AS_NEEDED = 20;\n \n \t/**\n \t * VERTICAL_SCROLLBAR_NEVER\n \t */\n-\tpublic static final int VERTICAL_SCROLLBAR_NEVER = 21;\n+\tint VERTICAL_SCROLLBAR_NEVER = 21;\n \n \t/**\n \t * VERTICAL_SCROLLBAR_ALWAYS\n \t */\n-\tpublic static final int VERTICAL_SCROLLBAR_ALWAYS = 22;\n+\tint VERTICAL_SCROLLBAR_ALWAYS = 22;\n \n \t/**\n \t * HORIZONTAL_SCROLLBAR_AS_NEEDED\n \t */\n-\tpublic static final int HORIZONTAL_SCROLLBAR_AS_NEEDED = 30;\n+\tint HORIZONTAL_SCROLLBAR_AS_NEEDED = 30;\n \n \t/**\n \t * HORIZONTAL_SCROLLBAR_NEVER\n \t */\n-\tpublic static final int HORIZONTAL_SCROLLBAR_NEVER = 31;\n+\tint HORIZONTAL_SCROLLBAR_NEVER = 31;\n \n \t/**\n \t * HORIZONTAL_SCROLLBAR_ALWAYS\n \t */\n-\tpublic static final int HORIZONTAL_SCROLLBAR_ALWAYS = 32;\n+\tint HORIZONTAL_SCROLLBAR_ALWAYS = 32;\n \n \n } // ScrollPaneConstants"}, {"sha": "b3dc1f7835dc7c79edb0f77311d8fb5a906e8ce4", "filename": "libjava/javax/swing/SingleSelectionModel.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FSingleSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FSingleSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSingleSelectionModel.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -55,36 +55,36 @@ public interface SingleSelectionModel {\n \t * getSelectedIndex\n \t * @returns int\n \t */\n-\tpublic int getSelectedIndex();\n+\tint getSelectedIndex();\n \n \t/**\n \t * setSelectedIndex\n \t * @param index TODO\n \t */\n-\tpublic void setSelectedIndex(int index);\n+\tvoid setSelectedIndex(int index);\n \n \t/**\n \t * clearSelection\n \t */\n-\tpublic void clearSelection();\n+\tvoid clearSelection();\n \n \t/**\n \t * isSelected\n \t * @returns boolean\n \t */\n-\tpublic boolean isSelected();\n+\tboolean isSelected();\n \n \t/**\n \t * addChangeListener\n \t * @param listener TODO\n \t */\n-\tpublic  void addChangeListener(ChangeListener listener);\n+\tvoid addChangeListener(ChangeListener listener);\n \n \t/**\n \t * removeChangeListener\n \t * @param listener TODO\n \t */\n-\tpublic void removeChangeListener(ChangeListener listener);\n+\tvoid removeChangeListener(ChangeListener listener);\n \n \n } // SingleSelectionModel"}, {"sha": "5f8929ece835087d41d08c349e440cabc92d5212", "filename": "libjava/javax/swing/SpinnerModel.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FSpinnerModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FSpinnerModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSpinnerModel.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -45,10 +45,10 @@\n  */\n public interface SpinnerModel\n {\n-  public void setValue (Object value);\n+  void setValue (Object value);\n   public Object getValue ();\n   public Object getNextValue ();\n   public Object getPreviousValue ();\n-  public void addChangeListener (ChangeListener listener);\n-  public void removeChangeListener (ChangeListener listener);\n+  void addChangeListener (ChangeListener listener);\n+  void removeChangeListener (ChangeListener listener);\n }"}, {"sha": "969c388820daba2345cd28261c18306f0df5bbb5", "filename": "libjava/javax/swing/SwingConstants.java", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FSwingConstants.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FSwingConstants.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FSwingConstants.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -40,25 +40,25 @@\n \n public interface SwingConstants\n {\n-    public static final int CENTER       = 0;\n-    public static final int TOP          = 1;\n-    public static final int LEFT         = 2;\n-    public static final int BOTTOM       = 3;\n-    public static final int RIGHT        = 4;\n+  int CENTER       = 0;\n+  int TOP          = 1;\n+  int LEFT         = 2;\n+  int BOTTOM       = 3;\n+  int RIGHT        = 4;\n     \n-    public static final int NORTH        = 1;\n-    public static final int NORTH_EAST   = 2;\n-    public static final int EAST         = 3;\n-    public static final int SOUTH_EAST   = 4;\n-    public static final int SOUTH        = 5;\n-    public static final int SOUTH_WEST   = 6;\n-    public static final int WEST         = 7;\n-    public static final int NORTH_WEST   = 8;\n+  int NORTH        = 1;\n+  int NORTH_EAST   = 2;\n+  int EAST         = 3;\n+  int SOUTH_EAST   = 4;\n+  int SOUTH        = 5;\n+  int SOUTH_WEST   = 6;\n+  int WEST         = 7;\n+  int NORTH_WEST   = 8;\n     \n-    public static final int HORIZONTAL   = 0;\n-    public static final int VERTICAL     = 1; \n+  int HORIZONTAL   = 0;\n+  int VERTICAL     = 1; \n     \n-    public static final int LEADING      = 10;\n-    public static final int TRAILING     = 11;\n+  int LEADING      = 10;\n+  int TRAILING     = 11;\n }\n "}, {"sha": "80f31fec05da9c5eae0f626eceb433d24874b40d", "filename": "libjava/javax/swing/UIDefaults.java", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FUIDefaults.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FUIDefaults.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FUIDefaults.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -56,7 +56,7 @@\n  */\n public class UIDefaults extends Hashtable\n {\n-  public interface ActiveValue\n+  interface ActiveValue\n   {\n     Object createValue(UIDefaults table);\n   } // interface ActiveValue\n@@ -72,7 +72,7 @@ public Object createValue(UIDefaults table)\n     }\n   } // class LazyInputMap\n \n-  public interface LazyValue\n+  interface LazyValue\n   {\n     Object createValue(UIDefaults table);\n   } // interface LazyValue\n@@ -128,7 +128,7 @@ public Object put(Object key, Object value)\n     throw new Error(\"not implemented\");\n   }\n \n-  public void putDefaults(Object[] list)\n+  void putDefaults(Object[] list)\n   {\n     throw new Error(\"not implemented\");\n   }\n@@ -193,13 +193,13 @@ public String getString(Object key, Locale l)\n     return o instanceof String ? (String) o : null;\n   }\n \n-  public int getInt(Object key)\n+  int getInt(Object key)\n   {\n     Object o = get(key);\n     return o instanceof Integer ? ((Integer) o).intValue() : 0;\n   }\n \n-  public int getInt(Object key, Locale l)\n+  int getInt(Object key, Locale l)\n   {\n     Object o = get(key, l);\n     return o instanceof Integer ? ((Integer) o).intValue() : 0;\n@@ -263,12 +263,12 @@ public ComponentUI getUI(JComponent a)\n     return p;\n   }\n \n-  public void addPropertyChangeListener(PropertyChangeListener l)\n+  void addPropertyChangeListener(PropertyChangeListener l)\n   {\n     throw new Error(\"not implemented\");\n   }\n \n-  public void removePropertyChangeListener(PropertyChangeListener l)\n+  void removePropertyChangeListener(PropertyChangeListener l)\n   {\n     throw new Error(\"not implemented\");\n   }\n@@ -283,17 +283,17 @@ protected void firePropertyChange(String property, Object o, Object n)\n     throw new Error(\"not implemented\");\n   }\n \n-  public void addResourceBundle(String name)\n+  void addResourceBundle(String name)\n   {\n     throw new Error(\"not implemented\");\n   }\n \n-  public void removeResourceBundle(String name)\n+  void removeResourceBundle(String name)\n   {\n     throw new Error(\"not implemented\");\n   }\n \n-  public void setDefaultLocale(Locale l)\n+  void setDefaultLocale(Locale l)\n   {\n     throw new Error(\"not implemented\");\n   }"}, {"sha": "3f9936c182e2bfa3743b5cc6152f0a0d1f443f88", "filename": "libjava/javax/swing/WindowConstants.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FWindowConstants.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2FWindowConstants.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FWindowConstants.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -51,22 +51,22 @@ public interface WindowConstants {\n \t/**\n \t * DO_NOTHING_ON_CLOSE\n \t */\n-\tpublic static final int DO_NOTHING_ON_CLOSE = 0;\n+\tint DO_NOTHING_ON_CLOSE = 0;\n \n \t/**\n \t * HIDE_ON_CLOSE\n \t */\n-\tpublic static final int HIDE_ON_CLOSE = 1;\n+\tint HIDE_ON_CLOSE = 1;\n \n \t/**\n \t * DISPOSE_ON_CLOSE\n \t */\n-\tpublic static final int DISPOSE_ON_CLOSE = 2;\n+\tint DISPOSE_ON_CLOSE = 2;\n \n \t/**\n \t * EXIT_ON_CLOSE\n \t */\n-\tpublic static final int EXIT_ON_CLOSE =3;\n+\tint EXIT_ON_CLOSE =3;\n \n \n } // WindowConstants"}, {"sha": "a9ad6e5b0c1a370411a2cfbf4035aad26f7c2370", "filename": "libjava/javax/swing/border/Border.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2Fborder%2FBorder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2Fborder%2FBorder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fborder%2FBorder.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -44,7 +44,7 @@\n \n \n /**\n- * An interface for decorative or spacing borders around a Component.\n+ * An public interface for decorative or spacing borders around a Component.\n  *\n  * <p>To reduce memory consumption, several Components may share a\n  * single Border instance. {@link javax.swing.BorderFactory} is a\n@@ -77,7 +77,7 @@\n    * @param width the width of the available area for painting the border.\n    * @param height the height of the available area for painting the border.\n    */\n-  public void paintBorder(Component c, Graphics g,\n+  void paintBorder(Component c, Graphics g,\n                           int x, int y, int width, int height);\n   \n   \n@@ -90,7 +90,7 @@ public void paintBorder(Component c, Graphics g,\n    *         <code>top</code> and <code>bottom</code> fields indicate the\n    *         width of the border at the respective edge.\n    */\n-  public Insets getBorderInsets(Component c);\n+  Insets getBorderInsets(Component c);\n   \n   \n   /**\n@@ -101,5 +101,5 @@ public void paintBorder(Component c, Graphics g,\n    *         <code>false</code> if some pixels of the background\n    *         can shine through the border.\n    */\n-  public boolean isBorderOpaque();\n+  boolean isBorderOpaque();\n }"}, {"sha": "bd9abddfd8685708c0ec498b487c154688f007db", "filename": "libjava/javax/swing/colorchooser/ColorSelectionModel.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fcolorchooser%2FColorSelectionModel.java?ref=134fee658d0bb4d8dbaa0fe3acd352492d2ac0a8", "patch": "@@ -56,25 +56,25 @@ public interface ColorSelectionModel {\n \t * getSelectedColor\n \t * @returns Color\n \t */\n-\tpublic abstract Color getSelectedColor();\n+\tColor getSelectedColor();\n \n \t/**\n \t * setSelectedColor\n \t * @param color TODO\n \t */\n-\tpublic abstract void setSelectedColor(Color color);\n+\tvoid setSelectedColor(Color color);\n \n \t/**\n \t * addChangeListener\n \t * @param listener TODO\n \t */\n-\tpublic abstract void addChangeListener(ChangeListener listener);\n+\tvoid addChangeListener(ChangeListener listener);\n \n \t/**\n \t * removeChangeListener\n \t * @param listener TODO\n \t */\n-\tpublic abstract void removeChangeListener(ChangeListener listener);\n+\tvoid removeChangeListener(ChangeListener listener);\n \n \n } // ColorSelectionModel"}]}