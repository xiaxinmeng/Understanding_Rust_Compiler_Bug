{"sha": "f3321fd71519a24f58a8e21048a191be042ff121", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMzMjFmZDcxNTE5YTI0ZjU4YThlMjEwNDhhMTkxYmUwNDJmZjEyMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-01-03T11:30:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-01-03T11:30:27Z"}, "message": "re PR debug/51650 (LTO ICE in dwarf2out_finish, at dwarf2out.c:22501 while building libxul)\n\n2012-01-03  Richard Guenther  <rguenther@suse.de>\n\n\tPR debug/51650\n\t* dwarf2out.c (dwarf2out_finish): Always create a DIE for\n\tthe context of a limbo DIE when it does not already exist.\n\n\t* g++.dg/lto/pr51650-3_0.C: New testcase.\n\nFrom-SVN: r182835", "tree": {"sha": "1436a514ff17b1c15608dc6c9b85d39a081fcbbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1436a514ff17b1c15608dc6c9b85d39a081fcbbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3321fd71519a24f58a8e21048a191be042ff121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3321fd71519a24f58a8e21048a191be042ff121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3321fd71519a24f58a8e21048a191be042ff121", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3321fd71519a24f58a8e21048a191be042ff121/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da89f7f38e761dfded871bfa1715a35f70d66743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da89f7f38e761dfded871bfa1715a35f70d66743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da89f7f38e761dfded871bfa1715a35f70d66743"}], "stats": {"total": 42, "additions": 33, "deletions": 9}, "files": [{"sha": "1c21031a0e5439dd6d165337547a0bde8637d6cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3321fd71519a24f58a8e21048a191be042ff121/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3321fd71519a24f58a8e21048a191be042ff121/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3321fd71519a24f58a8e21048a191be042ff121", "patch": "@@ -1,3 +1,9 @@\n+2012-01-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR debug/51650\n+\t* dwarf2out.c (dwarf2out_finish): Always create a DIE for\n+\tthe context of a limbo DIE when it does not already exist.\n+\n 2012-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/51719"}, {"sha": "b5537752b132ca68b23e311910341807eff67154", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3321fd71519a24f58a8e21048a191be042ff121/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3321fd71519a24f58a8e21048a191be042ff121/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=f3321fd71519a24f58a8e21048a191be042ff121", "patch": "@@ -22501,15 +22501,8 @@ dwarf2out_finish (const char *filename)\n \t      else if (TYPE_P (node->created_for))\n \t\tcontext = TYPE_CONTEXT (node->created_for);\n \n-\t      gcc_assert (context\n-\t\t\t  && (TREE_CODE (context) == FUNCTION_DECL\n-\t\t\t      || TREE_CODE (context) == NAMESPACE_DECL));\n-\n-\t      origin = lookup_decl_die (context);\n-\t      if (origin)\n-\t        add_child_die (origin, die);\n-\t      else\n-\t        add_child_die (comp_unit_die (), die);\n+\t      origin = get_context_die (context);\n+\t      add_child_die (origin, die);\n \t    }\n \t}\n     }"}, {"sha": "6185d583decdb0625c766ffbbae3e7ce8ed99bdc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3321fd71519a24f58a8e21048a191be042ff121/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3321fd71519a24f58a8e21048a191be042ff121/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f3321fd71519a24f58a8e21048a191be042ff121", "patch": "@@ -1,3 +1,8 @@\n+2012-01-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR debug/51650\n+\t* g++.dg/lto/pr51650-3_0.C: New testcase.\n+\n 2012-01-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/15867"}, {"sha": "e84d555a0fb00a40ce7fee3527254fa94d2f3322", "filename": "gcc/testsuite/g++.dg/lto/pr51650-3_0.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3321fd71519a24f58a8e21048a191be042ff121/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51650-3_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3321fd71519a24f58a8e21048a191be042ff121/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51650-3_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51650-3_0.C?ref=f3321fd71519a24f58a8e21048a191be042ff121", "patch": "@@ -0,0 +1,20 @@\n+// { dg-lto-do link }\n+// { dg-lto-options { { -flto -g } } }\n+\n+struct T;\n+struct C \n+{\n+    typedef ::T T;\n+    virtual void E();\n+    static T *m ()\n+      {\n+\tstatic T *d;\n+\treturn d;\n+      }\n+};\n+int\n+fn ()\n+{\n+  C::m ();\n+}\n+int main() {}"}]}