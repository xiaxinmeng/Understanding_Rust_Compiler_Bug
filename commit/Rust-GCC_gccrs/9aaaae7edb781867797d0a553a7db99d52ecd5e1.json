{"sha": "9aaaae7edb781867797d0a553a7db99d52ecd5e1", "node_id": "C_kwDOANBUbNoAKDlhYWFhZTdlZGI3ODE4Njc3OTdkMGE1NTNhN2RiOTlkNTJlY2Q1ZTE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-04-25T08:46:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-04-27T10:03:07Z"}, "message": "middle-end/104492 - avoid all equality compare dangling pointer diags\n\nThe following extends the equality compare dangling pointer diagnostics\nsuppression for uses following free or realloc to also cover those\nfollowing invalidation of auto variables via CLOBBERs.  That avoids\ndiagnosing idioms like\n\n  return std::find(std::begin(candidates), std::end(candidates), s)\n           != std::end(candidates);\n\nfor auto candidates which are prone to forwarding of the final\ncomparison across the storage invalidation as then seen by the\nlate run access warning pass.\n\n2022-04-25  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/104492\n\t* gimple-ssa-warn-access.cc\n\t(pass_waccess::warn_invalid_pointer): Exclude equality compare\n\tdiagnostics for all kind of invalidations.\n\t(pass_waccess::check_dangling_uses): Fix post-dominator query.\n\t(pass_waccess::check_pointer_uses): Likewise.", "tree": {"sha": "31b7f5aef1f0ff13e4d619f74b9a00a3bf230710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31b7f5aef1f0ff13e4d619f74b9a00a3bf230710"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aaaae7edb781867797d0a553a7db99d52ecd5e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aaaae7edb781867797d0a553a7db99d52ecd5e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aaaae7edb781867797d0a553a7db99d52ecd5e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aaaae7edb781867797d0a553a7db99d52ecd5e1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a460a2007dd9c527c5f9d5bbbedb852db7c1373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a460a2007dd9c527c5f9d5bbbedb852db7c1373", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a460a2007dd9c527c5f9d5bbbedb852db7c1373"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "39aa8186de6f08d493b3c295e881d1e0a89dccb1", "filename": "gcc/gimple-ssa-warn-access.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aaaae7edb781867797d0a553a7db99d52ecd5e1/gcc%2Fgimple-ssa-warn-access.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aaaae7edb781867797d0a553a7db99d52ecd5e1/gcc%2Fgimple-ssa-warn-access.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-warn-access.cc?ref=9aaaae7edb781867797d0a553a7db99d52ecd5e1", "patch": "@@ -3923,7 +3923,8 @@ pass_waccess::warn_invalid_pointer (tree ref, gimple *use_stmt,\n       return;\n     }\n \n-  if ((maybe && warn_dangling_pointer < 2)\n+  if (equality\n+      || (maybe && warn_dangling_pointer < 2)\n       || warning_suppressed_p (use_stmt, OPT_Wdangling_pointer_))\n     return;\n \n@@ -4241,7 +4242,7 @@ pass_waccess::check_pointer_uses (gimple *stmt, tree ptr,\n \t      basic_block use_bb = gimple_bb (use_stmt);\n \t      bool this_maybe\n \t\t= (maybe\n-\t\t   || !dominated_by_p (CDI_POST_DOMINATORS, use_bb, stmt_bb));\n+\t\t   || !dominated_by_p (CDI_POST_DOMINATORS, stmt_bb, use_bb));\n \t      warn_invalid_pointer (*use_p->use, use_stmt, stmt, var,\n \t\t\t\t    this_maybe, equality);\n \t      continue;\n@@ -4486,7 +4487,7 @@ pass_waccess::check_dangling_uses (tree var, tree decl, bool maybe /* = false */\n \n   basic_block use_bb = gimple_bb (use_stmt);\n   basic_block clob_bb = gimple_bb (*pclob);\n-  maybe = maybe || !dominated_by_p (CDI_POST_DOMINATORS, use_bb, clob_bb);\n+  maybe = maybe || !dominated_by_p (CDI_POST_DOMINATORS, clob_bb, use_bb);\n   warn_invalid_pointer (var, use_stmt, *pclob, decl, maybe, false);\n }\n "}]}