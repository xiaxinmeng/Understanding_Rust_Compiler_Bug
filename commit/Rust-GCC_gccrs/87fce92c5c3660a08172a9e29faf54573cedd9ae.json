{"sha": "87fce92c5c3660a08172a9e29faf54573cedd9ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdmY2U5MmM1YzM2NjBhMDgxNzJhOWUyOWZhZjU0NTczY2VkZDlhZQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2020-06-26T09:04:41Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2020-06-26T09:06:48Z"}, "message": "This patch removes the use of the \"register\" keyword from the bsearch() and bsearch_r() functions supplied by libiberty.  The register keyword is deprecated in C++17.\n\n2020-06-25  Nick Clifton  <nickc@redhat.com>\n\ninclude/\n\t* libiberty.h (bsearch_r): Remove use of the register keyword from\n\tthe prototype.\n\nlibiberty/\n\t* bsearch.c (bsearch): Remove use of register keyword.\n\t* bsearch_r.c (bsearch_r): Likewise.", "tree": {"sha": "068e19655a84ef679c80d328794c1bea54734bab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/068e19655a84ef679c80d328794c1bea54734bab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87fce92c5c3660a08172a9e29faf54573cedd9ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fce92c5c3660a08172a9e29faf54573cedd9ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87fce92c5c3660a08172a9e29faf54573cedd9ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fce92c5c3660a08172a9e29faf54573cedd9ae/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d61ffe124430160c4da7516596d6a4dbcdf2a7a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d61ffe124430160c4da7516596d6a4dbcdf2a7a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d61ffe124430160c4da7516596d6a4dbcdf2a7a6"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "591e9ac48d44529274817eb123381626b1c777cc", "filename": "include/libiberty.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fce92c5c3660a08172a9e29faf54573cedd9ae/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fce92c5c3660a08172a9e29faf54573cedd9ae/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=87fce92c5c3660a08172a9e29faf54573cedd9ae", "patch": "@@ -643,9 +643,9 @@ extern int pwait (int, int *, int);\n \n /* Like bsearch, but takes and passes on an argument like qsort_r.  */\n \n-extern void *bsearch_r (register const void *, const void *,\n-\t\t\tsize_t, register size_t,\n-\t\t\tregister int (*)(const void *, const void *, void *),\n+extern void *bsearch_r (const void *, const void *,\n+\t\t\tsize_t, size_t,\n+\t\t\tint (*)(const void *, const void *, void *),\n \t\t\tvoid *);\n \n #if defined(HAVE_DECL_ASPRINTF) && !HAVE_DECL_ASPRINTF"}, {"sha": "18158b9591b98d23d67d882170f769e3627b129c", "filename": "libiberty/bsearch.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fce92c5c3660a08172a9e29faf54573cedd9ae/libiberty%2Fbsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fce92c5c3660a08172a9e29faf54573cedd9ae/libiberty%2Fbsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fbsearch.c?ref=87fce92c5c3660a08172a9e29faf54573cedd9ae", "patch": "@@ -69,13 +69,13 @@ is respectively less than, matching, or greater than the array member.\n  * look at item 3.\n  */\n void *\n-bsearch (register const void *key, const void *base0,\n-         size_t nmemb, register size_t size,\n-         register int (*compar)(const void *, const void *))\n+bsearch (const void *key, const void *base0,\n+         size_t nmemb, size_t size,\n+         int (*compar)(const void *, const void *))\n {\n-\tregister const char *base = (const char *) base0;\n-\tregister int lim, cmp;\n-\tregister const void *p;\n+\tconst char *base = (const char *) base0;\n+\tint lim, cmp;\n+\tconst void *p;\n \n \tfor (lim = nmemb; lim != 0; lim >>= 1) {\n \t\tp = base + (lim >> 1) * size;"}, {"sha": "2a2ca6f5e2373966e5bac3d0b2f67aa373b69f76", "filename": "libiberty/bsearch_r.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fce92c5c3660a08172a9e29faf54573cedd9ae/libiberty%2Fbsearch_r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fce92c5c3660a08172a9e29faf54573cedd9ae/libiberty%2Fbsearch_r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fbsearch_r.c?ref=87fce92c5c3660a08172a9e29faf54573cedd9ae", "patch": "@@ -70,14 +70,14 @@ is respectively less than, matching, or greater than the array member.\n  * look at item 3.\n  */\n void *\n-bsearch_r (register const void *key, const void *base0,\n-\t   size_t nmemb, register size_t size,\n-\t   register int (*compar)(const void *, const void *, void *),\n+bsearch_r (const void *key, const void *base0,\n+\t   size_t nmemb, size_t size,\n+\t   int (*compar)(const void *, const void *, void *),\n \t   void *arg)\n {\n-\tregister const char *base = (const char *) base0;\n-\tregister int lim, cmp;\n-\tregister const void *p;\n+\tconst char *base = (const char *) base0;\n+\tint lim, cmp;\n+\tconst void *p;\n \n \tfor (lim = nmemb; lim != 0; lim >>= 1) {\n \t\tp = base + (lim >> 1) * size;"}]}