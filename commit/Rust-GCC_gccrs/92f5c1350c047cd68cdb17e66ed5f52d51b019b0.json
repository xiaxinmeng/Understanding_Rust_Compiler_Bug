{"sha": "92f5c1350c047cd68cdb17e66ed5f52d51b019b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJmNWMxMzUwYzA0N2NkNjhjZGIxN2U2NmVkNWY1MmQ1MWIwMTliMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-11-26T09:15:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-26T09:15:09Z"}, "message": "except.c (expand_start_catch_block): Fix catching a reference to pointer.\n\n\t* except.c (expand_start_catch_block): Fix catching a reference\n\tto pointer.\n\n\t* init.c (build_new): Copy size to the saveable obstack.\n\n\t* init.c (build_new): Stick a CLEANUP_POINT_EXPR inside the\n \tTRY_CATCH_EXPR for now.\n\nFrom-SVN: r16726", "tree": {"sha": "0b01efe391453133f242ff039511260f69ca9c2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b01efe391453133f242ff039511260f69ca9c2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92f5c1350c047cd68cdb17e66ed5f52d51b019b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f5c1350c047cd68cdb17e66ed5f52d51b019b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92f5c1350c047cd68cdb17e66ed5f52d51b019b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f5c1350c047cd68cdb17e66ed5f52d51b019b0/comments", "author": null, "committer": null, "parents": [{"sha": "f47448072a99ebd168eddf9b7ed627518f5e9470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f47448072a99ebd168eddf9b7ed627518f5e9470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f47448072a99ebd168eddf9b7ed627518f5e9470"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "a129f0a9a527cd174517fbf4f82ff6f7d8b0c271", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92f5c1350c047cd68cdb17e66ed5f52d51b019b0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92f5c1350c047cd68cdb17e66ed5f52d51b019b0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=92f5c1350c047cd68cdb17e66ed5f52d51b019b0", "patch": "@@ -1,3 +1,15 @@\n+Wed Nov 26 01:11:24 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* except.c (expand_start_catch_block): Fix catching a reference\n+\tto pointer.\n+\n+Tue Nov 25 11:28:21 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* init.c (build_new): Copy size to the saveable obstack.\n+\n+\t* init.c (build_new): Stick a CLEANUP_POINT_EXPR inside the\n+ \tTRY_CATCH_EXPR for now.\n+\n Mon Nov 24 12:15:55 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* typeck.c (mark_addressable): Don't assume a FUNCTION_DECL"}, {"sha": "56b2a4175e656f55ee356402db4327e5bc8f2d07", "filename": "gcc/cp/except.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92f5c1350c047cd68cdb17e66ed5f52d51b019b0/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92f5c1350c047cd68cdb17e66ed5f52d51b019b0/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=92f5c1350c047cd68cdb17e66ed5f52d51b019b0", "patch": "@@ -614,6 +614,13 @@ expand_start_catch_block (declspecs, declarator)\n \tinit_type = build_reference_type (init_type);\n \n       exp = get_eh_value ();\n+\n+      /* Since pointers are passed by value, initialize a reference to\n+\t pointer catch parm with the address of the value slot.  */\n+      if (TREE_CODE (init_type) == REFERENCE_TYPE\n+\t  && TREE_CODE (TREE_TYPE (init_type)) == POINTER_TYPE)\n+\texp = build_unary_op (ADDR_EXPR, exp, 1);\n+\n       exp = expr_tree_cons (NULL_TREE,\n \t\t       build_eh_type_type (TREE_TYPE (decl)),\n \t\t       expr_tree_cons (NULL_TREE,"}, {"sha": "186b6c3edf691e37c94374a9f82090c201735984", "filename": "gcc/cp/init.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92f5c1350c047cd68cdb17e66ed5f52d51b019b0/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92f5c1350c047cd68cdb17e66ed5f52d51b019b0/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=92f5c1350c047cd68cdb17e66ed5f52d51b019b0", "patch": "@@ -2736,12 +2736,19 @@ build_new (placement, decl, init, use_global_new)\n \t  if (placement)\n \t    flags |= LOOKUP_SPECULATIVELY;\n \n+\t  /* Copy size to the saveable obstack.  */\n+\t  size = copy_node (size);\n+\n \t  cleanup = build_op_delete_call (dcode, alloc_expr, size, flags);\n \n \t  resume_momentary (yes);\n \n \t  if (cleanup)\n \t    {\n+\t      /* FIXME: this is a workaround for a crash due to overlapping\n+\t\t exception regions.  Cleanups shouldn't really happen here.  */\n+\t      rval = build1 (CLEANUP_POINT_EXPR, TREE_TYPE (rval), rval);\n+\n \t      rval = build (TRY_CATCH_EXPR, TREE_TYPE (rval), rval, cleanup);\n \t      rval = build (COMPOUND_EXPR, TREE_TYPE (rval), alloc_expr, rval);\n \t    }"}]}