{"sha": "5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYzYWI2ZmJmMDA3ZjMwOWI4MjNjZDc3ZjFkM2VlZDUyZWUwZDBhNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-01-03T15:32:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-01-03T15:32:19Z"}, "message": "s-atacco.ads, [...]: Protect use of 'Constrained by warnings on/off...\n\n\t* s-atacco.ads, a-direio.adb: Protect use of 'Constrained by warnings\n\ton/off, since this is an obsolescent feature, for which we now generate\n\ta warning.\n\n\t* sem_attr.adb (Analyze_Attribute, case Constrained): Issue warning if\n\twarning mode is set and obsolescent usage of this attribute occurs.\n\t(Resolve_Access, case 'Access): Note that GNAT uses the context type to\n\tdisambiguate overloaded prefixes, in accordance with AI-235. GNAT code\n\tpredates, and partly motivates, the adoption of the AI.\n\tImplement new Ada 2005 attribute Mod\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Implement Ada 2005\n\tattribute Mod.\n\n\t* par-ch4.adb (P_Name): In Ada 2005 mode, recognize new attribute Mod\n\n\t* snames.h, snames.ads, snames.adb: Add entry for No_Dependence for\n\tpragma restrictions.\n\tNew entry for Ada 2005 attribute Mod.\n\n\t* par-prag.adb:\n\tAdd recognition of new pragma Restrictions No_Dependence\n\tRecognize restriction No_Obsolescent_Features at parse time\n\n\t* bcheck.adb: Add circuitry for checking for consistency of\n\tNo_Dependence restrictions.\n\n\t* lib-writ.ads, lib-writ.adb: Output new R lines for No_Dependence\n\trestrictions.\n\n\t* restrict.ads, restrict.adb: Add subprograms to deal with\n\tNo_Dependence restrictions.\n\n\t* rtsfind.adb: Check that implicit with's do not violate No_Dependence\n\trestrictions.\n\n\t* sem_ch3.adb, sem_ch11.adb, sem_ch13.adb, lib-xref.adb,\n\tsem_attr.adb: Add check for new restriction No_Obsolescent_Features\n\n\t* scn.ads, prj-err.ads, prj-err.adb, ali-util.adb, gprep.adb: Add new\n\tdummy parameter to scng instantiation.\n\tNeeded for new restriction No_Obsolescent_Features\n\n\t* scn.adb: (Obsolescent_Check): New procedure\n\tNeeded for new restriction No_Obsolescent_Features\n\n\t* scng.ads, scng.adb: Always allow wide characters in Ada 2005 mode, as\n\tspecified by AI-285, needed for implementation of AI-388 (adding greek\n\tpi to Ada.Numerics).\n\tAdd new generic formal to scng, needed for new restriction\n\tNo_Obsolescent_Features.\n\n\t* s-rident.ads: Add new restriction No_Obsolescent_Features.\n\n\t* ali.ads, ali.adb: Adjustments for reading new No_Dependence\n\trestrictions lines.\n\t(Scan_ALI): When finding an unexpected character on an R line, raise\n\texception Bad_R_Line, instead of calling Fatal_Error, so that, when\n\tIgnore_Errors is True, default restrictions are set and scanning of the\n\tALI file continues with the next line. Also, when Bad_R_Line is raised\n\tand Ignore_Errors is True, skip to the end of le line.\n\n\t* sem_ch10.adb: Check that explicit with's do not violate\n\tNo_Dependence restrictions.\n\t(Install_Withed_Unit): Add code to implement AI-377 and diagnose\n\tillegal context clauses containing child units of instance.\n\n\t* sem_prag.adb: Processing and checking for new No_Dependence\n\trestrictions.\n\t(Analyze_Pragma, case Psect_Object): Call Check_Arg_Is_External_Name to\n\tanalyze and check the External argument.\n\n\t* a-numeri.ads: Add greek letter pi as alternative spelling of Pi\n\nFrom-SVN: r92829", "tree": {"sha": "b913840c88dfad71cc2715a06794206e2889a7a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b913840c88dfad71cc2715a06794206e2889a7a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/comments", "author": null, "committer": null, "parents": [{"sha": "b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c1e25cb023b3b8f26f9ad3701a7fd61c9e25f4"}], "stats": {"total": 1733, "additions": 1225, "deletions": 508}, "files": [{"sha": "0c01d1a6d4b5a67ce953eeaf759d54239442a9f1", "filename": "gcc/ada/a-direio.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fa-direio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fa-direio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direio.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -183,9 +183,15 @@ package body Ada.Direct_IO is\n       --  For a non-constrained variant record type, we read into an\n       --  intermediate buffer, since we may have the case of discriminated\n       --  records where a discriminant check is required, and we may need\n-      --  to assign only part of the record buffer originally written\n+      --  to assign only part of the record buffer originally written.\n \n+      --  Note: we have to turn warnings on/off because this use of\n+      --  the Constrained attribute is an obsolescent feature.\n+\n+      pragma Warnings (Off);\n       if not Element_Type'Constrained then\n+         pragma Warnings (On);\n+\n          declare\n             Buf : Element_Type;\n \n@@ -205,7 +211,13 @@ package body Ada.Direct_IO is\n    begin\n       --  Same processing for unconstrained case as above\n \n+      --  Note: we have to turn warnings on/off because this use of\n+      --  the Constrained attribute is an obsolescent feature.\n+\n+      pragma Warnings (Off);\n       if not Element_Type'Constrained then\n+         pragma Warnings (On);\n+\n          declare\n             Buf : Element_Type;\n "}, {"sha": "e0dfef2b2f242bb9f2ecb5d1137d04ceb66e2437", "filename": "gcc/ada/a-numeri.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fa-numeri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fa-numeri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numeri.ads?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -22,7 +22,12 @@ pragma Pure (Numerics);\n    Pi : constant :=\n           3.14159_26535_89793_23846_26433_83279_50288_41971_69399_37511;\n \n+   [\"03C0\"] : constant := Pi;\n+   --  This is the greek letter Pi. Note that it is conforming to have this\n+   --  present even in Ada 95 mode, because there is no way for a normal mode\n+   --  Ada 95 program to reference this identifier in any case.\n+\n    e : constant :=\n-          2.71828_18284_59045_23536_02874_71352_66249_77572_47093_69996;\n+         2.71828_18284_59045_23536_02874_71352_66249_77572_47093_69996;\n \n end Ada.Numerics;"}, {"sha": "1bf114a59e6d2f318658d0f06722114215f76dcd", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -53,7 +53,9 @@ package body ALI.Util is\n \n    procedure Error_Msg_SP (Msg : String);\n \n-   --  Instantiation of Styleg, needed  to instantiate Scng\n+   procedure Obsolescent_Check (S : Source_Ptr);\n+\n+   --  Instantiation of Styleg, needed to instantiate Scng\n \n    package Style is new Styleg\n      (Error_Msg, Error_Msg_S, Error_Msg_SC, Error_Msg_SP);\n@@ -62,7 +64,8 @@ package body ALI.Util is\n    --  Get_File_Checksum).\n \n    package Scanner is new Scng\n-     (Post_Scan, Error_Msg, Error_Msg_S, Error_Msg_SC, Error_Msg_SP, Style);\n+     (Post_Scan, Error_Msg, Error_Msg_S, Error_Msg_SC, Error_Msg_SP,\n+      Obsolescent_Check, Style);\n \n    type Header_Num is range 0 .. 1_000;\n \n@@ -200,6 +203,16 @@ package body ALI.Util is\n       Interfaces.Reset;\n    end Initialize_ALI_Source;\n \n+   -----------------------\n+   -- Obsolescent_Check --\n+   -----------------------\n+\n+   procedure Obsolescent_Check (S : Source_Ptr) is\n+      pragma Warnings (Off, S);\n+   begin\n+      null;\n+   end Obsolescent_Check;\n+\n    ---------------\n    -- Post_Scan --\n    ---------------"}, {"sha": "0f1820555719dbe20174bef8c47e7ae4d2141da6", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -84,6 +84,7 @@ package body ALI is\n       --  Initialize all tables\n \n       ALIs.Init;\n+      No_Deps.Init;\n       Units.Init;\n       Withs.Init;\n       Sdep.Init;\n@@ -199,7 +200,7 @@ package body ALI is\n       --  quote.\n \n       function Get_Nat return Nat;\n-      --  Skip blanks, then scan out an unsigned integer value in Nat range.\n+      --  Skip blanks, then scan out an unsigned integer value in Nat range\n \n       function Get_Stamp return Time_Stamp_Type;\n       --  Skip blanks, then scan out a time stamp\n@@ -212,7 +213,7 @@ package body ALI is\n       --  at end of line). Also skips past any following blank lines.\n \n       procedure Skip_Line;\n-      --  Skip rest of current line and any following blank lines.\n+      --  Skip rest of current line and any following blank lines\n \n       procedure Skip_Space;\n       --  Skip past white space (blanks or horizontal tab)\n@@ -948,7 +949,7 @@ package body ALI is\n       C := Getc;\n       Check_Unknown_Line;\n \n-      --  Acquire restrictions line\n+      --  Acquire first restrictions line\n \n       while C /= 'R' loop\n          if Ignore_Errors then\n@@ -974,7 +975,7 @@ package body ALI is\n             --  Save cumulative restrictions in case we have a fatal error\n \n             Bad_R_Line : exception;\n-            --  Signal bad restrictions line\n+            --  Signal bad restrictions line (raised on unexpected character)\n \n          begin\n             Checkc (' ');\n@@ -998,7 +999,7 @@ package body ALI is\n                      null;\n \n                   when others =>\n-                     Fatal_Error;\n+                     raise Bad_R_Line;\n                end case;\n             end loop;\n \n@@ -1031,7 +1032,7 @@ package body ALI is\n                      end;\n \n                   when others =>\n-                     Fatal_Error;\n+                     raise Bad_R_Line;\n                end case;\n \n                --  Acquire restrictions violations information\n@@ -1078,7 +1079,7 @@ package body ALI is\n                      end if;\n \n                   when others =>\n-                     Fatal_Error;\n+                     raise Bad_R_Line;\n                end case;\n             end loop;\n \n@@ -1095,6 +1096,7 @@ package body ALI is\n                if Ignore_Errors then\n                   Cumulative_Restrictions := Save_R;\n                   ALIs.Table (Id).Restrictions := Restrictions_Initial;\n+                  Skip_Eol;\n \n                --  In normal mode, this is a fatal error\n \n@@ -1105,9 +1107,23 @@ package body ALI is\n          end Scan_Restrictions;\n       end if;\n \n-      --  Acquire 'I' lines if present\n+      --  Acquire additional restrictions (No_Dependence) lines if present\n \n       C := Getc;\n+      while C = 'R' loop\n+         if Ignore ('R') then\n+            Skip_Line;\n+         else\n+            Skip_Space;\n+            No_Deps.Append ((Id, Get_Name));\n+         end if;\n+\n+         Skip_Eol;\n+         C := Getc;\n+      end loop;\n+\n+      --  Acquire 'I' lines if present\n+\n       Check_Unknown_Line;\n \n       while C = 'I' loop"}, {"sha": "48b1732f31545eee892baf8ad65ec49f8c6808e3", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -581,6 +581,29 @@ package ALI is\n      Hash       => SHash,\n      Equal      => SEq);\n \n+   -------------------------\n+   -- No_Dependency Table --\n+   -------------------------\n+\n+   --  Each R line for a No_Dependency Restriction generates an entry in\n+   --  this No_Dependency table.\n+\n+   type No_Dep_Record is record\n+      ALI_File : ALI_Id;\n+      --  ALI File containing tne entry\n+\n+      No_Dep_Unit : Name_Id;\n+      --  Id for names table entry including entire name, including periods.\n+   end record;\n+\n+   package No_Deps is new Table.Table (\n+     Table_Component_Type => No_Dep_Record,\n+     Table_Index_Type     => Integer,\n+     Table_Low_Bound      => 0,\n+     Table_Initial        => 200,\n+     Table_Increment      => 400,\n+     Table_Name           => \"No_Deps\");\n+\n    ------------------------------------\n    -- Sdep (Source Dependency) Table --\n    ------------------------------------\n@@ -807,7 +830,7 @@ package ALI is\n    --------------------------------------\n \n    procedure Initialize_ALI;\n-   --  Initialize the ALI tables. Also resets all switch values to defaults.\n+   --  Initialize the ALI tables. Also resets all switch values to defaults\n \n    function Scan_ALI\n      (F             : File_Name_Type;"}, {"sha": "2ada0cf1353afae446bf6ea778d58ab845bcc2e3", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 63, "deletions": 2, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -56,8 +56,12 @@ package body Bcheck is\n    procedure Check_Consistent_Zero_Cost_Exception_Handling;\n \n    procedure Consistency_Error_Msg (Msg : String);\n-   --  Produce an error or a warning message, depending on whether\n-   --  an inconsistent configuration is permitted or not.\n+   --  Produce an error or a warning message, depending on whether an\n+   --  inconsistent configuration is permitted or not.\n+\n+   function Same_Unit (U1 : Name_Id; U2 : Name_Id) return Boolean;\n+   --  Used to compare two unit names for No_Dependence checks. U1 is in\n+   --  standard unit name format, and U2 is in literal form with periods.\n \n    ------------------------------------\n    -- Check_Consistent_Configuration --\n@@ -539,8 +543,65 @@ package body Bcheck is\n             end loop;\n          end if;\n       end loop;\n+\n+      --  Now deal with No_Dependence indications. Note that we put the loop\n+      --  through entries in the no dependency table first, since this loop\n+      --  is most often empty (no such pragma Restrictions in use).\n+\n+      for ND in No_Deps.First .. No_Deps.Last loop\n+         declare\n+            ND_Unit : constant Name_Id := No_Deps.Table (ND).No_Dep_Unit;\n+\n+         begin\n+            for J in ALIs.First .. ALIs.Last loop\n+               declare\n+                  A : ALIs_Record renames ALIs.Table (J);\n+\n+               begin\n+                  for K in A.First_Unit .. A.Last_Unit loop\n+                     declare\n+                        U : Unit_Record renames Units.Table (K);\n+                     begin\n+                        for L in U.First_With .. U.Last_With loop\n+                           if Same_Unit (Withs.Table (L).Uname, ND_Unit) then\n+                              Error_Msg_Name_1 := U.Uname;\n+                              Error_Msg_Name_2 := ND_Unit;\n+                              Consistency_Error_Msg\n+                                (\"unit & violates restriction \" &\n+                                 \"No_Dependence => %\");\n+                           end if;\n+                        end loop;\n+                     end;\n+                  end loop;\n+               end;\n+            end loop;\n+         end;\n+      end loop;\n    end Check_Consistent_Restrictions;\n \n+   ---------------\n+   -- Same_Unit --\n+   ---------------\n+\n+   function Same_Unit (U1 : Name_Id; U2 : Name_Id) return Boolean is\n+   begin\n+      --  Note, the string U1 has a terminating %s or %b, U2 does not\n+\n+      if Length_Of_Name (U1) - 2 = Length_Of_Name (U2) then\n+         Get_Name_String (U1);\n+\n+         declare\n+            U1_Str : constant String := Name_Buffer (1 .. Name_Len - 2);\n+         begin\n+            Get_Name_String (U2);\n+            return U1_Str = Name_Buffer (1 .. Name_Len);\n+         end;\n+\n+      else\n+         return False;\n+      end if;\n+   end Same_Unit;\n+\n    ---------------------------------------------------\n    -- Check_Consistent_Zero_Cost_Exception_Handling --\n    ---------------------------------------------------"}, {"sha": "fa99d8bd1ad14f549686be294720c9601abd5f8c", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -2324,6 +2324,87 @@ package body Exp_Attr is\n          Analyze_And_Resolve (N, Typ);\n       end Mantissa;\n \n+      ---------\n+      -- Mod --\n+      ---------\n+\n+      when Attribute_Mod => Mod_Case : declare\n+         Arg  : constant Node_Id := Relocate_Node (First (Exprs));\n+         Hi   : constant Node_Id := Type_High_Bound (Etype (Arg));\n+         Modv : constant Uint    := Modulus (Btyp);\n+\n+      begin\n+\n+         --  This is not so simple. The issue is what type to use for the\n+         --  computation of the modular value.\n+\n+         --  The easy case is when the modulus value is within the bounds\n+         --  of the signed integer type of the argument. In this case we can\n+         --  just do the computation in that signed integer type, and then\n+         --  do an ordinary conversion to the target type.\n+\n+         if Modv <= Expr_Value (Hi) then\n+            Rewrite (N,\n+              Convert_To (Btyp,\n+                Make_Op_Mod (Loc,\n+                  Left_Opnd  => Arg,\n+                  Right_Opnd => Make_Integer_Literal (Loc, Modv))));\n+\n+         --  Here we know that the modulus is larger than type'Last of the\n+         --  integer type. There are three possible cases to consider:\n+\n+         --    a) The integer value is non-negative. In this case, it is\n+         --    returned as the result (since it is less than the modulus).\n+\n+         --    b) The integer value is negative. In this case, we know that\n+         --    the result is modulus + value, where the value might be as\n+         --    small as -modulus. The trouble is what type do we use to do\n+         --    this subtraction. No type will do, since modulus can be as\n+         --    big as 2**64, and no integer type accomodates this value.\n+         --    Let's do a bit of algebra\n+\n+         --         modulus + value\n+         --      =  modulus - (-value)\n+         --      =  (modulus - 1) - (-value - 1)\n+\n+         --    Now modulus - 1 is certainly in range of the modular type.\n+         --    -value is in the range 1 .. modulus, so -value -1 is in the\n+         --    range 0 .. modulus-1 which is in range of the modular type.\n+         --    Furthermore, (-value - 1) can be expressed as -(value + 1)\n+         --    which we can compute using the integer base type.\n+\n+         else\n+            Rewrite (N,\n+              Make_Conditional_Expression (Loc,\n+                Expressions => New_List (\n+                  Make_Op_Ge (Loc,\n+                    Left_Opnd  => Duplicate_Subexpr (Arg),\n+                    Right_Opnd => Make_Integer_Literal (Loc, 0)),\n+\n+                  Convert_To (Btyp,\n+                    Duplicate_Subexpr_No_Checks (Arg)),\n+\n+                  Make_Op_Subtract (Loc,\n+                    Left_Opnd =>\n+                      Make_Integer_Literal (Loc,\n+                        Intval => Modv - 1),\n+                    Right_Opnd =>\n+                      Convert_To (Btyp,\n+                        Make_Op_Minus (Loc,\n+                          Right_Opnd =>\n+                            Make_Op_Add (Loc,\n+                              Left_Opnd  => Duplicate_Subexpr_No_Checks (Arg),\n+                              Right_Opnd =>\n+                                Make_Integer_Literal (Loc,\n+                                  Intval => 1))))))));\n+\n+\n+\n+         end if;\n+\n+         Analyze_And_Resolve (N, Btyp);\n+      end Mod_Case;\n+\n       -----------\n       -- Model --\n       -----------"}, {"sha": "02e075267782437fda9e2b0c97e09c381beb314c", "filename": "gcc/ada/gprep.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fgprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fgprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgprep.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -82,6 +82,9 @@ package body GPrep is\n    procedure Display_Copyright;\n    --  Display the copyright notice\n \n+   procedure Obsolescent_Check (S : Source_Ptr);\n+   --  Null procedure, needed by instantiation of Scng below\n+\n    procedure Post_Scan;\n    --  Null procedure, needed by instantiation of Scng below\n \n@@ -91,6 +94,7 @@ package body GPrep is\n       Errutil.Error_Msg_S,\n       Errutil.Error_Msg_SC,\n       Errutil.Error_Msg_SP,\n+      Obsolescent_Check,\n       Errutil.Style);\n    --  The scanner for the preprocessor\n \n@@ -298,6 +302,17 @@ package body GPrep is\n       New_Line (Outfile.all);\n    end New_EOL_To_Outfile;\n \n+   -----------------------\n+   -- Obsolescent_Check --\n+   -----------------------\n+\n+   procedure Obsolescent_Check (S : Source_Ptr) is\n+      pragma Warnings (Off, S);\n+   begin\n+      null;\n+   end Obsolescent_Check;\n+\n+\n    ---------------\n    -- Post_Scan --\n    ---------------"}, {"sha": "2de8789514b6db8aaa89474e6d59f4ea09468031", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -53,6 +53,14 @@ with System.WCh_Con; use System.WCh_Con;\n \n package body Lib.Writ is\n \n+   -----------------------\n+   -- Local Subprograms --\n+   -----------------------\n+\n+   procedure Write_Unit_Name (N : Node_Id);\n+   --  Used to write out the unit name for R (pragma Restriction) lines\n+   --  for uses of Restriction (No_Dependence => unit-name).\n+\n    ----------------------------------\n    -- Add_Preprocessing_Dependency --\n    ----------------------------------\n@@ -940,7 +948,7 @@ package body Lib.Writ is\n          end if;\n       end loop;\n \n-      --  Output restrictions line\n+      --  Output first restrictions line\n \n       Write_Info_Initiate ('R');\n       Write_Info_Char (' ');\n@@ -987,6 +995,19 @@ package body Lib.Writ is\n \n       Write_Info_EOL;\n \n+      --  Output R lines for No_Dependence entries\n+\n+      for J in No_Dependence.First .. No_Dependence.Last loop\n+         if In_Extended_Main_Source_Unit (No_Dependence.Table (J).Unit)\n+           and then not No_Dependence.Table (J).Warn\n+         then\n+            Write_Info_Initiate ('R');\n+            Write_Info_Char (' ');\n+            Write_Unit_Name (No_Dependence.Table (J).Unit);\n+            Write_Info_EOL;\n+         end if;\n+      end loop;\n+\n       --  Output interrupt state lines\n \n       for J in Interrupt_States.First .. Interrupt_States.Last loop\n@@ -1099,7 +1120,23 @@ package body Lib.Writ is\n       Output_References;\n       Write_Info_Terminate;\n       Close_Output_Library_Info;\n-\n    end Write_ALI;\n \n+   ---------------------\n+   -- Write_Unit_Name --\n+   ---------------------\n+\n+   procedure Write_Unit_Name (N : Node_Id) is\n+   begin\n+      if Nkind (N) = N_Identifier then\n+         Write_Info_Name (Chars (N));\n+\n+      else\n+         pragma Assert (Nkind (N) = N_Selected_Component);\n+         Write_Unit_Name (Prefix (N));\n+         Write_Info_Char ('.');\n+         Write_Unit_Name (Selector_Name (N));\n+      end if;\n+   end Write_Unit_Name;\n+\n end Lib.Writ;"}, {"sha": "6741c9d4f98ed623ac62ec3b644cc1c71905065a", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -254,7 +254,7 @@ package Lib.Writ is\n    --  -- R  Restrictions --\n    --  ---------------------\n \n-   --  The R line records the status of restrictions generated by pragma\n+   --  The first R line records the status of restrictions generated by pragma\n    --  Restrictions encountered, as well as information on what the compiler\n    --  has been able to determine with respect to restrictions violations.\n    --  The format is:\n@@ -343,6 +343,16 @@ package Lib.Writ is\n    --      signal a fatal error if it is missing. This means that future\n    --      changes to the ALI file format must retain the R line.\n \n+   --  Subsequent R lines are present only if pragma Restriction No_Dependence\n+   --  is used. There is one such line for each such pragma appearing in the\n+   --  extended main unit. The format is\n+\n+   --    R unit_name\n+\n+   --      Here the unit name is in all lower case. The components of the unit\n+   --      name are separated by periods. The names themselves are in encoded\n+   --      form, as documented in Namet.\n+\n    --  ------------------------\n    --  -- I Interrupt States --\n    --  ------------------------"}, {"sha": "eae80ff022cac7410d8fb5561fc66a798e9b4c21", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -32,6 +32,8 @@ with Lib.Util; use Lib.Util;\n with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Opt;      use Opt;\n+with Restrict; use Restrict;\n+with Rident;   use Rident;\n with Sem_Prag; use Sem_Prag;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n@@ -259,6 +261,10 @@ package body Lib.Xref is\n    begin\n       pragma Assert (Nkind (E) in N_Entity);\n \n+      if E = Standard_ASCII then\n+         Check_Restriction (No_Obsolescent_Features, N);\n+      end if;\n+\n       --  Never collect references if not in main source unit. However,\n       --  we omit this test if Typ is 'e' or 'k', since these entries are\n       --  really structural, and it is useful to have them in units"}, {"sha": "5826606352e889d5c2d34c1bce00eeddba7a705f", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -425,6 +425,9 @@ package body Ch4 is\n                elsif Token = Tok_Access then\n                   Attr_Name := Name_Access;\n \n+               elsif Token = Tok_Mod and then Ada_Version = Ada_05 then\n+                  Attr_Name := Name_Mod;\n+\n                elsif Apostrophe_Should_Be_Semicolon then\n                   Expr_Form := EF_Name;\n                   return Name_Node;"}, {"sha": "d22c5243cee0cf78cbbe0d93229863d40af53b41", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 79, "deletions": 7, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -32,6 +32,8 @@\n \n with Fname.UF; use Fname.UF;\n with Osint;    use Osint;\n+with Rident;   use Rident;\n+with Restrict; use Restrict;\n with Stringt;  use Stringt;\n with Stylesw;  use Stylesw;\n with Uintp;    use Uintp;\n@@ -41,6 +43,7 @@ separate (Par)\n \n function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n    Pragma_Name : constant Name_Id    := Chars (Pragma_Node);\n+   Prag_Id     : constant Pragma_Id  := Get_Pragma_Id (Pragma_Name);\n    Pragma_Sloc : constant Source_Ptr := Sloc (Pragma_Node);\n    Arg_Count   : Nat;\n    Arg_Node    : Node_Id;\n@@ -83,6 +86,14 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n    --  Same as Check_Optional_Identifier, except that the name is required\n    --  to be present and to match the given Id value.\n \n+   procedure Process_Restrictions_Or_Restriction_Warnings;\n+   --  Common processing for Restrictions and Restriction_Warnings pragmas.\n+   --  This routine only processes the case of No_Obsolescent_Features,\n+   --  which is the only restriction that has syntactic effects. No general\n+   --  error checking is done, since this will be done in Sem_Prag. The\n+   --  other case processed is pragma Restrictions No_Dependence, since\n+   --  otherwise this is done too late.\n+\n    ----------\n    -- Arg1 --\n    ----------\n@@ -196,9 +207,40 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n       end if;\n    end Check_Required_Identifier;\n \n-   ----------\n-   -- Prag --\n-   ----------\n+   --------------------------------------------------\n+   -- Process_Restrictions_Or_Restriction_Warnings --\n+   --------------------------------------------------\n+\n+   procedure Process_Restrictions_Or_Restriction_Warnings is\n+      Arg  : Node_Id;\n+      Id   : Name_Id;\n+      Expr : Node_Id;\n+\n+   begin\n+      Arg := Arg1;\n+      while Present (Arg) loop\n+         Id := Chars (Arg);\n+         Expr := Expression (Arg);\n+\n+         if Id = No_Name\n+           and then Nkind (Expr) = N_Identifier\n+           and then Get_Restriction_Id (Chars (Expr)) = No_Obsolescent_Features\n+         then\n+            Set_Restriction (No_Obsolescent_Features, Pragma_Node);\n+            Restriction_Warnings (No_Obsolescent_Features) :=\n+              Prag_Id = Pragma_Restriction_Warnings;\n+\n+         elsif Id = Name_No_Dependence then\n+            Set_Restriction_No_Dependence\n+              (Unit => Expr,\n+               Warn  => Prag_Id = Pragma_Restriction_Warnings);\n+         end if;\n+\n+         Next (Arg);\n+      end loop;\n+   end Process_Restrictions_Or_Restriction_Warnings;\n+\n+--  Start if processing for Prag\n \n begin\n    Error_Msg_Name_1 := Pragma_Name;\n@@ -207,7 +249,7 @@ begin\n    --  it is a semantic error, not a syntactic one (we have already checked\n    --  the syntax for the unrecognized pragma as required by (RM 2.8(11)).\n \n-   if not Is_Pragma_Name (Chars (Pragma_Node)) then\n+   if Prag_Id = Unknown_Pragma then\n       return Pragma_Node;\n    end if;\n \n@@ -234,7 +276,7 @@ begin\n \n    --  Remaining processing is pragma dependent\n \n-   case Get_Pragma_Id (Pragma_Name) is\n+   case Prag_Id is\n \n       ------------\n       -- Ada_83 --\n@@ -369,6 +411,38 @@ begin\n          List_Pragmas.Increment_Last;\n          List_Pragmas.Table (List_Pragmas.Last) := (Page, Semi);\n \n+         ------------------\n+         -- Restrictions --\n+         ------------------\n+\n+         --  pragma Restrictions (RESTRICTION {, RESTRICTION});\n+\n+         --  RESTRICTION ::=\n+         --    restriction_IDENTIFIER\n+         --  | restriction_parameter_IDENTIFIER => EXPRESSION\n+\n+         --  We process the case of No_Obsolescent_Features, since this has\n+         --  a syntactic effect that we need to detect at parse time (the use\n+         --  of replacement characters such as colon for pound sign).\n+\n+         when Pragma_Restrictions =>\n+            Process_Restrictions_Or_Restriction_Warnings;\n+\n+         --------------------------\n+         -- Restriction_Warnings --\n+         --------------------------\n+\n+         --  pragma Restriction_Warnings (RESTRICTION {, RESTRICTION});\n+\n+         --  RESTRICTION ::=\n+         --    restriction_IDENTIFIER\n+         --  | restriction_parameter_IDENTIFIER => EXPRESSION\n+\n+         --  See above comment for pragma Restrictions\n+\n+         when Pragma_Restriction_Warnings =>\n+            Process_Restrictions_Or_Restriction_Warnings;\n+\n       ----------------------------------------------------------\n       -- Source_File_Name and Source_File_Name_Project (GNAT) --\n       ----------------------------------------------------------\n@@ -1003,8 +1077,6 @@ begin\n            Pragma_Queuing_Policy               |\n            Pragma_Remote_Call_Interface        |\n            Pragma_Remote_Types                 |\n-           Pragma_Restrictions                 |\n-           Pragma_Restriction_Warnings         |\n            Pragma_Restricted_Run_Time          |\n            Pragma_Ravenscar                    |\n            Pragma_Reviewable                   |"}, {"sha": "5db2dd67e522c920949876121505b001fc9918e9", "filename": "gcc/ada/prj-err.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fprj-err.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fprj-err.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-err.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2002-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,6 +31,16 @@ with Stringt; use Stringt;\n \n package body Prj.Err is\n \n+   -----------------------\n+   -- Obsolescent_Check --\n+   -----------------------\n+\n+   procedure Obsolescent_Check (S : Source_Ptr) is\n+      pragma Warnings (Off, S);\n+   begin\n+      null;\n+   end Obsolescent_Check;\n+\n    ---------------\n    -- Post_Scan --\n    ---------------"}, {"sha": "8a299744200404c537bb4310b7ec2f65435fcb47", "filename": "gcc/ada/prj-err.ads", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fprj-err.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fprj-err.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-err.ads?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -58,12 +58,12 @@ package Prj.Err is\n    --  file before using any of the other routines in the package.\n \n    procedure Finalize (Source_Type : String := \"project\")\n-               renames Errutil.Finalize;\n+     renames Errutil.Finalize;\n    --  Finalize processing of error messages for one file and output message\n    --  indicating the number of detected errors.\n \n    procedure Error_Msg (Msg : String; Flag_Location : Source_Ptr)\n-               renames Errutil.Error_Msg;\n+     renames Errutil.Error_Msg;\n    --  Output a message at specified location.\n \n    procedure Error_Msg_S (Msg : String) renames Errutil.Error_Msg_S;\n@@ -85,16 +85,20 @@ package Prj.Err is\n    --  Instantiation of the generic style package, needed for the instantiation\n    --  of the generic scanner below.\n \n+   procedure Obsolescent_Check (S : Source_Ptr);\n+   --  Dummy null procedure for Scng instantiation\n+\n    procedure Post_Scan;\n    --  Convert an Ada operator symbol into a standard string\n \n    package Scanner is new Scng\n-     (Post_Scan    => Post_Scan,\n-      Error_Msg    => Error_Msg,\n-      Error_Msg_S  => Error_Msg_S,\n-      Error_Msg_SC => Error_Msg_SC,\n-      Error_Msg_SP => Error_Msg_SP,\n-      Style        => Style);\n+     (Post_Scan         => Post_Scan,\n+      Error_Msg         => Error_Msg,\n+      Error_Msg_S       => Error_Msg_S,\n+      Error_Msg_SC      => Error_Msg_SC,\n+      Error_Msg_SP      => Error_Msg_SP,\n+      Obsolescent_Check => Obsolescent_Check,\n+      Style             => Style);\n    --  Instantiation of the generic scanner\n \n end Prj.Err;"}, {"sha": "805a9930527699e20514041a1ba9694c659a730d", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -61,6 +61,10 @@ package body Restrict is\n    --  in the Names table, and this table will be locked if we are\n    --  generating a message from gigi.\n \n+   function Same_Unit (U1, U2 : Node_Id) return Boolean;\n+   --  Returns True iff U1 and U2 represent the same library unit. Used for\n+   --  handling of No_Dependence => Unit restriction case.\n+\n    function Suppress_Restriction_Message (N : Node_Id) return Boolean;\n    --  N is the node for a possible restriction violation message, but\n    --  the message is to be suppressed if this is an internal file and\n@@ -302,6 +306,36 @@ package body Restrict is\n       end if;\n    end Check_Restriction;\n \n+   -------------------------------------\n+   -- Check_Restriction_No_Dependence --\n+   -------------------------------------\n+\n+   procedure Check_Restriction_No_Dependence (U : Node_Id; Err : Node_Id) is\n+      DU : Node_Id;\n+\n+   begin\n+      for J in No_Dependence.First .. No_Dependence.Last loop\n+         DU := No_Dependence.Table (J).Unit;\n+\n+         if Same_Unit (U, DU) then\n+            Error_Msg_Sloc := Sloc (DU);\n+            Error_Msg_Node_1 := DU;\n+\n+            if No_Dependence.Table (J).Warn then\n+               Error_Msg\n+                 (\"?violation of restriction `No_Dependence '='> &`#\",\n+                  Sloc (Err));\n+            else\n+               Error_Msg\n+                 (\"|violation of restriction `No_Dependence '='> &`#\",\n+                  Sloc (Err));\n+            end if;\n+\n+            return;\n+         end if;\n+      end loop;\n+   end Check_Restriction_No_Dependence;\n+\n    ----------------------------------------\n    -- Cunit_Boolean_Restrictions_Restore --\n    ----------------------------------------\n@@ -496,6 +530,31 @@ package body Restrict is\n       Error_Msg_N (B (1 .. P), N);\n    end Restriction_Msg;\n \n+   ---------------\n+   -- Same_Unit --\n+   ---------------\n+\n+   function Same_Unit (U1, U2 : Node_Id) return Boolean is\n+   begin\n+      if Nkind (U1) = N_Identifier then\n+         return Nkind (U2) = N_Identifier and then Chars (U1) = Chars (U2);\n+\n+      elsif Nkind (U2) = N_Identifier then\n+         return False;\n+\n+      elsif (Nkind (U1) = N_Selected_Component\n+             or else Nkind (U1) = N_Expanded_Name)\n+        and then\n+          (Nkind (U2) = N_Selected_Component\n+           or else Nkind (U2) = N_Expanded_Name)\n+      then\n+         return Same_Unit (Prefix (U1), Prefix (U2))\n+           and then Same_Unit (Selector_Name (U1), Selector_Name (U2));\n+      else\n+         return False;\n+      end if;\n+   end Same_Unit;\n+\n    ------------------------------\n    -- Set_Profile_Restrictions --\n    ------------------------------\n@@ -612,6 +671,38 @@ package body Restrict is\n       end if;\n    end Set_Restriction;\n \n+   -----------------------------------\n+   -- Set_Restriction_No_Dependence --\n+   -----------------------------------\n+\n+   procedure Set_Restriction_No_Dependence\n+     (Unit : Node_Id;\n+      Warn : Boolean)\n+   is\n+   begin\n+      --  Loop to check for duplicate entry\n+\n+      for J in No_Dependence.First .. No_Dependence.Last loop\n+\n+         --  Case of entry already in table\n+\n+         if Same_Unit (Unit, No_Dependence.Table (J).Unit) then\n+\n+            --  Error has precedence over warning\n+\n+            if not Warn then\n+               No_Dependence.Table (J).Warn := False;\n+            end if;\n+\n+            return;\n+         end if;\n+      end loop;\n+\n+      --  Entry is in table\n+\n+      No_Dependence.Append ((Unit, Warn));\n+   end Set_Restriction_No_Dependence;\n+\n    ----------------------------------\n    -- Suppress_Restriction_Message --\n    ----------------------------------"}, {"sha": "b14f4a9468aa7add90b939714e3817c0ce35aa1e", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -27,6 +27,7 @@\n --  This package deals with the implementation of the Restrictions pragma\n \n with Rident; use Rident;\n+with Table;\n with Types;  use Types;\n with Uintp;  use Uintp;\n \n@@ -132,6 +133,33 @@ package Restrict is\n       No_Elaboration_Code                => True,\n       others                             => False);\n \n+   --  The following table records entries made by Restrictions pragmas\n+   --  that specify a parameter for No_Dependence. Each such pragma makes\n+   --  an entry in this table.\n+\n+   --  Note: we have chosen to implement this restriction in the \"syntactic\"\n+   --  form, where we do not check that the named package is a language defined\n+   --  package, but instead we allow arbitrary package names. The discussion of\n+   --  this issue is not complete in the ARG, but the sense seems to be leaning\n+   --  in this direction, which makes more sense to us, since it is much more\n+   --  useful, and much easier to implement.\n+\n+   type ND_Entry is record\n+      Unit : Node_Id;\n+      --  The unit parameter from the No_Dependence pragma\n+\n+      Warn : Boolean;\n+      --  True if from Restriction_Warnings, False if from Restrictions\n+   end record;\n+\n+   package No_Dependence is new Table.Table (\n+     Table_Component_Type => ND_Entry,\n+     Table_Index_Type     => Int,\n+     Table_Low_Bound      => 0,\n+     Table_Initial        => 200,\n+     Table_Increment      => 200,\n+     Table_Name           => \"Name_No_Dependence\");\n+\n    -----------------\n    -- Subprograms --\n    -----------------\n@@ -162,6 +190,11 @@ package Restrict is\n    --  violation. If the exact count is not known, V is left at its\n    --  default value of -1 which indicates an unknown count.\n \n+   procedure Check_Restriction_No_Dependence (U : Node_Id; Err : Node_Id);\n+   --  Called when a dependence on a unit is created (either implicitly, or by\n+   --  an explicit WITH clause). U is a node for the unit involved, and Err\n+   --  is the node to which an error will be attached if necessary.\n+\n    procedure Check_Elaboration_Code_Allowed (N : Node_Id);\n    --  Tests to see if elaboration code is allowed by the current restrictions\n    --  settings. This function is called by Gigi when it needs to define\n@@ -241,6 +274,12 @@ package Restrict is\n    --  Similar to the above, except that this is used for the case of a\n    --  parameter restriction, and the corresponding value V is given.\n \n+   procedure Set_Restriction_No_Dependence\n+     (Unit : Node_Id;\n+      Warn : Boolean);\n+   --  Sets given No_Dependence restriction in table if not there already.\n+   --  Warn is True if from Restriction_Warnings, False if from Restrictions.\n+\n    function Tasking_Allowed return Boolean;\n    pragma Inline (Tasking_Allowed);\n    --  Tests to see if tasking operations are allowed by the current"}, {"sha": "edf3a38155a2cf91a60567582555242e01fec2f9", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -40,6 +40,7 @@ with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Output;   use Output;\n with Opt;      use Opt;\n+with Restrict; use Restrict;\n with Sem;      use Sem;\n with Sem_Ch7;  use Sem_Ch7;\n with Sem_Util; use Sem_Util;\n@@ -1007,6 +1008,7 @@ package body Rtsfind is\n \n             Mark_Rewrite_Insertion (Withn);\n             Append (Withn, Context_Items (Cunit (Current_Sem_Unit)));\n+            Check_Restriction_No_Dependence (Name (Withn), Current_Error_Node);\n          end;\n       end if;\n "}, {"sha": "baf37b776a238b7a58b417ef992e9c198cba5dc1", "filename": "gcc/ada/s-atacco.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fs-atacco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fs-atacco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atacco.ads?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -46,7 +46,12 @@ pragma Preelaborate (Address_To_Access_Conversions);\n       \"Object is unconstrained array type\" & ASCII.LF &\n       \"To_Pointer results may not have bounds\");\n \n-   xyz : Boolean := Object'Constrained;\n+   --  Capture constrained status, suppressing warnings, since this is\n+   --  an obsolescent feature to use Constrained in this way (RM J.4).\n+\n+   pragma Warnings (Off);\n+   Xyz : Boolean := Object'Constrained;\n+   pragma Warnings (On);\n \n    type Object_Pointer is access all Object;\n    for Object_Pointer'Size use Standard'Address_Size;"}, {"sha": "f64ab2772d577df7ab7e439f1e13f59c31f1aa09", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -116,6 +116,7 @@ package System.Rident is\n       No_Implementation_Pragmas,               -- GNAT\n       No_Implementation_Restrictions,          -- GNAT\n       No_Elaboration_Code,                     -- GNAT\n+      No_Obsolescent_Features,                 -- Ada 2005 AI-368\n \n       --  The following cases require a parameter value\n \n@@ -166,7 +167,7 @@ package System.Rident is\n    --  All restrictions (excluding only Not_A_Restriction_Id)\n \n    subtype All_Boolean_Restrictions is Restriction_Id range\n-     Simple_Barriers .. No_Elaboration_Code;\n+     Simple_Barriers .. No_Obsolescent_Features;\n    --  All restrictions which do not take a parameter\n \n    subtype Partition_Boolean_Restrictions is All_Boolean_Restrictions range\n@@ -177,7 +178,7 @@ package System.Rident is\n    --  case of Boolean restrictions.\n \n    subtype Cunit_Boolean_Restrictions is All_Boolean_Restrictions range\n-     Immediate_Reclamation .. No_Elaboration_Code;\n+     Immediate_Reclamation .. No_Obsolescent_Features;\n    --  Boolean restrictions that are not checked for partition consistency\n    --  and that thus apply only to the current unit. Note that for these\n    --  restrictions, the compiler does not apply restrictions found in"}, {"sha": "a60d28e1fe8d63fd316f7a9642bb7bce83b7ded1", "filename": "gcc/ada/scn.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fscn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fscn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -28,6 +28,8 @@ with Atree;    use Atree;\n with Csets;    use Csets;\n with Namet;    use Namet;\n with Opt;      use Opt;\n+with Restrict; use Restrict;\n+with Rident;   use Rident;\n with Scans;    use Scans;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n@@ -321,6 +323,20 @@ package body Scn is\n       end loop;\n    end Initialize_Scanner;\n \n+   -----------------------\n+   -- Obsolescent_Check --\n+   -----------------------\n+\n+   procedure Obsolescent_Check (S : Source_Ptr) is\n+   begin\n+      --  This is a pain in the neck case, since we normally need a node to\n+      --  call Check_Restrictions, and all we have is a source pointer. The\n+      --  easiest thing is to construct a dummy node. A bit kludgy, but this\n+      --  is a marginal case. It's not worth trying to do things more cleanly.\n+\n+      Check_Restriction (No_Obsolescent_Features, New_Node (N_Empty, S));\n+   end Obsolescent_Check;\n+\n    ------------------------------\n    -- Scan_Reserved_Identifier --\n    ------------------------------"}, {"sha": "d2a80f1bfa0bc6462b2a25190542d0d327938c59", "filename": "gcc/ada/scn.ads", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fscn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fscn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.ads?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,6 +48,10 @@ package Scn is\n    --  Determines the casing style of the current token, which is\n    --  either a keyword or an identifier. See also package Casing.\n \n+   procedure Obsolescent_Check (S : Source_Ptr);\n+   --  Called to handle pragma restrictions check for usage of obsolescent\n+   --  character replacements during the scan.\n+\n    procedure Post_Scan;\n    pragma Inline (Post_Scan);\n    --  Create nodes for tokens: Char_Literal, Identifier, Real_Literal,\n@@ -69,12 +73,13 @@ package Scn is\n    --  generic package Scng with routines appropriate to the compiler\n \n    package Scanner is new Scng\n-     (Post_Scan    => Post_Scan,\n-      Error_Msg    => Error_Msg,\n-      Error_Msg_S  => Error_Msg_S,\n-      Error_Msg_SC => Error_Msg_SC,\n-      Error_Msg_SP => Error_Msg_SP,\n-      Style        => Style.Style_Inst);\n+     (Post_Scan         => Post_Scan,\n+      Error_Msg         => Error_Msg,\n+      Error_Msg_S       => Error_Msg_S,\n+      Error_Msg_SC      => Error_Msg_SC,\n+      Error_Msg_SP      => Error_Msg_SP,\n+      Obsolescent_Check => Obsolescent_Check,\n+      Style             => Style.Style_Inst);\n \n    procedure Scan renames Scanner.Scan;\n    --  Scan scans out the next token, and advances the scan state accordingly"}, {"sha": "486fbffe45d3af2f3dcb7d15ff0a433816e9bf38", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -226,7 +226,7 @@ package body Scng is\n \n       Initialize_Checksum;\n \n-      --  Do not call Scan, otherwise the License stuff does not work in Scn.\n+      --  Do not call Scan, otherwise the License stuff does not work in Scn\n \n    end Initialize_Scanner;\n \n@@ -550,13 +550,18 @@ package body Scng is\n                          or else\n                        Source (Scan_Ptr + 1) in 'a' .. 'z'))\n          then\n-            if C = ':' and then Warn_On_Obsolescent_Feature then\n-               Error_Msg_S\n-                 (\"use of \"\":\"\" is an obsolescent feature ('R'M 'J.2(3))?\");\n-               Error_Msg_S\n-                 (\"\\use \"\"'#\"\" instead?\");\n+            if C = ':' then\n+               Obsolescent_Check (Scan_Ptr);\n+\n+               if Warn_On_Obsolescent_Feature then\n+                  Error_Msg_S\n+                    (\"use of \"\":\"\" is an obsolescent feature ('R'M 'J.2(3))?\");\n+                  Error_Msg_S\n+                    (\"\\use \"\"'#\"\" instead?\");\n+               end if;\n             end if;\n \n+\n             Accumulate_Checksum (C);\n             Base_Char := C;\n             UI_Base := UI_Int_Value;\n@@ -1498,6 +1503,8 @@ package body Scng is\n          --  Percent starting a string literal\n \n          when '%' =>\n+            Obsolescent_Check (Token_Ptr);\n+\n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_S\n                  (\"use of \"\"'%\"\" is an obsolescent feature ('R'M 'J.2(4))?\");\n@@ -1695,6 +1702,7 @@ package body Scng is\n \n          when '!' => Exclamation_Case : begin\n             Accumulate_Checksum ('!');\n+            Obsolescent_Check (Token_Ptr);\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_S\n@@ -2043,7 +2051,11 @@ package body Scng is\n                      --  in particular allows bracket or other notation\n                      --  to be used for upper half letters.\n \n-                     if Identifier_Character_Set /= 'w' then\n+                     --  Wide characters are always allowed in Ada 2005\n+\n+                     if Identifier_Character_Set /= 'w'\n+                       and then Ada_Version < Ada_05\n+                     then\n                         Error_Msg\n                           (\"wide character not allowed in identifier\", Sptr);\n                      end if;"}, {"sha": "dbe3261848c071dd6aef1b83bc1012fc87607b32", "filename": "gcc/ada/scng.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fscng.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fscng.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.ads?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -50,6 +50,10 @@ generic\n    with procedure Error_Msg_SP (Msg : String);\n    --  Output a message at the start of the previous token\n \n+   with procedure Obsolescent_Check (S : Source_Ptr);\n+   --  Called when one of the obsolescent character replacements is\n+   --  used with S pointing to the character in question.\n+\n    with package Style is new Styleg\n      (Error_Msg, Error_Msg_S, Error_Msg_SC, Error_Msg_SP);\n    --  Instantiation of Styleg with the same error reporting routines"}, {"sha": "553fb7138a159fd48126340a65c41d70fe6524f5", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 56, "deletions": 9, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -259,6 +259,9 @@ package body Sem_Attr is\n       procedure Check_Library_Unit;\n       --  Verify that prefix of attribute N is a library unit\n \n+      procedure Check_Modular_Integer_Type;\n+      --  Verify that prefix of attribute N is a modular integer type\n+\n       procedure Check_Not_Incomplete_Type;\n       --  Check that P (the prefix of the attribute) is not an incomplete\n       --  type or a private type for which no full view has been given.\n@@ -1074,6 +1077,20 @@ package body Sem_Attr is\n          end if;\n       end Check_Library_Unit;\n \n+      --------------------------------\n+      -- Check_Modular_Integer_Type --\n+      --------------------------------\n+\n+      procedure Check_Modular_Integer_Type is\n+      begin\n+         Check_Type;\n+\n+         if not Is_Modular_Integer_Type (P_Type) then\n+            Error_Attr\n+              (\"prefix of % attribute must be modular integer type\", P);\n+         end if;\n+      end Check_Modular_Integer_Type;\n+\n       -------------------------------\n       -- Check_Not_Incomplete_Type --\n       -------------------------------\n@@ -2197,6 +2214,13 @@ package body Sem_Attr is\n          --  Case from RM J.4(2) of constrained applied to private type\n \n          if Is_Entity_Name (P) and then Is_Type (Entity (P)) then\n+            Check_Restriction (No_Obsolescent_Features, N);\n+\n+            if Warn_On_Obsolescent_Feature then\n+               Error_Msg_N\n+                 (\"constrained for private type is an \" &\n+                  \"obsolescent feature ('R'M 'J.4)?\", N);\n+            end if;\n \n             --  If we are within an instance, the attribute must be legal\n             --  because it was valid in the generic unit. Ditto if this is\n@@ -2897,6 +2921,21 @@ package body Sem_Attr is\n          Resolve (E2, P_Base_Type);\n          Set_Etype (N, P_Base_Type);\n \n+      ---------\n+      -- Mod --\n+      ---------\n+\n+      when Attribute_Mod =>\n+\n+         --  Note: this attribute is only allowed in Ada 2005 mode, but\n+         --  we do not need to test that here, since Mod is only recognized\n+         --  as an attribute name in Ada 2005 mode during the parse.\n+\n+         Check_E1;\n+         Check_Modular_Integer_Type;\n+         Resolve (E1, Any_Integer);\n+         Set_Etype (N, P_Base_Type);\n+\n       -----------\n       -- Model --\n       -----------\n@@ -2944,12 +2983,7 @@ package body Sem_Attr is\n \n       when Attribute_Modulus =>\n          Check_E0;\n-         Check_Type;\n-\n-         if not Is_Modular_Integer_Type (P_Type) then\n-            Error_Attr (\"prefix of % attribute must be modular type\", P);\n-         end if;\n-\n+         Check_Modular_Integer_Type;\n          Set_Etype (N, Universal_Integer);\n \n       --------------------\n@@ -5412,10 +5446,19 @@ package body Sem_Attr is\n             Fold_Ureal\n               (N, UR_Min (Expr_Value_R (E1), Expr_Value_R (E2)), Static);\n          else\n-            Fold_Uint (N, UI_Min (Expr_Value (E1), Expr_Value (E2)), Static);\n+            Fold_Uint\n+              (N, UI_Min (Expr_Value (E1), Expr_Value (E2)), Static);\n          end if;\n       end Min;\n \n+      ---------\n+      -- Mod --\n+      ---------\n+\n+      when Attribute_Mod =>\n+         Fold_Uint\n+           (N, UI_Mod (Expr_Value (E1), Modulus (P_Base_Type)), Static);\n+\n       -----------\n       -- Model --\n       -----------\n@@ -6678,14 +6721,18 @@ package body Sem_Attr is\n \n             elsif Is_Overloaded (P) then\n \n-               --  Use the designated type of the context  to disambiguate\n+               --  Use the designated type of the context to disambiguate\n+               --  Note that this was not strictly conformant to Ada 95,\n+               --  but was the implementation adopted by most Ada 95 compilers.\n+               --  The use of the context type to resolve an Access attribute\n+               --  reference is now mandated in AI-235 for Ada 2005.\n \n                declare\n                   Index : Interp_Index;\n                   It    : Interp;\n+\n                begin\n                   Get_First_Interp (P, Index, It);\n-\n                   while Present (It.Typ) loop\n                      if Covers (Designated_Type (Typ), It.Typ) then\n                         Resolve (P, It.Typ);"}, {"sha": "5d9e5caa34d243c289f15f305be1222ff2e00461", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -1668,6 +1668,7 @@ package body Sem_Ch10 is\n       end if;\n \n       U := Unit (Library_Unit (N));\n+      Check_Restriction_No_Dependence (Name (N), N);\n       Intunit := Is_Internal_File_Name (Unit_File_Name (Current_Sem_Unit));\n \n       --  Following checks are skipped for dummy packages (those supplied\n@@ -3628,6 +3629,77 @@ package body Sem_Ch10 is\n       if Ekind (Uname) = E_Package then\n          Set_From_With_Type (Uname, False);\n       end if;\n+\n+      --  Ada 2005 (AI-377): it is illegal for a with_clause to name a child\n+      --  unit if there is a visible homograph for it declared in the same\n+      --  declarative region. This pathological case can only arise when an\n+      --  instance I1 of a generic unit G1 has an explicit child unit I1.G2,\n+      --  G1 has a generic child also named G2, and the context includes with_\n+      --  clauses for both I1.G2 and for G1.G2, making an implicit declaration\n+      --  of I1.G2 visible as well.\n+\n+      if Is_Child_Unit (Uname)\n+        and then Is_Visible_Child_Unit (Uname)\n+        and then Ada_Version >= Ada_05\n+      then\n+         declare\n+            Decl1 : constant Node_Id  := Unit_Declaration_Node (P);\n+            Decl2 : Node_Id;\n+            P2    : Entity_Id;\n+            U2    : Entity_Id;\n+\n+         begin\n+            U2 := Homonym (Uname);\n+            while Present (U2) loop\n+               P2 := Scope (U2);\n+               Decl2  := Unit_Declaration_Node (P2);\n+\n+               if Is_Child_Unit (U2)\n+                 and then Is_Visible_Child_Unit (U2)\n+               then\n+                  if Is_Generic_Instance (P)\n+                    and then Nkind (Decl1) = N_Package_Declaration\n+                    and then Generic_Parent (Specification (Decl1)) = P2\n+                  then\n+                     Error_Msg_N (\"illegal with_clause\", With_Clause);\n+                     Error_Msg_N\n+                       (\"\\child unit has visible homograph\" &\n+                           \" ('R'M 8.3(26), 10.1.1(19))\",\n+                         With_Clause);\n+                     exit;\n+\n+                  elsif Is_Generic_Instance (P2)\n+                    and then Nkind (Decl2) = N_Package_Declaration\n+                    and then Generic_Parent (Specification (Decl2)) = P\n+                  then\n+                     --  With_clause for child unit of instance appears before\n+                     --  in the context. We want to place the error message on\n+                     --  it, not on the generic child unit itself.\n+\n+                     declare\n+                        Prev_Clause : Node_Id;\n+\n+                     begin\n+                        Prev_Clause := First (List_Containing (With_Clause));\n+                        while Entity (Name (Prev_Clause)) /= U2 loop\n+                           Next (Prev_Clause);\n+                        end loop;\n+\n+                        pragma Assert (Present (Prev_Clause));\n+                        Error_Msg_N (\"illegal with_clause\", Prev_Clause);\n+                        Error_Msg_N\n+                          (\"\\child unit has visible homograph\" &\n+                              \" ('R'M 8.3(26), 10.1.1(19))\",\n+                            Prev_Clause);\n+                        exit;\n+                     end;\n+                  end if;\n+               end if;\n+\n+               U2 := Homonym (U2);\n+            end loop;\n+         end;\n+      end if;\n    end Install_Withed_Unit;\n \n    -------------------"}, {"sha": "bd3faa4c8c223a15b33e38ffd0f0816ae929e99b", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -240,14 +240,16 @@ package body Sem_Ch11 is\n \n                   else\n                      if Present (Renamed_Entity (Entity (Id))) then\n-                        if Entity (Id) = Standard_Numeric_Error\n-                          and then Warn_On_Obsolescent_Feature\n-                        then\n-                           Error_Msg_N\n-                             (\"Numeric_Error is an \" &\n-                              \"obsolescent feature ('R'M 'J.6(1))?\", Id);\n-                           Error_Msg_N\n-                             (\"\\use Constraint_Error instead?\", Id);\n+                        if Entity (Id) = Standard_Numeric_Error then\n+                           Check_Restriction (No_Obsolescent_Features, Id);\n+\n+                           if Warn_On_Obsolescent_Feature then\n+                              Error_Msg_N\n+                                (\"Numeric_Error is an \" &\n+                                 \"obsolescent feature ('R'M 'J.6(1))?\", Id);\n+                              Error_Msg_N\n+                                (\"\\use Constraint_Error instead?\", Id);\n+                           end if;\n                         end if;\n                      end if;\n "}, {"sha": "e620044b762f36f83bcf604161eec0af3886884d", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -1,5 +1,5 @@\n ------------------------------------------------------------------------------\n---                                                                          --\n+--                   c                                                       --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n --                             S E M _ C H 1 3                              --\n@@ -34,6 +34,8 @@ with Lib;      use Lib;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n+with Restrict; use Restrict;\n+with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n with Sem_Ch8;  use Sem_Ch8;\n@@ -203,6 +205,8 @@ package body Sem_Ch13 is\n \n    procedure Analyze_At_Clause (N : Node_Id) is\n    begin\n+      Check_Restriction (No_Obsolescent_Features, N);\n+\n       if Warn_On_Obsolescent_Feature then\n          Error_Msg_N\n            (\"at clause is an obsolescent feature ('R'M 'J.7(2))?\", N);\n@@ -355,6 +359,8 @@ package body Sem_Ch13 is\n                     (\"\\?only one task can be declared of this type\", N);\n                end if;\n \n+               Check_Restriction (No_Obsolescent_Features, N);\n+\n                if Warn_On_Obsolescent_Feature then\n                   Error_Msg_N\n                     (\"attaching interrupt to task entry is an \" &\n@@ -1187,6 +1193,8 @@ package body Sem_Ch13 is\n \n          begin\n             if Is_Task_Type (U_Ent) then\n+               Check_Restriction (No_Obsolescent_Features, N);\n+\n                if Warn_On_Obsolescent_Feature then\n                   Error_Msg_N\n                     (\"storage size clause for task is an \" &\n@@ -1955,6 +1963,8 @@ package body Sem_Ch13 is\n             pragma Warnings (Off, Mod_Val);\n \n          begin\n+            Check_Restriction (No_Obsolescent_Features, Mod_Clause (N));\n+\n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n                  (\"mod clause is an obsolescent feature ('R'M 'J.8)?\", N);"}, {"sha": "65a0ae9459169122aa7d7374131a252671bc6a05", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -8188,6 +8188,8 @@ package body Sem_Ch3 is\n       --  Digits constraint present\n \n       if Nkind (C) = N_Digits_Constraint then\n+         Check_Restriction (No_Obsolescent_Features, C);\n+\n          if Warn_On_Obsolescent_Feature then\n             Error_Msg_N\n               (\"subtype digits constraint is an \" &\n@@ -8389,6 +8391,8 @@ package body Sem_Ch3 is\n       --  Delta constraint present\n \n       if Nkind (C) = N_Delta_Constraint then\n+         Check_Restriction (No_Obsolescent_Features, C);\n+\n          if Warn_On_Obsolescent_Feature then\n             Error_Msg_S\n               (\"subtype delta constraint is an \" &"}, {"sha": "6ece74120d06c427e1ca501795b5fab0b87aeaf2", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -3506,17 +3506,44 @@ package body Sem_Prag is\n       -- Process_Restrictions_Or_Restriction_Warnings --\n       --------------------------------------------------\n \n+      --  Note: some of the simple identifier cases were handled in par-prag,\n+      --  but it is harmless (and more straightforward) to simply handle all\n+      --  cases here, even if it means we repeat a bit of work in some cases.\n+\n       procedure Process_Restrictions_Or_Restriction_Warnings is\n          Arg   : Node_Id;\n          R_Id  : Restriction_Id;\n          Id    : Name_Id;\n          Expr  : Node_Id;\n          Val   : Uint;\n \n+         procedure Check_Unit_Name (N : Node_Id);\n+         --  Checks unit name parameter for No_Dependence. Returns if it has\n+         --  an appropriate form, otherwise raises pragma argument error.\n+\n          procedure Set_Warning (R : All_Restrictions);\n          --  If this is a Restriction_Warnings pragma, set warning flag,\n          --  otherwise reset the flag.\n \n+         ---------------------\n+         -- Check_Unit_Name --\n+         ---------------------\n+\n+         procedure Check_Unit_Name (N : Node_Id) is\n+         begin\n+            if Nkind (N) = N_Selected_Component then\n+               Check_Unit_Name (Prefix (N));\n+               Check_Unit_Name (Selector_Name (N));\n+\n+            elsif Nkind (N) = N_Identifier then\n+               return;\n+\n+            else\n+               Error_Pragma_Arg\n+                 (\"wrong form for unit name for No_Dependence\", N);\n+            end if;\n+         end Check_Unit_Name;\n+\n          -----------------\n          -- Set_Warning --\n          -----------------\n@@ -3577,7 +3604,13 @@ package body Sem_Prag is\n                   Scope_Suppress := (others => True);\n                end if;\n \n-            --  Case of restriction identifier present\n+            --  Case of No_Dependence => unit-name. Note that the parser\n+            --  already made the necessary entry in the No_Dependence table.\n+\n+            elsif Id = Name_No_Dependence then\n+               Check_Unit_Name (Expr);\n+\n+            --  All other cases of restriction identifier present\n \n             else\n                R_Id := Get_Restriction_Id (Process_Restriction_Synonyms (Arg));\n@@ -8543,6 +8576,7 @@ package body Sem_Prag is\n             end if;\n \n             if Present (External) then\n+               Check_Arg_Is_External_Name (External);\n                Check_Too_Long (External);\n             end if;\n "}, {"sha": "bdb73ce159545232a7e5aa5c3adaec117888f3a4", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -356,15 +356,16 @@ package body Snames is\n      \"name#\" &\n      \"nca#\" &\n      \"no#\" &\n-     \"on#\" &\n-     \"parameter_types#\" &\n-     \"reference#\" &\n+     \"no_dependence#\" &\n      \"no_dynamic_attachment#\" &\n      \"no_dynamic_interrupts#\" &\n      \"no_requeue#\" &\n      \"no_requeue_statements#\" &\n      \"no_task_attributes#\" &\n      \"no_task_attributes_package#\" &\n+     \"on#\" &\n+     \"parameter_types#\" &\n+     \"reference#\" &\n      \"restricted#\" &\n      \"result_mechanism#\" &\n      \"result_type#\" &\n@@ -449,6 +450,7 @@ package body Snames is\n      \"max_size_in_storage_elements#\" &\n      \"maximum_alignment#\" &\n      \"mechanism_code#\" &\n+     \"mod#\" &\n      \"model_emin#\" &\n      \"model_epsilon#\" &\n      \"model_mantissa#\" &\n@@ -569,7 +571,6 @@ package body Snames is\n      \"is#\" &\n      \"limited#\" &\n      \"loop#\" &\n-     \"mod#\" &\n      \"new#\" &\n      \"not#\" &\n      \"null#\" &"}, {"sha": "5d4800752d3765f6a8bfa30eceeedc6c84844a7f", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 359, "deletions": 356, "changes": 715, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -559,43 +559,44 @@ package Snames is\n    Name_Name                           : constant Name_Id := N + 296;\n    Name_NCA                            : constant Name_Id := N + 297;\n    Name_No                             : constant Name_Id := N + 298;\n-   Name_On                             : constant Name_Id := N + 299;\n-   Name_Parameter_Types                : constant Name_Id := N + 300;\n-   Name_Reference                      : constant Name_Id := N + 301;\n-   Name_No_Dynamic_Attachment          : constant Name_Id := N + 302;\n-   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 303;\n-   Name_No_Requeue                     : constant Name_Id := N + 304;\n-   Name_No_Requeue_Statements          : constant Name_Id := N + 305;\n-   Name_No_Task_Attributes             : constant Name_Id := N + 306;\n-   Name_No_Task_Attributes_Package     : constant Name_Id := N + 307;\n-   Name_Restricted                     : constant Name_Id := N + 308;\n-   Name_Result_Mechanism               : constant Name_Id := N + 309;\n-   Name_Result_Type                    : constant Name_Id := N + 310;\n-   Name_Runtime                        : constant Name_Id := N + 311;\n-   Name_SB                             : constant Name_Id := N + 312;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + 313;\n-   Name_Section                        : constant Name_Id := N + 314;\n-   Name_Semaphore                      : constant Name_Id := N + 315;\n-   Name_Simple_Barriers                : constant Name_Id := N + 316;\n-   Name_Spec_File_Name                 : constant Name_Id := N + 317;\n-   Name_Static                         : constant Name_Id := N + 318;\n-   Name_Stack_Size                     : constant Name_Id := N + 319;\n-   Name_Subunit_File_Name              : constant Name_Id := N + 320;\n-   Name_Task_Stack_Size_Default        : constant Name_Id := N + 321;\n-   Name_Task_Type                      : constant Name_Id := N + 322;\n-   Name_Time_Slicing_Enabled           : constant Name_Id := N + 323;\n-   Name_Top_Guard                      : constant Name_Id := N + 324;\n-   Name_UBA                            : constant Name_Id := N + 325;\n-   Name_UBS                            : constant Name_Id := N + 326;\n-   Name_UBSB                           : constant Name_Id := N + 327;\n-   Name_Unit_Name                      : constant Name_Id := N + 328;\n-   Name_Unknown                        : constant Name_Id := N + 329;\n-   Name_Unrestricted                   : constant Name_Id := N + 330;\n-   Name_Uppercase                      : constant Name_Id := N + 331;\n-   Name_User                           : constant Name_Id := N + 332;\n-   Name_VAX_Float                      : constant Name_Id := N + 333;\n-   Name_VMS                            : constant Name_Id := N + 334;\n-   Name_Working_Storage                : constant Name_Id := N + 335;\n+   Name_No_Dependence                  : constant Name_Id := N + 299;\n+   Name_No_Dynamic_Attachment          : constant Name_Id := N + 300;\n+   Name_No_Dynamic_Interrupts          : constant Name_Id := N + 301;\n+   Name_No_Requeue                     : constant Name_Id := N + 302;\n+   Name_No_Requeue_Statements          : constant Name_Id := N + 303;\n+   Name_No_Task_Attributes             : constant Name_Id := N + 304;\n+   Name_No_Task_Attributes_Package     : constant Name_Id := N + 305;\n+   Name_On                             : constant Name_Id := N + 306;\n+   Name_Parameter_Types                : constant Name_Id := N + 307;\n+   Name_Reference                      : constant Name_Id := N + 308;\n+   Name_Restricted                     : constant Name_Id := N + 309;\n+   Name_Result_Mechanism               : constant Name_Id := N + 310;\n+   Name_Result_Type                    : constant Name_Id := N + 311;\n+   Name_Runtime                        : constant Name_Id := N + 312;\n+   Name_SB                             : constant Name_Id := N + 313;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + 314;\n+   Name_Section                        : constant Name_Id := N + 315;\n+   Name_Semaphore                      : constant Name_Id := N + 316;\n+   Name_Simple_Barriers                : constant Name_Id := N + 317;\n+   Name_Spec_File_Name                 : constant Name_Id := N + 318;\n+   Name_Static                         : constant Name_Id := N + 319;\n+   Name_Stack_Size                     : constant Name_Id := N + 320;\n+   Name_Subunit_File_Name              : constant Name_Id := N + 321;\n+   Name_Task_Stack_Size_Default        : constant Name_Id := N + 322;\n+   Name_Task_Type                      : constant Name_Id := N + 323;\n+   Name_Time_Slicing_Enabled           : constant Name_Id := N + 324;\n+   Name_Top_Guard                      : constant Name_Id := N + 325;\n+   Name_UBA                            : constant Name_Id := N + 326;\n+   Name_UBS                            : constant Name_Id := N + 327;\n+   Name_UBSB                           : constant Name_Id := N + 328;\n+   Name_Unit_Name                      : constant Name_Id := N + 329;\n+   Name_Unknown                        : constant Name_Id := N + 330;\n+   Name_Unrestricted                   : constant Name_Id := N + 331;\n+   Name_Uppercase                      : constant Name_Id := N + 332;\n+   Name_User                           : constant Name_Id := N + 333;\n+   Name_VAX_Float                      : constant Name_Id := N + 334;\n+   Name_VMS                            : constant Name_Id := N + 335;\n+   Name_Working_Storage                : constant Name_Id := N + 336;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n@@ -609,387 +610,388 @@ package Snames is\n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   First_Attribute_Name                : constant Name_Id := N + 336;\n-   Name_Abort_Signal                   : constant Name_Id := N + 336;  -- GNAT\n-   Name_Access                         : constant Name_Id := N + 337;\n-   Name_Address                        : constant Name_Id := N + 338;\n-   Name_Address_Size                   : constant Name_Id := N + 339;  -- GNAT\n-   Name_Aft                            : constant Name_Id := N + 340;\n-   Name_Alignment                      : constant Name_Id := N + 341;\n-   Name_Asm_Input                      : constant Name_Id := N + 342;  -- GNAT\n-   Name_Asm_Output                     : constant Name_Id := N + 343;  -- GNAT\n-   Name_AST_Entry                      : constant Name_Id := N + 344;  -- VMS\n-   Name_Bit                            : constant Name_Id := N + 345;  -- GNAT\n-   Name_Bit_Order                      : constant Name_Id := N + 346;\n-   Name_Bit_Position                   : constant Name_Id := N + 347;  -- GNAT\n-   Name_Body_Version                   : constant Name_Id := N + 348;\n-   Name_Callable                       : constant Name_Id := N + 349;\n-   Name_Caller                         : constant Name_Id := N + 350;\n-   Name_Code_Address                   : constant Name_Id := N + 351;  -- GNAT\n-   Name_Component_Size                 : constant Name_Id := N + 352;\n-   Name_Compose                        : constant Name_Id := N + 353;\n-   Name_Constrained                    : constant Name_Id := N + 354;\n-   Name_Count                          : constant Name_Id := N + 355;\n-   Name_Default_Bit_Order              : constant Name_Id := N + 356; -- GNAT\n-   Name_Definite                       : constant Name_Id := N + 357;\n-   Name_Delta                          : constant Name_Id := N + 358;\n-   Name_Denorm                         : constant Name_Id := N + 359;\n-   Name_Digits                         : constant Name_Id := N + 360;\n-   Name_Elaborated                     : constant Name_Id := N + 361; -- GNAT\n-   Name_Emax                           : constant Name_Id := N + 362; -- Ada 83\n-   Name_Enum_Rep                       : constant Name_Id := N + 363; -- GNAT\n-   Name_Epsilon                        : constant Name_Id := N + 364; -- Ada 83\n-   Name_Exponent                       : constant Name_Id := N + 365;\n-   Name_External_Tag                   : constant Name_Id := N + 366;\n-   Name_First                          : constant Name_Id := N + 367;\n-   Name_First_Bit                      : constant Name_Id := N + 368;\n-   Name_Fixed_Value                    : constant Name_Id := N + 369; -- GNAT\n-   Name_Fore                           : constant Name_Id := N + 370;\n-   Name_Has_Access_Values              : constant Name_Id := N + 371; -- GNAT\n-   Name_Has_Discriminants              : constant Name_Id := N + 372; -- GNAT\n-   Name_Identity                       : constant Name_Id := N + 373;\n-   Name_Img                            : constant Name_Id := N + 374; -- GNAT\n-   Name_Integer_Value                  : constant Name_Id := N + 375; -- GNAT\n-   Name_Large                          : constant Name_Id := N + 376; -- Ada 83\n-   Name_Last                           : constant Name_Id := N + 377;\n-   Name_Last_Bit                       : constant Name_Id := N + 378;\n-   Name_Leading_Part                   : constant Name_Id := N + 379;\n-   Name_Length                         : constant Name_Id := N + 380;\n-   Name_Machine_Emax                   : constant Name_Id := N + 381;\n-   Name_Machine_Emin                   : constant Name_Id := N + 382;\n-   Name_Machine_Mantissa               : constant Name_Id := N + 383;\n-   Name_Machine_Overflows              : constant Name_Id := N + 384;\n-   Name_Machine_Radix                  : constant Name_Id := N + 385;\n-   Name_Machine_Rounds                 : constant Name_Id := N + 386;\n-   Name_Machine_Size                   : constant Name_Id := N + 387; -- GNAT\n-   Name_Mantissa                       : constant Name_Id := N + 388; -- Ada 83\n-   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 389;\n-   Name_Maximum_Alignment              : constant Name_Id := N + 390; -- GNAT\n-   Name_Mechanism_Code                 : constant Name_Id := N + 391; -- GNAT\n-   Name_Model_Emin                     : constant Name_Id := N + 392;\n-   Name_Model_Epsilon                  : constant Name_Id := N + 393;\n-   Name_Model_Mantissa                 : constant Name_Id := N + 394;\n-   Name_Model_Small                    : constant Name_Id := N + 395;\n-   Name_Modulus                        : constant Name_Id := N + 396;\n-   Name_Null_Parameter                 : constant Name_Id := N + 397; -- GNAT\n-   Name_Object_Size                    : constant Name_Id := N + 398; -- GNAT\n-   Name_Partition_ID                   : constant Name_Id := N + 399;\n-   Name_Passed_By_Reference            : constant Name_Id := N + 400; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + 401;\n-   Name_Pos                            : constant Name_Id := N + 402;\n-   Name_Position                       : constant Name_Id := N + 403;\n-   Name_Range                          : constant Name_Id := N + 404;\n-   Name_Range_Length                   : constant Name_Id := N + 405; -- GNAT\n-   Name_Round                          : constant Name_Id := N + 406;\n-   Name_Safe_Emax                      : constant Name_Id := N + 407; -- Ada 83\n-   Name_Safe_First                     : constant Name_Id := N + 408;\n-   Name_Safe_Large                     : constant Name_Id := N + 409; -- Ada 83\n-   Name_Safe_Last                      : constant Name_Id := N + 410;\n-   Name_Safe_Small                     : constant Name_Id := N + 411; -- Ada 83\n-   Name_Scale                          : constant Name_Id := N + 412;\n-   Name_Scaling                        : constant Name_Id := N + 413;\n-   Name_Signed_Zeros                   : constant Name_Id := N + 414;\n-   Name_Size                           : constant Name_Id := N + 415;\n-   Name_Small                          : constant Name_Id := N + 416;\n-   Name_Storage_Size                   : constant Name_Id := N + 417;\n-   Name_Storage_Unit                   : constant Name_Id := N + 418; -- GNAT\n-   Name_Tag                            : constant Name_Id := N + 419;\n-   Name_Target_Name                    : constant Name_Id := N + 420; -- GNAT\n-   Name_Terminated                     : constant Name_Id := N + 421;\n-   Name_To_Address                     : constant Name_Id := N + 422; -- GNAT\n-   Name_Type_Class                     : constant Name_Id := N + 423; -- GNAT\n-   Name_UET_Address                    : constant Name_Id := N + 424; -- GNAT\n-   Name_Unbiased_Rounding              : constant Name_Id := N + 425;\n-   Name_Unchecked_Access               : constant Name_Id := N + 426;\n-   Name_Unconstrained_Array            : constant Name_Id := N + 427;\n-   Name_Universal_Literal_String       : constant Name_Id := N + 428; -- GNAT\n-   Name_Unrestricted_Access            : constant Name_Id := N + 429; -- GNAT\n-   Name_VADS_Size                      : constant Name_Id := N + 430; -- GNAT\n-   Name_Val                            : constant Name_Id := N + 431;\n-   Name_Valid                          : constant Name_Id := N + 432;\n-   Name_Value_Size                     : constant Name_Id := N + 433; -- GNAT\n-   Name_Version                        : constant Name_Id := N + 434;\n-   Name_Wchar_T_Size                   : constant Name_Id := N + 435; -- GNAT\n-   Name_Wide_Width                     : constant Name_Id := N + 436;\n-   Name_Width                          : constant Name_Id := N + 437;\n-   Name_Word_Size                      : constant Name_Id := N + 438; -- GNAT\n+   First_Attribute_Name                : constant Name_Id := N + 337;\n+   Name_Abort_Signal                   : constant Name_Id := N + 337;  -- GNAT\n+   Name_Access                         : constant Name_Id := N + 338;\n+   Name_Address                        : constant Name_Id := N + 339;\n+   Name_Address_Size                   : constant Name_Id := N + 340;  -- GNAT\n+   Name_Aft                            : constant Name_Id := N + 341;\n+   Name_Alignment                      : constant Name_Id := N + 342;\n+   Name_Asm_Input                      : constant Name_Id := N + 343;  -- GNAT\n+   Name_Asm_Output                     : constant Name_Id := N + 344;  -- GNAT\n+   Name_AST_Entry                      : constant Name_Id := N + 345;  -- VMS\n+   Name_Bit                            : constant Name_Id := N + 346;  -- GNAT\n+   Name_Bit_Order                      : constant Name_Id := N + 347;\n+   Name_Bit_Position                   : constant Name_Id := N + 348;  -- GNAT\n+   Name_Body_Version                   : constant Name_Id := N + 349;\n+   Name_Callable                       : constant Name_Id := N + 350;\n+   Name_Caller                         : constant Name_Id := N + 351;\n+   Name_Code_Address                   : constant Name_Id := N + 352;  -- GNAT\n+   Name_Component_Size                 : constant Name_Id := N + 353;\n+   Name_Compose                        : constant Name_Id := N + 354;\n+   Name_Constrained                    : constant Name_Id := N + 355;\n+   Name_Count                          : constant Name_Id := N + 356;\n+   Name_Default_Bit_Order              : constant Name_Id := N + 357; -- GNAT\n+   Name_Definite                       : constant Name_Id := N + 358;\n+   Name_Delta                          : constant Name_Id := N + 359;\n+   Name_Denorm                         : constant Name_Id := N + 360;\n+   Name_Digits                         : constant Name_Id := N + 361;\n+   Name_Elaborated                     : constant Name_Id := N + 362; -- GNAT\n+   Name_Emax                           : constant Name_Id := N + 363; -- Ada 83\n+   Name_Enum_Rep                       : constant Name_Id := N + 364; -- GNAT\n+   Name_Epsilon                        : constant Name_Id := N + 365; -- Ada 83\n+   Name_Exponent                       : constant Name_Id := N + 366;\n+   Name_External_Tag                   : constant Name_Id := N + 367;\n+   Name_First                          : constant Name_Id := N + 368;\n+   Name_First_Bit                      : constant Name_Id := N + 369;\n+   Name_Fixed_Value                    : constant Name_Id := N + 370; -- GNAT\n+   Name_Fore                           : constant Name_Id := N + 371;\n+   Name_Has_Access_Values              : constant Name_Id := N + 372; -- GNAT\n+   Name_Has_Discriminants              : constant Name_Id := N + 373; -- GNAT\n+   Name_Identity                       : constant Name_Id := N + 374;\n+   Name_Img                            : constant Name_Id := N + 375; -- GNAT\n+   Name_Integer_Value                  : constant Name_Id := N + 376; -- GNAT\n+   Name_Large                          : constant Name_Id := N + 377; -- Ada 83\n+   Name_Last                           : constant Name_Id := N + 378;\n+   Name_Last_Bit                       : constant Name_Id := N + 379;\n+   Name_Leading_Part                   : constant Name_Id := N + 380;\n+   Name_Length                         : constant Name_Id := N + 381;\n+   Name_Machine_Emax                   : constant Name_Id := N + 382;\n+   Name_Machine_Emin                   : constant Name_Id := N + 383;\n+   Name_Machine_Mantissa               : constant Name_Id := N + 384;\n+   Name_Machine_Overflows              : constant Name_Id := N + 385;\n+   Name_Machine_Radix                  : constant Name_Id := N + 386;\n+   Name_Machine_Rounds                 : constant Name_Id := N + 387;\n+   Name_Machine_Size                   : constant Name_Id := N + 388; -- GNAT\n+   Name_Mantissa                       : constant Name_Id := N + 389; -- Ada 83\n+   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 390;\n+   Name_Maximum_Alignment              : constant Name_Id := N + 391; -- GNAT\n+   Name_Mechanism_Code                 : constant Name_Id := N + 392; -- GNAT\n+   Name_Mod                            : constant Name_Id := N + 393;\n+   Name_Model_Emin                     : constant Name_Id := N + 394;\n+   Name_Model_Epsilon                  : constant Name_Id := N + 395;\n+   Name_Model_Mantissa                 : constant Name_Id := N + 396;\n+   Name_Model_Small                    : constant Name_Id := N + 397;\n+   Name_Modulus                        : constant Name_Id := N + 398;\n+   Name_Null_Parameter                 : constant Name_Id := N + 399; -- GNAT\n+   Name_Object_Size                    : constant Name_Id := N + 400; -- GNAT\n+   Name_Partition_ID                   : constant Name_Id := N + 401;\n+   Name_Passed_By_Reference            : constant Name_Id := N + 402; -- GNAT\n+   Name_Pool_Address                   : constant Name_Id := N + 403;\n+   Name_Pos                            : constant Name_Id := N + 404;\n+   Name_Position                       : constant Name_Id := N + 405;\n+   Name_Range                          : constant Name_Id := N + 406;\n+   Name_Range_Length                   : constant Name_Id := N + 407; -- GNAT\n+   Name_Round                          : constant Name_Id := N + 408;\n+   Name_Safe_Emax                      : constant Name_Id := N + 409; -- Ada 83\n+   Name_Safe_First                     : constant Name_Id := N + 410;\n+   Name_Safe_Large                     : constant Name_Id := N + 411; -- Ada 83\n+   Name_Safe_Last                      : constant Name_Id := N + 412;\n+   Name_Safe_Small                     : constant Name_Id := N + 413; -- Ada 83\n+   Name_Scale                          : constant Name_Id := N + 414;\n+   Name_Scaling                        : constant Name_Id := N + 415;\n+   Name_Signed_Zeros                   : constant Name_Id := N + 416;\n+   Name_Size                           : constant Name_Id := N + 417;\n+   Name_Small                          : constant Name_Id := N + 418;\n+   Name_Storage_Size                   : constant Name_Id := N + 419;\n+   Name_Storage_Unit                   : constant Name_Id := N + 420; -- GNAT\n+   Name_Tag                            : constant Name_Id := N + 421;\n+   Name_Target_Name                    : constant Name_Id := N + 422; -- GNAT\n+   Name_Terminated                     : constant Name_Id := N + 423;\n+   Name_To_Address                     : constant Name_Id := N + 424; -- GNAT\n+   Name_Type_Class                     : constant Name_Id := N + 425; -- GNAT\n+   Name_UET_Address                    : constant Name_Id := N + 426; -- GNAT\n+   Name_Unbiased_Rounding              : constant Name_Id := N + 427;\n+   Name_Unchecked_Access               : constant Name_Id := N + 428;\n+   Name_Unconstrained_Array            : constant Name_Id := N + 429;\n+   Name_Universal_Literal_String       : constant Name_Id := N + 430; -- GNAT\n+   Name_Unrestricted_Access            : constant Name_Id := N + 431; -- GNAT\n+   Name_VADS_Size                      : constant Name_Id := N + 432; -- GNAT\n+   Name_Val                            : constant Name_Id := N + 433;\n+   Name_Valid                          : constant Name_Id := N + 434;\n+   Name_Value_Size                     : constant Name_Id := N + 435; -- GNAT\n+   Name_Version                        : constant Name_Id := N + 436;\n+   Name_Wchar_T_Size                   : constant Name_Id := N + 437; -- GNAT\n+   Name_Wide_Width                     : constant Name_Id := N + 438;\n+   Name_Width                          : constant Name_Id := N + 439;\n+   Name_Word_Size                      : constant Name_Id := N + 440; -- GNAT\n \n    --  Attributes that designate attributes returning renamable functions,\n-   --  i.e. functions that return other than a universal value.\n-\n-   First_Renamable_Function_Attribute  : constant Name_Id := N + 439;\n-   Name_Adjacent                       : constant Name_Id := N + 439;\n-   Name_Ceiling                        : constant Name_Id := N + 440;\n-   Name_Copy_Sign                      : constant Name_Id := N + 441;\n-   Name_Floor                          : constant Name_Id := N + 442;\n-   Name_Fraction                       : constant Name_Id := N + 443;\n-   Name_Image                          : constant Name_Id := N + 444;\n-   Name_Input                          : constant Name_Id := N + 445;\n-   Name_Machine                        : constant Name_Id := N + 446;\n-   Name_Max                            : constant Name_Id := N + 447;\n-   Name_Min                            : constant Name_Id := N + 448;\n-   Name_Model                          : constant Name_Id := N + 449;\n-   Name_Pred                           : constant Name_Id := N + 450;\n-   Name_Remainder                      : constant Name_Id := N + 451;\n-   Name_Rounding                       : constant Name_Id := N + 452;\n-   Name_Succ                           : constant Name_Id := N + 453;\n-   Name_Truncation                     : constant Name_Id := N + 454;\n-   Name_Value                          : constant Name_Id := N + 455;\n-   Name_Wide_Image                     : constant Name_Id := N + 456;\n-   Name_Wide_Value                     : constant Name_Id := N + 457;\n-   Last_Renamable_Function_Attribute   : constant Name_Id := N + 457;\n+   --  i.e. functions that return other than a universal value and that\n+   --  have non-universal arguments.\n+\n+   First_Renamable_Function_Attribute  : constant Name_Id := N + 441;\n+   Name_Adjacent                       : constant Name_Id := N + 441;\n+   Name_Ceiling                        : constant Name_Id := N + 442;\n+   Name_Copy_Sign                      : constant Name_Id := N + 443;\n+   Name_Floor                          : constant Name_Id := N + 444;\n+   Name_Fraction                       : constant Name_Id := N + 445;\n+   Name_Image                          : constant Name_Id := N + 446;\n+   Name_Input                          : constant Name_Id := N + 447;\n+   Name_Machine                        : constant Name_Id := N + 448;\n+   Name_Max                            : constant Name_Id := N + 449;\n+   Name_Min                            : constant Name_Id := N + 450;\n+   Name_Model                          : constant Name_Id := N + 451;\n+   Name_Pred                           : constant Name_Id := N + 452;\n+   Name_Remainder                      : constant Name_Id := N + 453;\n+   Name_Rounding                       : constant Name_Id := N + 454;\n+   Name_Succ                           : constant Name_Id := N + 455;\n+   Name_Truncation                     : constant Name_Id := N + 456;\n+   Name_Value                          : constant Name_Id := N + 457;\n+   Name_Wide_Image                     : constant Name_Id := N + 458;\n+   Name_Wide_Value                     : constant Name_Id := N + 459;\n+   Last_Renamable_Function_Attribute   : constant Name_Id := N + 459;\n \n    --  Attributes that designate procedures\n \n-   First_Procedure_Attribute           : constant Name_Id := N + 458;\n-   Name_Output                         : constant Name_Id := N + 458;\n-   Name_Read                           : constant Name_Id := N + 459;\n-   Name_Write                          : constant Name_Id := N + 460;\n-   Last_Procedure_Attribute            : constant Name_Id := N + 460;\n+   First_Procedure_Attribute           : constant Name_Id := N + 460;\n+   Name_Output                         : constant Name_Id := N + 460;\n+   Name_Read                           : constant Name_Id := N + 461;\n+   Name_Write                          : constant Name_Id := N + 462;\n+   Last_Procedure_Attribute            : constant Name_Id := N + 462;\n \n    --  Remaining attributes are ones that return entities\n \n-   First_Entity_Attribute_Name         : constant Name_Id := N + 461;\n-   Name_Elab_Body                      : constant Name_Id := N + 461; -- GNAT\n-   Name_Elab_Spec                      : constant Name_Id := N + 462; -- GNAT\n-   Name_Storage_Pool                   : constant Name_Id := N + 463;\n+   First_Entity_Attribute_Name         : constant Name_Id := N + 463;\n+   Name_Elab_Body                      : constant Name_Id := N + 463; -- GNAT\n+   Name_Elab_Spec                      : constant Name_Id := N + 464; -- GNAT\n+   Name_Storage_Pool                   : constant Name_Id := N + 465;\n \n    --  These attributes are the ones that return types\n \n-   First_Type_Attribute_Name           : constant Name_Id := N + 464;\n-   Name_Base                           : constant Name_Id := N + 464;\n-   Name_Class                          : constant Name_Id := N + 465;\n-   Last_Type_Attribute_Name            : constant Name_Id := N + 465;\n-   Last_Entity_Attribute_Name          : constant Name_Id := N + 465;\n-   Last_Attribute_Name                 : constant Name_Id := N + 465;\n+   First_Type_Attribute_Name           : constant Name_Id := N + 466;\n+   Name_Base                           : constant Name_Id := N + 466;\n+   Name_Class                          : constant Name_Id := N + 467;\n+   Last_Type_Attribute_Name            : constant Name_Id := N + 467;\n+   Last_Entity_Attribute_Name          : constant Name_Id := N + 467;\n+   Last_Attribute_Name                 : constant Name_Id := N + 467;\n \n    --  Names of recognized locking policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. C for Ceiling_Locking). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Locking_Policy_Name           : constant Name_Id := N + 466;\n-   Name_Ceiling_Locking                : constant Name_Id := N + 466;\n-   Name_Inheritance_Locking            : constant Name_Id := N + 467;\n-   Last_Locking_Policy_Name            : constant Name_Id := N + 467;\n+   First_Locking_Policy_Name           : constant Name_Id := N + 468;\n+   Name_Ceiling_Locking                : constant Name_Id := N + 468;\n+   Name_Inheritance_Locking            : constant Name_Id := N + 469;\n+   Last_Locking_Policy_Name            : constant Name_Id := N + 469;\n \n    --  Names of recognized queuing policy identifiers.\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Queuing). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Queuing_Policy_Name           : constant Name_Id := N + 468;\n-   Name_FIFO_Queuing                   : constant Name_Id := N + 468;\n-   Name_Priority_Queuing               : constant Name_Id := N + 469;\n-   Last_Queuing_Policy_Name            : constant Name_Id := N + 469;\n+   First_Queuing_Policy_Name           : constant Name_Id := N + 470;\n+   Name_FIFO_Queuing                   : constant Name_Id := N + 470;\n+   Name_Priority_Queuing               : constant Name_Id := N + 471;\n+   Last_Queuing_Policy_Name            : constant Name_Id := N + 471;\n \n    --  Names of recognized task dispatching policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_WIthinn_Priorities). If new policy names\n    --  are added, the first character must be distinct.\n \n-   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 470;\n-   Name_FIFO_Within_Priorities         : constant Name_Id := N + 470;\n-   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 470;\n+   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 472;\n+   Name_FIFO_Within_Priorities         : constant Name_Id := N + 472;\n+   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 472;\n \n    --  Names of recognized checks for pragma Suppress\n \n-   First_Check_Name                    : constant Name_Id := N + 471;\n-   Name_Access_Check                   : constant Name_Id := N + 471;\n-   Name_Accessibility_Check            : constant Name_Id := N + 472;\n-   Name_Discriminant_Check             : constant Name_Id := N + 473;\n-   Name_Division_Check                 : constant Name_Id := N + 474;\n-   Name_Elaboration_Check              : constant Name_Id := N + 475;\n-   Name_Index_Check                    : constant Name_Id := N + 476;\n-   Name_Length_Check                   : constant Name_Id := N + 477;\n-   Name_Overflow_Check                 : constant Name_Id := N + 478;\n-   Name_Range_Check                    : constant Name_Id := N + 479;\n-   Name_Storage_Check                  : constant Name_Id := N + 480;\n-   Name_Tag_Check                      : constant Name_Id := N + 481;\n-   Name_All_Checks                     : constant Name_Id := N + 482;\n-   Last_Check_Name                     : constant Name_Id := N + 482;\n+   First_Check_Name                    : constant Name_Id := N + 473;\n+   Name_Access_Check                   : constant Name_Id := N + 473;\n+   Name_Accessibility_Check            : constant Name_Id := N + 474;\n+   Name_Discriminant_Check             : constant Name_Id := N + 475;\n+   Name_Division_Check                 : constant Name_Id := N + 476;\n+   Name_Elaboration_Check              : constant Name_Id := N + 477;\n+   Name_Index_Check                    : constant Name_Id := N + 478;\n+   Name_Length_Check                   : constant Name_Id := N + 479;\n+   Name_Overflow_Check                 : constant Name_Id := N + 480;\n+   Name_Range_Check                    : constant Name_Id := N + 481;\n+   Name_Storage_Check                  : constant Name_Id := N + 482;\n+   Name_Tag_Check                      : constant Name_Id := N + 483;\n+   Name_All_Checks                     : constant Name_Id := N + 484;\n+   Last_Check_Name                     : constant Name_Id := N + 484;\n \n    --  Names corresponding to reserved keywords, excluding those already\n-   --  declared in the attribute list (Access, Delta, Digits, Range).\n-\n-   Name_Abort                          : constant Name_Id := N + 483;\n-   Name_Abs                            : constant Name_Id := N + 484;\n-   Name_Accept                         : constant Name_Id := N + 485;\n-   Name_And                            : constant Name_Id := N + 486;\n-   Name_All                            : constant Name_Id := N + 487;\n-   Name_Array                          : constant Name_Id := N + 488;\n-   Name_At                             : constant Name_Id := N + 489;\n-   Name_Begin                          : constant Name_Id := N + 490;\n-   Name_Body                           : constant Name_Id := N + 491;\n-   Name_Case                           : constant Name_Id := N + 492;\n-   Name_Constant                       : constant Name_Id := N + 493;\n-   Name_Declare                        : constant Name_Id := N + 494;\n-   Name_Delay                          : constant Name_Id := N + 495;\n-   Name_Do                             : constant Name_Id := N + 496;\n-   Name_Else                           : constant Name_Id := N + 497;\n-   Name_Elsif                          : constant Name_Id := N + 498;\n-   Name_End                            : constant Name_Id := N + 499;\n-   Name_Entry                          : constant Name_Id := N + 500;\n-   Name_Exception                      : constant Name_Id := N + 501;\n-   Name_Exit                           : constant Name_Id := N + 502;\n-   Name_For                            : constant Name_Id := N + 503;\n-   Name_Function                       : constant Name_Id := N + 504;\n-   Name_Generic                        : constant Name_Id := N + 505;\n-   Name_Goto                           : constant Name_Id := N + 506;\n-   Name_If                             : constant Name_Id := N + 507;\n-   Name_In                             : constant Name_Id := N + 508;\n-   Name_Is                             : constant Name_Id := N + 509;\n-   Name_Limited                        : constant Name_Id := N + 510;\n-   Name_Loop                           : constant Name_Id := N + 511;\n-   Name_Mod                            : constant Name_Id := N + 512;\n-   Name_New                            : constant Name_Id := N + 513;\n-   Name_Not                            : constant Name_Id := N + 514;\n-   Name_Null                           : constant Name_Id := N + 515;\n-   Name_Of                             : constant Name_Id := N + 516;\n-   Name_Or                             : constant Name_Id := N + 517;\n-   Name_Others                         : constant Name_Id := N + 518;\n-   Name_Out                            : constant Name_Id := N + 519;\n-   Name_Package                        : constant Name_Id := N + 520;\n-   Name_Pragma                         : constant Name_Id := N + 521;\n-   Name_Private                        : constant Name_Id := N + 522;\n-   Name_Procedure                      : constant Name_Id := N + 523;\n-   Name_Raise                          : constant Name_Id := N + 524;\n-   Name_Record                         : constant Name_Id := N + 525;\n-   Name_Rem                            : constant Name_Id := N + 526;\n-   Name_Renames                        : constant Name_Id := N + 527;\n-   Name_Return                         : constant Name_Id := N + 528;\n-   Name_Reverse                        : constant Name_Id := N + 529;\n-   Name_Select                         : constant Name_Id := N + 530;\n-   Name_Separate                       : constant Name_Id := N + 531;\n-   Name_Subtype                        : constant Name_Id := N + 532;\n-   Name_Task                           : constant Name_Id := N + 533;\n-   Name_Terminate                      : constant Name_Id := N + 534;\n-   Name_Then                           : constant Name_Id := N + 535;\n-   Name_Type                           : constant Name_Id := N + 536;\n-   Name_Use                            : constant Name_Id := N + 537;\n-   Name_When                           : constant Name_Id := N + 538;\n-   Name_While                          : constant Name_Id := N + 539;\n-   Name_With                           : constant Name_Id := N + 540;\n-   Name_Xor                            : constant Name_Id := N + 541;\n+   --  declared in the attribute list (Access, Delta, Digits, Mod, Range).\n+\n+   Name_Abort                          : constant Name_Id := N + 485;\n+   Name_Abs                            : constant Name_Id := N + 486;\n+   Name_Accept                         : constant Name_Id := N + 487;\n+   Name_And                            : constant Name_Id := N + 488;\n+   Name_All                            : constant Name_Id := N + 489;\n+   Name_Array                          : constant Name_Id := N + 490;\n+   Name_At                             : constant Name_Id := N + 491;\n+   Name_Begin                          : constant Name_Id := N + 492;\n+   Name_Body                           : constant Name_Id := N + 493;\n+   Name_Case                           : constant Name_Id := N + 494;\n+   Name_Constant                       : constant Name_Id := N + 495;\n+   Name_Declare                        : constant Name_Id := N + 496;\n+   Name_Delay                          : constant Name_Id := N + 497;\n+   Name_Do                             : constant Name_Id := N + 498;\n+   Name_Else                           : constant Name_Id := N + 499;\n+   Name_Elsif                          : constant Name_Id := N + 500;\n+   Name_End                            : constant Name_Id := N + 501;\n+   Name_Entry                          : constant Name_Id := N + 502;\n+   Name_Exception                      : constant Name_Id := N + 503;\n+   Name_Exit                           : constant Name_Id := N + 504;\n+   Name_For                            : constant Name_Id := N + 505;\n+   Name_Function                       : constant Name_Id := N + 506;\n+   Name_Generic                        : constant Name_Id := N + 507;\n+   Name_Goto                           : constant Name_Id := N + 508;\n+   Name_If                             : constant Name_Id := N + 509;\n+   Name_In                             : constant Name_Id := N + 510;\n+   Name_Is                             : constant Name_Id := N + 511;\n+   Name_Limited                        : constant Name_Id := N + 512;\n+   Name_Loop                           : constant Name_Id := N + 513;\n+   Name_New                            : constant Name_Id := N + 514;\n+   Name_Not                            : constant Name_Id := N + 515;\n+   Name_Null                           : constant Name_Id := N + 516;\n+   Name_Of                             : constant Name_Id := N + 517;\n+   Name_Or                             : constant Name_Id := N + 518;\n+   Name_Others                         : constant Name_Id := N + 519;\n+   Name_Out                            : constant Name_Id := N + 520;\n+   Name_Package                        : constant Name_Id := N + 521;\n+   Name_Pragma                         : constant Name_Id := N + 522;\n+   Name_Private                        : constant Name_Id := N + 523;\n+   Name_Procedure                      : constant Name_Id := N + 524;\n+   Name_Raise                          : constant Name_Id := N + 525;\n+   Name_Record                         : constant Name_Id := N + 526;\n+   Name_Rem                            : constant Name_Id := N + 527;\n+   Name_Renames                        : constant Name_Id := N + 528;\n+   Name_Return                         : constant Name_Id := N + 529;\n+   Name_Reverse                        : constant Name_Id := N + 530;\n+   Name_Select                         : constant Name_Id := N + 531;\n+   Name_Separate                       : constant Name_Id := N + 532;\n+   Name_Subtype                        : constant Name_Id := N + 533;\n+   Name_Task                           : constant Name_Id := N + 534;\n+   Name_Terminate                      : constant Name_Id := N + 535;\n+   Name_Then                           : constant Name_Id := N + 536;\n+   Name_Type                           : constant Name_Id := N + 537;\n+   Name_Use                            : constant Name_Id := N + 538;\n+   Name_When                           : constant Name_Id := N + 539;\n+   Name_While                          : constant Name_Id := N + 540;\n+   Name_With                           : constant Name_Id := N + 541;\n+   Name_Xor                            : constant Name_Id := N + 542;\n \n    --  Names of intrinsic subprograms\n \n    --  Note: Asm is missing from this list, since Asm is a legitimate\n    --  convention name. So is To_Adress, which is a GNAT attribute.\n \n-   First_Intrinsic_Name                : constant Name_Id := N + 542;\n-   Name_Divide                         : constant Name_Id := N + 542;\n-   Name_Enclosing_Entity               : constant Name_Id := N + 543;\n-   Name_Exception_Information          : constant Name_Id := N + 544;\n-   Name_Exception_Message              : constant Name_Id := N + 545;\n-   Name_Exception_Name                 : constant Name_Id := N + 546;\n-   Name_File                           : constant Name_Id := N + 547;\n-   Name_Import_Address                 : constant Name_Id := N + 548;\n-   Name_Import_Largest_Value           : constant Name_Id := N + 549;\n-   Name_Import_Value                   : constant Name_Id := N + 550;\n-   Name_Is_Negative                    : constant Name_Id := N + 551;\n-   Name_Line                           : constant Name_Id := N + 552;\n-   Name_Rotate_Left                    : constant Name_Id := N + 553;\n-   Name_Rotate_Right                   : constant Name_Id := N + 554;\n-   Name_Shift_Left                     : constant Name_Id := N + 555;\n-   Name_Shift_Right                    : constant Name_Id := N + 556;\n-   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 557;\n-   Name_Source_Location                : constant Name_Id := N + 558;\n-   Name_Unchecked_Conversion           : constant Name_Id := N + 559;\n-   Name_Unchecked_Deallocation         : constant Name_Id := N + 560;\n-   Name_To_Pointer                     : constant Name_Id := N + 561;\n-   Last_Intrinsic_Name                 : constant Name_Id := N + 561;\n+   First_Intrinsic_Name                : constant Name_Id := N + 543;\n+   Name_Divide                         : constant Name_Id := N + 543;\n+   Name_Enclosing_Entity               : constant Name_Id := N + 544;\n+   Name_Exception_Information          : constant Name_Id := N + 545;\n+   Name_Exception_Message              : constant Name_Id := N + 546;\n+   Name_Exception_Name                 : constant Name_Id := N + 547;\n+   Name_File                           : constant Name_Id := N + 548;\n+   Name_Import_Address                 : constant Name_Id := N + 549;\n+   Name_Import_Largest_Value           : constant Name_Id := N + 550;\n+   Name_Import_Value                   : constant Name_Id := N + 551;\n+   Name_Is_Negative                    : constant Name_Id := N + 552;\n+   Name_Line                           : constant Name_Id := N + 553;\n+   Name_Rotate_Left                    : constant Name_Id := N + 554;\n+   Name_Rotate_Right                   : constant Name_Id := N + 555;\n+   Name_Shift_Left                     : constant Name_Id := N + 556;\n+   Name_Shift_Right                    : constant Name_Id := N + 557;\n+   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 558;\n+   Name_Source_Location                : constant Name_Id := N + 559;\n+   Name_Unchecked_Conversion           : constant Name_Id := N + 560;\n+   Name_Unchecked_Deallocation         : constant Name_Id := N + 561;\n+   Name_To_Pointer                     : constant Name_Id := N + 562;\n+   Last_Intrinsic_Name                 : constant Name_Id := N + 562;\n \n    --  Reserved words used only in Ada 95\n \n-   First_95_Reserved_Word              : constant Name_Id := N + 562;\n-   Name_Abstract                       : constant Name_Id := N + 562;\n-   Name_Aliased                        : constant Name_Id := N + 563;\n-   Name_Protected                      : constant Name_Id := N + 564;\n-   Name_Until                          : constant Name_Id := N + 565;\n-   Name_Requeue                        : constant Name_Id := N + 566;\n-   Name_Tagged                         : constant Name_Id := N + 567;\n-   Last_95_Reserved_Word               : constant Name_Id := N + 567;\n+   First_95_Reserved_Word              : constant Name_Id := N + 563;\n+   Name_Abstract                       : constant Name_Id := N + 563;\n+   Name_Aliased                        : constant Name_Id := N + 564;\n+   Name_Protected                      : constant Name_Id := N + 565;\n+   Name_Until                          : constant Name_Id := N + 566;\n+   Name_Requeue                        : constant Name_Id := N + 567;\n+   Name_Tagged                         : constant Name_Id := N + 568;\n+   Last_95_Reserved_Word               : constant Name_Id := N + 568;\n \n    subtype Ada_95_Reserved_Words is\n      Name_Id range First_95_Reserved_Word .. Last_95_Reserved_Word;\n \n    --  Miscellaneous names used in semantic checking\n \n-   Name_Raise_Exception                : constant Name_Id := N + 568;\n+   Name_Raise_Exception                : constant Name_Id := N + 569;\n \n    --  Additional reserved words and identifiers used in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Ada_Roots                      : constant Name_Id := N + 569;\n-   Name_Binder                         : constant Name_Id := N + 570;\n-   Name_Binder_Driver                  : constant Name_Id := N + 571;\n-   Name_Body_Suffix                    : constant Name_Id := N + 572;\n-   Name_Builder                        : constant Name_Id := N + 573;\n-   Name_Compiler                       : constant Name_Id := N + 574;\n-   Name_Compiler_Driver                : constant Name_Id := N + 575;\n-   Name_Compiler_Kind                  : constant Name_Id := N + 576;\n-   Name_Compute_Dependency             : constant Name_Id := N + 577;\n-   Name_Cross_Reference                : constant Name_Id := N + 578;\n-   Name_Default_Linker                 : constant Name_Id := N + 579;\n-   Name_Default_Switches               : constant Name_Id := N + 580;\n-   Name_Dependency_Option              : constant Name_Id := N + 581;\n-   Name_Exec_Dir                       : constant Name_Id := N + 582;\n-   Name_Executable                     : constant Name_Id := N + 583;\n-   Name_Executable_Suffix              : constant Name_Id := N + 584;\n-   Name_Extends                        : constant Name_Id := N + 585;\n-   Name_Externally_Built               : constant Name_Id := N + 586;\n-   Name_Finder                         : constant Name_Id := N + 587;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 588;\n-   Name_Gnatls                         : constant Name_Id := N + 589;\n-   Name_Gnatstub                       : constant Name_Id := N + 590;\n-   Name_Implementation                 : constant Name_Id := N + 591;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 592;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 593;\n-   Name_Include_Option                 : constant Name_Id := N + 594;\n-   Name_Language_Processing            : constant Name_Id := N + 595;\n-   Name_Languages                      : constant Name_Id := N + 596;\n-   Name_Library_Dir                    : constant Name_Id := N + 597;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 598;\n-   Name_Library_GCC                    : constant Name_Id := N + 599;\n-   Name_Library_Interface              : constant Name_Id := N + 600;\n-   Name_Library_Kind                   : constant Name_Id := N + 601;\n-   Name_Library_Name                   : constant Name_Id := N + 602;\n-   Name_Library_Options                : constant Name_Id := N + 603;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 604;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 605;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 606;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 607;\n-   Name_Library_Version                : constant Name_Id := N + 608;\n-   Name_Linker                         : constant Name_Id := N + 609;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 610;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 611;\n-   Name_Metrics                        : constant Name_Id := N + 612;\n-   Name_Naming                         : constant Name_Id := N + 613;\n-   Name_Object_Dir                     : constant Name_Id := N + 614;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 615;\n-   Name_Project                        : constant Name_Id := N + 616;\n-   Name_Separate_Suffix                : constant Name_Id := N + 617;\n-   Name_Source_Dirs                    : constant Name_Id := N + 618;\n-   Name_Source_Files                   : constant Name_Id := N + 619;\n-   Name_Source_List_File               : constant Name_Id := N + 620;\n-   Name_Spec                           : constant Name_Id := N + 621;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 622;\n-   Name_Specification                  : constant Name_Id := N + 623;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 624;\n-   Name_Specification_Suffix           : constant Name_Id := N + 625;\n-   Name_Switches                       : constant Name_Id := N + 626;\n+   Name_Ada_Roots                      : constant Name_Id := N + 570;\n+   Name_Binder                         : constant Name_Id := N + 571;\n+   Name_Binder_Driver                  : constant Name_Id := N + 572;\n+   Name_Body_Suffix                    : constant Name_Id := N + 573;\n+   Name_Builder                        : constant Name_Id := N + 574;\n+   Name_Compiler                       : constant Name_Id := N + 575;\n+   Name_Compiler_Driver                : constant Name_Id := N + 576;\n+   Name_Compiler_Kind                  : constant Name_Id := N + 577;\n+   Name_Compute_Dependency             : constant Name_Id := N + 578;\n+   Name_Cross_Reference                : constant Name_Id := N + 579;\n+   Name_Default_Linker                 : constant Name_Id := N + 580;\n+   Name_Default_Switches               : constant Name_Id := N + 581;\n+   Name_Dependency_Option              : constant Name_Id := N + 582;\n+   Name_Exec_Dir                       : constant Name_Id := N + 583;\n+   Name_Executable                     : constant Name_Id := N + 584;\n+   Name_Executable_Suffix              : constant Name_Id := N + 585;\n+   Name_Extends                        : constant Name_Id := N + 586;\n+   Name_Externally_Built               : constant Name_Id := N + 587;\n+   Name_Finder                         : constant Name_Id := N + 588;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 589;\n+   Name_Gnatls                         : constant Name_Id := N + 590;\n+   Name_Gnatstub                       : constant Name_Id := N + 591;\n+   Name_Implementation                 : constant Name_Id := N + 592;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 593;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 594;\n+   Name_Include_Option                 : constant Name_Id := N + 595;\n+   Name_Language_Processing            : constant Name_Id := N + 596;\n+   Name_Languages                      : constant Name_Id := N + 597;\n+   Name_Library_Dir                    : constant Name_Id := N + 598;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 599;\n+   Name_Library_GCC                    : constant Name_Id := N + 600;\n+   Name_Library_Interface              : constant Name_Id := N + 601;\n+   Name_Library_Kind                   : constant Name_Id := N + 602;\n+   Name_Library_Name                   : constant Name_Id := N + 603;\n+   Name_Library_Options                : constant Name_Id := N + 604;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 605;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 606;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 607;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 608;\n+   Name_Library_Version                : constant Name_Id := N + 609;\n+   Name_Linker                         : constant Name_Id := N + 610;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 611;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 612;\n+   Name_Metrics                        : constant Name_Id := N + 613;\n+   Name_Naming                         : constant Name_Id := N + 614;\n+   Name_Object_Dir                     : constant Name_Id := N + 615;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 616;\n+   Name_Project                        : constant Name_Id := N + 617;\n+   Name_Separate_Suffix                : constant Name_Id := N + 618;\n+   Name_Source_Dirs                    : constant Name_Id := N + 619;\n+   Name_Source_Files                   : constant Name_Id := N + 620;\n+   Name_Source_List_File               : constant Name_Id := N + 621;\n+   Name_Spec                           : constant Name_Id := N + 622;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 623;\n+   Name_Specification                  : constant Name_Id := N + 624;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 625;\n+   Name_Specification_Suffix           : constant Name_Id := N + 626;\n+   Name_Switches                       : constant Name_Id := N + 627;\n \n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 627;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 628;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 627;\n+   Last_Predefined_Name                : constant Name_Id := N + 628;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;\n@@ -1055,6 +1057,7 @@ package Snames is\n       Attribute_Max_Size_In_Storage_Elements,\n       Attribute_Maximum_Alignment,\n       Attribute_Mechanism_Code,\n+      Attribute_Mod,\n       Attribute_Model_Emin,\n       Attribute_Model_Epsilon,\n       Attribute_Model_Mantissa,"}, {"sha": "18cb4edc31a88363ce806acd4e9255aad8f18345", "filename": "gcc/ada/snames.h", "status": "modified", "additions": 75, "deletions": 74, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsnames.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7/gcc%2Fada%2Fsnames.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.h?ref=5f3ab6fbf007f309b823cd77f1d3eed52ee0d0a7", "patch": "@@ -101,84 +101,85 @@ extern unsigned char Get_Attribute_Id (int);\n #define  Attr_Max_Size_In_Storage_Elements  53\n #define  Attr_Maximum_Alignment             54\n #define  Attr_Mechanism_Code                55\n-#define  Attr_Model_Emin                    56\n-#define  Attr_Model_Epsilon                 57\n-#define  Attr_Model_Mantissa                58\n-#define  Attr_Model_Small                   59\n-#define  Attr_Modulus                       60\n-#define  Attr_Null_Parameter                61\n-#define  Attr_Object_Size                   62\n-#define  Attr_Partition_ID                  63\n-#define  Attr_Passed_By_Reference           64\n-#define  Attr_Pool_Address                  65\n-#define  Attr_Pos                           66\n-#define  Attr_Position                      67\n-#define  Attr_Range                         68\n-#define  Attr_Range_Length                  69\n-#define  Attr_Round                         70\n-#define  Attr_Safe_Emax                     71\n-#define  Attr_Safe_First                    72\n-#define  Attr_Safe_Large                    73\n-#define  Attr_Safe_Last                     74\n-#define  Attr_Safe_Small                    75\n-#define  Attr_Scale                         76\n-#define  Attr_Scaling                       77\n-#define  Attr_Signed_Zeros                  78\n-#define  Attr_Size                          79\n-#define  Attr_Small                         80\n-#define  Attr_Storage_Size                  81\n-#define  Attr_Storage_Unit                  82\n-#define  Attr_Tag                           83\n-#define  Attr_Target_Name                   84\n-#define  Attr_Terminated                    85\n-#define  Attr_To_Address                    86\n-#define  Attr_Type_Class                    87\n-#define  Attr_UET_Address                   88\n-#define  Attr_Unbiased_Rounding             89\n-#define  Attr_Unchecked_Access              90\n-#define  Attr_Unconstrained_Array           91\n-#define  Attr_Universal_Literal_String      92\n-#define  Attr_Unrestricted_Access           93\n-#define  Attr_VADS_Size                     94\n-#define  Attr_Val                           95\n-#define  Attr_Valid                         96\n-#define  Attr_Value_Size                    97\n-#define  Attr_Version                       98\n-#define  Attr_Wide_Character_Size           99\n-#define  Attr_Wide_Width                   100\n-#define  Attr_Width                        101\n-#define  Attr_Word_Size                    102\n+#define  Attr_Mod                           56\n+#define  Attr_Model_Emin                    57\n+#define  Attr_Model_Epsilon                 58\n+#define  Attr_Model_Mantissa                59\n+#define  Attr_Model_Small                   60\n+#define  Attr_Modulus                       61\n+#define  Attr_Null_Parameter                62\n+#define  Attr_Object_Size                   63\n+#define  Attr_Partition_ID                  64\n+#define  Attr_Passed_By_Reference           65\n+#define  Attr_Pool_Address                  66\n+#define  Attr_Pos                           67\n+#define  Attr_Position                      68\n+#define  Attr_Range                         69\n+#define  Attr_Range_Length                  70\n+#define  Attr_Round                         71\n+#define  Attr_Safe_Emax                     72\n+#define  Attr_Safe_First                    73\n+#define  Attr_Safe_Large                    74\n+#define  Attr_Safe_Last                     75\n+#define  Attr_Safe_Small                    76\n+#define  Attr_Scale                         77\n+#define  Attr_Scaling                       78\n+#define  Attr_Signed_Zeros                  79\n+#define  Attr_Size                          80\n+#define  Attr_Small                         81\n+#define  Attr_Storage_Size                  82\n+#define  Attr_Storage_Unit                  83\n+#define  Attr_Tag                           84\n+#define  Attr_Target_Name                   85\n+#define  Attr_Terminated                    86\n+#define  Attr_To_Address                    87\n+#define  Attr_Type_Class                    88\n+#define  Attr_UET_Address                   89\n+#define  Attr_Unbiased_Rounding             90\n+#define  Attr_Unchecked_Access              91\n+#define  Attr_Unconstrained_Array           92\n+#define  Attr_Universal_Literal_String      93\n+#define  Attr_Unrestricted_Access           94\n+#define  Attr_VADS_Size                     95\n+#define  Attr_Val                           96\n+#define  Attr_Valid                         97\n+#define  Attr_Value_Size                    98\n+#define  Attr_Version                       99\n+#define  Attr_Wide_Character_Size          100\n+#define  Attr_Wide_Width                   101\n+#define  Attr_Width                        102\n+#define  Attr_Word_Size                    103\n \n-#define  Attr_Adjacent                     103\n-#define  Attr_Ceiling                      104\n-#define  Attr_Copy_Sign                    105\n-#define  Attr_Floor                        106\n-#define  Attr_Fraction                     107\n-#define  Attr_Image                        108\n-#define  Attr_Input                        109\n-#define  Attr_Machine                      110\n-#define  Attr_Max                          111\n-#define  Attr_Min                          112\n-#define  Attr_Model                        113\n-#define  Attr_Pred                         114\n-#define  Attr_Remainder                    115\n-#define  Attr_Rounding                     116\n-#define  Attr_Succ                         117\n-#define  Attr_Truncation                   118\n-#define  Attr_Value                        119\n-#define  Attr_Wide_Image                   120\n-#define  Attr_Wide_Value                   121\n+#define  Attr_Adjacent                     104\n+#define  Attr_Ceiling                      105\n+#define  Attr_Copy_Sign                    106\n+#define  Attr_Floor                        107\n+#define  Attr_Fraction                     108\n+#define  Attr_Image                        109\n+#define  Attr_Input                        110\n+#define  Attr_Machine                      111\n+#define  Attr_Max                          112\n+#define  Attr_Min                          113\n+#define  Attr_Model                        114\n+#define  Attr_Pred                         115\n+#define  Attr_Remainder                    116\n+#define  Attr_Rounding                     117\n+#define  Attr_Succ                         118\n+#define  Attr_Truncation                   119\n+#define  Attr_Value                        120\n+#define  Attr_Wide_Image                   121\n+#define  Attr_Wide_Value                   122\n \n-#define  Attr_Output                       122\n-#define  Attr_Read                         123\n-#define  Attr_Write                        124\n+#define  Attr_Output                       123\n+#define  Attr_Read                         124\n+#define  Attr_Write                        125\n \n-#define  Attr_Elab_Body                    125\n-#define  Attr_Elab_Spec                    126\n-#define  Attr_Storage_Pool                 127\n+#define  Attr_Elab_Body                    126\n+#define  Attr_Elab_Spec                    127\n+#define  Attr_Storage_Pool                 128\n \n-#define  Attr_Base                         128\n-#define  Attr_Class                        129\n+#define  Attr_Base                         129\n+#define  Attr_Class                        130\n \n /* Define the function to check if a Name_Id value is a valid pragma */\n "}]}