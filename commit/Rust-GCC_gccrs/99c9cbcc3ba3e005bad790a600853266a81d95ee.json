{"sha": "99c9cbcc3ba3e005bad790a600853266a81d95ee", "node_id": "C_kwDOANBUbNoAKDk5YzljYmNjM2JhM2UwMDViYWQ3OTBhNjAwODUzMjY2YTgxZDk1ZWU", "commit": {"author": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-11-09T08:39:50Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-11-16T12:35:37Z"}, "message": "gcc: m68k: fix PR target/107645\n\ngcc/\n\tPR target/107645\n\t* config/m68k/predicates.md (symbolic_operand): Return false\n\twhen UNSPEC is under the CONST node.", "tree": {"sha": "dc57e85a0d6611c87818c2dfab59fb3fec22c5d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc57e85a0d6611c87818c2dfab59fb3fec22c5d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99c9cbcc3ba3e005bad790a600853266a81d95ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c9cbcc3ba3e005bad790a600853266a81d95ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99c9cbcc3ba3e005bad790a600853266a81d95ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c9cbcc3ba3e005bad790a600853266a81d95ee/comments", "author": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f58e6d42fc555ee471594ac57bccaa8a3fb833aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f58e6d42fc555ee471594ac57bccaa8a3fb833aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f58e6d42fc555ee471594ac57bccaa8a3fb833aa"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "094a18955534188577710d95c924213e75361dac", "filename": "gcc/config/m68k/predicates.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c9cbcc3ba3e005bad790a600853266a81d95ee/gcc%2Fconfig%2Fm68k%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c9cbcc3ba3e005bad790a600853266a81d95ee/gcc%2Fconfig%2Fm68k%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fpredicates.md?ref=99c9cbcc3ba3e005bad790a600853266a81d95ee", "patch": "@@ -141,6 +141,8 @@\n \n     case CONST:\n       op = XEXP (op, 0);\n+      if (GET_CODE (op) == UNSPEC)\n+        return false;\n       return ((GET_CODE (XEXP (op, 0)) == SYMBOL_REF\n \t       || GET_CODE (XEXP (op, 0)) == LABEL_REF)\n \t      && GET_CODE (XEXP (op, 1)) == CONST_INT);"}]}