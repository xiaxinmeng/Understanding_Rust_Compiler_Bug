{"sha": "b29d5f754357e681fdcee69142278cac30ce2aba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI5ZDVmNzU0MzU3ZTY4MWZkY2VlNjkxNDIyNzhjYWMzMGNlMmFiYQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-08-14T22:49:34Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-08-14T22:49:34Z"}, "message": "(write_units): Write #defines for the number of function units, the min/max ready cost and min/max busy delay.\n\n(write_units): Write #defines for the number of\n\tfunction units, the min/max ready cost and min/max busy delay.\n\tAdd max_busy_cost field to struct function_unit_desc.\n\nFrom-SVN: r1844", "tree": {"sha": "57e32ed353971b6f62d906b730dfd42e39855708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57e32ed353971b6f62d906b730dfd42e39855708"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b29d5f754357e681fdcee69142278cac30ce2aba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29d5f754357e681fdcee69142278cac30ce2aba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b29d5f754357e681fdcee69142278cac30ce2aba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b29d5f754357e681fdcee69142278cac30ce2aba/comments", "author": null, "committer": null, "parents": [{"sha": "a9d27cb2a3f5f2f3eafc18126957ba3f38d7cd9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9d27cb2a3f5f2f3eafc18126957ba3f38d7cd9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9d27cb2a3f5f2f3eafc18126957ba3f38d7cd9f"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "957ebd1d1c05eec68f665892ec451633873890d9", "filename": "gcc/genattr.c", "status": "modified", "additions": 50, "deletions": 4, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b29d5f754357e681fdcee69142278cac30ce2aba/gcc%2Fgenattr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b29d5f754357e681fdcee69142278cac30ce2aba/gcc%2Fgenattr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr.c?ref=b29d5f754357e681fdcee69142278cac30ce2aba", "patch": "@@ -38,6 +38,12 @@ char *xmalloc ();\n static void fatal ();\n void fancy_abort ();\n \n+struct namelist\n+{\n+  struct namelist *next;\n+  char *name;\n+};\n+\n static void\n write_upcase (str)\n     char *str;\n@@ -100,7 +106,8 @@ gen_attr (attr)\n }\n \n static void\n-write_units ()\n+write_units (num_units, min_ready_cost, max_ready_cost,\n+\t     min_busy_delay, max_busy_delay)\n {\n   printf (\"#define INSN_SCHEDULING\\n\\n\");\n   printf (\"extern int result_ready_cost ();\\n\");\n@@ -112,9 +119,15 @@ write_units ()\n   printf (\"  int multiplicity;\\n\");\n   printf (\"  int simultaneity;\\n\");\n   printf (\"  int default_cost;\\n\");\n+  printf (\"  int max_busy_cost;\\n\");\n   printf (\"  int (*ready_cost_function) ();\\n\");\n   printf (\"  int (*conflict_cost_function) ();\\n\");\n   printf (\"} function_units[];\\n\\n\");\n+  printf (\"#define FUNCTION_UNITS_SIZE %d\\n\", num_units);\n+  printf (\"#define MIN_READY_COST %d\\n\", min_ready_cost);\n+  printf (\"#define MAX_READY_COST %d\\n\", max_ready_cost);\n+  printf (\"#define MIN_BUSY_DELAY %d\\n\", min_busy_delay);\n+  printf (\"#define MAX_BUSY_DELAY %d\\n\\n\", max_busy_delay);\n }\n \n char *\n@@ -170,6 +183,10 @@ main (argc, argv)\n   int have_annul_true = 0;\n   int have_annul_false = 0;\n   int have_units = 0;\n+  int num_units = 0;\n+  int min_ready_cost = 100000, max_ready_cost = -1;\n+  int min_busy_delay = 100000, max_busy_delay = -1;\n+  struct namelist *units = 0;\n   int i;\n \n   obstack_init (rtl_obstack);\n@@ -236,16 +253,45 @@ from the machine description file `md'.  */\\n\\n\");\n \t    }\n         }\n \n-      else if (GET_CODE (desc) == DEFINE_FUNCTION_UNIT && ! have_units)\n+      else if (GET_CODE (desc) == DEFINE_FUNCTION_UNIT)\n \t{\n+\t  struct namelist *unit;\n+\t  char *name = XSTR (desc, 0);\n+\t  int ready_cost = XINT (desc, 4);\n+\t  int busy_delay = XINT (desc, 5);\n+\n \t  have_units = 1;\n-\t  write_units ();\n+\t  if (min_ready_cost > ready_cost) min_ready_cost = ready_cost;\n+\t  if (max_ready_cost < ready_cost) max_ready_cost = ready_cost;\n+\t  if (min_busy_delay > busy_delay) min_busy_delay = busy_delay;\n+\t  if (max_busy_delay < busy_delay) max_busy_delay = busy_delay;\n+\n+\t  /* If the optional conflict vector was specified, the busy delay\n+\t     may be zero.  */\n+\t  if (XVEC (desc, 6) != 0) min_busy_delay = 0;\n+\n+\t  for (unit = units; unit; unit = unit->next)\n+\t    if (strcmp (unit->name, name) == 0)\n+\t      break;\n+\t  if (unit == 0)\n+\t    {\n+\t      int len = strlen (name) + 1;\n+\t      unit = (struct namelist *) alloca (sizeof (struct namelist));\n+\t      unit->name = (char *) alloca (len);\n+\t      bcopy (name, unit->name, len);\n+\t      unit->next = units;\n+\t      units = unit;\n+\t      num_units++;\n+\t    }\n \t}\n     }\n \n+  if (have_units)\n+    write_units (num_units, min_ready_cost, max_ready_cost,\n+\t\t min_busy_delay, max_busy_delay);\n+\n   fflush (stdout);\n   exit (ferror (stdout) != 0 ? FATAL_EXIT_CODE : SUCCESS_EXIT_CODE);\n   /* NOTREACHED */\n   return 0;\n }\n-"}]}