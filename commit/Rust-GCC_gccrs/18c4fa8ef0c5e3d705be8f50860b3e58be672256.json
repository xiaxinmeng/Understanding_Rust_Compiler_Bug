{"sha": "18c4fa8ef0c5e3d705be8f50860b3e58be672256", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjNGZhOGVmMGM1ZTNkNzA1YmU4ZjUwODYwYjNlNThiZTY3MjI1Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-08-20T01:45:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-08-20T01:45:44Z"}, "message": "* lambda.c (current_nonlambda_scope): New.\n\nFrom-SVN: r227022", "tree": {"sha": "610e361af05e82acc2adedabe3bec485e19f5df2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/610e361af05e82acc2adedabe3bec485e19f5df2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c4fa8ef0c5e3d705be8f50860b3e58be672256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c4fa8ef0c5e3d705be8f50860b3e58be672256", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c4fa8ef0c5e3d705be8f50860b3e58be672256", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c4fa8ef0c5e3d705be8f50860b3e58be672256/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f02fe7889f4dfd8bd3c8c020d10585026d46522a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f02fe7889f4dfd8bd3c8c020d10585026d46522a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f02fe7889f4dfd8bd3c8c020d10585026d46522a"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "155f86af9ff630ddb7a5ae5563e0972e0c6d79bf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c4fa8ef0c5e3d705be8f50860b3e58be672256/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c4fa8ef0c5e3d705be8f50860b3e58be672256/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=18c4fa8ef0c5e3d705be8f50860b3e58be672256", "patch": "@@ -1,3 +1,7 @@\n+2015-08-19  Jason Merrill  <jason@redhat.com>\n+\n+\t* lambda.c (current_nonlambda_scope): New.\n+\n 2015-08-18  Trevor Saunders  <tbsaunde@tbsaunde.org>\n \n \t* call.c, class.c, cp-tree.h, decl.c, except.c, mangle.c,"}, {"sha": "4dee60c052703f580513c4623497365225c029b6", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c4fa8ef0c5e3d705be8f50860b3e58be672256/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c4fa8ef0c5e3d705be8f50860b3e58be672256/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=18c4fa8ef0c5e3d705be8f50860b3e58be672256", "patch": "@@ -6308,6 +6308,7 @@ extern tree lambda_expr_this_capture            (tree, bool);\n extern tree maybe_resolve_dummy\t\t\t(tree, bool);\n extern tree current_nonlambda_function\t\t(void);\n extern tree nonlambda_method_basetype\t\t(void);\n+extern tree current_nonlambda_scope\t\t(void);\n extern void maybe_add_lambda_conv_op            (tree);\n extern bool is_lambda_ignored_entity            (tree);\n "}, {"sha": "ea9dba05227556fd958adcbdd187d05e13920303", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c4fa8ef0c5e3d705be8f50860b3e58be672256/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c4fa8ef0c5e3d705be8f50860b3e58be672256/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=18c4fa8ef0c5e3d705be8f50860b3e58be672256", "patch": "@@ -817,6 +817,30 @@ nonlambda_method_basetype (void)\n   return TYPE_METHOD_BASETYPE (TREE_TYPE (fn));\n }\n \n+/* Like current_scope, but looking through lambdas.  */\n+\n+tree\n+current_nonlambda_scope (void)\n+{\n+  tree scope = current_scope ();\n+  for (;;)\n+    {\n+      if (TREE_CODE (scope) == FUNCTION_DECL\n+\t  && LAMBDA_FUNCTION_P (scope))\n+\t{\n+\t  scope = CP_TYPE_CONTEXT (DECL_CONTEXT (scope));\n+\t  continue;\n+\t}\n+      else if (LAMBDA_TYPE_P (scope))\n+\t{\n+\t  scope = CP_TYPE_CONTEXT (scope);\n+\t  continue;\n+\t}\n+      break;\n+    }\n+  return scope;\n+}\n+\n /* Helper function for maybe_add_lambda_conv_op; build a CALL_EXPR with\n    indicated FN and NARGS, but do not initialize the return type or any of the\n    argument slots.  */"}]}