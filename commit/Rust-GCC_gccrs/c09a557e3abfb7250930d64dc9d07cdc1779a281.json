{"sha": "c09a557e3abfb7250930d64dc9d07cdc1779a281", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA5YTU1N2UzYWJmYjcyNTA5MzBkNjRkYzlkMDdjZGMxNzc5YTI4MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T10:04:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T10:04:20Z"}, "message": "[multiple changes]\n\n2009-04-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_type.adb, ali.adb, erroutc.adb: Minor code reorganization\n\t(no behaviour change): Use Append instead of Increment_Last followed\n\tby assignment.\n\n2009-04-20  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch3.adb (Make_Predefined_Primitive_Specs): Do not generate the\n\tdeclarations of all primitives associated with dispatching asynchronous,\n\tconditional and timed selects when dispaching calls are forbidden and\n\tselect statements are not allowed (such as in Ravenscar).\n\t(Predefined_Primitive_Bodies): Ditto for bodies.\n\n\t* exp_disp.ad (Make_DT): Do not create and populate the\n\tSelect_Specific_Data of the dispatch table when dispatching calls are\n\tforbidden and select statements are not allowed (such as in Ravenscar).\n\n2009-04-20  Robert Dewar  <dewar@adacore.com>\n\n\t* a-tifiio.adb: Minor reformatting\n\n2009-04-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socthi-vms.adb, g-socket.adb, g-socket.ads: inet_aton(3), unlike\n\tother C library functions, report *failure* with a zero status, and\n\tsuccess with a non-zero status.\n\n2009-04-20  Bob Duff  <duff@adacore.com>\n\n\t* sem.ads, sem.adb (Walk_Library_Items): New generic procedure.\n\t(Semantics): After analyzing each unit, Append it to the\n\tComp_Unit_List, if appropriate.\n\n\t* gnat1drv.adb (Check_Library_Items): New procedure for debugging\n\tpurposes.\n\t(Gnat1drv): Correct comment regarding Back_End_Mode.\n\n2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* gnat_ugn.texi: Add documentation for -fno-inline-small-functions.\n\nFrom-SVN: r146389", "tree": {"sha": "b23a67d3b31cdacbd0d5bfed4a0cbc29af7252a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b23a67d3b31cdacbd0d5bfed4a0cbc29af7252a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c09a557e3abfb7250930d64dc9d07cdc1779a281", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c09a557e3abfb7250930d64dc9d07cdc1779a281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c09a557e3abfb7250930d64dc9d07cdc1779a281", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c09a557e3abfb7250930d64dc9d07cdc1779a281/comments", "author": null, "committer": null, "parents": [{"sha": "7e728b0f0d131c8f9016b89a08f77e4f6479cbbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e728b0f0d131c8f9016b89a08f77e4f6479cbbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e728b0f0d131c8f9016b89a08f77e4f6479cbbb"}], "stats": {"total": 434, "additions": 361, "deletions": 73}, "files": [{"sha": "ebc1ea03e863f6b0fe6d0cf6fd2626f9fceb9d70", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -1,3 +1,45 @@\n+2009-04-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_type.adb, ali.adb, erroutc.adb: Minor code reorganization\n+\t(no behaviour change): Use Append instead of Increment_Last followed\n+\tby assignment.\n+\n+2009-04-20  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch3.adb (Make_Predefined_Primitive_Specs): Do not generate the\n+\tdeclarations of all primitives associated with dispatching asynchronous,\n+\tconditional and timed selects when dispaching calls are forbidden and\n+\tselect statements are not allowed (such as in Ravenscar).\n+\t(Predefined_Primitive_Bodies): Ditto for bodies.\n+\n+\t* exp_disp.ad (Make_DT): Do not create and populate the\n+\tSelect_Specific_Data of the dispatch table when dispatching calls are\n+\tforbidden and select statements are not allowed (such as in Ravenscar).\n+\n+2009-04-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-tifiio.adb: Minor reformatting\n+\n+2009-04-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socthi-vms.adb, g-socket.adb, g-socket.ads: inet_aton(3), unlike\n+\tother C library functions, report *failure* with a zero status, and\n+\tsuccess with a non-zero status.\n+\n+2009-04-20  Bob Duff  <duff@adacore.com>\n+\n+\t* sem.ads, sem.adb (Walk_Library_Items): New generic procedure.\n+\t(Semantics): After analyzing each unit, Append it to the\n+\tComp_Unit_List, if appropriate.\n+\n+\t* gnat1drv.adb (Check_Library_Items): New procedure for debugging\n+\tpurposes.\n+\t(Gnat1drv): Correct comment regarding Back_End_Mode.\n+\n+2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat_ugn.texi: Add documentation for -fno-inline-small-functions.\n+\n 2009-04-20  Thomas Quinot  <quinot@adacore.com>\n \n \t* s-taprop-irix.adb, s-taprop-tru64.adb, s-taprop-vms.adb,"}, {"sha": "720fcac394fc7ec72d9f498e59579f8142eadeb0", "filename": "gcc/ada/a-tifiio.adb", "status": "modified", "additions": 30, "deletions": 31, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fa-tifiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fa-tifiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tifiio.adb?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -290,11 +290,11 @@ package body Ada.Text_IO.Fixed_IO is\n                    and then Num'Small * 10.0**Scale < 10.0);\n \n    Exact : constant Boolean :=\n-                Float'Floor (Num'Small) = Float'Ceiling (Num'Small)\n-            or Float'Floor (1.0 / Num'Small) = Float'Ceiling (1.0 / Num'Small)\n-            or Num'Small >= 10.0**Max_Digits;\n+            Float'Floor (Num'Small) = Float'Ceiling (Num'Small)\n+             or Float'Floor (1.0 / Num'Small) = Float'Ceiling (1.0 / Num'Small)\n+             or Num'Small >= 10.0**Max_Digits;\n    --  True iff a numerator and denominator can be calculated such that\n-   --  their ratio exactly represents the small of Num\n+   --  their ratio exactly represents the small of Num.\n \n    procedure Put\n      (To   : out String;\n@@ -315,10 +315,8 @@ package body Ada.Text_IO.Fixed_IO is\n       Width : Field := 0)\n    is\n       pragma Unsuppress (Range_Check);\n-\n    begin\n       Aux.Get (File, Long_Long_Float (Item), Width);\n-\n    exception\n       when Constraint_Error => raise Data_Error;\n    end Get;\n@@ -328,10 +326,8 @@ package body Ada.Text_IO.Fixed_IO is\n       Width : Field := 0)\n    is\n       pragma Unsuppress (Range_Check);\n-\n    begin\n       Aux.Get (Current_In, Long_Long_Float (Item), Width);\n-\n    exception\n       when Constraint_Error => raise Data_Error;\n    end Get;\n@@ -342,10 +338,8 @@ package body Ada.Text_IO.Fixed_IO is\n       Last : out Positive)\n    is\n       pragma Unsuppress (Range_Check);\n-\n    begin\n       Aux.Gets (From, Long_Long_Float (Item), Last);\n-\n    exception\n       when Constraint_Error => raise Data_Error;\n    end Get;\n@@ -387,11 +381,13 @@ package body Ada.Text_IO.Fixed_IO is\n       Aft  : Field := Default_Aft;\n       Exp  : Field := Default_Exp)\n    is\n-      Fore : constant Integer := To'Length\n-                                - 1                      -- Decimal point\n-                                - Field'Max (1, Aft)     -- Decimal part\n-                                - Boolean'Pos (Exp /= 0) -- Exponent indicator\n-                                - Exp;                   -- Exponent\n+      Fore : constant Integer :=\n+               To'Length\n+                 - 1                      -- Decimal point\n+                 - Field'Max (1, Aft)     -- Decimal part\n+                 - Boolean'Pos (Exp /= 0) -- Exponent indicator\n+                 - Exp;                   -- Exponent\n+\n       Last : Natural;\n \n    begin\n@@ -426,13 +422,13 @@ package body Ada.Text_IO.Fixed_IO is\n       --  Add C to the output string To, updating Last\n \n       procedure Put_Digit (X : Digit);\n-      --  Add digit X to the output string (going from left to right),\n-      --  updating Last and Pos, and inserting the sign, leading zeros\n-      --  or a decimal point when necessary. After outputting the first\n-      --  digit, Pos must not be changed outside Put_Digit anymore\n+      --  Add digit X to the output string (going from left to right), updating\n+      --  Last and Pos, and inserting the sign, leading zeros or a decimal\n+      --  point when necessary. After outputting the first digit, Pos must not\n+      --  be changed outside Put_Digit anymore.\n \n       procedure Put_Int64 (X : Int64; Scale : Integer);\n-      --  Output the decimal number abs X * 10**Scale.\n+      --  Output the decimal number abs X * 10**Scale\n \n       procedure Put_Scaled\n         (X, Y, Z : Int64;\n@@ -469,6 +465,7 @@ package body Ada.Text_IO.Fixed_IO is\n       begin\n          if Last = To'First - 1 then\n             if X /= 0 or Pos <= 0 then\n+\n                --  Before outputting first digit, include leading space,\n                --  possible minus sign and, if the first digit is fractional,\n                --  decimal seperator and leading zeros.\n@@ -541,6 +538,7 @@ package body Ada.Text_IO.Fixed_IO is\n          --  If and only if more than one digit is output before the decimal\n          --  point, pos will be unequal to scale when outputting the first\n          --  digit.\n+\n          pragma Assert (Pos = Scale or else Last = To'First - 1);\n \n          Pos := Scale;\n@@ -560,15 +558,15 @@ package body Ada.Text_IO.Fixed_IO is\n          pragma Assert (E >= -Max_Digits);\n          AA : constant Field := E + A;\n          N  : constant Natural := (AA + Max_Digits - 1) / Max_Digits + 1;\n+\n          Q  : array (0 .. N - 1) of Int64 := (others => 0);\n-         --  Each element of Q has Max_Digits decimal digits, except\n-         --  the last, which has eAA rem Max_Digits. Only Q (Q'First)\n-         --  may have an absolute value equal to or larger than 10**Max_Digits.\n-         --  Only the absolute value of the elements is not significant, not\n-         --  the sign.\n+         --  Each element of Q has Max_Digits decimal digits, except the\n+         --  last, which has eAA rem Max_Digits. Only Q (Q'First) may have an\n+         --  absolute value equal to or larger than 10**Max_Digits. Only the\n+         --  absolute value of the elements is not significant, not the sign.\n \n-         XX    : Int64 := X;\n-         YY    : Int64 := Y;\n+         XX : Int64 := X;\n+         YY : Int64 := Y;\n \n       begin\n          for J in Q'Range loop\n@@ -584,9 +582,9 @@ package body Ada.Text_IO.Fixed_IO is\n          if -E > A then\n             pragma Assert (N = 1);\n \n-            Discard_Extra_Digits :\n-            declare\n+            Discard_Extra_Digits : declare\n                Factor : constant Int64 := 10**(-E - A);\n+\n             begin\n                --  The scaling factors were such that the first division\n                --  produced more digits than requested. So divide away extra\n@@ -602,8 +600,9 @@ package body Ada.Text_IO.Fixed_IO is\n             end Discard_Extra_Digits;\n          end if;\n \n-         --  At this point XX is a remainder and we need to determine if\n-         --  the quotient in Q must be rounded away from zero.\n+         --  At this point XX is a remainder and we need to determine if the\n+         --  quotient in Q must be rounded away from zero.\n+\n          --  As XX is less than the divisor, it is safe to take its absolute\n          --  without chance of overflow. The check to see if XX is at least\n          --  half the absolute value of the divisor must be done carefully to"}, {"sha": "5e5c660caa5cec43cd98c0f98b90a04ae72610c8", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -482,8 +482,7 @@ package body ALI is\n          end if;\n \n          loop\n-            Name_Len := Name_Len + 1;\n-            Name_Buffer (Name_Len) := Getc;\n+            Add_Char_To_Name_Buffer (Getc);\n \n             exit when At_End_Of_Field and not Ignore_Spaces;\n \n@@ -936,8 +935,7 @@ package body ALI is\n \n             Name_Len := 0;\n             while not At_Eol loop\n-               Name_Len := Name_Len + 1;\n-               Name_Buffer (Name_Len) := Getc;\n+               Add_Char_To_Name_Buffer (Getc);\n             end loop;\n \n             --  If -fstack-check, record that it occurred\n@@ -2000,8 +1998,7 @@ package body ALI is\n                if Nextc not in '0' .. '9' then\n                   Name_Len := 0;\n                   while not At_End_Of_Field loop\n-                     Name_Len := Name_Len + 1;\n-                     Name_Buffer (Name_Len) := Getc;\n+                     Add_Char_To_Name_Buffer (Getc);\n                   end loop;\n \n                   --  Set the subunit name. Note that we use Name_Find rather\n@@ -2022,8 +2019,7 @@ package body ALI is\n                   Name_Len := 0;\n \n                   while not At_End_Of_Field loop\n-                     Name_Len := Name_Len + 1;\n-                     Name_Buffer (Name_Len) := Getc;\n+                     Add_Char_To_Name_Buffer (Getc);\n                   end loop;\n \n                   Sdep.Table (Sdep.Last).Rfile := Name_Enter;"}, {"sha": "23386b89f93a93be1a737213b0e587aba230875c", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -926,8 +926,7 @@ package body Erroutc is\n       Name_Len := 0;\n \n       while J <= Text'Last and then Text (J) in 'A' .. 'Z' loop\n-         Name_Len := Name_Len + 1;\n-         Name_Buffer (Name_Len) := Text (J);\n+         Add_Char_To_Name_Buffer (Text (J));\n          J := J + 1;\n       end loop;\n "}, {"sha": "629bcad96c9ba79a061064cee798c670a8ef577c", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -7818,12 +7818,13 @@ package body Exp_Ch3 is\n       --    Disp_Timed_Select\n \n       --  These operations cannot be implemented on VM targets, so we simply\n-      --  disable their generation in this case. We also disable generation\n-      --  of these bodies if No_Dispatching_Calls is active.\n+      --  disable their generation in this case. Disable the generation of\n+      --  these bodies if No_Dispatching_Calls or Ravenscar is active.\n \n       if Ada_Version >= Ada_05\n         and then VM_Target = No_VM\n-        and then RTE_Available (RE_Select_Specific_Data)\n+        and then not Restriction_Active (No_Dispatching_Calls)\n+        and then not Restriction_Active (No_Select_Statements)\n       then\n          --  These primitives are defined abstract in interface types\n \n@@ -8311,19 +8312,19 @@ package body Exp_Ch3 is\n       --  The interface versions will have null bodies\n \n       --  These operations cannot be implemented on VM targets, so we simply\n-      --  disable their generation in this case. We also disable generation\n-      --  of these bodies if No_Dispatching_Calls is active.\n+      --  disable their generation in this case. Disable the generation of\n+      --  these bodies if No_Dispatching_Calls or Ravenscar is active.\n \n       if Ada_Version >= Ada_05\n         and then VM_Target = No_VM\n-        and then not Restriction_Active (No_Dispatching_Calls)\n         and then not Is_Interface (Tag_Typ)\n         and then\n           ((Is_Interface (Etype (Tag_Typ))\n               and then Is_Limited_Record (Etype (Tag_Typ)))\n            or else (Is_Concurrent_Record_Type (Tag_Typ)\n-                     and then Has_Interfaces (Tag_Typ)))\n-        and then RTE_Available (RE_Select_Specific_Data)\n+                      and then Has_Interfaces (Tag_Typ)))\n+        and then not Restriction_Active (No_Dispatching_Calls)\n+        and then not Restriction_Active (No_Select_Statements)\n       then\n          Append_To (Res, Make_Disp_Asynchronous_Select_Body (Tag_Typ));\n          Append_To (Res, Make_Disp_Conditional_Select_Body  (Tag_Typ));"}, {"sha": "54a823a848af74689c59e3d10467b4ed48ecaacb", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -4749,6 +4749,7 @@ package body Exp_Disp is\n            and then not Is_Abstract_Type (Typ)\n            and then not Is_Controlled (Typ)\n            and then not Restriction_Active (No_Dispatching_Calls)\n+           and then not Restriction_Active (No_Select_Statements)\n          then\n             Append_To (Result,\n               Make_Object_Declaration (Loc,\n@@ -5545,13 +5546,16 @@ package body Exp_Disp is\n          Append_List_To (Result, Elab_Code);\n       end if;\n \n-      --  Populate the two auxiliary tables used for dispatching\n-      --  asynchronous, conditional and timed selects for synchronized\n-      --  types that implement a limited interface.\n+      --  Populate the two auxiliary tables used for dispatching asynchronous,\n+      --  conditional and timed selects for synchronized types that implement\n+      --  a limited interface. Skip this step in Ravenscar profile or when\n+      --  general dispatching is forbidden.\n \n       if Ada_Version >= Ada_05\n         and then Is_Concurrent_Record_Type (Typ)\n         and then Has_Interfaces (Typ)\n+        and then not Restriction_Active (No_Dispatching_Calls)\n+        and then not Restriction_Active (No_Select_Statements)\n       then\n          Append_List_To (Result,\n            Make_Select_Specific_Data_Table (Typ));"}, {"sha": "962a8fbae6030a19c03fedeb8fb76677d6d4bd2c", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -179,6 +179,10 @@ package body GNAT.Sockets is\n    --  Reconstruct a Duration value from a Timeval record (seconds and\n    --  microseconds).\n \n+   procedure Raise_Socket_Error (Error : Integer);\n+   --  Raise Socket_Error with an exception message describing the error code\n+   --  from errno.\n+\n    procedure Raise_Host_Error (H_Error : Integer);\n    --  Raise Host_Error exception with message describing error code (note\n    --  hstrerror seems to be obsolete) from h_errno.\n@@ -1288,7 +1292,7 @@ package body GNAT.Sockets is\n \n       Res := Inet_Aton (To_Chars_Ptr (Img'Unchecked_Access), Addr'Address);\n \n-      if Res = Failure then\n+      if Res = 0 then\n          Raise_Socket_Error (SOSC.EINVAL);\n       end if;\n "}, {"sha": "3680d751ff6ce8d32accafe4220093811bb5b0f8", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -1108,10 +1108,6 @@ package GNAT.Sockets is\n \n private\n \n-   procedure Raise_Socket_Error (Error : Integer);\n-   --  Raise Socket_Error with an exception message describing the error code\n-   --  from errno.\n-\n    type Socket_Type is new Integer;\n    No_Socket : constant Socket_Type := -1;\n "}, {"sha": "d065f998073e06e433bce5830d7b7c04ae21b2b3", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -358,7 +358,8 @@ package body GNAT.Sockets.Thin is\n    ---------------\n \n    --  VMS does not support inet_aton(3), so emulate it here in terms of\n-   --  inet_addr(3).\n+   --  inet_addr(3). Note: unlike other C functions, inet_aton reports\n+   --  failure with a 0 return, and success with a non-zero return.\n \n    function Inet_Aton\n      (Cp  : C.Strings.chars_ptr;\n@@ -373,7 +374,7 @@ package body GNAT.Sockets.Thin is\n       pragma Import (C, C_Inet_Addr, \"DECC$INET_ADDR\");\n    begin\n       if Cp = Null_Ptr or else Inp = Null_Address then\n-         Raise_Socket_Error (SOSC.EINVAL);\n+         return 0;\n       end if;\n \n       --  Special case for the all-ones broadcast address: this address has the\n@@ -382,16 +383,16 @@ package body GNAT.Sockets.Thin is\n \n       if String'(Value (Cp)) = \"255.255.255.255\" then\n          Conv.To_Pointer (Inp).all := -1;\n-         return 0;\n+         return 1;\n       end if;\n \n       Res := C_Inet_Addr (Cp);\n       if Res = -1 then\n-         return Res;\n+         return 0;\n       end if;\n \n       Conv.To_Pointer (Inp).all := Res;\n-      return 0;\n+      return 1;\n    end Inet_Aton;\n \n    ----------------"}, {"sha": "53b789e2901df23a5a1095ede6297b94f76540d7", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -90,6 +90,9 @@ procedure Gnat1drv is\n    --  Called when we are not generating code, to check if -gnatR was requested\n    --  and if so, explain that we will not be honoring the request.\n \n+   procedure Check_Library_Items;\n+   --  For debugging -- checks the behavior of Walk_Library_Items\n+\n    --------------------\n    -- Check_Bad_Body --\n    --------------------\n@@ -251,6 +254,29 @@ procedure Gnat1drv is\n       end if;\n    end Check_Rep_Info;\n \n+   -------------------------\n+   -- Check_Library_Items --\n+   -------------------------\n+\n+   procedure Check_Library_Items is\n+      --  Walk_Library_Items has plenty of assertions, so all we need to do is\n+      --  call it.\n+\n+      procedure Action (Item : Node_Id);\n+      --  Action passed to Walk_Library_Items to do nothing\n+\n+      procedure Action (Item : Node_Id) is\n+      begin\n+         null;\n+      end Action;\n+\n+      procedure Walk is new Sem.Walk_Library_Items (Action);\n+\n+      --  Start of processing for Check_Library_Items\n+   begin\n+      Walk;\n+   end Check_Library_Items;\n+\n --  Start of processing for Gnat1drv\n \n begin\n@@ -578,9 +604,9 @@ begin\n          Back_End_Mode := Skip;\n       end if;\n \n-      --  At this stage Call_Back_End is set to indicate if the backend should\n-      --  be called to generate code. If it is not set, then code generation\n-      --  has been turned off, even though code was requested by the original\n+      --  At this stage Back_End_Mode is set to indicate if the backend should\n+      --  be called to generate code. If it is Skip, then code generation has\n+      --  been turned off, even though code was requested by the original\n       --  command. This is not an error from the user point of view, but it is\n       --  an error from the point of view of the gcc driver, so we must exit\n       --  with an error status.\n@@ -706,6 +732,8 @@ begin\n       Namet.Lock;\n       Stringt.Lock;\n \n+      Check_Library_Items;  --  For debugging\n+\n       --  Here we call the back end to generate the output code\n \n       Generating_Code := True;"}, {"sha": "7d573f7175ed0f3ef6e5a3ea25e6edd4cff0c948", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -3802,9 +3802,14 @@ effect if this switch is present.\n \n @item -fno-inline-functions\n @cindex @option{-fno-inline-functions} (@command{gcc})\n-Suppresses automatic inlining of small subprograms, which is enabled\n+Suppresses automatic inlining of simple subprograms, which is enabled\n if @option{-O3} is used.\n \n+@item -fno-inline-small-functions\n+@cindex @option{-fno-inline-small-functions} (@command{gcc})\n+Suppresses automatic inlining of small subprograms, which is enabled\n+if @option{-O2} is used.\n+\n @item -fno-inline-functions-called-once\n @cindex @option{-fno-inline-functions-called-once} (@command{gcc})\n Suppresses inlining of subprograms local to the unit and called once"}, {"sha": "c6c2c0011b5a102aff8bb9b179f44d62512045c6", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 201, "deletions": 1, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -27,13 +27,15 @@\n with Atree;    use Atree;\n with Debug;    use Debug;\n with Debug_A;  use Debug_A;\n+with Elists;   use Elists;\n with Errout;   use Errout;\n with Expander; use Expander;\n with Fname;    use Fname;\n with HLO;      use HLO;\n with Lib;      use Lib;\n with Lib.Load; use Lib.Load;\n with Nlists;   use Nlists;\n+with Output;   use Output;\n with Sem_Attr; use Sem_Attr;\n with Sem_Ch2;  use Sem_Ch2;\n with Sem_Ch3;  use Sem_Ch3;\n@@ -52,6 +54,7 @@ with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n with Uintp;    use Uintp;\n+with Uname;    use Uname;\n \n with Unchecked_Deallocation;\n \n@@ -65,6 +68,16 @@ package body Sem is\n    --  generic context, it is empty. At the moment, it is only used\n    --  for avoiding freezing of external references in generics.\n \n+   Comp_Unit_List : Elist_Id := No_Elist;\n+   --  Used by Walk_Library_Items. This is a list of N_Compilation_Unit nodes\n+   --  processed by Semantics, in an appropriate order. Initialized to\n+   --  No_Elist, because it's too early to call New_Elmt_List; we will set it\n+   --  to New_Elmt_List on first use.\n+\n+   Ignore_Comp_Units : Boolean := False;\n+   --  If True, we suppress appending compilation units onto the\n+   --  Comp_Unit_List.\n+\n    -------------\n    -- Analyze --\n    -------------\n@@ -1384,7 +1397,44 @@ package body Sem is\n             New_Nodes_OK := 0;\n          end if;\n \n-         Do_Analyze;\n+         --  Do analysis, and then append the compilation unit onto the\n+         --  Comp_Unit_List, if appropriate. This is done after analysis, so if\n+         --  this unit depends on some others, they have already been\n+         --  appended. We ignore bodies, except for the main unit itself, and\n+         --  everything those bodies depend upon.\n+\n+         if Ignore_Comp_Units then\n+            Do_Analyze;\n+            pragma Assert (Ignore_Comp_Units);  --  still\n+\n+         elsif Nkind (Unit (Comp_Unit)) in N_Proper_Body\n+           and then not In_Extended_Main_Source_Unit (Comp_Unit)\n+         then\n+            Ignore_Comp_Units := True;\n+            Do_Analyze;\n+            pragma Assert (Ignore_Comp_Units);\n+            Ignore_Comp_Units := False;\n+\n+         else\n+            Do_Analyze;\n+            --  pragma Assert (not Ignore_Comp_Units);\n+            --  The above assertion is *almost* true. It fails only when a\n+            --  subunit with's its parent procedure body, which has no explicit\n+            --  spec.\n+\n+            if No (Comp_Unit_List) then  --  Initialize if first time\n+               Comp_Unit_List := New_Elmt_List;\n+            end if;\n+            if not Ignore_Comp_Units then  --  See above commented-out Assert\n+               Append_Elmt (Comp_Unit, Comp_Unit_List);\n+            end if;\n+\n+            --  Ignore all units after main unit\n+\n+            if Comp_Unit = Cunit (Main_Unit) then\n+               Ignore_Comp_Units := True;\n+            end if;\n+         end if;\n       end if;\n \n       --  Save indication of dynamic elaboration checks for ALI file\n@@ -1405,4 +1455,154 @@ package body Sem is\n       Restore_Opt_Config_Switches (Save_Config_Switches);\n       Expander_Mode_Restore;\n    end Semantics;\n+\n+   ------------------------\n+   -- Walk_Library_Items --\n+   ------------------------\n+\n+   procedure Walk_Library_Items is\n+      Enable_Output : constant Boolean := False;\n+      --  Set to True to print out the items as we go (for debugging)\n+\n+      procedure Do_Action (CU : Node_Id; Item : Node_Id);\n+      --  Calls Action, with some validity checks\n+\n+      ---------------\n+      -- Do_Action --\n+      ---------------\n+\n+      procedure Do_Action (CU : Node_Id; Item : Node_Id) is\n+      begin\n+         --  This calls Action at the end. All the preceding code is just\n+         --  assertions and debugging output.\n+\n+         case Nkind (Item) is\n+            when N_Generic_Subprogram_Declaration |\n+              N_Generic_Package_Declaration |\n+              N_Package_Declaration |\n+              N_Subprogram_Declaration |\n+              N_Subprogram_Renaming_Declaration |\n+              N_Package_Renaming_Declaration |\n+              N_Generic_Function_Renaming_Declaration |\n+              N_Generic_Package_Renaming_Declaration |\n+              N_Generic_Procedure_Renaming_Declaration =>\n+               null;  --  Specs are OK\n+\n+            when N_Package_Body | N_Subprogram_Body =>\n+               --  A body must be the main unit\n+\n+               pragma Assert (CU = Cunit (Main_Unit));\n+               null;\n+\n+            --  All other cases cannot happen\n+\n+            when N_Function_Instantiation |\n+              N_Procedure_Instantiation |\n+              N_Package_Instantiation =>\n+               pragma Assert (False, \"instantiation\");\n+               null;\n+\n+            when N_Subunit =>\n+               pragma Assert (False, \"subunit\");\n+               null;\n+\n+            when others =>\n+               pragma Assert (False);\n+               null;\n+         end case;\n+\n+         if Present (CU) then\n+            pragma Assert (Item /= Stand.Standard_Package_Node);\n+\n+            if Enable_Output then\n+               Write_Unit_Name (Unit_Name (Get_Cunit_Unit_Number (CU)));\n+               Write_Str (\", Unit_Number = \");\n+               Write_Int (Int (Get_Cunit_Unit_Number (CU)));\n+               Write_Str (\", \");\n+               Write_Str (Node_Kind'Image (Nkind (Item)));\n+               if Item /= Original_Node (Item) then\n+                  Write_Str (\", orig = \");\n+                  Write_Str (Node_Kind'Image (Nkind (Original_Node (Item))));\n+               end if;\n+               Write_Eol;\n+            end if;\n+\n+         else  --  Must be Standard\n+            pragma Assert (Item = Stand.Standard_Package_Node);\n+            if Enable_Output then\n+               Write_Line (\"Standard\");\n+            end if;\n+         end if;\n+\n+         Action (Item);\n+      end Do_Action;\n+\n+      Cur : Elmt_Id := First_Elmt (Comp_Unit_List);\n+\n+      --  Start of processing for Walk_Library_Items\n+\n+   begin\n+      if Enable_Output then\n+         Write_Line (\"Walk_Library_Items:\");\n+         Indent;\n+      end if;\n+\n+      --  Do Standard first, then walk the Comp_Unit_List\n+\n+      Do_Action (Empty, Standard_Package_Node);\n+\n+      while Present (Cur) loop\n+         declare\n+            CU : constant Node_Id := Node (Cur);\n+            N  : constant Node_Id := Unit (CU);\n+         begin\n+            pragma Assert (Nkind (CU) = N_Compilation_Unit);\n+\n+            case Nkind (N) is\n+               --  If it's a body, then ignore it, unless it's an instance (in\n+               --  which case we do the spec), or it's the main unit (in which\n+               --  case we do it). Note that it could be both.\n+\n+               when N_Package_Body | N_Subprogram_Body =>\n+                  declare\n+                     Entity : Node_Id := N;\n+                  begin\n+                     if Nkind (N) = N_Subprogram_Body then\n+                        Entity := Specification (Entity);\n+                     end if;\n+                     Entity := Defining_Unit_Name (Entity);\n+                     if Nkind (Entity) not in N_Entity then\n+                        --  Must be N_Defining_Program_Unit_Name\n+                        Entity := Defining_Identifier (Entity);\n+                     end if;\n+\n+                     if Is_Generic_Instance (Entity) then\n+                        Do_Action (CU, Unit (Library_Unit (CU)));\n+                     end if;\n+                  end;\n+\n+                  if CU = Cunit (Main_Unit) then\n+                     --  Must come last\n+\n+                     pragma Assert (No (Next_Elmt (Cur)));\n+\n+                     Do_Action (CU, N);\n+                  end if;\n+\n+               --  It's a spec, so just do it\n+\n+               when others =>\n+                  Do_Action (CU, N);\n+            end case;\n+         end;\n+\n+         Next_Elmt (Cur);\n+      end loop;\n+\n+      if Enable_Output then\n+         Outdent;\n+         Write_Line (\"end Walk_Library_Items.\");\n+      end if;\n+   end Walk_Library_Items;\n+\n end Sem;"}, {"sha": "544178bc921b6dacf656b71735660ef8105ac1c6", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -640,4 +640,20 @@ package Sem is\n    --  is False, then the status of the check can be determined simply by\n    --  examining Scope_Checks (C), so this routine is not called in that case.\n \n+   generic\n+      with procedure Action (Item : Node_Id);\n+   procedure Walk_Library_Items;\n+   --  Primarily for use by SofCheck Inspector. Must be called after semantic\n+   --  analysis (and expansion) are complete. Walks each relevant library item,\n+   --  calling Action for each, in an order such that one will not run across\n+   --  forward references. Each Item passed to Action is the declaration or\n+   --  body of a library unit, including generics and renamings. The first item\n+   --  is the N_Package_Declaration node for package Standard. Bodies are not\n+   --  included, except for the main unit itself, which always comes last.\n+   --\n+   --  Item is never a subunit.\n+   --\n+   --  Item is never an instantiation. Instead, the instance declaration is\n+   --  passed, and (if the instantiation is the main unit), the instance body.\n+\n end Sem;"}, {"sha": "4e03642b2c693c4ce223148bf814b4df12e570a7", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c09a557e3abfb7250930d64dc9d07cdc1779a281/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=c09a557e3abfb7250930d64dc9d07cdc1779a281", "patch": "@@ -312,8 +312,7 @@ package body Sem_Type is\n          end loop;\n \n          All_Interp.Table (All_Interp.Last) := (Name, Typ, Abstr_Op);\n-         All_Interp.Increment_Last;\n-         All_Interp.Table (All_Interp.Last) := No_Interp;\n+         All_Interp.Append (No_Interp);\n       end Add_Entry;\n \n       ----------------------------\n@@ -634,8 +633,7 @@ package body Sem_Type is\n                      then\n                         All_Interp.Table (All_Interp.Last) :=\n                           (H, Etype (H), Empty);\n-                        All_Interp.Increment_Last;\n-                        All_Interp.Table (All_Interp.Last) := No_Interp;\n+                        All_Interp.Append (No_Interp);\n                         goto Next_Homograph;\n \n                      elsif Scope (H) /= Standard_Standard then\n@@ -2625,8 +2623,7 @@ package body Sem_Type is\n       Map_Ptr : Int;\n \n    begin\n-      All_Interp.Increment_Last;\n-      All_Interp.Table (All_Interp.Last) := No_Interp;\n+      All_Interp.Append (No_Interp);\n \n       Map_Ptr := Headers (Hash (N));\n "}]}