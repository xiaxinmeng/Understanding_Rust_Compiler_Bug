{"sha": "0a162bde464b45ccfdc3045d0c6e515981cc76d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGExNjJiZGU0NjRiNDVjY2ZkYzMwNDVkMGM2ZTUxNTk4MWNjNzZkMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-08-12T22:26:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-08-12T22:26:32Z"}, "message": "re PR libstdc++/16956 ([3.4 only] std::stringbuf::seekoff return wrong position value)\n\n2004-08-12  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/16956\n\t* include/bits/sstream.tcc (basic_stringbuf<>::seekoff): Add __off\n\tto the returned value, reorganize a bit.\n\t* testsuite/27_io/basic_stringbuf/seekoff/char/16956.cc: New.\n\t* testsuite/27_io/basic_stringbuf/seekoff/wchar_t/16956.cc: New.\n\n\t* testsuite/27_io/basic_stringbuf/seekoff/char/1.cc: Remove junk.\n\t* testsuite/27_io/basic_stringbuf/seekoff/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/seekpos/char/1.cc: Likewise.\n\t* testsuite/27_io/basic_stringbuf/seekpos/wchar_t/1.cc: Likewise.\n\nFrom-SVN: r85910", "tree": {"sha": "3ffbfad7e0c608bace637fa9c73d9c009e271eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ffbfad7e0c608bace637fa9c73d9c009e271eb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a162bde464b45ccfdc3045d0c6e515981cc76d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a162bde464b45ccfdc3045d0c6e515981cc76d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a162bde464b45ccfdc3045d0c6e515981cc76d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a162bde464b45ccfdc3045d0c6e515981cc76d1/comments", "author": null, "committer": null, "parents": [{"sha": "c5443745bd596fa6f7a9d5a6e6e90b03abb28463", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5443745bd596fa6f7a9d5a6e6e90b03abb28463", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5443745bd596fa6f7a9d5a6e6e90b03abb28463"}], "stats": {"total": 217, "additions": 156, "deletions": 61}, "files": [{"sha": "512f1643709e00921253bd83504319711676d336", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0a162bde464b45ccfdc3045d0c6e515981cc76d1", "patch": "@@ -1,3 +1,16 @@\n+2004-08-12  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/16956\n+\t* include/bits/sstream.tcc (basic_stringbuf<>::seekoff): Add __off\n+\tto the returned value, reorganize a bit.\n+\t* testsuite/27_io/basic_stringbuf/seekoff/char/16956.cc: New.\n+\t* testsuite/27_io/basic_stringbuf/seekoff/wchar_t/16956.cc: New.\n+\n+\t* testsuite/27_io/basic_stringbuf/seekoff/char/1.cc: Remove junk.\n+\t* testsuite/27_io/basic_stringbuf/seekoff/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/seekpos/char/1.cc: Likewise.\n+\t* testsuite/27_io/basic_stringbuf/seekpos/wchar_t/1.cc: Likewise.\n+\n 2004-08-12  Paul Brook  <paul@codesourcery.com>\n \n \t* config/cpu/arm/cxxabi_tweaks.h: Define __cxa_vec_ctor_return and"}, {"sha": "137d6b3fff77fa37bf713f951079d9b193b02fda", "filename": "libstdc++-v3/include/bits/sstream.tcc", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsstream.tcc?ref=0a162bde464b45ccfdc3045d0c6e515981cc76d1", "patch": "@@ -1,6 +1,6 @@\n // String based streams -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2001, 2002, 2003\n+// Copyright (C) 1997, 1998, 1999, 2001, 2002, 2003, 2004\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -147,28 +147,28 @@ namespace std\n \n \t  _M_update_egptr();\n \n-\t  off_type __newoffi = 0;\n-\t  off_type __newoffo = 0;\n+\t  off_type __newoffi = __off;\n+\t  off_type __newoffo = __newoffi;\n \t  if (__way == ios_base::cur)\n \t    {\n-\t      __newoffi = this->gptr() - __beg;\n-\t      __newoffo = this->pptr() - __beg;\n+\t      __newoffi += this->gptr() - __beg;\n+\t      __newoffo += this->pptr() - __beg;\n \t    }\n \t  else if (__way == ios_base::end)\n-\t    __newoffo = __newoffi = this->egptr() - __beg;\n+\t    __newoffo = __newoffi += this->egptr() - __beg;\n \n \t  if ((__testin || __testboth)\n-\t      && __newoffi + __off >= 0\n-\t      && this->egptr() - __beg >= __newoffi + __off)\n+\t      && __newoffi >= 0\n+\t      && this->egptr() - __beg >= __newoffi)\n \t    {\n-\t      this->gbump((__beg + __newoffi + __off) - this->gptr());\n+\t      this->gbump((__beg + __newoffi) - this->gptr());\n \t      __ret = pos_type(__newoffi);\n \t    }\n \t  if ((__testout || __testboth)\n-\t      && __newoffo + __off >= 0\n-\t      && this->egptr() - __beg >= __newoffo + __off)\n+\t      && __newoffo >= 0\n+\t      && this->egptr() - __beg >= __newoffo)\n \t    {\n-\t      this->pbump((__beg + __newoffo + __off) - this->pptr());\n+\t      this->pbump((__beg + __newoffo) - this->pptr());\n \t      __ret = pos_type(__newoffo);\n \t    }\n \t}"}, {"sha": "70d2fd6b3afbb49179d42300bbc6a5213b626bb9", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/seekoff/char/1.cc", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fchar%2F1.cc?ref=0a162bde464b45ccfdc3045d0c6e515981cc76d1", "patch": "@@ -1,6 +1,6 @@\n // 981208 bkoz test functionality of basic_stringbuf for char_type == char\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -23,31 +23,22 @@\n #include <testsuite_hooks.h>\n \n std::string str_01(\"mykonos. . . or what?\");\n-std::string str_02(\"paris, or sainte-maxime?\");\n-std::string str_03;\n std::stringbuf strb_01(str_01);\n-std::stringbuf strb_02(str_02, std::ios_base::in);\n-std::stringbuf strb_03(str_03, std::ios_base::out);\n \n // test overloaded virtual functions\n void test04() \n {\n   bool test __attribute__((unused)) = true;\n   std::string \t\tstr_tmp;\n-  std::stringbuf \t\tstrb_tmp;\n   std::streamsize \t\tstrmsz_1, strmsz_2;\n   typedef std::stringbuf::int_type int_type;\n   typedef std::stringbuf::traits_type traits_type;\n   typedef std::stringbuf::pos_type pos_type;\n   typedef std::stringbuf::off_type off_type;\n \n   int_type c1 = strb_01.sbumpc();\n-  int_type c2 = strb_02.sbumpc();\n-  int_type c3 = strb_01.sbumpc();\n+  int_type c2, c3;\n \n-  // PUT\n-  strb_03.str(str_01); //reset\n-  \n   // BUFFER MANAGEMENT & POSITIONING\n \n   // seekoff\n@@ -58,8 +49,7 @@ void test04()\n   off_type off_1 = 0;\n   off_type off_2 = 0;\n   strb_01.str(str_01); //in|out (\"mykonos. . . or what?\");\n-  strb_02.str(str_02); //in (\"paris, or sainte-maxime?\");\n-  strb_03.str(str_03); //out (\"\")\n+\n   //IN|OUT\n   //beg\n   pt_1 = strb_01.pubseekoff(2, std::ios_base::beg);"}, {"sha": "8e85a03961f72714beb7fe30f0db418dd2be0730", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/seekoff/char/16956.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fchar%2F16956.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fchar%2F16956.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fchar%2F16956.cc?ref=0a162bde464b45ccfdc3045d0c6e515981cc76d1", "patch": "@@ -0,0 +1,61 @@\n+// 2004-08-12  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.7.1.3 Overridden virtual functions\n+\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/16956\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  typedef stringbuf::int_type int_type;\n+  typedef stringbuf::traits_type traits_type;\n+  typedef stringbuf::pos_type pos_type;\n+  typedef stringbuf::off_type off_type;\n+\n+  stringbuf strb_01(\"lara's place\", ios_base::in);\n+  pos_type pt_1 = strb_01.pubseekoff(5, ios_base::cur, ios_base::in);\n+  int_type c1 = strb_01.sgetc();\n+  VERIFY( c1 != traits_type::eof() );\n+  pos_type pt_2 = strb_01.pubseekoff(2, ios_base::cur, ios_base::in);\n+  pos_type pt_3 = strb_01.pubseekpos(pt_1, ios_base::in);\n+  int_type c2 = strb_01.sbumpc();\n+  VERIFY( off_type(pt_3) == off_type(pt_2) - 2 );\n+  VERIFY( c2 == c1 );\n+\n+  stringbuf strb_02(\"-\", ios_base::out);\n+  pos_type pt_4 = strb_02.pubseekoff(0, ios_base::cur, ios_base::out);\n+  strb_02.sputn(\"red\", 3);\n+  pos_type pt_5 = strb_02.pubseekoff(-3, ios_base::cur, ios_base::out);\n+  strb_02.pubseekpos(pt_5, ios_base::out);\n+  VERIFY( off_type(pt_5) == off_type(pt_4) );\n+  strb_02.sputn(\"blu\", 3);\n+  VERIFY( strb_02.str() == \"blu\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "6177140c8034b4b6422c79f9422ed3a7ecdda1aa", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/seekoff/wchar_t/1.cc", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fwchar_t%2F1.cc?ref=0a162bde464b45ccfdc3045d0c6e515981cc76d1", "patch": "@@ -23,30 +23,21 @@\n #include <testsuite_hooks.h>\n \n std::wstring str_01(L\"mykonos. . . or what?\");\n-std::wstring str_02(L\"paris, or sainte-maxime?\");\n-std::wstring str_03;\n std::wstringbuf strb_01(str_01);\n-std::wstringbuf strb_02(str_02, std::ios_base::in);\n-std::wstringbuf strb_03(str_03, std::ios_base::out);\n \n // test overloaded virtual functions\n void test04() \n {\n   bool test __attribute__((unused)) = true;\n   std::wstring \t\tstr_tmp;\n-  std::wstringbuf \t\tstrb_tmp;\n   std::streamsize \t\tstrmsz_1, strmsz_2;\n   typedef std::wstringbuf::int_type int_type;\n   typedef std::wstringbuf::traits_type traits_type;\n   typedef std::wstringbuf::pos_type pos_type;\n   typedef std::wstringbuf::off_type off_type;\n \n   int_type c1 = strb_01.sbumpc();\n-  int_type c2 = strb_02.sbumpc();\n-  int_type c3 = strb_01.sbumpc();\n-\n-  // PUT\n-  strb_03.str(str_01); //reset\n+  int_type c2, c3;\n   \n   // BUFFER MANAGEMENT & POSITIONING\n \n@@ -58,8 +49,7 @@ void test04()\n   off_type off_1 = 0;\n   off_type off_2 = 0;\n   strb_01.str(str_01); //in|out (\"mykonos. . . or what?\");\n-  strb_02.str(str_02); //in (\"paris, or sainte-maxime?\");\n-  strb_03.str(str_03); //out (\"\")\n+\n   //IN|OUT\n   //beg\n   pt_1 = strb_01.pubseekoff(2, std::ios_base::beg);"}, {"sha": "6b43b385cd15d9a75d4ba2b52611c202385d60ea", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/seekoff/wchar_t/16956.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fwchar_t%2F16956.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fwchar_t%2F16956.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekoff%2Fwchar_t%2F16956.cc?ref=0a162bde464b45ccfdc3045d0c6e515981cc76d1", "patch": "@@ -0,0 +1,61 @@\n+// 2004-08-12  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.7.1.3 Overridden virtual functions\n+\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/16956\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  typedef wstringbuf::int_type int_type;\n+  typedef wstringbuf::traits_type traits_type;\n+  typedef wstringbuf::pos_type pos_type;\n+  typedef wstringbuf::off_type off_type;\n+\n+  wstringbuf strb_01(L\"lara's place\", ios_base::in);\n+  pos_type pt_1 = strb_01.pubseekoff(5, ios_base::cur, ios_base::in);\n+  int_type c1 = strb_01.sgetc();\n+  VERIFY( c1 != traits_type::eof() );\n+  pos_type pt_2 = strb_01.pubseekoff(2, ios_base::cur, ios_base::in);\n+  pos_type pt_3 = strb_01.pubseekpos(pt_1, ios_base::in);\n+  int_type c2 = strb_01.sbumpc();\n+  VERIFY( off_type(pt_3) == off_type(pt_2) - 2 );\n+  VERIFY( c2 == c1 );\n+\n+  wstringbuf strb_02(L\"-\", ios_base::out);\n+  pos_type pt_4 = strb_02.pubseekoff(0, ios_base::cur, ios_base::out);\n+  strb_02.sputn(L\"red\", 3);\n+  pos_type pt_5 = strb_02.pubseekoff(-3, ios_base::cur, ios_base::out);\n+  strb_02.pubseekpos(pt_5, ios_base::out);\n+  VERIFY( off_type(pt_5) == off_type(pt_4) );\n+  strb_02.sputn(L\"blu\", 3);\n+  VERIFY( strb_02.str() == L\"blu\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "2420a80106b3a2554b6f867c913f8332a9bddc9a", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/seekpos/char/1.cc", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fchar%2F1.cc?ref=0a162bde464b45ccfdc3045d0c6e515981cc76d1", "patch": "@@ -23,43 +23,33 @@\n #include <testsuite_hooks.h>\n \n std::string str_01(\"mykonos. . . or what?\");\n-std::string str_02(\"paris, or sainte-maxime?\");\n-std::string str_03;\n std::stringbuf strb_01(str_01);\n-std::stringbuf strb_02(str_02, std::ios_base::in);\n-std::stringbuf strb_03(str_03, std::ios_base::out);\n \n // test overloaded virtual functions\n void test04() \n {\n   bool test __attribute__((unused)) = true;\n   std::string \t\tstr_tmp;\n-  std::stringbuf \t\tstrb_tmp;\n   typedef std::stringbuf::int_type int_type;\n-  typedef std::stringbuf::traits_type traits_type;\n   typedef std::stringbuf::pos_type pos_type;\n   typedef std::stringbuf::off_type off_type;\n \n   int_type c1 = strb_01.sbumpc();\n-  int_type c2 = strb_02.sbumpc();\n+  int_type c2; \n   int_type c3 = strb_01.sbumpc();\n \n   pos_type pt_1(off_type(-1));\n   pos_type pt_2(off_type(0));\n   off_type off_1 = 0;\n   off_type off_2 = 0;\n-\n-  // PUT\n-  strb_03.str(str_01); //reset\n   \n   // BUFFER MANAGEMENT & POSITIONING\n \n   // seekpos\n   // pubseekpos(pos_type sp, ios_base::openmode)\n   // alters the stream position to sp\n   strb_01.str(str_01); //in|out (\"mykonos. . . or what?\");\n-  strb_02.str(str_02); //in (\"paris, or sainte-maxime?\");\n-  strb_03.str(str_03); //out (\"\")\n+\n   //IN|OUT\n   //beg\n   pt_1 = strb_01.pubseekoff(2, std::ios_base::beg);"}, {"sha": "41850d9ea86ace97161eb81c5dbe2625a084aeca", "filename": "libstdc++-v3/testsuite/27_io/basic_stringbuf/seekpos/wchar_t/1.cc", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a162bde464b45ccfdc3045d0c6e515981cc76d1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_stringbuf%2Fseekpos%2Fwchar_t%2F1.cc?ref=0a162bde464b45ccfdc3045d0c6e515981cc76d1", "patch": "@@ -23,43 +23,33 @@\n #include <testsuite_hooks.h>\n \n std::wstring str_01(L\"mykonos. . . or what?\");\n-std::wstring str_02(L\"paris, or sainte-maxime?\");\n-std::wstring str_03;\n std::wstringbuf strb_01(str_01);\n-std::wstringbuf strb_02(str_02, std::ios_base::in);\n-std::wstringbuf strb_03(str_03, std::ios_base::out);\n \n // test overloaded virtual functions\n void test04() \n {\n   bool test __attribute__((unused)) = true;\n   std::wstring \t\tstr_tmp;\n-  std::wstringbuf \t\tstrb_tmp;\n   typedef std::wstringbuf::int_type int_type;\n-  typedef std::wstringbuf::traits_type traits_type;\n   typedef std::wstringbuf::pos_type pos_type;\n   typedef std::wstringbuf::off_type off_type;\n \n   int_type c1 = strb_01.sbumpc();\n-  int_type c2 = strb_02.sbumpc();\n+  int_type c2;\n   int_type c3 = strb_01.sbumpc();\n \n   pos_type pt_1(off_type(-1));\n   pos_type pt_2(off_type(0));\n   off_type off_1 = 0;\n   off_type off_2 = 0;\n \n-  // PUT\n-  strb_03.str(str_01); //reset\n-  \n   // BUFFER MANAGEMENT & POSITIONING\n \n   // seekpos\n   // pubseekpos(pos_type sp, ios_base::openmode)\n   // alters the stream position to sp\n   strb_01.str(str_01); //in|out (\"mykonos. . . or what?\");\n-  strb_02.str(str_02); //in (\"paris, or sainte-maxime?\");\n-  strb_03.str(str_03); //out (\"\")\n+\n   //IN|OUT\n   //beg\n   pt_1 = strb_01.pubseekoff(2, std::ios_base::beg);"}]}