{"sha": "597eb1d72b005b3a1c8d9790bd62004eda9b187f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk3ZWIxZDcyYjAwNWIzYTFjOGQ5NzkwYmQ2MjAwNGVkYTliMTg3Zg==", "commit": {"author": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-03-06T16:02:40Z"}, "committer": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-03-06T16:02:40Z"}, "message": "re PR treelang/20326 (treelang does install the backend as a driver)\n\n2005-03-06  James A. Morrison  <phython@gcc.gnu.org>\n\n        PR other/20326\n        * Make-lang.in (gtreelang, treelang/spec.o): New targets.\n        * spec.c: New file.\n\nFrom-SVN: r95972", "tree": {"sha": "1a805173c7e56dc2ed8fcd470bf616943dfd90e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a805173c7e56dc2ed8fcd470bf616943dfd90e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/597eb1d72b005b3a1c8d9790bd62004eda9b187f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597eb1d72b005b3a1c8d9790bd62004eda9b187f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/597eb1d72b005b3a1c8d9790bd62004eda9b187f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597eb1d72b005b3a1c8d9790bd62004eda9b187f/comments", "author": null, "committer": null, "parents": [{"sha": "d7e5b287a07ee0615c5c8f27ac2e5f27bbb1467c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e5b287a07ee0615c5c8f27ac2e5f27bbb1467c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e5b287a07ee0615c5c8f27ac2e5f27bbb1467c"}], "stats": {"total": 90, "additions": 86, "deletions": 4}, "files": [{"sha": "236d633fbb670968772b162d57e651a240a88ecc", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597eb1d72b005b3a1c8d9790bd62004eda9b187f/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597eb1d72b005b3a1c8d9790bd62004eda9b187f/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=597eb1d72b005b3a1c8d9790bd62004eda9b187f", "patch": "@@ -1,3 +1,9 @@\n+2005-03-06  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\tPR other/20326\n+\t* Make-lang.in (gtreelang, treelang/spec.o): New targets.\n+\t* spec.c: New file.\n+\n 2005-02-27  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* treelang.texi: Fix a typo."}, {"sha": "9c198d7c3dc5826d1125fd4059b1ed56810cd1e8", "filename": "gcc/treelang/Make-lang.in", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597eb1d72b005b3a1c8d9790bd62004eda9b187f/gcc%2Ftreelang%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597eb1d72b005b3a1c8d9790bd62004eda9b187f/gcc%2Ftreelang%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FMake-lang.in?ref=597eb1d72b005b3a1c8d9790bd62004eda9b187f", "patch": "@@ -33,8 +33,8 @@\n #\n # It should also provide rules for:\n #\n-# - making any compiler driver (eg: GCC)\n-# - the compiler proper (eg: treelang)\n+# - making any compiler driver (eg: gcc)\n+# - the compiler proper (eg: tree1)\n # - define the names for selecting the language in LANGUAGES.\n #\f\n \n@@ -54,7 +54,9 @@ GCC_EXTRAS = -B./ -B$(build_tooldir)/bin/ -isystem $(build_tooldir)/include\n # GCC_FOR_TREELANG = ./xgcc $(GCC_EXTRAS)\n \n TREE_GENERATED = lex.c parse.c parse.h parse.output\n-TREE_EXES = tree1\n+# We need to use something other than treelang here because the directory\n+# is called treelang\n+TREE_EXES = gtreelang\n \n #strict warnings for treelang\n treelang-warn = $(STRICT_WARN)\n@@ -70,7 +72,7 @@ treelang/lex.o-warn = -Wno-error\n \n treelang TREELANG:treelang.done\n \n-treelang.done: tree1$(exeext)\n+treelang.done: gtreelang$(exeext) tree1$(exeext)\n \t$(STAMP) treelang.done\n \n # no preprocessor\n@@ -84,6 +86,14 @@ tree1$(exeext): treelang/tree1.o treelang/treetree.o treelang/tree-convert.o \\\n \ttreelang/lex.o treelang/parse.o \\\n \t$(BACKEND) $(LIBS) attribs.o\n \n+# Create the compiler driver treelang.\n+gtreelang$(exeext): gcc.o version.o prefix.o intl.o $(EXTRA_GCC_OBJS) \\\n+  $(LIBDEPS) treelang/spec.o\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ treelang/spec.o \\\n+\t  gcc.o version.o prefix.o intl.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\n+\n+\n #\f\n # Compiling object files from source files.\n \n@@ -102,6 +112,9 @@ treelang/treetree.o: treelang/treetree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n treelang/tree-convert.o: treelang/tree-convert.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h diagnostic.h $(TREE_H) flags.h toplev.h langhooks.h $(TM_H)\n \n+treelang/spec.o: treelang/spec.c $(CONFIG_H) $(SYSTEM_H) \\\n+  coretypes.h diagnostic.h $(TREE_H) flags.h toplev.h langhooks.h $(TM_H)\n+\n treelang/parse.o: treelang/parse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(TM_H) diagnostic.h treelang/treelang.h input.h treelang/treetree.h\n "}, {"sha": "9f4a57fbc729c72656a651844accb4399a2b0060", "filename": "gcc/treelang/spec.c", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/597eb1d72b005b3a1c8d9790bd62004eda9b187f/gcc%2Ftreelang%2Fspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/597eb1d72b005b3a1c8d9790bd62004eda9b187f/gcc%2Ftreelang%2Fspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Fspec.c?ref=597eb1d72b005b3a1c8d9790bd62004eda9b187f", "patch": "@@ -0,0 +1,63 @@\n+/* Specific flags and argument handling of the Treelang front-end.\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"gcc.h\"\n+\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+\n+const struct spec_function lang_specific_spec_functions[] = {{0,0}};\n+\n+void\n+lang_specific_driver (int *in_argc, const char *const **in_argv,\n+\t\t      int *in_added_libraries ATTRIBUTE_UNUSED)\n+{\n+  int argc = *in_argc, i;\n+  const char *const *argv = *in_argv;\n+\n+  for (i = 1; i < argc; ++i)\n+    {\n+      if (!strcmp (argv[i], \"-fversion\"))\t/* Really --version!! */\n+\t{\n+\t  printf (\"\\\n+GNU Treelang (GCC %s)\\n\\\n+Copyright (C) 2005 Free Software Foundation, Inc.\\n\\\n+\\n\\\n+GNU Treelang comes with NO WARRANTY, to the extent permitted by law.\\n\\\n+You may redistribute copies of GNU Treelang\\n\\\n+under the terms of the GNU General Public License.\\n\\\n+For more information about these matters, see the file named COPYING\\n\\\n+\", version_string);\n+\t  exit (0);\n+\t}\n+    }\n+}\n+\n+/* Called before linking.  Returns 0 on success and -1 on failure.  */\n+int\n+lang_specific_pre_link (void)\t/* Not used for Treelang.  */\n+{\n+  return 0;\n+}\n+\n+/* Number of extra output files that lang_specific_pre_link may generate.  */\n+int lang_specific_extra_outfiles = 0;\t/* Not used for Treelang.  */"}]}