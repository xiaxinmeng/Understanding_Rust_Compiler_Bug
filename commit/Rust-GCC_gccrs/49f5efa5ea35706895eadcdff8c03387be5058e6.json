{"sha": "49f5efa5ea35706895eadcdff8c03387be5058e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlmNWVmYTVlYTM1NzA2ODk1ZWFkY2RmZjhjMDMzODdiZTUwNThlNg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2013-11-29T20:08:38Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2013-11-29T20:08:38Z"}, "message": "re PR rtl-optimization/59340 (LRA enable-checking bootstrap failure since r205136)\n\n2013-11-29  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/59340\n\t* lra.c (check_rtl): Use recog_memoized instead of insn_invalid_p.\n\n\tRevert\n\t2013-11-20  Robert Suchanek  <Robert.Suchanek@imgtec.com>\n\n\t* lra.c (lra): Set lra_in_progress before check_rtl call.\n\t* recog.c (insn_invalid_p): Add !lra_in_progress to prevent\n\tadding clobber regs when LRA is running.\n\nFrom-SVN: r205541", "tree": {"sha": "638a6d05dbabed65d6bbb7a0bbaa7f1ae57c74e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/638a6d05dbabed65d6bbb7a0bbaa7f1ae57c74e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49f5efa5ea35706895eadcdff8c03387be5058e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49f5efa5ea35706895eadcdff8c03387be5058e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49f5efa5ea35706895eadcdff8c03387be5058e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49f5efa5ea35706895eadcdff8c03387be5058e6/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "913e2f0a0060056efbd619435a47f1eda72986d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/913e2f0a0060056efbd619435a47f1eda72986d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/913e2f0a0060056efbd619435a47f1eda72986d0"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "74bbc8d75a974530e6e07574f42699b36777f988", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f5efa5ea35706895eadcdff8c03387be5058e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f5efa5ea35706895eadcdff8c03387be5058e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49f5efa5ea35706895eadcdff8c03387be5058e6", "patch": "@@ -1,3 +1,15 @@\n+2013-11-29  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/59340\n+\t* lra.c (check_rtl): Use recog_memoized instead of insn_invalid_p.\n+\n+\tRevert\n+\t2013-11-20  Robert Suchanek  <Robert.Suchanek@imgtec.com>\n+\n+\t* lra.c (lra): Set lra_in_progress before check_rtl call.\n+\t* recog.c (insn_invalid_p): Add !lra_in_progress to prevent\n+\tadding clobber regs when LRA is running.\n+\n 2013-11-29  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/59289"}, {"sha": "d21d8646a61e0738264793cdbfb21ea8bb2e8834", "filename": "gcc/lra.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f5efa5ea35706895eadcdff8c03387be5058e6/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f5efa5ea35706895eadcdff8c03387be5058e6/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=49f5efa5ea35706895eadcdff8c03387be5058e6", "patch": "@@ -2066,8 +2066,9 @@ check_rtl (bool final_p)\n \t   correctly decomposed.  LRA can generate reloads for\n \t   decomposable addresses.  The decomposition code checks the\n \t   correctness of the addresses.  So we don't need to check\n-\t   the addresses here.  */\n-\tif (insn_invalid_p (insn, false))\n+\t   the addresses here.  Don't call insn_invalid_p here, it can\n+\t   change the code at this stage.  */\n+\tif (recog_memoized (insn) < 0 && asm_noperands (PATTERN (insn)) < 0)\n \t  fatal_insn_not_found (insn);\n       }\n }\n@@ -2266,14 +2267,13 @@ lra (FILE *f)\n \n   init_insn_recog_data ();\n \n-  /* We can not set up reload_in_progress because it prevents new\n-     pseudo creation.  */\n-  lra_in_progress = 1;\n-\n #ifdef ENABLE_CHECKING\n+  /* Some quick check on RTL generated by previous passes.  */\n   check_rtl (false);\n #endif\n \n+  lra_in_progress = 1;\n+\n   lra_live_range_iter = lra_coalesce_iter = 0;\n   lra_constraint_iter = lra_constraint_iter_after_spill = 0;\n   lra_inheritance_iter = lra_undo_inheritance_iter = 0;"}, {"sha": "7f597566770a11b0e7d209ed0dc8f02b0d440852", "filename": "gcc/recog.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f5efa5ea35706895eadcdff8c03387be5058e6/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f5efa5ea35706895eadcdff8c03387be5058e6/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=49f5efa5ea35706895eadcdff8c03387be5058e6", "patch": "@@ -315,8 +315,7 @@ insn_invalid_p (rtx insn, bool in_group)\n   int icode = recog (pat, insn,\n \t\t     (GET_CODE (pat) == SET\n \t\t      && ! reload_completed \n-                      && ! reload_in_progress\n-                      && ! lra_in_progress)\n+                      && ! reload_in_progress)\n \t\t     ? &num_clobbers : 0);\n   int is_asm = icode < 0 && asm_noperands (PATTERN (insn)) >= 0;\n "}]}