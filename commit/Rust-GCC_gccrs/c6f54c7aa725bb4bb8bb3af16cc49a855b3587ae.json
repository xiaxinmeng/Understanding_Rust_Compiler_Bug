{"sha": "c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZmNTRjN2FhNzI1YmI0YmI4YmIzYWYxNmNjNDlhODU1YjM1ODdhZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-02T18:18:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-02T18:18:31Z"}, "message": "re PR c++/47200 ([C++0x] ICE: in adjust_temp_type, at cp/semantics.c:5821 with missing definition of constexpr function)\n\n\tPR c++/47200\n\t* semantics.c (cxx_bind_parameters_in_call): Don't call\n\tadjust_temp_type on non-constant args.\n\nFrom-SVN: r170620", "tree": {"sha": "b6733e230013cc491b7cced2c8b8ccffb202e1cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6733e230013cc491b7cced2c8b8ccffb202e1cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f158c8d0ed150a33356f17f9b8a80e1525a98263", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f158c8d0ed150a33356f17f9b8a80e1525a98263", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f158c8d0ed150a33356f17f9b8a80e1525a98263"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "2a5244f364e903e22ea869fb18cf908044093037", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae", "patch": "@@ -1,5 +1,9 @@\n 2011-03-01  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/47200\n+\t* semantics.c (cxx_bind_parameters_in_call): Don't call\n+\tadjust_temp_type on non-constant args.\n+\n \tPR c++/47851\n \t* call.c (standard_conversion): Provide requested cv-quals on\n \tclass rvalue conversion."}, {"sha": "6b3e9149a8015d2eb105659091a53dba387db21f", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae", "patch": "@@ -5906,6 +5906,9 @@ cxx_bind_parameters_in_call (const constexpr_call *old_call, tree t,\n       /* Just discard ellipsis args after checking their constantitude.  */\n       if (!parms)\n \tcontinue;\n+      if (*non_constant_p)\n+\t/* Don't try to adjust the type of non-constant args.  */\n+\tgoto next;\n \n       /* Make sure the binding has the same type as the parm.  */\n       if (TREE_CODE (type) != REFERENCE_TYPE)"}, {"sha": "1ac00aa9f661f846050146e9ea72e56c5f6f0ad0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae", "patch": "@@ -1,3 +1,7 @@\n+2011-03-01  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-non-const-arg2.C: New.\n+\n 2011-03-02  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR rtl-optimization/47925"}, {"sha": "20e05c3c06810b78b1c446c970658f4bc46d21f4", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-non-const-arg2.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-non-const-arg2.C?ref=c6f54c7aa725bb4bb8bb3af16cc49a855b3587ae", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/47200\n+// { dg-options \"-std=c++0x -w\" }\n+\n+template < int > struct duration\n+{\n+  constexpr int count ();\n+  static constexpr duration min ();\n+};\n+\n+constexpr int\n+f (duration < 0 > d, duration < 0 > )\n+{\n+  return d.count ();\n+}\n+\n+static_assert (f (duration < 0 >::min (), duration < 0 > ()), \"\"); // { dg-error \"non-constant|before its definition\" }"}]}