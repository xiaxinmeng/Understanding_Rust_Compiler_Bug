{"sha": "2c5f025d8df993b43d66a9d7cc900b3cf80af7fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM1ZjAyNWQ4ZGY5OTNiNDNkNjZhOWQ3Y2M5MDBiM2NmODBhZjdmYw==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2005-07-13T10:08:36Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2005-07-13T10:08:36Z"}, "message": "re PR tree-optimization/22442 (scev cprop causes wrong code)\n\n\tPR tree-optimization/22442\n\t* tree-chrec.c (chrec_fold_multiply_poly_poly): Associate chrecs\n\tcorrectly.\n\nFrom-SVN: r101962", "tree": {"sha": "e904255113ad6aee05efca792bcfe7b71abb9070", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e904255113ad6aee05efca792bcfe7b71abb9070"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c5f025d8df993b43d66a9d7cc900b3cf80af7fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c5f025d8df993b43d66a9d7cc900b3cf80af7fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c5f025d8df993b43d66a9d7cc900b3cf80af7fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c5f025d8df993b43d66a9d7cc900b3cf80af7fc/comments", "author": null, "committer": null, "parents": [{"sha": "7869fe47b3a1b1ea8ecc628860c4996bb5857f37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7869fe47b3a1b1ea8ecc628860c4996bb5857f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7869fe47b3a1b1ea8ecc628860c4996bb5857f37"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "dd21fc9f55b155fba55732f5c7149666e8790960", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5f025d8df993b43d66a9d7cc900b3cf80af7fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5f025d8df993b43d66a9d7cc900b3cf80af7fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c5f025d8df993b43d66a9d7cc900b3cf80af7fc", "patch": "@@ -1,3 +1,9 @@\n+2005-07-12  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/22442\n+\t* tree-chrec.c (chrec_fold_multiply_poly_poly): Associate chrecs\n+\tcorrectly.\n+\n 2005-07-12  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \tPR rtl-optimization/20376"}, {"sha": "b48813c8daff34217b57a17a002c4e9242c01c5b", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c5f025d8df993b43d66a9d7cc900b3cf80af7fc/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c5f025d8df993b43d66a9d7cc900b3cf80af7fc/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=2c5f025d8df993b43d66a9d7cc900b3cf80af7fc", "patch": "@@ -167,6 +167,9 @@ chrec_fold_multiply_poly_poly (tree type,\n \t\t\t       tree poly0, \n \t\t\t       tree poly1)\n {\n+  tree t0, t1, t2;\n+  int var;\n+\n   gcc_assert (poly0);\n   gcc_assert (poly1);\n   gcc_assert (TREE_CODE (poly0) == POLYNOMIAL_CHREC);\n@@ -191,28 +194,25 @@ chrec_fold_multiply_poly_poly (tree type,\n   \n   /* poly0 and poly1 are two polynomials in the same variable,\n      {a, +, b}_x * {c, +, d}_x  ->  {a*c, +, a*d + b*c + b*d, +, 2*b*d}_x.  */\n-  return \n-    build_polynomial_chrec \n-    (CHREC_VARIABLE (poly0), \n-     build_polynomial_chrec \n-     (CHREC_VARIABLE (poly0), \n-      \n-      /* \"a*c\".  */\n-      chrec_fold_multiply (type, CHREC_LEFT (poly0), CHREC_LEFT (poly1)),\n       \n-      /* \"a*d + b*c + b*d\".  */\n-      chrec_fold_plus \n-      (type, chrec_fold_multiply (type, CHREC_LEFT (poly0), CHREC_RIGHT (poly1)),\n-       \n-       chrec_fold_plus \n-       (type, \n-\tchrec_fold_multiply (type, CHREC_RIGHT (poly0), CHREC_LEFT (poly1)),\n-\tchrec_fold_multiply (type, CHREC_RIGHT (poly0), CHREC_RIGHT (poly1))))),\n-     \n-     /* \"2*b*d\".  */\n-     chrec_fold_multiply\n-     (type, build_int_cst (NULL_TREE, 2),\n-      chrec_fold_multiply (type, CHREC_RIGHT (poly0), CHREC_RIGHT (poly1))));\n+  /* \"a*c\".  */\n+  t0 = chrec_fold_multiply (type, CHREC_LEFT (poly0), CHREC_LEFT (poly1));\n+\n+  /* \"a*d + b*c + b*d\".  */\n+  t1 = chrec_fold_multiply (type, CHREC_LEFT (poly0), CHREC_RIGHT (poly1));\n+  t1 = chrec_fold_plus (type, t1, chrec_fold_multiply (type,\n+\t\t\t\t\t\t       CHREC_RIGHT (poly0),\n+\t\t\t\t\t\t       CHREC_LEFT (poly1)));\n+  t1 = chrec_fold_plus (type, t1, chrec_fold_multiply (type,\n+\t\t\t\t\t\t       CHREC_RIGHT (poly0),\n+\t\t\t\t\t\t       CHREC_RIGHT (poly1)));\n+  /* \"2*b*d\".  */\n+  t2 = chrec_fold_multiply (type, CHREC_RIGHT (poly0), CHREC_RIGHT (poly1));\n+  t2 = chrec_fold_multiply (type, build_int_cst_type (type, 2), t2);\n+\n+  var = CHREC_VARIABLE (poly0);\n+  return build_polynomial_chrec (var, t0,\n+\t\t\t\t build_polynomial_chrec (var, t1, t2));\n }\n \n /* When the operands are automatically_generated_chrec_p, the fold has"}]}