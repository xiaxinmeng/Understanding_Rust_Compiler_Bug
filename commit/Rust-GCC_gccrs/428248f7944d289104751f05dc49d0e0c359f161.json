{"sha": "428248f7944d289104751f05dc49d0e0c359f161", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI4MjQ4Zjc5NDRkMjg5MTA0NzUxZjA1ZGM0OWQwZTBjMzU5ZjE2MQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-11-24T01:24:59Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-11-24T01:24:59Z"}, "message": "loop.c (loop_optimize): Always find_loop_tree_blocks and unroll_block_trees when generating debuggable code.\n\n\t* loop.c (loop_optimize): Always find_loop_tree_blocks and\n\tunroll_block_trees when generating debuggable code.\n\nFrom-SVN: r30647", "tree": {"sha": "e6df572b38809b1b0fe04e7c064457c61bf14891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6df572b38809b1b0fe04e7c064457c61bf14891"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/428248f7944d289104751f05dc49d0e0c359f161", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428248f7944d289104751f05dc49d0e0c359f161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428248f7944d289104751f05dc49d0e0c359f161", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428248f7944d289104751f05dc49d0e0c359f161/comments", "author": null, "committer": null, "parents": [{"sha": "582db8e43021e33373aafbb03eafe6985fc4a0e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582db8e43021e33373aafbb03eafe6985fc4a0e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/582db8e43021e33373aafbb03eafe6985fc4a0e8"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "55f7c7a653ddf2a5a0ae7419f12a81c51118896f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428248f7944d289104751f05dc49d0e0c359f161/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428248f7944d289104751f05dc49d0e0c359f161/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=428248f7944d289104751f05dc49d0e0c359f161", "patch": "@@ -1,5 +1,8 @@\n 1999-11-23  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* loop.c (loop_optimize): Always find_loop_tree_blocks and\n+\tunroll_block_trees when generating debuggable code.\n+\n \t* tree.h (unsave_expr_1): New function.\n \t(lang_unsave): New variable.\n \t(get_callee_fndecl): New function."}, {"sha": "a1a3803086adf8983a9d2cb69bbd82241d87ea39", "filename": "gcc/loop.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428248f7944d289104751f05dc49d0e0c359f161/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428248f7944d289104751f05dc49d0e0c359f161/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=428248f7944d289104751f05dc49d0e0c359f161", "patch": "@@ -550,8 +550,12 @@ loop_optimize (f, dumpfile, unroll_p, bct_p)\n     if (uid_luid[i] == 0)\n       uid_luid[i] = uid_luid[i - 1];\n \n-  /* Create a mapping from loops to BLOCK tree nodes.  */\n-  if (unroll_p && write_symbols != NO_DEBUG)\n+  /* If debugging and unrolling loops, we must replicate the tree\n+     nodes corresponding to the BLOCKs inside the loop, so that the\n+     original one to one mapping will remain.  We sometimes unroll\n+     loops even when unroll_p is false, so we must always do this when\n+     debugging.  */\n+  if (write_symbols != NO_DEBUG)\n     find_loop_tree_blocks ();\n \n   /* Determine if the function has indirect jump.  On some systems\n@@ -565,10 +569,8 @@ loop_optimize (f, dumpfile, unroll_p, bct_p)\n       scan_loop (loop_number_loop_starts[i], loop_number_loop_ends[i],\n \t\t loop_number_loop_cont[i], unroll_p, bct_p);\n \n-  /* If debugging and unrolling loops, we must replicate the tree nodes\n-     corresponding to the blocks inside the loop, so that the original one\n-     to one mapping will remain.  */\n-  if (unroll_p && write_symbols != NO_DEBUG)\n+  /* Replicate the BLOCKs.  */\n+  if (write_symbols != NO_DEBUG)\n     unroll_block_trees ();\n \n   end_alias_analysis ();"}, {"sha": "43f13b936b3a1741eb91fb0795318cbcf2cbdbcf", "filename": "gcc/testsuite/g++.old-deja/g++.other/debug6.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/428248f7944d289104751f05dc49d0e0c359f161/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/428248f7944d289104751f05dc49d0e0c359f161/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug6.C?ref=428248f7944d289104751f05dc49d0e0c359f161", "patch": "@@ -6,8 +6,6 @@\n \n // This causes assember relocation errors\n \n-// excess errors test - XFAIL *-*-*\n-\n struct X\n {\n   virtual ~X () {}"}]}