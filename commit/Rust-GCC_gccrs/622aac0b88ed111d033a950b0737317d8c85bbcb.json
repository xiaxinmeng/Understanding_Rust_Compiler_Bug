{"sha": "622aac0b88ed111d033a950b0737317d8c85bbcb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIyYWFjMGI4OGVkMTExZDAzM2E5NTBiMDczNzMxN2Q4Yzg1YmJjYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-15T01:26:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-15T01:26:44Z"}, "message": "re PR c++/55223 ([C++11] Default lambda expression of a templated class member)\n\n\tPR c++/55223\ngcc/cp/\n\t* pt.c (tsubst_copy_and_build) [LAMBDA_EXPR]: Fix handling of\n\tdefault argument scope.\n\t* mangle.c (write_name): Likewise.\nlibiberty/\n\t* cp-demangle.c (d_dump): Handle DEMANGLE_COMPONENT_DEFAULT_ARG.\n\t(d_print_comp): Likewise.\n\nFrom-SVN: r196065", "tree": {"sha": "76ab66221ec193a48645ec9dfa45c26964b7f963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76ab66221ec193a48645ec9dfa45c26964b7f963"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/622aac0b88ed111d033a950b0737317d8c85bbcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622aac0b88ed111d033a950b0737317d8c85bbcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/622aac0b88ed111d033a950b0737317d8c85bbcb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/622aac0b88ed111d033a950b0737317d8c85bbcb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff9b4073cc6f8da73fd9affa494192e91c852e64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff9b4073cc6f8da73fd9affa494192e91c852e64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff9b4073cc6f8da73fd9affa494192e91c852e64"}], "stats": {"total": 76, "additions": 71, "deletions": 5}, "files": [{"sha": "3c7b4153846d0cfd331b328b649f7b02e6077637", "filename": "gcc/common.opt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622aac0b88ed111d033a950b0737317d8c85bbcb/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622aac0b88ed111d033a950b0737317d8c85bbcb/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=622aac0b88ed111d033a950b0737317d8c85bbcb", "patch": "@@ -785,7 +785,8 @@ Driver Undocumented\n ;    argument.\n ;    First selectable in G++ 4.7.\n ;\n-; 7: The version of the ABI that treats nullptr_t as a builtin type.\n+; 7: The version of the ABI that treats nullptr_t as a builtin type and\n+;    corrects the mangling of lambdas in default argument scope.\n ;    First selectable in G++ 4.8.\n ; Additional positive integers will be assigned as new versions of\n ; the ABI become the default version of the ABI."}, {"sha": "de03a7a64581c5abfd1f754b3a391ddcdf373825", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622aac0b88ed111d033a950b0737317d8c85bbcb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622aac0b88ed111d033a950b0737317d8c85bbcb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=622aac0b88ed111d033a950b0737317d8c85bbcb", "patch": "@@ -1,5 +1,10 @@\n 2013-02-14  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/55223\n+\t* pt.c (tsubst_copy_and_build) [LAMBDA_EXPR]: Fix handling of\n+\tdefault argument scope.\n+\t* mangle.c (write_name): Likewise.\n+\n \tPR c++/55232\n \t* error.c (find_typenames_r): Don't walk into a pack expansion.\n "}, {"sha": "a48d476856c4ba997c8e9ab889e0875d6cb3cef7", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622aac0b88ed111d033a950b0737317d8c85bbcb/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622aac0b88ed111d033a950b0737317d8c85bbcb/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=622aac0b88ed111d033a950b0737317d8c85bbcb", "patch": "@@ -802,7 +802,10 @@ write_name (tree decl, const int ignore_local_scope)\n   if (context == NULL\n       || context == global_namespace\n       || DECL_NAMESPACE_STD_P (context)\n-      || (ignore_local_scope && TREE_CODE (context) == FUNCTION_DECL))\n+      || (ignore_local_scope\n+\t  && (TREE_CODE (context) == FUNCTION_DECL\n+\t      || (abi_version_at_least (7)\n+\t\t  && TREE_CODE (context) == PARM_DECL))))\n     {\n       tree template_info;\n       /* Is this a template instance?  */"}, {"sha": "aa868a45a63453e9ba747c5c4e1a6859dfc24b69", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622aac0b88ed111d033a950b0737317d8c85bbcb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622aac0b88ed111d033a950b0737317d8c85bbcb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=622aac0b88ed111d033a950b0737317d8c85bbcb", "patch": "@@ -14444,8 +14444,20 @@ tsubst_copy_and_build (tree t,\n \t   than build a new one.  */\n \ttree scope = LAMBDA_EXPR_EXTRA_SCOPE (t);\n \tif (scope && TREE_CODE (scope) == FUNCTION_DECL)\n-\t  scope = tsubst (LAMBDA_EXPR_EXTRA_SCOPE (t), args,\n-\t\t\t  complain, in_decl);\n+\t  scope = tsubst (scope, args, complain, in_decl);\n+\telse if (scope && TREE_CODE (scope) == PARM_DECL)\n+\t  {\n+\t    /* Look up the parameter we want directly, as tsubst_copy\n+\t       doesn't do what we need.  */\n+\t    tree fn = tsubst (DECL_CONTEXT (scope), args, complain, in_decl);\n+\t    tree parm = FUNCTION_FIRST_USER_PARM (fn);\n+\t    while (DECL_PARM_INDEX (parm) != DECL_PARM_INDEX (scope))\n+\t      parm = DECL_CHAIN (parm);\n+\t    scope = parm;\n+\t    /* FIXME Work around the parm not having DECL_CONTEXT set.  */\n+\t    if (DECL_CONTEXT (scope) == NULL_TREE)\n+\t      DECL_CONTEXT (scope) = fn;\n+\t  }\n \telse\n \t  scope = RECUR (scope);\n \tLAMBDA_EXPR_EXTRA_SCOPE (r) = scope;"}, {"sha": "f02fb29b36e61aaca7d2e3a635297b74a7b694da", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-defarg3.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622aac0b88ed111d033a950b0737317d8c85bbcb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-defarg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622aac0b88ed111d033a950b0737317d8c85bbcb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-defarg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-defarg3.C?ref=622aac0b88ed111d033a950b0737317d8c85bbcb", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/55223\n+// { dg-options \"-std=c++11 -fabi-version=0\" }\n+// { dg-final { scan-assembler \"_ZN8functionC1IZN1CIiE4testES_Ed_UliE_EET_\" } }\n+\n+struct function\n+{\n+  template <class U> function(U u) { }\n+};\n+\n+template<typename T> struct C\n+{\n+  static T test(function f = [](int i){return i;}) { }\n+};\n+\n+int main()\n+{\n+  C<int>::test();\n+}"}, {"sha": "7935ad69f44eb972c481fdac074712586ecfb279", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622aac0b88ed111d033a950b0737317d8c85bbcb/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622aac0b88ed111d033a950b0737317d8c85bbcb/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=622aac0b88ed111d033a950b0737317d8c85bbcb", "patch": "@@ -1,3 +1,8 @@\n+2013-02-14  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-demangle.c (d_dump): Handle DEMANGLE_COMPONENT_DEFAULT_ARG.\n+\t(d_print_comp): Likewise.\n+\n 2013-02-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/56245"}, {"sha": "39be0314ceadfbec8989242d7b225ef718ae5ebf", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622aac0b88ed111d033a950b0737317d8c85bbcb/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622aac0b88ed111d033a950b0737317d8c85bbcb/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=622aac0b88ed111d033a950b0737317d8c85bbcb", "patch": "@@ -707,6 +707,14 @@ d_dump (struct demangle_component *dc, int indent)\n     case DEMANGLE_COMPONENT_TLS_WRAPPER:\n       printf (\"tls wrapper function\\n\");\n       break;\n+    case DEMANGLE_COMPONENT_DEFAULT_ARG:\n+      printf (\"default argument %d\\n\", dc->u.s_unary_num.num);\n+      d_dump (dc->u.s_unary_num.sub, indent+2);\n+      return;\n+    case DEMANGLE_COMPONENT_LAMBDA:\n+      printf (\"lambda %d\\n\", dc->u.s_unary_num.num);\n+      d_dump (dc->u.s_unary_num.sub, indent+2);\n+      return;\n     }\n \n   d_dump (d_left (dc), indent + 2);\n@@ -3168,6 +3176,7 @@ d_expr_primary (struct d_info *di)\n \n /* <local-name> ::= Z <(function) encoding> E <(entity) name> [<discriminator>]\n                 ::= Z <(function) encoding> E s [<discriminator>]\n+                ::= Z <(function) encoding> E d [<parameter> number>] _ <entity name>\n */\n \n static struct demangle_component *\n@@ -3869,7 +3878,17 @@ d_print_comp (struct d_print_info *dpi, int options,\n \td_append_string (dpi, \"::\");\n       else\n \td_append_char (dpi, '.');\n-      d_print_comp (dpi, options, d_right (dc));\n+      {\n+\tstruct demangle_component *local_name = d_right (dc);\n+\tif (local_name->type == DEMANGLE_COMPONENT_DEFAULT_ARG)\n+\t  {\n+\t    d_append_string (dpi, \"{default arg#\");\n+\t    d_append_num (dpi, local_name->u.s_unary_num.num + 1);\n+\t    d_append_string (dpi, \"}::\");\n+\t    local_name = local_name->u.s_unary_num.sub;\n+\t  }\n+\td_print_comp (dpi, options, local_name);\n+      }\n       return;\n \n     case DEMANGLE_COMPONENT_TYPED_NAME:"}, {"sha": "17eacaaa8d0e08c148c8b020dd2e022ab9b8ee55", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/622aac0b88ed111d033a950b0737317d8c85bbcb/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/622aac0b88ed111d033a950b0737317d8c85bbcb/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=622aac0b88ed111d033a950b0737317d8c85bbcb", "patch": "@@ -3951,6 +3951,9 @@ S::f(int, int)::{default arg#2}::{lambda()#2}::operator()() const\n _ZNK1SIiE1xMUlvE1_clEv\n S<int>::x::{lambda()#3}::operator()() const\n --format=gnu-v3\n+_ZN8functionC1IZN1CIiE4testES_Ed_UliE_EET_\n+function::function<C<int>::test(function)::{default arg#1}::{lambda(int)#1}>(C<int>::test(function)::{default arg#1}::{lambda(int)#1})\n+--format=gnu-v3\n _Z1fN1SUt_E\n f(S::{unnamed type#1})\n --format=gnu-v3"}]}