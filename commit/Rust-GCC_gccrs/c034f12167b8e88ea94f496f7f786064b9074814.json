{"sha": "c034f12167b8e88ea94f496f7f786064b9074814", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAzNGYxMjE2N2I4ZTg4ZWE5NGY0OTZmN2Y3ODYwNjRiOTA3NDgxNA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-09-15T09:31:17Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-09-15T09:31:17Z"}, "message": "invoke.texi (Warning Options): Describe -Wold-style-definition.\n\n2003-09-15  Andreas Jaeger  <aj@suse.de>\n            Kaveh R. Ghazi <ghazi@caip.rutgers.edu>\n\n\t* doc/invoke.texi (Warning Options): Describe -Wold-style-definition.\n\t* c-opts.c (c_common_handle_option): Handle OPT_Wold_style_definition.\n\t* c-parse.in: Warn about old-style parameter definition.\n\t* c-common.c: Define warn_old_style_defintion.\n\t* c-common.h: Declare it.\n\t* c.opt: Add Wold-style-defintion.\n\ntestsuite:\n2003-09-15  Andreas Jaeger  <aj@suse.de>\n\n\t* gcc.dg/Wold-style-definition-1.c: New test.\n\nFrom-SVN: r71400", "tree": {"sha": "e8af0c2a48f55bb04305f893645f855b6871b356", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8af0c2a48f55bb04305f893645f855b6871b356"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c034f12167b8e88ea94f496f7f786064b9074814", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c034f12167b8e88ea94f496f7f786064b9074814", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c034f12167b8e88ea94f496f7f786064b9074814", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c034f12167b8e88ea94f496f7f786064b9074814/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "863d938c6a762da34248523b4424d9052e28555d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/863d938c6a762da34248523b4424d9052e28555d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/863d938c6a762da34248523b4424d9052e28555d"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "52688069332c41874e6626c24f4212d743ed2fea", "filename": "gcc/c-common.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=c034f12167b8e88ea94f496f7f786064b9074814", "patch": "@@ -429,6 +429,10 @@ int warn_implicit_int;\n \n int warn_nonnull;\n \n+/* Warn about old-style parameter declaration.  */\n+\n+int warn_old_style_definition;\n+\n \n /* ObjC language option variables.  */\n "}, {"sha": "d9cbb2ce316128ffb662aaeda58821b393d7aaa8", "filename": "gcc/c-common.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=c034f12167b8e88ea94f496f7f786064b9074814", "patch": "@@ -591,6 +591,10 @@ extern int warn_implicit_int;\n       \n extern int warn_nonnull;\n \n+/* Warn about old-style parameter declaration.  */\n+\n+extern int warn_old_style_definition;\n+\n \n /* ObjC language option variables.  */\n "}, {"sha": "ee957f7487b0685e9db2d87ab14f8cf839839e71", "filename": "gcc/c-opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=c034f12167b8e88ea94f496f7f786064b9074814", "patch": "@@ -550,6 +550,10 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n       warn_nonnull = value;\n       break;\n \n+    case OPT_Wold_style_definition:\n+      warn_old_style_definition = value;\n+      break;\n+\n     case OPT_Wold_style_cast:\n       warn_old_style_cast = value;\n       break;"}, {"sha": "bb9cc1a77032daf97bc80d82c39a805be1bb76f4", "filename": "gcc/c-parse.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=c034f12167b8e88ea94f496f7f786064b9074814", "patch": "@@ -757,9 +757,16 @@ old_style_parm_decls_1:\n \t  if (warn_traditional && !in_system_header\n \t      && parsing_iso_function_signature)\n \t    warning (\"traditional C rejects ISO C style function definitions\");\n+\t  if (warn_old_style_definition && !in_system_header\n+\t      && !parsing_iso_function_signature)\n+\t    warning (\"old-style parameter declaration\");\n \t  parsing_iso_function_signature = false; /* Reset after warning.  */\n \t}\n \t| datadecls\n+\t{\n+\t  if (warn_old_style_definition && !in_system_header)\n+\t    warning (\"old-style parameter declaration\");\n+\t}\n \t;\n \n /* The following are analogous to lineno_decl, decls and decl"}, {"sha": "6c4d12eb433cc663de06fc6e354b9c110636989e", "filename": "gcc/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=c034f12167b8e88ea94f496f7f786064b9074814", "patch": "@@ -312,6 +312,10 @@ Wold-style-cast\n C++ ObjC++\n Warn if a C-style cast is used in a program\n \n+Wold-style-definition\n+C ObjC\n+Warn if an old-style parameter definition is used\n+\n Woverloaded-virtual\n C++ ObjC++\n Warn about overloaded virtual function names"}, {"sha": "059135f2cdad7702f23955792ed5b5b0542a03af", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c034f12167b8e88ea94f496f7f786064b9074814", "patch": "@@ -220,7 +220,7 @@ in the following sections.\n -Wmain  -Wmissing-braces @gol\n -Wmissing-format-attribute  -Wmissing-noreturn @gol\n -Wno-multichar  -Wno-format-extra-args  -Wno-format-y2k @gol\n--Wno-import  -Wnonnull  -Wpacked  -Wpadded @gol\n+-Wno-import  -Wnonnull -Wold-style-definition -Wpacked  -Wpadded @gol\n -Wparentheses  -Wpointer-arith  -Wredundant-decls @gol\n -Wreturn-type  -Wsequence-point  -Wshadow @gol\n -Wsign-compare  -Wstrict-aliasing @gol\n@@ -2709,6 +2709,11 @@ argument types.  (An old-style function definition is permitted without\n a warning if preceded by a declaration which specifies the argument\n types.)\n \n+@item -Wold-style-definition @r{(C only)}\n+@opindex Wold-style-definition\n+Warn if an old-style function definition is used.  A warning is given\n+even if there is a previous prototype.\n+\n @item -Wmissing-prototypes @r{(C only)}\n @opindex Wmissing-prototypes\n Warn if a global function is defined without a previous prototype"}, {"sha": "c9c3b28ff39f3df80f074c12e73391ae6dd319dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c034f12167b8e88ea94f496f7f786064b9074814", "patch": "@@ -1,3 +1,7 @@\n+2003-09-15  Andreas Jaeger  <aj@suse.de>\n+\n+\t* gcc.dg/Wold-style-definition-1.c: New test.\n+\n 2003-09-14  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/3907"}, {"sha": "d4fb8bd8da164f899e9ad73c25e225007da2676c", "filename": "gcc/testsuite/gcc.dg/Wold-style-definition-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Ftestsuite%2Fgcc.dg%2FWold-style-definition-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c034f12167b8e88ea94f496f7f786064b9074814/gcc%2Ftestsuite%2Fgcc.dg%2FWold-style-definition-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWold-style-definition-1.c?ref=c034f12167b8e88ea94f496f7f786064b9074814", "patch": "@@ -0,0 +1,24 @@\n+/* Test for warning about old-style function definition.  */\n+\n+/* Origin: Andreas Jaeger <aj@suse.de> */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wold-style-definition\" } */\n+\n+void\n+bar (a) int a; { } /* { dg-warning \"old-style parameter declaration\" } */\n+\n+void bar1 () {} /* { dg-warning \"old-style parameter declaration\" } */\n+\n+extern void bar2 (void);\n+\n+void bar2 () {} /* { dg-warning \"old-style parameter declaration\" } */\n+\n+extern void bar3 (int);\n+\n+void bar3 (a) {} /* { dg-warning \"old-style parameter declaration\" } */\n+\n+void bar4 (a) {} /* { dg-warning \"old-style parameter declaration\" } */\n+\n+void bar5 (int a) {}\n+\n+void bar6 (void) {}"}]}