{"sha": "cae39eb41f37b8714f5684ee58b74460f2b76cd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FlMzllYjQxZjM3Yjg3MTRmNTY4NGVlNThiNzQ0NjBmMmI3NmNkMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-06-19T00:38:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-06-19T00:38:26Z"}, "message": "PR c++/81060 - ICE with unexpanded parameter pack.\n\n\t* pt.c (check_for_bare_parameter_packs): Add loc parameter.\n\t* decl.c (grokdeclarator): Call it for qualifying_scope.\n\nFrom-SVN: r261725", "tree": {"sha": "e3a97dbe20d14841f93735ebc431279b631bc2df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3a97dbe20d14841f93735ebc431279b631bc2df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cae39eb41f37b8714f5684ee58b74460f2b76cd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae39eb41f37b8714f5684ee58b74460f2b76cd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cae39eb41f37b8714f5684ee58b74460f2b76cd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae39eb41f37b8714f5684ee58b74460f2b76cd2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "094c2a2373d922f7e06f99f29fc5baaea961d79e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094c2a2373d922f7e06f99f29fc5baaea961d79e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094c2a2373d922f7e06f99f29fc5baaea961d79e"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "a8d0e62644049f6c705a07841a66e8a07797238f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cae39eb41f37b8714f5684ee58b74460f2b76cd2", "patch": "@@ -1,5 +1,9 @@\n 2018-06-18  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/81060 - ICE with unexpanded parameter pack.\n+\t* pt.c (check_for_bare_parameter_packs): Add loc parameter.\n+\t* decl.c (grokdeclarator): Call it for qualifying_scope.\n+\n \tPR c++/86171 - ICE with recursive alias instantiation.\n \t* pt.c (tsubst_decl): Handle recursive alias instantiation.\n "}, {"sha": "b870954206649f9ad6bd0dd0a30c636933f008bd", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=cae39eb41f37b8714f5684ee58b74460f2b76cd2", "patch": "@@ -6626,7 +6626,7 @@ extern bool template_parameter_pack_p           (const_tree);\n extern bool function_parameter_pack_p\t\t(const_tree);\n extern bool function_parameter_expanded_from_pack_p (tree, tree);\n extern tree make_pack_expansion                 (tree, tsubst_flags_t = tf_warning_or_error);\n-extern bool check_for_bare_parameter_packs      (tree);\n+extern bool check_for_bare_parameter_packs      (tree, location_t = UNKNOWN_LOCATION);\n extern tree build_template_info\t\t\t(tree, tree);\n extern tree get_template_info\t\t\t(const_tree);\n extern vec<qualified_typedef_usage_t, va_gc> *get_types_needing_access_check (tree);"}, {"sha": "6d802c9e66df8c79ee12e14016798b6da228a809", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=cae39eb41f37b8714f5684ee58b74460f2b76cd2", "patch": "@@ -10175,6 +10175,9 @@ grokdeclarator (const cp_declarator *declarator,\n \t      break;\n \t    if (qualifying_scope)\n \t      {\n+\t\tif (check_for_bare_parameter_packs (qualifying_scope,\n+\t\t\t\t\t\t    id_declarator->id_loc))\n+\t\t  return error_mark_node;\n \t\tif (at_function_scope_p ())\n \t\t  {\n \t\t    /* [dcl.meaning] "}, {"sha": "5af0f9afefc57b69e3afb930e699e843a87e86d4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=cae39eb41f37b8714f5684ee58b74460f2b76cd2", "patch": "@@ -4031,7 +4031,7 @@ make_pack_expansion (tree arg, tsubst_flags_t complain)\n    Returns TRUE and emits an error if there were bare parameter packs,\n    returns FALSE otherwise.  */\n bool \n-check_for_bare_parameter_packs (tree t)\n+check_for_bare_parameter_packs (tree t, location_t loc /* = UNKNOWN_LOCATION */)\n {\n   tree parameter_packs = NULL_TREE;\n   struct find_parameter_pack_data ppd;\n@@ -4055,7 +4055,8 @@ check_for_bare_parameter_packs (tree t)\n \n   if (parameter_packs) \n     {\n-      location_t loc = EXPR_LOC_OR_LOC (t, input_location);\n+      if (loc == UNKNOWN_LOCATION)\n+\tloc = EXPR_LOC_OR_LOC (t, input_location);\n       error_at (loc, \"parameter packs not expanded with %<...%>:\");\n       while (parameter_packs)\n         {"}, {"sha": "673ec1587d6b0144f320e0ab664148dc45492a99", "filename": "gcc/testsuite/g++.dg/cpp0x/pr81060.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr81060.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr81060.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr81060.C?ref=cae39eb41f37b8714f5684ee58b74460f2b76cd2", "patch": "@@ -7,5 +7,5 @@ template<typename... T> struct A\n };\n \n template<typename... T>\n-const int A<T>::i // { dg-error \"template definition of non-template\" }\n+const int A<T>::i // { dg-error \"packs not expanded\" }\n = []{ return 0; }(); // BOOM!"}, {"sha": "8af3979d28d321023b1bb8f5cbbde9b56acbbb5b", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ex2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cae39eb41f37b8714f5684ee58b74460f2b76cd2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex2.C?ref=cae39eb41f37b8714f5684ee58b74460f2b76cd2", "patch": "@@ -1,8 +1,8 @@\n // { dg-do compile { target c++11 } }\n-template<class... Types> struct B { // { dg-message \"declaration of\" }\n+template<class... Types> struct B {\n   void f3();\n   void f4();\n };\n \n template<class... Types> void B<Types...>::f3() { } // OK\n-template<class... Types> void B<Types>::f4() { } // { dg-error \"invalid\" }\n+template<class... Types> void B<Types>::f4() { } // { dg-error \"packs not expanded\" }"}]}