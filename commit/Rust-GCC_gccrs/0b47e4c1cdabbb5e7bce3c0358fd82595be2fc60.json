{"sha": "0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI0N2U0YzFjZGFiYmI1ZTdiY2UzYzAzNThmZDgyNTk1YmUyZmM2MA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-07-09T19:42:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-07-09T19:42:28Z"}, "message": "Makefile.in (OBJS): Add ssa-ccp.o\n\n\t* Makefile.in (OBJS): Add ssa-ccp.o\n\t(ssa-ccp.o): Add dependencies.\n\t* toplev.c (DFI_ssa_ccp): New dump file enum.\n\t(dump_file): Add entry for dumping after SSA CCP.\n\t(flag_ssa_ccp): New flag variable.\n\t(f_options): Add -fssa-ccp.\n\t(rest_of_compilation): Run SSA CCP if requested.\n\t* timevar.def (TV_SSA_CCP): New timevar.\n\t* ssa.c (mark_phi_and_copy_regs): Handle deleted PHI nodes.\n\t* doc/gcc.texi (Passes): Add documentation for SSA CCP pass.\n\tFix minor typo in SSA DCE documentation.\n\t* doc/invoke.texi: Add documentation for new flag -fssa-ccp.\n\tAdd documentation for new dump option.  Renumber dump files\n\tappropriately.\n\n\t* po/POTFILES.in: Add ssa-ccp.c\n\nFrom-SVN: r43872", "tree": {"sha": "c4f8be2760db2de845dd114a0113faa0df32b41a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4f8be2760db2de845dd114a0113faa0df32b41a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/comments", "author": null, "committer": null, "parents": [{"sha": "5222e47075dd80a3ada4a34c2231aef6f7a3231f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5222e47075dd80a3ada4a34c2231aef6f7a3231f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5222e47075dd80a3ada4a34c2231aef6f7a3231f"}], "stats": {"total": 152, "additions": 115, "deletions": 37}, "files": [{"sha": "b7b60912c84faf3cf35a0e1526422481cee389b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "patch": "@@ -1,3 +1,20 @@\n+Mon Jul  9 13:26:40 2001  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* Makefile.in (OBJS): Add ssa-ccp.o\n+\t(ssa-ccp.o): Add dependencies.\n+\t* toplev.c (DFI_ssa_ccp): New dump file enum.\n+\t(dump_file): Add entry for dumping after SSA CCP.\n+\t(flag_ssa_ccp): New flag variable.\n+\t(f_options): Add -fssa-ccp.\n+\t(rest_of_compilation): Run SSA CCP if requested.\n+\t* timevar.def (TV_SSA_CCP): New timevar.\n+\t* ssa.c (mark_phi_and_copy_regs): Handle deleted PHI nodes.\n+\t* doc/gcc.texi (Passes): Add documentation for SSA CCP pass.\n+\tFix minor typo in SSA DCE documentation.\n+\t* doc/invoke.texi: Add documentation for new flag -fssa-ccp.\n+\tAdd documentation for new dump option.  Renumber dump files\n+\tappropriately.\n+\n Mon Jul  9 21:36:00 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* emit-rtl.c (gen_highpart_mode): New.\n@@ -235,8 +252,13 @@ Mon Jul  9 06:41:07 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \tDelete.\n \t* config/m88k/m88k.c (m88k_end_prologue, m88k_begin_epilogue): Rename\n \tan use in target struct, make static.\n+<<<<<<< ChangeLog\n+\t* ia64/ia64.h (FUNCTION_END_PROLOGUE, FUNCTION_BEGIN_EPILOGUE): Delete.\n+=======\n \t* config/ia64/ia64.h (FUNCTION_END_PROLOGUE, FUNCTION_BEGIN_EPILOGUE):\n \tDelete.\n+>>>>>>> 1.10591\n+\n \n 2001-07-08  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "76631d781e4bf50f9c3aacf678354238adf4af6b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "patch": "@@ -734,7 +734,7 @@ C_OBJS = c-parse.o c-lang.o $(C_AND_OBJC_OBJS)\n \n OBJS =\t\t\t\t\t\t\t\t\t\\\n  alias.o bb-reorder.o bitmap.o builtins.o caller-save.o calls.o\t\t\\\n- combine.o conflict.o convert.o cse.o cselib.o dbxout.o ssa-dce.o\t\\\n+ combine.o conflict.o convert.o cse.o cselib.o dbxout.o \t\t\\\n  dependence.o df.o diagnostic.o doloop.o dominance.o dwarf2asm.o\t\\\n  dwarf2out.o dwarfout.o emit-rtl.o except.o explow.o expmed.o expr.o\t\\\n  final.o flow.o fold-const.o function.o gcse.o genrtl.o ggc-common.o\t\\\n@@ -745,9 +745,9 @@ OBJS =\t\t\t\t\t\t\t\t\t\\\n  print-tree.o profile.o real.o recog.o reg-stack.o regclass.o regmove.o\t\\\n  regrename.o reload.o reload1.o reorg.o resource.o rtl.o rtlanal.o\t\\\n  sbitmap.o sched-deps.o\tsched-ebb.o sched-rgn.o sched-vis.o sdbout.o\t\\\n- sibcall.o simplify-rtx.o splay-tree.o ssa.o stmt.o stor-layout.o\t\\\n- stringpool.o timevar.o\ttoplev.o tree.o unroll.o varasm.o varray.o\t\\\n- version.o xcoffout.o\t\\\n+ sibcall.o simplify-rtx.o splay-tree.o ssa.o ssa-ccp.o ssa-dce.o\t\\\n+ stmt.o stor-layout.o stringpool.o timevar.o toplev.o tree.o unroll.o\t\\\n+ varasm.o varray.o version.o xcoffout.o\t\t\t\t\t\\\n  $(GGC) $(out_object_file) $(EXTRA_OBJS)\n \n BACKEND = main.o libbackend.a\n@@ -1444,8 +1444,11 @@ lcm.o : lcm.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(REGS_H) hard-reg-set.h flags.h\n ssa.o : ssa.c $(CONFIG_H) $(SYSTEM_H) $(REGS_H) varray.h $(EXPR_H) \\\n    hard-reg-set.h flags.h function.h real.h insn-config.h $(RECOG_H)\t\\\n    $(BASIC_BLOCK_H) output.h ssa.h\n-ssa-dce.o : ssa-dce.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) hard-reg-set.h $(BASIC_BLOCK_H) \\\n-   ssa.h insn-config.h $(RECOG_H) output.h\n+ssa-dce.o : ssa-dce.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) hard-reg-set.h \\\n+   $(BASIC_BLOCK_H) ssa.h insn-config.h $(RECOG_H) output.h\n+ssa-ccp.o : ssa-ccp.c $(CONFIG_H) system.h $(RTL_H) hard-reg-set.h \\\n+    $(BASIC_BLOCK_H) ssa.h insn-config.h $(RECOG_H) output.h \\\n+    errors.h $(GGC_H) df.h function.h\n df.o : df.c $(CONFIG_H) system.h $(RTL_H) insn-config.h $(RECOG_H) \\\n    function.h $(REGS_H) $(OBSTACK_H) hard-reg-set.h $(BASIC_BLOCK_H) df.h\n conflict.o : conflict.c $(CONFIG_H) $(SYSTEM_H) $(OBSTACK_H) $(HASHTAB_H) \\"}, {"sha": "7bfc680ffcdeee3095a8a72f34b0e3e72ae03c78", "filename": "gcc/doc/gcc.texi", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Fdoc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Fdoc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc.texi?ref=0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "patch": "@@ -3446,10 +3446,27 @@ The option @option{-de} causes a debugging dump of the RTL code after\n this pass.  This dump file's name is made by appending @samp{.ssa} to\n the input file name.\n @itemize @bullet\n+@cindex SSA Conditional Constant Propagation\n+@cindex Conditional Constant Propagation, SSA based\n+@cindex conditional constant propagation\n+@opindex fssa-ccp\n+@item\n+SSA Conditional Constant Propagation.  Turned on by the @option{-fssa-ccp}\n+SSA Aggressive Dead Code Elimination.  Turned on by the @option{-fssa-dce}\n+option.  This pass performs conditional constant propagation to simplify\n+instructions including conditional branches.  This pass is more aggressive\n+than the constant propgation done by the CSE and GCSE pases, but operates\n+in linear time.\n+\n+@opindex dW\n+The option @option{-dW} causes a debugging dump of the RTL code after\n+this pass.  This dump file's name is made by appending @samp{.ssaccp} to\n+the input file name.\n+\n @cindex SSA DCE\n @cindex DCE, SSA based\n @cindex dead code elimination\n-@opindex fdce\n+@opindex fssa-dce\n @item\n SSA Aggressive Dead Code Elimination.  Turned on by the @option{-fssa-dce}\n option.  This pass performs elimination of code considered unnecessary because"}, {"sha": "f97abae903007530eecccc6b7b8734448f049561", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 32, "deletions": 27, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "patch": "@@ -272,7 +272,7 @@ in the following sections.\n -fregmove  -frename-registers @gol\n -frerun-cse-after-loop  -frerun-loop-opt @gol\n -fschedule-insns  -fschedule-insns2 @gol\n--fsingle-precision-constant  -fssa -fssa-dce @gol\n+-fsingle-precision-constant  -fssa -fssa-ccp -fssa-dce @gol\n -fstrength-reduce  -fstrict-aliasing  -fthread-jumps  -ftrapv @gol\n -funroll-all-loops  -funroll-loops  @gol\n --param @var{name}=@var{value}\n@@ -2859,49 +2859,49 @@ Here are the possible letters for use in @var{letters}, and their meanings:\n Annotate the assembler output with miscellaneous debugging information.\n @item b\n @opindex db\n-Dump after computing branch probabilities, to @file{@var{file}.13.bp}.\n+Dump after computing branch probabilities, to @file{@var{file}.14.bp}.\n @item B\n @opindex dB\n-Dump after block reordering, to @file{@var{file}.27.bbro}.\n+Dump after block reordering, to @file{@var{file}.28.bbro}.\n @item c\n @opindex dc\n-Dump after instruction combination, to the file @file{@var{file}.15.combine}.\n+Dump after instruction combination, to the file @file{@var{file}.16.combine}.\n @item C\n @opindex dC\n-Dump after the first if conversion, to the file @file{@var{file}.16.ce}.\n+Dump after the first if conversion, to the file @file{@var{file}.17.ce}.\n @item d\n @opindex dd\n-Dump after delayed branch scheduling, to @file{@var{file}.30.dbr}.\n+Dump after delayed branch scheduling, to @file{@var{file}.31.dbr}.\n @item D\n @opindex dD\n Dump all macro definitions, at the end of preprocessing, in addition to\n normal output.\n @item e\n @opindex de\n Dump after SSA optimizations, to @file{@var{file}.04.ssa} and\n-@file{@var{file}.06.ussa}.\n+@file{@var{file}.07.ussa}.\n @item E\n @opindex dE\n-Dump after the second if conversion, to @file{@var{file}.25.ce2}.\n+Dump after the second if conversion, to @file{@var{file}.26.ce2}.\n @item f\n @opindex df\n-Dump after life analysis, to @file{@var{file}.14.life}.\n+Dump after life analysis, to @file{@var{file}.15.life}.\n @item F\n @opindex dF\n-Dump after purging @code{ADDRESSOF} codes, to @file{@var{file}.08.addressof}.\n+Dump after purging @code{ADDRESSOF} codes, to @file{@var{file}.09.addressof}.\n @item g\n @opindex dg\n-Dump after global register allocation, to @file{@var{file}.20.greg}.\n+Dump after global register allocation, to @file{@var{file}.21.greg}.\n @item h\n @opindex dh\n Dump after finalization of EH handling code, to @file{@var{file}.02.eh}.\n @item o\n @item o\n @opindex do\n-Dump after post-reload CSE and other optimizations, to @file{@var{file}.21.postreload}.\n+Dump after post-reload CSE and other optimizations, to @file{@var{file}.22.postreload}.\n @item G\n @opindex dG\n-Dump after GCSE, to @file{@var{file}.09.gcse}.\n+Dump after GCSE, to @file{@var{file}.10.gcse}.\n @item i\n @opindex di\n Dump after sibling call optimizations, to @file{@var{file}.01.sibling}.\n@@ -2910,54 +2910,54 @@ Dump after sibling call optimizations, to @file{@var{file}.01.sibling}.\n Dump after the first jump optimization, to @file{@var{file}.03.jump}.\n @item J\n @opindex dJ\n-Dump after the last jump optimization, to @file{@var{file}.28.jump2}.\n+Dump after the last jump optimization, to @file{@var{file}.29.jump2}.\n @item k\n @opindex dk\n-Dump after conversion from registers to stack, to @file{@var{file}.31.stack}.\n+Dump after conversion from registers to stack, to @file{@var{file}.32.stack}.\n @item l\n @opindex dl\n-Dump after local register allocation, to @file{@var{file}.19.lreg}.\n+Dump after local register allocation, to @file{@var{file}.20.lreg}.\n @item L\n @opindex dL\n-Dump after loop optimization, to @file{@var{file}.10.loop}.\n+Dump after loop optimization, to @file{@var{file}.11.loop}.\n @item M\n @opindex dM\n Dump after performing the machine dependent reorganisation pass, to\n-@file{@var{file}.29.mach}.\n+@file{@var{file}.30.mach}.\n @item n\n @opindex dn\n-Dump after register renumbering, to @file{@var{file}.24.rnreg}.\n+Dump after register renumbering, to @file{@var{file}.25.rnreg}.\n @item N\n @opindex dN\n-Dump after the register move pass, to @file{@var{file}.17.regmove}.\n+Dump after the register move pass, to @file{@var{file}.18.regmove}.\n @item r\n @opindex dr\n Dump after RTL generation, to @file{@var{file}.00.rtl}.\n @item R\n @opindex dR\n Dump after the second instruction scheduling pass, to\n-@file{@var{file}.26.sched2}.\n+@file{@var{file}.27.sched2}.\n @item s\n @opindex ds\n Dump after CSE (including the jump optimization that sometimes follows\n-CSE), to @file{@var{file}.07.cse}.\n+CSE), to @file{@var{file}.08.cse}.\n @item S\n @opindex dS\n Dump after the first instruction scheduling pass, to\n-@file{@var{file}.18.sched}.\n+@file{@var{file}.19.sched}.\n @item t\n @opindex dt\n Dump after the second CSE pass (including the jump optimization that\n-sometimes follows CSE), to @file{@var{file}.11.cse2}.\n+sometimes follows CSE), to @file{@var{file}.12.cse2}.\n @item w\n @opindex dw\n-Dump after the second flow pass, to @file{@var{file}.22.flow2}.\n+Dump after the second flow pass, to @file{@var{file}.23.flow2}.\n @item X\n @opindex dX\n-Dump after SSA aggressive dead code elimination, to @file{@var{file}.05.ssadce}.\n+Dump after SSA aggressive dead code elimination, to @file{@var{file}.06.ssadce}.\n @item z\n @opindex dz\n-Dump after the peephole pass, to @file{@var{file}.23.peephole2}.\n+Dump after the peephole pass, to @file{@var{file}.24.peephole2}.\n @item a\n @opindex da\n Produce all the dumps listed above.\n@@ -3751,6 +3751,11 @@ flow graph is translated into SSA form, optimizations are performed, and\n the flow graph is translated back from SSA form.  Users should not\n specify this option, since it is not yet ready for production use.\n \n+@item -fssa-ccp\n+@opindex fssa-ccp\n+Perform Sparse Conditional Constant Propagation in SSA form.  Requires\n+@option{-fssa}.  Like @option{-fssa}, this is an experimental feature.\n+\n @item -fssa-dce\n @opindex fssa-dce\n Perform aggressive dead-code elimination in SSA form.  Requires @option{-fssa}."}, {"sha": "62f8867b818b7b79fd363ef87596523269389e75", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "patch": "@@ -1,3 +1,7 @@\n+Mon Jul  9 13:27:15 2001  Jeffrey A Law  (law@cygnus.com)\n+\n+        * POTFILES.in: Add ssa-ccp.c\n+\n Thu Jun 28 16:11:30 2001  Jeffrey A Law  (law@cygnus.com)\n \n \t* POTFILES.in: Add df.c and df.h"}, {"sha": "03f1ae36c76e5e8b3fad7016d75cd2dd0ed78194", "filename": "gcc/po/POTFILES.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Fpo%2FPOTFILES.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Fpo%2FPOTFILES.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FPOTFILES.in?ref=0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "patch": "@@ -1008,6 +1008,7 @@ sibcall.c\n simplify-rtx.c\n ssa.c\n ssa.h\n+ssa-ccp.c\n ssa-dce.c\n stack.h\n stmt.c"}, {"sha": "0aeb92091f9a6abf9eb12f2ba0dd0aa11d0df8c2", "filename": "gcc/ssa.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Fssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Fssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa.c?ref=0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "patch": "@@ -1924,7 +1924,9 @@ mark_phi_and_copy_regs (phi_set)\n \trtx pattern;\n \trtx src;\n \n-\tif (insn == NULL)\n+\tif (insn == NULL\n+\t    || (GET_CODE (insn) == NOTE\n+\t\t&& NOTE_LINE_NUMBER (insn) == NOTE_INSN_DELETED))\n \t  continue;\n \tpattern = PATTERN (insn);\n \t/* Sometimes we get PARALLEL insns.  These aren't phi nodes or"}, {"sha": "f07a7d26434fc0259d6367b50e5553c7e7d36bed", "filename": "gcc/timevar.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Ftimevar.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Ftimevar.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.def?ref=0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "patch": "@@ -70,6 +70,7 @@ DEFTIMEVAR (TV_REORDER_BLOCKS        , \"reorder blocks\")\n DEFTIMEVAR (TV_SHORTEN_BRANCH        , \"shorten branches\")\n DEFTIMEVAR (TV_REG_STACK             , \"reg stack\")\n DEFTIMEVAR (TV_TO_SSA                , \"convert to SSA\")\n+DEFTIMEVAR (TV_SSA_CCP               , \"SSA CCP\")\n DEFTIMEVAR (TV_SSA_DCE               , \"SSA aggressive DCE\")\n DEFTIMEVAR (TV_FROM_SSA              , \"convert from SSA\")\n DEFTIMEVAR (TV_FINAL                 , \"final\")"}, {"sha": "7406d43cdbbc19b16411e022c61dee4363ad99e1", "filename": "gcc/toplev.c", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=0b47e4c1cdabbb5e7bce3c0358fd82595be2fc60", "patch": "@@ -254,6 +254,7 @@ enum dump_file_index\n   DFI_eh,\n   DFI_jump,\n   DFI_ssa,\n+  DFI_ssa_ccp,\n   DFI_ssa_dce,\n   DFI_ussa,\n   DFI_cse,\n@@ -290,7 +291,7 @@ enum dump_file_index\n    Remaining -d letters:\n \n \t\"              o q   u     \"\n-\t\"       H  K   OPQ  TUVW YZ\"\n+\t\"       H  K   OPQ  TUV  YZ\"\n */\n \n struct dump_file_info dump_file[DFI_MAX] =\n@@ -300,6 +301,7 @@ struct dump_file_info dump_file[DFI_MAX] =\n   { \"eh\",\t'h', 0, 0, 0 },\n   { \"jump\",\t'j', 0, 0, 0 },\n   { \"ssa\",\t'e', 1, 0, 0 },\n+  { \"ssaccp\",\t'W', 1, 0, 0 },\n   { \"ssadce\",\t'X', 1, 0, 0 },\n   { \"ussa\",\t'e', 1, 0, 0 },\t/* Yes, duplicate enable switch.  */\n   { \"cse\",\t's', 0, 0, 0 },\n@@ -818,7 +820,10 @@ int flag_gnu_linker = 1;\n /* Enable SSA.  */\n int flag_ssa = 0;\n \n-/* Enable dead code elimination. */\n+/* Enable ssa conditional constant propagation.  */\n+int flag_ssa_ccp = 0;\n+\n+/* Enable ssa aggressive dead code elimination.  */\n int flag_ssa_dce = 0;\n \n /* Tag all structures with __attribute__(packed).  */\n@@ -1142,6 +1147,8 @@ lang_independent_options f_options[] =\n    N_(\"Instrument function entry/exit with profiling calls\") },\n   {\"ssa\", &flag_ssa, 1,\n    N_(\"Enable SSA optimizations\") },\n+  {\"ssa-ccp\", &flag_ssa_ccp, 1,\n+   N_(\"Enable SSA conditonal constant propagation\") },\n   {\"ssa-dce\", &flag_ssa_dce, 1,\n    N_(\"Enable aggressive SSA dead code elimination\") },\n   {\"leading-underscore\", &flag_leading_underscore, 1,\n@@ -2964,6 +2971,22 @@ rest_of_compilation (decl)\n       close_dump_file (DFI_ssa, print_rtl_with_bb, insns);\n       timevar_pop (TV_TO_SSA);\n \n+      /* Perform sparse conditional constant propagation, if requested.  */\n+      if (flag_ssa_ccp)\n+\t{\n+\t  timevar_push (TV_SSA_CCP);\n+\t  open_dump_file (DFI_ssa_ccp, decl);\n+\n+\t  ssa_const_prop ();\n+\n+\t  close_dump_file (DFI_ssa_ccp, print_rtl_with_bb, get_insns ());\n+\t  timevar_pop (TV_SSA_CCP);\n+\t}\n+\n+      /* It would be useful to cleanup the CFG at this point, but block\n+\t merging and possibly other transformations might leave a PHI\n+\t node in the middle of a basic block, which is a strict no-no.  */\n+\n       /* The SSA implementation uses basic block numbers in its phi\n \t nodes.  Thus, changing the control-flow graph or the basic\n \t blocks, e.g., calling find_basic_blocks () or cleanup_cfg (),"}]}