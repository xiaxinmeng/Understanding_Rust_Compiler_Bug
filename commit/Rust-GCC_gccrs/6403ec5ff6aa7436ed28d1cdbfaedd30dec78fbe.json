{"sha": "6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQwM2VjNWZmNmFhNzQzNmVkMjhkMWNkYmZhZWRkMzBkZWM3OGZiZQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jblomqvi@cc.hut.fi", "date": "2005-08-07T22:56:19Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2005-08-07T22:56:19Z"}, "message": "[multiple changes]\n\n2005-08-07   Janne Blomqvist <jblomqvi@cc.hut.fi>\n\n        PR fortran/22390\n        * dump-parse-tree.c (gfc_show_code_node): Add case for FLUSH.\n        * gfortran.h: Add enums for FLUSH.\n        * io.c (gfc_free_filepos,match_file_element,match_filepos): Modify\n        comment appropriately.  (gfc_match_flush): New function.\n        * match.c (gfc_match_if): Add match for flush.\n        * match.h: Add prototype.\n        * parse.c (decode_statement): Add flush to 'f' case.\n        (next_statement): Add case for flush. (gfc_ascii_statement): Likewise.\n        * resolve.c (resolve_code): Add flush case.\n        * st.c (gfc_free_statement): Add flush case.\n        * trans-io.c: Add prototype for flush.\n        (gfc_build_io_library_fndecls): Build fndecl for flush.\n        (gfc_trans_flush): New function.\n        * trans-stmt.h: Add prototype.\n        * trans.c (gfc_trans_code): Add case for flush.\n\n2005-08-07  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n\n        PR fortran/22390\n        * io/backspace.c: File removed, contents moved to ...\n        * io/endfile.c: Ditto.\n        * io/rewind.c: Ditto.\n        * io/file_pos.c: New file, ... here.\n        * Makefile.am: Add file_pos.c to list, remove obsolete files.\n        * Makefile.in: Regenerated.\n\n2005-08-07  Janne Blomqvist <jblomqvi@cc.hut.fi>\n            Steven G. Kargl <kargls@comcast.net>\n\n        PR fortran/22390\n        * gfortran.dg/flush_1.f90: New test.\n\nCo-Authored-By: Steven G. Kargl <kargls@comcast.net>\n\nFrom-SVN: r102835", "tree": {"sha": "776ab9ca4e6e1d2bbc7e4ac4d9e56a25dc86106e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/776ab9ca4e6e1d2bbc7e4ac4d9e56a25dc86106e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/comments", "author": null, "committer": null, "parents": [{"sha": "f18faab7c47ea68f493465631d146e2f4a1ecd29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f18faab7c47ea68f493465631d146e2f4a1ecd29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f18faab7c47ea68f493465631d146e2f4a1ecd29"}], "stats": {"total": 167, "additions": 133, "deletions": 34}, "files": [{"sha": "f3384c0dff58bf7b60823dd0ce6bcb0b807c0e65", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -1,3 +1,22 @@\n+2005-08-07   Janne Blomqvist <jblomqvi@cc.hut.fi>\n+\n+\tPR fortran/22390 \n+\t* dump-parse-tree.c (gfc_show_code_node): Add case for FLUSH.\n+\t* gfortran.h: Add enums for FLUSH.\n+\t* io.c (gfc_free_filepos,match_file_element,match_filepos): Modify\n+\tcomment appropriately.  (gfc_match_flush): New function.\n+\t* match.c (gfc_match_if): Add match for flush.\n+\t* match.h: Add prototype.\n+\t* parse.c (decode_statement): Add flush to 'f' case.\n+\t(next_statement): Add case for flush. (gfc_ascii_statement): Likewise.\n+\t* resolve.c (resolve_code): Add flush case.\n+\t* st.c (gfc_free_statement): Add flush case.\n+\t* trans-io.c: Add prototype for flush.\n+\t(gfc_build_io_library_fndecls): Build fndecl for flush.\n+\t(gfc_trans_flush): New function.\n+\t* trans-stmt.h: Add prototype.\n+\t* trans.c (gfc_trans_code): Add case for flush.\n+\n 2005-08-06  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* primary.c (match_hollerith_constant): Fix typo."}, {"sha": "8f039d2f364d51e25f88bd46e077dcce197aa9f2", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -1177,6 +1177,10 @@ gfc_show_code_node (int level, gfc_code * c)\n \n     case EXEC_REWIND:\n       gfc_status (\"REWIND\");\n+      goto show_filepos;\n+\n+    case EXEC_FLUSH:\n+      gfc_status (\"FLUSH\");\n \n     show_filepos:\n       fp = c->ext.filepos;"}, {"sha": "83e71c44535499ba5430c247f74d673c401822b8", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -192,17 +192,17 @@ typedef enum\n   ST_CALL, ST_CASE, ST_CLOSE, ST_COMMON, ST_CONTINUE, ST_CONTAINS, ST_CYCLE,\n   ST_DATA, ST_DATA_DECL, ST_DEALLOCATE, ST_DO, ST_ELSE, ST_ELSEIF,\n   ST_ELSEWHERE, ST_END_BLOCK_DATA, ST_ENDDO, ST_IMPLIED_ENDDO,\n-  ST_END_FILE, ST_END_FORALL, ST_END_FUNCTION, ST_ENDIF, ST_END_INTERFACE,\n-  ST_END_MODULE, ST_END_PROGRAM, ST_END_SELECT, ST_END_SUBROUTINE,\n-  ST_END_WHERE, ST_END_TYPE, ST_ENTRY, ST_EQUIVALENCE, ST_EXIT, ST_FORALL,\n-  ST_FORALL_BLOCK, ST_FORMAT, ST_FUNCTION, ST_GOTO, ST_IF_BLOCK, ST_IMPLICIT,\n-  ST_IMPLICIT_NONE, ST_INQUIRE, ST_INTERFACE, ST_PARAMETER, ST_MODULE,\n-  ST_MODULE_PROC, ST_NAMELIST, ST_NULLIFY, ST_OPEN, ST_PAUSE, ST_PRIVATE,\n-  ST_PROGRAM, ST_PUBLIC, ST_READ, ST_RETURN, ST_REWIND, ST_STOP,\n-  ST_SUBROUTINE,\n-  ST_TYPE, ST_USE, ST_WHERE_BLOCK, ST_WHERE, ST_WRITE, ST_ASSIGNMENT,\n-  ST_POINTER_ASSIGNMENT, ST_SELECT_CASE, ST_SEQUENCE, ST_SIMPLE_IF,\n-  ST_STATEMENT_FUNCTION, ST_DERIVED_DECL, ST_LABEL_ASSIGNMENT, ST_NONE\n+  ST_END_FILE, ST_FLUSH, ST_END_FORALL, ST_END_FUNCTION, ST_ENDIF,\n+  ST_END_INTERFACE, ST_END_MODULE, ST_END_PROGRAM, ST_END_SELECT,\n+  ST_END_SUBROUTINE, ST_END_WHERE, ST_END_TYPE, ST_ENTRY, ST_EQUIVALENCE,\n+  ST_EXIT, ST_FORALL, ST_FORALL_BLOCK, ST_FORMAT, ST_FUNCTION, ST_GOTO,\n+  ST_IF_BLOCK, ST_IMPLICIT, ST_IMPLICIT_NONE, ST_INQUIRE, ST_INTERFACE,\n+  ST_PARAMETER, ST_MODULE, ST_MODULE_PROC, ST_NAMELIST, ST_NULLIFY, ST_OPEN,\n+  ST_PAUSE, ST_PRIVATE, ST_PROGRAM, ST_PUBLIC, ST_READ, ST_RETURN, ST_REWIND,\n+  ST_STOP, ST_SUBROUTINE, ST_TYPE, ST_USE, ST_WHERE_BLOCK, ST_WHERE, ST_WRITE,\n+  ST_ASSIGNMENT, ST_POINTER_ASSIGNMENT, ST_SELECT_CASE, ST_SEQUENCE,\n+  ST_SIMPLE_IF, ST_STATEMENT_FUNCTION, ST_DERIVED_DECL, ST_LABEL_ASSIGNMENT,\n+  ST_NONE\n }\n gfc_statement;\n \n@@ -1325,7 +1325,7 @@ typedef enum\n   EXEC_ALLOCATE, EXEC_DEALLOCATE,\n   EXEC_OPEN, EXEC_CLOSE,\n   EXEC_READ, EXEC_WRITE, EXEC_IOLENGTH, EXEC_TRANSFER, EXEC_DT_END,\n-  EXEC_BACKSPACE, EXEC_ENDFILE, EXEC_INQUIRE, EXEC_REWIND\n+  EXEC_BACKSPACE, EXEC_ENDFILE, EXEC_INQUIRE, EXEC_REWIND, EXEC_FLUSH\n }\n gfc_exec_op;\n "}, {"sha": "78899aa8453f4a70c494b453e7d05d2a6de47a14", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -1340,7 +1340,7 @@ gfc_free_filepos (gfc_filepos * fp)\n }\n \n \n-/* Match elements of a REWIND, BACKSPACE or ENDFILE statement.  */\n+/* Match elements of a REWIND, BACKSPACE, ENDFILE, or FLUSH statement.  */\n \n static match\n match_file_element (gfc_filepos * fp)\n@@ -1362,7 +1362,7 @@ match_file_element (gfc_filepos * fp)\n \n \n /* Match the second half of the file-positioning statements, REWIND,\n-   BACKSPACE or ENDFILE.  */\n+   BACKSPACE, ENDFILE, or the FLUSH statement.  */\n \n static match\n match_filepos (gfc_statement st, gfc_exec_op op)\n@@ -1446,8 +1446,8 @@ gfc_resolve_filepos (gfc_filepos * fp)\n }\n \n \n-/* Match the file positioning statements: ENDFILE, BACKSPACE or\n-   REWIND.  */\n+/* Match the file positioning statements: ENDFILE, BACKSPACE, REWIND,\n+   and the FLUSH statement.  */\n \n match\n gfc_match_endfile (void)\n@@ -1470,6 +1470,14 @@ gfc_match_rewind (void)\n   return match_filepos (ST_REWIND, EXEC_REWIND);\n }\n \n+match\n+gfc_match_flush (void)\n+{\n+  if (gfc_notify_std (GFC_STD_F2003, \"Fortran 2003: FLUSH statement at %C\") == FAILURE)\n+    return MATCH_ERROR;\n+\n+  return match_filepos (ST_FLUSH, EXEC_FLUSH);\n+}\n \n /******************** Data Transfer Statements *********************/\n "}, {"sha": "87737fcced588ab8809d3e4051b838519288a171", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -1074,6 +1074,7 @@ gfc_match_if (gfc_statement * if_type)\n     match (\"deallocate\", gfc_match_deallocate, ST_DEALLOCATE)\n     match (\"end file\", gfc_match_endfile, ST_END_FILE)\n     match (\"exit\", gfc_match_exit, ST_EXIT)\n+    match (\"flush\", gfc_match_flush, ST_FLUSH)\n     match (\"forall\", match_simple_forall, ST_FORALL)\n     match (\"go to\", gfc_match_goto, ST_GOTO)\n     match (\"if\", match_arithmetic_if, ST_ARITHMETIC_IF)"}, {"sha": "e8f8b8be1e7d4778a372b3aa1f5d6efd886a00a2", "filename": "gcc/fortran/match.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fmatch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fmatch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.h?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -154,6 +154,7 @@ match gfc_match_close (void);\n match gfc_match_endfile (void);\n match gfc_match_backspace (void);\n match gfc_match_rewind (void);\n+match gfc_match_flush (void);\n match gfc_match_inquire (void);\n match gfc_match_read (void);\n match gfc_match_write (void);"}, {"sha": "2894e505b3d3114e43f4544f0d769dd07ac9f92c", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -212,6 +212,7 @@ decode_statement (void)\n       break;\n \n     case 'f':\n+      match (\"flush\", gfc_match_flush, ST_FLUSH);\n       match (\"format\", gfc_match_format, ST_FORMAT);\n       break;\n \n@@ -526,7 +527,8 @@ next_statement (void)\n   case ST_READ: case ST_RETURN: case ST_REWIND: case ST_SIMPLE_IF: \\\n   case ST_PAUSE: case ST_STOP: case ST_WRITE: case ST_ASSIGNMENT: \\\n   case ST_POINTER_ASSIGNMENT: case ST_EXIT: case ST_CYCLE: \\\n-  case ST_ARITHMETIC_IF: case ST_WHERE: case ST_FORALL: case ST_LABEL_ASSIGNMENT\n+  case ST_ARITHMETIC_IF: case ST_WHERE: case ST_FORALL: \\\n+  case ST_LABEL_ASSIGNMENT: case ST_FLUSH\n \n /* Statements that mark other executable statements.  */\n \n@@ -833,6 +835,9 @@ gfc_ascii_statement (gfc_statement st)\n     case ST_EXIT:\n       p = \"EXIT\";\n       break;\n+    case ST_FLUSH:\n+      p = \"FLUSH\";\n+      break;\n     case ST_FORALL_BLOCK:\t/* Fall through */\n     case ST_FORALL:\n       p = \"FORALL\";"}, {"sha": "d855a7fd7b4248861e1391ca146d92c6a798b3eb", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -3953,6 +3953,7 @@ resolve_code (gfc_code * code, gfc_namespace * ns)\n \tcase EXEC_BACKSPACE:\n \tcase EXEC_ENDFILE:\n \tcase EXEC_REWIND:\n+\tcase EXEC_FLUSH:\n \t  if (gfc_resolve_filepos (code->ext.filepos) == FAILURE)\n \t    break;\n "}, {"sha": "dc0a01e01a3ec47417b3fab1ab5c1395479e5d15", "filename": "gcc/fortran/st.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fst.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Fst.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fst.c?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -139,6 +139,7 @@ gfc_free_statement (gfc_code * p)\n     case EXEC_BACKSPACE:\n     case EXEC_ENDFILE:\n     case EXEC_REWIND:\n+    case EXEC_FLUSH:\n       gfc_free_filepos (p->ext.filepos);\n       break;\n "}, {"sha": "b25e80a98f526b88da2707d84334c6c6ee85974b", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -125,6 +125,7 @@ static GTY(()) tree iocall_iolength_done;\n static GTY(()) tree iocall_rewind;\n static GTY(()) tree iocall_backspace;\n static GTY(()) tree iocall_endfile;\n+static GTY(()) tree iocall_flush;\n static GTY(()) tree iocall_set_nml_val;\n static GTY(()) tree iocall_set_nml_val_dim;\n \n@@ -297,6 +298,11 @@ gfc_build_io_library_fndecls (void)\n   iocall_endfile =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"st_endfile\")),\n \t\t\t\t     gfc_int4_type_node, 0);\n+\n+  iocall_flush =\n+    gfc_build_library_function_decl (get_identifier (PREFIX(\"st_flush\")),\n+\t\t\t\t     gfc_int4_type_node, 0);\n+\n   /* Library helpers */\n \n   iocall_read_done =\n@@ -755,6 +761,16 @@ gfc_trans_rewind (gfc_code * code)\n }\n \n \n+/* Translate a FLUSH statement.  */\n+\n+tree\n+gfc_trans_flush (gfc_code * code)\n+{\n+\n+  return build_filepos (iocall_flush, code);\n+}\n+\n+\n /* Translate the non-IOLENGTH form of an INQUIRE statement.  */\n \n tree\n@@ -770,6 +786,10 @@ gfc_trans_inquire (gfc_code * code)\n   set_error_locus (&block, &code->loc);\n   p = code->ext.inquire;\n \n+  /* Sanity check.  */\n+  if (p->unit && p->file)\n+    gfc_error (\"INQUIRE statement at %L cannot contain both FILE and UNIT specifiers.\", &code->loc);\n+\n   if (p->unit)\n     set_parameter_value (&block, ioparm_unit, p->unit);\n "}, {"sha": "c1e5513839291c6b3d16775438e328ed7f15bb6f", "filename": "gcc/fortran/trans-stmt.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Ftrans-stmt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Ftrans-stmt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.h?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -61,6 +61,7 @@ tree gfc_trans_backspace (gfc_code *);\n tree gfc_trans_endfile (gfc_code *);\n tree gfc_trans_inquire (gfc_code *);\n tree gfc_trans_rewind (gfc_code *);\n+tree gfc_trans_flush (gfc_code *);\n \n tree gfc_trans_transfer (gfc_code *);\n tree gfc_trans_dt_end (gfc_code *);"}, {"sha": "0ee8459718a65b8a6c215f217ebbc974f676187a", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -557,6 +557,10 @@ gfc_trans_code (gfc_code * code)\n \t  res = gfc_trans_select (code);\n \t  break;\n \n+\tcase EXEC_FLUSH:\n+\t  res = gfc_trans_flush (code);\n+\t  break;\n+\n \tcase EXEC_FORALL:\n \t  res = gfc_trans_forall (code);\n \t  break;"}, {"sha": "42a216a8eaee75b1428d8493c47bacc2d3d70ea3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -1,3 +1,9 @@\n+2005-08-07  Janne Blomqvist <jblomqvi@cc.hut.fi>\n+            Steven G. Kargl <kargls@comcast.net>\n+\n+\tPR fortran/22390 \n+\t* gfortran.dg/flush_1.f90: New test.\n+\n 2005-08-06  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/23191"}, {"sha": "51b7fa02f605a5810f0681947bb64d979a758ec9", "filename": "gcc/testsuite/gfortran.dg/flush_1.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ftestsuite%2Fgfortran.dg%2Fflush_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/gcc%2Ftestsuite%2Fgfortran.dg%2Fflush_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fflush_1.f90?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do run }\n+! PR 22390 Implement flush statement\n+program flush_1\n+\n+   character(len=256) msg\n+   integer ios\n+\n+   open (unit=10, access='SEQUENTIAL', status='SCRATCH')\n+\n+   write (10, *) 42\n+   flush 10                   ! { dg-warning \"Fortran 2003: FLUSH statement\" }\n+\n+   write (10, *) 42\n+   flush(10)                  ! { dg-warning \"Fortran 2003: FLUSH statement\" }\n+\n+   write (10, *) 42\n+   flush(unit=10, iostat=ios) ! { dg-warning \"Fortran 2003: FLUSH statement\" }\n+   if (ios /= 0) call abort\n+\n+   write (10, *) 42\n+   flush (unit=10, err=20)    ! { dg-warning \"Fortran 2003: FLUSH statement\" }\n+   goto 30\n+20 call abort\n+30 continue\n+\n+   call flush(10)\n+\n+end program flush_1"}, {"sha": "aed0280b7c1357dbf53e171abfb37b1b347cbc4a", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -1,3 +1,13 @@\n+2005-08-07  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n+\n+\tPR fortran/22390\n+\t* io/backspace.c: File removed, contents moved to ...\n+\t* io/endfile.c: Ditto.\n+\t* io/rewind.c: Ditto.\n+\t* io/file_pos.c: New file, ... here.\n+\t* Makefile.am: Add file_pos.c to list, remove obsolete files.\n+\t* Makefile.in: Regenerated.\n+\n 2005-08-07  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* io/io.h: Change DEFAULT_TEMPDIR to /tmp instead of /var/tmp."}, {"sha": "9d6af64726f10d9d5f763cefe9bfee7fb56f5776", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -21,16 +21,14 @@ AM_CPPFLAGS = -iquote$(srcdir)/io\n libgfortranincludedir = $(includedir)/gforio\n \n gfor_io_src= \\\n-io/backspace.c \\\n io/close.c \\\n-io/endfile.c \\\n+io/file_pos.c \\\n io/format.c \\\n io/inquire.c \\\n io/list_read.c \\\n io/lock.c \\\n io/open.c \\\n io/read.c \\\n-io/rewind.c \\\n io/transfer.c \\\n io/unit.c \\\n io/unix.c \\"}, {"sha": "15aa5e30f9e46ae33ad1c9befa8f3d6652a59837", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=6403ec5ff6aa7436ed28d1cdbfaedd30dec78fbe", "patch": "@@ -127,9 +127,9 @@ am__objects_31 = $(am__objects_2) $(am__objects_3) $(am__objects_4) \\\n \t$(am__objects_23) $(am__objects_24) $(am__objects_25) \\\n \t$(am__objects_26) $(am__objects_27) $(am__objects_28) \\\n \t$(am__objects_29) $(am__objects_30)\n-am__objects_32 = backspace.lo close.lo endfile.lo format.lo inquire.lo \\\n-\tlist_read.lo lock.lo open.lo read.lo rewind.lo transfer.lo \\\n-\tunit.lo unix.lo write.lo\n+am__objects_32 = close.lo file_pos.lo format.lo inquire.lo \\\n+\tlist_read.lo lock.lo open.lo read.lo transfer.lo unit.lo \\\n+\tunix.lo write.lo\n am__objects_33 = associated.lo abort.lo args.lo bessel.lo \\\n \tc99_functions.lo chdir.lo cpu_time.lo cshift0.lo \\\n \tdate_and_time.lo env.lo erf.lo eoshift0.lo eoshift2.lo \\\n@@ -315,16 +315,14 @@ libgfortranbegin_la_LDFLAGS = -static\n AM_CPPFLAGS = -iquote$(srcdir)/io\n libgfortranincludedir = $(includedir)/gforio\n gfor_io_src = \\\n-io/backspace.c \\\n io/close.c \\\n-io/endfile.c \\\n+io/file_pos.c \\\n io/format.c \\\n io/inquire.c \\\n io/list_read.c \\\n io/lock.c \\\n io/open.c \\\n io/read.c \\\n-io/rewind.c \\\n io/transfer.c \\\n io/unit.c \\\n io/unix.c \\\n@@ -1216,14 +1214,11 @@ pow_c4_i8.lo: generated/pow_c4_i8.c\n pow_c8_i8.lo: generated/pow_c8_i8.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pow_c8_i8.lo `test -f 'generated/pow_c8_i8.c' || echo '$(srcdir)/'`generated/pow_c8_i8.c\n \n-backspace.lo: io/backspace.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o backspace.lo `test -f 'io/backspace.c' || echo '$(srcdir)/'`io/backspace.c\n-\n close.lo: io/close.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o close.lo `test -f 'io/close.c' || echo '$(srcdir)/'`io/close.c\n \n-endfile.lo: io/endfile.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o endfile.lo `test -f 'io/endfile.c' || echo '$(srcdir)/'`io/endfile.c\n+file_pos.lo: io/file_pos.c\n+\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o file_pos.lo `test -f 'io/file_pos.c' || echo '$(srcdir)/'`io/file_pos.c\n \n format.lo: io/format.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o format.lo `test -f 'io/format.c' || echo '$(srcdir)/'`io/format.c\n@@ -1243,9 +1238,6 @@ open.lo: io/open.c\n read.lo: io/read.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o read.lo `test -f 'io/read.c' || echo '$(srcdir)/'`io/read.c\n \n-rewind.lo: io/rewind.c\n-\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rewind.lo `test -f 'io/rewind.c' || echo '$(srcdir)/'`io/rewind.c\n-\n transfer.lo: io/transfer.c\n \t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transfer.lo `test -f 'io/transfer.c' || echo '$(srcdir)/'`io/transfer.c\n "}]}