{"sha": "f269f54ff8ad60b0df7c31cb25619c28f0fc1f51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI2OWY1NGZmOGFkNjBiMGRmN2MzMWNiMjU2MTljMjhmMGZjMWY1MQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2003-02-02T06:08:58Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2003-02-02T06:08:58Z"}, "message": "* doc/install.texi (hppa*-hp-hpux11*): Update installation notes.\n\nFrom-SVN: r62273", "tree": {"sha": "4a8b21f367e0703e351a876caea7321f4efc4cbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a8b21f367e0703e351a876caea7321f4efc4cbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f269f54ff8ad60b0df7c31cb25619c28f0fc1f51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f269f54ff8ad60b0df7c31cb25619c28f0fc1f51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f269f54ff8ad60b0df7c31cb25619c28f0fc1f51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f269f54ff8ad60b0df7c31cb25619c28f0fc1f51/comments", "author": null, "committer": null, "parents": [{"sha": "611ad29eedae3ce061de881cc19bd634220e0fe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/611ad29eedae3ce061de881cc19bd634220e0fe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/611ad29eedae3ce061de881cc19bd634220e0fe9"}], "stats": {"total": 54, "additions": 38, "deletions": 16}, "files": [{"sha": "76fa985d98fd82413c5613a35e55dc78bf75dcb5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f269f54ff8ad60b0df7c31cb25619c28f0fc1f51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f269f54ff8ad60b0df7c31cb25619c28f0fc1f51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f269f54ff8ad60b0df7c31cb25619c28f0fc1f51", "patch": "@@ -1,3 +1,7 @@\n+2003-02-02  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* doc/install.texi (hppa*-hp-hpux11*): Update installation notes.\n+\n 2003-02-02  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa-protos.h (attr_length_millicode_call): Remove second argument."}, {"sha": "357fa68c1c2aba4215ddabd52cd0a91cc465ed00", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 34, "deletions": 16, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f269f54ff8ad60b0df7c31cb25619c28f0fc1f51/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f269f54ff8ad60b0df7c31cb25619c28f0fc1f51/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=f269f54ff8ad60b0df7c31cb25619c28f0fc1f51", "patch": "@@ -2206,11 +2206,16 @@ bootstrap}.\n GCC 3.0 and up support HP-UX 11.  On 64-bit capable systems, there\n are two distinct ports.  The @samp{hppa2.0w-hp-hpux11*} port generates\n code for the 32-bit pa-risc runtime architecture.  It uses the HP\n-linker and is currently the default selected by config.guess.  The\n-optional @samp{hppa64-hp-hpux11*} port generates 64-bit code for the\n-pa-risc 2.0 architecture.  It must be explicitly selected using the\n-@samp{--host=hppa64-hp-hpux11*} configure option.  Different prefixes\n-must be used if both ports are to be installed on the same system.\n+linker.  The @samp{hppa64-hp-hpux11*} port generates 64-bit code for the\n+pa-risc 2.0 architecture.  The script config.guess now selects the port\n+type based on the type compiler detected during configuration.  You must\n+set your @env{PATH} or define @env{CC} so that configure finds an appropriate\n+compiler for the initial bootstrap.  Different prefixes must be used if\n+both ports are to be installed on the same system.\n+\n+GCC 2.95.x is not supported under HP-UX 11 and cannot be used to\n+compile GCC 3.0 and up.  Refer to @uref{binaries.html,,binaries} for\n+information about obtaining precompiled GCC binaries for HP-UX.\n \n You must use GNU binutils 2.11 or above with the 32-bit port.  Thread\n support is not currently implemented, so @option{--enable-threads} does\n@@ -2221,17 +2226,30 @@ not work.  See:\n @item @uref{http://gcc.gnu.org/ml/gcc-bugs/2002-01/msg00663.html}\n @end itemize\n \n-GCC 2.95.x is not supported under HP-UX 11 and cannot be used to\n-compile GCC 3.0 and up.  Refer to @uref{binaries.html,,binaries} for\n-information about obtaining precompiled GCC binaries for HP-UX.\n-\n-GNU binutils 2.13 or later is recommended with the 64-bit port.\n-The HP assembler has many limitations and is not recommended.  For\n-example, it does not support weak symbols or alias definitions.\n-As a result, explicit template instantiations are required when\n-using C++.  Either the HP or GNU linker can be used but it may be\n-necessary to use the GNU linker when dwarf2 exception support is\n-implemented.\n+GCC 3.3 and later support weak symbols on the 32-bit port using SOM\n+secondary definition symbols.  This feature is not enabled for earlier\n+versions of HP-UX since there have been bugs in the linker support for\n+secondary symbols.  The HP linker patches @code{PHSS_26559} and\n+@code{PHSS_24304} for HP-UX 11.00 and 11.11, respectively, correct the\n+problem of linker core dumps creating C++ libraries.  Earlier patches\n+may work but they have not been tested.\n+\n+GCC 3.3 nows uses the ELF DT_INIT_ARRAY and DT_FINI_ARRAY capability\n+to run initializers and finalizers on the 64-bit port.  The feature\n+requires CVS binutils as of January 2, 2003, or a subsequent release\n+to correct a problem arising from HP's non-standard use of the .init\n+and .fini sections.  The 32-bit port uses the linker @option{+init}\n+and @option{+fini} options.  As with the support for secondary symbols,\n+there have been bugs in the order in which these options are executed\n+by the HP linker.  So, again a recent linker patch is recommended.\n+\n+The HP assembler has many limitations and is not recommended for either\n+the 32 or 64-bit ports.  For example, it does not support weak symbols\n+or alias definitions.  As a result, explicit template instantiations\n+are required when using C++.  You also can't generate debugging information\n+when using the HP assembler.  Either the HP or GNU linker can be used\n+with the 64-bit port but it may be necessary to use the GNU linker\n+when dwarf2 exception support is implemented.\n \n There are several possible approaches to building the distribution.\n Binutils can be built first using the HP tools.  Then, the GCC"}]}