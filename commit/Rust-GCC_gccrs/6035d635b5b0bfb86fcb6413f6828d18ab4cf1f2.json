{"sha": "6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzNWQ2MzViNWIwYmZiODZmY2I2NDEzZjY4MjhkMThhYjRjZjFmMg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2003-05-05T19:21:10Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2003-05-05T19:21:10Z"}, "message": "20030505.c: New.\n\n2003-05-05  Aldy Hernandez  <aldyh@redhat.com>\n\n        * testsuite/gcc.dg/20030505.c: New.\n\n        * c-typeck.c (convert_for_assignment): Opaque pointers can\n        interconvert.\n\n        * config/rs6000/rs6000.c: New global opaque_p_V2SI_type_node.\n        (rs6000_init_builtins): Initialize opaque_p_V2SI_type_node.\n        (spe_init_builtins): Rename all pv2si_type_node to\n        opaque_p_V2SI_type_node.\n        Remove declaration of pv2si_type_node.\n        (is_ev64_opaque_type): Accept opaque pointers.\n\nFrom-SVN: r66495", "tree": {"sha": "4a6192afeb9e6bb64833b9f3b01f7344ede8dac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a6192afeb9e6bb64833b9f3b01f7344ede8dac9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50b97e0f2b93e0f715d902301e543ebe71a00b99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50b97e0f2b93e0f715d902301e543ebe71a00b99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50b97e0f2b93e0f715d902301e543ebe71a00b99"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "a28796eb99f83eb6c6f27c445872aac7fba5eedf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2", "patch": "@@ -1,3 +1,17 @@\n+2003-05-05  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * testsuite/gcc.dg/20030505.c: New.\n+\n+        * c-typeck.c (convert_for_assignment): Opaque pointers can\n+        interconvert.\n+\n+        * config/rs6000/rs6000.c: New global opaque_p_V2SI_type_node.\n+        (rs6000_init_builtins): Initialize opaque_p_V2SI_type_node.\n+        (spe_init_builtins): Rename all pv2si_type_node to\n+        opaque_p_V2SI_type_node.\n+        Remove declaration of pv2si_type_node.\n+        (is_ev64_opaque_type): Accept opaque pointers.\n+\n 2003-05-05  Geoffrey Keating  <geoffk@apple.com>\n \n \t* toplev.c (check_global_declarations): Suppress not-used warning"}, {"sha": "23b7d2da970eb8e1f3cf0b3d38edf49f6b9d5bdf", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2", "patch": "@@ -4209,12 +4209,20 @@ convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)\n     {\n       tree ttl = TREE_TYPE (type);\n       tree ttr = TREE_TYPE (rhstype);\n+      bool is_opaque_pointer;\n+\n+      /* Opaque pointers are treated like void pointers.  */\n+      is_opaque_pointer = ((*targetm.vector_opaque_p) (type)\n+                           || (*targetm.vector_opaque_p) (rhstype))\n+        && TREE_CODE (ttl) == VECTOR_TYPE\n+        && TREE_CODE (ttr) == VECTOR_TYPE;\n \n       /* Any non-function converts to a [const][volatile] void *\n \t and vice versa; otherwise, targets must be the same.\n \t Meanwhile, the lhs target must have all the qualifiers of the rhs.  */\n       if (VOID_TYPE_P (ttl) || VOID_TYPE_P (ttr)\n \t  || comp_target_types (type, rhstype, 0)\n+\t  || is_opaque_pointer\n \t  || (c_common_unsigned_type (TYPE_MAIN_VARIANT (ttl))\n \t      == c_common_unsigned_type (TYPE_MAIN_VARIANT (ttr))))\n \t{"}, {"sha": "695443a0ed58656daf16ed8970a97cc7e69f8f40", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2", "patch": "@@ -147,11 +147,10 @@ const char *rs6000_debug_name;\n int rs6000_debug_stack;\t\t/* debug stack applications */\n int rs6000_debug_arg;\t\t/* debug argument handling */\n \n-/* A copy of V2SI_type_node to be used as an opaque type.  */\n+/* Opaque types.  */\n static GTY(()) tree opaque_V2SI_type_node;\n-\n-/* Same, but for V2SF.  */\n static GTY(()) tree opaque_V2SF_type_node;\n+static GTY(()) tree opaque_p_V2SI_type_node;\n \n const char *rs6000_traceback_name;\n static enum {\n@@ -5645,6 +5644,7 @@ rs6000_init_builtins ()\n {\n   opaque_V2SI_type_node = copy_node (V2SI_type_node);\n   opaque_V2SF_type_node = copy_node (V2SF_type_node);\n+  opaque_p_V2SI_type_node = build_pointer_type (opaque_V2SI_type_node);\n \n   if (TARGET_SPE)\n     spe_init_builtins ();\n@@ -5689,7 +5689,6 @@ spe_init_builtins ()\n   tree endlink = void_list_node;\n   tree puint_type_node = build_pointer_type (unsigned_type_node);\n   tree pushort_type_node = build_pointer_type (short_unsigned_type_node);\n-  tree pv2si_type_node = build_pointer_type (opaque_V2SI_type_node);\n   struct builtin_description *d;\n   size_t i;\n \n@@ -5746,15 +5745,15 @@ spe_init_builtins ()\n   tree void_ftype_v2si_pv2si_int\n     = build_function_type (void_type_node,\n \t\t\t   tree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, pv2si_type_node,\n+\t\t\t\t      tree_cons (NULL_TREE, opaque_p_V2SI_type_node,\n \t\t\t\t\t\t tree_cons (NULL_TREE,\n \t\t\t\t\t\t\t    integer_type_node,\n \t\t\t\t\t\t\t    endlink))));\n \n   tree void_ftype_v2si_pv2si_char\n     = build_function_type (void_type_node,\n \t\t\t   tree_cons (NULL_TREE, opaque_V2SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, pv2si_type_node,\n+\t\t\t\t      tree_cons (NULL_TREE, opaque_p_V2SI_type_node,\n \t\t\t\t\t\t tree_cons (NULL_TREE,\n \t\t\t\t\t\t\t    char_type_node,\n \t\t\t\t\t\t\t    endlink))));\n@@ -5769,7 +5768,7 @@ spe_init_builtins ()\n \n   tree v2si_ftype_pv2si_int\n     = build_function_type (opaque_V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pv2si_type_node,\n+\t\t\t   tree_cons (NULL_TREE, opaque_p_V2SI_type_node,\n \t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n \t\t\t\t\t\t endlink)));\n \n@@ -14044,6 +14043,7 @@ is_ev64_opaque_type (type)\n   return (TARGET_SPE\n \t  && (type == opaque_V2SI_type_node\n \t      || type == opaque_V2SF_type_node\n+\t      || type == opaque_p_V2SI_type_node\n \t      || (TREE_CODE (type) == VECTOR_TYPE\n \t\t  && TYPE_NAME (type)\n \t\t  && TREE_CODE (TYPE_NAME (type)) == TYPE_DECL"}, {"sha": "1cd80a522cadb801850b45e910b9a7d99d7c0ae6", "filename": "gcc/testsuite/gcc.dg/20030505.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2/gcc%2Ftestsuite%2Fgcc.dg%2F20030505.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2/gcc%2Ftestsuite%2Fgcc.dg%2F20030505.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030505.c?ref=6035d635b5b0bfb86fcb6413f6828d18ab4cf1f2", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile { target powerpc-eabi* } } */\n+/* { dg-options \"-W\" } */\n+\n+#define __vector __attribute__((vector_size(8)))\n+\n+typedef float                   __vector __ev64_fs__;\n+typedef int                     __vector __ev64_opaque__;\n+\n+__ev64_opaque__ *p1;\n+__ev64_fs__ *p2;\n+int *x;\n+\n+extern void f (__ev64_opaque__ *);\n+\n+int main ()\n+{\n+\tf (x);\t/* { dg-warning \"incompatible pointer type\" } */\n+\tf (p1);\n+\tf (p2);\n+\treturn 0;\n+}"}]}