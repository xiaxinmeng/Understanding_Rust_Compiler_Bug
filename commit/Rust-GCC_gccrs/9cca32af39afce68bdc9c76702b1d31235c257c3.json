{"sha": "9cca32af39afce68bdc9c76702b1d31235c257c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNjYTMyYWYzOWFmY2U2OGJkYzljNzY3MDJiMWQzMTIzNWMyNTdjMw==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2005-09-05T08:03:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T08:03:00Z"}, "message": "sem_disp.adb (Check_Controlling_Formals): Anonymous access types used in controlling parameters exclude null because it...\n\n2005-09-01  Javier Miranda  <miranda@adacore.com>\n\t    Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_disp.adb (Check_Controlling_Formals): Anonymous access types\n\tused in controlling parameters exclude null because it is necessary to\n\tread the tag to dispatch, and null has no tag.\n\t(Override_Dispatching_Operation): If the previous operation is inherited\n\tfrom an interface, it becomes hidden  and does not participate in later\n\tname resolution.\n\nFrom-SVN: r103885", "tree": {"sha": "7c49e06073d07b49ad2e87f4f0ae0954824a03b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c49e06073d07b49ad2e87f4f0ae0954824a03b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cca32af39afce68bdc9c76702b1d31235c257c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cca32af39afce68bdc9c76702b1d31235c257c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cca32af39afce68bdc9c76702b1d31235c257c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cca32af39afce68bdc9c76702b1d31235c257c3/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "725393ea9114df692c55610f1f8bafe5959395a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/725393ea9114df692c55610f1f8bafe5959395a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/725393ea9114df692c55610f1f8bafe5959395a9"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "96836a759154bb47af0f8d9123e7e6632782da29", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cca32af39afce68bdc9c76702b1d31235c257c3/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cca32af39afce68bdc9c76702b1d31235c257c3/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=9cca32af39afce68bdc9c76702b1d31235c257c3", "patch": "@@ -115,6 +115,15 @@ package body Sem_Disp is\n             if Ctrl_Type = Typ then\n                Set_Is_Controlling_Formal (Formal);\n \n+               --  Ada 2005 (AI-231):Anonymous access types used in controlling\n+               --  parameters exclude null because it is necessary to read the\n+               --  tag to dispatch, and null has no tag.\n+\n+               if Ekind (Etype (Formal)) = E_Anonymous_Access_Type then\n+                  Set_Can_Never_Be_Null (Etype (Formal));\n+                  Set_Is_Known_Non_Null (Etype (Formal));\n+               end if;\n+\n                --  Check that the parameter's nominal subtype statically\n                --  matches the first subtype.\n \n@@ -784,14 +793,7 @@ package body Sem_Disp is\n                   then\n                      Old_Spec := Corresponding_Spec (Old_Bod);\n                      Set_Has_Completion             (Old_Spec, False);\n-\n-                     if Exception_Mechanism = Front_End_ZCX_Exceptions then\n-                        Set_Has_Subprogram_Descriptor (Old_Spec, False);\n-                        Set_Handler_Records           (Old_Spec, No_List);\n-                        Set_Is_Eliminated             (Old_Spec);\n-                     end if;\n                   end if;\n-\n                end if;\n             end loop;\n \n@@ -1212,10 +1214,12 @@ package body Sem_Disp is\n          return;\n       end if;\n \n-      --  Ada 2005 (AI-251): Do not replace subprograms corresponding to\n+      --  Ada 2005 (AI-251): Do not replace subprograms inherited from\n       --  abstract interfaces. They will be used later to generate the\n       --  corresponding thunks to initialize the Vtable (see subprogram\n-      --  Freeze_Subprogram)\n+      --  Freeze_Subprogram). The inherited operation itself must also\n+      --  become hidden, to avoid spurious ambiguities;  name resolution\n+      --  must pick up only the operation that implements it,\n \n       if Is_Interface_Subprogram (Prev_Op) then\n          Set_DT_Position              (Prev_Op, DT_Position (Alias (Prev_Op)));\n@@ -1224,6 +1228,7 @@ package body Sem_Disp is\n          Set_Abstract_Interface_Alias (Prev_Op, Alias (Prev_Op));\n          Set_Alias                    (Prev_Op, New_Op);\n          Set_Is_Internal              (Prev_Op);\n+         Set_Is_Hidden                (Prev_Op);\n \n          --  Override predefined primitive operations\n "}]}