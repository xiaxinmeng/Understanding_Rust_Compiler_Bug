{"sha": "04f33e7bb4f53d700956e4336be01f96435397a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRmMzNlN2JiNGY1M2Q3MDA5NTZlNDMzNmJlMDFmOTY0MzUzOTdhMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T13:15:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-24T13:15:23Z"}, "message": "[multiple changes]\n\n2009-04-24  Arnaud Charlet  <charlet@adacore.com>\n\n\t* mlib-prj.adb: Use friendlier english identifier.\n\n\t* gnatcmd.adb, make.adb: Use better english identifiers.\n\n2009-04-24  Robert Dewar  <dewar@adacore.com>\n\n\t* clean.adb: Minor reformatting\n\nFrom-SVN: r146715", "tree": {"sha": "bf5457e57672d83c55b1f9e5be104e68cc93e355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf5457e57672d83c55b1f9e5be104e68cc93e355"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04f33e7bb4f53d700956e4336be01f96435397a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04f33e7bb4f53d700956e4336be01f96435397a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04f33e7bb4f53d700956e4336be01f96435397a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04f33e7bb4f53d700956e4336be01f96435397a3/comments", "author": null, "committer": null, "parents": [{"sha": "d1f453b76449578cac4b2c09fb574d85550e94ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1f453b76449578cac4b2c09fb574d85550e94ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1f453b76449578cac4b2c09fb574d85550e94ab"}], "stats": {"total": 58, "additions": 38, "deletions": 20}, "files": [{"sha": "d9b8f016454466aff0dd3f28bccdca4279171ad6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04f33e7bb4f53d700956e4336be01f96435397a3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04f33e7bb4f53d700956e4336be01f96435397a3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=04f33e7bb4f53d700956e4336be01f96435397a3", "patch": "@@ -1,3 +1,13 @@\n+2009-04-24  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* mlib-prj.adb: Use friendlier english identifier.\n+\n+\t* gnatcmd.adb, make.adb: Use better english identifiers.\n+\n+2009-04-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* clean.adb: Minor reformatting\n+\n 2009-04-24  Robert Dewar  <dewar@adacore.com>\n \n \t* einfo.adb (OK_To_Rename): New flag"}, {"sha": "ff59a467ffaf3f63c59045676bf628c9f1eb070a", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04f33e7bb4f53d700956e4336be01f96435397a3/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04f33e7bb4f53d700956e4336be01f96435397a3/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=04f33e7bb4f53d700956e4336be01f96435397a3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1029,7 +1029,7 @@ package body Clean is\n                     Project_Table.Last (Project_Tree.Projects)\n                   loop\n                      if Has_Foreign_Sources\n-                       (Project_Tree.Projects.Table (Proj))\n+                          (Project_Tree.Projects.Table (Proj))\n                      then\n                         Global_Archive := True;\n                         exit;"}, {"sha": "86cd0955c53f2a576eafd7c572ed766fef477485", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04f33e7bb4f53d700956e4336be01f96435397a3/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04f33e7bb4f53d700956e4336be01f96435397a3/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=04f33e7bb4f53d700956e4336be01f96435397a3", "patch": "@@ -251,8 +251,8 @@ procedure GNATCmd is\n    --  Process GNAT LINK, when there is a project file specified\n \n    procedure Set_Library_For\n-     (Project             : Project_Id;\n-      There_Are_Libraries : in out Boolean);\n+     (Project           : Project_Id;\n+      Libraries_Present : in out Boolean);\n    --  If Project is a library project, add the correct -L and -l switches to\n    --  the linker invocation.\n \n@@ -927,7 +927,7 @@ procedure GNATCmd is\n \n    procedure Process_Link is\n       Look_For_Executable : Boolean := True;\n-      There_Are_Libraries : Boolean := False;\n+      Libraries_Present   : Boolean := False;\n       Path_Option         : constant String_Access :=\n                               MLib.Linker_Library_Path_Option;\n       Prj                 : Project_Id := Project;\n@@ -946,12 +946,12 @@ procedure GNATCmd is\n       --  Check if there are library project files\n \n       if MLib.Tgt.Support_For_Libraries /= None then\n-         Set_Libraries (Project, Project_Tree, There_Are_Libraries);\n+         Set_Libraries (Project, Project_Tree, Libraries_Present);\n       end if;\n \n       --  If there are, add the necessary additional switches\n \n-      if There_Are_Libraries then\n+      if Libraries_Present then\n \n          --  Add -L<lib_dir> -lgnarl -lgnat -Wl,-rpath,<lib_dir>\n \n@@ -1231,8 +1231,8 @@ procedure GNATCmd is\n    ---------------------\n \n    procedure Set_Library_For\n-     (Project             : Project_Id;\n-      There_Are_Libraries : in out Boolean)\n+     (Project           : Project_Id;\n+      Libraries_Present : in out Boolean)\n    is\n       Path_Option : constant String_Access :=\n                       MLib.Linker_Library_Path_Option;\n@@ -1241,7 +1241,7 @@ procedure GNATCmd is\n       --  Case of library project\n \n       if Project_Tree.Projects.Table (Project).Library then\n-         There_Are_Libraries := True;\n+         Libraries_Present := True;\n \n          --  Add the -L switch\n "}, {"sha": "6f6b68764733c16c579d11f3e28baccb2666b602", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04f33e7bb4f53d700956e4336be01f96435397a3/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04f33e7bb4f53d700956e4336be01f96435397a3/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=04f33e7bb4f53d700956e4336be01f96435397a3", "patch": "@@ -4227,7 +4227,7 @@ package body Make is\n       Current_Main_Index : Int := 0;\n       --  If not zero, the index of the current main unit in its source file\n \n-      There_Are_Stand_Alone_Libraries : Boolean := False;\n+      Stand_Alone_Libraries : Boolean := False;\n       --  Set to True when there are Stand-Alone Libraries, so that gnatbind\n       --  is invoked with the -F switch to force checking of elaboration flags.\n \n@@ -5773,7 +5773,7 @@ package body Make is\n                         if Project_Tree.Projects.Table\n                           (Proj1).Standalone_Library\n                         then\n-                           There_Are_Stand_Alone_Libraries := True;\n+                           Stand_Alone_Libraries := True;\n                         end if;\n \n                         if Project_Tree.Projects.Table (Proj1).Library then\n@@ -6109,7 +6109,7 @@ package body Make is\n                   Args (J) := Binder_Switches.Table (J);\n                end loop;\n \n-               if There_Are_Stand_Alone_Libraries then\n+               if Stand_Alone_Libraries then\n                   Last_Arg := Last_Arg + 1;\n                   Args (Last_Arg) := Force_Elab_Flags_String'Access;\n                end if;\n@@ -6164,7 +6164,7 @@ package body Make is\n                Linker_Switches_Last : constant Integer := Linker_Switches.Last;\n                Path_Option          : constant String_Access :=\n                                         MLib.Linker_Library_Path_Option;\n-               There_Are_Libraries  : Boolean := False;\n+               Libraries_Present    : Boolean := False;\n                Current              : Natural;\n                Proj2                : Project_Id;\n                Depth                : Natural;\n@@ -6193,7 +6193,7 @@ package body Make is\n                         then\n                            --  Add this project to table Library_Projs\n \n-                           There_Are_Libraries := True;\n+                           Libraries_Present := True;\n                            Depth := Project_Tree.Projects.Table (Proj1).Depth;\n                            Library_Projs.Increment_Last;\n                            Current := Library_Projs.Last;\n@@ -6252,7 +6252,7 @@ package body Make is\n                      end loop;\n                   end if;\n \n-                  if There_Are_Libraries then\n+                  if Libraries_Present then\n \n                      --  If Path_Option is not null, create the switch\n                      --  (\"-Wl,-rpath,\" or equivalent) with all the non static\n@@ -7534,10 +7534,15 @@ package body Make is\n \n       procedure Recurse (Prj : Project_Id; Depth : Natural);\n \n+      -------------\n+      -- Recurse --\n+      -------------\n+\n       procedure Recurse (Prj : Project_Id; Depth : Natural) is\n          Data : Project_Data renames Project_Tree.Projects.Table (Prj);\n          List : Project_List;\n          Proj : Project_Id;\n+\n       begin\n          if Data.Depth >= Depth\n            or Get (Seen, Prj)\n@@ -7569,6 +7574,8 @@ package body Make is\n          Set (Seen, Prj, False);\n       end Recurse;\n \n+   --  Start of processing for Recursive_Compute_Depth\n+\n    begin\n       for Proj in Project_Table.First ..\n         Project_Table.Last (Project_Tree.Projects)\n@@ -7596,6 +7603,7 @@ package body Make is\n \n    procedure Sigint_Intercepted is\n       SIGINT  : constant := 2;\n+\n    begin\n       Set_Standard_Error;\n       Write_Line (\"*** Interrupted ***\");"}, {"sha": "8b67c044cbeba2b86aac392ab93c0c9f5d5b7f70", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04f33e7bb4f53d700956e4336be01f96435397a3/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04f33e7bb4f53d700956e4336be01f96435397a3/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=04f33e7bb4f53d700956e4336be01f96435397a3", "patch": "@@ -345,7 +345,7 @@ package body MLib.Prj is\n \n       In_Main_Object_Directory : Boolean := True;\n \n-      There_Are_Foreign_Sources : Boolean;\n+      Foreign_Sources : Boolean;\n \n       Rpath : String_Access := null;\n       --  Allocated only if Path Option is supported\n@@ -1351,7 +1351,7 @@ package body MLib.Prj is\n \n          In_Main_Object_Directory := True;\n \n-         There_Are_Foreign_Sources := Has_Foreign_Sources (Data);\n+         Foreign_Sources := Has_Foreign_Sources (Data);\n \n          loop\n             if Data.Object_Directory /= No_Path_Information then\n@@ -1412,7 +1412,7 @@ package body MLib.Prj is\n                                     ALI_Path : constant String :=\n                                                  Ext_To (C_Object_Path, \"ali\");\n                                     Add_It   : Boolean :=\n-                                                 There_Are_Foreign_Sources\n+                                                 Foreign_Sources\n                                                  or else\n                                                    (Last > 5\n                                                     and then\n@@ -1514,7 +1514,7 @@ package body MLib.Prj is\n                                           Check_Libs (ALI_Path, True);\n                                        end if;\n \n-                                    elsif There_Are_Foreign_Sources then\n+                                    elsif Foreign_Sources then\n                                        Objects.Append\n                                          (new String'(Object_Path));\n                                     end if;"}]}