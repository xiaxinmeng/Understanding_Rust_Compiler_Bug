{"sha": "2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM2YTQyN2ZmOWExNTczNWZmNzE2MmVhZTVjYmIxOGNmZmM1ZDdjZg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-02-23T19:16:34Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-02-23T19:16:34Z"}, "message": "re PR target/65163 ([SH] ICE in decompose at rtl.h:2007)\n\ngcc/\n\tPR target/65163\n\t* config/sh/sh.md (swapbsi2, related peephole2): Use const_int -65536\n\tinstead of const_int 4294901760.\n\ngcc/testsuite/\n\tPR target/65163\n\t* gcc.c-torture/compile/pr65163.c: New.\n\nFrom-SVN: r220916", "tree": {"sha": "897ba0b0f1c9673c74da8932570e0df6d579fd75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/897ba0b0f1c9673c74da8932570e0df6d579fd75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf/comments", "author": null, "committer": null, "parents": [{"sha": "b6530d0a506320afa4703f2498914f100e51716b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6530d0a506320afa4703f2498914f100e51716b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6530d0a506320afa4703f2498914f100e51716b"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "5a652bce77ff1a8f714b24d42d196bf7c07ed714", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf", "patch": "@@ -1,3 +1,9 @@\n+2015-02-23  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/65163\n+\t* config/sh/sh.md (swapbsi2, related peephole2): Use const_int -65536\n+\tinstead of const_int 4294901760.\n+\n 2015-02-23  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/t-avr: Fix typo in comment."}, {"sha": "3461edbc1246dabad7dd5b63236d894f8ac2f8ef", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf", "patch": "@@ -6218,7 +6218,7 @@ label:\n (define_insn \"swapbsi2\"\n   [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n \t(ior:SI (and:SI (match_operand:SI 1 \"arith_reg_operand\" \"r\")\n-\t\t\t(const_int 4294901760))\n+\t\t\t(const_int -65536)) ;; 0xFFFF0000\n \t\t(ior:SI (and:SI (ashift:SI (match_dup 1) (const_int 8))\n \t\t\t\t(const_int 65280))\n \t\t\t(and:SI (ashiftrt:SI (match_dup 1) (const_int 8))\n@@ -6286,7 +6286,7 @@ label:\n (define_peephole2\n   [(set (match_operand:SI 0 \"arith_reg_dest\" \"\")\n \t(ior:SI (and:SI (match_operand:SI 1 \"arith_reg_operand\" \"\")\n-\t\t\t(const_int 4294901760))\n+\t\t\t(const_int -65536)) ;; 0xFFFF0000\n \t\t(ior:SI (and:SI (ashift:SI (match_dup 1) (const_int 8))\n \t\t\t\t(const_int 65280))\n \t\t\t(and:SI (ashiftrt:SI (match_dup 1) (const_int 8))\n@@ -6296,7 +6296,7 @@ label:\n   \"TARGET_SH1 && peep2_reg_dead_p (2, operands[0])\"\n   [(set (match_dup 2)\n \t(ior:SI (and:SI (match_operand:SI 1 \"arith_reg_operand\" \"\")\n-\t\t\t(const_int 4294901760))\n+\t\t\t(const_int -65536)) ;; 0xFFFF0000\n \t\t(ior:SI (and:SI (ashift:SI (match_dup 1) (const_int 8))\n \t\t\t\t(const_int 65280))\n \t\t\t(and:SI (ashiftrt:SI (match_dup 1) (const_int 8))"}, {"sha": "4c894b6f564e9a96ef3db1899c399534a5ec660f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf", "patch": "@@ -1,3 +1,8 @@\n+2015-02-23  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/65163\n+\t* gcc.c-torture/compile/pr65163.c: New.\n+\n 2015-02-23  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* gcc.dg/hoist-register-pressure-1.c: Make S/390 target check work"}, {"sha": "3a6b2880e31a713ec7762aefc6504bb1cf36e4ed", "filename": "gcc/testsuite/gcc.c-torture/compile/pr65163.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65163.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65163.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr65163.c?ref=2c6a427ff9a15735ff7162eae5cbb18cffc5d7cf", "patch": "@@ -0,0 +1,22 @@\n+/* PR target/65163  */\n+\n+typedef unsigned int uint32_t;\n+typedef unsigned short uint16_t;\n+union unaligned_32 { uint32_t l; } __attribute__((packed));\n+union unaligned_16 { uint16_t l; } __attribute__((packed));\n+\n+int\n+test_00 (unsigned char* buf, int bits_per_component)\n+{\n+  (((union unaligned_32*)(buf))->l) =\n+    __builtin_bswap32 (bits_per_component == 10 ? 1 : 0);\n+  return 0;\n+}\n+\n+int\n+test_01 (unsigned char* buf, int bits_per_component)\n+{\n+  (((union unaligned_16*)(buf))->l) =\n+    __builtin_bswap16 (bits_per_component == 10 ? 1 : 0);\n+  return 0;\n+}"}]}