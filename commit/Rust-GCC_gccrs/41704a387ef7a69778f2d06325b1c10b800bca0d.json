{"sha": "41704a387ef7a69778f2d06325b1c10b800bca0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE3MDRhMzg3ZWY3YTY5Nzc4ZjJkMDYzMjViMWMxMGI4MDBiY2EwZA==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-04-16T14:07:28Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-04-16T14:07:28Z"}, "message": "fold-const.c (fold_binary_to_constant): Delete obsolete comment.\n\n\n\t* fold-const.c (fold_binary_to_constant): Delete obsolete comment.\n\t(fold_unary_to_constant): Likewise.\n\nCo-Authored-By: Steven Bosscher <stevenb@suse.de>\n\nFrom-SVN: r98233", "tree": {"sha": "324a5f27d831cc58fe317e917f349923f0e2be3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/324a5f27d831cc58fe317e917f349923f0e2be3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41704a387ef7a69778f2d06325b1c10b800bca0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41704a387ef7a69778f2d06325b1c10b800bca0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41704a387ef7a69778f2d06325b1c10b800bca0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41704a387ef7a69778f2d06325b1c10b800bca0d/comments", "author": null, "committer": null, "parents": [{"sha": "da190657e279a25b89dc4484b721b66cd172e93b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da190657e279a25b89dc4484b721b66cd172e93b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da190657e279a25b89dc4484b721b66cd172e93b"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "ebc2c12bd627d105355c5c82e1c26b829361cae2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41704a387ef7a69778f2d06325b1c10b800bca0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41704a387ef7a69778f2d06325b1c10b800bca0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41704a387ef7a69778f2d06325b1c10b800bca0d", "patch": "@@ -1,3 +1,9 @@\n+2005-04-16  Roger Sayle  <roger@eyesopen.com>\n+\t    Steven Bosscher  <stevenb@suse.de>\n+\n+\t* fold-const.c (fold_binary_to_constant): Delete obsolete comment.\n+\t(fold_unary_to_constant): Likewise.\n+\n 2005-04-16  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* basic-block.h: Adjust the value of PROP_SCAN_DEAD_STORES,"}, {"sha": "203fbc5864852a6b1597ecba5d56d5917715b905", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41704a387ef7a69778f2d06325b1c10b800bca0d/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41704a387ef7a69778f2d06325b1c10b800bca0d/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=41704a387ef7a69778f2d06325b1c10b800bca0d", "patch": "@@ -10794,12 +10794,7 @@ tree_expr_nonzero_p (tree t)\n \n    If the expression could be simplified to a constant, then return\n    the constant.  If the expression would not be simplified to a\n-   constant, then return NULL_TREE.\n-\n-   Note this is primarily designed to be called after gimplification\n-   of the tree structures and when at least one operand is a constant.\n-   As a result of those simplifying assumptions this routine is far\n-   simpler than the generic fold routine.  */\n+   constant, then return NULL_TREE.  */\n \n tree\n fold_binary_to_constant (enum tree_code code, tree type, tree op0, tree op1)\n@@ -10814,12 +10809,7 @@ fold_binary_to_constant (enum tree_code code, tree type, tree op0, tree op1)\n \n    If the expression could be simplified to a constant, then return\n    the constant.  If the expression would not be simplified to a\n-   constant, then return NULL_TREE.\n-\n-   Note this is primarily designed to be called after gimplification\n-   of the tree structures and when op0 is a constant.  As a result\n-   of those simplifying assumptions this routine is far simpler than\n-   the generic fold routine.  */\n+   constant, then return NULL_TREE.  */\n \n tree\n fold_unary_to_constant (enum tree_code code, tree type, tree op0)"}]}