{"sha": "e4c03722c501d01f0ba75e72318377e5a85b06ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRjMDM3MjJjNTAxZDAxZjBiYTc1ZTcyMzE4Mzc3ZTVhODViMDZjZQ==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-05-29T17:24:34Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-05-29T17:24:34Z"}, "message": "Add execution tests of ARM EXT intrinsics\n\n\tgcc.target/arm/simd/vextQf32_1.c: New file.\n\tgcc.target/arm/simd/vextQp16_1.c: New file.\n\tgcc.target/arm/simd/vextQp8_1.c: New file.\n\tgcc.target/arm/simd/vextQs16_1.c: New file.\n\tgcc.target/arm/simd/vextQs32_1.c: New file.\n\tgcc.target/arm/simd/vextQs64_1.c: New file.\n\tgcc.target/arm/simd/vextQs8_1.c: New file.\n\tgcc.target/arm/simd/vextQu16_1.c: New file.\n\tgcc.target/arm/simd/vextQu32_1.c: New file.\n\tgcc.target/arm/simd/vextQu64_1.c: New file.\n\tgcc.target/arm/simd/vextQu8_1.c: New file.\n\tgcc.target/arm/simd/vextQp64_1.c: New file.\n\tgcc.target/arm/simd/vextf32_1.c: New file.\n\tgcc.target/arm/simd/vextp16_1.c: New file.\n\tgcc.target/arm/simd/vextp8_1.c: New file.\n\tgcc.target/arm/simd/vexts16_1.c: New file.\n\tgcc.target/arm/simd/vexts32_1.c: New file.\n\tgcc.target/arm/simd/vexts64_1.c: New file.\n\tgcc.target/arm/simd/vexts8_1.c: New file.\n\tgcc.target/arm/simd/vextu16_1.c: New file.\n\tgcc.target/arm/simd/vextu32_1.c: New file.\n\tgcc.target/arm/simd/vextu64_1.c: New file.\n\tgcc.target/arm/simd/vextu8_1.c: New file.\n\tgcc.target/arm/simd/vextp64_1.c: New file.\n\nFrom-SVN: r211059", "tree": {"sha": "ae2bbf83646c713e21f67ab8306d299330117894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae2bbf83646c713e21f67ab8306d299330117894"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4c03722c501d01f0ba75e72318377e5a85b06ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4c03722c501d01f0ba75e72318377e5a85b06ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4c03722c501d01f0ba75e72318377e5a85b06ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4c03722c501d01f0ba75e72318377e5a85b06ce/comments", "author": null, "committer": null, "parents": [{"sha": "ae0533da54015456538aa8ebeddf385230c36c98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0533da54015456538aa8ebeddf385230c36c98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0533da54015456538aa8ebeddf385230c36c98"}], "stats": {"total": 350, "additions": 350, "deletions": 0}, "files": [{"sha": "048b02a05b3a8279d4b7bf532e7f488a16c67aa7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -1,3 +1,30 @@\n+2014-05-29  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\tgcc.target/arm/simd/vextQf32_1.c: New file.\n+\tgcc.target/arm/simd/vextQp16_1.c: New file.\n+\tgcc.target/arm/simd/vextQp8_1.c: New file.\n+\tgcc.target/arm/simd/vextQs16_1.c: New file.\n+\tgcc.target/arm/simd/vextQs32_1.c: New file.\n+\tgcc.target/arm/simd/vextQs64_1.c: New file.\n+\tgcc.target/arm/simd/vextQs8_1.c: New file.\n+\tgcc.target/arm/simd/vextQu16_1.c: New file.\n+\tgcc.target/arm/simd/vextQu32_1.c: New file.\n+\tgcc.target/arm/simd/vextQu64_1.c: New file.\n+\tgcc.target/arm/simd/vextQu8_1.c: New file.\n+\tgcc.target/arm/simd/vextQp64_1.c: New file.\n+\tgcc.target/arm/simd/vextf32_1.c: New file.\n+\tgcc.target/arm/simd/vextp16_1.c: New file.\n+\tgcc.target/arm/simd/vextp8_1.c: New file.\n+\tgcc.target/arm/simd/vexts16_1.c: New file.\n+\tgcc.target/arm/simd/vexts32_1.c: New file.\n+\tgcc.target/arm/simd/vexts64_1.c: New file.\n+\tgcc.target/arm/simd/vexts8_1.c: New file.\n+\tgcc.target/arm/simd/vextu16_1.c: New file.\n+\tgcc.target/arm/simd/vextu32_1.c: New file.\n+\tgcc.target/arm/simd/vextu64_1.c: New file.\n+\tgcc.target/arm/simd/vextu8_1.c: New file.\n+\tgcc.target/arm/simd/vextp64_1.c: New file.\n+\n 2014-05-29  Radovan Obradovic  <robradovic@mips.com>\n             Tom de Vries  <tom@codesourcery.com>\n "}, {"sha": "c1da6d38a5d78c076b18c34aed7d0a7cbfd698bd", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQf32_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQf32_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQf32_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQf32_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextQf32' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/extq_f32.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.32\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 3 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "adc086181b9c141dd9470018f0d7713190d31ed2", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQp16_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQp16_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQp16_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQp16_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextQp16' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/extq_p16.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.16\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 7 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "e8b688da2b37bcb5cbda460ff0c80fedf362e4e0", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQp64_1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQp64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQp64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQp64_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,33 @@\n+/* Test the `vextQp64' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_crypto_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_crypto } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort (void);\n+\n+poly64x2_t\n+test_vextq_p64_1 (poly64x2_t a, poly64x2_t b)\n+{\n+  return vextq_p64(a, b, 1);\n+}\n+\n+int\n+main (int argc, char **argv)\n+{\n+  int i, off;\n+  poly64x2_t in1 = {0, 1};\n+  poly64x2_t in2 = {2, 3};\n+  poly64x2_t actual = test_vextq_p64_1 (in1, in2);\n+  for (i = 0; i < 2; i++)\n+    if (actual[i] != i + 1)\n+      abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vext\\.64\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 1 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "5f2cc53e36736ae64d4a83a21d2d24cd62541d4e", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQp8_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQp8_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQp8_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQp8_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextQp8' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/extq_p8.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.8\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 15 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "c0d791dcef3c4f94ba9778339b06a5c666df59ec", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQs16_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs16_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs16_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs16_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextQs16' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/extq_s16.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.16\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 7 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "ed5b21091cc332d665be9c3fe159164da356501c", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQs32_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs32_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs32_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs32_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextQs32' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/extq_s32.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.32\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 3 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "dbbee47c58b32f3f14633a6175eb1697f74c463e", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQs64_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs64_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextQs64' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/extq_s64.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.64\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 1 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "0ebdce38165608880be80d0eca6fdf6d359c4c71", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQs8_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs8_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs8_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQs8_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextQs8' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/extq_s8.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.8\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 15 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "136f2b8741fb177b10ba8f8543026e29591f6097", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQu16_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu16_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu16_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu16_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextQu16' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/extq_u16.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.16\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 7 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "66ce035c5a2437f377ee2cc9f15655b2f7cab068", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQu32_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu32_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu32_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu32_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextQu32' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/extq_u32.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.32\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 3 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "ebe4abd069f56d076c228e171195ee59a3abd487", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQu64_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu64_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextQu64' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/extq_u64.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.64\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 1 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "432ac0a56748320331b7f7168ac4c07d83a12647", "filename": "gcc/testsuite/gcc.target/arm/simd/vextQu8_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu8_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu8_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2FvextQu8_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextQu8' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/extq_u8.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.8\\[ \\t\\]+\\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, \\[qQ\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 15 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "99e0bad0ed0ba9a47171fa91d0309c5db171fa1f", "filename": "gcc/testsuite/gcc.target/arm/simd/vextf32_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextf32_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextf32_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextf32_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextf32' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/ext_f32.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.32\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 1 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "00695bf641925cfac333834e5c93c91ef0e7cf99", "filename": "gcc/testsuite/gcc.target/arm/simd/vextp16_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextp16_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextp16_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextp16_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextp16' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/ext_p16.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.16\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 3 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "8783e166ea7c5bdf7c458f99a4f98420c2db3de3", "filename": "gcc/testsuite/gcc.target/arm/simd/vextp64_1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextp64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextp64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextp64_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,26 @@\n+/* Test the `vextp64' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_crypto_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_crypto } */\n+\n+#include \"arm_neon.h\"\n+\n+extern void abort (void);\n+\n+int\n+main (int argc, char **argv)\n+{\n+  int i;\n+  poly64x1_t in1 = {0};\n+  poly64x1_t in2 = {1};\n+  poly64x1_t actual = vext_p64 (in1, in2, 0);\n+  if (actual != in1)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+/* Don't scan assembler for vext - it can be optimized into a move from r0.\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "2ba72c1ac0c1e3ef539ea811ae8857378f06038d", "filename": "gcc/testsuite/gcc.target/arm/simd/vextp8_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextp8_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextp8_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextp8_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextp8' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/ext_p8.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.8\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 7 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "4fa57d6b696e1b875c66e484cfdd8bc65d8ac943", "filename": "gcc/testsuite/gcc.target/arm/simd/vexts16_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts16_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts16_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts16_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vexts16' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/ext_s16.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.16\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 3 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "3cd59360e28d10fb7676d55d9479a1fb15d390cf", "filename": "gcc/testsuite/gcc.target/arm/simd/vexts32_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts32_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts32_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts32_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vexts32' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/ext_s32.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.32\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 1 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "7bb20121988d0d930a84211c574dfe99da8cb995", "filename": "gcc/testsuite/gcc.target/arm/simd/vexts64_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts64_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vexts64' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/ext_s64.x\"\n+\n+/* Don't scan assembler for vext - it can be optimized into a move from r0.  */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "194e198b98e87d5d642958e02f38a49d50185996", "filename": "gcc/testsuite/gcc.target/arm/simd/vexts8_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts8_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts8_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvexts8_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vexts8' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/ext_s8.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.8\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 7 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "f69c2bdc77fc6b6432d551efdc05ff8a3ad1fd07", "filename": "gcc/testsuite/gcc.target/arm/simd/vextu16_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu16_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu16_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu16_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextu16' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/ext_u16.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.16\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 3 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "b76e383cadb1fc44b66cf53162f2f8b5ad6963b0", "filename": "gcc/testsuite/gcc.target/arm/simd/vextu32_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu32_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu32_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu32_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextu32' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/ext_u32.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.32\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 1 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "39ffc56cba74ba7ddbb7a6cb0005de0357bd8516", "filename": "gcc/testsuite/gcc.target/arm/simd/vextu64_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu64_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu64_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu64_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextu64' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/ext_u64.x\"\n+\n+/* Don't scan assembler for vext - it can be optimized into a move from r0.  */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "a9d62b31dffa64cfc871817333cc4f0b2930a3f2", "filename": "gcc/testsuite/gcc.target/arm/simd/vextu8_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu8_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4c03722c501d01f0ba75e72318377e5a85b06ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu8_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvextu8_1.c?ref=e4c03722c501d01f0ba75e72318377e5a85b06ce", "patch": "@@ -0,0 +1,12 @@\n+/* Test the `vextu8' ARM Neon intrinsic.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-options \"-save-temps -O3 -fno-inline\" } */\n+/* { dg-add-options arm_neon } */\n+\n+#include \"arm_neon.h\"\n+#include \"../../aarch64/simd/ext_u8.x\"\n+\n+/* { dg-final { scan-assembler-times \"vext\\.8\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, \\[dD\\]\\[0-9\\]+, #\\[0-9\\]+!?\\(?:\\[ \\t\\]+@\\[a-zA-Z0-9 \\]+\\)?\\n\" 7 } } */\n+/* { dg-final { cleanup-saved-temps } } */"}]}