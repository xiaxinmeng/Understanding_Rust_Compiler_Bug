{"sha": "cf919e352b9c2ae87108df8e6dc657699a436974", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y5MTllMzUyYjljMmFlODcxMDhkZjhlNmRjNjU3Njk5YTQzNjk3NA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-11-23T20:23:44Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-11-23T20:23:44Z"}, "message": "i386.md (*<any_or:code>hi_1): Fix operand 2 constraints.\n\n\t* config/i386/i386.md (*<any_or:code>hi_1): Fix operand 2 constraints.\n\nFrom-SVN: r242796", "tree": {"sha": "c036decedfc4150d1ec6741cbc66243632db8a5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c036decedfc4150d1ec6741cbc66243632db8a5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf919e352b9c2ae87108df8e6dc657699a436974", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf919e352b9c2ae87108df8e6dc657699a436974", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf919e352b9c2ae87108df8e6dc657699a436974", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf919e352b9c2ae87108df8e6dc657699a436974/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c944c6a2b209843fc94844838ed8223d669ab401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c944c6a2b209843fc94844838ed8223d669ab401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c944c6a2b209843fc94844838ed8223d669ab401"}], "stats": {"total": 129, "additions": 67, "deletions": 62}, "files": [{"sha": "a84eb7d9f0ed2194a6b1aba02437c7ff5ed43583", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf919e352b9c2ae87108df8e6dc657699a436974/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf919e352b9c2ae87108df8e6dc657699a436974/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf919e352b9c2ae87108df8e6dc657699a436974", "patch": "@@ -1,3 +1,7 @@\n+2016-11-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*<any_or:code>hi_1): Fix operand 2 constraints.\n+\n 2016-11-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/69278"}, {"sha": "feb66fd5d166b1979ca544e56ff1f02d3e309dab", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 63, "deletions": 62, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf919e352b9c2ae87108df8e6dc657699a436974/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf919e352b9c2ae87108df8e6dc657699a436974/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=cf919e352b9c2ae87108df8e6dc657699a436974", "patch": "@@ -8150,6 +8150,38 @@\n   DONE;\n })\n \n+(define_insn_and_split \"*anddi3_doubleword\"\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,rm,r\")\n+\t(and:DI\n+\t (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0\")\n+\t (match_operand:DI 2 \"x86_64_szext_general_operand\" \"Z,re,rm\")))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"!TARGET_64BIT && TARGET_STV && TARGET_SSE2\n+   && ix86_binary_operator_ok (AND, DImode, operands)\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(const_int 0)]\n+{\n+  split_double_mode (DImode, &operands[0], 3, &operands[0], &operands[3]);\n+  if (operands[2] == const0_rtx)\n+    {\n+      operands[1] = const0_rtx;\n+      ix86_expand_move (SImode, &operands[0]);\n+    }\n+  else if (operands[2] != constm1_rtx)\n+    ix86_expand_binary_operator (AND, SImode, &operands[0]);\n+  else if (operands[5] == constm1_rtx)\n+    emit_note (NOTE_INSN_DELETED);\n+  if (operands[5] == const0_rtx)\n+    {\n+      operands[4] = const0_rtx;\n+      ix86_expand_move (SImode, &operands[3]);\n+    }\n+  else if (operands[5] != constm1_rtx)\n+    ix86_expand_binary_operator (AND, SImode, &operands[3]);\n+  DONE;\n+})\n+\n (define_insn \"*anddi_1\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,rm,r,r,!k\")\n \t(and:DI\n@@ -8185,38 +8217,6 @@\n        (const_string \"*\")))\n    (set_attr \"mode\" \"SI,DI,DI,SI,DI\")])\n \n-(define_insn_and_split \"*anddi3_doubleword\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,rm,r\")\n-\t(and:DI\n-\t (match_operand:DI 1 \"nonimmediate_operand\" \"%0,0,0\")\n-\t (match_operand:DI 2 \"x86_64_szext_general_operand\" \"Z,re,rm\")))\n-   (clobber (reg:CC FLAGS_REG))]\n-  \"!TARGET_64BIT && TARGET_STV && TARGET_SSE2\n-   && ix86_binary_operator_ok (AND, DImode, operands)\"\n-  \"#\"\n-  \"&& reload_completed\"\n-  [(const_int 0)]\n-{\n-  split_double_mode (DImode, &operands[0], 3, &operands[0], &operands[3]);\n-  if (operands[2] == const0_rtx)\n-    {\n-      operands[1] = const0_rtx;\n-      ix86_expand_move (SImode, &operands[0]);\n-    }\n-  else if (operands[2] != constm1_rtx)\n-    ix86_expand_binary_operator (AND, SImode, &operands[0]);\n-  else if (operands[5] == constm1_rtx)\n-    emit_note (NOTE_INSN_DELETED);\n-  if (operands[5] == const0_rtx)\n-    {\n-      operands[4] = const0_rtx;\n-      ix86_expand_move (SImode, &operands[3]);\n-    }\n-  else if (operands[5] != constm1_rtx)\n-    ix86_expand_binary_operator (AND, SImode, &operands[3]);\n-  DONE;\n-})\n-\n (define_insn \"*andsi_1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,r,Ya,!k\")\n \t(and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,qm,k\")\n@@ -8729,20 +8729,6 @@\n   \"\"\n   \"ix86_expand_binary_operator (<CODE>, <MODE>mode, operands); DONE;\")\n \n-(define_insn \"*<code><mode>_1\"\n-  [(set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=r,rm,k\")\n-\t(any_or:SWI48\n-\t (match_operand:SWI48 1 \"nonimmediate_operand\" \"%0,0,k\")\n-\t (match_operand:SWI48 2 \"<general_operand>\" \"<g>,r<i>,k\")))\n-   (clobber (reg:CC FLAGS_REG))]\n-  \"ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n-  \"@\n-   <logic>{<imodesuffix>}\\t{%2, %0|%0, %2}\n-   <logic>{<imodesuffix>}\\t{%2, %0|%0, %2}\n-   k<logic><mskmodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"alu,alu,msklog\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n (define_insn_and_split \"*<code>di3_doubleword\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,rm,r\")\n \t(any_or:DI\n@@ -8785,28 +8771,25 @@\n   DONE;\n })\n \n-(define_insn_and_split \"*andndi3_doubleword\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(and:DI\n-\t  (not:DI (match_operand:DI 1 \"register_operand\" \"r\"))\n-\t  (match_operand:DI 2 \"nonimmediate_operand\" \"rm\")))\n+(define_insn \"*<code><mode>_1\"\n+  [(set (match_operand:SWI48 0 \"nonimmediate_operand\" \"=r,rm,k\")\n+\t(any_or:SWI48\n+\t (match_operand:SWI48 1 \"nonimmediate_operand\" \"%0,0,k\")\n+\t (match_operand:SWI48 2 \"<general_operand>\" \"<g>,r<i>,k\")))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"TARGET_BMI && !TARGET_64BIT && TARGET_STV && TARGET_SSE\"\n-  \"#\"\n-  \"&& reload_completed\"\n-  [(parallel [(set (match_dup 0)\n-\t\t   (and:SI (not:SI (match_dup 1)) (match_dup 2)))\n-\t      (clobber (reg:CC FLAGS_REG))])\n-   (parallel [(set (match_dup 3)\n-\t\t   (and:SI (not:SI (match_dup 4)) (match_dup 5)))\n-\t      (clobber (reg:CC FLAGS_REG))])]\n-  \"split_double_mode (DImode, &operands[0], 3, &operands[0], &operands[3]);\")\n+  \"ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)\"\n+  \"@\n+   <logic>{<imodesuffix>}\\t{%2, %0|%0, %2}\n+   <logic>{<imodesuffix>}\\t{%2, %0|%0, %2}\n+   k<logic><mskmodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"alu,alu,msklog\")\n+   (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*<code>hi_1\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,rm,!k\")\n \t(any_or:HI\n \t (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0,k\")\n-\t (match_operand:HI 2 \"general_operand\" \"<g>,r<i>,k\")))\n+\t (match_operand:HI 2 \"general_operand\" \"rmn,rn,k\")))\n    (clobber (reg:CC FLAGS_REG))]\n   \"ix86_binary_operator_ok (<CODE>, HImode, operands)\"\n   \"@\n@@ -13172,6 +13155,24 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; BMI instructions.\n+\n+(define_insn_and_split \"*andndi3_doubleword\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(and:DI\n+\t  (not:DI (match_operand:DI 1 \"register_operand\" \"r\"))\n+\t  (match_operand:DI 2 \"nonimmediate_operand\" \"rm\")))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_BMI && !TARGET_64BIT && TARGET_STV && TARGET_SSE\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (match_dup 0)\n+\t\t   (and:SI (not:SI (match_dup 1)) (match_dup 2)))\n+\t      (clobber (reg:CC FLAGS_REG))])\n+   (parallel [(set (match_dup 3)\n+\t\t   (and:SI (not:SI (match_dup 4)) (match_dup 5)))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+  \"split_double_mode (DImode, &operands[0], 3, &operands[0], &operands[3]);\")\n+\n (define_insn \"*bmi_andn_<mode>\"\n   [(set (match_operand:SWI48 0 \"register_operand\" \"=r,r\")\n \t(and:SWI48"}]}