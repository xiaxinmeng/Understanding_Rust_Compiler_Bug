{"sha": "92d58deefa851844eddec070d3f944b163d245e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJkNThkZWVmYTg1MTg0NGVkZGVjMDcwZDNmOTQ0YjE2M2QyNDVlNg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-08-01T20:12:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-08-01T20:12:58Z"}, "message": "Add non-const std::basic_string::data() for C++17\n\n\t* include/bits/basic_string.h (data() const): Update comment.\n\t(data()): Add non-const overload for C++17.\n\t* testsuite/21_strings/basic_string/operations/data/char/2.cc: New.\n\t* testsuite/21_strings/basic_string/operations/data/wchar_t/2.cc: New.\n\nFrom-SVN: r238963", "tree": {"sha": "929354393bbeed0161a46cb2534ad4bf964f4007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/929354393bbeed0161a46cb2534ad4bf964f4007"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92d58deefa851844eddec070d3f944b163d245e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d58deefa851844eddec070d3f944b163d245e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92d58deefa851844eddec070d3f944b163d245e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d58deefa851844eddec070d3f944b163d245e6/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ce9aa832b64b5e953c2a16965f8d5d581787d16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ce9aa832b64b5e953c2a16965f8d5d581787d16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ce9aa832b64b5e953c2a16965f8d5d581787d16"}], "stats": {"total": 121, "additions": 117, "deletions": 4}, "files": [{"sha": "aeeb7716d7d0465c407cf8519c477ee21dffc84e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d58deefa851844eddec070d3f944b163d245e6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d58deefa851844eddec070d3f944b163d245e6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=92d58deefa851844eddec070d3f944b163d245e6", "patch": "@@ -1,5 +1,10 @@\n 2016-08-01  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/basic_string.h (data() const): Update comment.\n+\t(data()): Add non-const overload for C++17.\n+\t* testsuite/21_strings/basic_string/operations/data/char/2.cc: New.\n+\t* testsuite/21_strings/basic_string/operations/data/wchar_t/2.cc: New.\n+\n \t* include/bits/basic_string.tcc: Disable explicit instantiation\n \tdeclarations for C++17.\n "}, {"sha": "59f1c64ea358aae109db94c1cf0115d3b1c934d4", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d58deefa851844eddec070d3f944b163d245e6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d58deefa851844eddec070d3f944b163d245e6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=92d58deefa851844eddec070d3f944b163d245e6", "patch": "@@ -2159,13 +2159,27 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       /**\n        *  @brief  Return const pointer to contents.\n        *\n-       *  This is a handle to internal data.  Do not modify or dire things may\n-       *  happen.\n+       *  This is a pointer to internal data.  It is undefined to modify\n+       *  the contents through the returned pointer. To get a pointer that\n+       *  allows modifying the contents use @c &str[0] instead,\n+       *  (or in C++17 the non-const @c str.data() overload).\n       */\n       const _CharT*\n       data() const _GLIBCXX_NOEXCEPT\n       { return _M_data(); }\n \n+#if __cplusplus > 201402L\n+      /**\n+       *  @brief  Return non-const pointer to contents.\n+       *\n+       *  This is a pointer to the character sequence held by the string.\n+       *  Modifying the characters in the sequence is allowed.\n+      */\n+      _CharT*\n+      data() noexcept\n+      { return _M_data(); }\n+#endif\n+\n       /**\n        *  @brief  Return copy of allocator used to construct this string.\n       */\n@@ -4658,13 +4672,27 @@ _GLIBCXX_END_NAMESPACE_CXX11\n       /**\n        *  @brief  Return const pointer to contents.\n        *\n-       *  This is a handle to internal data.  Do not modify or dire things may\n-       *  happen.\n+       *  This is a pointer to internal data.  It is undefined to modify\n+       *  the contents through the returned pointer. To get a pointer that\n+       *  allows modifying the contents use @c &str[0] instead,\n+       *  (or in C++17 the non-const @c str.data() overload).\n       */\n       const _CharT*\n       data() const _GLIBCXX_NOEXCEPT\n       { return _M_data(); }\n \n+#if __cplusplus > 201402L\n+      /**\n+       *  @brief  Return non-const pointer to contents.\n+       *\n+       *  This is a pointer to the character sequence held by the string.\n+       *  Modifying the characters in the sequence is allowed.\n+      */\n+      _CharT*\n+      data() noexcept\n+      { return _M_data(); }\n+#endif\n+\n       /**\n        *  @brief  Return copy of allocator used to construct this string.\n       */"}, {"sha": "7608a0dcb4f653f0396d339cad18069e17a0bce2", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operations/data/char/2.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d58deefa851844eddec070d3f944b163d245e6/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fdata%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d58deefa851844eddec070d3f944b163d245e6/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fdata%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fdata%2Fchar%2F2.cc?ref=92d58deefa851844eddec070d3f944b163d245e6", "patch": "@@ -0,0 +1,40 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+\n+// C++17 21.3.1.7 [string.ops] string operations\n+\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::string s;\n+  char* p = s.data();\n+  VERIFY( *p == '\\0' );\n+  s = \"a string that is longer than a short string\";\n+  p = s.data();\n+  VERIFY( p == &s.front() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "3c977e05464ed47419fd27503862dd118be2fa78", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operations/data/wchar_t/2.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d58deefa851844eddec070d3f944b163d245e6/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fdata%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d58deefa851844eddec070d3f944b163d245e6/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fdata%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fdata%2Fwchar_t%2F2.cc?ref=92d58deefa851844eddec070d3f944b163d245e6", "patch": "@@ -0,0 +1,40 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+\n+// C++17 21.3.1.7 [string.ops] string operations\n+\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::wstring s;\n+  wchar_t* p = s.data();\n+  VERIFY( *p == L'\\0' );\n+  s = L\"a string that is longer than a short string\";\n+  p = s.data();\n+  VERIFY( p == &s.front() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}