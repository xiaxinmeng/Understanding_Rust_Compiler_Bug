{"sha": "40d1f6afc1cc9ab5fb2bf748562c68706eec95d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBkMWY2YWZjMWNjOWFiNWZiMmJmNzQ4NTYyYzY4NzA2ZWVjOTVkOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-07-03T09:54:13Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-07-03T09:54:13Z"}, "message": "decl.c (gnat_to_gnu_entity): Branch to common code handling the alignment of discrete types.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Enumeration_Type>:\n\tBranch to common code handling the alignment of discrete types.\n\t<E_Signed_Integer_Type>: Likewise.\n\t<E_Modular_Integer_Type>: Likewise.\n\nFrom-SVN: r161770", "tree": {"sha": "4ebdd34cfc0f2a64625f2f6f2c20f97767991386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ebdd34cfc0f2a64625f2f6f2c20f97767991386"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9/comments", "author": null, "committer": null, "parents": [{"sha": "cb5eb94e1cd23b41a0fdd7968640982bbd4630f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb5eb94e1cd23b41a0fdd7968640982bbd4630f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb5eb94e1cd23b41a0fdd7968640982bbd4630f7"}], "stats": {"total": 79, "additions": 68, "deletions": 11}, "files": [{"sha": "a13437d4017f9002f3241315ad8a00c0a4e5886d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=40d1f6afc1cc9ab5fb2bf748562c68706eec95d9", "patch": "@@ -1,3 +1,10 @@\n+2010-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Enumeration_Type>:\n+\tBranch to common code handling the alignment of discrete types.\n+\t<E_Signed_Integer_Type>: Likewise.\n+\t<E_Modular_Integer_Type>: Likewise.\n+\n 2010-07-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/misc.c (gnat_handle_option): Do not populate gnat_argv."}, {"sha": "b5168e79951cd73bedccb32ff0e6f31d7cd6c7d6", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=40d1f6afc1cc9ab5fb2bf748562c68706eec95d9", "patch": "@@ -1496,15 +1496,15 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t/* Note that the bounds are updated at the end of this function\n \t   to avoid an infinite recursion since they refer to the type.  */\n       }\n-      break;\n+      goto discrete_type;\n \n     case E_Signed_Integer_Type:\n     case E_Ordinary_Fixed_Point_Type:\n     case E_Decimal_Fixed_Point_Type:\n       /* For integer types, just make a signed type the appropriate number\n \t of bits.  */\n       gnu_type = make_signed_type (esize);\n-      break;\n+      goto discrete_type;\n \n     case E_Modular_Integer_Type:\n       {\n@@ -1543,7 +1543,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    gnu_type = gnu_subtype;\n \t  }\n       }\n-      break;\n+      goto discrete_type;\n \n     case E_Signed_Integer_Subtype:\n     case E_Enumeration_Subtype:\n@@ -1632,6 +1632,8 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t\t   gnat_to_gnu_type\n \t\t\t   (Original_Array_Type (gnat_entity)));\n \n+    discrete_type:\n+\n       /* We have to handle clauses that under-align the type specially.  */\n       if ((Present (Alignment_Clause (gnat_entity))\n \t   || (Is_Packed_Array_Type (gnat_entity)\n@@ -1685,9 +1687,9 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \n \t  relate_alias_sets (gnu_type, gnu_field_type, ALIAS_SET_COPY);\n \n-\t  /* Don't notify the field as \"addressable\", since we won't be taking\n-\t     it's address and it would prevent create_field_decl from making a\n-\t     bitfield.  */\n+\t  /* Don't declare the field as addressable since we won't be taking\n+\t     its address and this would prevent create_field_decl from making\n+\t     a bitfield.  */\n \t  gnu_field\n \t    = create_field_decl (get_identifier (\"OBJECT\"), gnu_field_type,\n \t\t\t\t gnu_type, NULL_TREE, bitsize_zero_node, 1, 0);\n@@ -1736,9 +1738,9 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t  TYPE_ALIGN (gnu_type) = align;\n \t  relate_alias_sets (gnu_type, gnu_field_type, ALIAS_SET_COPY);\n \n-\t  /* Don't notify the field as \"addressable\", since we won't be taking\n-\t     it's address and it would prevent create_field_decl from making a\n-\t     bitfield.  */\n+\t  /* Don't declare the field as addressable since we won't be taking\n+\t     its address and this would prevent create_field_decl from making\n+\t     a bitfield.  */\n \t  gnu_field\n \t    = create_field_decl (get_identifier (\"F\"), gnu_field_type,\n \t\t\t\t gnu_type, NULL_TREE, bitsize_zero_node, 1, 0);"}, {"sha": "fb71e59a560cda25ea060b05e98046f7fca5671b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=40d1f6afc1cc9ab5fb2bf748562c68706eec95d9", "patch": "@@ -1,3 +1,8 @@\n+2010-07-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/modular3.adb: New test.\n+\t* gnat.dg/modular3_pkg.ads: New helper.\n+\n 2010-07-03  Iain Sandoe  <iains@gcc.gnu.org>\n \t    Mikael Pettersson  <mikpe@it.uu.se>\n \n@@ -19,12 +24,12 @@\n \n 2010-07-02  Daniel Jacobowitz  <dan@codesourcery.com>\n \t    Julian Brown  <julian@codesourcery.com>\n-\t    Sandra Loosemore <sandra@codesourcery.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gcc.c-torture/execute/20100416-1.c: New test case.\n \n 2010-07-02  Julian Brown  <julian@codesourcery.com>\n-\t    Sandra Loosemore <sandra@codesourcery.com>\n+\t    Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR target/43703\n "}, {"sha": "539edcaf4d4144b642f0a9980d4f9b294435993e", "filename": "gcc/testsuite/gnat.dg/modular3.adb", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular3.adb?ref=40d1f6afc1cc9ab5fb2bf748562c68706eec95d9", "patch": "@@ -0,0 +1,32 @@\n+-- { dg-do run }\n+\n+with Modular3_Pkg; use Modular3_Pkg;\n+\n+procedure Modular3 is\n+\n+  function F1 (A : Int16_T) return Int16_T is\n+  begin\n+    return A + 128;\n+  end;\n+\n+  function F2 (B : Mod16_T) return Mod16_T is\n+  begin\n+    return B + 128;\n+  end;\n+\n+  A : Int16_T := 16384;\n+  B : Mod16_T := 65504;\n+\n+begin\n+\n+  A := F1 (A);\n+  if A /= 16512 then\n+    raise Program_Error;\n+  end if;\n+\n+  B := F2 (B);\n+  if B /= 96 then\n+    raise Program_Error;\n+  end if;\n+\n+end Modular3;"}, {"sha": "85cf6a8bfaaf3dc3b1cf602337fdd808f2e2605e", "filename": "gcc/testsuite/gnat.dg/modular3_pkg.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular3_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40d1f6afc1cc9ab5fb2bf748562c68706eec95d9/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular3_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fmodular3_pkg.ads?ref=40d1f6afc1cc9ab5fb2bf748562c68706eec95d9", "patch": "@@ -0,0 +1,11 @@\n+package Modular3_Pkg is\n+\n+   type Int16_T is range -32768 .. 32767;\n+   for Int16_T'Size use 16;\n+   for Int16_T'Alignment use 1;\n+\n+   type Mod16_T is mod 2 ** 16;\n+   for Mod16_T'Size use 16;\n+   for Mod16_T'Alignment use 1;\n+\n+end Modular3_Pkg;"}]}