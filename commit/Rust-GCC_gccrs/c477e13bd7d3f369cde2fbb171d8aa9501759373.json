{"sha": "c477e13bd7d3f369cde2fbb171d8aa9501759373", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ3N2UxM2JkN2QzZjM2OWNkZTJmYmIxNzFkOGFhOTUwMTc1OTM3Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-05-17T06:45:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-05-17T06:45:49Z"}, "message": "re PR tree-optimization/21610 (ICE in make_decl_rtl)\n\n\tPR tree-optimization/21610\n\t* c-typeck.c (decl_constant_value_for_broken_optimization): If not\n\treturning DECL, call unshare_expr.\n\n\t* gcc.c-torture/compile/20050516-1.c: New test.\n\nFrom-SVN: r99815", "tree": {"sha": "7e09f8f4c9c5be93dea3e3b6573f3da476b0833b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e09f8f4c9c5be93dea3e3b6573f3da476b0833b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c477e13bd7d3f369cde2fbb171d8aa9501759373", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c477e13bd7d3f369cde2fbb171d8aa9501759373", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c477e13bd7d3f369cde2fbb171d8aa9501759373", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c477e13bd7d3f369cde2fbb171d8aa9501759373/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22c3c0917f67402389deb1e877c429f93a6a0b38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c3c0917f67402389deb1e877c429f93a6a0b38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22c3c0917f67402389deb1e877c429f93a6a0b38"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "99e010889bcf5b516e546d4d9644957aeec083bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c477e13bd7d3f369cde2fbb171d8aa9501759373/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c477e13bd7d3f369cde2fbb171d8aa9501759373/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c477e13bd7d3f369cde2fbb171d8aa9501759373", "patch": "@@ -1,3 +1,9 @@\n+2005-05-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/21610\n+\t* c-typeck.c (decl_constant_value_for_broken_optimization): If not\n+\treturning DECL, call unshare_expr.\n+\n 2005-05-17  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/cris.md: Unquote preparation and output statements."}, {"sha": "b96328d89b90f4174b2c414a0541b33dd0f305c0", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c477e13bd7d3f369cde2fbb171d8aa9501759373/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c477e13bd7d3f369cde2fbb171d8aa9501759373/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=c477e13bd7d3f369cde2fbb171d8aa9501759373", "patch": "@@ -1249,10 +1249,18 @@ decl_constant_value (tree decl)\n static tree\n decl_constant_value_for_broken_optimization (tree decl)\n {\n+  tree ret;\n+\n   if (pedantic || DECL_MODE (decl) == BLKmode)\n     return decl;\n-  else\n-    return decl_constant_value (decl);\n+\n+  ret = decl_constant_value (decl);\n+  /* Avoid unwanted tree sharing between the initializer and current\n+     function's body where the tree can be modified e.g. by the\n+     gimplifier.  */\n+  if (ret != decl && TREE_STATIC (decl))\n+    ret = unshare_expr (ret);\n+  return ret;\n }\n \n "}, {"sha": "e6911746563fd0ffbc2d0d9a942deef0dc2f5e5d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c477e13bd7d3f369cde2fbb171d8aa9501759373/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c477e13bd7d3f369cde2fbb171d8aa9501759373/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c477e13bd7d3f369cde2fbb171d8aa9501759373", "patch": "@@ -1,5 +1,8 @@\n 2005-05-17  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/21610\n+\t* gcc.c-torture/compile/20050516-1.c: New test.\n+\n \tPR fortran/15080\n \t* gfortran.fortran-torture/execute/forall_3.f90: Remove comment\n \tabout the test failing."}, {"sha": "2cdf6960807c2be7089ad9144f20031be463792d", "filename": "gcc/testsuite/gcc.c-torture/compile/20050516-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c477e13bd7d3f369cde2fbb171d8aa9501759373/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050516-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c477e13bd7d3f369cde2fbb171d8aa9501759373/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050516-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20050516-1.c?ref=c477e13bd7d3f369cde2fbb171d8aa9501759373", "patch": "@@ -0,0 +1,12 @@\n+/* PR tree-optimization/21610 */\n+\n+struct S { char s; };\n+struct T { struct S t; };\n+\n+struct S *const p = &((struct T * const) (0x4000))->t;\n+\n+void\n+foo (void)\n+{\n+  p->s = 0;\n+}"}]}