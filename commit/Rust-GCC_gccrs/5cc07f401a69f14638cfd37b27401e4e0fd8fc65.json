{"sha": "5cc07f401a69f14638cfd37b27401e4e0fd8fc65", "node_id": "C_kwDOANBUbNoAKDVjYzA3ZjQwMWE2OWYxNDYzOGNmZDM3YjI3NDAxZTRlMGZkOGZjNjU", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2022-04-07T14:59:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-19T14:05:28Z"}, "message": "[Ada] Casing style on record components\n\nThis patch fixes a bug where the -gnatyr switch fails to detect\nincorrect casing of record components.\n\ngcc/ada/\n\n\t* style.adb (Check_Identifier): Deal with the case where a\n\trecord component definition has been transformed; we want to\n\twarn if the original came from source.\n\t* libgnat/s-objrea.ads, libgnat/s-objrea.adb: Fix casing of MF\n\tto be consistent.\n\t* uname.adb: Fix casing of Chars to be consistent.\n\t* sem_util.ads: Minor comment fix.", "tree": {"sha": "c6bde4d44348b663b2698eb91711a6be40f9a122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6bde4d44348b663b2698eb91711a6be40f9a122"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cc07f401a69f14638cfd37b27401e4e0fd8fc65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc07f401a69f14638cfd37b27401e4e0fd8fc65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cc07f401a69f14638cfd37b27401e4e0fd8fc65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cc07f401a69f14638cfd37b27401e4e0fd8fc65/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c697f593f47490b1d3b061ae76ba728bfa2ff372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c697f593f47490b1d3b061ae76ba728bfa2ff372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c697f593f47490b1d3b061ae76ba728bfa2ff372"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "843ccf5915a349c8163893bc5464c00be068d5c6", "filename": "gcc/ada/libgnat/s-objrea.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc07f401a69f14638cfd37b27401e4e0fd8fc65/gcc%2Fada%2Flibgnat%2Fs-objrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc07f401a69f14638cfd37b27401e4e0fd8fc65/gcc%2Fada%2Flibgnat%2Fs-objrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-objrea.adb?ref=5cc07f401a69f14638cfd37b27401e4e0fd8fc65", "patch": "@@ -979,7 +979,7 @@ package body System.Object_Reader is\n \n          --  Map section table\n \n-         Opt_Stream := Create_Stream (Res.Mf, Signature_Loc_Offset, 4);\n+         Opt_Stream := Create_Stream (Res.MF, Signature_Loc_Offset, 4);\n          Hdr_Offset := Offset (uint32'(Read (Opt_Stream)));\n          Close (Opt_Stream);\n          Res.Sectab_Stream := Create_Stream\n@@ -999,7 +999,7 @@ package body System.Object_Reader is\n                Opt_32 : Optional_Header_PE32;\n             begin\n                Opt_Stream := Create_Stream\n-                 (Res.Mf, Opt_Offset, Opt_32'Size / SSU);\n+                 (Res.MF, Opt_Offset, Opt_32'Size / SSU);\n                Read_Raw\n                  (Opt_Stream, Opt_32'Address, uint32 (Opt_32'Size / SSU));\n                Res.ImageBase := uint64 (Opt_32.ImageBase);\n@@ -1011,7 +1011,7 @@ package body System.Object_Reader is\n                Opt_64 : Optional_Header_PE64;\n             begin\n                Opt_Stream := Create_Stream\n-                 (Res.Mf, Opt_Offset, Opt_64'Size / SSU);\n+                 (Res.MF, Opt_Offset, Opt_64'Size / SSU);\n                Read_Raw\n                  (Opt_Stream, Opt_64'Address, uint32 (Opt_64'Size / SSU));\n                Res.ImageBase := Opt_64.ImageBase;\n@@ -1367,7 +1367,7 @@ package body System.Object_Reader is\n          Strtab_Sz : uint32;\n \n       begin\n-         Res.Mf := F;\n+         Res.MF := F;\n          Res.In_Exception := In_Exception;\n \n          Res.Arch := PPC;\n@@ -1515,14 +1515,14 @@ package body System.Object_Reader is\n    end Arch;\n \n    function Create_Stream\n-     (Mf : Mapped_File;\n+     (MF : Mapped_File;\n       File_Offset : File_Size;\n       File_Length : File_Size)\n      return Mapped_Stream\n    is\n       Region : Mapped_Region;\n    begin\n-      Read (Mf, Region, File_Offset, File_Length, False);\n+      Read (MF, Region, File_Offset, File_Length, False);\n       return (Region, 0, Offset (File_Length));\n    end Create_Stream;\n \n@@ -1531,7 +1531,7 @@ package body System.Object_Reader is\n       Sec : Object_Section) return Mapped_Stream\n    is\n    begin\n-      return Create_Stream (Obj.Mf, File_Size (Sec.Off), File_Size (Sec.Size));\n+      return Create_Stream (Obj.MF, File_Size (Sec.Off), File_Size (Sec.Size));\n    end Create_Stream;\n \n    procedure Tell (Obj : in out Mapped_Stream; Off : out Offset) is\n@@ -1573,7 +1573,7 @@ package body System.Object_Reader is\n             null;\n       end case;\n \n-      Close (Obj.Mf);\n+      Close (Obj.MF);\n    end Close;\n \n    ------------------------"}, {"sha": "ee72114819bb76073c1251078e2079048a94a47a", "filename": "gcc/ada/libgnat/s-objrea.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc07f401a69f14638cfd37b27401e4e0fd8fc65/gcc%2Fada%2Flibgnat%2Fs-objrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc07f401a69f14638cfd37b27401e4e0fd8fc65/gcc%2Fada%2Flibgnat%2Fs-objrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-objrea.ads?ref=5cc07f401a69f14638cfd37b27401e4e0fd8fc65", "patch": "@@ -187,7 +187,7 @@ package System.Object_Reader is\n    type Mapped_Stream is private;\n    --  Provide an abstraction of a stream on a memory mapped file\n \n-   function Create_Stream (Mf : System.Mmap.Mapped_File;\n+   function Create_Stream (MF : System.Mmap.Mapped_File;\n                            File_Offset : System.Mmap.File_Size;\n                            File_Length : System.Mmap.File_Size)\n                           return Mapped_Stream;\n@@ -381,7 +381,7 @@ private\n    subtype Any_PECOFF is Object_Format range PECOFF .. PECOFF_PLUS;\n \n    type Object_File (Format : Object_Format) is record\n-      Mf   : System.Mmap.Mapped_File := System.Mmap.Invalid_Mapped_File;\n+      MF   : System.Mmap.Mapped_File := System.Mmap.Invalid_Mapped_File;\n       Arch : Object_Arch := Unknown;\n \n       Num_Sections : uint32 := 0;"}, {"sha": "1eca815c9d69dd789369eb27ff0d8cf5d4a7e821", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc07f401a69f14638cfd37b27401e4e0fd8fc65/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc07f401a69f14638cfd37b27401e4e0fd8fc65/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=5cc07f401a69f14638cfd37b27401e4e0fd8fc65", "patch": "@@ -3169,9 +3169,8 @@ package Sem_Util is\n    --  This procedure has the same calling sequence as Set_Entity, but it\n    --  performs additional checks as follows:\n    --\n-   --    If Style_Check is set, then it calls a style checking routine which\n-   --    can check identifier spelling style. This procedure also takes care\n-   --    of checking the restriction No_Implementation_Identifiers.\n+   --    If Style_Check is set, then it calls a style checking routine that\n+   --    can check identifier spelling style.\n    --\n    --    If restriction No_Abort_Statements is set, then it checks that the\n    --    entity is not Ada.Task_Identification.Abort_Task."}, {"sha": "cf7bc19980b57ef2c82b481e6ea50d97be016b5e", "filename": "gcc/ada/style.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc07f401a69f14638cfd37b27401e4e0fd8fc65/gcc%2Fada%2Fstyle.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc07f401a69f14638cfd37b27401e4e0fd8fc65/gcc%2Fada%2Fstyle.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyle.adb?ref=5cc07f401a69f14638cfd37b27401e4e0fd8fc65", "patch": "@@ -126,9 +126,14 @@ package body Style is\n       elsif Error_Posted (Ref) or else Error_Posted (Def) then\n          return;\n \n-      --  Case of definition comes from source\n+      --  Case of definition comes from source, or a record component whose\n+      --  Original_Record_Component comes from source.\n \n-      elsif Comes_From_Source (Def) then\n+      elsif Comes_From_Source (Def) or else\n+        (Ekind (Def) in Record_Field_Kind\n+           and then Present (Original_Record_Component (Def))\n+           and then Comes_From_Source (Original_Record_Component (Def)))\n+      then\n \n          --  Check same casing if we are checking references\n "}, {"sha": "200c036eee5df796c701c0340b8dff7e70d0bbb4", "filename": "gcc/ada/uname.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cc07f401a69f14638cfd37b27401e4e0fd8fc65/gcc%2Fada%2Funame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cc07f401a69f14638cfd37b27401e4e0fd8fc65/gcc%2Fada%2Funame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Funame.adb?ref=5cc07f401a69f14638cfd37b27401e4e0fd8fc65", "patch": "@@ -715,7 +715,7 @@ package body Uname is\n       Buf : Bounded_String;\n    begin\n       Get_Unit_Name_String (Buf, N);\n-      Write_Str (Buf.chars (1 .. Buf.Length));\n+      Write_Str (Buf.Chars (1 .. Buf.Length));\n    end Write_Unit_Name;\n \n    -------------------------------"}]}