{"sha": "b4de2f7db73c5331446fe1af9678a874d4958bae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRkZTJmN2RiNzNjNTMzMTQ0NmZlMWFmOTY3OGE4NzRkNDk1OGJhZQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-06-30T01:19:58Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-06-30T01:19:58Z"}, "message": "i386.c (ix86_init_mmx_sse_builtins): Use build_function_type_list instead of build_function_type.\n\n2002-06-29  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config/i386/i386.c (ix86_init_mmx_sse_builtins): Use\n        build_function_type_list instead of build_function_type.\n\n        * config/ia64/ia64.c (ia64_init_builtins): Same.\n\n        * config/alpha/alpha.c (alpha_init_builtins): Same.\n\n        * config/rs6000/rs6000.c (altivec_init_builtins): Same.\n\n        * config/arm/arm.c (arm_init_builtins): Same.\n\n        * tree.h: Add build_function_type_list prototype.\n\n        * tree.c (build_function_type_list): New.\n\nFrom-SVN: r55109", "tree": {"sha": "551f8946278e801b4d603f4a0a4dbc717e5588fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/551f8946278e801b4d603f4a0a4dbc717e5588fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4de2f7db73c5331446fe1af9678a874d4958bae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4de2f7db73c5331446fe1af9678a874d4958bae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4de2f7db73c5331446fe1af9678a874d4958bae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4de2f7db73c5331446fe1af9678a874d4958bae/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1691051fc987751fdc596faf2069be5fa7be3cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1691051fc987751fdc596faf2069be5fa7be3cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1691051fc987751fdc596faf2069be5fa7be3cee"}], "stats": {"total": 1057, "additions": 357, "deletions": 700}, "files": [{"sha": "a1ec75bb271f476555cc13bdbd96a736e4585721", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4de2f7db73c5331446fe1af9678a874d4958bae", "patch": "@@ -1,3 +1,20 @@\n+2002-06-29  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/i386/i386.c (ix86_init_mmx_sse_builtins): Use\n+        build_function_type_list instead of build_function_type.\n+\n+        * config/ia64/ia64.c (ia64_init_builtins): Same.\n+\n+        * config/alpha/alpha.c (alpha_init_builtins): Same.\n+\n+        * config/rs6000/rs6000.c (altivec_init_builtins): Same.\n+\n+        * config/arm/arm.c (arm_init_builtins): Same.\n+\n+        * tree.h: Add build_function_type_list prototype.\n+\n+        * tree.c (build_function_type_list): New.\n+\n 2002-06-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* collect2.c (scan_prog_file): Fix typo in message."}, {"sha": "b109328d34aa28e07239073038129644c3400a34", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=b4de2f7db73c5331446fe1af9678a874d4958bae", "patch": "@@ -6498,22 +6498,17 @@ alpha_init_builtins ()\n     if ((target_flags & p->target_mask) == p->target_mask)\n       builtin_function (p->name, ftype, p->code, BUILT_IN_MD, NULL);\n \n-  ftype = build_function_type (long_integer_type_node,\n-\t\t\t       tree_cons (NULL_TREE,\n-\t\t\t\t\t  long_integer_type_node,\n-\t\t\t\t\t  void_list_node));\n+  ftype = build_function_type_list (long_integer_type_node,\n+\t\t\t\t    long_integer_type_node, NULL_TREE);\n \n   p = one_arg_builtins;\n   for (i = 0; i < ARRAY_SIZE (one_arg_builtins); ++i, ++p)\n     if ((target_flags & p->target_mask) == p->target_mask)\n       builtin_function (p->name, ftype, p->code, BUILT_IN_MD, NULL);\n \n-  ftype = build_function_type (long_integer_type_node,\n-\t\t\t       tree_cons (NULL_TREE,\n-\t\t\t\t\t  long_integer_type_node,\n-\t\t\t\t\t  tree_cons (NULL_TREE,\n-\t\t\t\t\t\t     long_integer_type_node,\n-\t\t\t\t\t\t     void_list_node)));\n+  ftype = build_function_type_list (long_integer_type_node,\n+\t\t\t\t    long_integer_type_node,\n+\t\t\t\t    long_integer_type_node, NULL_TREE);\n \n   p = two_arg_builtins;\n   for (i = 0; i < ARRAY_SIZE (two_arg_builtins); ++i, ++p)\n@@ -6524,9 +6519,7 @@ alpha_init_builtins ()\n   builtin_function (\"__builtin_thread_pointer\", ftype,\n \t\t    ALPHA_BUILTIN_THREAD_POINTER, BUILT_IN_MD, NULL);\n \n-  ftype = build_function_type (void_type_node, tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t  ptr_type_node,\n-\t\t\t\t\t\t\t  void_list_node));\n+  ftype = build_function_type_list (void_type_node, ptr_type_node, NULL_TREE);\n   builtin_function (\"__builtin_set_thread_pointer\", ftype,\n \t\t    ALPHA_BUILTIN_SET_THREAD_POINTER, BUILT_IN_MD, NULL);\n }"}, {"sha": "04212dbc2b2851d171efee34b42f0b1067cbc433", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=b4de2f7db73c5331446fe1af9678a874d4958bae", "patch": "@@ -9314,10 +9314,9 @@ arm_init_builtins ()\n \n   tree int_ftype_int, void_ftype_pchar;\n \n-  /* void func (void *) */\n+  /* void func (char *) */\n   void_ftype_pchar\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pchar_type_node, endlink));\n+    = build_function_type_list (void_type_node, pchar_type_node, NULL_TREE);\n \n   /* int func (int) */\n   int_ftype_int"}, {"sha": "1411bcd150ad37918e47084e3a1f6dce9dcc1012", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 152, "deletions": 306, "changes": 458, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b4de2f7db73c5331446fe1af9678a874d4958bae", "patch": "@@ -11823,7 +11823,6 @@ ix86_init_mmx_sse_builtins ()\n {\n   const struct builtin_description * d;\n   size_t i;\n-  tree endlink = void_list_node;\n \n   tree pchar_type_node = build_pointer_type (char_type_node);\n   tree pfloat_type_node = build_pointer_type (float_type_node);\n@@ -11833,405 +11832,252 @@ ix86_init_mmx_sse_builtins ()\n \n   /* Comparisons.  */\n   tree int_ftype_v4sf_v4sf\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE,\n-\t\t\t\t\t\t V4SF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tV4SF_type_node, V4SF_type_node, NULL_TREE);\n   tree v4si_ftype_v4sf_v4sf\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE,\n-\t\t\t\t\t\t V4SF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV4SF_type_node, V4SF_type_node, NULL_TREE);\n   /* MMX/SSE/integer conversions.  */\n   tree int_ftype_v4sf\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      endlink));\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tV4SF_type_node, NULL_TREE);\n   tree int_ftype_v8qi\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8QI_type_node,\n-\t\t\t\t      endlink));\n+    = build_function_type_list (integer_type_node, V8QI_type_node, NULL_TREE);\n   tree v4sf_ftype_v4sf_int\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SF_type_node, integer_type_node, NULL_TREE);\n   tree v4sf_ftype_v4sf_v2si\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2SI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SF_type_node, V2SI_type_node, NULL_TREE);\n   tree int_ftype_v4hi_int\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tV4HI_type_node, integer_type_node, NULL_TREE);\n   tree v4hi_ftype_v4hi_int_int\n-    = build_function_type (V4HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    integer_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (V4HI_type_node,\n+\t\t\t\tinteger_type_node, integer_type_node,\n+\t\t\t\tNULL_TREE);\n   /* Miscellaneous.  */\n   tree v8qi_ftype_v4hi_v4hi\n-    = build_function_type (V8QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4HI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V8QI_type_node,\n+\t\t\t\tV4HI_type_node, V4HI_type_node, NULL_TREE);\n   tree v4hi_ftype_v2si_v2si\n-    = build_function_type (V4HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2SI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4HI_type_node,\n+\t\t\t\tV2SI_type_node, V2SI_type_node, NULL_TREE);\n   tree v4sf_ftype_v4sf_v4sf_int\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    integer_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SF_type_node, V4SF_type_node,\n+\t\t\t\tinteger_type_node, NULL_TREE);\n   tree v2si_ftype_v4hi_v4hi\n-    = build_function_type (V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4HI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2SI_type_node,\n+\t\t\t\tV4HI_type_node, V4HI_type_node, NULL_TREE);\n   tree v4hi_ftype_v4hi_int\n-    = build_function_type (V4HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4HI_type_node,\n+\t\t\t\tV4HI_type_node, V4HI_type_node,\n+\t\t\t\tinteger_type_node, NULL_TREE);\n   tree v4hi_ftype_v4hi_di\n-    = build_function_type (V4HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE,\n-\t\t\t\t\t\t long_long_integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4HI_type_node,\n+\t\t\t\tV4HI_type_node, long_long_unsigned_type_node,\n+\t\t\t\tNULL_TREE);\n   tree v2si_ftype_v2si_di\n-    = build_function_type (V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE,\n-\t\t\t\t\t\t long_long_integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2SI_type_node,\n+\t\t\t\tV2SI_type_node, long_long_unsigned_type_node,\n+\t\t\t\tNULL_TREE);\n   tree void_ftype_void\n-    = build_function_type (void_type_node, endlink);\n+    = build_function_type (void_type_node, void_list_node);\n   tree void_ftype_unsigned\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, unsigned_type_node,\n-\t\t\t\t      endlink));\n+    = build_function_type_list (void_type_node, unsigned_type_node, NULL_TREE);\n   tree unsigned_ftype_void\n-    = build_function_type (unsigned_type_node, endlink);\n+    = build_function_type (unsigned_type_node, void_list_node);\n   tree di_ftype_void\n-    = build_function_type (long_long_unsigned_type_node, endlink);\n+    = build_function_type (long_long_unsigned_type_node, void_list_node);\n   tree v4sf_ftype_void\n-    = build_function_type (V4SF_type_node, endlink);\n+    = build_function_type (V4SF_type_node, void_list_node);\n   tree v2si_ftype_v4sf\n-    = build_function_type (V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      endlink));\n+    = build_function_type_list (V2SI_type_node, V4SF_type_node, NULL_TREE);\n   /* Loads/stores.  */\n-  tree maskmovq_args = tree_cons (NULL_TREE, V8QI_type_node,\n-\t\t\t\t  tree_cons (NULL_TREE, V8QI_type_node,\n-\t\t\t\t\t     tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\tpchar_type_node,\n-\t\t\t\t\t\t\tendlink)));\n   tree void_ftype_v8qi_v8qi_pchar\n-    = build_function_type (void_type_node, maskmovq_args);\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tV8QI_type_node, V8QI_type_node,\n+\t\t\t\tpchar_type_node, NULL_TREE);\n   tree v4sf_ftype_pfloat\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pfloat_type_node,\n-\t\t\t\t      endlink));\n+    = build_function_type_list (V4SF_type_node, pfloat_type_node, NULL_TREE);\n   /* @@@ the type is bogus */\n   tree v4sf_ftype_v4sf_pv2si\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, pv2si_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SF_type_node, pv2di_type_node, NULL_TREE);\n   tree void_ftype_pv2si_v4sf\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pv2si_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpv2di_type_node, V4SF_type_node, NULL_TREE);\n   tree void_ftype_pfloat_v4sf\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pfloat_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpfloat_type_node, V4SF_type_node, NULL_TREE);\n   tree void_ftype_pdi_di\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pdi_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE,\n-\t\t\t\t\t\t long_long_unsigned_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpdi_type_node, long_long_unsigned_type_node,\n+\t\t\t\tNULL_TREE);\n   tree void_ftype_pv2di_v2di\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pv2di_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE,\n-\t\t\t\t\t\t V2DI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpv2di_type_node, V2DI_type_node, NULL_TREE);\n   /* Normal vector unops.  */\n   tree v4sf_ftype_v4sf\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      endlink));\n+    = build_function_type_list (V4SF_type_node, V4SF_type_node, NULL_TREE);\n \n   /* Normal vector binops.  */\n   tree v4sf_ftype_v4sf_v4sf\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SF_type_node, V4SF_type_node, NULL_TREE);\n   tree v8qi_ftype_v8qi_v8qi\n-    = build_function_type (V8QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8QI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V8QI_type_node,\n+\t\t\t\tV8QI_type_node, V8QI_type_node, NULL_TREE);\n   tree v4hi_ftype_v4hi_v4hi\n-    = build_function_type (V4HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4HI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4HI_type_node,\n+\t\t\t\tV4HI_type_node, V4HI_type_node, NULL_TREE);\n   tree v2si_ftype_v2si_v2si\n-    = build_function_type (V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2SI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2SI_type_node,\n+\t\t\t\tV2SI_type_node, V2SI_type_node, NULL_TREE);\n   tree di_ftype_di_di\n-    = build_function_type (long_long_unsigned_type_node,\n-\t\t\t   tree_cons (NULL_TREE, long_long_unsigned_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE,\n-\t\t\t\t\t\t long_long_unsigned_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (long_long_unsigned_type_node,\n+\t\t\t\tlong_long_unsigned_type_node,\n+\t\t\t\tlong_long_unsigned_type_node, NULL_TREE);\n \n   tree v2si_ftype_v2sf\n-    = build_function_type (V2SI_type_node,\n-                           tree_cons (NULL_TREE, V2SF_type_node,\n-                                      endlink));\n+    = build_function_type_list (V2SI_type_node, V2SFmode, NULL_TREE);\n   tree v2sf_ftype_v2si\n-    = build_function_type (V2SF_type_node,\n-                           tree_cons (NULL_TREE, V2SI_type_node,\n-                                      endlink));\n+    = build_function_type_list (V2SF_type_node, V2SI_type_node, NULL_TREE);\n   tree v2si_ftype_v2si\n-    = build_function_type (V2SI_type_node,\n-                           tree_cons (NULL_TREE, V2SI_type_node,\n-                                      endlink));\n+    = build_function_type_list (V2SI_type_node, V2SI_type_node, NULL_TREE);\n   tree v2sf_ftype_v2sf\n-    = build_function_type (V2SF_type_node,\n-                           tree_cons (NULL_TREE, V2SF_type_node,\n-                                      endlink));\n+    = build_function_type_list (V2SF_type_node, V2SF_type_node, NULL_TREE);\n   tree v2sf_ftype_v2sf_v2sf\n-    = build_function_type (V2SF_type_node,\n-                           tree_cons (NULL_TREE, V2SF_type_node,\n-                                      tree_cons (NULL_TREE,\n-                                                 V2SF_type_node,\n-                                                 endlink)));\n+    = build_function_type_list (V2SF_type_node,\n+\t\t\t\tV2SF_type_node, V2SF_type_node, NULL_TREE);\n   tree v2si_ftype_v2sf_v2sf\n-    = build_function_type (V2SI_type_node,\n-                           tree_cons (NULL_TREE, V2SF_type_node,\n-                                      tree_cons (NULL_TREE,\n-                                                 V2SF_type_node,\n-                                                 endlink)));\n+    = build_function_type_list (V2SI_type_node,\n+\t\t\t\tV2SF_type_node, V2SF_type_node, NULL_TREE);\n   tree pint_type_node    = build_pointer_type (integer_type_node);\n   tree pdouble_type_node = build_pointer_type (double_type_node);\n   tree int_ftype_v2df_v2df\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node, endlink)));\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tV2DF_type_node, V2DF_type_node, NULL_TREE);\n \n   tree ti_ftype_void\n-    = build_function_type (intTI_type_node, endlink);\n+    = build_function_type (intTI_type_node, void_list_node);\n   tree ti_ftype_ti_ti\n-    = build_function_type (intTI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, intTI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, intTI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (intTI_type_node,\n+\t\t\t\tintTI_type_node, intTI_type_node, NULL_TREE);\n   tree void_ftype_pvoid\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, ptr_type_node, endlink));\n+    = build_function_type_list (void_type_node, ptr_type_node, NULL_TREE);\n   tree v2di_ftype_di\n-    = build_function_type (V2DI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, long_long_unsigned_type_node,\n-\t\t\t\t      endlink));\n+    = build_function_type_list (V2DI_type_node,\n+\t\t\t\tlong_long_unsigned_type_node, NULL_TREE);\n   tree v4sf_ftype_v4si\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node, endlink));\n+    = build_function_type_list (V4SF_type_node, V4SI_type_node, NULL_TREE);\n   tree v4si_ftype_v4sf\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node, endlink));\n+    = build_function_type_list (V4SI_type_node, V4SF_type_node, NULL_TREE);\n   tree v2df_ftype_v4si\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node, endlink));\n+    = build_function_type_list (V2DF_type_node, V4SI_type_node, NULL_TREE);\n   tree v4si_ftype_v2df\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node, endlink));\n+    = build_function_type_list (V4SI_type_node, V2DF_type_node, NULL_TREE);\n   tree v2si_ftype_v2df\n-    = build_function_type (V2SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node, endlink));\n+    = build_function_type_list (V2SI_type_node, V2DF_type_node, NULL_TREE);\n   tree v4sf_ftype_v2df\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node, endlink));\n+    = build_function_type_list (V4SF_type_node, V2DF_type_node, NULL_TREE);\n   tree v2df_ftype_v2si\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2SI_type_node, endlink));\n+    = build_function_type_list (V2DF_type_node, V2SI_type_node, NULL_TREE);\n   tree v2df_ftype_v4sf\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node, endlink));\n+    = build_function_type_list (V2DF_type_node, V4SF_type_node, NULL_TREE);\n   tree int_ftype_v2df\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node, endlink));\n+    = build_function_type_list (integer_type_node, V2DF_type_node, NULL_TREE);\n   tree v2df_ftype_v2df_int\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2DF_type_node,\n+\t\t\t\tV2DF_type_node, integer_type_node, NULL_TREE);\n   tree v4sf_ftype_v4sf_v2df\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SF_type_node, V2DF_type_node, NULL_TREE);\n   tree v2df_ftype_v2df_v4sf\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2DF_type_node,\n+\t\t\t\tV2DF_type_node, V4SF_type_node, NULL_TREE);\n   tree v2df_ftype_v2df_v2df_int\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    integer_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (V2DF_type_node,\n+\t\t\t\tV2DF_type_node, V2DF_type_node,\n+\t\t\t\tinteger_type_node,\n+\t\t\t\tNULL_TREE);\n   tree v2df_ftype_v2df_pv2si\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, pv2si_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2DF_type_node,\n+\t\t\t\tV2DF_type_node, pv2si_type_node, NULL_TREE);\n   tree void_ftype_pv2si_v2df\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pv2si_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpv2si_type_node, V2DF_type_node, NULL_TREE);\n   tree void_ftype_pdouble_v2df\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pdouble_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpdouble_type_node, V2DF_type_node, NULL_TREE);\n   tree void_ftype_pint_int\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pint_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n-  tree maskmovdqu_args = tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t    tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t\t       tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t  pchar_type_node,\n-\t\t\t\t\t\t\t  endlink)));\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpint_type_node, integer_type_node, NULL_TREE);\n   tree void_ftype_v16qi_v16qi_pchar\n-    = build_function_type (void_type_node, maskmovdqu_args);\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tV16QI_type_node, V16QI_type_node,\n+\t\t\t\tpchar_type_node, NULL_TREE);\n   tree v2df_ftype_pdouble\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pdouble_type_node,\n-\t\t\t\t      endlink));\n+    = build_function_type_list (V2DF_type_node, pdouble_type_node, NULL_TREE);\n   tree v2df_ftype_v2df_v2df\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2DF_type_node,\n+\t\t\t\tV2DF_type_node, V2DF_type_node, NULL_TREE);\n   tree v16qi_ftype_v16qi_v16qi\n-    = build_function_type (V16QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V16QI_type_node,\n+\t\t\t\tV16QI_type_node, V16QI_type_node, NULL_TREE);\n   tree v8hi_ftype_v8hi_v8hi\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV8HI_type_node, V8HI_type_node, NULL_TREE);\n   tree v4si_ftype_v4si_v4si\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV4SI_type_node, V4SI_type_node, NULL_TREE);\n   tree v2di_ftype_v2di_v2di\n-    = build_function_type (V2DI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2DI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2DI_type_node,\n+\t\t\t\tV2DI_type_node, V2DI_type_node, NULL_TREE);\n   tree v2di_ftype_v2df_v2df\n-    = build_function_type (V2DI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2DI_type_node,\n+\t\t\t\tV2DF_type_node, V2DF_type_node, NULL_TREE);\n   tree v2df_ftype_v2df\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DF_type_node,\n-\t\t\t\t      endlink));\n+    = build_function_type_list (V2DF_type_node, V2DF_type_node, NULL_TREE);\n   tree v2df_ftype_double\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, double_type_node,\n-\t\t\t\t      endlink));\n+    = build_function_type_list (V2DF_type_node, double_type_node, NULL_TREE);\n   tree v2df_ftype_double_double\n-    = build_function_type (V2DF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, double_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, double_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2DF_type_node,\n+\t\t\t\tdouble_type_node, double_type_node, NULL_TREE);\n   tree int_ftype_v8hi_int\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tV8HI_type_node, integer_type_node, NULL_TREE);\n   tree v8hi_ftype_v8hi_int_int\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    integer_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV8HI_type_node, integer_type_node,\n+\t\t\t\tinteger_type_node, NULL_TREE);\n   tree v2di_ftype_v2di_int\n-    = build_function_type (V2DI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V2DI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2DI_type_node,\n+\t\t\t\tV2DI_type_node, integer_type_node, NULL_TREE);\n   tree v4si_ftype_v4si_int\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV4SI_type_node, integer_type_node, NULL_TREE);\n   tree v8hi_ftype_v8hi_int\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV8HI_type_node, integer_type_node, NULL_TREE);\n   tree v8hi_ftype_v8hi_v2di\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2DI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV8HI_type_node, V2DI_type_node, NULL_TREE);\n   tree v4si_ftype_v4si_v2di\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V2DI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV4SI_type_node, V2DI_type_node, NULL_TREE);\n   tree v4si_ftype_v8hi_v8hi\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV8HI_type_node, V8HI_type_node, NULL_TREE);\n   tree di_ftype_v8qi_v8qi\n-    = build_function_type (long_long_unsigned_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8QI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (long_long_unsigned_type_node,\n+\t\t\t\tV8QI_type_node, V8QI_type_node, NULL_TREE);\n   tree v2di_ftype_v16qi_v16qi\n-    = build_function_type (V2DI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V2DI_type_node,\n+\t\t\t\tV16QI_type_node, V16QI_type_node, NULL_TREE);\n   tree int_ftype_v16qi\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node, endlink));\n+    = build_function_type_list (integer_type_node, V16QI_type_node, NULL_TREE);\n \n   /* Add all builtins that are more or less simple operations on two\n      operands.  */"}, {"sha": "4f7380af976e8d954a94df44462a81259da97791", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 16, "deletions": 28, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=b4de2f7db73c5331446fe1af9678a874d4958bae", "patch": "@@ -7506,52 +7506,40 @@ ia64_init_builtins ()\n {\n   tree psi_type_node = build_pointer_type (integer_type_node);\n   tree pdi_type_node = build_pointer_type (long_integer_type_node);\n-  tree endlink = void_list_node;\n \n   /* __sync_val_compare_and_swap_si, __sync_bool_compare_and_swap_si */\n   tree si_ftype_psi_si_si\n-    = build_function_type (integer_type_node,\n-                           tree_cons (NULL_TREE, psi_type_node,\n-                                      tree_cons (NULL_TREE, integer_type_node,\n-                                                 tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    integer_type_node,\n-                                                            endlink))));\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tpsi_type_node, integer_type_node,\n+\t\t\t\tinteger_type_node, NULL_TREE);\n \n   /* __sync_val_compare_and_swap_di, __sync_bool_compare_and_swap_di */\n   tree di_ftype_pdi_di_di\n-    = build_function_type (long_integer_type_node,\n-                           tree_cons (NULL_TREE, pdi_type_node,\n-                                      tree_cons (NULL_TREE,\n-\t\t\t\t\t\t long_integer_type_node,\n-                                                 tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\tlong_integer_type_node,\n-\t\t\t\t\t\t\tendlink))));\n+    = build_function_type_list (long_integer_type_node,\n+\t\t\t\tpdi_type_node, long_integer_type_node,\n+\t\t\t\tlong_integer_type_node, NULL_TREE);\n   /* __sync_synchronize */\n   tree void_ftype_void\n-    = build_function_type (void_type_node, endlink);\n+    = build_function_type (void_type_node, void_list_node);\n \n   /* __sync_lock_test_and_set_si */\n   tree si_ftype_psi_si\n-    = build_function_type (integer_type_node,\n-                           tree_cons (NULL_TREE, psi_type_node,\n-                           tree_cons (NULL_TREE, integer_type_node, endlink)));\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tpsi_type_node, integer_type_node, NULL_TREE);\n \n   /* __sync_lock_test_and_set_di */\n   tree di_ftype_pdi_di\n-    = build_function_type (long_integer_type_node,\n-                           tree_cons (NULL_TREE, pdi_type_node,\n-                           tree_cons (NULL_TREE, long_integer_type_node,\n-\t\t\t\t      endlink)));\n+    = build_function_type_list (long_integer_type_node,\n+\t\t\t\tpdi_type_node, long_integer_type_node,\n+\t\t\t\tNULL_TREE);\n \n   /* __sync_lock_release_si */\n   tree void_ftype_psi\n-    = build_function_type (void_type_node, tree_cons (NULL_TREE, psi_type_node,\n-\t\t\t\t\t\t      endlink));\n+    = build_function_type_list (void_type_node, psi_type_node, NULL_TREE);\n \n   /* __sync_lock_release_di */\n   tree void_ftype_pdi\n-    = build_function_type (void_type_node, tree_cons (NULL_TREE, pdi_type_node,\n-\t\t\t\t\t\t      endlink));\n+    = build_function_type_list (void_type_node, pdi_type_node, NULL_TREE);\n \n #define def_builtin(name, type, code) \\\n   builtin_function ((name), (type), (code), BUILT_IN_MD, NULL)\n@@ -7578,11 +7566,11 @@ ia64_init_builtins ()\n \t       IA64_BUILTIN_LOCK_RELEASE_DI);\n \n   def_builtin (\"__builtin_ia64_bsp\",\n-\t       build_function_type (ptr_type_node, endlink),\n+\t       build_function_type (ptr_type_node, void_list_node),\n \t       IA64_BUILTIN_BSP);\n \n   def_builtin (\"__builtin_ia64_flushrs\", \n-\t       build_function_type (void_type_node, endlink), \n+\t       build_function_type (void_type_node, void_list_node), \n \t       IA64_BUILTIN_FLUSHRS);\n \n   def_builtin (\"__sync_fetch_and_add_si\", si_ftype_psi_si,"}, {"sha": "20cb29942ed4d6d57f0cbdad886b99940754c693", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 138, "deletions": 350, "changes": 488, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b4de2f7db73c5331446fe1af9678a874d4958bae", "patch": "@@ -4281,432 +4281,220 @@ altivec_init_builtins (void)\n   struct builtin_description_predicates *dp;\n   size_t i;\n \n-  tree endlink = void_list_node;\n-\n   tree pint_type_node = build_pointer_type (integer_type_node);\n   tree pvoid_type_node = build_pointer_type (void_type_node);\n   tree pshort_type_node = build_pointer_type (short_integer_type_node);\n   tree pchar_type_node = build_pointer_type (char_type_node);\n   tree pfloat_type_node = build_pointer_type (float_type_node);\n \n   tree v4sf_ftype_v4sf_v4sf_v16qi\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE, \n-\t\t\t\t\t\t\t    V16QI_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SF_type_node, V4SF_type_node,\n+\t\t\t\tV16QI_type_node, NULL_TREE);\n   tree v4si_ftype_v4si_v4si_v16qi\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE, \n-\t\t\t\t\t\t\t    V16QI_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV4SI_type_node, V4SI_type_node,\n+\t\t\t\tV16QI_type_node, NULL_TREE);\n   tree v8hi_ftype_v8hi_v8hi_v16qi\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE, \n-\t\t\t\t\t\t\t    V16QI_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV8HI_type_node, V8HI_type_node,\n+\t\t\t\tV16QI_type_node, NULL_TREE);\n   tree v16qi_ftype_v16qi_v16qi_v16qi\n-    = build_function_type (V16QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE, \n-\t\t\t\t\t\t\t    V16QI_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n-\n-  /* V4SI foo (char).  */\n+    = build_function_type_list (V16QI_type_node,\n+\t\t\t\tV16QI_type_node, V16QI_type_node,\n+\t\t\t\tV16QI_type_node, NULL_TREE);\n   tree v4si_ftype_char\n-    = build_function_type (V4SI_type_node,\n-\t\t           tree_cons (NULL_TREE, char_type_node, endlink));\n-\n-  /* V8HI foo (char).  */\n+    = build_function_type_list (V4SI_type_node, char_type_node, NULL_TREE);\n   tree v8hi_ftype_char\n-    = build_function_type (V8HI_type_node,\n-\t\t           tree_cons (NULL_TREE, char_type_node, endlink));\n-\n-  /* V16QI foo (char).  */\n+    = build_function_type_list (V8HI_type_node, char_type_node, NULL_TREE);\n   tree v16qi_ftype_char\n-    = build_function_type (V16QI_type_node,\n-\t\t           tree_cons (NULL_TREE, char_type_node, endlink));\n-  /* V4SF foo (V4SF).  */\n+    = build_function_type_list (V16QI_type_node, char_type_node, NULL_TREE);\n   tree v4sf_ftype_v4sf\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node, endlink));\n-\n-  /* V4SI foo (int *).  */\n+    = build_function_type_list (V4SF_type_node, V4SF_type_node, NULL_TREE);\n   tree v4si_ftype_pint\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pint_type_node, endlink));\n-  /* V8HI foo (short *).  */\n+    = build_function_type_list (V4SI_type_node, pint_type_node, NULL_TREE);\n   tree v8hi_ftype_pshort\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pshort_type_node, endlink));\n-  /* V16QI foo (char *).  */\n+    = build_function_type_list (V8HI_type_node, pshort_type_node, NULL_TREE);\n   tree v16qi_ftype_pchar\n-    = build_function_type (V16QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pchar_type_node, endlink));\n-  /* V4SF foo (float *).  */\n+    = build_function_type_list (V16QI_type_node, pchar_type_node, NULL_TREE);\n   tree v4sf_ftype_pfloat\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pfloat_type_node, endlink));\n-\n-  /* V8HI foo (V16QI).  */\n+    = build_function_type_list (V4SF_type_node, pfloat_type_node, NULL_TREE);\n   tree v8hi_ftype_v16qi\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node, endlink));\n-\n-  /* void foo (void *, int, char/literal).  */\n+    = build_function_type_list (V8HI_type_node, V16QI_type_node, NULL_TREE);\n   tree void_ftype_pvoid_int_char\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pvoid_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    char_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n-\n-  /* void foo (int *, V4SI).  */\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpvoid_type_node, integer_type_node,\n+\t\t\t\tchar_type_node, NULL_TREE);\n   tree void_ftype_pint_v4si\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pint_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t\t\t endlink)));\n-  /* void foo (short *, V8HI).  */\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpint_type_node, V4SI_type_node, NULL_TREE);\n   tree void_ftype_pshort_v8hi\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pshort_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t\t\t endlink)));\n-  /* void foo (char *, V16QI).  */\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpshort_type_node, V8HI_type_node, NULL_TREE);\n   tree void_ftype_pchar_v16qi\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pchar_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t\t\t endlink)));\n-  /* void foo (float *, V4SF).  */\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpchar_type_node, V16QI_type_node, NULL_TREE);\n   tree void_ftype_pfloat_v4sf\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, pfloat_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n-  /* void foo (V4SI).  */\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tpfloat_type_node, V4SF_type_node, NULL_TREE);\n   tree void_ftype_v4si\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      endlink));\n-\n-  /* void foo (vint, int, void *).  */\n+    = build_function_type_list (void_type_node, V4SI_type_node, NULL_TREE);\n   tree void_ftype_v4si_int_pvoid\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    pvoid_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n-\n-  /* void foo (vchar, int, void *).  */\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tV4SI_type_node, integer_type_node,\n+\t\t\t\tpvoid_type_node, NULL_TREE);\n+\n   tree void_ftype_v16qi_int_pvoid\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    pvoid_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n-\n-  /* void foo (vshort, int, void *).  */\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tV16QI_type_node, integer_type_node,\n+\t\t\t\tpvoid_type_node, NULL_TREE);\n   tree void_ftype_v8hi_int_pvoid\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    pvoid_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n-\n-  /* void foo (char).  */\n+    = build_function_type_list (void_type_node,\n+\t\t\t\tV8HI_type_node, integer_type_node,\n+\t\t\t\tpvoid_type_node, NULL_TREE);\n   tree void_ftype_qi\n-    = build_function_type (void_type_node,\n-\t\t\t   tree_cons (NULL_TREE, char_type_node,\n-\t\t\t\t      endlink));\n-\n-  /* void foo (void).  */\n+    = build_function_type_list (void_type_node, char_type_node, NULL_TREE);\n   tree void_ftype_void\n     = build_function_type (void_type_node, void_list_node);\n-\n-  /* vshort foo (void).  */\n   tree v8hi_ftype_void\n     = build_function_type (V8HI_type_node, void_list_node);\n \n   tree v4si_ftype_v4si_v4si\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n-  /* These are for the unsigned 5 bit literals.  */\n-\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV4SI_type_node, V4SI_type_node, NULL_TREE);\n   tree v4sf_ftype_v4si_char\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, char_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SI_type_node, char_type_node, NULL_TREE);\n   tree v4si_ftype_v4sf_char\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, char_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV4SF_type_node, char_type_node, NULL_TREE);\n   tree v4si_ftype_v4si_char\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, char_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV4SI_type_node, char_type_node, NULL_TREE);\n   tree v8hi_ftype_v8hi_char\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, char_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV8HI_type_node, char_type_node, NULL_TREE);\n   tree v16qi_ftype_v16qi_char\n-    = build_function_type (V16QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, char_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n-  /* These are for the unsigned 4 bit literals.  */\n-\n+    = build_function_type_list (V16QI_type_node,\n+\t\t\t\tV16QI_type_node, char_type_node, NULL_TREE);\n   tree v16qi_ftype_v16qi_v16qi_char\n-    = build_function_type (V16QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    char_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n-\n+    = build_function_type_list (V16QI_type_node,\n+\t\t\t\tV16QI_type_node, V16QI_type_node,\n+\t\t\t\tchar_type_node, NULL_TREE);\n   tree v8hi_ftype_v8hi_v8hi_char\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    char_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n-\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV8HI_type_node, V8HI_type_node,\n+\t\t\t\tchar_type_node, NULL_TREE);\n   tree v4si_ftype_v4si_v4si_char\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    char_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n-\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV4SI_type_node, V4SI_type_node,\n+\t\t\t\tchar_type_node, NULL_TREE);\n   tree v4sf_ftype_v4sf_v4sf_char\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    char_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n-\n-  /* End of 4 bit literals.  */\n-\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SF_type_node, V4SF_type_node,\n+\t\t\t\tchar_type_node, NULL_TREE);\n   tree v4sf_ftype_v4sf_v4sf\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SF_type_node, V4SF_type_node, NULL_TREE);\n   tree v4sf_ftype_v4sf_v4sf_v4si\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    V4SI_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SF_type_node, V4SF_type_node,\n+\t\t\t\tV4SI_type_node, NULL_TREE);\n   tree v4sf_ftype_v4sf_v4sf_v4sf\n-    = build_function_type (V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE, \n-\t\t\t\t\t\t\t    V4SF_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (V4SF_type_node,\n+\t\t\t\tV4SF_type_node, V4SF_type_node,\n+\t\t\t\tV4SF_type_node, NULL_TREE);\n   tree v4si_ftype_v4si_v4si_v4si \n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    V4SI_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n-\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV4SI_type_node, V4SI_type_node,\n+\t\t\t\tV4SI_type_node, NULL_TREE);\n   tree v8hi_ftype_v8hi_v8hi\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV8HI_type_node, V8HI_type_node, NULL_TREE);\n   tree v8hi_ftype_v8hi_v8hi_v8hi\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE, \n-\t\t\t\t\t\t\t    V8HI_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV8HI_type_node, V8HI_type_node,\n+\t\t\t\tV8HI_type_node, NULL_TREE);\n  tree v4si_ftype_v8hi_v8hi_v4si\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    V4SI_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV8HI_type_node, V8HI_type_node,\n+\t\t\t\tV4SI_type_node, NULL_TREE);\n  tree v4si_ftype_v16qi_v16qi_v4si\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t\t\t tree_cons (NULL_TREE,\n-\t\t\t\t\t\t\t    V4SI_type_node,\n-\t\t\t\t\t\t\t    endlink))));\n-  \n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV16QI_type_node, V16QI_type_node,\n+\t\t\t\tV4SI_type_node, NULL_TREE);\n   tree v16qi_ftype_v16qi_v16qi\n-    = build_function_type (V16QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t\t\t endlink)));\n-  \n+    = build_function_type_list (V16QI_type_node,\n+\t\t\t\tV16QI_type_node, V16QI_type_node, NULL_TREE);\n   tree v4si_ftype_v4sf_v4sf\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV4SF_type_node, V4SF_type_node, NULL_TREE);\n   tree v4si_ftype_v4si\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node, endlink));\n-\n+    = build_function_type_list (V4SI_type_node, V4SI_type_node, NULL_TREE);\n   tree v8hi_ftype_v8hi\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node, endlink));\n-\n+    = build_function_type_list (V8HI_type_node, V8HI_type_node, NULL_TREE);\n   tree v16qi_ftype_v16qi\n-    = build_function_type (V16QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node, endlink));\n-\n+    = build_function_type_list (V16QI_type_node, V16QI_type_node, NULL_TREE);\n   tree v8hi_ftype_v16qi_v16qi\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV16QI_type_node, V16QI_type_node, NULL_TREE);\n   tree v4si_ftype_v8hi_v8hi\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV8HI_type_node, V8HI_type_node, NULL_TREE);\n   tree v8hi_ftype_v4si_v4si\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tV4SI_type_node, V4SI_type_node, NULL_TREE);\n   tree v16qi_ftype_v8hi_v8hi\n-    = build_function_type (V16QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (V16QI_type_node,\n+\t\t\t\tV8HI_type_node, V8HI_type_node, NULL_TREE);\n   tree v4si_ftype_v16qi_v4si\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV16QI_type_node, V4SI_type_node, NULL_TREE);\n   tree v4si_ftype_v16qi_v16qi\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV16QI_type_node, V16QI_type_node, NULL_TREE);\n   tree v4si_ftype_v8hi_v4si\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tV8HI_type_node, V4SI_type_node, NULL_TREE);\n   tree v4si_ftype_v8hi\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node, endlink));\n-\n+    = build_function_type_list (V4SI_type_node, V8HI_type_node, NULL_TREE);\n   tree int_ftype_v4si_v4si\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tV4SI_type_node, V4SI_type_node, NULL_TREE);\n   tree int_ftype_v4sf_v4sf\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tV4SF_type_node, V4SF_type_node, NULL_TREE);\n   tree int_ftype_v16qi_v16qi\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tV16QI_type_node, V16QI_type_node, NULL_TREE);\n   tree int_ftype_int_v4si_v4si\n-    = build_function_type\n-    (integer_type_node,\n-     tree_cons (NULL_TREE, integer_type_node,\n-\t\ttree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SI_type_node,\n-\t\t\t\t      endlink))));\n-\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tinteger_type_node, V4SI_type_node,\n+\t\t\t\tV4SI_type_node, NULL_TREE);\n   tree int_ftype_int_v4sf_v4sf\n-    = build_function_type\n-    (integer_type_node,\n-     tree_cons (NULL_TREE, integer_type_node,\n-\t\ttree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V4SF_type_node,\n-\t\t\t\t      endlink))));\n-\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tinteger_type_node, V4SF_type_node,\n+\t\t\t\tV4SF_type_node, NULL_TREE);\n   tree int_ftype_int_v8hi_v8hi\n-    = build_function_type\n-    (integer_type_node,\n-     tree_cons (NULL_TREE, integer_type_node,\n-\t\t tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t    tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t       endlink))));\n-\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tinteger_type_node, V8HI_type_node,\n+\t\t\t\tV8HI_type_node, NULL_TREE);\n   tree int_ftype_int_v16qi_v16qi\n-    = build_function_type\n-    (integer_type_node,\n-     tree_cons (NULL_TREE, integer_type_node,\n-\t\ttree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V16QI_type_node,\n-\t\t\t\t      endlink))));\n-\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tinteger_type_node, V16QI_type_node,\n+\t\t\t\tV16QI_type_node, NULL_TREE);\n   tree v16qi_ftype_int_pvoid\n-    = build_function_type (V16QI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, pvoid_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (V16QI_type_node,\n+\t\t\t\tinteger_type_node, pvoid_type_node, NULL_TREE);\n   tree v4si_ftype_int_pvoid\n-    = build_function_type (V4SI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, pvoid_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (V4SI_type_node,\n+\t\t\t\tinteger_type_node, pvoid_type_node, NULL_TREE);\n   tree v8hi_ftype_int_pvoid\n-    = build_function_type (V8HI_type_node,\n-\t\t\t   tree_cons (NULL_TREE, integer_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, pvoid_type_node,\n-\t\t\t\t\t\t endlink)));\n-\n+    = build_function_type_list (V8HI_type_node,\n+\t\t\t\tinteger_type_node, pvoid_type_node, NULL_TREE);\n   tree int_ftype_v8hi_v8hi\n-    = build_function_type (integer_type_node,\n-\t\t\t   tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t      tree_cons (NULL_TREE, V8HI_type_node,\n-\t\t\t\t\t\t endlink)));\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tV8HI_type_node, V8HI_type_node, NULL_TREE);\n \n   def_builtin (MASK_ALTIVEC, \"__builtin_altivec_ld_internal_4sf\", v4sf_ftype_pfloat, ALTIVEC_BUILTIN_LD_INTERNAL_4sf);\n   def_builtin (MASK_ALTIVEC, \"__builtin_altivec_st_internal_4sf\", void_ftype_pfloat_v4sf, ALTIVEC_BUILTIN_ST_INTERNAL_4sf);"}, {"sha": "78364e1e3f44a44cbc35db738d522d4a3689f00c", "filename": "gcc/tree.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b4de2f7db73c5331446fe1af9678a874d4958bae", "patch": "@@ -3801,6 +3801,31 @@ build_function_type (value_type, arg_types)\n   return t;\n }\n \n+/* Like build_function_type, but take a vararg list of nodes.  The\n+   list of nodes should end with a NULL_TREE.  This is typically used\n+   for creating function types for builtins.  */\n+\n+tree\n+build_function_type_list VPARAMS ((tree first, ...))\n+{\n+  tree t, args, last;\n+\n+  VA_OPEN (p, first);\n+  VA_FIXEDARG (p, tree, first);\n+\n+  t = va_arg (p, tree);\n+  for (args = NULL_TREE; t != NULL_TREE; t = va_arg (p, tree))\n+    args = tree_cons (NULL_TREE, t, args);\n+\n+  last = args;\n+  args = nreverse (args);\n+  TREE_CHAIN (last) = void_list_node;\n+  args = build_function_type (first, args);\n+\n+  VA_CLOSE (p);\n+  return args;\n+}\n+\n /* Construct, lay out and return the type of methods belonging to class\n    BASETYPE and whose arguments and values are described by TYPE.\n    If that type exists already, reuse it."}, {"sha": "4fcbdd0a19aafa143cee024ec10141529f7e6d51", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4de2f7db73c5331446fe1af9678a874d4958bae/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b4de2f7db73c5331446fe1af9678a874d4958bae", "patch": "@@ -2178,6 +2178,7 @@ extern tree build_index_type\t\tPARAMS ((tree));\n extern tree build_index_2_type\t\tPARAMS ((tree, tree));\n extern tree build_array_type\t\tPARAMS ((tree, tree));\n extern tree build_function_type\t\tPARAMS ((tree, tree));\n+extern tree build_function_type_list\tPARAMS ((tree, ...));\n extern tree build_method_type\t\tPARAMS ((tree, tree));\n extern tree build_offset_type\t\tPARAMS ((tree, tree));\n extern tree build_complex_type\t\tPARAMS ((tree));"}]}