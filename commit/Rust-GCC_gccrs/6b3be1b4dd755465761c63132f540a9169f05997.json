{"sha": "6b3be1b4dd755465761c63132f540a9169f05997", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIzYmUxYjRkZDc1NTQ2NTc2MWM2MzEzMmY1NDBhOTE2OWYwNTk5Nw==", "commit": {"author": {"name": "Paul Koning", "email": "ni1d@arrl.net", "date": "2018-11-20T01:54:46Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2018-11-20T01:54:46Z"}, "message": "align-3.c: Skip if pdp11.\n\n\t    * gcc.c-torture/execute/align-3.c: Skip if pdp11.\n\t    * gcc.c-torture/execute/pr23467.c: Ditto.\n\t    * gcc.c-torture/execute/pr36093.c: Ditto.\n\t    * gcc.c-torture/execute/pr43783.c: Ditto.\n\t    * gcc.dg/const-elim-2.c: Xfail if pdp11.\n\t    * gcc.dg/torture/pr36400.c: Ditto.\n\t    * gcc.dg/tree-ssa/loop-1.c: Xfail for pdp11.  Add pdp11 to check\n\t    for jsr.\n\nFrom-SVN: r266299", "tree": {"sha": "97974ab8de38129992f35b8cb50c30e20c308ec6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97974ab8de38129992f35b8cb50c30e20c308ec6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b3be1b4dd755465761c63132f540a9169f05997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3be1b4dd755465761c63132f540a9169f05997", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3be1b4dd755465761c63132f540a9169f05997", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3be1b4dd755465761c63132f540a9169f05997/comments", "author": null, "committer": null, "parents": [{"sha": "327eaaf9c0b75b0e6dd83eddeef86e690730539f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327eaaf9c0b75b0e6dd83eddeef86e690730539f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/327eaaf9c0b75b0e6dd83eddeef86e690730539f"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "29e67449752977983761183226b7ec5519ad2438", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b3be1b4dd755465761c63132f540a9169f05997", "patch": "@@ -1,3 +1,14 @@\n+2018-11-19  Paul Koning  <ni1d@arrl.net>\n+\n+\t* gcc.c-torture/execute/align-3.c: Skip if pdp11.\n+\t* gcc.c-torture/execute/pr23467.c: Ditto.\n+\t* gcc.c-torture/execute/pr36093.c: Ditto.\n+\t* gcc.c-torture/execute/pr43783.c: Ditto.\n+\t* gcc.dg/const-elim-2.c: Xfail if pdp11.\n+\t* gcc.dg/torture/pr36400.c: Ditto.\n+\t* gcc.dg/tree-ssa/loop-1.c: Xfail for pdp11.  Add pdp11 to check\n+\tfor jsr.\n+\n 2018-11-19  Paul Koning  <ni1d@arrl.net>\n \n \t* lib/target-supports.exp (check_weak_available): Return \"no\" for"}, {"sha": "7478c9e4a19ed75554eb07c7e53567d9f794d6d1", "filename": "gcc/testsuite/gcc.c-torture/execute/align-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Falign-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Falign-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Falign-3.c?ref=6b3be1b4dd755465761c63132f540a9169f05997", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"small alignment\" { pdp11-*-* } } */\n+\n void func(void) __attribute__((aligned(256)));\n \n void func(void) "}, {"sha": "97a5af7780f0863ec777a8e20225f3a0043029d0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr23467.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23467.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23467.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr23467.c?ref=6b3be1b4dd755465761c63132f540a9169f05997", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"small alignment\" { pdp11-*-* } } */\n+\n struct s1\n {\n   int __attribute__ ((aligned (8))) a;"}, {"sha": "dac5720fad77a7cf67048d76915e7d0c70fdfc7f", "filename": "gcc/testsuite/gcc.c-torture/execute/pr36093.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36093.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36093.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36093.c?ref=6b3be1b4dd755465761c63132f540a9169f05997", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"small alignment\" { pdp11-*-* } } */\n+\n extern void abort (void);\n \n typedef struct Bar {"}, {"sha": "1eff2b9808cc9583358bfdca126914b1bc2fb6f0", "filename": "gcc/testsuite/gcc.c-torture/execute/pr43783.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43783.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43783.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43783.c?ref=6b3be1b4dd755465761c63132f540a9169f05997", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-skip-if \"small alignment\" { pdp11-*-* } } */\n+\n typedef __attribute__((aligned(16)))\n struct {\n   unsigned long long w[3];"}, {"sha": "bc465cabaca41bb5ef369b7321b337f6ca60a71b", "filename": "gcc/testsuite/gcc.dg/const-elim-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-elim-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-elim-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fconst-elim-2.c?ref=6b3be1b4dd755465761c63132f540a9169f05997", "patch": "@@ -1,7 +1,7 @@\n /* The string constant in this test case should be emitted exactly once.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-final { scan-assembler-times \"hi there\" 1 { xfail nvptx-*-* } } } */\n+/* { dg-final { scan-assembler-times \"hi there\" 1 { xfail nvptx-*-* pdp11-*-* } } } */\n \n static inline int returns_23() { return 23; }\n "}, {"sha": "8d21ef84791309de102348e7f79135e594113d54", "filename": "gcc/testsuite/gcc.dg/torture/pr36400.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36400.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36400.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36400.c?ref=6b3be1b4dd755465761c63132f540a9169f05997", "patch": "@@ -14,4 +14,4 @@ void baz()\n   barptr->some_string = \"Everything OK\";\n }\n \n-/* { dg-final { scan-assembler \"Everything OK\" { xfail nvptx-*-* } } } */\n+/* { dg-final { scan-assembler \"Everything OK\" { xfail nvptx-*-* pdp11-*-* } } } */"}, {"sha": "389a1a19ff334ea69e2fab60360dc169e96aaa84", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b3be1b4dd755465761c63132f540a9169f05997/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c?ref=6b3be1b4dd755465761c63132f540a9169f05997", "patch": "@@ -46,13 +46,13 @@ int xxx(void)\n /* CRIS keeps the address in a register.  */\n /* m68k sometimes puts the address in a register, depending on CPU and PIC.  */\n \n-/* { dg-final { scan-assembler-times \"foo\" 5 { xfail hppa*-*-* ia64*-*-* sh*-*-* cris-*-* crisv32-*-* fido-*-* m68k-*-* i?86-*-mingw* i?86-*-cygwin* x86_64-*-mingw* visium-*-* nvptx*-*-* } } } */\n+/* { dg-final { scan-assembler-times \"foo\" 5 { xfail hppa*-*-* ia64*-*-* sh*-*-* cris-*-* crisv32-*-* fido-*-* m68k-*-* i?86-*-mingw* i?86-*-cygwin* x86_64-*-mingw* visium-*-* nvptx*-*-* pdp11*-*-* } } } */\n /* { dg-final { scan-assembler-times \"foo,%r\" 5 { target hppa*-*-* } } } */\n /* { dg-final { scan-assembler-times \"= foo\"  5 { target ia64*-*-* } } } */\n /* { dg-final { scan-assembler-times \"call\\[ \\t\\]*_foo\" 5 { target i?86-*-mingw* i?86-*-cygwin* } } } */\n /* { dg-final { scan-assembler-times \"call\\[ \\t\\]*foo\" 5 { target x86_64-*-mingw* } } } */\n /* { dg-final { scan-assembler-times \"jsr|bsrf|blink\\ttr?,r18\"  5 { target sh*-*-* } } } */\n /* { dg-final { scan-assembler-times \"Jsr \\\\\\$r\" 5 { target cris-*-* } } } */\n-/* { dg-final { scan-assembler-times \"\\[jb\\]sr\" 5 { target fido-*-* m68k-*-* } } } */\n+/* { dg-final { scan-assembler-times \"\\[jb\\]sr\" 5 { target fido-*-* m68k-*-* pdp11-*-* } } } */\n /* { dg-final { scan-assembler-times \"bra *tr,r\\[1-9\\]*,r21\" 5 { target visium-*-* } } } */\n /* { dg-final { scan-assembler-times \"(?n)\\[ \\t\\]call\\[ \\t\\].*\\[ \\t\\]foo,\" 5 { target nvptx*-*-* } } } */"}]}