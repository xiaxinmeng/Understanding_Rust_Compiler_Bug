{"sha": "3d4339609875e273966ffab5b76526a0bf07963d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q0MzM5NjA5ODc1ZTI3Mzk2NmZmYWI1Yjc2NTI2YTBiZjA3OTYzZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-11-01T04:55:15Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-11-01T04:55:15Z"}, "message": "runtime: Correct test of mmap return value.\n\nFrom-SVN: r180731", "tree": {"sha": "5d35e97f65efa83ed31a6a591452049c0b193422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d35e97f65efa83ed31a6a591452049c0b193422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d4339609875e273966ffab5b76526a0bf07963d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d4339609875e273966ffab5b76526a0bf07963d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d4339609875e273966ffab5b76526a0bf07963d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d4339609875e273966ffab5b76526a0bf07963d/comments", "author": null, "committer": null, "parents": [{"sha": "207c35fa9ee1cde68cb992aa2525d96fa86d1f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/207c35fa9ee1cde68cb992aa2525d96fa86d1f20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/207c35fa9ee1cde68cb992aa2525d96fa86d1f20"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "4e1103e130a548e7f8dba651cec813b772dfd0e5", "filename": "libgo/runtime/mem.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d4339609875e273966ffab5b76526a0bf07963d/libgo%2Fruntime%2Fmem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d4339609875e273966ffab5b76526a0bf07963d/libgo%2Fruntime%2Fmem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fmem.c?ref=3d4339609875e273966ffab5b76526a0bf07963d", "patch": "@@ -85,6 +85,7 @@ void*\n runtime_SysReserve(void *v, uintptr n)\n {\n \tint fd = -1;\n+\tvoid *p;\n \n \t// On 64-bit, people with ulimit -v set complain if we reserve too\n \t// much address space.  Instead, assume that the reservation is okay\n@@ -103,7 +104,11 @@ runtime_SysReserve(void *v, uintptr n)\n \tfd = dev_zero;\n #endif\n \n-\treturn runtime_mmap(v, n, PROT_NONE, MAP_ANON|MAP_PRIVATE, fd, 0);\n+\tp = runtime_mmap(v, n, PROT_NONE, MAP_ANON|MAP_PRIVATE, fd, 0);\n+\tif((uintptr)p < 4096 || -(uintptr)p < 4096) {\n+\t\treturn nil;\n+\t}\n+\treturn p;\n }\n \n void"}]}