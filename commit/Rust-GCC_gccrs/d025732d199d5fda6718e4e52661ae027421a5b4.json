{"sha": "d025732d199d5fda6718e4e52661ae027421a5b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAyNTczMmQxOTlkNWZkYTY3MThlNGU1MjY2MWFlMDI3NDIxYTViNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-05-15T19:05:06Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-05-15T19:05:06Z"}, "message": "gimple.h (compare_field_offset): Rename into...\n\n\t* gimple.h (compare_field_offset): Rename into...\n\t(gimple_compare_field_offset): ...this.\n\t* gimple.c (compare_field_offset): Rename into...\n\t(gimple_compare_field_offset): ...this.  Compare the full access if\n\tthe offset is self-referential.\n\t(gimple_types_compatible_p): Adjust for above renaming.\n\t* lto-streamer-in.c (input_gimple_stmt): Likewise.  Also compare the\n\tDECL_NONADDRESSABLE_P flag of fields before merging them.\n\nFrom-SVN: r159438", "tree": {"sha": "9ec7215e04633e60cb2651e0efe00d834802916f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ec7215e04633e60cb2651e0efe00d834802916f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d025732d199d5fda6718e4e52661ae027421a5b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d025732d199d5fda6718e4e52661ae027421a5b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d025732d199d5fda6718e4e52661ae027421a5b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d025732d199d5fda6718e4e52661ae027421a5b4/comments", "author": null, "committer": null, "parents": [{"sha": "b75bdd292f589b7dc457145842a511579159b055", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75bdd292f589b7dc457145842a511579159b055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b75bdd292f589b7dc457145842a511579159b055"}], "stats": {"total": 126, "additions": 117, "deletions": 9}, "files": [{"sha": "61d08427dca74c8fb68c2d3f5a8fe5f066d6875e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d025732d199d5fda6718e4e52661ae027421a5b4", "patch": "@@ -1,3 +1,14 @@\n+2010-05-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gimple.h (compare_field_offset): Rename into...\n+\t(gimple_compare_field_offset): ...this.\n+\t* gimple.c (compare_field_offset): Rename into...\n+\t(gimple_compare_field_offset): ...this.  Compare the full access if\n+\tthe offset is self-referential.\n+\t(gimple_types_compatible_p): Adjust for above renaming.\n+\t* lto-streamer-in.c (input_gimple_stmt): Likewise.  Also compare the\n+\tDECL_NONADDRESSABLE_P flag of fields before merging them.\n+\n 2010-05-15  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* tree.h (ctor_to_list): Delete."}, {"sha": "1ff9b3a63f688f95f7ce195ca441f44f3498e0a8", "filename": "gcc/gimple.c", "status": "modified", "additions": 26, "deletions": 7, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=d025732d199d5fda6718e4e52661ae027421a5b4", "patch": "@@ -3219,16 +3219,35 @@ compare_type_names_p (tree t1, tree t2, bool for_completion_p)\n   return false;\n }\n \n-/* Return true if the field decls F1 and F2 are at the same offset.  */\n+/* Return true if the field decls F1 and F2 are at the same offset.\n+\n+   This is intended to be used on GIMPLE types only.  In order to\n+   compare GENERIC types, use fields_compatible_p instead.  */\n \n bool\n-compare_field_offset (tree f1, tree f2)\n+gimple_compare_field_offset (tree f1, tree f2)\n {\n   if (DECL_OFFSET_ALIGN (f1) == DECL_OFFSET_ALIGN (f2))\n-    return (operand_equal_p (DECL_FIELD_OFFSET (f1),\n-\t\t\t     DECL_FIELD_OFFSET (f2), 0)\n-\t    && tree_int_cst_equal (DECL_FIELD_BIT_OFFSET (f1),\n-\t\t\t\t   DECL_FIELD_BIT_OFFSET (f2)));\n+    {\n+      tree offset1 = DECL_FIELD_OFFSET (f1);\n+      tree offset2 = DECL_FIELD_OFFSET (f2);\n+      return ((offset1 == offset2\n+\t       /* Once gimplification is done, self-referential offsets are\n+\t\t  instantiated as operand #2 of the COMPONENT_REF built for\n+\t\t  each access and reset.  Therefore, they are not relevant\n+\t\t  anymore and fields are interchangeable provided that they\n+\t\t  represent the same access.  */\n+\t       || (TREE_CODE (offset1) == PLACEHOLDER_EXPR\n+\t\t   && TREE_CODE (offset2) == PLACEHOLDER_EXPR\n+\t\t   && (DECL_SIZE (f1) == DECL_SIZE (f2)\n+\t\t       || (TREE_CODE (DECL_SIZE (f1)) == PLACEHOLDER_EXPR\n+\t\t\t   && TREE_CODE (DECL_SIZE (f2)) == PLACEHOLDER_EXPR)\n+\t\t       || operand_equal_p (DECL_SIZE (f1), DECL_SIZE (f2), 0))\n+\t\t   && DECL_ALIGN (f1) == DECL_ALIGN (f2))\n+\t       || operand_equal_p (offset1, offset2, 0))\n+\t      && tree_int_cst_equal (DECL_FIELD_BIT_OFFSET (f1),\n+\t\t\t\t     DECL_FIELD_BIT_OFFSET (f2)));\n+    }\n \n   /* Fortran and C do not always agree on what DECL_OFFSET_ALIGN\n      should be, so handle differing ones specially by decomposing\n@@ -3576,7 +3595,7 @@ gimple_types_compatible_p (tree t1, tree t2)\n \t    /* The fields must have the same name, offset and type.  */\n \t    if (DECL_NAME (f1) != DECL_NAME (f2)\n \t\t|| DECL_NONADDRESSABLE_P (f1) != DECL_NONADDRESSABLE_P (f2)\n-\t\t|| !compare_field_offset (f1, f2)\n+\t\t|| !gimple_compare_field_offset (f1, f2)\n \t\t|| !gimple_types_compatible_p (TREE_TYPE (f1),\n \t\t\t\t\t       TREE_TYPE (f2)))\n \t      goto different_types;"}, {"sha": "d54550c26948a49037e786ac39a108bf3602ae81", "filename": "gcc/gimple.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=d025732d199d5fda6718e4e52661ae027421a5b4", "patch": "@@ -954,7 +954,7 @@ extern bool is_gimple_call_addr (tree);\n extern tree get_call_expr_in (tree t);\n \n extern void recalculate_side_effects (tree);\n-extern bool compare_field_offset (tree, tree);\n+extern bool gimple_compare_field_offset (tree, tree);\n extern tree gimple_register_type (tree);\n extern void print_gimple_types_stats (void);\n extern void free_gimple_type_tables (void);"}, {"sha": "5c6658a9f992c10ebb2db558108e2cc762261806", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=d025732d199d5fda6718e4e52661ae027421a5b4", "patch": "@@ -1094,7 +1094,9 @@ input_gimple_stmt (struct lto_input_block *ib, struct data_in *data_in,\n \t\t    {\n \t\t      if (tem == field\n \t\t\t  || (TREE_TYPE (tem) == TREE_TYPE (field)\n-\t\t\t      && compare_field_offset (tem, field)))\n+\t\t\t      && DECL_NONADDRESSABLE_P (tem)\n+\t\t\t\t == DECL_NONADDRESSABLE_P (field)\n+\t\t\t      && gimple_compare_field_offset (tem, field)))\n \t\t\tbreak;\n \t\t    }\n \t\t  /* In case of type mismatches across units we can fail"}, {"sha": "1ce44f0c05c4cb9d1517db99d41bec44955955d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d025732d199d5fda6718e4e52661ae027421a5b4", "patch": "@@ -1,3 +1,9 @@\n+2010-05-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/lto9.adb: New test.\n+\t* gnat.dg/lto9_pkg1.ads: New helper.\n+\t* gnat.dg/lto9_pkg2.ad[sb]: Likewise.\n+\n 2010-05-15  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/lto/ipareference_1.c: Rename to ..."}, {"sha": "f4ec040d0945df231a6db76de892690a988fcc41", "filename": "gcc/testsuite/gnat.dg/lto9.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Ftestsuite%2Fgnat.dg%2Flto9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Ftestsuite%2Fgnat.dg%2Flto9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto9.adb?ref=d025732d199d5fda6718e4e52661ae027421a5b4", "patch": "@@ -0,0 +1,15 @@\n+-- { dg-do run }\n+-- { dg-options \"-flto\" { target lto } }\n+\n+with Lto9_Pkg1; use Lto9_Pkg1;\n+\n+procedure Lto9 is\n+\n+begin\n+\n+   District_Subscription_Lists.Put\n+     (List     => District_01_Subscribers,\n+      Elem_Ptr => New_Subscriber_01'Access,\n+      Location => 1);\n+\n+end;"}, {"sha": "a09439262a4baae6657fd5130415cb6e41ef7881", "filename": "gcc/testsuite/gnat.dg/lto9_pkg1.ads", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Ftestsuite%2Fgnat.dg%2Flto9_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Ftestsuite%2Fgnat.dg%2Flto9_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto9_pkg1.ads?ref=d025732d199d5fda6718e4e52661ae027421a5b4", "patch": "@@ -0,0 +1,24 @@\n+with Lto9_Pkg2;\n+\n+package Lto9_Pkg1 is\n+\n+   subtype Lengths is Natural range 0 .. 50;\n+\n+   type Subscriber (NLen, ALen: Lengths := 50) is record\n+      Name    : String(1 .. NLen);\n+      Address : String(1 .. ALen);\n+   end record;\n+\n+   type Subscriber_Ptr is access all Subscriber;\n+\n+   package District_Subscription_Lists is new Lto9_Pkg2\n+     (Element_Type => Subscriber,\n+      Element_Ptr  => Subscriber_Ptr,\n+      Size         => 100);\n+\n+   District_01_Subscribers : District_Subscription_Lists.List_Type;\n+\n+   New_Subscriber_01 : aliased Subscriber :=\n+     (12, 23, \"Brown, Silas\", \"King's Pyland, Dartmoor\");\n+\n+end Lto9_Pkg1;"}, {"sha": "0291d608c4e583cad3dcb44ddd8a88bd137b8ba2", "filename": "gcc/testsuite/gnat.dg/lto9_pkg2.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Ftestsuite%2Fgnat.dg%2Flto9_pkg2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Ftestsuite%2Fgnat.dg%2Flto9_pkg2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto9_pkg2.adb?ref=d025732d199d5fda6718e4e52661ae027421a5b4", "patch": "@@ -0,0 +1,10 @@\n+package body Lto9_Pkg2 is\n+\n+   procedure Put (List     : in out List_Type;\n+                  Elem_Ptr : in     Element_Ptr;\n+                  Location : in     Index) is\n+   begin\n+      List.Elements(Location) := Elem_Ptr;\n+   end Put;\n+\n+end Lto9_Pkg2;"}, {"sha": "881d02b54f4c6a26bef8a4f287a0414b5a3bb30f", "filename": "gcc/testsuite/gnat.dg/lto9_pkg2.ads", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Ftestsuite%2Fgnat.dg%2Flto9_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d025732d199d5fda6718e4e52661ae027421a5b4/gcc%2Ftestsuite%2Fgnat.dg%2Flto9_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Flto9_pkg2.ads?ref=d025732d199d5fda6718e4e52661ae027421a5b4", "patch": "@@ -0,0 +1,21 @@\n+generic\n+\n+   Size : in Positive;\n+   type Element_Type (<>) is private;\n+   type Element_Ptr       is access all Element_Type;\n+\n+package Lto9_Pkg2 is\n+\n+   subtype Index is Positive range 1 .. (Size + 1);\n+\n+   type List_Array is array (Index) of Element_Ptr;\n+\n+   type List_Type is record\n+      Elements : List_Array;\n+   end record;\n+\n+   procedure Put (List     : in out List_Type;\n+                  Elem_Ptr : in     Element_Ptr;\n+                  Location : in     Index);\n+\n+end Lto9_Pkg2;"}]}