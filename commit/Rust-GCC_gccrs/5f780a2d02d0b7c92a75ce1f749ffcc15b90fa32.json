{"sha": "5f780a2d02d0b7c92a75ce1f749ffcc15b90fa32", "node_id": "C_kwDOANBUbNoAKDVmNzgwYTJkMDJkMGI3YzkyYTc1Y2UxZjc0OWZmY2MxNWI5MGZhMzI", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-09-01T08:19:09Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-04T13:47:29Z"}, "message": "ada: Avoid repeated iteration over private protected components\n\nThe First_Entity/Next_Entity chain includes private entities, so there\nit no need to iterate starting both from First_Entity and\nFirst_Private_Entity.\n\nCode cleanup related to improved detection of references to\nuninitialized objects; behavior is unaffected.\n\ngcc/ada/\n\n\t* sem_util.adb\n\t(Check_Components): Iterate using\n\tFirst/Next_Component_Or_Discriminant.\n\t(Has_Preelaborable_Initialization): Avoid repeated iteration with\n\tcalls to Check_Components with First_Entity and\n\tFirst_Private_Entity.\n\t(Is_Independent_Object_Entity): Tune indentation.", "tree": {"sha": "4f343220baceab180386719954b7f3fbf0cd5e89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f343220baceab180386719954b7f3fbf0cd5e89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f780a2d02d0b7c92a75ce1f749ffcc15b90fa32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f780a2d02d0b7c92a75ce1f749ffcc15b90fa32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f780a2d02d0b7c92a75ce1f749ffcc15b90fa32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f780a2d02d0b7c92a75ce1f749ffcc15b90fa32/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb3c260460073bed267fae3ee970947a24858211", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3c260460073bed267fae3ee970947a24858211", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb3c260460073bed267fae3ee970947a24858211"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "536d5fadefb6c8d9a27adcf37316331b21f71a1e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f780a2d02d0b7c92a75ce1f749ffcc15b90fa32/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f780a2d02d0b7c92a75ce1f749ffcc15b90fa32/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=5f780a2d02d0b7c92a75ce1f749ffcc15b90fa32", "patch": "@@ -13679,15 +13679,12 @@ package body Sem_Util is\n          Exp : Node_Id;\n \n       begin\n-         --  Loop through entities of record or protected type\n+         --  Loop through components and discriminants of record or protected\n+         --  type.\n \n-         Ent := E;\n+         Ent := First_Component_Or_Discriminant (E);\n          while Present (Ent) loop\n \n-            --  We are interested only in components and discriminants\n-\n-            Exp := Empty;\n-\n             case Ekind (Ent) is\n                when E_Component =>\n \n@@ -13698,6 +13695,8 @@ package body Sem_Util is\n \n                   if Present (Declaration_Node (Ent)) then\n                      Exp := Expression (Declaration_Node (Ent));\n+                  else\n+                     Exp := Empty;\n                   end if;\n \n                when E_Discriminant =>\n@@ -13710,7 +13709,7 @@ package body Sem_Util is\n                   Exp := Discriminant_Default_Value (Ent);\n \n                when others =>\n-                  goto Check_Next_Entity;\n+                  raise Program_Error;\n             end case;\n \n             --  A component has PI if it has no default expression and the\n@@ -13731,8 +13730,7 @@ package body Sem_Util is\n                exit;\n             end if;\n \n-         <<Check_Next_Entity>>\n-            Next_Entity (Ent);\n+            Next_Component_Or_Discriminant (Ent);\n          end loop;\n       end Check_Components;\n \n@@ -13842,7 +13840,7 @@ package body Sem_Util is\n          --  If OK, check extension components (if any)\n \n          if Has_PE and then Is_Record_Type (E) then\n-            Check_Components (First_Entity (E));\n+            Check_Components (E);\n          end if;\n \n          --  Check specifically for 10.2.1(11.4/2) exception: a controlled type\n@@ -13882,7 +13880,7 @@ package body Sem_Util is\n \n       elsif Is_Record_Type (E) then\n          Has_PE := True;\n-         Check_Components (First_Entity (E));\n+         Check_Components (E);\n \n       --  Protected types must not have entries, and components must meet\n       --  same set of rules as for record components.\n@@ -13892,8 +13890,7 @@ package body Sem_Util is\n             Has_PE := False;\n          else\n             Has_PE := True;\n-            Check_Components (First_Entity (E));\n-            Check_Components (First_Private_Entity (E));\n+            Check_Components (E);\n          end if;\n \n       --  Type System.Address always has preelaborable initialization\n@@ -18305,7 +18302,7 @@ package body Sem_Util is\n            Is_Object (Id)\n              and then (Is_Independent (Id)\n                         or else\n-                      Is_Independent (Etype (Id)));\n+                       Is_Independent (Etype (Id)));\n       end Is_Independent_Object_Entity;\n \n       -------------------------------------"}]}