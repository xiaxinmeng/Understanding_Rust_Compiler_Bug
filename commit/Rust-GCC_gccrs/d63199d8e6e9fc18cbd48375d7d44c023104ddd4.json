{"sha": "d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYzMTk5ZDhlNmU5ZmMxOGNiZDQ4Mzc1ZDdkNDRjMDIzMTA0ZGRkNA==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T11:49:44Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T11:49:44Z"}, "message": "exp_ch3.adb, [...]: Minor reformatting.\n\ngcc/ada/\n\n2017-11-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch3.adb, gnat1drv.adb, namet.adb, namet.ads, sem_aggr.adb,\n\tsem_ch2.adb, sem_ch4.adb: Minor reformatting.\n\t* sem_res.adb (Resolve_Entity_Name): Suppress spurious error on read of\n\tout parameter when in Ada_83 mode, the oarameter is of a composite\n\ttype, and it appears as the prefix of an attribute.\n\n2017-11-09  Bob Duff  <duff@adacore.com>\n\n\t* sinfo.ads: Minor comment fix.\n\n2017-11-09  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.ads: Add pragmas Unmodified and Unreferenced to table\n\tPragma_Significant_In_SPARK.\n\ngcc/testsuite/\n\n2017-11-09  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* gnat.dg/unreferenced.adb: New testcase.\n\n2017-11-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* gnat.dg/out_param.adb: New testcase.\n\nFrom-SVN: r254571", "tree": {"sha": "8dbf06fc58c9c737669fb57e98a68c8b2a29c567", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dbf06fc58c9c737669fb57e98a68c8b2a29c567"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/comments", "author": null, "committer": null, "parents": [{"sha": "dcd5fd67facffa75407125066f8db852f5ee580e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcd5fd67facffa75407125066f8db852f5ee580e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcd5fd67facffa75407125066f8db852f5ee580e"}], "stats": {"total": 266, "additions": 165, "deletions": 101}, "files": [{"sha": "3385efaebd57a63d707c400d2ae9b2d9adcef333", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -8717,10 +8717,11 @@ package body Exp_Ch3 is\n             --  Initialize secondary tags\n \n             else\n-               Initialize_Tag (Full_Typ,\n-                 Iface     => Node (Iface_Elmt),\n-                 Tag_Comp  => Tag_Comp,\n-                 Iface_Tag => Node (Iface_Tag_Elmt));\n+               Initialize_Tag\n+                 (Typ       => Full_Typ,\n+                  Iface     => Node (Iface_Elmt),\n+                  Tag_Comp  => Tag_Comp,\n+                  Iface_Tag => Node (Iface_Tag_Elmt));\n             end if;\n \n          --  Otherwise generate code to initialize the tag\n@@ -8729,10 +8730,11 @@ package body Exp_Ch3 is\n             if (In_Variable_Pos and then Variable_Comps)\n               or else (not In_Variable_Pos and then Fixed_Comps)\n             then\n-               Initialize_Tag (Full_Typ,\n-                 Iface     => Node (Iface_Elmt),\n-                 Tag_Comp  => Tag_Comp,\n-                 Iface_Tag => Node (Iface_Tag_Elmt));\n+               Initialize_Tag\n+                 (Typ       => Full_Typ,\n+                  Iface     => Node (Iface_Elmt),\n+                  Tag_Comp  => Tag_Comp,\n+                  Iface_Tag => Node (Iface_Tag_Elmt));\n             end if;\n          end if;\n "}, {"sha": "7138c85020a3770e64ff9da2ddea77d5e5618fbd", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -384,9 +384,10 @@ procedure Gnat1drv is\n          Relaxed_RM_Semantics := True;\n \n          if not Generate_CodePeer_Messages then\n+\n             --  Suppress compiler warnings by default when generating SCIL for\n-            --  CodePeer, except when combined with -gnateC where we do want\n-            --  to emit GNAT warnings.\n+            --  CodePeer, except when combined with -gnateC where we do want to\n+            --  emit GNAT warnings.\n \n             Warning_Mode := Suppress;\n          end if;"}, {"sha": "13e8e1f8c5137c0265709cd037c190fe19be89ed", "filename": "gcc/ada/namet.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fnamet.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fnamet.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.adb?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -175,7 +175,8 @@ package body Namet is\n    --------------------\n \n    procedure Append_Decoded\n-     (Buf : in out Bounded_String; Id : Valid_Name_Id)\n+     (Buf : in out Bounded_String;\n+      Id  : Valid_Name_Id)\n    is\n       C    : Character;\n       P    : Natural;\n@@ -599,7 +600,8 @@ package body Namet is\n    ------------------------\n \n    procedure Append_Unqualified\n-     (Buf : in out Bounded_String; Id : Valid_Name_Id)\n+     (Buf : in out Bounded_String;\n+      Id  : Valid_Name_Id)\n    is\n       Temp : Bounded_String;\n    begin\n@@ -1476,7 +1478,10 @@ package body Namet is\n    -- Name_Equals --\n    -----------------\n \n-   function Name_Equals (N1, N2 : Valid_Name_Id) return Boolean is\n+   function Name_Equals\n+     (N1 : Valid_Name_Id;\n+      N2 : Valid_Name_Id) return Boolean\n+   is\n    begin\n       return N1 = N2 or else Get_Name_String (N1) = Get_Name_String (N2);\n    end Name_Equals;"}, {"sha": "b55d33617441a7ab045cfc51b3a70fb0d443ab3b", "filename": "gcc/ada/namet.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fnamet.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fnamet.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.ads?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -358,7 +358,9 @@ package Namet is\n    --  names, since these are efficiently located without hashing by Name_Find\n    --  in any case.\n \n-   function Name_Equals (N1, N2 : Valid_Name_Id) return Boolean;\n+   function Name_Equals\n+     (N1 : Valid_Name_Id;\n+      N2 : Valid_Name_Id) return Boolean;\n    --  Return whether N1 and N2 denote the same character sequence\n \n    function Get_Name_String (Id : Valid_Name_Id) return String;"}, {"sha": "e49a70b868ab2299431e0120a9b2f85871c9e6c4", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 52, "deletions": 46, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -2765,7 +2765,7 @@ package body Sem_Aggr is\n    -----------------------------\n \n    procedure Resolve_Delta_Aggregate (N : Node_Id; Typ : Entity_Id) is\n-      Base   : constant Node_Id := Expression (N);\n+      Base : constant Node_Id := Expression (N);\n \n    begin\n       if not Is_Composite_Type (Typ) then\n@@ -2789,12 +2789,14 @@ package body Sem_Aggr is\n \n    procedure Resolve_Delta_Array_Aggregate (N : Node_Id; Typ : Entity_Id) is\n       Deltas : constant List_Id := Component_Associations (N);\n+\n       Assoc      : Node_Id;\n       Choice     : Node_Id;\n       Index_Type : Entity_Id;\n \n    begin\n       Index_Type := Etype (First_Index (Typ));\n+\n       Assoc := First (Deltas);\n       while Present (Assoc) loop\n          if Nkind (Assoc) = N_Iterated_Component_Association then\n@@ -2843,10 +2845,12 @@ package body Sem_Aggr is\n \n                else\n                   Analyze (Choice);\n+\n                   if Is_Entity_Name (Choice)\n                     and then Is_Type (Entity (Choice))\n                   then\n-                     --  Choice covers a range of values.\n+                     --  Choice covers a range of values\n+\n                      if Base_Type (Entity (Choice)) /=\n                         Base_Type (Index_Type)\n                      then\n@@ -2874,28 +2878,17 @@ package body Sem_Aggr is\n    ------------------------------------\n \n    procedure Resolve_Delta_Record_Aggregate (N   : Node_Id; Typ : Entity_Id) is\n-      Deltas : constant List_Id := Component_Associations (N);\n-      Assoc      : Node_Id;\n-      Choice     : Node_Id;\n-      Comp_Type  : Entity_Id;\n-\n-      --  Variables used to verify that discriminant-dependent components\n-      --  appear in the same variant.\n-\n-      Variant  : Node_Id;\n-      Comp_Ref : Entity_Id;\n-\n       procedure Check_Variant (Id : Entity_Id);\n       --  If a given component of the delta aggregate appears in a variant\n       --  part, verify that it is within the same variant as that of previous\n       --  specified variant components of the delta.\n \n-      function Nested_In (V1, V2 : Node_Id) return Boolean;\n-      --  Determine whether variant V1 is within variant V2.\n-\n       function Get_Component_Type (Nam : Node_Id) return Entity_Id;\n-      --  Locate component with a given name and return its type. If none\n-      --  found report error.\n+      --  Locate component with a given name and return its type. If none found\n+      --  report error.\n+\n+      function Nested_In (V1 : Node_Id; V2 : Node_Id) return Boolean;\n+      --  Determine whether variant V1 is within variant V2\n \n       function Variant_Depth (N : Node_Id) return Integer;\n       --  Determine the distance of a variant to the enclosing type\n@@ -2907,13 +2900,17 @@ package body Sem_Aggr is\n \n       procedure Check_Variant (Id : Entity_Id) is\n          Comp         : Entity_Id;\n+         Comp_Ref     : Entity_Id;\n          Comp_Variant : Node_Id;\n+         Variant      : Node_Id;\n \n       begin\n          if not Has_Discriminants (Typ) then\n             return;\n          end if;\n \n+         Variant := Empty;\n+\n          Comp := First_Entity (Typ);\n          while Present (Comp) loop\n             exit when Chars (Comp) = Chars (Id);\n@@ -2937,9 +2934,9 @@ package body Sem_Aggr is\n                begin\n                   if D1 = D2\n                     or else\n-                     (D1 > D2 and then not Nested_In (Variant, Comp_Variant))\n+                      (D1 > D2 and then not Nested_In (Variant, Comp_Variant))\n                     or else\n-                     (D2 > D1 and then not Nested_In (Comp_Variant, Variant))\n+                      (D2 > D1 and then not Nested_In (Comp_Variant, Variant))\n                   then\n                      Error_Msg_Node_2 := Comp_Ref;\n                      Error_Msg_NE\n@@ -2955,18 +2952,45 @@ package body Sem_Aggr is\n          end if;\n       end Check_Variant;\n \n+      ------------------------\n+      -- Get_Component_Type --\n+      ------------------------\n+\n+      function Get_Component_Type (Nam : Node_Id) return Entity_Id is\n+         Comp : Entity_Id;\n+\n+      begin\n+         Comp := First_Entity (Typ);\n+         while Present (Comp) loop\n+            if Chars (Comp) = Chars (Nam) then\n+               if Ekind (Comp) = E_Discriminant then\n+                  Error_Msg_N (\"delta cannot apply to discriminant\", Nam);\n+               end if;\n+\n+               return Etype (Comp);\n+            end if;\n+\n+            Comp := Next_Entity (Comp);\n+         end loop;\n+\n+         Error_Msg_NE (\"type& has no component with this name\", Nam, Typ);\n+         return Any_Type;\n+      end Get_Component_Type;\n+\n       ---------------\n       -- Nested_In --\n       ---------------\n \n       function Nested_In (V1, V2 : Node_Id) return Boolean is\n          Par : Node_Id;\n+\n       begin\n          Par := Parent (V1);\n          while Nkind (Par) /= N_Full_Type_Declaration loop\n             if Par = V2 then\n                return True;\n             end if;\n+\n             Par := Parent (Par);\n          end loop;\n \n@@ -2980,53 +3004,35 @@ package body Sem_Aggr is\n       function Variant_Depth (N : Node_Id) return Integer is\n          Depth : Integer;\n          Par   : Node_Id;\n+\n       begin\n          Depth := 0;\n          Par   := Parent (N);\n          while Nkind (Par) /= N_Full_Type_Declaration loop\n             Depth := Depth + 1;\n-            Par := Parent (Par);\n+            Par   := Parent (Par);\n          end loop;\n \n          return Depth;\n       end Variant_Depth;\n \n-      ------------------------\n-      -- Get_Component_Type --\n-      ------------------------\n-\n-      function Get_Component_Type (Nam : Node_Id) return Entity_Id is\n-         Comp : Entity_Id;\n-\n-      begin\n-         Comp := First_Entity (Typ);\n-\n-         while Present (Comp) loop\n-            if Chars (Comp) = Chars (Nam) then\n-               if Ekind (Comp) = E_Discriminant then\n-                  Error_Msg_N (\"delta cannot apply to discriminant\", Nam);\n-               end if;\n-\n-               return Etype (Comp);\n-            end if;\n+      --  Local variables\n \n-            Comp := Next_Entity (Comp);\n-         end loop;\n+      Deltas : constant List_Id := Component_Associations (N);\n \n-         Error_Msg_NE (\"type& has no component with this name\", Nam, Typ);\n-         return Any_Type;\n-      end Get_Component_Type;\n+      Assoc     : Node_Id;\n+      Choice    : Node_Id;\n+      Comp_Type : Entity_Id;\n \n    --  Start of processing for Resolve_Delta_Record_Aggregate\n \n    begin\n-      Variant := Empty;\n       Assoc := First (Deltas);\n-\n       while Present (Assoc) loop\n          Choice := First (Choice_List (Assoc));\n          while Present (Choice) loop\n             Comp_Type := Get_Component_Type (Choice);\n+\n             if Comp_Type /= Any_Type then\n                Check_Variant (Choice);\n             end if;"}, {"sha": "904a8f0f74f3e71f21d5c5d06347890c458d9ad0", "filename": "gcc/ada/sem_ch2.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsem_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsem_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch2.adb?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -68,9 +68,7 @@ package body Sem_Ch2 is\n       --  this is the result of some kind of previous error generating a\n       --  junk identifier.\n \n-      if not Is_Valid_Name (Chars (N))\n-        and then Total_Errors_Detected /= 0\n-      then\n+      if not Is_Valid_Name (Chars (N)) and then Total_Errors_Detected /= 0 then\n          return;\n       else\n          Find_Direct_Name (N);"}, {"sha": "4532ac43ec5d2308dd4c1b628e9dcb98fb600308", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -412,27 +412,28 @@ package body Sem_Ch4 is\n    -- Analyze_Aggregate --\n    -----------------------\n \n-   --  Most of the analysis of Aggregates requires that the type be known,\n-   --  and is therefore put off until resolution of the context.\n-   --  Delta aggregates have a base component that determines the type of the\n-   --  enclosing aggregate so its type can be ascertained earlier. This also\n-   --  allows delta aggregates to appear in the context of a record type with\n-   --  a private extension, as per the latest update of AI12-0127.\n+   --  Most of the analysis of Aggregates requires that the type be known, and\n+   --  is therefore put off until resolution of the context. Delta aggregates\n+   --  have a base component that determines the enclosing aggregate type so\n+   --  its type can be ascertained earlier. This also allows delta aggregates\n+   --  to appear in the context of a record type with a private extension, as\n+   --  per the latest update of AI12-0127.\n \n    procedure Analyze_Aggregate (N : Node_Id) is\n    begin\n       if No (Etype (N)) then\n          if Nkind (N) = N_Delta_Aggregate then\n             declare\n                Base : constant Node_Id := Expression (N);\n+\n                I  : Interp_Index;\n                It : Interp;\n \n             begin\n                Analyze (Base);\n \n-               --  If the base is overloaded, propagate interpretations\n-               --  to the enclosing aggregate.\n+               --  If the base is overloaded, propagate interpretations to the\n+               --  enclosing aggregate.\n \n                if Is_Overloaded (Base) then\n                   Get_First_Interp (Base, I, It);\n@@ -1533,12 +1534,15 @@ package body Sem_Ch4 is\n               and then Present (Limited_View (Scope (Etype (N))))\n               and then not Analyzed (Unit_Declaration_Node (Scope (Etype (N))))\n             then\n-               Error_Msg_NE (\"cannot call function that returns \"\n-                 & \"limited view of}\", N, Etype (N));\n                Error_Msg_NE\n-                 (\"\\there must be a regular with_clause for package& \"\n-                   & \"in the current unit, or in some unit in its context\",\n-                    N, Scope (Etype (N)));\n+                 (\"cannot call function that returns limited view of}\",\n+                  N, Etype (N));\n+\n+               Error_Msg_NE\n+                 (\"\\there must be a regular with_clause for package & in the \"\n+                  & \"current unit, or in some unit in its context\",\n+                  N, Scope (Etype (N)));\n+\n                Set_Etype (N, Any_Type);\n             end if;\n          end if;"}, {"sha": "57fb8e57af939aad8eb8a0a1deceed95012ab93f", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -191,6 +191,8 @@ package Sem_Prag is\n       Pragma_Remote_Types                  => False,\n       Pragma_Shared_Passive                => False,\n       Pragma_Task_Dispatching_Policy       => False,\n+      Pragma_Unmodified                    => False,\n+      Pragma_Unreferenced                  => False,\n       Pragma_Warnings                      => False,\n       others                               => True);\n "}, {"sha": "2626d3a67a5bee5ab3ca49781a95c4c055f83b31", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -2442,8 +2442,8 @@ package body Sem_Res is\n \n                elsif Nkind_In (N, N_Case_Expression,\n                                   N_Character_Literal,\n-                                  N_If_Expression,\n-                                  N_Delta_Aggregate)\n+                                  N_Delta_Aggregate,\n+                                  N_If_Expression)\n                then\n                   Set_Etype (N, Expr_Type);\n \n@@ -5197,11 +5197,11 @@ package body Sem_Res is\n             --  user about it here.\n \n             if Ekind (Typ) = E_Anonymous_Access_Type\n-               and then Is_Controlled_Active (Desig_T)\n+              and then Is_Controlled_Active (Desig_T)\n             then\n-               Error_Msg_N (\"??anonymous access-to-controlled object will \"\n-                            & \"be finalized when its enclosing unit goes out \"\n-                            & \"of scope\", N);\n+               Error_Msg_N\n+                 (\"??anonymous access-to-controlled object will be finalized \"\n+                  & \"when its enclosing unit goes out of scope\", N);\n             end if;\n          end if;\n       end if;\n@@ -7276,9 +7276,13 @@ package body Sem_Res is\n       elsif Ekind (E) = E_Generic_Function then\n          Error_Msg_N (\"illegal use of generic function\", N);\n \n-      --  In Ada 83 an OUT parameter cannot be read\n+      --  In Ada 83 an OUT parameter cannot be read, but attributes of\n+      --  array types (i.e. bounds and length) are legal.\n \n       elsif Ekind (E) = E_Out_Parameter\n+        and then (Nkind (Parent (N)) /= N_Attribute_Reference\n+                   or else Is_Scalar_Type (Etype (E)))\n+\n         and then (Nkind (Parent (N)) in N_Op\n                    or else Nkind (Parent (N)) = N_Explicit_Dereference\n                    or else Is_Assignment_Or_Object_Expression"}, {"sha": "f9f84ac416b0fbf316a6a3b9e303f591786c166a", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -38,7 +38,7 @@\n \n --  The tree contains not only the full syntactic representation of the\n --  program, but also the results of semantic analysis. In particular, the\n---  nodes for defining identifiers, defining character literals and defining\n+--  nodes for defining identifiers, defining character literals, and defining\n --  operator symbols, collectively referred to as entities, represent what\n --  would normally be regarded as the symbol table information. In addition a\n --  number of the tree nodes contain semantic information.\n@@ -213,7 +213,7 @@ package Sinfo is\n \n    --  The Present function tests for Empty, which in this case signals the end\n    --  of the list. First returns Empty immediately if the list is empty.\n-   --  Present is defined in Atree, First and Next are defined in Nlists.\n+   --  Present is defined in Atree; First and Next are defined in Nlists.\n \n    --  The exceptions to this rule occur with {DEFINING_IDENTIFIERS} in all\n    --  contexts, which is handled as described in the previous section, and\n@@ -389,7 +389,7 @@ package Sinfo is\n \n    --  In the following node definitions, all fields, both syntactic and\n    --  semantic, are documented. The one exception is in the case of entities\n-   --  (defining identifiers, character literals and operator symbols), where\n+   --  (defining identifiers, character literals, and operator symbols), where\n    --  the usage of the fields depends on the entity kind. Entity fields are\n    --  fully documented in the separate package Einfo.\n \n@@ -1116,7 +1116,7 @@ package Sinfo is\n    --    complete a subprogram declaration.\n \n    --  Corresponding_Spec_Of_Stub (Node2-Sem)\n-   --    This field is present in subprogram, package, task and protected body\n+   --    This field is present in subprogram, package, task, and protected body\n    --    stubs where it points to the corresponding spec of the stub. Due to\n    --    clashes in the structure of nodes, we cannot use Corresponding_Spec.\n \n@@ -1754,7 +1754,7 @@ package Sinfo is\n \n    --  Is_Generic_Contract_Pragma (Flag2-Sem)\n    --    This flag is present in N_Pragma nodes. It is set when the pragma is\n-   --    a source construct, applies to a generic unit or its body and denotes\n+   --    a source construct, applies to a generic unit or its body, and denotes\n    --    one of the following contract-related annotations:\n    --      Abstract_State\n    --      Contract_Cases\n@@ -1910,7 +1910,7 @@ package Sinfo is\n    --    nodes which emulate the body of a task unit.\n \n    --  Is_Task_Master (Flag5-Sem)\n-   --    A flag set in a Subprogram_Body, Block_Statement or Task_Body node to\n+   --    A flag set in a Subprogram_Body, Block_Statement, or Task_Body node to\n    --    indicate that the construct is a task master (i.e. has declared tasks\n    --    or declares an access to a task type).\n \n@@ -2019,7 +2019,7 @@ package Sinfo is\n    --    calls to Freeze_Expression.\n \n    --  Next_Entity (Node2-Sem)\n-   --    Present in defining identifiers, defining character literals and\n+   --    Present in defining identifiers, defining character literals, and\n    --    defining operator symbols (i.e. in all entities). The entities of a\n    --    scope are chained, and this field is used as the forward pointer for\n    --    this list. See Einfo for further details.\n@@ -2236,7 +2236,7 @@ package Sinfo is\n    --    because Analyze wants to insert extra actions on this list.\n \n    --  Rounded_Result (Flag18-Sem)\n-   --    Present in N_Type_Conversion, N_Op_Divide and N_Op_Multiply nodes.\n+   --    Present in N_Type_Conversion, N_Op_Divide, and N_Op_Multiply nodes.\n    --    Used in the fixed-point cases to indicate that the result must be\n    --    rounded as a result of the use of the 'Round attribute. Also used for\n    --    integer N_Op_Divide nodes to indicate that the result should be\n@@ -2269,7 +2269,7 @@ package Sinfo is\n    --    operation named (statically) in a dispatching call.\n \n    --  Scope (Node3-Sem)\n-   --    Present in defining identifiers, defining character literals and\n+   --    Present in defining identifiers, defining character literals, and\n    --    defining operator symbols (i.e. in all entities). The entities of a\n    --    scope all use this field to reference the corresponding scope entity.\n    --    See Einfo for further details.\n@@ -2341,7 +2341,7 @@ package Sinfo is\n    --    always set to No_List.\n \n    --  Treat_Fixed_As_Integer (Flag14-Sem)\n-   --    This flag appears in operator nodes for divide, multiply, mod and rem\n+   --    This flag appears in operator nodes for divide, multiply, mod, and rem\n    --    on fixed-point operands. It indicates that the operands are to be\n    --    treated as integer values, ignoring small values. This flag is only\n    --    set as a result of expansion of fixed-point operations. Typically a\n@@ -2731,7 +2731,7 @@ package Sinfo is\n       --  pain to allow these aspects to pervade the pragma syntax, and the\n       --  representation of pragma nodes internally. So what we do is to\n       --  replace these ASPECT_MARK forms with identifiers whose name is one\n-      --  of the special internal names _Pre, _Post or _Type_Invariant.\n+      --  of the special internal names _Pre, _Post, or _Type_Invariant.\n \n       --  We do a similar replacement of these Aspect_Mark forms in the\n       --  Expression of a pragma argument association for the cases of\n@@ -3028,8 +3028,8 @@ package Sinfo is\n       --    [abstract] [limited] new [NULL_EXCLUSION] parent_SUBTYPE_INDICATION\n       --    [[and INTERFACE_LIST] RECORD_EXTENSION_PART]\n \n-      --  Note: ABSTRACT, LIMITED and record extension part are not permitted\n-      --  in Ada 83 mode\n+      --  Note: ABSTRACT, LIMITED, and record extension part are not permitted\n+      --  in Ada 83 mode.\n \n       --  Note: a record extension part is required if ABSTRACT is present\n \n@@ -3340,7 +3340,7 @@ package Sinfo is\n       --  Subtype_Indication field or else the Access_Definition field.\n \n       --  N_Component_Definition\n-      --  Sloc points to ALIASED, ACCESS or to first token of subtype mark\n+      --  Sloc points to ALIASED, ACCESS, or to first token of subtype mark\n       --  Aliased_Present (Flag4)\n       --  Null_Exclusion_Present (Flag11)\n       --  Subtype_Indication (Node5) (set to Empty if not present)\n@@ -3488,7 +3488,7 @@ package Sinfo is\n       --    end record\n       --  | null record\n \n-      --  Note: the Abstract_Present, Tagged_Present and Limited_Present\n+      --  Note: the Abstract_Present, Tagged_Present, and Limited_Present\n       --  flags appear only for a record definition appearing in a record\n       --  type definition.\n \n@@ -4016,7 +4016,7 @@ package Sinfo is\n       --  Instead the Attribute_Name and Expressions fields of the parent\n       --  node (N_Attribute_Reference node) hold the information.\n \n-      --  Note: if ACCESS, DELTA or DIGITS appears in an attribute\n+      --  Note: if ACCESS, DELTA, or DIGITS appears in an attribute\n       --  designator, then they are treated as identifiers internally\n       --  rather than the keywords of the same name.\n \n@@ -7910,7 +7910,7 @@ package Sinfo is\n       --  to aspects/pragmas Contract_Cases and Test_Case. The ordering in the\n       --  list is in LIFO fashion.\n \n-      --  Classifications contains pragmas that either declare, categorize or\n+      --  Classifications contains pragmas that either declare, categorize, or\n       --  establish dependencies between subprogram or package inputs and\n       --  outputs. Currently the following pragmas appear in this list:\n       --    Abstract_States\n@@ -13067,7 +13067,7 @@ package Sinfo is\n         4 => False,   --  unused\n         5 => False),  --  unused\n \n-   --  Entries for Empty, Error and Unused. Even thought these have a Chars\n+   --  Entries for Empty, Error, and Unused. Even though these have a Chars\n    --  field for debugging purposes, they are not really syntactic fields, so\n    --  we mark all fields as unused.\n "}, {"sha": "78116ef442f210f7401dd730a18b0e56a9226255", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -1,3 +1,11 @@\n+2017-11-09  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* gnat.dg/unreferenced.adb: New testcase.\n+\n+2017-11-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/out_param.adb: New testcase.\n+\n 2017-11-09  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* gnat.dg/elab3.adb, gnat.dg/elab3.ads, gnat.dg/elab3_pkg.adb,"}, {"sha": "14a2f94ea2a2a05ecb1e1677819f6fcd687d0288", "filename": "gcc/testsuite/gnat.dg/out_param.adb", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Ftestsuite%2Fgnat.dg%2Fout_param.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Ftestsuite%2Fgnat.dg%2Fout_param.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fout_param.adb?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -0,0 +1,21 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnat83\" }\n+\n+procedure Out_Param\n+  (Source : in String; Dest : out String; Char_Count : out Natural) is\n+begin\n+    --| Logic_Step:\n+    --|   Copy string Source to string Dest\n+  Dest       := (others => ' ');\n+  Char_Count := 0;\n+  if Source'Length > 0 and then Dest'Length > 0 then\n+    if Source'Length > Dest'Length then\n+      Char_Count := Dest'Length;\n+    else\n+      Dest (Dest'First .. (Dest'First + Source'Length - 1)) := Source;\n+      Char_Count                                            := Source'Length;\n+    end if;\n+  else\n+    null;\n+  end if;\n+end Out_Param;"}, {"sha": "5b047c26a613da54442b0d041aece4196c399faf", "filename": "gcc/testsuite/gnat.dg/unreferenced.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Ftestsuite%2Fgnat.dg%2Funreferenced.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d63199d8e6e9fc18cbd48375d7d44c023104ddd4/gcc%2Ftestsuite%2Fgnat.dg%2Funreferenced.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funreferenced.adb?ref=d63199d8e6e9fc18cbd48375d7d44c023104ddd4", "patch": "@@ -0,0 +1,11 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatd.F\" }\n+\n+procedure Unreferenced is\n+   X : aliased Integer;\n+   Y : access  Integer := X'Access;\n+   Z : Integer renames Y.all;\n+   pragma Unreferenced (Z);\n+begin\n+   null;\n+end Unreferenced;"}]}