{"sha": "e01a49c11b529db0a092c9af935141730a9269ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAxYTQ5YzExYjUyOWRiMGEwOTJjOWFmOTM1MTQxNzMwYTkyNjllZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-10-03T16:48:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-10-03T16:48:18Z"}, "message": "semantics.c (constexpr_fn_retval): Ignore declarations in C++14.\n\n\t* semantics.c (constexpr_fn_retval): Ignore declarations in C++14.\n\t(var_in_constexpr_fn): New.\n\t(cxx_eval_constant_expression): Look into DECL_INITIAL.\n\t(potential_constant_expression_1): Allow constexpr-local vars.\n\nFrom-SVN: r215862", "tree": {"sha": "f9c5ac1661c6d266beda46347940f70f13f9f860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9c5ac1661c6d266beda46347940f70f13f9f860"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e01a49c11b529db0a092c9af935141730a9269ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01a49c11b529db0a092c9af935141730a9269ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e01a49c11b529db0a092c9af935141730a9269ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01a49c11b529db0a092c9af935141730a9269ed/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "742a072ad0e351dbe5b483002142c8215597d386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742a072ad0e351dbe5b483002142c8215597d386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/742a072ad0e351dbe5b483002142c8215597d386"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "56c3bdbd51b9fa2f9597412f68a5faa25622f487", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01a49c11b529db0a092c9af935141730a9269ed/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01a49c11b529db0a092c9af935141730a9269ed/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e01a49c11b529db0a092c9af935141730a9269ed", "patch": "@@ -1,5 +1,10 @@\n 2014-10-03  Jason Merrill  <jason@redhat.com>\n \n+\t* semantics.c (constexpr_fn_retval): Ignore declarations in C++14.\n+\t(var_in_constexpr_fn): New.\n+\t(cxx_eval_constant_expression): Look into DECL_INITIAL.\n+\t(potential_constant_expression_1): Allow constexpr-local vars.\n+\n \tPR c++/63362\n \t* tree.c (strip_typedefs): Handle TREE_LIST.\n "}, {"sha": "857af769f2b0b2521743eee3f45ab9fa5aba8c82", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01a49c11b529db0a092c9af935141730a9269ed/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01a49c11b529db0a092c9af935141730a9269ed/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=e01a49c11b529db0a092c9af935141730a9269ed", "patch": "@@ -5833,6 +5833,7 @@ extern tree maybe_constant_value (tree);\n extern tree maybe_constant_init (tree);\n extern bool is_sub_constant_expr (tree);\n extern bool reduced_constant_expression_p (tree);\n+extern bool var_in_constexpr_fn (tree);\n extern void explain_invalid_constexpr_fn (tree);\n extern vec<tree> cx_error_context (void);\n extern bool is_this_parameter (tree);"}, {"sha": "6c6a5c8821422f0de2165555571f567be3181f7a", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01a49c11b529db0a092c9af935141730a9269ed/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01a49c11b529db0a092c9af935141730a9269ed/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=e01a49c11b529db0a092c9af935141730a9269ed", "patch": "@@ -8018,6 +8018,8 @@ constexpr_fn_retval (tree body)\n     case DECL_EXPR:\n       if (TREE_CODE (DECL_EXPR_DECL (body)) == USING_DECL)\n \treturn NULL_TREE;\n+      if (cxx_dialect >= cxx14)\n+\treturn NULL_TREE;\n       return error_mark_node;\n \n     case CLEANUP_POINT_EXPR:\n@@ -9596,6 +9598,14 @@ cxx_eval_trinary_expression (const constexpr_call *call, tree t,\n   return val;\n }\n \n+bool\n+var_in_constexpr_fn (tree t)\n+{\n+  tree ctx = DECL_CONTEXT (t);\n+  return (cxx_dialect >= cxx14 && ctx && TREE_CODE (ctx) == FUNCTION_DECL\n+\t  && DECL_DECLARED_CONSTEXPR_P (ctx));\n+}\n+\n /* Attempt to reduce the expression T to a constant value.\n    On failure, issue diagnostic and return error_mark_node.  */\n /* FIXME unify with c_fully_fold */\n@@ -9635,6 +9645,11 @@ cxx_eval_constant_expression (const constexpr_call *call, tree t,\n       if (TREE_CODE (r) == TARGET_EXPR\n \t  && TREE_CODE (TARGET_EXPR_INITIAL (r)) == CONSTRUCTOR)\n \tr = TARGET_EXPR_INITIAL (r);\n+      if (DECL_P (r) && var_in_constexpr_fn (r)\n+\t  && DECL_INITIAL (r))\n+\tr = cxx_eval_constant_expression (call, DECL_INITIAL (r),\n+\t\t\t\t\t  allow_non_constant, false,\n+\t\t\t\t\t  non_constant_p, overflow_p);\n       if (DECL_P (r))\n \t{\n \t  if (!allow_non_constant)\n@@ -10320,6 +10335,7 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n \n     case VAR_DECL:\n       if (want_rval && !decl_constant_var_p (t)\n+\t  && !var_in_constexpr_fn (t)\n \t  && !dependent_type_p (TREE_TYPE (t)))\n         {\n           if (flags & tf_error)"}, {"sha": "39c3ee84de5127bc764bf2ecb3b305caeac2eda8", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-local1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01a49c11b529db0a092c9af935141730a9269ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-local1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01a49c11b529db0a092c9af935141730a9269ed/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-local1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-local1.C?ref=e01a49c11b529db0a092c9af935141730a9269ed", "patch": "@@ -0,0 +1,9 @@\n+// { dg-do compile { target c++14 } }\n+\n+constexpr int f(int i) { int j = i+1; return j; }\n+\n+constexpr int i = f(41);\n+\n+#define SA(X) static_assert((X),#X)\n+\n+SA(i==42);"}]}