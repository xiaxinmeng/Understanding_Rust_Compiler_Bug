{"sha": "aa11d1dd992874c1286d29343d499aa7c7855dd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWExMWQxZGQ5OTI4NzRjMTI4NmQyOTM0M2Q0OTlhYTdjNzg1NWRkNg==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-09-25T08:40:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-09-25T08:40:27Z"}, "message": "[multiple changes]\n\n2017-09-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Save_References_In_Aggregate): Small correction to\n\tprevious change.\n\n2017-09-25  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch5.adb, sem_ch4.adb, sem_ch13.adb, sem_attr.adb, exp_ch3.adb:\n\tMinor reformatting.\n\nFrom-SVN: r253135", "tree": {"sha": "78cc8f40853c9a8ee33ec4d80875b84d70a01ce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78cc8f40853c9a8ee33ec4d80875b84d70a01ce8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa11d1dd992874c1286d29343d499aa7c7855dd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa11d1dd992874c1286d29343d499aa7c7855dd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa11d1dd992874c1286d29343d499aa7c7855dd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa11d1dd992874c1286d29343d499aa7c7855dd6/comments", "author": null, "committer": null, "parents": [{"sha": "625f7ba6c350860033934c9a92a57b9377f76d44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625f7ba6c350860033934c9a92a57b9377f76d44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625f7ba6c350860033934c9a92a57b9377f76d44"}], "stats": {"total": 96, "additions": 59, "deletions": 37}, "files": [{"sha": "5f0b861027c14d54aa2584faf46639213bf62835", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=aa11d1dd992874c1286d29343d499aa7c7855dd6", "patch": "@@ -1,3 +1,13 @@\n+2017-09-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Save_References_In_Aggregate): Small correction to\n+\tprevious change.\n+\n+2017-09-25  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch5.adb, sem_ch4.adb, sem_ch13.adb, sem_attr.adb, exp_ch3.adb:\n+\tMinor reformatting.\n+\n 2017-09-20  Alexandre Oliva <aoliva@redhat.com>\n \n \t* gcc-interface/lang.opt (gant, gnatO, gnat): Add RejectNegative."}, {"sha": "33948bd14d69cd6a862291d944cf3669bcc859fa", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=aa11d1dd992874c1286d29343d499aa7c7855dd6", "patch": "@@ -516,11 +516,13 @@ package body Exp_Ch3 is\n    ---------------------------\n \n    procedure Build_Array_Init_Proc (A_Type : Entity_Id; Nod : Node_Id) is\n-      Comp_Type        : constant Entity_Id  := Component_Type (A_Type);\n-      Comp_Type_Simple : constant Boolean :=\n+      Comp_Type        : constant Entity_Id := Component_Type (A_Type);\n+      Comp_Type_Simple : constant Boolean   :=\n         Needs_Simple_Initialization\n-          (Comp_Type, Consider_IS =>\n+          (T           => Comp_Type,\n+           Consider_IS =>\n              not (Validity_Check_Copies and Is_Bit_Packed_Array (A_Type)));\n+\n       Body_Stmts       : List_Id;\n       Has_Default_Init : Boolean;\n       Index_List       : List_Id;\n@@ -1800,17 +1802,19 @@ package body Exp_Ch3 is\n \n          function Replace_Discr_Ref (N : Node_Id) return Traverse_Result is\n             Val : Node_Id;\n+\n          begin\n             if Is_Entity_Name (N)\n               and then Present (Entity (N))\n               and then Is_Formal (Entity (N))\n               and then Present (Discriminal_Link (Entity (N)))\n             then\n                Val :=\n-                  Make_Selected_Component (N_Loc,\n-                    Prefix => New_Copy_Tree (Lhs),\n-                    Selector_Name => New_Occurrence_Of\n-                      (Discriminal_Link (Entity (N)), N_Loc));\n+                 Make_Selected_Component (N_Loc,\n+                   Prefix        => New_Copy_Tree (Lhs),\n+                   Selector_Name =>\n+                     New_Occurrence_Of (Discriminal_Link (Entity (N)), N_Loc));\n+\n                if Present (Val) then\n                   Rewrite (N, New_Copy_Tree (Val));\n                end if;\n@@ -1822,6 +1826,8 @@ package body Exp_Ch3 is\n          procedure Replace_Discriminant_References is\n            new Traverse_Proc (Replace_Discr_Ref);\n \n+      --  Start of processing for Build_Assignment\n+\n       begin\n          Lhs :=\n            Make_Selected_Component (N_Loc,"}, {"sha": "c987038b95d7e17ca0132018af1bc40ab7a4698c", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=aa11d1dd992874c1286d29343d499aa7c7855dd6", "patch": "@@ -75,10 +75,11 @@ package body Exp_Ch5 is\n    --  of formal container iterators.\n \n    function Convert_To_Iterable_Type\n-     (Container : Entity_Id; Loc : Source_Ptr) return Node_Id;\n-   --  Returns New_Occurrence_Of (Container), possibly converted to an\n-   --  ancestor type, if the type of Container inherited the Iterable\n-   --  aspect_specification from that ancestor.\n+     (Container : Entity_Id;\n+      Loc       : Source_Ptr) return Node_Id;\n+   --  Returns New_Occurrence_Of (Container), possibly converted to an ancestor\n+   --  type, if the type of Container inherited the Iterable aspect from that\n+   --  ancestor.\n \n    function Change_Of_Representation (N : Node_Id) return Boolean;\n    --  Determine if the right-hand side of assignment N is a type conversion\n@@ -243,16 +244,21 @@ package body Exp_Ch5 is\n    ------------------------------\n \n    function Convert_To_Iterable_Type\n-     (Container : Entity_Id; Loc : Source_Ptr) return Node_Id\n+     (Container : Entity_Id;\n+      Loc       : Source_Ptr) return Node_Id\n    is\n-      Typ    : constant Entity_Id  := Base_Type (Etype (Container));\n-      Aspect : constant Node_Id := Find_Aspect (Typ, Aspect_Iterable);\n-      Result : Node_Id := New_Occurrence_Of (Container, Loc);\n+      Typ    : constant Entity_Id := Base_Type (Etype (Container));\n+      Aspect : constant Node_Id   := Find_Aspect (Typ, Aspect_Iterable);\n+      Result : Node_Id;\n+\n    begin\n+      Result := New_Occurrence_Of (Container, Loc);\n+\n       if Entity (Aspect) /= Typ then\n-         Result := Make_Type_Conversion (Loc,\n-                     Subtype_Mark => New_Occurrence_Of (Entity (Aspect), Loc),\n-                     Expression   => Result);\n+         Result :=\n+           Make_Type_Conversion (Loc,\n+             Subtype_Mark => New_Occurrence_Of (Entity (Aspect), Loc),\n+             Expression   => Result);\n       end if;\n \n       return Result;"}, {"sha": "0930e8f23cd0c17474ddf2d3b7606a8d96e10f77", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=aa11d1dd992874c1286d29343d499aa7c7855dd6", "patch": "@@ -11089,7 +11089,7 @@ package body Sem_Attr is\n                      and then Is_Overloadable (Entity (P)))\n               and then not (Nkind (P) = N_Selected_Component\n                              and then\n-                            Is_Overloadable (Entity (Selector_Name (P))))\n+                               Is_Overloadable (Entity (Selector_Name (P))))\n               and then not Is_Aliased_View (P)\n               and then not In_Instance\n               and then not In_Inlined_Body"}, {"sha": "9a87c0eb562ecf3fed559cbf518e7b9bb11e2a7d", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=aa11d1dd992874c1286d29343d499aa7c7855dd6", "patch": "@@ -15132,7 +15132,9 @@ package body Sem_Ch12 is\n                   Nam := Make_Identifier (Loc, Chars (Typ));\n \n                   if Is_Immediately_Visible (Scope (Typ))\n-                    and then Current_Entity (Scope (Typ)) = Scope (Typ)\n+                    and then\n+                      (not In_Open_Scopes (Scope (Typ))\n+                         or else Current_Entity (Scope (Typ)) = Scope (Typ))\n                   then\n                      Nam :=\n                        Make_Selected_Component (Loc,"}, {"sha": "58a3ed75d9e1663c2c743a7f13af2ac345206be9", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=aa11d1dd992874c1286d29343d499aa7c7855dd6", "patch": "@@ -5094,8 +5094,8 @@ package body Sem_Ch13 is\n                           or else Is_Array_Type (Etype (U_Ent)))\n                        and then (Is_Record_Type (Etype (O_Ent))\n                                   or else Is_Array_Type (Etype (O_Ent)))\n-                       and then Reverse_Storage_Order (Etype (U_Ent))\n-                                      /= Reverse_Storage_Order (Etype (O_Ent))\n+                       and then Reverse_Storage_Order (Etype (U_Ent)) /=\n+                                Reverse_Storage_Order (Etype (O_Ent))\n                      then\n                         Set_Treat_As_Volatile (U_Ent);\n                      end if;"}, {"sha": "28da82303caa3879c650a1df98b9caec4c0da1b6", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa11d1dd992874c1286d29343d499aa7c7855dd6/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=aa11d1dd992874c1286d29343d499aa7c7855dd6", "patch": "@@ -3931,16 +3931,14 @@ package body Sem_Ch4 is\n       Find_Type (Mark);\n       T := Entity (Mark);\n \n-      if Nkind_In\n-        (Enclosing_Declaration (N),\n-         N_Formal_Type_Declaration,\n-         N_Full_Type_Declaration,\n-         N_Incomplete_Type_Declaration,\n-         N_Protected_Type_Declaration,\n-         N_Private_Extension_Declaration,\n-         N_Private_Type_Declaration,\n-         N_Subtype_Declaration,\n-         N_Task_Type_Declaration)\n+      if Nkind_In (Enclosing_Declaration (N), N_Formal_Type_Declaration,\n+                                              N_Full_Type_Declaration,\n+                                              N_Incomplete_Type_Declaration,\n+                                              N_Protected_Type_Declaration,\n+                                              N_Private_Extension_Declaration,\n+                                              N_Private_Type_Declaration,\n+                                              N_Subtype_Declaration,\n+                                              N_Task_Type_Declaration)\n         and then T = Defining_Identifier (Enclosing_Declaration (N))\n       then\n          Error_Msg_N (\"current instance not allowed\", Mark);\n@@ -8562,11 +8560,11 @@ package body Sem_Ch4 is\n \n          elsif Is_Access_Type (Formal_Type)\n            and then not Is_Access_Type (Etype (Obj))\n-           and then (not Has_Implicit_Dereference (Etype (Obj))\n-             or else\n-               not Is_Access_Type\n-                     (Designated_Type\n-                        (Etype (Get_Reference_Discriminant (Etype (Obj))))))\n+           and then\n+             (not Has_Implicit_Dereference (Etype (Obj))\n+               or else\n+                 not Is_Access_Type (Designated_Type (Etype\n+                       (Get_Reference_Discriminant (Etype (Obj))))))\n          then\n             --  A special case: A.all'Access is illegal if A is an access to a\n             --  constant and the context requires an access to a variable."}]}