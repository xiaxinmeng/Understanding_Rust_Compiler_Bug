{"sha": "f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBmODhlYjZkYTZjZWJmODhlYzFiM2ZjMmQ3NWI2YjM1MGMxYmZiYQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-29T09:34:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T09:34:19Z"}, "message": "exp_ch9.adb, [...]: Minor reformatting.\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb, mlib-prj.adb, prj.adb, prj.ads, ttypes.ads, sem_ch4.adb,\n\tmakeutl.adb, makeutl.ads, atree.ads, snames.adb-tmpl,\n\tsnames.ads-tmpl: Minor reformatting.\n\nFrom-SVN: r178179", "tree": {"sha": "4ddce1f125b1a2af8c3d5dd0c7454f02fe1040a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ddce1f125b1a2af8c3d5dd0c7454f02fe1040a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/comments", "author": null, "committer": null, "parents": [{"sha": "3e37be71aa737869a2c02a8d041dd63d14d80025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e37be71aa737869a2c02a8d041dd63d14d80025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e37be71aa737869a2c02a8d041dd63d14d80025"}], "stats": {"total": 182, "additions": 103, "deletions": 79}, "files": [{"sha": "04df953f26aa2776839e07c1f95ade16176821ee", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -1,3 +1,9 @@\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch9.adb, mlib-prj.adb, prj.adb, prj.ads, ttypes.ads, sem_ch4.adb,\n+\tmakeutl.adb, makeutl.ads, atree.ads, snames.adb-tmpl,\n+\tsnames.ads-tmpl: Minor reformatting.\n+\n 2011-08-29  Philippe Gil  <gil@adacore.com>\n \n \t* prj.adb (Reset_Units_In_Table): New procedure."}, {"sha": "4e20b0b0f00b6ecff2cf38c2ab20bed69a3f1e6f", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -429,9 +429,6 @@ package Atree is\n    --  Source to be Empty, in which case Relocate_Node simply returns\n    --  Empty as the result.\n \n-   function Copy_Separate_List (Source : List_Id) return List_Id;\n-   --  Apply the following to a list of nodes\n-\n    function Copy_Separate_Tree (Source : Node_Id) return Node_Id;\n    --  Given a node that is the root of a subtree, Copy_Separate_Tree copies\n    --  the entire syntactic subtree, including recursively any descendants\n@@ -444,6 +441,10 @@ package Atree is\n    --  However, to ensure that no entities are shared between the two when the\n    --  source is already analyzed, entity fields in the copy are zeroed out.\n \n+   function Copy_Separate_List (Source : List_Id) return List_Id;\n+   --  Applies Copy_Separate_Tree to each element of the Source list, returning\n+   --  a new list of the results of these copy operations.\n+\n    procedure Exchange_Entities (E1 : Entity_Id; E2 : Entity_Id);\n    --  Exchange the contents of two entities. The parent pointers are switched\n    --  as well as the Defining_Identifier fields in the parents, so that the"}, {"sha": "fc6751a92e00fbef377c6619121b32e1a033210c", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -10990,11 +10990,11 @@ package body Exp_Ch9 is\n    --          end if;\n    --       end if;\n    --    end;\n-   --\n-   --  The triggering statement and the timed statements have not been\n-   --  analyzed yet (see Analyzed_Timed_Entry_Call).  They may contain local\n-   --  declarations, and therefore the copies that are made during expansion\n-   --  must be disjoint, as for any other inlining.\n+\n+   --  The triggering statement and the sequence of timed statements have not\n+   --  been analyzed yet (see Analyzed_Timed_Entry_Call). They may contain\n+   --  local declarations, and therefore the copies that are made during\n+   --  expansion must be disjoint, as for any other inlining.\n \n    procedure Expand_N_Timed_Entry_Call (N : Node_Id) is\n       Loc : constant Source_Ptr := Sloc (N);"}, {"sha": "4b6828041fb26efe114ee3606d11b1118c0db97d", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -3324,8 +3324,9 @@ package body Makeutl is\n    ---------------------\n \n    procedure Write_Path_File (FD : File_Descriptor) is\n-      Last : Natural;\n+      Last   : Natural;\n       Status : Boolean;\n+\n    begin\n       Name_Len := 0;\n \n@@ -3338,7 +3339,6 @@ package body Makeutl is\n \n       if Last = Name_Len then\n          Close (FD, Status);\n-\n       else\n          Status := False;\n       end if;"}, {"sha": "ceb38bdf39fe7887e96de63b1df25195c9a6dcb3", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -175,6 +175,7 @@ package Makeutl is\n    No_Names : constant Name_Ids := (1 .. 0 => No_Name);\n    --  Name_Ids is used for list of language names in procedure Get_Directories\n    --  below.\n+\n    Ada_Only : constant Name_Ids := (1 => Name_Ada);\n    --  Used to invoke Get_Directories in gnatmake\n "}, {"sha": "9020705d49b6567344c15d51030df9574c009594", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -1062,15 +1062,13 @@ package body MLib.Prj is\n \n                Write_Path_File (Path_FD);\n                Path_FD := Invalid_FD;\n-\n             end if;\n \n             if Current_Source_Path_File_Of (In_Tree.Shared) /=\n-              For_Project.Include_Path_File\n+                                                For_Project.Include_Path_File\n             then\n                Set_Current_Source_Path_File_Of\n-                 (In_Tree.Shared,\n-                 For_Project.Include_Path_File);\n+                 (In_Tree.Shared, For_Project.Include_Path_File);\n                Set_Path_File_Var\n                  (Project_Include_Path_File,\n                   Get_Name_String (For_Project.Include_Path_File));\n@@ -1086,15 +1084,15 @@ package body MLib.Prj is\n \n             declare\n                Path_File_Name : Path_Name_Type;\n+\n             begin\n                Create_New_Path_File (In_Tree.Shared, Path_FD, Path_File_Name);\n \n                Write_Path_File (Path_FD);\n                Path_FD := Invalid_FD;\n \n                Set_Path_File_Var\n-                 (Project_Objects_Path_File,\n-                  Get_Name_String (Path_File_Name));\n+                 (Project_Objects_Path_File, Get_Name_String (Path_File_Name));\n                Set_Current_Source_Path_File_Of\n                  (In_Tree.Shared, Path_File_Name);\n             end;\n@@ -1116,9 +1114,9 @@ package body MLib.Prj is\n                   Arguments (1 .. Argument_Number),\n                   Success);\n \n-            else\n-               --  Otherwise create a temporary response file\n+            --  Otherwise create a temporary response file\n \n+            else\n                declare\n                   FD            : File_Descriptor;\n                   Path          : Path_Name_Type;"}, {"sha": "fc65860aee27668711adace057123aa6dc0d99d9", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -72,8 +72,8 @@ package body Prj is\n    --  Free memory allocated for the list of languages or sources\n \n    procedure Reset_Units_In_Table (Table : in out Units_Htable.Instance);\n-   --  reset to No_Unit_Index Unit.File_Names (Spec).Unit &\n-   --  Unit.File_Names (Impl).Unit for all Unis of the Table\n+   --  Resets all Units to No_Unit_Index Unit.File_Names (Spec).Unit &\n+   --  Unit.File_Names (Impl).Unit in the given table.\n \n    procedure Free_Units (Table : in out Units_Htable.Instance);\n    --  Free memory allocated for unit information in the project\n@@ -123,8 +123,8 @@ package body Prj is\n    ---------------------------------\n \n    function Current_Object_Path_File_Of\n-     (Shared : Shared_Project_Tree_Data_Access)\n-      return Path_Name_Type is\n+     (Shared : Shared_Project_Tree_Data_Access) return Path_Name_Type\n+   is\n    begin\n       return Shared.Private_Part.Current_Object_Path_File;\n    end Current_Object_Path_File_Of;\n@@ -965,7 +965,6 @@ package body Prj is\n \n          Unit := Units_Htable.Get_Next (Table);\n       end loop;\n-\n    end Reset_Units_In_Table;\n \n    ----------------\n@@ -982,7 +981,7 @@ package body Prj is\n       Unit := Units_Htable.Get_First (Table);\n       while Unit /= No_Unit_Index loop\n \n-         --  we cannot reset Unit.File_Names (Impl or Spec).Unit here as\n+         --  We cannot reset Unit.File_Names (Impl or Spec).Unit here as\n          --  Source_Data buffer is freed by the following instruction\n          --  Free_List (Tree.Projects, Free_Project => True);\n "}, {"sha": "aa953b359318a9c7c7fe4ced981dab6dfac27277", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -1599,8 +1599,7 @@ package Prj is\n    --  Call Setenv, after calling To_Host_File_Spec\n \n    function Current_Source_Path_File_Of\n-     (Shared : Shared_Project_Tree_Data_Access)\n-      return Path_Name_Type;\n+     (Shared : Shared_Project_Tree_Data_Access) return Path_Name_Type;\n    --  Get the current include path file name\n \n    procedure Set_Current_Source_Path_File_Of\n@@ -1609,8 +1608,7 @@ package Prj is\n    --  Record the current include path file name\n \n    function Current_Object_Path_File_Of\n-     (Shared : Shared_Project_Tree_Data_Access)\n-      return Path_Name_Type;\n+     (Shared : Shared_Project_Tree_Data_Access) return Path_Name_Type;\n    --  Get the current object path file name\n \n    procedure Set_Current_Object_Path_File_Of\n@@ -1699,7 +1697,7 @@ package Prj is\n    --  resolved will simply be ignored. However, in such a case, the flag\n    --  Incomplete_With in the project tree will be set to True.\n    --  This is meant for use by tools so that they can properly set the\n-   --  project path in such a case:Shared_\n+   --  project path in such a case:\n    --       * no \"gnatls\" found (so no default project path)\n    --       * user project sets Project.IDE'gnatls attribute to a cross gnatls\n    --       * user project also includes a \"with\" that can only be resolved"}, {"sha": "3696bbb9bc81769dcc7c2aa639799f9e83aa428c", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -446,20 +446,23 @@ package body Sem_Ch4 is\n       --  Ada 2012 (AI05-0111-3): Analyze the subpool_specification, if\n       --  any. The expected type for the name is any type. A non-overloading\n       --  rule then requires it to be of a type descended from\n-      --  System.Storage_Pools.Subpools.Subpool_Handle. This isn't exactly what\n-      --  the AI says, but I think it's the right rule. The AI should be fixed.\n+      --  System.Storage_Pools.Subpools.Subpool_Handle.\n+\n+      --  This isn't exactly what the AI says, but it seems to be the right\n+      --  rule. The AI should be fixed.???\n \n       declare\n          Subpool : constant Node_Id := Subpool_Handle_Name (N);\n+\n       begin\n          if Present (Subpool) then\n             Analyze (Subpool);\n+\n             if Is_Overloaded (Subpool) then\n                Error_Msg_N (\"ambiguous subpool handle\", Subpool);\n             end if;\n \n-            --  ???We need to check that Etype (Subpool) is descended from\n-            --  Subpool_Handle\n+            --  Check that Etype (Subpool) is descended from Subpool_Handle\n \n             Resolve (Subpool);\n          end if;\n@@ -473,7 +476,7 @@ package body Sem_Ch4 is\n          Find_Type (Subtype_Mark (E));\n \n          --  Analyze the qualified expression, and apply the name resolution\n-         --  rule given in  4.7 (3).\n+         --  rule given in  4.7(3).\n \n          Analyze (E);\n          Type_Id := Etype (E);"}, {"sha": "d6c385183b4ed8ea1199ce29e3815b94d1b42536", "filename": "gcc/ada/snames.adb-tmpl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fsnames.adb-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fsnames.adb-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb-tmpl?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -306,6 +306,9 @@ package body Snames is\n \n    function Is_Attribute_Name (N : Name_Id) return Boolean is\n    begin\n+      --  Don't consider Name_Elab_Subp_Body to be a valid attribute name\n+      --  unless we are working in CodePeer mode.\n+\n       return N in First_Attribute_Name .. Last_Attribute_Name\n         and then (CodePeer_Mode or else N /= Name_Elab_Subp_Body);\n    end Is_Attribute_Name;"}, {"sha": "53b4365277fc493195a8f4243858cc61c88f72c2", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -880,6 +880,9 @@ package Snames is\n \n    --  Remaining attributes are ones that return entities\n \n+   --  Note that Elab_Subp_Body is not considered to be a valid attribute\n+   --  name unless we are operating in CodePeer mode.\n+\n    First_Entity_Attribute_Name         : constant Name_Id := N + $;\n    Name_Elab_Body                      : constant Name_Id := N + $; -- GNAT\n    Name_Elab_Spec                      : constant Name_Id := N + $; -- GNAT\n@@ -1714,7 +1717,10 @@ package Snames is\n    --  Called to initialize the preset names in the names table\n \n    function Is_Attribute_Name (N : Name_Id) return Boolean;\n-   --  Test to see if the name N is the name of a recognized attribute\n+   --  Test to see if the name N is the name of a recognized attribute. Note\n+   --  that Name_Elab_Subp_Body returns False if not operating in CodePeer\n+   --  mode. This is the mechanism for considering this pragma illegal in\n+   --  normal GNAT programs.\n \n    function Is_Entity_Attribute_Name (N : Name_Id) return Boolean;\n    --  Test to see if the name N is the name of a recognized entity attribute,"}, {"sha": "ef57187c6b2c090ebd3a2a79771acceb0aaf1734", "filename": "gcc/ada/ttypes.ads", "status": "modified", "additions": 53, "deletions": 44, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fttypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba/gcc%2Fada%2Fttypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fttypes.ads?ref=f0f88eb6da6cebf88ec1b3fc2d75b6b350c1bfba", "patch": "@@ -102,46 +102,55 @@ package Ttypes is\n    --  example, on some machines, Short_Float may be the same as Float, and\n    --  Long_Long_Float may be the same as Long_Float.\n \n-   Standard_Short_Short_Integer_Size   : constant Pos := Get_Char_Size;\n-   Standard_Short_Short_Integer_Width  : constant Pos :=\n-                           Width_From_Size (Standard_Short_Short_Integer_Size);\n-\n-   Standard_Short_Integer_Size         : constant Pos := Get_Short_Size;\n-   Standard_Short_Integer_Width        : constant Pos :=\n-                           Width_From_Size (Standard_Short_Integer_Size);\n-\n-   Standard_Integer_Size               : constant Pos := Get_Int_Size;\n-   Standard_Integer_Width              : constant Pos :=\n-                           Width_From_Size (Standard_Integer_Size);\n-\n-   Standard_Long_Integer_Size          : constant Pos := Get_Long_Size;\n-   Standard_Long_Integer_Width         : constant Pos :=\n-                           Width_From_Size (Standard_Long_Integer_Size);\n-\n-   Standard_Long_Long_Integer_Size     : constant Pos := Get_Long_Long_Size;\n-   Standard_Long_Long_Integer_Width    : constant Pos :=\n-                           Width_From_Size (Standard_Long_Long_Integer_Size);\n-\n-   Standard_Short_Float_Size           : constant Pos := Get_Float_Size;\n-   Standard_Short_Float_Digits         : constant Pos :=\n-                           Digits_From_Size (Standard_Short_Float_Size);\n-\n-   Standard_Float_Size                 : constant Pos := Get_Float_Size;\n-   Standard_Float_Digits               : constant Pos :=\n-                           Digits_From_Size (Standard_Float_Size);\n-\n-   Standard_Long_Float_Size            : constant Pos := Get_Double_Size;\n-   Standard_Long_Float_Digits          : constant Pos :=\n-                           Digits_From_Size (Standard_Long_Float_Size);\n-\n-   Standard_Long_Long_Float_Size       : constant Pos := Get_Long_Double_Size;\n-   Standard_Long_Long_Float_Digits     : constant Pos :=\n-                           Digits_From_Size (Standard_Long_Long_Float_Size);\n-\n-   Standard_Character_Size             : constant Pos := Get_Char_Size;\n-\n-   Standard_Wide_Character_Size        : constant Pos := 16;\n-   Standard_Wide_Wide_Character_Size   : constant Pos := 32;\n+   Standard_Short_Short_Integer_Size  : constant Pos := Get_Char_Size;\n+   Standard_Short_Short_Integer_Width : constant Pos :=\n+                                          Width_From_Size\n+                                           (Standard_Short_Short_Integer_Size);\n+\n+   Standard_Short_Integer_Size        : constant Pos := Get_Short_Size;\n+   Standard_Short_Integer_Width       : constant Pos :=\n+                                          Width_From_Size\n+                                            (Standard_Short_Integer_Size);\n+\n+   Standard_Integer_Size              : constant Pos := Get_Int_Size;\n+   Standard_Integer_Width             : constant Pos :=\n+                                          Width_From_Size\n+                                            (Standard_Integer_Size);\n+\n+   Standard_Long_Integer_Size         : constant Pos := Get_Long_Size;\n+   Standard_Long_Integer_Width        : constant Pos :=\n+                                          Width_From_Size\n+                                            (Standard_Long_Integer_Size);\n+\n+   Standard_Long_Long_Integer_Size    : constant Pos := Get_Long_Long_Size;\n+   Standard_Long_Long_Integer_Width   : constant Pos :=\n+                                          Width_From_Size\n+                                            (Standard_Long_Long_Integer_Size);\n+\n+   Standard_Short_Float_Size          : constant Pos := Get_Float_Size;\n+   Standard_Short_Float_Digits        : constant Pos :=\n+                                          Digits_From_Size\n+                                            (Standard_Short_Float_Size);\n+\n+   Standard_Float_Size                : constant Pos := Get_Float_Size;\n+   Standard_Float_Digits              : constant Pos :=\n+                                          Digits_From_Size\n+                                            (Standard_Float_Size);\n+\n+   Standard_Long_Float_Size           : constant Pos := Get_Double_Size;\n+   Standard_Long_Float_Digits         : constant Pos :=\n+                                          Digits_From_Size\n+                                            (Standard_Long_Float_Size);\n+\n+   Standard_Long_Long_Float_Size      : constant Pos := Get_Long_Double_Size;\n+   Standard_Long_Long_Float_Digits    : constant Pos :=\n+                                          Digits_From_Size\n+                                            (Standard_Long_Long_Float_Size);\n+\n+   Standard_Character_Size            : constant Pos := Get_Char_Size;\n+\n+   Standard_Wide_Character_Size       : constant Pos := 16;\n+   Standard_Wide_Wide_Character_Size  : constant Pos := 32;\n    --  Standard wide character sizes\n \n    --  Note: there is no specific control over the representation of\n@@ -185,12 +194,12 @@ package Ttypes is\n    ----------------------------------------\n \n    Maximum_Alignment : constant Pos := Get_Maximum_Alignment;\n-   --  The maximum alignment, in storage units, that an object or\n-   --  type may require on the target machine.\n+   --  The maximum alignment, in storage units, that an object or type may\n+   --  require on the target machine.\n \n    System_Allocator_Alignment : constant Pos :=\n-     Get_System_Allocator_Alignment;\n-   --  The alignment, in storage units, of addresses returned by malloc.\n+                                  Get_System_Allocator_Alignment;\n+   --  The alignment in storage units of addresses returned by malloc\n \n    Max_Unaligned_Field : constant Pos := Get_Max_Unaligned_Field;\n    --  The maximum supported size in bits for a field that is not aligned"}]}