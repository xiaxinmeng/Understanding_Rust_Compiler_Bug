{"sha": "3a6ebcdceed08428c1d47a1f30119bbab87cbd8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E2ZWJjZGNlZWQwODQyOGMxZDQ3YTFmMzAxMTliYmFiODdjYmQ4ZA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2005-08-29T13:52:32Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-08-29T13:52:32Z"}, "message": "re PR bootstrap/21268 (Bootstrap, configuration problem and insn-conditions.c)\n\n2005-08-18  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR bootstrap/21268\n\t* Makefile.in (ALL_CPPFLAGS): Include $(INCLUDES) at the\n\tbeginning.  Remove $(INCLUDES) from all the rules, if following\n\t$(ALL_CPPFLAGS) or $(BUILD_CPPFLAGS).\n\nFrom-SVN: r103601", "tree": {"sha": "fcf988648423659448f5fd29ea40e41e7257308e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcf988648423659448f5fd29ea40e41e7257308e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a6ebcdceed08428c1d47a1f30119bbab87cbd8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6ebcdceed08428c1d47a1f30119bbab87cbd8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a6ebcdceed08428c1d47a1f30119bbab87cbd8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6ebcdceed08428c1d47a1f30119bbab87cbd8d/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b654d8ce2a65816938222d4d2d09ba96b34cc593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b654d8ce2a65816938222d4d2d09ba96b34cc593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b654d8ce2a65816938222d4d2d09ba96b34cc593"}], "stats": {"total": 64, "additions": 36, "deletions": 28}, "files": [{"sha": "296a2cdf2997b15b06e7e7f9600c8e597a621cb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6ebcdceed08428c1d47a1f30119bbab87cbd8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6ebcdceed08428c1d47a1f30119bbab87cbd8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a6ebcdceed08428c1d47a1f30119bbab87cbd8d", "patch": "@@ -1,3 +1,10 @@\n+2005-08-18  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR bootstrap/21268\n+\t* Makefile.in (ALL_CPPFLAGS): Include $(INCLUDES) at the\n+\tbeginning.  Remove $(INCLUDES) from all the rules, if following\n+\t$(ALL_CPPFLAGS) or $(BUILD_CPPFLAGS).\n+\n 2005-08-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/23484"}, {"sha": "71cab535064e43486e71c6f28b548b488e73ab4a", "filename": "gcc/Makefile.in", "status": "modified", "additions": 29, "deletions": 28, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6ebcdceed08428c1d47a1f30119bbab87cbd8d/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6ebcdceed08428c1d47a1f30119bbab87cbd8d/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=3a6ebcdceed08428c1d47a1f30119bbab87cbd8d", "patch": "@@ -785,8 +785,10 @@ INTERNAL_CFLAGS = -DIN_GCC @CROSS@\n ALL_CFLAGS = $(X_CFLAGS) $(T_CFLAGS) \\\n   $(CFLAGS) $(INTERNAL_CFLAGS) $(COVERAGE_FLAGS) $(WARN_CFLAGS) $(XCFLAGS) @DEFS@\n \n-# Likewise.\n-ALL_CPPFLAGS = $(CPPFLAGS) $(X_CPPFLAGS) $(T_CPPFLAGS)\n+# Likewise.  Put INCLUDES at the beginning: this way, if some autoconf macro\n+# puts -I options in CPPFLAGS, our include files in the srcdir will always\n+# win against random include files in /usr/include.\n+ALL_CPPFLAGS = $(INCLUDES) $(CPPFLAGS) $(X_CPPFLAGS) $(T_CPPFLAGS)\n \n # Build and host support libraries.\n LIBIBERTY = ../libiberty/libiberty.a\n@@ -834,7 +836,7 @@ INCLUDES = -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n \t   $(CPPINC) $(GMPINC)\n \n .c.o:\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $< $(OUTPUT_OPTION)\n \n #\f\n # Support for additional languages (other than C).\n@@ -1518,7 +1520,7 @@ collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)\n \n collect2.o : collect2.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h \\\n \t$(OBSTACK_H) $(DEMANGLE_H) collect2.h version.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES)  \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS)  \\\n \t-DTARGET_MACHINE=\\\"$(target_noncanonical)\\\" \\\n \t-c $(srcdir)/collect2.c $(OUTPUT_OPTION)\n \n@@ -1543,7 +1545,7 @@ c-opts.o : c-opts.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H)\t\t\\\n         $(TREE_H) $(C_PRAGMA_H) $(FLAGS_H) toplev.h langhooks.h\t\t\\\n         tree-inline.h $(DIAGNOSTIC_H) intl.h debug.h $(C_COMMON_H)\t\\\n         opts.h options.h $(MKDEPS_H) c-incpath.h cppdefault.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t\t$< $(OUTPUT_OPTION) @TARGET_SYSTEM_ROOT_DEFINE@\n \n c-cppbuiltin.o : c-cppbuiltin.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -1571,7 +1573,7 @@ c-dump.o : c-dump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n c-pch.o : c-pch.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(CPPLIB_H) $(TREE_H) \\\n \t$(C_COMMON_H) output.h toplev.h $(C_PRAGMA_H) $(GGC_H) debug.h \\\n \tlanghooks.h $(FLAGS_H) hosthooks.h version.h $(TARGET_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DHOST_MACHINE=\\\"$(host)\\\" -DTARGET_MACHINE=\\\"$(target)\\\" \\\n \t  $< $(OUTPUT_OPTION)\n \n@@ -1595,14 +1597,14 @@ gcc.o: gcc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h multilib.h \\\n     configargs.h $(OBSTACK_H)\n \t(SHLIB_LINK='$(SHLIB_LINK)' \\\n \tSHLIB_MULTILIB='$(SHLIB_MULTILIB)'; \\\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n   $(DRIVER_DEFINES) \\\n   -c $(srcdir)/gcc.c $(OUTPUT_OPTION))\n \n gccspec.o: gccspec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H)\n \t(SHLIB_LINK='$(SHLIB_LINK)' \\\n \tSHLIB_MULTILIB='$(SHLIB_MULTILIB)'; \\\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n   $(DRIVER_DEFINES) \\\n   -c $(srcdir)/gccspec.c $(OUTPUT_OPTION))\n \n@@ -1667,7 +1669,7 @@ options.o: options.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) opts.h intl.h\n dumpvers: dumpvers.c\n \n version.o: version.c version.h $(DATESTAMP) $(BASEVER) $(DEVPHASE)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t-DBASEVER=$(BASEVER_s) -DDATESTAMP=$(DATESTAMP_s) \\\n \t-DDEVPHASE=$(DEVPHASE_s) -c $(srcdir)/version.c $(OUTPUT_OPTION)\n \n@@ -1695,7 +1697,7 @@ stringpool.o: stringpool.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \n prefix.o: prefix.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) prefix.h \\\n \tMakefile $(BASEVER)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t-DPREFIX=\\\"$(prefix)\\\" -DBASEVER=$(BASEVER_s) \\\n \t  -c $(srcdir)/prefix.c $(OUTPUT_OPTION)\n \n@@ -2016,7 +2018,7 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    langhooks.h insn-flags.h $(CFGLAYOUT_H) real.h $(CFGLOOP_H) hosthooks.h \\\n    $(CGRAPH_H) $(COVERAGE_H) alloc-pool.h $(GGC_H) $(INTEGRATE_H) \\\n    $(CPPLIB_H) opts.h params.def tree-mudflap.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n \t  -c $(srcdir)/toplev.c $(OUTPUT_OPTION)\n \n@@ -2480,7 +2482,7 @@ $(out_object_file): $(out_file) $(CONFIG_H) coretypes.h $(TM_H) $(TREE_H) $(GGC_\n    output.h $(INSN_ATTR_H) $(SYSTEM_H) toplev.h $(TARGET_H) libfuncs.h \\\n    $(TARGET_DEF_H) function.h $(SCHED_INT_H) $(TM_P_H) $(EXPR_H) $(OPTABS_H) \\\n    langhooks.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t\t$(out_file) $(OUTPUT_OPTION)\n \n # Build auxiliary files that support ecoff format.\n@@ -2500,7 +2502,7 @@ mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h \\\n libbackend.o : $(OBJS-common:.o=.c) $(out_file) \\\n   insn-config.h insn-flags.h insn-codes.h insn-constants.h \\\n   insn-attr.h  $(DATESTAMP) $(BASEVER) $(DEVPHASE)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n \t  -DLOCALEDIR=\\\"$(localedir)\\\" \\\n \t  -c $(filter %.c,$^) -o $@  \\\n@@ -2586,7 +2588,7 @@ insn-emit.o : insn-emit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) $(EXPR_H) real.h output.h insn-config.h $(OPTABS_H) reload.h \\\n   $(RECOG_H) toplev.h function.h $(FLAGS_H) hard-reg-set.h $(RESOURCE_H) \\\n   $(TM_P_H) $(BASIC_BLOCK_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-emit.c \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) -c insn-emit.c \\\n \t  $(OUTPUT_OPTION)\n \n insn-emit.c: s-emit ; @true\n@@ -2598,7 +2600,7 @@ s-emit : $(MD_DEPS) build/genemit$(build_exeext)\n insn-recog.o : insn-recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) insn-config.h $(RECOG_H) real.h output.h $(FLAGS_H)  function.h \\\n   hard-reg-set.h $(RESOURCE_H) $(TM_P_H) toplev.h reload.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-recog.c \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) -c insn-recog.c \\\n \t  $(OUTPUT_OPTION)\n \n insn-recog.c: s-recog ; @true\n@@ -2609,7 +2611,7 @@ s-recog : $(MD_DEPS) build/genrecog$(build_exeext)\n \n insn-opinit.o : insn-opinit.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) insn-config.h $(FLAGS_H) $(RECOG_H) $(EXPR_H) $(OPTABS_H) reload.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-opinit.c \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) -c insn-opinit.c \\\n \t  $(OUTPUT_OPTION)\n \n insn-opinit.c: s-opinit ; @true\n@@ -2620,7 +2622,7 @@ s-opinit : $(MD_DEPS) build/genopinit$(build_exeext)\n \n insn-extract.o : insn-extract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) toplev.h insn-config.h $(RECOG_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-extract.c \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) -c insn-extract.c \\\n \t  $(OUTPUT_OPTION)\n \n insn-extract.c: s-extract ; @true\n@@ -2632,7 +2634,7 @@ s-extract : $(MD_DEPS) build/genextract$(build_exeext)\n insn-peep.o : insn-peep.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) $(REGS_H) output.h real.h insn-config.h $(RECOG_H) except.h \\\n   function.h $(TM_P_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-peep.c \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) -c insn-peep.c \\\n \t  $(OUTPUT_OPTION)\n \n insn-peep.c: s-peep ; @true\n@@ -2644,7 +2646,7 @@ s-peep : $(MD_DEPS) build/genpeep$(build_exeext)\n insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) $(REGS_H) real.h output.h $(INSN_ATTR_H) insn-config.h toplev.h \\\n   $(RECOG_H) $(TM_P_H) $(FLAGS_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-attrtab.c \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) -c insn-attrtab.c \\\n \t  $(OUTPUT_OPTION)\n \n insn-attr.h: s-attr ; @true\n@@ -2663,7 +2665,7 @@ insn-output.o : insn-output.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(RTL_H) $(GGC_H) $(REGS_H) real.h conditions.h hard-reg-set.h \\\n   insn-config.h $(INSN_ATTR_H) $(EXPR_H) output.h $(RECOG_H) function.h \\\n   toplev.h $(FLAGS_H) insn-codes.h $(TM_P_H) $(TARGET_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-output.c \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) -c insn-output.c \\\n \t  $(OUTPUT_OPTION)\n \n insn-output.c: s-output ; @true\n@@ -2831,8 +2833,7 @@ $(genprogs): %$(build_exeext): %.o  $(BUILD_RTL) $(BUILD_SUPPORT) \\\n \t\t$(BUILD_ERRORS) $(BUILD_LIBS)\n \n $(genobjs): %.o :  # dependencies provided by explicit rule later\n-\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) $(INCLUDES) \\\n-\t -o $@ $<\n+\t$(CC_FOR_BUILD) -c $(BUILD_CFLAGS) $(BUILD_CPPFLAGS) -o $@ $<\n \n build/read-rtl.o: read-rtl.c $(BCONFIG_H) $(SYSTEM_H) coretypes.h $(GTM_H) \\\n   $(RTL_BASE_H) $(OBSTACK_H) $(HASHTAB_H)\n@@ -2971,7 +2972,7 @@ build/varray.o: varray.c $(BCONFIG_H) coretypes.h $(GTM_H) $(SYSTEM_H) \\\n #\f\n # Remake internationalization support.\n intl.o: intl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h Makefile\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t  -DLOCALEDIR=\\\"$(localedir)\\\" \\\n \t  -c $(srcdir)/intl.c $(OUTPUT_OPTION)\n \n@@ -2990,7 +2991,7 @@ PREPROCESSOR_DEFINES = \\\n \n cppdefault.o: cppdefault.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n \tcppdefault.h Makefile\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t  $(PREPROCESSOR_DEFINES) \\\n \t  -c $(srcdir)/cppdefault.c $(OUTPUT_OPTION)\n \n@@ -3011,15 +3012,15 @@ protoize.o: protoize.c $(srcdir)/../include/getopt.h $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TM_H) Makefile version.h cppdefault.h intl.h\n \t(SHLIB_LINK='$(SHLIB_LINK)' \\\n \tSHLIB_MULTILIB='$(SHLIB_MULTILIB)'; \\\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t  $(DRIVER_DEFINES) \\\n \t  $(srcdir)/protoize.c $(OUTPUT_OPTION))\n \n unprotoize.o: protoize.c $(srcdir)/../include/getopt.h \\\n    $(CONFIG_H) $(SYSTEM_H) Makefile version.h\n \t(SHLIB_LINK='$(SHLIB_LINK)' \\\n \tSHLIB_MULTILIB='$(SHLIB_MULTILIB)'; \\\n-\t$(CC) -c -DUNPROTOIZE $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(CC) -c -DUNPROTOIZE $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t  $(DRIVER_DEFINES) \\\n \t  $(srcdir)/protoize.c $(OUTPUT_OPTION))\n \n@@ -3029,7 +3030,7 @@ SYSCALLS.c.X: $(srcdir)/sys-types.h $(srcdir)/sys-protos.h $(GCC_PASSES) \\\n \t-rm -f SYSCALLS.c tmp-SYSCALLS.s\n \tsed -e s/TARGET_GETGROUPS_T/$(TARGET_GETGROUPS_T)/ \\\n \t  $(srcdir)/sys-types.h $(srcdir)/sys-protos.h > SYSCALLS.c\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) \\\n \t  -aux-info $@ -S -o tmp-SYSCALLS.s SYSCALLS.c\n \t-rm -f SYSCALLS.c tmp-SYSCALLS.s\n \n@@ -3962,7 +3963,7 @@ qmtest-gui: ${QMTEST_DIR}/context\n \n paranoia.o: $(srcdir)/../contrib/paranoia.cc $(CONFIG_H) $(SYSTEM_H) \\\n   real.h $(TREE_H)\n-\tg++ -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n+\tg++ -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $< $(OUTPUT_OPTION)\n \n paranoia: paranoia.o real.o $(LIBIBERTY)\n \tg++ -o $@ paranoia.o real.o $(LIBIBERTY)"}]}