{"sha": "5cec9f5974ed8ab0788179b2afd48eb484f39acb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNlYzlmNTk3NGVkOGFiMDc4ODE3OWIyYWZkNDhlYjQ4NGYzOWFjYg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2009-07-10T05:03:01Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2009-07-10T05:03:01Z"}, "message": "targhooks.c (default_target_can_inline_p): Rename from default_target_option_can_inline_p.\n\n* targhooks.c (default_target_can_inline_p): Rename from\ndefault_target_option_can_inline_p.\n* targhooks.h (default_target_can_inline_p): Likewise.\n* target-def.h (TARGET_CAN_INLINE_P): Rename from\nTARGET_OPTION_CAN_INLINE_P.\n* config/i386/i386.c (TARGET_CAN_INLINE_P): Likewise.\n* config/mep/mep.c (TARGET_CAN_INLINE_P): Likewise.\n(mep_target_can_inline_p): Rename from\nmep_target_option_can_inline_p.\n\nFrom-SVN: r149457", "tree": {"sha": "1db025e7528a5c185abb6b07197d9a5fa9b3fae9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1db025e7528a5c185abb6b07197d9a5fa9b3fae9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cec9f5974ed8ab0788179b2afd48eb484f39acb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cec9f5974ed8ab0788179b2afd48eb484f39acb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cec9f5974ed8ab0788179b2afd48eb484f39acb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cec9f5974ed8ab0788179b2afd48eb484f39acb/comments", "author": null, "committer": null, "parents": [{"sha": "1d8e1d5d9f87473eb7cae2c3b4109beeb87ce3da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d8e1d5d9f87473eb7cae2c3b4109beeb87ce3da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d8e1d5d9f87473eb7cae2c3b4109beeb87ce3da"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "253b5dedf579e0f5128bd56bebed4c2ef32451c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cec9f5974ed8ab0788179b2afd48eb484f39acb", "patch": "@@ -1,5 +1,16 @@\n 2009-07-09  DJ Delorie  <dj@redhat.com>\n \n+\t* targhooks.c (default_target_can_inline_p): Rename from\n+\tdefault_target_option_can_inline_p.\n+\t* targhooks.h (default_target_can_inline_p): Likewise.\n+\t* target-def.h (TARGET_CAN_INLINE_P): Rename from\n+\tTARGET_OPTION_CAN_INLINE_P.\n+\t* config/i386/i386.c (TARGET_CAN_INLINE_P): Likewise.\n+\t* config/mep/mep.c (TARGET_CAN_INLINE_P): Likewise.\n+\t(mep_target_can_inline_p): Rename from\n+\tmep_target_option_can_inline_p.\n+\n+\tPR target/40626\n \t* config/mep/mep.h (FUNCTION_ARG_REGNO_P): Add coprocessor\n \tregisters used to pass vectors.\n "}, {"sha": "684403136cede08482ecebfeb1cff222b44bab8e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5cec9f5974ed8ab0788179b2afd48eb484f39acb", "patch": "@@ -30589,8 +30589,8 @@ ix86_enum_va_list (int idx, const char **pname, tree *ptree)\n #undef TARGET_OPTION_PRINT\n #define TARGET_OPTION_PRINT ix86_function_specific_print\n \n-#undef TARGET_OPTION_CAN_INLINE_P\n-#define TARGET_OPTION_CAN_INLINE_P ix86_can_inline_p\n+#undef TARGET_CAN_INLINE_P\n+#define TARGET_CAN_INLINE_P ix86_can_inline_p\n \n #undef TARGET_EXPAND_TO_RTL_HOOK\n #define TARGET_EXPAND_TO_RTL_HOOK ix86_maybe_switch_abi"}, {"sha": "59dbb8895cd8d668bfca225a4fda6a9a893c7bb7", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=5cec9f5974ed8ab0788179b2afd48eb484f39acb", "patch": "@@ -170,7 +170,7 @@ static tree mep_validate_interrupt (tree *, tree, tree, int, bool *);\n static tree mep_validate_io_cb (tree *, tree, tree, int, bool *);\n static tree mep_validate_vliw (tree *, tree, tree, int, bool *);\n static bool mep_function_attribute_inlinable_p (const_tree);\n-static bool mep_option_can_inline_p (tree, tree);\n+static bool mep_can_inline_p (tree, tree);\n static bool mep_lookup_pragma_disinterrupt (const char *);\n static int mep_multiple_address_regions (tree, bool);\n static int mep_attrlist_to_encoding (tree, tree);\n@@ -236,8 +236,8 @@ static tree mep_gimplify_va_arg_expr (tree, tree, tree *, tree *);\n #define TARGET_INSERT_ATTRIBUTES\tmep_insert_attributes\n #undef  TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P\n #define TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P\tmep_function_attribute_inlinable_p\n-#undef  TARGET_OPTION_CAN_INLINE_P\n-#define TARGET_OPTION_CAN_INLINE_P\t\tmep_option_can_inline_p\n+#undef  TARGET_CAN_INLINE_P\n+#define TARGET_CAN_INLINE_P\t\tmep_can_inline_p\n #undef  TARGET_SECTION_TYPE_FLAGS\n #define TARGET_SECTION_TYPE_FLAGS\tmep_section_type_flags\n #undef  TARGET_ASM_NAMED_SECTION\n@@ -4110,7 +4110,7 @@ mep_function_attribute_inlinable_p (const_tree callee)\n }\n \n static bool\n-mep_option_can_inline_p (tree caller, tree callee)\n+mep_can_inline_p (tree caller, tree callee)\n {\n   if (TREE_CODE (callee) == ADDR_EXPR)\n     callee = TREE_OPERAND (callee, 0);"}, {"sha": "54060f5395c0209497fc165e724ac83c505b9504", "filename": "gcc/target-def.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=5cec9f5974ed8ab0788179b2afd48eb484f39acb", "patch": "@@ -827,8 +827,8 @@\n #define TARGET_OPTION_PRAGMA_PARSE default_target_option_pragma_parse\n #endif\n \n-#ifndef TARGET_OPTION_CAN_INLINE_P\n-#define TARGET_OPTION_CAN_INLINE_P default_target_option_can_inline_p\n+#ifndef TARGET_CAN_INLINE_P\n+#define TARGET_CAN_INLINE_P default_target_can_inline_p\n #endif\n \n #define TARGET_OPTION_HOOKS\t\t\t\\\n@@ -838,7 +838,7 @@\n     TARGET_OPTION_RESTORE,\t\t\t\\\n     TARGET_OPTION_PRINT,\t\t\t\\\n     TARGET_OPTION_PRAGMA_PARSE,\t\t\t\\\n-    TARGET_OPTION_CAN_INLINE_P,\t\t\t\\\n+    TARGET_CAN_INLINE_P,\t\t\t\\\n   }\n \n /* The whole shebang.  */"}, {"sha": "7d5a09233c758b72599f7b1875bafa1468c6932e", "filename": "gcc/targhooks.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=5cec9f5974ed8ab0788179b2afd48eb484f39acb", "patch": "@@ -771,7 +771,7 @@ default_target_option_pragma_parse (tree ARG_UNUSED (args),\n }\n \n bool\n-default_target_option_can_inline_p (tree caller, tree callee)\n+default_target_can_inline_p (tree caller, tree callee)\n {\n   bool ret = false;\n   tree callee_opts = DECL_FUNCTION_SPECIFIC_TARGET (callee);"}, {"sha": "839f1c32360127f4d71ba4355a68bda8f6f2733b", "filename": "gcc/targhooks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cec9f5974ed8ab0788179b2afd48eb484f39acb/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=5cec9f5974ed8ab0788179b2afd48eb484f39acb", "patch": "@@ -107,5 +107,5 @@ extern tree default_emutls_var_init (tree, tree, tree);\n extern bool default_hard_regno_scratch_ok (unsigned int);\n extern bool default_target_option_valid_attribute_p (tree, tree, tree, int);\n extern bool default_target_option_pragma_parse (tree, tree);\n-extern bool default_target_option_can_inline_p (tree, tree);\n+extern bool default_target_can_inline_p (tree, tree);\n extern unsigned int default_case_values_threshold (void);"}]}