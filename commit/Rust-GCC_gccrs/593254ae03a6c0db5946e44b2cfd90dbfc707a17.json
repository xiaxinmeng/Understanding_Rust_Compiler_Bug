{"sha": "593254ae03a6c0db5946e44b2cfd90dbfc707a17", "node_id": "C_kwDOANBUbNoAKDU5MzI1NGFlMDNhNmMwZGI1OTQ2ZTQ0YjJjZmQ5MGRiZmM3MDdhMTc", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-10-26T20:44:23Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-10-26T20:44:23Z"}, "message": "analyzer: add sm-fd.dot\n\nAdd a .dot file to document the file descriptor state machine.\n\ngcc/analyzer/ChangeLog:\n\t* sm-fd.dot: New file.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "d57c698454a7cb8eb9e715c0b27099cbbac12f39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d57c698454a7cb8eb9e715c0b27099cbbac12f39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/593254ae03a6c0db5946e44b2cfd90dbfc707a17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/593254ae03a6c0db5946e44b2cfd90dbfc707a17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/593254ae03a6c0db5946e44b2cfd90dbfc707a17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/593254ae03a6c0db5946e44b2cfd90dbfc707a17/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7d28818179247685f3c101f9f2f16366f56309b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d28818179247685f3c101f9f2f16366f56309b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d28818179247685f3c101f9f2f16366f56309b"}], "stats": {"total": 109, "additions": 109, "deletions": 0}, "files": [{"sha": "175daae44ae9be55555b44b0996fb4e14fa71642", "filename": "gcc/analyzer/sm-fd.dot", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/593254ae03a6c0db5946e44b2cfd90dbfc707a17/gcc%2Fanalyzer%2Fsm-fd.dot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/593254ae03a6c0db5946e44b2cfd90dbfc707a17/gcc%2Fanalyzer%2Fsm-fd.dot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsm-fd.dot?ref=593254ae03a6c0db5946e44b2cfd90dbfc707a17", "patch": "@@ -0,0 +1,109 @@\n+/* An overview of the state machine from sm-fd.cc.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+   Contributed by David Malcolm <dmalcolm@redhat.com>.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+/* Keep this in-sync with sm-dot.cc  */\n+\n+digraph \"fd\" {\n+\n+  /* STATES. */\n+\n+  /* Start state.  */\n+  start;\n+\n+  /* States representing a file descriptor that hasn't yet been\n+    checked for validity after opening, for three different\n+    access modes.  */\n+  unchecked_read_write;\n+  unchecked_read_only;\n+  unchecked_write_only;\n+\n+  /* States for representing a file descriptor that is known to be valid (>=\n+    0), for three different access modes.  */\n+  valid_read_write;\n+  valid_read_only;\n+  valid_write_only;\n+\n+  /* State for a file descriptor that is known to be invalid (< 0). */\n+  invalid;\n+\n+  /* State for a file descriptor that has been closed.  */\n+  closed;\n+\n+  /* State for a file descriptor that we do not want to track anymore . */\n+  stop;\n+\n+  /* TRANSITIONS. */\n+\n+  /* On \"open\".  */\n+  start -> unchecked_read_only [label=\"on 'X = open(..., O_RDONLY);'\"];\n+  start -> unchecked_write_only [label=\"on 'X = open(..., O_WRONLY);'\"];\n+  start -> unchecked_read_write [label=\"on 'X = open(..., ...);'\"];\n+\n+  /* On \"creat\".  */\n+  start -> unchecked_write_only [label=\"on 'X = create(...);'\"];\n+\n+  /* On \"close\".  */\n+  start -> closed [label=\"on 'close(X);'\"];\n+  unchecked_read_write -> closed [label=\"on 'close(X);'\"];\n+  unchecked_read_only -> closed [label=\"on 'close(X);'\"];\n+  unchecked_write_only -> closed [label=\"on 'close(X);'\"];\n+  valid_read_write -> closed [label=\"on 'close(X);'\"];\n+  valid_read_only -> closed [label=\"on 'close(X);'\"];\n+  valid_write_only -> closed [label=\"on 'close(X);'\"];\n+  constant_fd -> closed [label=\"on 'close(X);'\"];\n+  closed -> stop [label=\"on 'close(X);':\\nWarn('double close')\"];\n+\n+  /* On \"read\".  */\n+  closed -> closed [label=\"on 'read(X);':\\nWarn('use after close')\"];\n+  unchecked_read_write -> unchecked_read_write [label=\"on 'read(X);:\\nWarn('use without check')'\"];\n+  unchecked_read_only -> unchecked_read_only [label=\"on 'read(X);:\\nWarn('use without check')'\"];\n+  unchecked_write_only -> unchecked_write_only [label=\"on 'read(X);:\\nWarn('use without check')'\"];\n+  valid_write_only -> valid_write_only [label=\"on 'read(X);:\\nWarn('access mode mismatch')'\"];\n+\n+  /* On \"write\".  */\n+  closed -> closed [label=\"on 'write(X);':\\nWarn('use after close')\"];\n+  unchecked_read_write -> unchecked_read_write [label=\"on 'write(X);:\\nWarn('use without check')'\"];\n+  unchecked_read_only -> unchecked_read_only [label=\"on 'write(X);:\\nWarn('use without check')'\"];\n+  unchecked_write_only -> unchecked_write_only [label=\"on 'write(X);:\\nWarn('use without check')'\"];\n+  valid_read_only -> valid_read_only [label=\"on 'write(X);:\\nWarn('access mode mismatch')'\"];\n+\n+  /* On \"dup\".  */\n+  closed -> closed [label=\"on 'dup(X);':\\nWarn('use after close')\"];\n+  /* plus stuff for the new fd.  */\n+\n+  /* On \"pipe\".  */\n+  start -> valid_read_write [label=\"when 'pipe()' succeeds\"];\n+\n+  /* on_condition.  */\n+  unchecked_read_write -> valid_read_write [label=\"on 'X >= 0'\"];\n+  unchecked_read_only -> valid_read_only [label=\"on 'X >= 0'\"];\n+  unchecked_write_only -> valid_write_only [label=\"on 'X >= 0'\"];\n+  unchecked_read_write -> invalid [label=\"on 'X < 0'\"];\n+  unchecked_read_only -> invalid [label=\"on 'X < 0'\"];\n+  unchecked_write_only -> invalid [label=\"on 'X < 0'\"];\n+\n+  /* Leaks.  */\n+  unchecked_read_write -> stop [label=\"on leak:\\nWarn('leak')\"];\n+  unchecked_read_only -> stop [label=\"on leak:\\nWarn('leak')\"];\n+  unchecked_write_only -> stop [label=\"on leak:\\nWarn('leak')\"];\n+  valid_read_write -> stop [label=\"on leak:\\nWarn('leak')\"];\n+  valid_read_only -> stop [label=\"on leak:\\nWarn('leak')\"];\n+  valid_write_only -> stop [label=\"on leak:\\nWarn('leak')\"];\n+}"}]}