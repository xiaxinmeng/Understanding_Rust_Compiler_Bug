{"sha": "ef1f2e1235b68a4484df6428c81224b34054f18f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYxZjJlMTIzNWI2OGE0NDg0ZGY2NDI4YzgxMjI0YjM0MDU0ZjE4Zg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-11-14T02:06:37Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-11-14T02:06:37Z"}, "message": "lib1funcs.asm (divmodsi4): Replace all the uses of er4 with er3.\n\n\t* config/h8300/lib1funcs.asm (divmodsi4): Replace all the uses\n\tof er4 with er3.  Adjust all callers.\n\nFrom-SVN: r73572", "tree": {"sha": "85a4357882d4d500e994738024e21cffada6d0fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85a4357882d4d500e994738024e21cffada6d0fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef1f2e1235b68a4484df6428c81224b34054f18f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef1f2e1235b68a4484df6428c81224b34054f18f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef1f2e1235b68a4484df6428c81224b34054f18f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef1f2e1235b68a4484df6428c81224b34054f18f/comments", "author": null, "committer": null, "parents": [{"sha": "b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b86ca9a2dc1a1a359189d3ecf01c8757afa6e993"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "420ca4f9b666b2eadb4cb8e843d6fc57a99d669c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef1f2e1235b68a4484df6428c81224b34054f18f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef1f2e1235b68a4484df6428c81224b34054f18f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef1f2e1235b68a4484df6428c81224b34054f18f", "patch": "@@ -1,3 +1,8 @@\n+2003-11-13  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/lib1funcs.asm (divmodsi4): Replace all the uses\n+\tof er4 with er3.  Adjust all callers.\n+\n 2003-11-13  Andrew Pinski <apinski@apple.com>\n \n \t* config/darwin.c (machopic_output_possible_stub_label): "}, {"sha": "7316429529fde821ca2383060f8ad773fb9d5eb9", "filename": "gcc/config/h8300/lib1funcs.asm", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef1f2e1235b68a4484df6428c81224b34054f18f/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef1f2e1235b68a4484df6428c81224b34054f18f/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm?ref=ef1f2e1235b68a4484df6428c81224b34054f18f", "patch": "@@ -442,7 +442,7 @@ ___modsi3:\n \tmov\tS0,A0\n \tmov\tS1,A1\n #else\n-\tmov.l\tS0P,A0P\n+\tmov.l\ter3,er0\n #endif\n \tbra\texitdiv\n \n@@ -455,10 +455,7 @@ ___udivsi3:\n \tbsr\tdivmodsi4\n \tbra\treti\n #else\n-\t;; H8/300H and H8S version of divmodsi4 does not clobber S1P or S2P.\n-\tPUSHP\tS0P\n \tbsr\tdivmodsi4\n-\tPOPP\tS0P\n \trts\n #endif\n \n@@ -473,11 +470,8 @@ ___umodsi3:\n \tmov\tS1,A1\n \tbra\treti\n #else\n-\t;; H8/300H and H8S version of divmodsi4 does not clobber S1P or S2P.\n-\tPUSHP\tS0P\n \tbsr\tdivmodsi4\n-\tmov.l\tS0P,A0P\n-\tPOPP\tS0P\n+\tmov.l\ter3,er0\n \trts\n #endif\n \n@@ -608,17 +602,17 @@ divmodsi4:\n \tdivxu.w\tA1,A2P\n \tmov.w\tA2E,A0E\n \tdivxu.w\tA1,A0P\n-\tmov.w\tA0E,S0\n+\tmov.w\tA0E,A3\n \tmov.w\tA2,A0E\n-\textu.l\tS0P\n+\textu.l\tA3P\n \trts\n \n  \t; er0 = er0 / er1\n- \t; er4 = er0 % er1\n+ \t; er3 = er0 % er1\n  \t; trashes er1 er2\n  \t; expects er1 >= 2^16\n DenHighNonZero:\n-\tmov.l\ter0,er4\n+\tmov.l\ter0,er3\n \tmov.l\ter1,er2\n #ifdef __H8300H__\n divmod_L21:\n@@ -647,22 +641,22 @@ divmod_L24:\n \t;;  er0 contains shifted dividend\n \t;;  er1 contains divisor\n \t;;  er2 contains shifted divisor\n-\t;;  er4 contains dividend, later remainder\n+\t;;  er3 contains dividend, later remainder\n \tdivxu.w\tr2,er0\t\t; r0 now contains the approximate quotient (AQ)\n \textu.l\ter0\n \tbeq\tdivmod_L25\n \tsubs\t#1,er0\t\t; er0 = AQ - 1\n \tmov.w\te1,r2\n \tmulxu.w\tr0,er2\t\t; er2 = upper (AQ - 1) * divisor\n-\tsub.w\tr2,e4\t\t; dividend - 65536 * er2\n+\tsub.w\tr2,e3\t\t; dividend - 65536 * er2\n \tmov.w\tr1,r2\n-\tmulxu.w\tr0,er2\t\t; compute er4 = remainder (tentative)\n-\tsub.l\ter2,er4\t\t; er4 = dividend - (AQ - 1) * divisor\n+\tmulxu.w\tr0,er2\t\t; compute er3 = remainder (tentative)\n+\tsub.l\ter2,er3\t\t; er3 = dividend - (AQ - 1) * divisor\n divmod_L25:\n- \tcmp.l\ter1,er4\t\t; is divisor < remainder?\n+ \tcmp.l\ter1,er3\t\t; is divisor < remainder?\n \tblo\tdivmod_L26\n  \tadds\t#1,er0\n-\tsub.l\ter1,er4\t\t; correct the remainder\n+\tsub.l\ter1,er3\t\t; correct the remainder\n divmod_L26:\n \trts\n "}]}