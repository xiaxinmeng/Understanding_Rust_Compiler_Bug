{"sha": "4a035cf7eadf0bef3e972323e15d234d5ec4ded6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEwMzVjZjdlYWRmMGJlZjNlOTcyMzIzZTE1ZDIzNGQ1ZWM0ZGVkNg==", "commit": {"author": {"name": "Carlo Wood", "email": "carlo@alinoe.com", "date": "2003-10-02T14:29:26Z"}, "committer": {"name": "Carlo Wood", "email": "carlo@gcc.gnu.org", "date": "2003-10-02T14:29:26Z"}, "message": "demangle.h (demangle<Allocator>::symbol(char const*)): Decode symbols that start with _GLOBAL_[ID]_ differently...\n\n* include/bits/demangle.h (demangle<Allocator>::symbol(char const*)):\nDecode symbols that start with _GLOBAL_[ID]_ differently: the\ntrailing part ends with a terminating zero and is not necessarily an\nencoding.\n* src/demangle.cc (): Same.\n* testsuite/demangle/regression/cw-13.cc: Adjust for new output.\n\nFrom-SVN: r72027", "tree": {"sha": "ccaab9e68466ea77ca6dad097d61ff72be64ce38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccaab9e68466ea77ca6dad097d61ff72be64ce38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a035cf7eadf0bef3e972323e15d234d5ec4ded6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a035cf7eadf0bef3e972323e15d234d5ec4ded6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a035cf7eadf0bef3e972323e15d234d5ec4ded6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a035cf7eadf0bef3e972323e15d234d5ec4ded6/comments", "author": {"login": "CarloWood", "id": 590303, "node_id": "MDQ6VXNlcjU5MDMwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/590303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarloWood", "html_url": "https://github.com/CarloWood", "followers_url": "https://api.github.com/users/CarloWood/followers", "following_url": "https://api.github.com/users/CarloWood/following{/other_user}", "gists_url": "https://api.github.com/users/CarloWood/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarloWood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarloWood/subscriptions", "organizations_url": "https://api.github.com/users/CarloWood/orgs", "repos_url": "https://api.github.com/users/CarloWood/repos", "events_url": "https://api.github.com/users/CarloWood/events{/privacy}", "received_events_url": "https://api.github.com/users/CarloWood/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "28a6085042290266bb682a39cbef0a9c195d5838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a6085042290266bb682a39cbef0a9c195d5838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28a6085042290266bb682a39cbef0a9c195d5838"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "9abb29f0fd49ee70c20b0b2f2feba2a945629777", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a035cf7eadf0bef3e972323e15d234d5ec4ded6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a035cf7eadf0bef3e972323e15d234d5ec4ded6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4a035cf7eadf0bef3e972323e15d234d5ec4ded6", "patch": "@@ -1,3 +1,12 @@\n+2003-10-02  Carlo Wood  <carlo@alinoe.com>\n+\n+\t* include/bits/demangle.h (demangle<Allocator>::symbol(char const*)):\n+\tDecode symbols that start with _GLOBAL_[ID]_ differently: the\n+\ttrailing part ends with a terminating zero and is not necessarily an\n+\tencoding.\n+\t* src/demangle.cc (): Same.\n+\t* testsuite/demangle/regression/cw-13.cc: Adjust for new output.\n+\n 2003-10-02  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/22_locale/locale/cons/12438.cc: Use"}, {"sha": "e5481b332cd03395ca21abe5be64afbf06a605e5", "filename": "libstdc++-v3/include/bits/demangle.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a035cf7eadf0bef3e972323e15d234d5ec4ded6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a035cf7eadf0bef3e972323e15d234d5ec4ded6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdemangle.h?ref=4a035cf7eadf0bef3e972323e15d234d5ec4ded6", "patch": "@@ -2293,7 +2293,7 @@ namespace __gnu_cxx\n     demangle<Allocator>::symbol(char const* input)\n     {\n       // <mangled-name> ::= _Z <encoding>\n-      // <mangled-name> ::= _GLOBAL_ _<type>_ _Z <encoding>\t\t\n+      // <mangled-name> ::= _GLOBAL_ _<type>_ <disambiguation part>\n       //                    <type> can be I or D (GNU extension)\n       typedef demangler::session<Allocator> demangler_type;\n       string_type result;\n@@ -2305,16 +2305,14 @@ namespace __gnu_cxx\n \t{\n \t  if (!strncmp(input, \"_GLOBAL__\", 9)\n \t      && (input[9] == 'D' || input[9] == 'I')\n-\t      && input[10] == '_' && input[11] == '_' && input[12] == 'Z')\n+\t      && input[10] == '_')\n \t  {\n \t    if (input[9] == 'D')\n \t      result.assign(\"global destructors keyed to \", 28);\n \t    else\n \t      result.assign(\"global constructors keyed to \", 29);\n-\t    int cnt = demangler_type::decode_encoding(result, input + 13,\n-\t\t\t\t\t\t      INT_MAX);\n-\t    if (cnt < 0 || input[cnt + 13] != 0)\n-\t      failure = true;\n+\t    // Output the disambiguation part as-is.\n+\t    result += input + 11;\n \t  }\n \t  else\n \t    failure = true;"}, {"sha": "fc5672bb0ed70722644b45a6cae029d8d757e919", "filename": "libstdc++-v3/src/demangle.cc", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a035cf7eadf0bef3e972323e15d234d5ec4ded6/libstdc%2B%2B-v3%2Fsrc%2Fdemangle.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a035cf7eadf0bef3e972323e15d234d5ec4ded6/libstdc%2B%2B-v3%2Fsrc%2Fdemangle.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fdemangle.cc?ref=4a035cf7eadf0bef3e972323e15d234d5ec4ded6", "patch": "@@ -130,17 +130,14 @@ namespace __cxxabiv1\n \t// Possible _GLOBAL__ extension?\n \tif (!std::strncmp(mangled_name, \"_GLOBAL__\", 9) \n \t    && (mangled_name[9] == 'D' || mangled_name[9] == 'I')\n-\t    && mangled_name[10] == '_' && mangled_name[11] == '_' \n-\t    && mangled_name[12] == 'Z')\n+\t    && mangled_name[10] == '_')\n \t{\n \t  if (mangled_name[9] == 'D')\n \t    result.assign(\"global destructors keyed to \", 28);\n \t  else\n \t    result.assign(\"global constructors keyed to \", 29);\n-\t  int cnt = session_type::\n-\t      decode_encoding(result, mangled_name + 13, INT_MAX);\n-\t  if (cnt < 0 || mangled_name[cnt + 13] != 0)\n-\t    return failure(invalid_mangled_name, status);\n+\t  // Output the disambiguation part as-is.\n+\t  result += mangled_name + 11;\n \t  return finish(result.data(), result.size(), buf, n, status);\n \t}\n       }"}, {"sha": "606eb9c257d905c63e12a0d02af657dde7c53802", "filename": "libstdc++-v3/testsuite/demangle/regression/cw-13.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a035cf7eadf0bef3e972323e15d234d5ec4ded6/libstdc%2B%2B-v3%2Ftestsuite%2Fdemangle%2Fregression%2Fcw-13.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a035cf7eadf0bef3e972323e15d234d5ec4ded6/libstdc%2B%2B-v3%2Ftestsuite%2Fdemangle%2Fregression%2Fcw-13.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdemangle%2Fregression%2Fcw-13.cc?ref=4a035cf7eadf0bef3e972323e15d234d5ec4ded6", "patch": "@@ -28,7 +28,7 @@ int main()\n   using namespace __gnu_test;\n \n   // cplus-dem CORE\n-  verify_demangle(\"_GLOBAL__I__Z2fnv\", \"global constructors keyed to fn()\");\n+  verify_demangle(\"_GLOBAL__I__Z2fnv\", \"global constructors keyed to _Z2fnv\");\n \n   return 0;\n }"}]}