{"sha": "f2606a975aaf67a44b96d8fd18ff13763c834c3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI2MDZhOTc1YWFmNjdhNDRiOTZkOGZkMThmZjEzNzYzYzgzNGMzYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-03-18T00:00:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-03-18T00:00:14Z"}, "message": "re PR c++/4460 (g++ 3.0.1 seg faults instead of throwing in a complicated inheritance hierarchy)\n\n        PR c++/4460\n        * class.c (build_base_path): Virtual base layout is fixed in\n        in-charge [cd]tors.\n\nFrom-SVN: r50931", "tree": {"sha": "1f2093f83283f0979882609633a42e2af9c6f460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f2093f83283f0979882609633a42e2af9c6f460"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2606a975aaf67a44b96d8fd18ff13763c834c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2606a975aaf67a44b96d8fd18ff13763c834c3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2606a975aaf67a44b96d8fd18ff13763c834c3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2606a975aaf67a44b96d8fd18ff13763c834c3c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "94ea34195ba4f1db8cab2dbe935ec142a87e2d1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94ea34195ba4f1db8cab2dbe935ec142a87e2d1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94ea34195ba4f1db8cab2dbe935ec142a87e2d1f"}], "stats": {"total": 71, "additions": 63, "deletions": 8}, "files": [{"sha": "d27a93baa28364a6c42f63fc284e0e7dc2fddae0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2606a975aaf67a44b96d8fd18ff13763c834c3c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2606a975aaf67a44b96d8fd18ff13763c834c3c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f2606a975aaf67a44b96d8fd18ff13763c834c3c", "patch": "@@ -1,3 +1,9 @@\n+2002-03-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/4460\n+\t* class.c (build_base_path): Virtual base layout is fixed in\n+\tin-charge [cd]tors.\n+\n 2002-03-17  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cp-lang.c (LANG_HOOKS_PARSE_FILE): Redefine."}, {"sha": "8923916b17f4150cdc15573a156c34a201349440", "filename": "gcc/cp/class.c", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2606a975aaf67a44b96d8fd18ff13763c834c3c/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2606a975aaf67a44b96d8fd18ff13763c834c3c/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=f2606a975aaf67a44b96d8fd18ff13763c834c3c", "patch": "@@ -290,20 +290,17 @@ build_base_path (code, expr, binfo, nonnull)\n     }\n \n   fixed_type_p = resolves_to_fixed_type_p (expr, &nonnull);\n-  if (fixed_type_p < 0)\n-    /* Virtual base layout is not fixed, even in ctors and dtors. */\n-    fixed_type_p = 0;\n-  if (!fixed_type_p && TREE_SIDE_EFFECTS (expr))\n+  if (fixed_type_p <= 0 && TREE_SIDE_EFFECTS (expr))\n     expr = save_expr (expr);\n-    \n+\n   if (!want_pointer)\n     expr = build_unary_op (ADDR_EXPR, expr, 0);\n   else if (!nonnull)\n     null_test = build (EQ_EXPR, boolean_type_node, expr, integer_zero_node);\n   \n   offset = BINFO_OFFSET (binfo);\n   \n-  if (v_binfo && !fixed_type_p)\n+  if (v_binfo && fixed_type_p <= 0)\n     {\n       /* Going via virtual base V_BINFO.  We need the static offset\n          from V_BINFO to BINFO, and the dynamic offset from D_BINFO to\n@@ -324,7 +321,17 @@ build_base_path (code, expr, binfo, nonnull)\n \t\t\t   size_diffop (offset, BINFO_OFFSET (v_binfo)));\n \n       if (!integer_zerop (offset))\n-\toffset = build (code, ptrdiff_type_node, v_offset, offset);\n+\tv_offset = build (code, ptrdiff_type_node, v_offset, offset);\n+\n+      if (fixed_type_p < 0)\n+\t/* Negative fixed_type_p means this is a constructor or destructor;\n+\t   virtual base layout is fixed in in-charge [cd]tors, but not in\n+\t   base [cd]tors.  */\n+\toffset = build (COND_EXPR, ptrdiff_type_node,\n+\t\t\tbuild (EQ_EXPR, boolean_type_node,\n+\t\t\t       current_in_charge_parm, integer_zero_node),\n+\t\t\tv_offset,\n+\t\t\tBINFO_OFFSET (binfo));\n       else\n \toffset = v_offset;\n     }\n@@ -351,7 +358,7 @@ build_base_path (code, expr, binfo, nonnull)\n     expr = build (COND_EXPR, target_type, null_test,\n \t\t  build1 (NOP_EXPR, target_type, integer_zero_node),\n \t\t  expr);\n-  \n+\n   return expr;\n }\n "}, {"sha": "e2ebad7ce535d20b6ed11632184fb642a9586138", "filename": "gcc/testsuite/g++.dg/eh/ctor2.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2606a975aaf67a44b96d8fd18ff13763c834c3c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fctor2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2606a975aaf67a44b96d8fd18ff13763c834c3c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fctor2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fctor2.C?ref=f2606a975aaf67a44b96d8fd18ff13763c834c3c", "patch": "@@ -0,0 +1,42 @@\n+// PR c++/4460\n+// Test that the cleanup for fully-constructed subobjects when a\n+// constructor throws gets the right address for a virtual base.\n+\n+// { dg-do run }\n+\n+int r;\n+void *p;\n+\n+struct VBase\n+{\n+  virtual void f () {}\n+  VBase() { p = this; }\n+  ~VBase() { if (p != this) r = 1; }\n+};\n+\n+struct  StreamBase \n+{\n+  virtual ~StreamBase() {}\n+};\n+\n+struct  Stream : public virtual VBase, public StreamBase\n+{\n+  Stream() {}\n+  virtual ~Stream() {} \n+};\n+\n+struct DerivedStream : public Stream\n+{\n+  DerivedStream() { throw 1; }\n+};\n+\n+int main() {\n+\n+  try\n+    { \n+      DerivedStream str;\n+    }\n+  catch (...) { }\n+\n+  return r;\n+}"}]}