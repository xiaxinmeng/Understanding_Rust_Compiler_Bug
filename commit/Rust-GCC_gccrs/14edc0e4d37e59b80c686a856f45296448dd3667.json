{"sha": "14edc0e4d37e59b80c686a856f45296448dd3667", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRlZGMwZTRkMzdlNTliODBjNjg2YTg1NmY0NTI5NjQ0OGRkMzY2Nw==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-06-29T00:18:43Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-06-29T00:18:43Z"}, "message": "(cint8_operand): New predicate.\n\nFrom-SVN: r7591", "tree": {"sha": "3b4444509b4d390bb21f4036c13760e9253d8760", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b4444509b4d390bb21f4036c13760e9253d8760"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14edc0e4d37e59b80c686a856f45296448dd3667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14edc0e4d37e59b80c686a856f45296448dd3667", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14edc0e4d37e59b80c686a856f45296448dd3667", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14edc0e4d37e59b80c686a856f45296448dd3667/comments", "author": null, "committer": null, "parents": [{"sha": "8abf4d694f7b7f363ef384a5dbd86806c3d39a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8abf4d694f7b7f363ef384a5dbd86806c3d39a7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8abf4d694f7b7f363ef384a5dbd86806c3d39a7d"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "56b31348521c1db60731f83c0e50db09fe97a707", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14edc0e4d37e59b80c686a856f45296448dd3667/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14edc0e4d37e59b80c686a856f45296448dd3667/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=14edc0e4d37e59b80c686a856f45296448dd3667", "patch": "@@ -112,6 +112,17 @@ reg_or_8bit_operand (op, mode)\n \t  || register_operand (op, mode));\n }\n \n+/* Return 1 if OP is an 8-bit constant.  */\n+\n+int\n+cint8_operand (op, mode)\n+     register rtx op;\n+     enum machine_mode mode;\n+{\n+  return (GET_CODE (op) == CONST_INT\n+\t  && (unsigned HOST_WIDE_INT) INTVAL (op) < 0x100);\n+}\n+\n /* Return 1 if the operand is a valid second operand to an add insn.  */\n \n int"}]}