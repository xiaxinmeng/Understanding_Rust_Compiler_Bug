{"sha": "b3b6c9b3f3dab2f1ae27beeb9ebe5b732411c695", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNiNmM5YjNmM2RhYjJmMWFlMjdiZWViOWViZTViNzMyNDExYzY5NQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-09-24T19:54:09Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-09-24T19:54:09Z"}, "message": "rtlanal.c: (rtx_unstable_p): HARD_FRAME_POINTER_REGNUM is not an unstable register.\n\n* rtlanal.c: (rtx_unstable_p): HARD_FRAME_POINTER_REGNUM is not\nan unstable register.\n(rtx_varies_p, case REG): hard_frame_pointer_rtx is invariant.\n(rtx_addr_can_trap_p, case REG): hard_frame_pointer_rtx won't trap.\n\nFrom-SVN: r5465", "tree": {"sha": "89b9f096511906dc07d728540ee7a59a37f47d53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89b9f096511906dc07d728540ee7a59a37f47d53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3b6c9b3f3dab2f1ae27beeb9ebe5b732411c695", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b6c9b3f3dab2f1ae27beeb9ebe5b732411c695", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b6c9b3f3dab2f1ae27beeb9ebe5b732411c695", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b6c9b3f3dab2f1ae27beeb9ebe5b732411c695/comments", "author": null, "committer": null, "parents": [{"sha": "b07ff75d63e1bfb4560d2843554629c2eaf6ae19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07ff75d63e1bfb4560d2843554629c2eaf6ae19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b07ff75d63e1bfb4560d2843554629c2eaf6ae19"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "2ef3d43cfe64fcc7e3c64b0d6932148c25547320", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3b6c9b3f3dab2f1ae27beeb9ebe5b732411c695/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3b6c9b3f3dab2f1ae27beeb9ebe5b732411c695/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=b3b6c9b3f3dab2f1ae27beeb9ebe5b732411c695", "patch": "@@ -54,6 +54,7 @@ rtx_unstable_p (x)\n \n   if (code == REG)\n     return ! (REGNO (x) == FRAME_POINTER_REGNUM\n+\t      || REGNO (x) == HARD_FRAME_POINTER_REGNUM\n \t      || REGNO (x) == ARG_POINTER_REGNUM\n \t      || RTX_UNCHANGING_P (x));\n \n@@ -96,7 +97,8 @@ rtx_varies_p (x)\n \t and arg pointers and not just the register number in case we have\n \t eliminated the frame and/or arg pointer and are using it\n \t for pseudos.  */\n-      return ! (x == frame_pointer_rtx || x == arg_pointer_rtx);\n+      return ! (x == frame_pointer_rtx || x == hard_frame_pointer_rtx\n+\t\t|| x == arg_pointer_rtx);\n \n     case LO_SUM:\n       /* The operand 0 of a LO_SUM is considered constant\n@@ -132,8 +134,8 @@ rtx_addr_can_trap_p (x)\n \n     case REG:\n       /* As in rtx_varies_p, we have to use the actual rtx, not reg number.  */\n-      return ! (x == frame_pointer_rtx || x == stack_pointer_rtx\n-\t\t|| x == arg_pointer_rtx);\n+      return ! (x == frame_pointer_rtx || x == hard_frame_pointer_rtx\n+\t\t|| x == stack_pointer_rtx || x == arg_pointer_rtx);\n \n     case CONST:\n       return rtx_addr_can_trap_p (XEXP (x, 0));"}]}