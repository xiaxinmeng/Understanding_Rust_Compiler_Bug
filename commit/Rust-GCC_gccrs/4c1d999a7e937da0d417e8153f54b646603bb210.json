{"sha": "4c1d999a7e937da0d417e8153f54b646603bb210", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMxZDk5OWE3ZTkzN2RhMGQ0MTdlODE1M2Y1NGI2NDY2MDNiYjIxMA==", "commit": {"author": {"name": "Daniel Trebbien", "email": "dtrebbien@gmail.com", "date": "2018-06-14T09:26:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-14T09:26:51Z"}, "message": "PR libstdc++/83982 fix exception-safety guarantee of std::vector::resize\n\nConstruct new elements before moving existing ones, so that if a default\nconstructor throws, the existing elements are not left in a moved-from\nstate.\n\n2018-06-14  Daniel Trebbien <dtrebbien@gmail.com>\n\t    Jonathan Wakely  <jwakely@redhat.com>\n\n\tPR libstdc++/83982\n\t* include/bits/vector.tcc (vector::_M_default_append(size_type)):\n\tDefault-construct new elements before moving existing ones.\n\t* testsuite/23_containers/vector/capacity/resize/strong_guarantee.cc:\n\tNew.\n\nCo-Authored-By: Jonathan Wakely <jwakely@redhat.com>\n\nFrom-SVN: r261585", "tree": {"sha": "a759ed4858add51262b507d4cd3eb47b79f73fad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a759ed4858add51262b507d4cd3eb47b79f73fad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c1d999a7e937da0d417e8153f54b646603bb210", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1d999a7e937da0d417e8153f54b646603bb210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c1d999a7e937da0d417e8153f54b646603bb210", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c1d999a7e937da0d417e8153f54b646603bb210/comments", "author": {"login": "dtrebbien", "id": 94152288, "node_id": "U_kgDOBZymYA", "avatar_url": "https://avatars.githubusercontent.com/u/94152288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtrebbien", "html_url": "https://github.com/dtrebbien", "followers_url": "https://api.github.com/users/dtrebbien/followers", "following_url": "https://api.github.com/users/dtrebbien/following{/other_user}", "gists_url": "https://api.github.com/users/dtrebbien/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtrebbien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtrebbien/subscriptions", "organizations_url": "https://api.github.com/users/dtrebbien/orgs", "repos_url": "https://api.github.com/users/dtrebbien/repos", "events_url": "https://api.github.com/users/dtrebbien/events{/privacy}", "received_events_url": "https://api.github.com/users/dtrebbien/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7a42ade9befecb8fca501b5e2021c09496f3554", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a42ade9befecb8fca501b5e2021c09496f3554", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7a42ade9befecb8fca501b5e2021c09496f3554"}], "stats": {"total": 94, "additions": 81, "deletions": 13}, "files": [{"sha": "923841ab2c7de5d922375b1fd9cf81847dc9163d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1d999a7e937da0d417e8153f54b646603bb210/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1d999a7e937da0d417e8153f54b646603bb210/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4c1d999a7e937da0d417e8153f54b646603bb210", "patch": "@@ -1,3 +1,12 @@\n+2018-06-14  Daniel Trebbien <dtrebbien@gmail.com>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/83982\n+\t* include/bits/vector.tcc (vector::_M_default_append(size_type)):\n+\tDefault-construct new elements before moving existing ones.\n+\t* testsuite/23_containers/vector/capacity/resize/strong_guarantee.cc:\n+\tNew.\n+\n 2018-06-13  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/86127"}, {"sha": "86a711713b2707a7740fd743368c2b16c2747972", "filename": "libstdc++-v3/include/bits/vector.tcc", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1d999a7e937da0d417e8153f54b646603bb210/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1d999a7e937da0d417e8153f54b646603bb210/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc?ref=4c1d999a7e937da0d417e8153f54b646603bb210", "patch": "@@ -582,7 +582,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     {\n       if (__n != 0)\n \t{\n-\t  size_type __size = size();\n+\t  const size_type __size = size();\n \t  size_type __navail = size_type(this->_M_impl._M_end_of_storage\n \t\t\t\t\t - this->_M_impl._M_finish);\n \n@@ -601,23 +601,22 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t    {\n \t      const size_type __len =\n \t\t_M_check_len(__n, \"vector::_M_default_append\");\n-\t      const size_type __old_size = __size;\n \t      pointer __new_start(this->_M_allocate(__len));\n-\t      pointer __new_finish(__new_start);\n+\t      pointer __destroy_from = pointer();\n \t      __try\n \t\t{\n-\t\t  __new_finish\n-\t\t    = std::__uninitialized_move_if_noexcept_a\n-\t\t    (this->_M_impl._M_start, this->_M_impl._M_finish,\n-\t\t     __new_start, _M_get_Tp_allocator());\n-\t\t  __new_finish =\n-\t\t    std::__uninitialized_default_n_a(__new_finish, __n,\n-\t\t\t\t\t\t     _M_get_Tp_allocator());\n+\t\t  std::__uninitialized_default_n_a(__new_start + __size,\n+\t\t\t\t\t\t   __n, _M_get_Tp_allocator());\n+\t\t  __destroy_from = __new_start + __size;\n+\t\t  std::__uninitialized_move_if_noexcept_a(\n+\t\t      this->_M_impl._M_start, this->_M_impl._M_finish,\n+\t\t      __new_start, _M_get_Tp_allocator());\n \t\t}\n \t      __catch(...)\n \t\t{\n-\t\t  std::_Destroy(__new_start, __new_finish,\n-\t\t\t\t_M_get_Tp_allocator());\n+\t\t  if (__destroy_from)\n+\t\t    std::_Destroy(__destroy_from, __destroy_from + __n,\n+\t\t\t\t  _M_get_Tp_allocator());\n \t\t  _M_deallocate(__new_start, __len);\n \t\t  __throw_exception_again;\n \t\t}\n@@ -628,7 +627,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \t\t\t    this->_M_impl._M_end_of_storage\n \t\t\t    - this->_M_impl._M_start);\n \t      this->_M_impl._M_start = __new_start;\n-\t      this->_M_impl._M_finish = __new_finish;\n+\t      this->_M_impl._M_finish = __new_start + __size + __n;\n \t      this->_M_impl._M_end_of_storage = __new_start + __len;\n \t    }\n \t}"}, {"sha": "b209d76867acfe5fb9b5d676f4ea127cad058bab", "filename": "libstdc++-v3/testsuite/23_containers/vector/capacity/resize/strong_guarantee.cc", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c1d999a7e937da0d417e8153f54b646603bb210/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2Fresize%2Fstrong_guarantee.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c1d999a7e937da0d417e8153f54b646603bb210/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2Fresize%2Fstrong_guarantee.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fcapacity%2Fresize%2Fstrong_guarantee.cc?ref=4c1d999a7e937da0d417e8153f54b646603bb210", "patch": "@@ -0,0 +1,60 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <vector>\n+#include <testsuite_hooks.h>\n+\n+struct X\n+{\n+  X() : data(1)\n+  {\n+    if (fail)\n+      throw 1;\n+  }\n+\n+  static bool fail;\n+\n+  std::vector<int> data;\n+};\n+\n+bool X::fail = false;\n+\n+void\n+test01()\n+{\n+  std::vector<X> v(2);\n+  X* const addr = &v[0];\n+  bool caught = false;\n+  try {\n+    X::fail = true;\n+    v.resize(v.capacity() + 1); // force reallocation\n+  } catch (int) {\n+    caught = true;\n+  }\n+  VERIFY( caught );\n+  VERIFY( v.size() == 2 );\n+  VERIFY( &v[0] == addr );\n+  // PR libstdc++/83982\n+  VERIFY( ! v[0].data.empty() );\n+  VERIFY( ! v[1].data.empty() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}