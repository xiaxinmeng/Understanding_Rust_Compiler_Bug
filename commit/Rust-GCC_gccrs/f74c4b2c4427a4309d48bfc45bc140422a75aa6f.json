{"sha": "f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc0YzRiMmM0NDI3YTQzMDlkNDhiZmM0NWJjMTQwNDIyYTc1YWE2Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-01-08T12:49:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2020-01-08T12:49:14Z"}, "message": "re PR tree-optimization/93199 (Compile time hog in sink_clobbers)\n\n2019-01-08  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/93199\n\tc/\n\t* gimple-parser.c (c_parser_parse_gimple_body): Remove __PHI IFN\n\tpermanently.\n\n\t* gimple-fold.c (rewrite_to_defined_overflow): Mark stmt modified.\n\t* tree-ssa-loop-im.c (move_computations_worker): Properly adjust\n\tvirtual operand, also updating SSA use.\n\t* gimple-loop-interchange.cc (loop_cand::undo_simple_reduction):\n\tUpdate stmt after resetting virtual operand.\n\t(tree_loop_interchange::move_code_to_inner_loop): Likewise.\n\n\t* gimple-iterator.c (gsi_remove): When not removing the stmt\n\tpermanently do not delink immediate uses or mark the stmt modified.\n\nFrom-SVN: r280000", "tree": {"sha": "00c928724e41d530bce13fae0581a715f2131583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00c928724e41d530bce13fae0581a715f2131583"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d597b9445f0fddae407914e1497e3422e46ed15d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d597b9445f0fddae407914e1497e3422e46ed15d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d597b9445f0fddae407914e1497e3422e46ed15d"}], "stats": {"total": 41, "additions": 34, "deletions": 7}, "files": [{"sha": "3defa292b2d9d3fe9d41bab3aec7d9aa9c5f6d58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "patch": "@@ -1,3 +1,15 @@\n+2019-01-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/93199\n+\t* gimple-fold.c (rewrite_to_defined_overflow): Mark stmt modified.\n+\t* tree-ssa-loop-im.c (move_computations_worker): Properly adjust\n+\tvirtual operand, also updating SSA use.\n+\t* gimple-loop-interchange.cc (loop_cand::undo_simple_reduction):\n+\tUpdate stmt after resetting virtual operand.\n+\t(tree_loop_interchange::move_code_to_inner_loop): Likewise.\n+\t* gimple-iterator.c (gsi_remove): When not removing the stmt\n+\tpermanently do not delink immediate uses or mark the stmt modified.\n+\n 2020-01-08  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-fnsummary.c (dump_ipa_call_summary): Use symtab_node::dump_name."}, {"sha": "d0b6559437675f0dc88d059aefe4388bed62d5c8", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "patch": "@@ -1,3 +1,9 @@\n+2019-01-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/93199\n+\t* gimple-parser.c (c_parser_parse_gimple_body): Remove __PHI IFN\n+\tpermanently.\n+\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "3370178be187140ccad09d75910831ad49aaa51c", "filename": "gcc/c/gimple-parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Fc%2Fgimple-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Fc%2Fgimple-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fgimple-parser.c?ref=f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "patch": "@@ -327,7 +327,7 @@ c_parser_parse_gimple_body (c_parser *cparser, char *gimple_pass,\n \t\t      add_phi_arg (phi, gimple_call_arg (stmt, i + 1), e,\n \t\t\t\t   UNKNOWN_LOCATION);\n \t\t  }\n-\t\tgsi_remove (&gsi, false);\n+\t\tgsi_remove (&gsi, true);\n \t      }\n \t  /* Fill SSA name gaps, putting them on the freelist.  */\n \t  for (unsigned i = 1; i < num_ssa_names; ++i)"}, {"sha": "d7c5097db404cf68b51f8554e3b3992b6f1feeac", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "patch": "@@ -7380,6 +7380,7 @@ rewrite_to_defined_overflow (gimple *stmt)\n   gimple_assign_set_lhs (stmt, make_ssa_name (type, stmt));\n   if (gimple_assign_rhs_code (stmt) == POINTER_PLUS_EXPR)\n     gimple_assign_set_rhs_code (stmt, PLUS_EXPR);\n+  gimple_set_modified (stmt, true);\n   gimple_seq_add_stmt (&stmts, stmt);\n   gimple *cvt = gimple_build_assign (lhs, NOP_EXPR, gimple_assign_lhs (stmt));\n   gimple_seq_add_stmt (&stmts, cvt);"}, {"sha": "d401c69f36b46e2ecfff22509357e4cbb33658de", "filename": "gcc/gimple-iterator.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Fgimple-iterator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Fgimple-iterator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-iterator.c?ref=f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "patch": "@@ -558,16 +558,18 @@ gsi_remove (gimple_stmt_iterator *i, bool remove_permanently)\n   gimple *stmt = gsi_stmt (*i);\n   bool require_eh_edge_purge = false;\n \n+  /* ???  Do we want to do this for non-permanent operation?  */\n   if (gimple_code (stmt) != GIMPLE_PHI)\n     insert_debug_temps_for_defs (i);\n \n-  /* Free all the data flow information for STMT.  */\n   gimple_set_bb (stmt, NULL);\n-  delink_stmt_imm_use (stmt);\n-  gimple_set_modified (stmt, true);\n \n   if (remove_permanently)\n     {\n+      /* Free all the data flow information for STMT.  */\n+      delink_stmt_imm_use (stmt);\n+      gimple_set_modified (stmt, true);\n+\n       if (gimple_debug_nonbind_marker_p (stmt))\n \t/* We don't need this to be exact, but try to keep it at least\n \t   close.  */"}, {"sha": "2379848808f4069ca9951e4c06fa6e03d7a8beec", "filename": "gcc/gimple-loop-interchange.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Fgimple-loop-interchange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Fgimple-loop-interchange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-loop-interchange.cc?ref=f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "patch": "@@ -879,6 +879,7 @@ loop_cand::undo_simple_reduction (reduction_p re, bitmap dce_seeds)\n   if (re->producer != NULL)\n     {\n       gimple_set_vuse (re->producer, NULL_TREE);\n+      update_stmt (re->producer);\n       from = gsi_for_stmt (re->producer);\n       gsi_remove (&from, false);\n       gimple_seq_add_stmt_without_update (&stmts, re->producer);\n@@ -920,6 +921,7 @@ loop_cand::undo_simple_reduction (reduction_p re, bitmap dce_seeds)\n   gimple_set_vdef (re->consumer, NULL_TREE);\n   gimple_set_vuse (re->consumer, NULL_TREE);\n   gimple_assign_set_rhs1 (re->consumer, re->next);\n+  update_stmt (re->consumer);\n   from = gsi_for_stmt (re->consumer);\n   to = gsi_for_stmt (SSA_NAME_DEF_STMT (re->next));\n   gsi_move_after (&from, &to);\n@@ -1248,14 +1250,17 @@ tree_loop_interchange::move_code_to_inner_loop (class loop *outer,\n \t      continue;\n \t    }\n \n-\t  if (gimple_vuse (stmt))\n-\t    gimple_set_vuse (stmt, NULL_TREE);\n \t  if (gimple_vdef (stmt))\n \t    {\n \t      unlink_stmt_vdef (stmt);\n \t      release_ssa_name (gimple_vdef (stmt));\n \t      gimple_set_vdef (stmt, NULL_TREE);\n \t    }\n+\t  if (gimple_vuse (stmt))\n+\t    {\n+\t      gimple_set_vuse (stmt, NULL_TREE);\n+\t      update_stmt (stmt);\n+\t    }\n \n \t  reset_debug_uses (stmt);\n \t  gsi_move_before (&gsi, &to);"}, {"sha": "3e64ae71944982ffd13412f0c54513a00e731aa1", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f74c4b2c4427a4309d48bfc45bc140422a75aa6f/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=f74c4b2c4427a4309d48bfc45bc140422a75aa6f", "patch": "@@ -1231,7 +1231,8 @@ move_computations_worker (basic_block bb)\n \t      gphi *phi = gsi2.phi ();\n \t      if (virtual_operand_p (gimple_phi_result (phi)))\n \t\t{\n-\t\t  gimple_set_vuse (stmt, PHI_ARG_DEF_FROM_EDGE (phi, e));\n+\t\t  SET_USE (gimple_vuse_op (stmt),\n+\t\t\t   PHI_ARG_DEF_FROM_EDGE (phi, e));\n \t\t  break;\n \t\t}\n \t    }"}]}