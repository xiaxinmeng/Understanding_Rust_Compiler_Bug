{"sha": "ff45c01ef4b2560e6036c379e67b38cfa1508623", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY0NWMwMWVmNGIyNTYwZTYwMzZjMzc5ZTY3YjM4Y2ZhMTUwODYyMw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-04-25T06:24:41Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-04-25T06:24:41Z"}, "message": "c-common.h (c_common_parse_file): Update.\n\n\t* c-common.h (c_common_parse_file): Update.\n\t* c-lang.c (LANG_HOOKS_SET_YYDEBUG): Remove.\n\t* c-lex.c (YYDEBUG): Get from c-lex.h.\n\t(c_common_parse_file): Update.\n\t* c-lex.h (YYDEBUG, yydebug): New.\n\t* c-parse.in (YYDEBUG): Get from c-lex.h.\n\t(c_set_yydebug): Remove.\n\t* c-tree.h (c_set_yydebug): Remove.\n\t* langhooks-def.h (lhd_do_nothing_i): New.\n\t(lhd_set_yydebug, LANG_HOOKS_SET_YYDEBUG): Remove.\n\t(LANG_HOOKS_PARSE_FILE, LANG_HOOKS_INITIALIZER): Update.\n\t* langhooks.c  (lhd_do_nothing_i): New.\n\t(lhd_set_yydebug): Remove.\n\t* langhooks.h (struct lang_hooks): Update.\n\t* toplev.c (set_yydebug): New.\n\t(compile_file): Update call to parse_file hook.\n\t(decode_d_option): Update.\nada:\n\t* misc.c (gnat_parse_file): Update.\ncp:\n\t* cp-lang.c (LANG_HOOKS_SET_YYDEBUG): Remove.\n\t* cp-tree.h (cxx_set_yydebug): Die.\n\t* lex.c (YYDEBUG): Get from c-lex.h.\n\t(cxx_set_yydebug): Remove.\n\t* parse.y: Include c-lex.h.\n\t(YYDEBUG): Get from c-lex.h.\nf:\n\t* com.h (ffe_parse_file): Update.\n\t* lex.c (ffe_parse_file): Update.\njava:\n\t* java-tree.h (java_parse_file): Update.\n\t(java_set_yydebug): Remove.\n\t* jcf-parse.c (yydebug): Remove.\n\t(java_set_yydebug): Die.\n\t(java_parse_file): Update.\n\t* lang.c (LANG_HOOKS_SET_YYDEBUG): Remove.\nobjc:\n\t* objc-lang.c (LANG_HOOKS_SET_YYDEBUG): Remove.\n\nFrom-SVN: r52753", "tree": {"sha": "d894f1320f9d146f1f97b61373115b7a5313fac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d894f1320f9d146f1f97b61373115b7a5313fac5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff45c01ef4b2560e6036c379e67b38cfa1508623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff45c01ef4b2560e6036c379e67b38cfa1508623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff45c01ef4b2560e6036c379e67b38cfa1508623", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff45c01ef4b2560e6036c379e67b38cfa1508623/comments", "author": null, "committer": null, "parents": [{"sha": "9127b2da1b3a993d36180facfaee9e42a48b00f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9127b2da1b3a993d36180facfaee9e42a48b00f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9127b2da1b3a993d36180facfaee9e42a48b00f9"}], "stats": {"total": 186, "additions": 91, "deletions": 95}, "files": [{"sha": "f4cd53516a65639a718b8352c2785ed762140cf0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -1,3 +1,25 @@\n+2002-04-25  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-common.h (c_common_parse_file): Update.\n+\t* c-lang.c (LANG_HOOKS_SET_YYDEBUG): Remove.\n+\t* c-lex.c (YYDEBUG): Get from c-lex.h.\n+\t(c_common_parse_file): Update.\n+\t* c-lex.h (YYDEBUG, yydebug): New.\n+\t* c-parse.in (YYDEBUG): Get from c-lex.h.\n+\t(c_set_yydebug): Remove.\n+\t* c-tree.h (c_set_yydebug): Remove.\n+\t* langhooks-def.h (lhd_do_nothing_i): New.\n+\t(lhd_set_yydebug, LANG_HOOKS_SET_YYDEBUG): Remove.\n+\t(LANG_HOOKS_PARSE_FILE, LANG_HOOKS_INITIALIZER): Update.\n+\t* langhooks.c  (lhd_do_nothing_i): New.\n+\t(lhd_set_yydebug): Remove.\n+\t* langhooks.h (struct lang_hooks): Update.\n+\t* toplev.c (set_yydebug): New.\n+\t(compile_file): Update call to parse_file hook.\n+\t(decode_d_option): Update.\n+objc:\n+\t* objc-lang.c (LANG_HOOKS_SET_YYDEBUG): Remove.\n+\n Wed Apr 24 23:45:37 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* loop.c (load_mems): Don't change the interface of called functions."}, {"sha": "492dd09db084e383e7b6d7c21d4d17400e3ccaac", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -1,3 +1,7 @@\n+2002-04-25  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* misc.c (gnat_parse_file): Update.\n+\n 2002-04-24  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* misc.c (gnat_init): Don't set lang_attribute_common."}, {"sha": "63ac00a0e875b278b4c29cb5abcdeec4bbedeea0", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -85,7 +85,7 @@ static void gnat_print_type\t\tPARAMS ((FILE *, tree, int));\n static const char *gnat_printable_name\tPARAMS  ((tree, int));\n static tree gnat_eh_runtime_type\tPARAMS ((tree));\n static int gnat_eh_type_covers\t\tPARAMS ((tree, tree));\n-static void gnat_parse_file\t\tPARAMS ((void));\n+static void gnat_parse_file\t\tPARAMS ((int));\n static void gnat_mark_tree\t\tPARAMS ((tree));\n static rtx gnat_expand_expr\t\tPARAMS ((tree, rtx, enum machine_mode,\n \t\t\t\t\t\t int));\n@@ -192,7 +192,8 @@ extern void _ada_gnat1drv\tPARAMS((void));\n /* The parser for the language.  For us, we process the GNAT tree.  */\n \n static void\n-gnat_parse_file ()\n+gnat_parse_file (set_yydebug)\n+     int set_yydebug ATTRIBUTE_UNUSED;\n {\n   /* call the target specific initializations */\n   __gnat_initialize();"}, {"sha": "f44b0c3a46ccde6efbb3d13d34c89d14673a8f0f", "filename": "gcc/c-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -568,7 +568,7 @@ extern void c_common_init_options\t\tPARAMS ((enum c_language_kind));\n extern void c_common_post_options\t\tPARAMS ((void));\n extern const char *c_common_init\t\tPARAMS ((const char *));\n extern void c_common_finish\t\t\tPARAMS ((void));\n-extern void c_common_parse_file\t\t\tPARAMS ((void));\n+extern void c_common_parse_file\t\t\tPARAMS ((int));\n extern HOST_WIDE_INT c_common_get_alias_set\tPARAMS ((tree));\n extern bool c_promoting_integer_type_p\t\tPARAMS ((tree));\n extern int self_promoting_args_p\t\tPARAMS ((tree));"}, {"sha": "225967d61d17a17cc40aee07507d3f0f88781ca8", "filename": "gcc/c-lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -72,8 +72,6 @@ static void c_post_options PARAMS ((void));\n #define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL c_warn_unused_global_decl\n #undef LANG_HOOKS_PRINT_IDENTIFIER\n #define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n-#undef LANG_HOOKS_SET_YYDEBUG\n-#define LANG_HOOKS_SET_YYDEBUG c_set_yydebug\n #undef LANG_HOOKS_FUNCTION_ENTER_NESTED\n #define LANG_HOOKS_FUNCTION_ENTER_NESTED c_push_function_context\n #undef LANG_HOOKS_FUNCTION_LEAVE_NESTED"}, {"sha": "30ef877f0b947aef28e29bb6b879c75fa31499a5", "filename": "gcc/c-lex.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -58,9 +58,6 @@ static unsigned int src_lineno;\n static int header_time, body_time;\n static splay_tree file_info_tree;\n \n-/* Cause the `yydebug' variable to be defined.  */\n-#define YYDEBUG 1\n-\n /* File used for outputting assembler code.  */\n extern FILE *asm_out_file;\n \n@@ -149,8 +146,15 @@ init_c_lex (filename)\n    the primary source file.  */\n \n void\n-c_common_parse_file ()\n+c_common_parse_file (set_yydebug)\n+     int set_yydebug ATTRIBUTE_UNUSED;\n {\n+#if YYDEBUG != 0\n+  yydebug = set_yydebug;\n+#else\n+  warning (\"YYDEBUG not defined\");\n+#endif\n+\n   (*debug_hooks->start_source_file) (lineno, input_filename);\n   cpp_finish_options (parse_in);\n "}, {"sha": "fed695d3394cc260ac237322abecccd73f0d8d39", "filename": "gcc/c-lex.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-lex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-lex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.h?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -21,6 +21,10 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #ifndef GCC_C_LEX_H\n #define GCC_C_LEX_H\n \n+/* Cause the `yydebug' variable to be defined.  */\n+#define YYDEBUG 1\n+extern int yydebug;\n+\n extern tree make_pointer_declarator PARAMS ((tree, tree));\n \n extern int c_lex PARAMS ((tree *));"}, {"sha": "5835fe14e134fdd011fb7eee57ab82415276a959", "filename": "gcc/c-parse.in", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -43,7 +43,7 @@ end ifc\n #include \"cpplib.h\"\n #include \"intl.h\"\n #include \"timevar.h\"\n-#include \"c-lex.h\"\n+#include \"c-lex.h\"\t\t/* Gets YYDEBUG macro.  */\n #include \"c-tree.h\"\n #include \"c-pragma.h\"\n #include \"flags.h\"\n@@ -61,9 +61,6 @@ end ifobjc\n \n /* Like YYERROR but do call yyerror.  */\n #define YYERROR1 { yyerror (\"syntax error\"); YYERROR; }\n-\n-/* Cause the \"yydebug\" variable to be defined.  */\n-#define YYDEBUG 1\n %}\n \n %start program\n@@ -3802,21 +3799,6 @@ yylex()\n   return r;\n }\n \n-/* Sets the value of the 'yydebug' variable to VALUE.\n-   This is a function so we don't have to have YYDEBUG defined\n-   in order to build the compiler.  */\n-\n-void\n-c_set_yydebug (value)\n-     int value;\n-{\n-#if YYDEBUG != 0\n-  yydebug = value;\n-#else\n-  warning (\"YYDEBUG not defined\");\n-#endif\n-}\n-\n /* Function used when yydebug is set, to print a token in more detail.  */\n \n static void"}, {"sha": "7225f5d8a50bc454f22c00e9bc84bf28c46e2cc6", "filename": "gcc/c-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -160,7 +160,6 @@ extern tree lookup_objc_ivar\t\t\tPARAMS ((tree));\n \f\n /* in c-parse.in */\n extern void c_parse_init\t\t\tPARAMS ((void));\n-extern void c_set_yydebug\t\t\tPARAMS ((int));\n \n /* in c-aux-info.c */\n extern void gen_aux_info_record                 PARAMS ((tree, int, int, int));"}, {"sha": "ee39ddc544268040f6e60db49ae50d13fb7f7dfe", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -1,3 +1,12 @@\n+2002-04-25  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cp-lang.c (LANG_HOOKS_SET_YYDEBUG): Remove.\n+\t* cp-tree.h (cxx_set_yydebug): Die.\n+\t* lex.c (YYDEBUG): Get from c-lex.h.\n+\t(cxx_set_yydebug): Remove.\n+\t* parse.y: Include c-lex.h.\n+\t(YYDEBUG): Get from c-lex.h.\n+\n 2002-04-24  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/6438."}, {"sha": "815ede9e5ba4dc0cfa4a06b0666c90964d01d4d5", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -88,8 +88,6 @@ static bool cxx_warn_unused_global_decl PARAMS ((tree));\n #define LANG_HOOKS_DECL_PRINTABLE_NAME\tcxx_printable_name\n #undef LANG_HOOKS_PRINT_ERROR_FUNCTION\n #define LANG_HOOKS_PRINT_ERROR_FUNCTION\tcxx_print_error_function\n-#undef LANG_HOOKS_SET_YYDEBUG\n-#define LANG_HOOKS_SET_YYDEBUG cxx_set_yydebug\n #undef LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL\n #define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL cxx_warn_unused_global_decl\n "}, {"sha": "43b17c88cb332087881733b743508748ff029e47", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -3615,7 +3615,6 @@ extern void cxx_print_type\t\t\tPARAMS ((FILE *, tree, int));\n extern void cxx_print_identifier\t\tPARAMS ((FILE *, tree, int));\n extern void cxx_print_error_function\tPARAMS ((struct diagnostic_context *,\n \t\t\t\t\t\t const char *));\n-extern void cxx_set_yydebug\t\t\tPARAMS ((int));\n extern void build_self_reference\t\tPARAMS ((void));\n extern int same_signature_p\t\t\tPARAMS ((tree, tree));\n extern void warn_hidden\t\t\t\tPARAMS ((tree));"}, {"sha": "7e4657c1586986c69a7f22543c8cff4334cccebb", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -23,9 +23,6 @@ Boston, MA 02111-1307, USA.  */\n \n /* This file is the lexical analyzer for GNU C++.  */\n \n-/* Cause the `yydebug' variable to be defined.  */\n-#define YYDEBUG 1\n-\n #include \"config.h\"\n #include \"system.h\"\n #include \"input.h\"\n@@ -846,22 +843,6 @@ print_parse_statistics ()\n #endif\n }\n \n-/* Sets the value of the 'yydebug' variable to VALUE.\n-   This is a function so we don't have to have YYDEBUG defined\n-   in order to build the compiler.  */\n-\n-void\n-cxx_set_yydebug (value)\n-     int value;\n-{\n-#if YYDEBUG != 0\n-  extern int yydebug;\n-  yydebug = value;\n-#else\n-  warning (\"YYDEBUG not defined\");\n-#endif\n-}\n-\n /* Helper function to load global variables with interface\n    information.  */\n "}, {"sha": "627e7343e13e01374ea8e0aac87f2163323cfab3", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -28,9 +28,6 @@ Boston, MA 02111-1307, USA.  */\n    is given.  Keep this in mind when reading the actions.  */\n \n %{\n-/* Cause the `yydebug' variable to be defined.  */\n-#define YYDEBUG 1\n-\n #include \"config.h\"\n \n #include \"system.h\"\n@@ -40,6 +37,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"lex.h\"\n+#include \"c-lex.h\"\t\t/* For YYDEBUG definition.  */\n #include \"output.h\"\n #include \"except.h\"\n #include \"toplev.h\""}, {"sha": "2e1df829fe4610be9e8e564cecac6e210dcc22a5", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -1,3 +1,8 @@\n+Thu Apr 25 07:44:44 2002  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* com.h (ffe_parse_file): Update.\n+\t* lex.c (ffe_parse_file): Update.\n+\n 2002-04-20  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* root.texi: Remove variable version-g77."}, {"sha": "be49242ff921b5ab6895bb0571d39ebd3e7d0416", "filename": "gcc/f/com.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Ff%2Fcom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Ff%2Fcom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.h?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -270,7 +270,7 @@ tree ffecom_truth_value (tree expr);\n tree ffecom_truth_value_invert (tree expr);\n tree ffecom_type_expr (ffebld expr);\n tree ffecom_which_entrypoint_decl (void);\n-void ffe_parse_file (void);\n+void ffe_parse_file (int);\n \n /* Define macros. */\n "}, {"sha": "f687e592ec80486233aec40aab82029f9ed233ab", "filename": "gcc/f/parse.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Ff%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Ff%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fparse.c?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -29,7 +29,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n extern FILE *finput;\n \n void\n-ffe_parse_file ()\n+ffe_parse_file (set_yydebug)\n+     int set_yydebug ATTRIBUTE_UNUSED;\n {\n   ffewhereFile wf;\n "}, {"sha": "2db0c12e9fb40df4f5e4d5b8d2e3521a8e010152", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -1,3 +1,12 @@\n+2002-04-25  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* java-tree.h (java_parse_file): Update.\n+\t(java_set_yydebug): Remove.\n+\t* jcf-parse.c (yydebug): Remove.\n+\t(java_set_yydebug): Die.\n+\t(java_parse_file): Update.\n+\t* lang.c (LANG_HOOKS_SET_YYDEBUG): Remove.\n+\n 2002-04-24  Tom Tromey  <tromey@redhat.com>\n \n \tFor PR java/6425:"}, {"sha": "f591b5fe33f43e3e69b80a48ac649735c4a4ba5c", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -1036,8 +1036,7 @@ struct lang_type\n #define JCF_u4 unsigned long\n #define JCF_u2 unsigned short\n \n-extern void java_set_yydebug PARAMS ((int));\n-extern void java_parse_file PARAMS ((void));\n+extern void java_parse_file PARAMS ((int));\n extern void java_mark_tree PARAMS ((tree));\n extern bool java_mark_addressable PARAMS ((tree));\n extern tree java_type_for_mode PARAMS ((enum machine_mode, int));"}, {"sha": "7faa74cedf82422fd02dca6a234c4ae6d92400d0", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -247,8 +247,6 @@ set_source_filename (jcf, index)\n \n #include \"jcf-reader.c\"\n \n-static int yydebug;\n-\n tree\n parse_signature (jcf, sig_index)\n      JCF *jcf;\n@@ -262,13 +260,6 @@ parse_signature (jcf, sig_index)\n \t\t\t\t   JPOOL_UTF_LENGTH (jcf, sig_index));\n }\n \n-void\n-java_set_yydebug (value)\n-     int value;\n-{\n-  yydebug = value;\n-}\n-\n tree\n get_constant (jcf, index)\n   JCF *jcf;\n@@ -920,7 +911,8 @@ predefined_filename_p (node)\n }\n \n void\n-java_parse_file ()\n+java_parse_file (set_yydebug)\n+     int set_yydebug ATTRIBUTE_UNUSED;\n {\n   int filename_count = 0;\n   char *list, *next;"}, {"sha": "c699da3dd39e8664a318d422c7a395706cfe8a37", "filename": "gcc/java/lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -223,8 +223,6 @@ static int dependency_tracking = 0;\n #define LANG_HOOKS_INIT_OPTIONS java_init_options\n #undef LANG_HOOKS_DECODE_OPTION\n #define LANG_HOOKS_DECODE_OPTION java_decode_option\n-#undef LANG_HOOKS_SET_YYDEBUG\n-#define LANG_HOOKS_SET_YYDEBUG java_set_yydebug\n #undef LANG_HOOKS_PARSE_FILE\n #define LANG_HOOKS_PARSE_FILE java_parse_file\n #undef LANG_HOOKS_MARK_TREE"}, {"sha": "daf00101d7679c5e97cb73dd6e2cb2be059e90c6", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -41,6 +41,7 @@ extern HOST_WIDE_INT hook_get_alias_set_0\tPARAMS ((tree));\n \n extern void lhd_do_nothing PARAMS ((void));\n extern void lhd_do_nothing_t PARAMS ((tree));\n+extern void lhd_do_nothing_i PARAMS ((int));\n extern void lhd_do_nothing_f PARAMS ((struct function *));\n extern int lhd_decode_option PARAMS ((int, char **));\n extern HOST_WIDE_INT lhd_get_alias_set PARAMS ((tree));\n@@ -52,7 +53,6 @@ extern int lhd_unsafe_for_reeval PARAMS ((tree));\n extern void lhd_clear_binding_stack PARAMS ((void));\n extern void lhd_print_tree_nothing PARAMS ((FILE *, tree, int));\n extern const char *lhd_decl_printable_name PARAMS ((tree, int));\n-extern void lhd_set_yydebug PARAMS ((int));\n extern rtx lhd_expand_expr PARAMS ((tree, rtx, enum machine_mode, int));\n extern void lhd_print_error_function PARAMS ((struct diagnostic_context *,\n \t\t\t\t\t      const char *));\n@@ -82,7 +82,7 @@ tree lhd_tree_inlining_convert_parm_for_inlining PARAMS ((tree, tree, tree));\n #define LANG_HOOKS_IDENTIFIER_SIZE\tsizeof (struct lang_identifier)\n #define LANG_HOOKS_INIT\t\t\tlhd_do_nothing\n #define LANG_HOOKS_FINISH\t\tlhd_do_nothing\n-#define LANG_HOOKS_PARSE_FILE\t\tlhd_do_nothing\n+#define LANG_HOOKS_PARSE_FILE\t\tlhd_do_nothing_i\n #define LANG_HOOKS_CLEAR_BINDING_STACK\tlhd_clear_binding_stack\n #define LANG_HOOKS_INIT_OPTIONS\t\tlhd_do_nothing\n #define LANG_HOOKS_DECODE_OPTION\tlhd_decode_option\n@@ -108,7 +108,6 @@ tree lhd_tree_inlining_convert_parm_for_inlining PARAMS ((tree, tree, tree));\n #define LANG_HOOKS_PRINT_IDENTIFIER\tlhd_print_tree_nothing\n #define LANG_HOOKS_PRINT_ERROR_FUNCTION lhd_print_error_function\n #define LANG_HOOKS_DECL_PRINTABLE_NAME\tlhd_decl_printable_name\n-#define LANG_HOOKS_SET_YYDEBUG\t\tlhd_set_yydebug\n \n #define LANG_HOOKS_FUNCTION_INIT\tlhd_do_nothing_f\n #define LANG_HOOKS_FUNCTION_FREE\tlhd_do_nothing_f\n@@ -250,7 +249,6 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n   LANG_HOOKS_PRINT_IDENTIFIER, \\\n   LANG_HOOKS_DECL_PRINTABLE_NAME, \\\n   LANG_HOOKS_PRINT_ERROR_FUNCTION, \\\n-  LANG_HOOKS_SET_YYDEBUG, \\\n   LANG_HOOKS_ATTRIBUTE_TABLE, \\\n   LANG_HOOKS_COMMON_ATTRIBUTE_TABLE, \\\n   LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE, \\"}, {"sha": "4f0e2f3b34004430c6354fb44a52756abad08c2e", "filename": "gcc/langhooks.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -47,6 +47,14 @@ lhd_do_nothing_t (t)\n {\n }\n \n+/* Do nothing (int).  */\n+\n+void\n+lhd_do_nothing_i (i)\n+     int i ATTRIBUTE_UNUSED;\n+{\n+}\n+\n /* Do nothing (function).  */\n \n void\n@@ -140,16 +148,6 @@ lhd_warn_unused_global_decl (decl)\n   return true;\n }\n \n-/* Called when -dy is given on the command line.  */\n-\n-void\n-lhd_set_yydebug (value)\n-     int value;\n-{\n-  if (value)\n-    fprintf (stderr, \"warning: no yacc/bison-generated output to debug!\\n\");\n-}\n-\n /* Set the DECL_ASSEMBLER_NAME for DECL.  */\n void\n lhd_set_decl_assembler_name (decl)"}, {"sha": "417f77bd1b58056f6d76688cdd71d5b5808dd6d0", "filename": "gcc/langhooks.h", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -213,8 +213,9 @@ struct lang_hooks\n   /* Called at the end of compilation, as a finalizer.  */\n   void (*finish) PARAMS ((void));\n \n-  /* Parses the entire file.  */\n-  void (*parse_file) PARAMS ((void));\n+  /* Parses the entire file.  The argument is non-zero to cause bison\n+     parsers to dump debugging information during parsing.  */\n+  void (*parse_file) PARAMS ((int));\n \n   /* Called immediately after parsing to clear the binding stack.  */\n   void (*clear_binding_stack) PARAMS ((void));\n@@ -327,11 +328,6 @@ struct lang_hooks\n   void (*print_error_function) PARAMS ((struct diagnostic_context *,\n \t\t\t\t\tconst char *));\n \n-  /* Set yydebug for bison-based parsers, when -dy is given on the\n-     command line.  By default, if the parameter is non-zero, prints a\n-     warning that the front end does not use such a parser.  */\n-  void (*set_yydebug) PARAMS ((int));\n-\n   /* Pointers to machine-independent attribute tables, for front ends\n      using attribs.c.  If one is NULL, it is ignored.  Respectively, a\n      table of attributes specific to the language, a table of"}, {"sha": "588d5479d9ac27f4ac276f7fa1f3ad86ae70fbac", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -68,8 +68,6 @@ static void objc_post_options                   PARAMS ((void));\n #define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n #undef LANG_HOOKS_DECL_PRINTABLE_NAME\n #define LANG_HOOKS_DECL_PRINTABLE_NAME objc_printable_name\n-#undef LANG_HOOKS_SET_YYDEBUG\n-#define LANG_HOOKS_SET_YYDEBUG c_set_yydebug\n #undef LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL\n #define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL c_warn_unused_global_decl\n "}, {"sha": "07dc649fedc11b7c8555e4dff197d8bf58e1905f", "filename": "gcc/toplev.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff45c01ef4b2560e6036c379e67b38cfa1508623/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=ff45c01ef4b2560e6036c379e67b38cfa1508623", "patch": "@@ -126,6 +126,9 @@ static int print_single_switch PARAMS ((FILE *, int, int, const char *,\n static void print_switch_values PARAMS ((FILE *, int, int, const char *,\n \t\t\t\t       const char *, const char *));\n \n+/* Nonzero to dump debug info whilst parsing (-dy option).  */\n+static int set_yydebug;\n+\n /* Length of line when printing switch values.  */\n #define MAX_LINE 75\n \n@@ -2029,7 +2032,7 @@ compile_file ()\n \n   /* Call the parser, which parses the entire file (calling\n      rest_of_compilation for each function).  */\n-  (*lang_hooks.parse_file) ();\n+  (*lang_hooks.parse_file) (set_yydebug);\n \n   /* In case there were missing block closers,\n      get us back to the global binding level.  */\n@@ -3721,7 +3724,7 @@ decode_d_option (arg)\n \trtl_dump_and_exit = 1;\n \tbreak;\n       case 'y':\n-\t(*lang_hooks.set_yydebug) (1);\n+\tset_yydebug = 1;\n \tbreak;\n       case 'D':\t/* These are handled by the preprocessor.  */\n       case 'I':"}]}