{"sha": "9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVlOWI1NTUwMjFjZDU5YzI4Y2E5ODlhNGNkZWZmNGNjMGY5Y2JjYw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-03-23T07:24:15Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-03-23T07:24:15Z"}, "message": "Warning fixes:\n\n        * gjavah.c (print_c_decl): Remove unused argument `flags'.\n        * jcf-dump.c (print_access_flags): Add braces around if-else.\n        * jvspec.c (lang_specific_driver): Wrap variable `len' in macro\n        COMBINE_INPUTS.\n        * lex.c (build_wfl_node): Add static prototype.\n        * lex.h (build_wfl_node): Remove static prototype.\n        * parse.y: Include lex.c early enough to declare everything needed.\n        Ensure calls to `build_wfl_node' pass the proper arguments.\n        (create_class): Remove unused variable `super_decl'.\n        (get_printable_method_name): Initialize variable `name'.\n\nFrom-SVN: r25921", "tree": {"sha": "a2fcdf12a5baef3b05d14d32b95512c4b247997d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2fcdf12a5baef3b05d14d32b95512c4b247997d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/comments", "author": null, "committer": null, "parents": [{"sha": "ea735e02ae57dfb05059317011ceb9935f1a44a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea735e02ae57dfb05059317011ceb9935f1a44a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea735e02ae57dfb05059317011ceb9935f1a44a6"}], "stats": {"total": 949, "additions": 483, "deletions": 466}, "files": [{"sha": "e03ee3eb8fc51fc838f74403a75fa3bc5811ae56", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "patch": "@@ -1,3 +1,21 @@\n+Tue Mar 23 10:05:27 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gjavah.c (print_c_decl): Remove unused argument `flags'.\n+\n+\t* jcf-dump.c (print_access_flags): Add braces around if-else.\n+\n+\t* jvspec.c (lang_specific_driver): Wrap variable `len' in macro\n+\tCOMBINE_INPUTS.\n+\n+\t* lex.c (build_wfl_node): Add static prototype.\n+\n+\t* lex.h (build_wfl_node): Remove static prototype.\n+\n+\t* parse.y: Include lex.c early enough to declare everything needed.\n+\tEnsure calls to `build_wfl_node' pass the proper arguments.\n+\t(create_class): Remove unused variable `super_decl'.\n+\t(get_printable_method_name): Initialize variable `name'.\n+\t\n Mon Mar 22 20:14:26 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* Changelog: Fixed 1999-03-22 typos."}, {"sha": "0b030f22e7241db1466af91b42a70f3ded1df994", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "patch": "@@ -100,7 +100,7 @@ static struct method_name *method_name_list;\n \n static void print_field_info PROTO ((FILE *, JCF*, int, int, JCF_u2));\n static void print_method_info PROTO ((FILE *, JCF*, int, int, JCF_u2));\n-static void print_c_decl PROTO ((FILE*, JCF*, int, int, JCF_u2, int, const char *));\n+static void print_c_decl PROTO ((FILE*, JCF*, int, int, int, const char *));\n static void decompile_method PROTO ((FILE *, JCF *, int));\n static void add_class_decl PROTO ((FILE *, JCF *, JCF_u2));\n \n@@ -426,7 +426,7 @@ DEFUN(print_field_info, (stream, jcf, name_index, sig_index, flags),\n \t}\n     }\n \n-  print_c_decl (out, jcf, name_index, sig_index, flags, 0, override);\n+  print_c_decl (out, jcf, name_index, sig_index, 0, override);\n   fputs (\";\\n\", out);\n \n   if (override)\n@@ -509,7 +509,7 @@ DEFUN(print_method_info, (stream, jcf, name_index, sig_index, flags),\n       if (! is_init)\n \tfputs (\"virtual \", out);\n     }\n-  print_c_decl (out, jcf, name_index, sig_index, flags, is_init, override);\n+  print_c_decl (out, jcf, name_index, sig_index, is_init, override);\n \n   if ((flags & ACC_ABSTRACT))\n     fputs (\" = 0\", out);\n@@ -676,10 +676,10 @@ decode_signature_piece (stream, signature, limit, need_space)\n }\n \n static void\n-DEFUN(print_c_decl, (stream, jcf, name_index, signature_index, flags, is_init,\n+DEFUN(print_c_decl, (stream, jcf, name_index, signature_index, is_init,\n \t\t     name_override),\n       FILE* stream AND JCF* jcf\n-      AND int name_index AND int signature_index AND JCF_u2 flags\n+      AND int name_index AND int signature_index\n       AND int is_init AND const char *name_override)\n {\n   if (JPOOL_TAG (jcf, signature_index) != CONSTANT_Utf8)"}, {"sha": "6d3e37253b34c11c4c98941bcc835eddc7e0332c", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "patch": "@@ -321,10 +321,12 @@ DEFUN (print_access_flags, (stream, flags, context),\n   if (flags & ACC_STATIC) fprintf (stream, \" static\");\n   if (flags & ACC_FINAL) fprintf (stream, \" final\");\n   if (flags & ACC_SYNCHRONIZED)\n-    if (context == 'c')\n-      fprintf (stream, \" super\");\n-    else\n-      fprintf (stream, \" synchronized\");\n+    {\n+      if (context == 'c')\n+\tfprintf (stream, \" super\");\n+      else\n+\tfprintf (stream, \" synchronized\");\n+    }\n   if (flags & ACC_VOLATILE) fprintf (stream, \" volatile\");\n   if (flags & ACC_TRANSIENT) fprintf (stream, \" transient\");\n   if (flags & ACC_NATIVE) fprintf (stream, \" native\");"}, {"sha": "fee65b87db3b2deaf74745caab06c4b4322b3a52", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "patch": "@@ -328,7 +328,9 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n \t}\n       else\n \t{\n+#if COMBINE_INPUTS\n \t  int len; \n+#endif\n \n \t  if (saw_speclang)\n \t    {"}, {"sha": "df15a8f2ecc43834b3c00c50b474d2facc63d82c", "filename": "gcc/java/lex.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "patch": "@@ -59,6 +59,7 @@ static void java_unicode_2_utf8 PROTO ((unicode_t));\n static void java_lex_error PROTO ((char *, int));\n #ifndef JC1_LITE\n static int java_is_eol PROTO ((FILE *, int));\n+static tree build_wfl_node PROTO ((tree));\n #endif\n static void java_store_unicode PROTO ((struct java_line *, unicode_t, int));\n static unicode_t java_parse_escape_sequence PROTO ((void));"}, {"sha": "97c0c613ae3f14cc3f189c9bac6a4eb062e4062a", "filename": "gcc/java/lex.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Flex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Flex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.h?ref=9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "patch": "@@ -136,7 +136,6 @@ typedef struct _java_lc {\n #else\n \n extern void set_float_handler PROTO((jmp_buf));\n-static tree build_wfl_node ();\n #define SET_FLOAT_HANDLER(H) set_float_handler ((H))\n #define DCONST0 dconst0\n #define GET_IDENTIFIER(S) get_identifier ((S))"}, {"sha": "4c6c38433b182040c5fc24a89e1764a2f72d6441", "filename": "gcc/java/parse.c", "status": "modified", "additions": 438, "deletions": 440, "changes": 878, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "patch": "@@ -316,6 +316,7 @@ static char *purify_type_name PROTO ((char *));\n static tree patch_initialized_static_field PROTO ((tree));\n static tree fold_constant_for_init PROTO ((tree, tree));\n static tree strip_out_static_field_access_decl PROTO ((tree));\n+static jdeplist *reverse_jdep_list PROTO ((struct parser_ctxt *));\n \n /* Number of error found so far. */\n int java_error_count; \n@@ -377,6 +378,9 @@ typedef union {\n   } operator;\n   int value;\n } YYSTYPE;\n+#line 306 \"./parse.y\"\n+\n+#include \"lex.c\"\n #ifndef YYDEBUG\n #define YYDEBUG 1\n #endif\n@@ -671,56 +675,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   446,   452,   454,   455,   456,   457,   458,   462,   464,   467,\n-   469,   470,   473,   475,   478,   482,   486,   490,   496,   498,\n-   500,   502,   507,   509,   512,   516,   521,   526,   528,   529,\n-   530,   531,   532,   533,   534,   537,   542,   548,   550,   553,\n-   556,   558,   562,   564,   567,   594,   596,   600,   613,   615,\n-   619,   626,   627,   629,   639,   644,   659,   663,   666,   669,\n-   672,   674,   676,   681,   685,   687,   689,   691,   695,   697,\n-   699,   706,   712,   717,   721,   724,   728,   730,   733,   735,\n-   736,   737,   741,   743,   745,   746,   748,   753,   756,   766,\n-   769,   771,   775,   778,   785,   791,   799,   801,   803,   805,\n-   807,   811,   813,   817,   824,   825,   829,   832,   834,   836,\n-   838,   840,   842,   844,   846,   853,   856,   858,   867,   869,\n-   873,   878,   883,   887,   892,   894,   896,   903,   905,   907,\n-   911,   914,   916,   920,   922,   923,   928,   933,   939,   947,\n-   954,   957,   960,   964,   967,   971,   980,   982,   984,   989,\n-   996,  1004,  1006,  1010,  1018,  1029,  1033,  1036,  1039,  1042,\n-  1045,  1048,  1051,  1054,  1056,  1060,  1066,  1071,  1073,  1077,\n-  1080,  1084,  1086,  1089,  1091,  1092,  1094,  1098,  1102,  1108,\n-  1113,  1116,  1118,  1122,  1128,  1132,  1137,  1140,  1144,  1149,\n-  1157,  1159,  1162,  1164,  1166,  1170,  1174,  1177,  1181,  1183,\n-  1184,  1185,  1186,  1187,  1197,  1199,  1200,  1201,  1202,  1205,\n-  1207,  1208,  1209,  1210,  1211,  1212,  1213,  1214,  1215,  1216,\n-  1219,  1224,  1235,  1242,  1246,  1257,  1267,  1273,  1279,  1285,\n-  1287,  1293,  1295,  1301,  1303,  1305,  1307,  1309,  1313,  1315,\n-  1316,  1317,  1318,  1319,  1320,  1323,  1329,  1331,  1333,  1337,\n-  1342,  1347,  1353,  1363,  1369,  1371,  1373,  1380,  1383,  1385,\n-  1387,  1391,  1393,  1396,  1400,  1402,  1405,  1412,  1418,  1420,\n-  1422,  1426,  1434,  1437,  1439,  1441,  1445,  1450,  1459,  1464,\n-  1467,  1474,  1476,  1478,  1482,  1485,  1494,  1501,  1503,  1507,\n-  1520,  1522,  1528,  1534,  1538,  1540,  1544,  1547,  1549,  1553,\n-  1556,  1558,  1560,  1564,  1567,  1569,  1571,  1575,  1578,  1580,\n-  1582,  1586,  1592,  1594,  1598,  1605,  1607,  1609,  1611,  1615,\n-  1623,  1626,  1628,  1633,  1637,  1639,  1646,  1654,  1671,  1673,\n-  1675,  1679,  1682,  1687,  1689,  1692,  1694,  1696,  1698,  1699,\n-  1700,  1701,  1705,  1707,  1709,  1714,  1716,  1718,  1720,  1722,\n-  1726,  1729,  1734,  1736,  1741,  1742,  1743,  1744,  1745,  1747,\n-  1749,  1751,  1753,  1755,  1759,  1761,  1764,  1770,  1775,  1779,\n-  1782,  1784,  1786,  1790,  1792,  1794,  1796,  1800,  1803,  1807,\n-  1813,  1815,  1823,  1850,  1852,  1856,  1861,  1869,  1873,  1876,\n-  1878,  1889,  1900,  1905,  1914,  1916,  1920,  1923,  1925,  1930,\n-  1935,  1940,  1947,  1949,  1950,  1951,  1954,  1959,  1964,  1966,\n-  1967,  1969,  1971,  1972,  1974,  1978,  1981,  1985,  1988,  1992,\n-  1994,  1996,  1998,  1999,  2001,  2005,  2014,  2016,  2018,  2031,\n-  2033,  2039,  2041,  2043,  2047,  2049,  2054,  2059,  2064,  2066,\n-  2068,  2072,  2074,  2079,  2084,  2086,  2090,  2092,  2097,  2102,\n-  2107,  2109,  2111,  2115,  2117,  2122,  2127,  2132,  2137,  2139,\n-  2141,  2143,  2145,  2147,  2151,  2153,  2158,  2163,  2165,  2169,\n-  2171,  2176,  2180,  2182,  2187,  2191,  2193,  2198,  2202,  2204,\n-  2209,  2213,  2215,  2220,  2224,  2226,  2231,  2237,  2239,  2243,\n-  2245,  2248,  2251,  2259,  2261,  2262,  2265,  2267,  2270,  2274\n+   450,   456,   458,   459,   460,   461,   462,   466,   468,   471,\n+   473,   474,   477,   479,   482,   486,   490,   494,   500,   502,\n+   504,   506,   511,   513,   516,   520,   525,   530,   532,   533,\n+   534,   535,   536,   537,   538,   541,   546,   552,   554,   557,\n+   560,   562,   566,   568,   571,   598,   600,   604,   617,   619,\n+   623,   630,   631,   633,   643,   648,   663,   667,   670,   673,\n+   676,   678,   680,   685,   689,   691,   693,   695,   699,   701,\n+   703,   710,   716,   721,   725,   728,   732,   734,   737,   739,\n+   740,   741,   745,   747,   749,   750,   752,   757,   760,   770,\n+   773,   775,   779,   782,   789,   795,   803,   805,   807,   809,\n+   811,   815,   817,   821,   828,   829,   833,   836,   838,   840,\n+   842,   844,   846,   848,   850,   857,   860,   862,   871,   873,\n+   877,   882,   887,   891,   896,   898,   900,   907,   909,   911,\n+   915,   918,   920,   924,   926,   927,   932,   937,   943,   951,\n+   958,   961,   964,   968,   971,   975,   984,   986,   988,   993,\n+  1000,  1008,  1010,  1014,  1021,  1031,  1035,  1038,  1041,  1044,\n+  1047,  1050,  1053,  1056,  1058,  1062,  1068,  1073,  1075,  1079,\n+  1082,  1086,  1088,  1091,  1093,  1094,  1096,  1100,  1104,  1110,\n+  1115,  1118,  1120,  1124,  1130,  1134,  1139,  1142,  1146,  1151,\n+  1159,  1161,  1164,  1166,  1168,  1172,  1176,  1179,  1183,  1185,\n+  1186,  1187,  1188,  1189,  1199,  1201,  1202,  1203,  1204,  1207,\n+  1209,  1210,  1211,  1212,  1213,  1214,  1215,  1216,  1217,  1218,\n+  1221,  1226,  1237,  1244,  1248,  1259,  1269,  1275,  1281,  1287,\n+  1289,  1295,  1297,  1303,  1305,  1307,  1309,  1311,  1315,  1317,\n+  1318,  1319,  1320,  1321,  1322,  1325,  1331,  1333,  1335,  1339,\n+  1344,  1349,  1355,  1365,  1371,  1373,  1375,  1382,  1385,  1387,\n+  1389,  1393,  1395,  1398,  1402,  1404,  1407,  1414,  1420,  1422,\n+  1424,  1428,  1436,  1439,  1441,  1443,  1447,  1452,  1461,  1466,\n+  1469,  1476,  1478,  1480,  1484,  1487,  1496,  1503,  1505,  1509,\n+  1522,  1524,  1530,  1536,  1540,  1542,  1546,  1549,  1551,  1555,\n+  1558,  1560,  1562,  1566,  1569,  1571,  1573,  1577,  1580,  1582,\n+  1584,  1588,  1594,  1596,  1600,  1607,  1609,  1611,  1613,  1617,\n+  1625,  1628,  1630,  1635,  1639,  1641,  1648,  1656,  1673,  1675,\n+  1677,  1681,  1684,  1689,  1691,  1694,  1696,  1698,  1700,  1701,\n+  1702,  1703,  1707,  1709,  1711,  1716,  1718,  1720,  1722,  1724,\n+  1728,  1731,  1736,  1738,  1743,  1744,  1745,  1746,  1747,  1749,\n+  1751,  1753,  1755,  1757,  1761,  1763,  1766,  1772,  1777,  1781,\n+  1784,  1786,  1788,  1792,  1794,  1796,  1798,  1802,  1805,  1809,\n+  1815,  1817,  1825,  1852,  1854,  1858,  1863,  1870,  1874,  1877,\n+  1879,  1890,  1901,  1906,  1915,  1917,  1921,  1924,  1926,  1931,\n+  1936,  1941,  1948,  1950,  1951,  1952,  1955,  1960,  1965,  1967,\n+  1968,  1970,  1972,  1973,  1975,  1979,  1982,  1986,  1989,  1993,\n+  1995,  1997,  1999,  2000,  2002,  2006,  2015,  2017,  2019,  2032,\n+  2034,  2040,  2042,  2044,  2048,  2050,  2055,  2060,  2065,  2067,\n+  2069,  2073,  2075,  2080,  2085,  2087,  2091,  2093,  2098,  2103,\n+  2108,  2110,  2112,  2116,  2118,  2123,  2128,  2133,  2138,  2140,\n+  2142,  2144,  2146,  2148,  2152,  2154,  2159,  2164,  2166,  2170,\n+  2172,  2177,  2181,  2183,  2188,  2192,  2194,  2199,  2203,  2205,\n+  2210,  2214,  2216,  2221,  2225,  2227,  2232,  2238,  2240,  2244,\n+  2246,  2249,  2252,  2260,  2262,  2263,  2266,  2268,  2271,  2275\n };\n #endif\n \n@@ -2218,7 +2222,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/lib/bison.simple\"\n+#line 3 \"/usr/local/gnu/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2411,7 +2415,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/lib/bison.simple\"\n+#line 196 \"/usr/local/gnu/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2716,66 +2720,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 448 \"./parse.y\"\n+#line 452 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 492 \"./parse.y\"\n+#line 496 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 497 \"./parse.y\"\n+#line 501 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 499 \"./parse.y\"\n+#line 503 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 501 \"./parse.y\"\n+#line 505 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 503 \"./parse.y\"\n+#line 507 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 518 \"./parse.y\"\n+#line 522 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 527 \"./parse.y\"\n+#line 531 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 539 \"./parse.y\"\n+#line 543 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 543 \"./parse.y\"\n+#line 547 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 555 \"./parse.y\"\n+#line 559 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 557 \"./parse.y\"\n+#line 561 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 559 \"./parse.y\"\n+#line 563 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 569 \"./parse.y\"\n+#line 573 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2803,15 +2807,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 595 \"./parse.y\"\n+#line 599 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 597 \"./parse.y\"\n+#line 601 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 602 \"./parse.y\"\n+#line 606 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2825,40 +2829,40 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 614 \"./parse.y\"\n+#line 618 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 616 \"./parse.y\"\n+#line 620 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 621 \"./parse.y\"\n+#line 625 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 628 \"./parse.y\"\n+#line 632 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 630 \"./parse.y\"\n+#line 634 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 641 \"./parse.y\"\n+#line 645 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 645 \"./parse.y\"\n+#line 649 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2872,123 +2876,123 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 661 \"./parse.y\"\n+#line 665 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 663 \"./parse.y\"\n+#line 667 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 667 \"./parse.y\"\n+#line 671 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 669 \"./parse.y\"\n+#line 673 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 673 \"./parse.y\"\n+#line 677 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 675 \"./parse.y\"\n+#line 679 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 677 \"./parse.y\"\n+#line 681 \"./parse.y\"\n {\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\"); \n \t\t  DRECOVER(class1);\n \t\t;\n     break;}\n case 64:\n-#line 682 \"./parse.y\"\n+#line 686 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 686 \"./parse.y\"\n+#line 690 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 688 \"./parse.y\"\n+#line 692 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 690 \"./parse.y\"\n+#line 694 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 692 \"./parse.y\"\n+#line 696 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 696 \"./parse.y\"\n+#line 700 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 698 \"./parse.y\"\n+#line 702 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 700 \"./parse.y\"\n+#line 704 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 708 \"./parse.y\"\n+#line 712 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 713 \"./parse.y\"\n+#line 717 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 718 \"./parse.y\"\n+#line 722 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 723 \"./parse.y\"\n+#line 727 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 76:\n-#line 725 \"./parse.y\"\n+#line 729 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 82:\n-#line 738 \"./parse.y\"\n+#line 742 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 84:\n-#line 744 \"./parse.y\"\n+#line 748 \"./parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 86:\n-#line 747 \"./parse.y\"\n+#line 751 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 87:\n-#line 749 \"./parse.y\"\n+#line 753 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 88:\n-#line 755 \"./parse.y\"\n+#line 759 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 89:\n-#line 757 \"./parse.y\"\n+#line 761 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -2998,19 +3002,19 @@ case 89:\n \t\t;\n     break;}\n case 91:\n-#line 770 \"./parse.y\"\n+#line 774 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 92:\n-#line 772 \"./parse.y\"\n+#line 776 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 93:\n-#line 777 \"./parse.y\"\n+#line 781 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 94:\n-#line 779 \"./parse.y\"\n+#line 783 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3019,101 +3023,101 @@ case 94:\n \t\t;\n     break;}\n case 95:\n-#line 786 \"./parse.y\"\n+#line 790 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 96:\n-#line 792 \"./parse.y\"\n+#line 796 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 98:\n-#line 802 \"./parse.y\"\n+#line 806 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 99:\n-#line 804 \"./parse.y\"\n+#line 808 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 806 \"./parse.y\"\n+#line 810 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 101:\n-#line 808 \"./parse.y\"\n+#line 812 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 104:\n-#line 819 \"./parse.y\"\n+#line 823 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 105:\n-#line 824 \"./parse.y\"\n+#line 828 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 106:\n-#line 826 \"./parse.y\"\n+#line 830 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 107:\n-#line 831 \"./parse.y\"\n+#line 835 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 833 \"./parse.y\"\n+#line 837 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 835 \"./parse.y\"\n+#line 839 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 837 \"./parse.y\"\n+#line 841 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 111:\n-#line 839 \"./parse.y\"\n+#line 843 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 841 \"./parse.y\"\n+#line 845 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 113:\n-#line 843 \"./parse.y\"\n+#line 847 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 845 \"./parse.y\"\n+#line 849 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 115:\n-#line 847 \"./parse.y\"\n+#line 851 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 116:\n-#line 855 \"./parse.y\"\n+#line 859 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 117:\n-#line 857 \"./parse.y\"\n+#line 861 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 118:\n-#line 859 \"./parse.y\"\n+#line 863 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3124,348 +3128,346 @@ case 118:\n \t\t;\n     break;}\n case 119:\n-#line 868 \"./parse.y\"\n+#line 872 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 120:\n-#line 870 \"./parse.y\"\n+#line 874 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 121:\n-#line 875 \"./parse.y\"\n+#line 879 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 122:\n-#line 879 \"./parse.y\"\n+#line 883 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 123:\n-#line 884 \"./parse.y\"\n+#line 888 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 124:\n-#line 889 \"./parse.y\"\n+#line 893 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 125:\n-#line 893 \"./parse.y\"\n+#line 897 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 126:\n-#line 895 \"./parse.y\"\n+#line 899 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 127:\n-#line 897 \"./parse.y\"\n+#line 901 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 128:\n-#line 904 \"./parse.y\"\n+#line 908 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 129:\n-#line 906 \"./parse.y\"\n+#line 910 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 130:\n-#line 908 \"./parse.y\"\n+#line 912 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 131:\n-#line 913 \"./parse.y\"\n+#line 917 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 132:\n-#line 915 \"./parse.y\"\n+#line 919 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 133:\n-#line 917 \"./parse.y\"\n+#line 921 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 136:\n-#line 924 \"./parse.y\"\n+#line 928 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 137:\n-#line 930 \"./parse.y\"\n+#line 934 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 138:\n-#line 934 \"./parse.y\"\n+#line 938 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 139:\n-#line 941 \"./parse.y\"\n+#line 945 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 140:\n-#line 949 \"./parse.y\"\n+#line 953 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 141:\n-#line 954 \"./parse.y\"\n+#line 958 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 959 \"./parse.y\"\n+#line 963 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 961 \"./parse.y\"\n+#line 965 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 966 \"./parse.y\"\n+#line 970 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 145:\n-#line 968 \"./parse.y\"\n+#line 972 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 146:\n-#line 976 \"./parse.y\"\n+#line 980 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 147:\n-#line 981 \"./parse.y\"\n+#line 985 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 983 \"./parse.y\"\n+#line 987 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 985 \"./parse.y\"\n+#line 989 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 150:\n-#line 991 \"./parse.y\"\n+#line 995 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 997 \"./parse.y\"\n+#line 1001 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 152:\n-#line 1005 \"./parse.y\"\n+#line 1009 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 1007 \"./parse.y\"\n+#line 1011 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 154:\n-#line 1012 \"./parse.y\"\n+#line 1016 \"./parse.y\"\n {\n-\t\t  tree wfl = build_wfl_node (this_identifier_node, \n-\t\t\t\t\t     input_filename, 0, 0);\n+\t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 155:\n-#line 1019 \"./parse.y\"\n+#line 1022 \"./parse.y\"\n {\n-\t\t  tree wfl = build_wfl_node (super_identifier_node,\n-\t\t\t\t\t     input_filename, 0, 0);\n+\t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 156:\n-#line 1031 \"./parse.y\"\n+#line 1033 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 157:\n-#line 1033 \"./parse.y\"\n+#line 1035 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 158:\n-#line 1037 \"./parse.y\"\n+#line 1039 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 159:\n-#line 1039 \"./parse.y\"\n+#line 1041 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 160:\n-#line 1043 \"./parse.y\"\n+#line 1045 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 161:\n-#line 1045 \"./parse.y\"\n+#line 1047 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 162:\n-#line 1049 \"./parse.y\"\n+#line 1051 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 163:\n-#line 1051 \"./parse.y\"\n+#line 1053 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 164:\n-#line 1055 \"./parse.y\"\n+#line 1057 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1057 \"./parse.y\"\n+#line 1059 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 166:\n-#line 1062 \"./parse.y\"\n+#line 1064 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 167:\n-#line 1067 \"./parse.y\"\n+#line 1069 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 168:\n-#line 1072 \"./parse.y\"\n+#line 1074 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 169:\n-#line 1074 \"./parse.y\"\n+#line 1076 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 170:\n-#line 1079 \"./parse.y\"\n+#line 1081 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 171:\n-#line 1081 \"./parse.y\"\n+#line 1083 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 176:\n-#line 1093 \"./parse.y\"\n+#line 1095 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 177:\n-#line 1095 \"./parse.y\"\n+#line 1097 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 179:\n-#line 1104 \"./parse.y\"\n+#line 1106 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 180:\n-#line 1109 \"./parse.y\"\n+#line 1111 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 181:\n-#line 1115 \"./parse.y\"\n+#line 1117 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 182:\n-#line 1117 \"./parse.y\"\n+#line 1119 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 183:\n-#line 1119 \"./parse.y\"\n+#line 1121 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 184:\n-#line 1124 \"./parse.y\"\n+#line 1126 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 185:\n-#line 1129 \"./parse.y\"\n+#line 1131 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 186:\n-#line 1133 \"./parse.y\"\n+#line 1135 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 187:\n-#line 1139 \"./parse.y\"\n+#line 1141 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 188:\n-#line 1141 \"./parse.y\"\n+#line 1143 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 189:\n-#line 1146 \"./parse.y\"\n+#line 1148 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 190:\n-#line 1151 \"./parse.y\"\n+#line 1153 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 194:\n-#line 1165 \"./parse.y\"\n+#line 1167 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 195:\n-#line 1167 \"./parse.y\"\n+#line 1169 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 197:\n-#line 1176 \"./parse.y\"\n+#line 1178 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 198:\n-#line 1178 \"./parse.y\"\n+#line 1180 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 204:\n-#line 1188 \"./parse.y\"\n+#line 1190 \"./parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3475,11 +3477,11 @@ case 204:\n \t\t;\n     break;}\n case 221:\n-#line 1221 \"./parse.y\"\n+#line 1223 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 222:\n-#line 1226 \"./parse.y\"\n+#line 1228 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3489,27 +3491,27 @@ case 222:\n \t\t;\n     break;}\n case 223:\n-#line 1237 \"./parse.y\"\n+#line 1239 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 224:\n-#line 1243 \"./parse.y\"\n+#line 1245 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 225:\n-#line 1248 \"./parse.y\"\n+#line 1250 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 226:\n-#line 1259 \"./parse.y\"\n+#line 1261 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3520,108 +3522,108 @@ case 226:\n \t\t;\n     break;}\n case 227:\n-#line 1268 \"./parse.y\"\n+#line 1270 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1274 \"./parse.y\"\n+#line 1276 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1280 \"./parse.y\"\n+#line 1282 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1286 \"./parse.y\"\n+#line 1288 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 231:\n-#line 1288 \"./parse.y\"\n+#line 1290 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 232:\n-#line 1294 \"./parse.y\"\n+#line 1296 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1296 \"./parse.y\"\n+#line 1298 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1302 \"./parse.y\"\n+#line 1304 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1304 \"./parse.y\"\n+#line 1306 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1306 \"./parse.y\"\n+#line 1308 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1308 \"./parse.y\"\n+#line 1310 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1310 \"./parse.y\"\n+#line 1312 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 246:\n-#line 1325 \"./parse.y\"\n+#line 1327 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 247:\n-#line 1330 \"./parse.y\"\n+#line 1332 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1332 \"./parse.y\"\n+#line 1334 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 249:\n-#line 1334 \"./parse.y\"\n+#line 1336 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1339 \"./parse.y\"\n+#line 1341 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1344 \"./parse.y\"\n+#line 1346 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 252:\n-#line 1349 \"./parse.y\"\n+#line 1351 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 253:\n-#line 1353 \"./parse.y\"\n+#line 1355 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3632,112 +3634,112 @@ case 253:\n \t\t;\n     break;}\n case 254:\n-#line 1365 \"./parse.y\"\n+#line 1367 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 255:\n-#line 1370 \"./parse.y\"\n+#line 1372 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 256:\n-#line 1372 \"./parse.y\"\n+#line 1374 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 257:\n-#line 1374 \"./parse.y\"\n+#line 1376 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 258:\n-#line 1382 \"./parse.y\"\n+#line 1384 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 259:\n-#line 1384 \"./parse.y\"\n+#line 1386 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1386 \"./parse.y\"\n+#line 1388 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 261:\n-#line 1388 \"./parse.y\"\n+#line 1390 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 267:\n-#line 1407 \"./parse.y\"\n+#line 1409 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1413 \"./parse.y\"\n+#line 1415 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 269:\n-#line 1419 \"./parse.y\"\n+#line 1421 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 270:\n-#line 1421 \"./parse.y\"\n+#line 1423 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1423 \"./parse.y\"\n+#line 1425 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 272:\n-#line 1428 \"./parse.y\"\n+#line 1430 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 273:\n-#line 1436 \"./parse.y\"\n+#line 1438 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 274:\n-#line 1438 \"./parse.y\"\n+#line 1440 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1440 \"./parse.y\"\n+#line 1442 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1442 \"./parse.y\"\n+#line 1444 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1447 \"./parse.y\"\n+#line 1449 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 278:\n-#line 1452 \"./parse.y\"\n+#line 1454 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 279:\n-#line 1461 \"./parse.y\"\n+#line 1463 \"./parse.y\"\n { yyval.node = complete_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 280:\n-#line 1466 \"./parse.y\"\n+#line 1468 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 281:\n-#line 1468 \"./parse.y\"\n+#line 1470 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3746,23 +3748,23 @@ case 281:\n \t\t;\n     break;}\n case 282:\n-#line 1475 \"./parse.y\"\n+#line 1477 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1477 \"./parse.y\"\n+#line 1479 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1479 \"./parse.y\"\n+#line 1481 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1484 \"./parse.y\"\n+#line 1486 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 286:\n-#line 1486 \"./parse.y\"\n+#line 1488 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3771,23 +3773,23 @@ case 286:\n \t\t;\n     break;}\n case 287:\n-#line 1496 \"./parse.y\"\n+#line 1498 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 288:\n-#line 1502 \"./parse.y\"\n+#line 1504 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 289:\n-#line 1504 \"./parse.y\"\n+#line 1506 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 290:\n-#line 1509 \"./parse.y\"\n+#line 1511 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3800,179 +3802,179 @@ case 290:\n \t\t;\n     break;}\n case 291:\n-#line 1521 \"./parse.y\"\n+#line 1523 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 292:\n-#line 1523 \"./parse.y\"\n+#line 1525 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 293:\n-#line 1529 \"./parse.y\"\n+#line 1531 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 294:\n-#line 1535 \"./parse.y\"\n+#line 1537 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 295:\n-#line 1539 \"./parse.y\"\n+#line 1541 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 296:\n-#line 1541 \"./parse.y\"\n+#line 1543 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1546 \"./parse.y\"\n+#line 1548 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1548 \"./parse.y\"\n+#line 1550 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1550 \"./parse.y\"\n+#line 1552 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 300:\n-#line 1555 \"./parse.y\"\n+#line 1557 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 301:\n-#line 1557 \"./parse.y\"\n+#line 1559 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 302:\n-#line 1559 \"./parse.y\"\n+#line 1561 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 303:\n-#line 1561 \"./parse.y\"\n+#line 1563 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 304:\n-#line 1566 \"./parse.y\"\n+#line 1568 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 305:\n-#line 1568 \"./parse.y\"\n+#line 1570 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 306:\n-#line 1570 \"./parse.y\"\n+#line 1572 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 307:\n-#line 1572 \"./parse.y\"\n+#line 1574 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 308:\n-#line 1577 \"./parse.y\"\n+#line 1579 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 309:\n-#line 1579 \"./parse.y\"\n+#line 1581 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 310:\n-#line 1581 \"./parse.y\"\n+#line 1583 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 311:\n-#line 1583 \"./parse.y\"\n+#line 1585 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 312:\n-#line 1588 \"./parse.y\"\n+#line 1590 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 313:\n-#line 1593 \"./parse.y\"\n+#line 1595 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 314:\n-#line 1595 \"./parse.y\"\n+#line 1597 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 315:\n-#line 1600 \"./parse.y\"\n+#line 1602 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 316:\n-#line 1606 \"./parse.y\"\n+#line 1608 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1608 \"./parse.y\"\n+#line 1610 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 318:\n-#line 1610 \"./parse.y\"\n+#line 1612 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1612 \"./parse.y\"\n+#line 1614 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 320:\n-#line 1617 \"./parse.y\"\n+#line 1619 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 321:\n-#line 1625 \"./parse.y\"\n+#line 1627 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 322:\n-#line 1627 \"./parse.y\"\n+#line 1629 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1629 \"./parse.y\"\n+#line 1631 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 324:\n-#line 1634 \"./parse.y\"\n+#line 1636 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 326:\n-#line 1640 \"./parse.y\"\n+#line 1642 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 327:\n-#line 1648 \"./parse.y\"\n+#line 1650 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 328:\n-#line 1656 \"./parse.y\"\n+#line 1658 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -3990,184 +3992,184 @@ case 328:\n \t\t;\n     break;}\n case 329:\n-#line 1672 \"./parse.y\"\n+#line 1674 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 330:\n-#line 1674 \"./parse.y\"\n+#line 1676 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 331:\n-#line 1676 \"./parse.y\"\n+#line 1678 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 332:\n-#line 1681 \"./parse.y\"\n+#line 1683 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 333:\n-#line 1683 \"./parse.y\"\n+#line 1685 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 337:\n-#line 1695 \"./parse.y\"\n+#line 1697 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 338:\n-#line 1697 \"./parse.y\"\n+#line 1699 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 343:\n-#line 1706 \"./parse.y\"\n+#line 1708 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 344:\n-#line 1708 \"./parse.y\"\n+#line 1710 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 345:\n-#line 1710 \"./parse.y\"\n+#line 1712 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 346:\n-#line 1715 \"./parse.y\"\n+#line 1717 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 347:\n-#line 1717 \"./parse.y\"\n+#line 1719 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 348:\n-#line 1719 \"./parse.y\"\n+#line 1721 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1721 \"./parse.y\"\n+#line 1723 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1723 \"./parse.y\"\n+#line 1725 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1728 \"./parse.y\"\n+#line 1730 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 352:\n-#line 1730 \"./parse.y\"\n+#line 1732 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 353:\n-#line 1735 \"./parse.y\"\n+#line 1737 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 354:\n-#line 1737 \"./parse.y\"\n+#line 1739 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 359:\n-#line 1746 \"./parse.y\"\n+#line 1748 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 360:\n-#line 1748 \"./parse.y\"\n+#line 1750 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1750 \"./parse.y\"\n+#line 1752 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1752 \"./parse.y\"\n+#line 1754 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1754 \"./parse.y\"\n+#line 1756 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1756 \"./parse.y\"\n+#line 1758 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 367:\n-#line 1766 \"./parse.y\"\n+#line 1768 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 368:\n-#line 1771 \"./parse.y\"\n+#line 1773 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 369:\n-#line 1776 \"./parse.y\"\n+#line 1778 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 370:\n-#line 1781 \"./parse.y\"\n+#line 1783 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1783 \"./parse.y\"\n+#line 1785 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 372:\n-#line 1785 \"./parse.y\"\n+#line 1787 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 373:\n-#line 1787 \"./parse.y\"\n+#line 1789 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 374:\n-#line 1791 \"./parse.y\"\n+#line 1793 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1793 \"./parse.y\"\n+#line 1795 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 376:\n-#line 1795 \"./parse.y\"\n+#line 1797 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 377:\n-#line 1797 \"./parse.y\"\n+#line 1799 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 378:\n-#line 1802 \"./parse.y\"\n+#line 1804 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 379:\n-#line 1804 \"./parse.y\"\n+#line 1806 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 380:\n-#line 1809 \"./parse.y\"\n+#line 1811 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 381:\n-#line 1814 \"./parse.y\"\n+#line 1816 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 382:\n-#line 1816 \"./parse.y\"\n+#line 1818 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 383:\n-#line 1825 \"./parse.y\"\n+#line 1827 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4195,41 +4197,40 @@ case 383:\n \t\t;\n     break;}\n case 384:\n-#line 1851 \"./parse.y\"\n+#line 1853 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 385:\n-#line 1853 \"./parse.y\"\n+#line 1855 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 386:\n-#line 1858 \"./parse.y\"\n+#line 1860 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 387:\n-#line 1862 \"./parse.y\"\n+#line 1864 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n-\t\t    build_wfl_node (super_identifier_node, \n-\t\t\t\t    input_filename, 0, 0);\n+\t\t    build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (super_wfl) = yyvsp[-2].operator.location;\n \t\t  yyval.node = make_qualified_name (super_wfl, yyvsp[0].node, yyvsp[-1].operator.location);\n \t\t;\n     break;}\n case 388:\n-#line 1870 \"./parse.y\"\n+#line 1871 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 389:\n-#line 1875 \"./parse.y\"\n+#line 1876 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 390:\n-#line 1877 \"./parse.y\"\n+#line 1878 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 391:\n-#line 1879 \"./parse.y\"\n+#line 1880 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4242,7 +4243,7 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1890 \"./parse.y\"\n+#line 1891 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4255,121 +4256,121 @@ case 392:\n \t\t;\n     break;}\n case 393:\n-#line 1901 \"./parse.y\"\n+#line 1902 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1906 \"./parse.y\"\n+#line 1907 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 395:\n-#line 1915 \"./parse.y\"\n+#line 1916 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1917 \"./parse.y\"\n+#line 1918 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 397:\n-#line 1922 \"./parse.y\"\n+#line 1923 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1924 \"./parse.y\"\n+#line 1925 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 399:\n-#line 1926 \"./parse.y\"\n+#line 1927 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1931 \"./parse.y\"\n+#line 1932 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1936 \"./parse.y\"\n+#line 1937 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1941 \"./parse.y\"\n+#line 1942 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 407:\n-#line 1956 \"./parse.y\"\n+#line 1957 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 408:\n-#line 1961 \"./parse.y\"\n+#line 1962 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 411:\n-#line 1968 \"./parse.y\"\n+#line 1969 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 412:\n-#line 1970 \"./parse.y\"\n+#line 1971 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 1973 \"./parse.y\"\n+#line 1974 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1975 \"./parse.y\"\n+#line 1976 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 416:\n-#line 1980 \"./parse.y\"\n+#line 1981 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 417:\n-#line 1982 \"./parse.y\"\n+#line 1983 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 1987 \"./parse.y\"\n+#line 1988 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 1989 \"./parse.y\"\n+#line 1990 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 421:\n-#line 1995 \"./parse.y\"\n+#line 1996 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 422:\n-#line 1997 \"./parse.y\"\n+#line 1998 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 2000 \"./parse.y\"\n+#line 2001 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 2002 \"./parse.y\"\n+#line 2003 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 426:\n-#line 2007 \"./parse.y\"\n+#line 2008 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4379,15 +4380,15 @@ case 426:\n \t\t;\n     break;}\n case 427:\n-#line 2015 \"./parse.y\"\n+#line 2016 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 2017 \"./parse.y\"\n+#line 2018 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 429:\n-#line 2019 \"./parse.y\"\n+#line 2020 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4402,275 +4403,275 @@ case 429:\n \t\t;\n     break;}\n case 430:\n-#line 2032 \"./parse.y\"\n+#line 2033 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 431:\n-#line 2034 \"./parse.y\"\n+#line 2035 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 432:\n-#line 2040 \"./parse.y\"\n+#line 2041 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 2042 \"./parse.y\"\n+#line 2043 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 434:\n-#line 2044 \"./parse.y\"\n+#line 2045 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 2050 \"./parse.y\"\n+#line 2051 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 437:\n-#line 2055 \"./parse.y\"\n+#line 2056 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2060 \"./parse.y\"\n+#line 2061 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 439:\n-#line 2065 \"./parse.y\"\n+#line 2066 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2067 \"./parse.y\"\n+#line 2068 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 441:\n-#line 2069 \"./parse.y\"\n+#line 2070 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2075 \"./parse.y\"\n+#line 2076 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2080 \"./parse.y\"\n+#line 2081 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 445:\n-#line 2085 \"./parse.y\"\n+#line 2086 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 446:\n-#line 2087 \"./parse.y\"\n+#line 2088 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2093 \"./parse.y\"\n+#line 2094 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2098 \"./parse.y\"\n+#line 2099 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2103 \"./parse.y\"\n+#line 2104 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2108 \"./parse.y\"\n+#line 2109 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2110 \"./parse.y\"\n+#line 2111 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 453:\n-#line 2112 \"./parse.y\"\n+#line 2113 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2118 \"./parse.y\"\n+#line 2119 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2123 \"./parse.y\"\n+#line 2124 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2128 \"./parse.y\"\n+#line 2129 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2133 \"./parse.y\"\n+#line 2134 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2138 \"./parse.y\"\n+#line 2139 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 460:\n-#line 2140 \"./parse.y\"\n+#line 2141 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2142 \"./parse.y\"\n+#line 2143 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2144 \"./parse.y\"\n+#line 2145 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2146 \"./parse.y\"\n+#line 2147 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2148 \"./parse.y\"\n+#line 2149 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 466:\n-#line 2154 \"./parse.y\"\n+#line 2155 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2159 \"./parse.y\"\n+#line 2160 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 468:\n-#line 2164 \"./parse.y\"\n+#line 2165 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 469:\n-#line 2166 \"./parse.y\"\n+#line 2167 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2172 \"./parse.y\"\n+#line 2173 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 472:\n-#line 2177 \"./parse.y\"\n+#line 2178 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 474:\n-#line 2183 \"./parse.y\"\n+#line 2184 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 475:\n-#line 2188 \"./parse.y\"\n+#line 2189 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 477:\n-#line 2194 \"./parse.y\"\n+#line 2195 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 478:\n-#line 2199 \"./parse.y\"\n+#line 2200 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 480:\n-#line 2205 \"./parse.y\"\n+#line 2206 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 481:\n-#line 2210 \"./parse.y\"\n+#line 2211 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 483:\n-#line 2216 \"./parse.y\"\n+#line 2217 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 484:\n-#line 2221 \"./parse.y\"\n+#line 2222 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 486:\n-#line 2227 \"./parse.y\"\n+#line 2228 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 487:\n-#line 2232 \"./parse.y\"\n+#line 2233 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 488:\n-#line 2238 \"./parse.y\"\n+#line 2239 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 489:\n-#line 2240 \"./parse.y\"\n+#line 2241 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 492:\n-#line 2250 \"./parse.y\"\n+#line 2251 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 493:\n-#line 2252 \"./parse.y\"\n+#line 2253 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4679,7 +4680,7 @@ case 493:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/lib/bison.simple\"\n+#line 498 \"/usr/local/gnu/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4875,12 +4876,10 @@ case 493:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2278 \"./parse.y\"\n+#line 2279 \"./parse.y\"\n \n \f\n \n-#include \"lex.c\"\n-\n /* Flag for the error report routine to issue the error the first time\n    it's called (overriding the default behavior which is to drop the\n    first invocation and honor the second one, taking advantage of a\n@@ -5562,7 +5561,7 @@ create_class (flags, id, super, interfaces)\n {\n   tree raw_name = EXPR_WFL_NODE (id);\n   tree class_id, decl;\n-  tree super_decl = NULL, super_decl_type;\n+  tree super_decl_type;\n \n   class_id = parser_qualified_classname (id);\n   decl = IDENTIFIER_CLASS_VALUE (class_id);\n@@ -5941,6 +5940,7 @@ method_header (flags, type, mdecl, throws)\n       if (!(flags & ACC_ABSTRACT))\n         MODIFIER_WFL (ABSTRACT_TK) = NULL;\n       flags |= ACC_PUBLIC;\n+      flags |= ACC_ABSTRACT;\n     }\n \n   /* Modifiers context reset moved up, so abstract method declaration\n@@ -6975,7 +6975,7 @@ get_printable_method_name (decl)\n      tree decl;\n {\n   char *to_return;\n-  tree name;\n+  tree name = NULL_TREE;\n \n   if (DECL_CONSTRUCTOR_P (decl))\n     {\n@@ -8519,7 +8519,7 @@ make_qualified_primary (primary, right, location)\n      different form than a SUPER. Turn THIS into something symbolic */\n   if (TREE_CODE (primary) == THIS_EXPR)\n     {\n-      wfl = build_wfl_node (this_identifier_node, input_filename, 0, 0);\n+      wfl = build_wfl_node (this_identifier_node);\n       EXPR_WFL_LINECOL (wfl) = EXPR_WFL_LINECOL (primary);\n       wfl = make_qualified_name (wfl, right, location);\n       PRIMARY_P (wfl) = 1;\n@@ -10929,8 +10929,7 @@ build_super_invocation ()\n     return empty_stmt_node;\n   else\n     {\n-      tree super_wfl = build_wfl_node (super_identifier_node, \n-\t\t\t\t       input_filename, 0, 0);\n+      tree super_wfl = build_wfl_node (super_identifier_node);\n       return build_method_invocation (super_wfl, NULL_TREE);\n     }\n }\n@@ -10946,8 +10945,7 @@ build_this_super_qualified_invocation (use_this, name, args, lloc, rloc)\n {\n   tree invok;\n   tree wfl = \n-    build_wfl_node ((use_this ? this_identifier_node : super_identifier_node),\n-\t\t    input_filename, 0, 0);\n+    build_wfl_node (use_this ? this_identifier_node : super_identifier_node);\n   EXPR_WFL_LINECOL (wfl) = lloc;\n   invok = build_method_invocation (name, args);\n   return make_qualified_primary (wfl, invok, rloc);\n@@ -12815,7 +12813,7 @@ static tree\n build_this (location)\n      int location;\n {\n-  tree node = build_wfl_node (this_identifier_node, input_filename, 0, 0);\n+  tree node = build_wfl_node (this_identifier_node);\n   TREE_SET_CODE (node, THIS_EXPR);\n   EXPR_WFL_LINECOL (node) = location;\n   return node;"}, {"sha": "f06ee9f1a5aa45380cfe451f8a618e94f4a4351f", "filename": "gcc/java/parse.y", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=9ee9b555021cd59c28ca989a4cdeff4cc0f9cbcc", "patch": "@@ -303,6 +303,10 @@ static tree java_lang_cloneable = NULL_TREE;\n   int value;\n }\n \n+%{\n+#include \"lex.c\"\n+%}\n+\n %pure_parser\n \n /* Things defined here have to match the order of what's in the\n@@ -1010,15 +1014,13 @@ explicit_constructor_invocation:\n this_or_super:\t\t\t/* Added, simplifies error diagnostics */\n \tTHIS_TK\n \t\t{\n-\t\t  tree wfl = build_wfl_node (this_identifier_node, \n-\t\t\t\t\t     input_filename, 0, 0);\n+\t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = $1.location;\n \t\t  $$ = wfl;\n \t\t}\n |\tSUPER_TK\n \t\t{\n-\t\t  tree wfl = build_wfl_node (super_identifier_node,\n-\t\t\t\t\t     input_filename, 0, 0);\n+\t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = $1.location;\n \t\t  $$ = wfl;\n \t\t}\n@@ -1861,8 +1863,7 @@ field_access:\n |\tSUPER_TK DOT_TK identifier\n \t\t{\n \t\t  tree super_wfl = \n-\t\t    build_wfl_node (super_identifier_node, \n-\t\t\t\t    input_filename, 0, 0);\n+\t\t    build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (super_wfl) = $1.location;\n \t\t  $$ = make_qualified_name (super_wfl, $3, $2.location);\n \t\t}\n@@ -2278,8 +2279,6 @@ constant_expression:\n %%\n \f\n \n-#include \"lex.c\"\n-\n /* Flag for the error report routine to issue the error the first time\n    it's called (overriding the default behavior which is to drop the\n    first invocation and honor the second one, taking advantage of a\n@@ -2961,7 +2960,7 @@ create_class (flags, id, super, interfaces)\n {\n   tree raw_name = EXPR_WFL_NODE (id);\n   tree class_id, decl;\n-  tree super_decl = NULL, super_decl_type;\n+  tree super_decl_type;\n \n   class_id = parser_qualified_classname (id);\n   decl = IDENTIFIER_CLASS_VALUE (class_id);\n@@ -4375,7 +4374,7 @@ get_printable_method_name (decl)\n      tree decl;\n {\n   char *to_return;\n-  tree name;\n+  tree name = NULL_TREE;\n \n   if (DECL_CONSTRUCTOR_P (decl))\n     {\n@@ -5919,7 +5918,7 @@ make_qualified_primary (primary, right, location)\n      different form than a SUPER. Turn THIS into something symbolic */\n   if (TREE_CODE (primary) == THIS_EXPR)\n     {\n-      wfl = build_wfl_node (this_identifier_node, input_filename, 0, 0);\n+      wfl = build_wfl_node (this_identifier_node);\n       EXPR_WFL_LINECOL (wfl) = EXPR_WFL_LINECOL (primary);\n       wfl = make_qualified_name (wfl, right, location);\n       PRIMARY_P (wfl) = 1;\n@@ -8329,8 +8328,7 @@ build_super_invocation ()\n     return empty_stmt_node;\n   else\n     {\n-      tree super_wfl = build_wfl_node (super_identifier_node, \n-\t\t\t\t       input_filename, 0, 0);\n+      tree super_wfl = build_wfl_node (super_identifier_node);\n       return build_method_invocation (super_wfl, NULL_TREE);\n     }\n }\n@@ -8346,8 +8344,7 @@ build_this_super_qualified_invocation (use_this, name, args, lloc, rloc)\n {\n   tree invok;\n   tree wfl = \n-    build_wfl_node ((use_this ? this_identifier_node : super_identifier_node),\n-\t\t    input_filename, 0, 0);\n+    build_wfl_node (use_this ? this_identifier_node : super_identifier_node);\n   EXPR_WFL_LINECOL (wfl) = lloc;\n   invok = build_method_invocation (name, args);\n   return make_qualified_primary (wfl, invok, rloc);\n@@ -10215,7 +10212,7 @@ static tree\n build_this (location)\n      int location;\n {\n-  tree node = build_wfl_node (this_identifier_node, input_filename, 0, 0);\n+  tree node = build_wfl_node (this_identifier_node);\n   TREE_SET_CODE (node, THIS_EXPR);\n   EXPR_WFL_LINECOL (node) = location;\n   return node;"}]}