{"sha": "570215f99d7ea33be820a1c5512ff885d7ca9f36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcwMjE1Zjk5ZDdlYTMzYmU4MjBhMWM1NTEyZmY4ODVkN2NhOWYzNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-03-01T00:17:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-03-01T00:17:09Z"}, "message": "re PR c++/58678 (pykde4-4.11.2 link error (devirtualization too trigger happy))\n\n\tPR c++/58678\n\t* ipa-devirt.c (ipa_devirt): Don't choose an implicitly-declared\n\tfunction.\n\nFrom-SVN: r208241", "tree": {"sha": "d1938735e3056002352e997933aca0c2bd44d7cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1938735e3056002352e997933aca0c2bd44d7cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/570215f99d7ea33be820a1c5512ff885d7ca9f36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570215f99d7ea33be820a1c5512ff885d7ca9f36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570215f99d7ea33be820a1c5512ff885d7ca9f36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570215f99d7ea33be820a1c5512ff885d7ca9f36/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e73cafdee12fc5658d556990aa0add6c98b9ab2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73cafdee12fc5658d556990aa0add6c98b9ab2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73cafdee12fc5658d556990aa0add6c98b9ab2b"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "56da66051d2d5c637338610e3c0ed162e3276c15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570215f99d7ea33be820a1c5512ff885d7ca9f36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570215f99d7ea33be820a1c5512ff885d7ca9f36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=570215f99d7ea33be820a1c5512ff885d7ca9f36", "patch": "@@ -1,3 +1,9 @@\n+2014-02-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/58678\n+\t* ipa-devirt.c (ipa_devirt): Don't choose an implicitly-declared\n+\tfunction.\n+\n 2014-02-28  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/60314"}, {"sha": "2f84f177d1929e88bb9e1d78f72ff162511bad65", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570215f99d7ea33be820a1c5512ff885d7ca9f36/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570215f99d7ea33be820a1c5512ff885d7ca9f36/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=570215f99d7ea33be820a1c5512ff885d7ca9f36", "patch": "@@ -1710,7 +1710,7 @@ ipa_devirt (void)\n \n   int npolymorphic = 0, nspeculated = 0, nconverted = 0, ncold = 0;\n   int nmultiple = 0, noverwritable = 0, ndevirtualized = 0, nnotdefined = 0;\n-  int nwrong = 0, nok = 0, nexternal = 0;;\n+  int nwrong = 0, nok = 0, nexternal = 0, nartificial = 0;\n \n   FOR_EACH_DEFINED_FUNCTION (n)\n     {\t\n@@ -1820,6 +1820,17 @@ ipa_devirt (void)\n \t\tnexternal++;\n \t\tcontinue;\n \t      }\n+\t    /* Don't use an implicitly-declared destructor (c++/58678).  */\n+\t    struct cgraph_node *non_thunk_target\n+\t      = cgraph_function_node (likely_target);\n+\t    if (DECL_ARTIFICIAL (non_thunk_target->decl)\n+\t\t&& DECL_COMDAT (non_thunk_target->decl))\n+\t      {\n+\t\tif (dump_file)\n+\t\t  fprintf (dump_file, \"Target is artificial\\n\\n\");\n+\t\tnartificial++;\n+\t\tcontinue;\n+\t      }\n \t    if (cgraph_function_body_availability (likely_target)\n \t\t<= AVAIL_OVERWRITABLE\n \t\t&& symtab_can_be_discarded (likely_target))\n@@ -1862,10 +1873,10 @@ ipa_devirt (void)\n \t     \" %i speculatively devirtualized, %i cold\\n\"\n \t     \"%i have multiple targets, %i overwritable,\"\n \t     \" %i already speculated (%i agree, %i disagree),\"\n-\t     \" %i external, %i not defined\\n\",\n+\t     \" %i external, %i not defined, %i artificial\\n\",\n \t     npolymorphic, ndevirtualized, nconverted, ncold,\n \t     nmultiple, noverwritable, nspeculated, nok, nwrong,\n-\t     nexternal, nnotdefined);\n+\t     nexternal, nnotdefined, nartificial);\n   return ndevirtualized ? TODO_remove_functions : 0;\n }\n "}, {"sha": "e18b8189716fe7dacd4b903a41be1954db8acfef", "filename": "gcc/testsuite/g++.dg/ipa/devirt-28.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570215f99d7ea33be820a1c5512ff885d7ca9f36/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570215f99d7ea33be820a1c5512ff885d7ca9f36/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-28.C?ref=570215f99d7ea33be820a1c5512ff885d7ca9f36", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/58678\n+// { dg-options \"-O3 -fdump-ipa-devirt\" }\n+\n+struct A {\n+  virtual ~A();\n+};\n+struct B : A {\n+  virtual int m_fn1();\n+};\n+void fn1(B* b) {\n+  delete b;\n+}\n+\n+// { dg-final { scan-assembler-not \"_ZN1AD2Ev\" } }\n+// { dg-final { scan-assembler-not \"_ZN1BD0Ev\" } }\n+// { dg-final { scan-ipa-dump \"Target is artificial\" \"devirt\" } }\n+// { dg-final { cleanup-ipa-dump \"devirt\" } }"}]}