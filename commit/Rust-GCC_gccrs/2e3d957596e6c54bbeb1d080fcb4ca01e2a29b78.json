{"sha": "2e3d957596e6c54bbeb1d080fcb4ca01e2a29b78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUzZDk1NzU5NmU2YzU0YmJlYjFkMDgwZmNiNGNhMDFlMmEyOWI3OA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-15T01:45:57Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-15T01:45:57Z"}, "message": "Don't store error types in the Type-to-GENERIC hash table.\n\nFrom-SVN: r167838", "tree": {"sha": "8e4ef9538f6370c922253d92692f61f29953623e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e4ef9538f6370c922253d92692f61f29953623e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e3d957596e6c54bbeb1d080fcb4ca01e2a29b78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3d957596e6c54bbeb1d080fcb4ca01e2a29b78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e3d957596e6c54bbeb1d080fcb4ca01e2a29b78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3d957596e6c54bbeb1d080fcb4ca01e2a29b78/comments", "author": null, "committer": null, "parents": [{"sha": "3db1a28cced42f050f27fb7669101ab2193d9027", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db1a28cced42f050f27fb7669101ab2193d9027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3db1a28cced42f050f27fb7669101ab2193d9027"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "e0b039fb2b637cf9c3ce53de681fd7189bb6c55c", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3d957596e6c54bbeb1d080fcb4ca01e2a29b78/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3d957596e6c54bbeb1d080fcb4ca01e2a29b78/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=2e3d957596e6c54bbeb1d080fcb4ca01e2a29b78", "patch": "@@ -791,6 +791,9 @@ Type::get_tree(Gogo* gogo)\n       || this->named_type() != NULL)\n     return this->get_tree_without_hash(gogo);\n \n+  if (this->is_error_type())\n+    return error_mark_node;\n+\n   // To avoid confusing GIMPLE, we need to translate all identical Go\n   // types to the same GIMPLE type.  We use a hash table to do that.\n   // There is no need to use the hash table for named types, as named\n@@ -807,6 +810,14 @@ Type::get_tree(Gogo* gogo)\n \n   tree t = this->get_tree_without_hash(gogo);\n \n+  // Don't store errors in the hash table.  This type might be a\n+  // pointer to an error type or something like that.  Since error\n+  // types are identical to everything else, that could cause us to\n+  // return error_mark_node for pointers to any type, which will then\n+  // confuse us later.\n+  if (t == error_mark_node)\n+    return error_mark_node;\n+\n   if (ins.first->second == NULL_TREE)\n     ins.first->second = t;\n   else"}]}