{"sha": "a5f87af7edff53d77f51ba253da42dbfc74ada58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVmODdhZjdlZGZmNTNkNzdmNTFiYTI1M2RhNDJkYmZjNzRhZGE1OA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-02-18T09:46:19Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-02-18T09:46:19Z"}, "message": "Use 1UL constant in order to not overflow (PR c++/89383).\n\n2019-02-18  Martin Liska  <mliska@suse.cz>\n\n\tPR c++/89383\n\t* line-map.c (linemap_line_start): Use 1UL in order\n\tto not overflow.\n\nFrom-SVN: r268981", "tree": {"sha": "f51cf0bf3c676fa8957800bbdfdc02e623a870d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f51cf0bf3c676fa8957800bbdfdc02e623a870d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5f87af7edff53d77f51ba253da42dbfc74ada58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5f87af7edff53d77f51ba253da42dbfc74ada58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5f87af7edff53d77f51ba253da42dbfc74ada58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5f87af7edff53d77f51ba253da42dbfc74ada58/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "469b4adb4fec2b61caee16ed982f5fab333e784b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/469b4adb4fec2b61caee16ed982f5fab333e784b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/469b4adb4fec2b61caee16ed982f5fab333e784b"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "fa2fa7d97e87686095debbc2f31f32ca484b7ea0", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f87af7edff53d77f51ba253da42dbfc74ada58/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f87af7edff53d77f51ba253da42dbfc74ada58/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=a5f87af7edff53d77f51ba253da42dbfc74ada58", "patch": "@@ -1,3 +1,9 @@\n+2019-02-18  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c++/89383\n+\t* line-map.c (linemap_line_start): Use 1UL in order\n+\tto not overflow.\n+\n 2019-02-11  Martin Liska  <mliska@suse.cz>\n \n \tPR lto/88147"}, {"sha": "b73f5067c2449ea9ac963eb8ae342f1912fa1c40", "filename": "libcpp/line-map.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f87af7edff53d77f51ba253da42dbfc74ada58/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f87af7edff53d77f51ba253da42dbfc74ada58/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=a5f87af7edff53d77f51ba253da42dbfc74ada58", "patch": "@@ -745,7 +745,8 @@ linemap_line_start (struct line_maps *set, linenum_type to_line,\n \t  || ( /* We can't reuse the map if the line offset is sufficiently\n \t\t  large to cause overflow when computing location_t values.  */\n \t      (to_line - ORDINARY_MAP_STARTING_LINE_NUMBER (map))\n-\t      >= (1U << (CHAR_BIT * sizeof (linenum_type) - column_bits)))\n+\t      >= (((uint64_t) 1)\n+\t\t  << (CHAR_BIT * sizeof (linenum_type) - column_bits)))\n \t  || range_bits < map->m_range_bits)\n \tmap = linemap_check_ordinary\n \t        (const_cast <line_map *>"}]}