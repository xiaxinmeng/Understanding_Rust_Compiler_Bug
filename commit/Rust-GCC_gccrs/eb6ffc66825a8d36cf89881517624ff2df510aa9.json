{"sha": "eb6ffc66825a8d36cf89881517624ff2df510aa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI2ZmZjNjY4MjVhOGQzNmNmODk4ODE1MTc2MjRmZjJkZjUxMGFhOQ==", "commit": {"author": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2018-09-05T15:31:13Z"}, "committer": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2018-09-05T15:31:13Z"}, "message": "PR52665 do not let .ident confuse assembler scan tests\n\nA branch with a name matching scan-assembler pattern triggers\ninappropriate FAIL.\n\nE.g. branch fixups-testsuite and\n- gcc.target/i386/pr65871-?.c (scan-assembler-not \"test\")\n- gcc.target/i386/pr41442.c (scan-assembler-times \"test|cmp\" 2)\netc.\n\nThis is a recurring problem as can be seen by some -fno-ident additions\nby commits from e.g. Michael Meissner over the years: builtins-58.c,\npowerpc/pr46728-?.c\n\nThe patch below adds -fno-ident if a testcase contains one of\nscan-assembler, scan-assembler-not or scan-assembler-times.\n\nRegression tested on x86_64-unknown-linux on a fixups-testsuite branch\nwhere it fixes several false FAILs without regressions.\n\ngcc/testsuite/ChangeLog\n\n2016-06-18  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n\n        PR testsuite/52665\n        * lib/gcc-dg.exp (gcc-dg-test-1): Iterate over _required_options.\n        * lib/target-supports.exp (scan-assembler_required_options,\n        scan-assembler-not_required_options,\n        scan-assembler-times_required_options): Add -fno-ident.\n        * lib/scanasm.exp (scan-assembler-times): Fix error message.\n        * c-c++-common/ident-0a.c: New test.\n        * c-c++-common/ident-0b.c: New test.\n        * c-c++-common/ident-1a.c: New test.\n        * c-c++-common/ident-1b.c: New test.\n        * c-c++-common/ident-2a.c: New test.\n        * c-c++-common/ident-2b.c: New test.\n\nFrom-SVN: r264128", "tree": {"sha": "fea683291168f6317f48364a2af269ba683a31d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fea683291168f6317f48364a2af269ba683a31d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb6ffc66825a8d36cf89881517624ff2df510aa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb6ffc66825a8d36cf89881517624ff2df510aa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb6ffc66825a8d36cf89881517624ff2df510aa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb6ffc66825a8d36cf89881517624ff2df510aa9/comments", "author": null, "committer": null, "parents": [{"sha": "cfaa1c89088155ae4d249b7a6659017fc8864f76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfaa1c89088155ae4d249b7a6659017fc8864f76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfaa1c89088155ae4d249b7a6659017fc8864f76"}], "stats": {"total": 73, "additions": 70, "deletions": 3}, "files": [{"sha": "6936dd543f37de26b699552fa084686190499b37", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eb6ffc66825a8d36cf89881517624ff2df510aa9", "patch": "@@ -1,3 +1,18 @@\n+2018-09-05  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\tPR testsuite/52665\n+\t* lib/gcc-dg.exp (gcc-dg-test-1): Iterate over _required_options.\n+\t* lib/target-supports.exp (scan-assembler_required_options,\n+\tscan-assembler-not_required_options,\n+\tscan-assembler-times_required_options): Add -fno-ident.\n+\t* lib/scanasm.exp (scan-assembler-times): Fix error message.\n+\t* c-c++-common/ident-0a.c: New test.\n+\t* c-c++-common/ident-0b.c: New test.\n+\t* c-c++-common/ident-1a.c: New test.\n+\t* c-c++-common/ident-1b.c: New test.\n+\t* c-c++-common/ident-2a.c: New test.\n+\t* c-c++-common/ident-2b.c: New test.\n+\n 2018-09-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.dg/recip_sqrt_mult_1.c: New test."}, {"sha": "900d206bad7d208ff5cdb0db12d3ae93359200fa", "filename": "gcc/testsuite/c-c++-common/ident-0a.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-0a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-0a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-0a.c?ref=eb6ffc66825a8d36cf89881517624ff2df510aa9", "patch": "@@ -0,0 +1,6 @@\n+/* PR testsuite/52665\n+ * Make sure scan-assembler-not turns off .ident  */\n+/* { dg-do compile } */\n+int i;\n+\n+/* { dg-final { scan-assembler-not \"GCC: \" } } */"}, {"sha": "e08126d2d23f01f3c9f2ff692e39ffadf8eb1544", "filename": "gcc/testsuite/c-c++-common/ident-0b.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-0b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-0b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-0b.c?ref=eb6ffc66825a8d36cf89881517624ff2df510aa9", "patch": "@@ -0,0 +1,10 @@\n+/* PR testsuite/52665\n+ * Make sure scan-assembler-not turns off .ident unless -fident in testcase */\n+/* { dg-do compile } */\n+/* { dg-options \"-fident\" } */\n+int i;\n+\n+/* { dg-final { scan-assembler-not \"GCC: \" { xfail *-*-* } } } */\n+/* The testsuite saw scan-assembler-not and turned off .ident so the above\n+ * has to fail for proper operation since the testsuite itself forced\n+ * -fident on again.  */"}, {"sha": "867ee43fb2658775ccbc689b54c9be72181875d5", "filename": "gcc/testsuite/c-c++-common/ident-1a.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-1a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-1a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-1a.c?ref=eb6ffc66825a8d36cf89881517624ff2df510aa9", "patch": "@@ -0,0 +1,8 @@\n+/* PR testsuite/52665\n+ * Make sure scan-assembler turns off .ident  */\n+/* { dg-do compile } */\n+int i;\n+\n+/* { dg-final { scan-assembler \"GCC: \" { xfail *-*-* } } } */\n+/* The testsuite saw scan-assembler and turned off .ident so the above\n+ * has to fail for proper operation.  */"}, {"sha": "2431086d247e200e073f6fe9223065524ea5c6c0", "filename": "gcc/testsuite/c-c++-common/ident-1b.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-1b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-1b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-1b.c?ref=eb6ffc66825a8d36cf89881517624ff2df510aa9", "patch": "@@ -0,0 +1,7 @@\n+/* PR testsuite/52665\n+ * Make sure scan-assembler turns off .ident unless -fident in testcase */\n+/* { dg-do compile } */\n+/* { dg-options \"-fident\" } */\n+int i;\n+\n+/* { dg-final { scan-assembler \"GCC: \" } } */"}, {"sha": "131b8676281d1abc44f13d75588ba128badc035a", "filename": "gcc/testsuite/c-c++-common/ident-2a.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-2a.c?ref=eb6ffc66825a8d36cf89881517624ff2df510aa9", "patch": "@@ -0,0 +1,6 @@\n+/* PR testsuite/52665\n+ * Make sure scan-assembler-times turns off .ident  */\n+/* { dg-do compile } */\n+int i;\n+\n+/* { dg-final { scan-assembler-times \"GCC: \" 0 } } */ /* internal test, keep -times 0 ! */"}, {"sha": "a21e25fcceb3402c6fce7ad52583a13104c3aacd", "filename": "gcc/testsuite/c-c++-common/ident-2b.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-2b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-2b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fident-2b.c?ref=eb6ffc66825a8d36cf89881517624ff2df510aa9", "patch": "@@ -0,0 +1,7 @@\n+/* PR testsuite/52665\n+ * Make sure scan-assembler-times turns off .ident unless -fident in testcase */\n+/* { dg-do compile } */\n+/* { dg-options \"-fident\" } */\n+int ident;\n+\n+/* { dg-final { scan-assembler-times \"GCC: \" 1 } } */"}, {"sha": "24d0b00d25d21c070d6c8aee0fecac5edafcb720", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=eb6ffc66825a8d36cf89881517624ff2df510aa9", "patch": "@@ -299,9 +299,11 @@ proc gcc-dg-test-1 { target_compile prog do_what extra_tool_flags } {\n     foreach x [split $finalcode \"\\n\"] {\n \tset finalcmd [lindex $x 0]\n \tif { [info procs ${finalcmd}_required_options] != \"\" } {\n-\t    set req [${finalcmd}_required_options]\n-\t    if { $req != \"\" && [lsearch -exact $extra_tool_flags $req] == -1 } {\n-\t\tlappend extra_tool_flags $req\n+\t    foreach req [${finalcmd}_required_options] {\n+\t\tif { $req != \"\"\n+\t\t     && [lsearch -exact $extra_tool_flags $req] == -1 } {\n+\t\t    lappend extra_tool_flags $req\n+\t\t}\n \t    }\n \t}\n     }"}, {"sha": "94f61c58df9ba09fdbef26201a92754b4702786c", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb6ffc66825a8d36cf89881517624ff2df510aa9/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=eb6ffc66825a8d36cf89881517624ff2df510aa9", "patch": "@@ -8895,6 +8895,12 @@ proc force_conventional_output_for { test } {\n     }\n     proc ${test}_required_options {} {\n \tglobal gcc_force_conventional_output\n+\tupvar 1 extra_tool_flags extra_tool_flags\n+\tif {[regexp -- \"^scan-assembler\" [info level 0]]\n+\t    && ![string match \"*-fident*\" $extra_tool_flags]} {\n+\t    # Do not let .ident confuse assembler scan tests\n+\t    return [list $gcc_force_conventional_output \"-fno-ident\"]\n+\t}\n \treturn $gcc_force_conventional_output\n     }\n }"}]}