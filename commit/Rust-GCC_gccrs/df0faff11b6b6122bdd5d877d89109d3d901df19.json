{"sha": "df0faff11b6b6122bdd5d877d89109d3d901df19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYwZmFmZjExYjZiNjEyMmJkZDVkODc3ZDg5MTA5ZDNkOTAxZGYxOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-10-09T20:42:42Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-10-09T20:42:42Z"}, "message": "(store_constructor): Delete unnecessary increment.\n\nFrom-SVN: r12940", "tree": {"sha": "9ec261b59b652334ca96cac6d487cd04b3313815", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ec261b59b652334ca96cac6d487cd04b3313815"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df0faff11b6b6122bdd5d877d89109d3d901df19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0faff11b6b6122bdd5d877d89109d3d901df19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df0faff11b6b6122bdd5d877d89109d3d901df19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0faff11b6b6122bdd5d877d89109d3d901df19/comments", "author": null, "committer": null, "parents": [{"sha": "80159a941c987442eb4d1e5f203b2ff432264373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80159a941c987442eb4d1e5f203b2ff432264373", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80159a941c987442eb4d1e5f203b2ff432264373"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8b22d630c913a8068c0b5e01417d4112928608cd", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0faff11b6b6122bdd5d877d89109d3d901df19/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0faff11b6b6122bdd5d877d89109d3d901df19/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=df0faff11b6b6122bdd5d877d89109d3d901df19", "patch": "@@ -3596,7 +3596,7 @@ store_constructor (exp, target, cleared)\n \t     It is also needed to check for missing elements.  */\n \t  for (elt = CONSTRUCTOR_ELTS (exp);\n \t       elt != NULL_TREE;\n-\t       elt = TREE_CHAIN (elt), i++)\n+\t       elt = TREE_CHAIN (elt))\n \t    {\n \t      tree index = TREE_PURPOSE (elt);\n \t      HOST_WIDE_INT this_node_count;"}]}