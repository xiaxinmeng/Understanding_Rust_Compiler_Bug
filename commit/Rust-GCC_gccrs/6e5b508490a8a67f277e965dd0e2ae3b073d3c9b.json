{"sha": "6e5b508490a8a67f277e965dd0e2ae3b073d3c9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU1YjUwODQ5MGE4YTY3ZjI3N2U5NjVkZDBlMmFlM2IwNzNkM2M5Yg==", "commit": {"author": {"name": "Jeroen Frijters", "email": "jeroen@frijters.net", "date": "2004-11-18T20:24:33Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-11-18T20:24:33Z"}, "message": "2004-11-18  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* java/net/URLStreamHandler.java\n\t(parseURL): Fixed file path canonicalisation.\n\nFrom-SVN: r90880", "tree": {"sha": "c7d4512809b5b3e84e209a40c6e526f523effae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7d4512809b5b3e84e209a40c6e526f523effae7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e5b508490a8a67f277e965dd0e2ae3b073d3c9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e5b508490a8a67f277e965dd0e2ae3b073d3c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e5b508490a8a67f277e965dd0e2ae3b073d3c9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e5b508490a8a67f277e965dd0e2ae3b073d3c9b/comments", "author": {"login": "jfrijters", "id": 2994393, "node_id": "MDQ6VXNlcjI5OTQzOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2994393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfrijters", "html_url": "https://github.com/jfrijters", "followers_url": "https://api.github.com/users/jfrijters/followers", "following_url": "https://api.github.com/users/jfrijters/following{/other_user}", "gists_url": "https://api.github.com/users/jfrijters/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfrijters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfrijters/subscriptions", "organizations_url": "https://api.github.com/users/jfrijters/orgs", "repos_url": "https://api.github.com/users/jfrijters/repos", "events_url": "https://api.github.com/users/jfrijters/events{/privacy}", "received_events_url": "https://api.github.com/users/jfrijters/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c521478a7370617568dae0036ab9666a25e52f49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c521478a7370617568dae0036ab9666a25e52f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c521478a7370617568dae0036ab9666a25e52f49"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "6aeddd60733fcd731f6cb71d2310664888ca53c8", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e5b508490a8a67f277e965dd0e2ae3b073d3c9b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e5b508490a8a67f277e965dd0e2ae3b073d3c9b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6e5b508490a8a67f277e965dd0e2ae3b073d3c9b", "patch": "@@ -3,6 +3,11 @@\n \t* java/net/URLStreamHandler.java\n \t(parseURL): Fixed file path canonicalisation.\n \n+2004-11-18  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* java/net/URLStreamHandler.java\n+\t(parseURL): Fixed file path canonicalisation.\n+\n 2004-11-18  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/URLClassLoader.java: Whitespace cleanup."}, {"sha": "fbe863f24c0ea1ca14c8097a1ac929544df27da1", "filename": "libjava/java/net/URLStreamHandler.java", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e5b508490a8a67f277e965dd0e2ae3b073d3c9b/libjava%2Fjava%2Fnet%2FURLStreamHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e5b508490a8a67f277e965dd0e2ae3b073d3c9b/libjava%2Fjava%2Fnet%2FURLStreamHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLStreamHandler.java?ref=6e5b508490a8a67f277e965dd0e2ae3b073d3c9b", "patch": "@@ -214,23 +214,9 @@ else if (start < end)\n \t  file = (file.substring(0, lastSlash)\n \t\t  + '/' + spec.substring(start, end));\n \n-\tif (url.getProtocol().equals(\"file\"))\n-\t  {\n-\t    // For \"file\" URLs constructed relative to a context, we\n-\t    // need to canonicalise the file path.\n-\t    try\n-\t      {\n-\t\tboolean endsWithSlash = file.charAt(file.length() - 1) == '/';\n-\t\tfile = new File(file).getCanonicalPath();\n-\t\tfile = file.replace(separator, '/');\n-\t\tif (endsWithSlash && file.charAt(file.length() - 1) != '/')\n-\t\t  file += '/';\n-\t      }\n-\t    catch (IOException e)\n-\t      {\n-\t\t// Do nothing.\n-\t      }\n-\t  }\n+\t// For URLs constructed relative to a context, we\n+\t// need to canonicalise the file path.\n+\tfile = canonicalizeFilename(file);\n \n \tref = null;\n       }"}]}