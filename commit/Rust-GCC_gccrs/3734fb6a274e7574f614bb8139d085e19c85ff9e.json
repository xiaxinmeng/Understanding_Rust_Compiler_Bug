{"sha": "3734fb6a274e7574f614bb8139d085e19c85ff9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzczNGZiNmEyNzRlNzU3NGY2MTRiYjgxMzlkMDg1ZTE5Yzg1ZmY5ZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2019-04-19T15:36:20Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2019-04-19T15:36:20Z"}, "message": "re PR c++/89900 (ICE: Segmentation fault (in check_instantiated_arg))\n\n/cp\n2019-04-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/89900\n\t* pt.c (fn_type_unification): When handling null explicit\n\targuments do not special case non-parameter packs.\n\n/testsuite\n2019-04-19  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/89900\n\t* g++.dg/cpp0x/pr89900-1.C: New.\n\t* g++.dg/cpp0x/pr89900-2.C: Likewise.\n\t* g++.dg/cpp0x/pr89900-3.C: Likewise.\n\t* g++.dg/cpp0x/pr89900-4.C: Likewise.\n\nFrom-SVN: r270459", "tree": {"sha": "976f7c96dfe1025d98e91210cb01ca0d748966dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/976f7c96dfe1025d98e91210cb01ca0d748966dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3734fb6a274e7574f614bb8139d085e19c85ff9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3734fb6a274e7574f614bb8139d085e19c85ff9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3734fb6a274e7574f614bb8139d085e19c85ff9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3734fb6a274e7574f614bb8139d085e19c85ff9e/comments", "author": null, "committer": null, "parents": [{"sha": "f4488799b2827c9db0c13b356055f9bba0e315b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4488799b2827c9db0c13b356055f9bba0e315b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4488799b2827c9db0c13b356055f9bba0e315b6"}], "stats": {"total": 68, "additions": 59, "deletions": 9}, "files": [{"sha": "8eb2953e051e96c6e8c3678f61add7bc903eaa18", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3734fb6a274e7574f614bb8139d085e19c85ff9e", "patch": "@@ -1,3 +1,9 @@\n+2019-04-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/89900\n+\t* pt.c (fn_type_unification): When handling null explicit\n+\targuments do not special case non-parameter packs.\n+\n 2019-04-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/90138"}, {"sha": "6d4140fb018eacb998a75de54ea69c95f566ae50", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3734fb6a274e7574f614bb8139d085e19c85ff9e", "patch": "@@ -20179,21 +20179,17 @@ fn_type_unification (tree fn,\n               parameter_pack = TEMPLATE_PARM_PARAMETER_PACK (parm);\n             }\n \n-\t  if (!parameter_pack && targ == NULL_TREE)\n+\t  if (targ == NULL_TREE)\n \t    /* No explicit argument for this template parameter.  */\n \t    incomplete = true;\n-\n-          if (parameter_pack && pack_deducible_p (parm, fn))\n+\t  else if (parameter_pack && pack_deducible_p (parm, fn))\n             {\n               /* Mark the argument pack as \"incomplete\". We could\n                  still deduce more arguments during unification.\n \t         We remove this mark in type_unification_real.  */\n-              if (targ)\n-                {\n-                  ARGUMENT_PACK_INCOMPLETE_P(targ) = 1;\n-                  ARGUMENT_PACK_EXPLICIT_ARGS (targ) \n-                    = ARGUMENT_PACK_ARGS (targ);\n-                }\n+\t      ARGUMENT_PACK_INCOMPLETE_P(targ) = 1;\n+\t      ARGUMENT_PACK_EXPLICIT_ARGS (targ)\n+\t\t= ARGUMENT_PACK_ARGS (targ);\n \n               /* We have some incomplete argument packs.  */\n               incomplete = true;"}, {"sha": "653c20113c64470beb9a6067ef65426d30db988d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3734fb6a274e7574f614bb8139d085e19c85ff9e", "patch": "@@ -1,3 +1,11 @@\n+2019-04-19  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/89900\n+\t* g++.dg/cpp0x/pr89900-1.C: New.\n+\t* g++.dg/cpp0x/pr89900-2.C: Likewise.\n+\t* g++.dg/cpp0x/pr89900-3.C: Likewise.\n+\t* g++.dg/cpp0x/pr89900-4.C: Likewise.\n+\n 2019-04-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/90139"}, {"sha": "e92cd1fbb1ad9dafc74f742a4f0c48123bbe1a94", "filename": "gcc/testsuite/g++.dg/cpp0x/pr89900-1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-1.C?ref=3734fb6a274e7574f614bb8139d085e19c85ff9e", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile { target c++11 } }\n+\n+template<typename SX, typename ...XE> void\n+fk (XE..., SW);  // { dg-error \"12:.SW. has not been declared\" }\n+\n+void\n+w9 (void)\n+{\n+  fk<int> (0);\n+}"}, {"sha": "a70349dd6e73900ec169f8ce78417fab6a944f91", "filename": "gcc/testsuite/g++.dg/cpp0x/pr89900-2.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-2.C?ref=3734fb6a274e7574f614bb8139d085e19c85ff9e", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile { target c++11 } }\n+\n+template<typename SX, typename ...XE> void\n+fk (XE..., int);\n+\n+void\n+w9 (void)\n+{\n+  fk<int> (0);\n+}"}, {"sha": "178d8f13d869c8ace3773db120fd86e5c092d06e", "filename": "gcc/testsuite/g++.dg/cpp0x/pr89900-3.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-3.C?ref=3734fb6a274e7574f614bb8139d085e19c85ff9e", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile { target c++11 } }\n+\n+template<typename ...XE> void\n+fk (XE..., SW);  // { dg-error \"12:.SW. has not been declared\" }\n+\n+void\n+w9 (void)\n+{\n+  fk (0);\n+}"}, {"sha": "0d375dabaf52da99e8a07f89d975091f6f6dede3", "filename": "gcc/testsuite/g++.dg/cpp0x/pr89900-4.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3734fb6a274e7574f614bb8139d085e19c85ff9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr89900-4.C?ref=3734fb6a274e7574f614bb8139d085e19c85ff9e", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile { target c++11 } }\n+\n+template<typename ...XE> void\n+fk (XE..., int);\n+\n+void\n+w9 (void)\n+{\n+  fk (0);\n+}"}]}