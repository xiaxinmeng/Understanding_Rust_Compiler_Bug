{"sha": "ff0b0e4c4ee8092ea12e1dce0535a0ca6b12383e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYwYjBlNGM0ZWU4MDkyZWExMmUxZGNlMDUzNWEwY2E2YjEyMzgzZQ==", "commit": {"author": {"name": "Graham Stott", "email": "grahams@gcc.gnu.org", "date": "2002-01-08T10:21:56Z"}, "committer": {"name": "Graham Stott", "email": "grahams@gcc.gnu.org", "date": "2002-01-08T10:21:56Z"}, "message": "mangle.c (MANGLE_TRACE): Add parenthesis.\n\n\n        * mangle.c (MANGLE_TRACE): Add parenthesis.\n        (MANGLE_TRACE_TREE): Likewise.\n        (write_signed_number): Likewise.\n        (write_unsigned_number): Likewise.\n\nFrom-SVN: r48638", "tree": {"sha": "4f412f2724ed37a7221c59202880bc4e240d97b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f412f2724ed37a7221c59202880bc4e240d97b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff0b0e4c4ee8092ea12e1dce0535a0ca6b12383e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff0b0e4c4ee8092ea12e1dce0535a0ca6b12383e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff0b0e4c4ee8092ea12e1dce0535a0ca6b12383e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff0b0e4c4ee8092ea12e1dce0535a0ca6b12383e/comments", "author": null, "committer": null, "parents": [{"sha": "84b4a6f8667117d9f363268b47d378ca46a3837d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84b4a6f8667117d9f363268b47d378ca46a3837d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84b4a6f8667117d9f363268b47d378ca46a3837d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "63f3a0461add87b71893a63ee20b57672129306c", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff0b0e4c4ee8092ea12e1dce0535a0ca6b12383e/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff0b0e4c4ee8092ea12e1dce0535a0ca6b12383e/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=ff0b0e4c4ee8092ea12e1dce0535a0ca6b12383e", "patch": "@@ -1,5 +1,5 @@\n /* Name mangling for the 3.0 C++ ABI.\n-   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n    Written by Alex Samuel <sameul@codesourcery.com>\n \n    This file is part of GNU CC.\n@@ -65,10 +65,10 @@\n /* Macros for tracing the write_* functions.  */\n #if DEBUG_MANGLE\n # define MANGLE_TRACE(FN, INPUT) \\\n-  fprintf (stderr, \"  %-24s: %-24s\\n\", FN, INPUT)\n+  fprintf (stderr, \"  %-24s: %-24s\\n\", (FN), (INPUT))\n # define MANGLE_TRACE_TREE(FN, NODE) \\\n   fprintf (stderr, \"  %-24s: %-24s (%p)\\n\", \\\n-           FN, tree_code_name[TREE_CODE (NODE)], (void *) NODE)\n+           (FN), tree_code_name[TREE_CODE (NODE)], (void *) (NODE))\n #else\n # define MANGLE_TRACE(FN, INPUT)\n # define MANGLE_TRACE_TREE(FN, NODE)\n@@ -227,11 +227,11 @@ static void write_java_integer_type_codes PARAMS ((tree));\n \n /* Write out a signed quantity in base 10.  */\n #define write_signed_number(NUMBER) \\\n-  write_number (NUMBER, /*unsigned_p=*/0, 10)\n+  write_number ((NUMBER), /*unsigned_p=*/0, 10)\n \n /* Write out an unsigned quantity in base 10.  */\n #define write_unsigned_number(NUMBER) \\\n-  write_number (NUMBER, /*unsigned_p=*/1, 10)\n+  write_number ((NUMBER), /*unsigned_p=*/1, 10)\n \n /* If DECL is a template instance, return non-zero and, if\n    TEMPLATE_INFO is non-NULL, set *TEMPLATE_INFO to its template info."}]}