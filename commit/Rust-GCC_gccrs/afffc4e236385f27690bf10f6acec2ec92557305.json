{"sha": "afffc4e236385f27690bf10f6acec2ec92557305", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZmZmM0ZTIzNjM4NWYyNzY5MGJmMTBmNmFjZWMyZWM5MjU1NzMwNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-02-04T20:43:04Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-02-04T20:43:04Z"}, "message": "i386-cadd.c: Compile using -march=k8.\n\n\t* gcc.dg/i386-cadd.c:  Compile using -march=k8.\n\t* gcc.dg/i386-cmov?.c:  Likewise.\n\t* gcc.dg/i386-fpcvt-?.c:  Likewise.\n\t* gcc.dg/i386-ssefp-1.c:  Likewise.\n\t* gcc.dg/i386-ssetype-?.c:  Likewise; fix for register passing\n\tconvetions.\n\nFrom-SVN: r62394", "tree": {"sha": "eeade192c6ce98d233ec2c54c4cdfb65aa6dbaf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeade192c6ce98d233ec2c54c4cdfb65aa6dbaf8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afffc4e236385f27690bf10f6acec2ec92557305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afffc4e236385f27690bf10f6acec2ec92557305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afffc4e236385f27690bf10f6acec2ec92557305", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afffc4e236385f27690bf10f6acec2ec92557305/comments", "author": null, "committer": null, "parents": [{"sha": "6e40349a8022adf431031492ebbb49184c775de9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e40349a8022adf431031492ebbb49184c775de9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e40349a8022adf431031492ebbb49184c775de9"}], "stats": {"total": 129, "additions": 72, "deletions": 57}, "files": [{"sha": "1d32a755acdd146993c209c3cf4d791288a0dc82", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,3 +1,12 @@\n+Tue Feb  4 21:41:09 CET 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/i386-cadd.c:  Compile using -march=k8.\n+\t* gcc.dg/i386-cmov?.c:  Likewise.\n+\t* gcc.dg/i386-fpcvt-?.c:  Likewise.\n+\t* gcc.dg/i386-ssefp-1.c:  Likewise.\n+\t* gcc.dg/i386-ssetype-?.c:  Likewise; fix for register passing\n+\tconvetions.\n+\n 2003-02-03  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/7129"}, {"sha": "ef6c16bee78244c600c63408fe6cb01f64ea6267", "filename": "gcc/testsuite/gcc.dg/i386-cadd.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cadd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cadd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cadd.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -march=athlon\" } */\n+/* { dg-options \"-O2 -march=k8\" } */\n /* { dg-final { scan-assembler \"sbb\" } } */\n \n /* Conditional increment is best done using sbb $-1, val.  */"}, {"sha": "38aa6a62a60b9ba5e897c41008426a3376cb9819", "filename": "gcc/testsuite/gcc.dg/i386-cmov1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov1.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -march=athlon\" } */\n+/* { dg-options \"-O2 -march=k8\" } */\n /* { dg-final { scan-assembler \"sar.*magic_namea\" } } */\n /* { dg-final { scan-assembler \"sar.*magic_nameb\" } } */\n /* { dg-final { scan-assembler \"sar.*magic_namec\" } } */"}, {"sha": "cd6457f0d5f13fcd0bf5a54f0f22d3cbc26efc5a", "filename": "gcc/testsuite/gcc.dg/i386-cmov2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov2.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -march=athlon\" } */\n+/* { dg-options \"-O2 -march=k8\" } */\n /* { dg-final { scan-assembler \"sbb\" } } */\n \n /* This conditional move is fastest to be done using sbb.  */"}, {"sha": "6ef2675297d1ce33959896b25db3f83c113c02da", "filename": "gcc/testsuite/gcc.dg/i386-cmov3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov3.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -march=athlon\" } */\n+/* { dg-options \"-O2 -march=k8\" } */\n /* { dg-final { scan-assembler \"cmov\" } } */\n \n /* This conditional move is fastest to be done using cmov.  */"}, {"sha": "e293b34abc175c574e9dc6f23ce20fbe87fc6ea1", "filename": "gcc/testsuite/gcc.dg/i386-cmov4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov4.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -march=athlon\" } */\n+/* { dg-options \"-O2 -march=k8\" } */\n /* { dg-final { scan-assembler \"cmov\" } } */\n \n /* Verify that if conversion happends for memory references.  */"}, {"sha": "112a9933bbca1255f6d114b2c0b6df4631558291", "filename": "gcc/testsuite/gcc.dg/i386-cmov5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cmov5.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -march=athlon\" } */\n+/* { dg-options \"-O2 -march=k8\" } */\n /* { dg-final { scan-assembler \"sbb\" } } */\n \n int"}, {"sha": "6e65b10416375f6630623a9667a51f8cdc0a8a74", "filename": "gcc/testsuite/gcc.dg/i386-fpcvt-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-1.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse2 -march=athlon\" } */\n+/* { dg-options \"-O2 -msse2 -march=k8\" } */\n /* { dg-final { scan-assembler-not \"cvtss2sd\" } } */\n float a,b;\n main()"}, {"sha": "613c20760197c103cabb8d27842cb9895735acee", "filename": "gcc/testsuite/gcc.dg/i386-fpcvt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-2.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse2 -march=athlon\" } */\n+/* { dg-options \"-O2 -msse2 -march=k8\" } */\n /* { dg-final { scan-assembler-not \"cvtss2sd\" } } */\n float a,b;\n main()"}, {"sha": "69d7e3d2cd6544bdbda63a2986e43906714ebf61", "filename": "gcc/testsuite/gcc.dg/i386-fpcvt-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-3.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse2 -march=athlon\" } */\n+/* { dg-options \"-O2 -msse2 -march=k8\" } */\n /* { dg-final { scan-assembler-not \"cvtss2sd\" } } */\n float a,b;\n main()"}, {"sha": "b417ddae9ba13279f692de87e9a699a579d70856", "filename": "gcc/testsuite/gcc.dg/i386-mmx-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-mmx-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-mmx-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-mmx-3.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,7 +1,7 @@\n /* PR target/8870 */\n /* Originator: otaylor@redhat.com */\n-/* { dg-do compile { target i?86-*-* } } */\n-/* { dg-options \"-O1 -mmmx -march=i686\" } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-*} } */\n+/* { dg-options \"-O1 -mmmx -march=k8\" } */\n \n typedef int v4hi __attribute__ ((mode (V4HI)));\n "}, {"sha": "d11a72f111827c985e8bee12b59eb87ec45d4335", "filename": "gcc/testsuite/gcc.dg/i386-ssefp-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssefp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssefp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssefp-1.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse2 -march=athlon -mfpmath=sse\" } */\n+/* { dg-options \"-O2 -msse2 -march=k8 -mfpmath=sse\" } */\n /* { dg-final { scan-assembler \"maxsd\" } } */\n /* { dg-final { scan-assembler \"minsd\" } } */\n double x;"}, {"sha": "687902416781c3f4e9f91c257bcf2da73d221be4", "filename": "gcc/testsuite/gcc.dg/i386-ssefp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssefp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssefp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssefp-2.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse2 -march=athlon -mfpmath=sse\" } */\n+/* { dg-options \"-O2 -msse2 -march=k8 -mfpmath=sse\" } */\n /* { dg-final { scan-assembler \"maxsd\" } } */\n /* { dg-final { scan-assembler \"minsd\" } } */\n double x;"}, {"sha": "87921713becc221d2b39d72ee0c5160c26aad938", "filename": "gcc/testsuite/gcc.dg/i386-ssetype-1.c", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-1.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,32 +1,35 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse2 -march=athlon\" } */\n-/* { dg-final { scan-assembler \"andpd.*\\[bs\\]p\" } } */\n-/* { dg-final { scan-assembler \"andnpd.*\\[bs\\]p\" } } */\n-/* { dg-final { scan-assembler \"xorpd.*\\[bs\\]p\" } } */\n-/* { dg-final { scan-assembler \"orpd.*\\[bs\\]p\" } } */\n+/* { dg-options \"-O2 -msse2 -march=k8\" } */\n+/* { dg-final { scan-assembler \"andpd.*magic\" } } */\n+/* { dg-final { scan-assembler \"andnpd.*magic\" } } */\n+/* { dg-final { scan-assembler \"xorpd.*magic\" } } */\n+/* { dg-final { scan-assembler \"orpd.*magic\" } } */\n /* { dg-final { scan-assembler-not \"movdqa\" } } */\n-/* { dg-final { scan-assembler \"movapd.*\\[bs\\]p\" } } */\n+/* { dg-final { scan-assembler \"movapd.*magic\" } } */\n \n /* Verify that we generate proper instruction with memory operand.  */\n \n #include <xmmintrin.h>\n+\n+__m128d magic_a, magic_b;\n+\n __m128d\n-t1(__m128d a, __m128d b)\n+t1(void)\n {\n-return _mm_and_pd (a,b);\n+return _mm_and_pd (magic_a,magic_b);\n }\n __m128d\n-t2(__m128d a, __m128d b)\n+t2(void)\n {\n-return _mm_andnot_pd (a,b);\n+return _mm_andnot_pd (magic_a,magic_b);\n }\n __m128d\n-t3(__m128d a, __m128d b)\n+t3(void)\n {\n-return _mm_or_pd (a,b);\n+return _mm_or_pd (magic_a,magic_b);\n }\n __m128d\n-t4(__m128d a, __m128d b)\n+t4(void)\n {\n-return _mm_xor_pd (a,b);\n+return _mm_xor_pd (magic_a,magic_b);\n }"}, {"sha": "1f9bedd0220db20232a52f4d53598a0cadea91ab", "filename": "gcc/testsuite/gcc.dg/i386-ssetype-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-2.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse2 -march=athlon\" } */\n+/* { dg-options \"-O2 -msse2 -march=k8\" } */\n /* { dg-final { scan-assembler \"andpd\" } } */\n /* { dg-final { scan-assembler \"andnpd\" } } */\n /* { dg-final { scan-assembler \"xorpd\" } } */"}, {"sha": "bbc6f823bd9f02d79a21a9901cf34aafa94d5fad", "filename": "gcc/testsuite/gcc.dg/i386-ssetype-3.c", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-3.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,32 +1,34 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse2 -march=athlon\" } */\n-/* { dg-final { scan-assembler \"andps.*\\[bs\\]p\" } } */\n-/* { dg-final { scan-assembler \"andnps.*\\[bs\\]p\" } } */\n-/* { dg-final { scan-assembler \"xorps.*\\[bs\\]p\" } } */\n-/* { dg-final { scan-assembler \"orps.*\\[bs\\]p\" } } */\n+/* { dg-options \"-O2 -msse2 -march=k8\" } */\n+/* { dg-final { scan-assembler \"andps.*magic\" } } */\n+/* { dg-final { scan-assembler \"andnps.*magic\" } } */\n+/* { dg-final { scan-assembler \"xorps.*magic\" } } */\n+/* { dg-final { scan-assembler \"orps.*magic\" } } */\n /* { dg-final { scan-assembler-not \"movdqa\" } } */\n-/* { dg-final { scan-assembler \"movaps.*\\[bs\\]p\" } } */\n+/* { dg-final { scan-assembler \"movaps.*magic\" } } */\n \n /* Verify that we generate proper instruction with memory operand.  */\n \n #include <xmmintrin.h>\n+\n+__m128 magic_a, magic_b;\n __m128\n-t1(__m128 a, __m128 b)\n+t1(void)\n {\n-return _mm_and_ps (a,b);\n+return _mm_and_ps (magic_a,magic_b);\n }\n __m128\n-t2(__m128 a, __m128 b)\n+t2(void)\n {\n-return _mm_andnot_ps (a,b);\n+return _mm_andnot_ps (magic_a,magic_b);\n }\n __m128\n-t3(__m128 a, __m128 b)\n+t3(void)\n {\n-return _mm_or_ps (a,b);\n+return _mm_or_ps (magic_a,magic_b);\n }\n __m128\n-t4(__m128 a, __m128 b)\n+t4(void)\n {\n-return _mm_xor_ps (a,b);\n+return _mm_xor_ps (magic_a,magic_b);\n }"}, {"sha": "e9d989ba974ed530d7059af41eacfa0c54204792", "filename": "gcc/testsuite/gcc.dg/i386-ssetype-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-4.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse2 -march=athlon\" } */\n+/* { dg-options \"-O2 -msse2 -march=k8\" } */\n /* { dg-final { scan-assembler \"andps\" } } */\n /* { dg-final { scan-assembler \"andnps\" } } */\n /* { dg-final { scan-assembler \"xorps\" } } */"}, {"sha": "31a8b9981e89fc201273f7640570fc97f886a151", "filename": "gcc/testsuite/gcc.dg/i386-ssetype-5.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afffc4e236385f27690bf10f6acec2ec92557305/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-ssetype-5.c?ref=afffc4e236385f27690bf10f6acec2ec92557305", "patch": "@@ -1,33 +1,34 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse2 -march=athlon\" } */\n-/* { dg-final { scan-assembler \"pand.*\\[bs\\]p\" } } */\n-/* { dg-final { scan-assembler \"pandn.*\\[bs\\]p\" } } */\n-/* { dg-final { scan-assembler \"pxor.*\\[bs\\]p\" } } */\n-/* { dg-final { scan-assembler \"por.*\\[bs\\]p\" } } */\n+/* { dg-options \"-O2 -msse2 -march=k8\" } */\n+/* { dg-final { scan-assembler \"pand.*magic\" } } */\n+/* { dg-final { scan-assembler \"pandn.*magic\" } } */\n+/* { dg-final { scan-assembler \"pxor.*magic\" } } */\n+/* { dg-final { scan-assembler \"por.*magic\" } } */\n /* { dg-final { scan-assembler \"movdqa\" } } */\n-/* { dg-final { scan-assembler-not \"movaps.*\\[bs\\]p\" } } */\n+/* { dg-final { scan-assembler-not \"movaps.*magic\" } } */\n \n /* Verify that we generate proper instruction with memory operand.  */\n \n #include <xmmintrin.h>\n+__m128i magic_a, magic_b;\n __m128i\n-t1(__m128i a, __m128i b)\n+t1(void)\n {\n-return _mm_and_si128 (a,b);\n+return _mm_and_si128 (magic_a,magic_b);\n }\n __m128i\n-t2(__m128i a, __m128i b)\n+t2(void)\n {\n-return _mm_andnot_si128 (a,b);\n+return _mm_andnot_si128 (magic_a,magic_b);\n }\n __m128i\n-t3(__m128i a, __m128i b)\n+t3(void)\n {\n-return _mm_or_si128 (a,b);\n+return _mm_or_si128 (magic_a,magic_b);\n }\n __m128i\n-t4(__m128i a, __m128i b)\n+t4(void)\n {\n-return _mm_xor_si128 (a,b);\n+return _mm_xor_si128 (magic_a,magic_b);\n }\n "}]}