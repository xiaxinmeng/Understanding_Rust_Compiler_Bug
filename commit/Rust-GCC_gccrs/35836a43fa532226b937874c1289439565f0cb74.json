{"sha": "35836a43fa532226b937874c1289439565f0cb74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU4MzZhNDNmYTUzMjIyNmI5Mzc4NzRjMTI4OTQzOTU2NWYwY2I3NA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@freesoft.cz", "date": "1999-12-15T14:17:59Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "1999-12-15T14:17:59Z"}, "message": "flow.c (calculate_loop_depth): Make global, remove prototype, rewrite to use new loop infrastructure.\n\n\t* flow.c (calculate_loop_depth): Make global, remove prototype,\n\trewrite to use new loop infrastructure.\n\t(find_basic_block): Remove calculate_loop_depth call.\n\t* toplev.c (rest_of_compilation): Call find_basic_block.\n\t* output.h (calculate_loop_depth): Declare.\n\nFrom-SVN: r30955", "tree": {"sha": "945b96b3dfced6c58fc828c818aca14d91a14035", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/945b96b3dfced6c58fc828c818aca14d91a14035"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35836a43fa532226b937874c1289439565f0cb74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35836a43fa532226b937874c1289439565f0cb74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35836a43fa532226b937874c1289439565f0cb74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35836a43fa532226b937874c1289439565f0cb74/comments", "author": null, "committer": null, "parents": [{"sha": "ce4bbac71c009c87e902148838b7c4ef6f8be27b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4bbac71c009c87e902148838b7c4ef6f8be27b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4bbac71c009c87e902148838b7c4ef6f8be27b"}], "stats": {"total": 51, "additions": 17, "deletions": 34}, "files": [{"sha": "9790ec615f8e16835d1dcb28a030e7e91a679253", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35836a43fa532226b937874c1289439565f0cb74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35836a43fa532226b937874c1289439565f0cb74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35836a43fa532226b937874c1289439565f0cb74", "patch": "@@ -1,5 +1,11 @@\n Wed Dec 15 15:05:30 MET 1999  Jan Hubicka  <hubicka@freesoft.cz>\n \n+\t* flow.c (calculate_loop_depth): Make global, remove prototype,\n+\trewrite to use new loop infrastructure.\n+\t(find_basic_block): Remove calculate_loop_depth call.\n+\t* toplev.c (rest_of_compilation): Call find_basic_block.\n+\t* output.h (calculate_loop_depth): Declare.\n+\n \t* flow.c (dump_flow_info): Dump loop_depth.\n \t(flow_loops_nodes_find): Increase loop_depth for basic block in the\n \tbody."}, {"sha": "606f2064c554f34df1898864c39d743f8a3b5e6b", "filename": "gcc/flow.c", "status": "modified", "additions": 9, "deletions": 34, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35836a43fa532226b937874c1289439565f0cb74/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35836a43fa532226b937874c1289439565f0cb74/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=35836a43fa532226b937874c1289439565f0cb74", "patch": "@@ -314,7 +314,6 @@ static void merge_blocks_nomove\t\tPROTO((basic_block, basic_block));\n static int merge_blocks\t\t\tPROTO((edge,basic_block,basic_block));\n static void try_merge_blocks\t\tPROTO((void));\n static void tidy_fallthru_edge\t\tPROTO((edge,basic_block,basic_block));\n-static void calculate_loop_depth\tPROTO((rtx));\n \n static int verify_wide_reg_1\t\tPROTO((rtx *, void *));\n static void verify_wide_reg\t\tPROTO((int, rtx, rtx));\n@@ -434,10 +433,6 @@ find_basic_blocks (f, nregs, file, do_cleanup)\n \n   mark_critical_edges ();\n \n-  /* Discover the loop depth at the start of each basic block to aid\n-     register allocation.  */\n-  calculate_loop_depth (f);\n-\n   /* Kill the data we won't maintain.  */\n   label_value_list = NULL_RTX;\n \n@@ -2389,37 +2384,17 @@ tidy_fallthru_edge (e, b, c)\n \n /* Discover and record the loop depth at the head of each basic block.  */\n \n-static void\n-calculate_loop_depth (insns)\n-     rtx insns;\n+void\n+calculate_loop_depth (dump)\n+     FILE *dump;\n {\n-  basic_block bb;\n-  rtx insn;\n-  int i = 0, depth = 1;\n+  struct loops loops;\n \n-  bb = BASIC_BLOCK (i);\n-  for (insn = insns; insn ; insn = NEXT_INSN (insn))\n-    {\n-      if (insn == bb->head)\n-\t{\n-\t  bb->loop_depth = depth;\n-\t  if (++i >= n_basic_blocks)\n-\t    break;\n-\t  bb = BASIC_BLOCK (i);\n-\t}\n-\n-      if (GET_CODE (insn) == NOTE)\n-\t{\n-\t  if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_BEG)\n-\t    depth++;\n-\t  else if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_END)\n-\t    depth--;\n-\n-\t  /* If we have LOOP_DEPTH == 0, there has been a bookkeeping error. */\n-\t  if (depth == 0)\n-\t    abort ();\n-\t}\n-    }\n+  /* The loop infrastructure does the real job for us.  */\n+  flow_loops_find (&loops);\n+  if (dump)\n+    flow_loops_dump (&loops, dump, 0);\n+  flow_loops_free (&loops);\n }\n \f\n /* Perform data flow analysis."}, {"sha": "2af69da35a36d45bdf8fbac81b8f298ed95cc328", "filename": "gcc/output.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35836a43fa532226b937874c1289439565f0cb74/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35836a43fa532226b937874c1289439565f0cb74/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=35836a43fa532226b937874c1289439565f0cb74", "patch": "@@ -132,6 +132,7 @@ extern int regno_uninitialized\t\tPROTO((int));\n extern int regno_clobbered_at_setjmp\tPROTO((int));\n extern void dump_flow_info\t\tPROTO((FILE *));\n extern void find_basic_blocks         PROTO((rtx, int, FILE *, int));\n+extern void calculate_loop_depth      PROTO((FILE *));\n extern void free_basic_block_vars     PROTO((int));\n extern void set_block_num             PROTO((rtx, int));\n extern void life_analysis             PROTO((rtx, int, FILE *, int));"}, {"sha": "dbe2706bb854e8a87e7e7705817984951fc9adf2", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35836a43fa532226b937874c1289439565f0cb74/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35836a43fa532226b937874c1289439565f0cb74/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=35836a43fa532226b937874c1289439565f0cb74", "patch": "@@ -4060,6 +4060,7 @@ rest_of_compilation (decl)\n \t(flow_time,\n \t {\n \t   find_basic_blocks (insns, max_reg_num (), rtl_dump_file, 1);\n+\t   calculate_loop_depth (rtl_dump_file);\n \t   life_analysis (insns, max_reg_num (), rtl_dump_file, 1);\n \t });\n "}]}