{"sha": "cd681d1f89dcfdf9e32f21ea8d0800d8eed1a260", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2ODFkMWY4OWRjZmRmOWUzMmYyMWVhOGQwODAwZDhlZWQxYTI2MA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-03-05T23:27:16Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-03-05T23:27:16Z"}, "message": "Undo this patch, breaks libobjc builds.\n\n\t* c-decl.c (pushdecl): When have a duplicate decl, and it is global,\n\tdelete lookup_name name in test for return.\n\t(redeclaration_error_message): When newdecl is a block level\n\tdeclaration, use lookup_name_current_level instead of DECL_CONTEXT.\n\nFrom-SVN: r9123", "tree": {"sha": "f8ab8fe56759beb96fb46ddfc829f1238aed9d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8ab8fe56759beb96fb46ddfc829f1238aed9d40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd681d1f89dcfdf9e32f21ea8d0800d8eed1a260", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd681d1f89dcfdf9e32f21ea8d0800d8eed1a260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd681d1f89dcfdf9e32f21ea8d0800d8eed1a260", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd681d1f89dcfdf9e32f21ea8d0800d8eed1a260/comments", "author": null, "committer": null, "parents": [{"sha": "d1b9d2aaf507e9ca0554253d216018ae1780fab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b9d2aaf507e9ca0554253d216018ae1780fab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1b9d2aaf507e9ca0554253d216018ae1780fab8"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "0b3bb17554bee92a1dac653d3ebe5a5927d6ebf7", "filename": "gcc/c-decl.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd681d1f89dcfdf9e32f21ea8d0800d8eed1a260/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd681d1f89dcfdf9e32f21ea8d0800d8eed1a260/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=cd681d1f89dcfdf9e32f21ea8d0800d8eed1a260", "patch": "@@ -1939,11 +1939,11 @@ pushdecl (x)\n \t\t\t\t\t  IDENTIFIER_POINTER (name));\n \t    }\n \n-\t  /* If this is a global decl, then we can't return as yet, because we\n-\t     need to register this decl in the current binding block.  This\n-\t     ensures that we get an error message if it is redeclared as a\n-\t     local variable later in the same block.  */\n-\t  if (! DECL_EXTERNAL (x) || ! TREE_PUBLIC (x))\n+\t  /* If this is a global decl, and there exists a conflicting local\n+\t     decl in a parent block, then we can't return as yet, because we\n+\t     need to register this decl in the current binding block.  */\n+\t  if (! DECL_EXTERNAL (x) || ! TREE_PUBLIC (x)\n+\t      || lookup_name (name) == t)\n \t    return t;\n \t}\n \n@@ -2422,7 +2422,7 @@ redeclaration_error_message (newdecl, olddecl)\n \t external reference.  Otherwise, it is OK, because newdecl must\n \t be an extern reference to olddecl.  */\n       if (!(DECL_EXTERNAL (newdecl) && DECL_EXTERNAL (olddecl))\n-\t  && lookup_name_current_level (DECL_NAME (newdecl)) == olddecl)\n+\t  && DECL_CONTEXT (newdecl) == DECL_CONTEXT (olddecl))\n \treturn \"redeclaration of `%s'\";\n       return 0;\n     }"}]}