{"sha": "481a49d69f2da33f1fa2e6d89b06bcf0e3a5ea1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgxYTQ5ZDY5ZjJkYTMzZjFmYTJlNmQ4OWIwNmJjZjBlM2E1ZWExZQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1995-12-08T15:47:42Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1995-12-08T15:47:42Z"}, "message": "lib1funcs.asm (RET, RETCOND): Define according to whether we are compiling for 32 or 26 bit mode.\n\n\t* arm/lib1funcs.asm (RET, RETCOND): Define according to whether we\n\tare compiling for 32 or 26 bit mode.\n\t(all return instructions): Use RET or RETCOND as appropriate.\n\nFrom-SVN: r10690", "tree": {"sha": "0197b7ba2cde9bf6238a46dbb1cf403afe3a929d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0197b7ba2cde9bf6238a46dbb1cf403afe3a929d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/481a49d69f2da33f1fa2e6d89b06bcf0e3a5ea1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/481a49d69f2da33f1fa2e6d89b06bcf0e3a5ea1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/481a49d69f2da33f1fa2e6d89b06bcf0e3a5ea1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/481a49d69f2da33f1fa2e6d89b06bcf0e3a5ea1e/comments", "author": null, "committer": null, "parents": [{"sha": "fd914447b4251a764c0f0d5e91931d6b1a9b54a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd914447b4251a764c0f0d5e91931d6b1a9b54a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd914447b4251a764c0f0d5e91931d6b1a9b54a4"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "4057549f23a3d4e4dbe14100fca575e2750ffa5c", "filename": "gcc/config/arm/lib1funcs.asm", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/481a49d69f2da33f1fa2e6d89b06bcf0e3a5ea1e/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/481a49d69f2da33f1fa2e6d89b06bcf0e3a5ea1e/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1funcs.asm?ref=481a49d69f2da33f1fa2e6d89b06bcf0e3a5ea1e", "patch": "@@ -267,6 +267,14 @@ Ldiv_zero:\n \tret\n */\n \n+#ifdef __APCS_26__\n+#define RET\tmovs\n+#define RETCOND ^\n+#else\n+#define RET\tmov\n+#define RETCOND\n+#endif\n+\n #ifdef L_udivsi3\n \n ip\t.req\tr12\n@@ -583,14 +591,14 @@ Lend_regular_divide:\n Lgot_result:\n \n \tmov r0, r2\n-\tldmia\tsp!, {r4, r5, pc}\n+\tldmia\tsp!, {r4, r5, pc}RETCOND\n \n Ldiv_zero:\n \t@ Divide by zero trap.  If it returns, return 0 (about as\n \t@ wrong as possible, but that is what SunOS does...).\n \tbl\t___div0\n \tmov\tr0, #0\n-\tldmia\tsp!, {r4, r5, pc}\n+\tldmia\tsp!, {r4, r5, pc}RETCOND\n \n #endif /* L_udivsi3 */\n \n@@ -917,14 +925,14 @@ Lgot_result:\n \trsbmi r2, r2, #0\n \n \tmov r0, r2\n-\tldmia\tsp!, {r4, r5, r6, pc}\n+\tldmia\tsp!, {r4, r5, r6, pc}RETCOND\n \n Ldiv_zero:\n \t@ Divide by zero trap.  If it returns, return 0 (about as\n \t@ wrong as possible, but that is what SunOS does...).\n \tbl\t___div0\n \tmov\tr0, #0\n-\tldmia\tsp!, {r4, r5, r6, pc}\n+\tldmia\tsp!, {r4, r5, r6, pc}RETCOND\n \n #endif /* L_divsi3 */\n \n@@ -1244,14 +1252,14 @@ Lend_regular_divide:\n Lgot_result:\n \n \tmov r0, r3\n-\tldmia\tsp!, {r4, r5, pc}\n+\tldmia\tsp!, {r4, r5, pc}RETCOND\n \n Ldiv_zero:\n \t@ Divide by zero trap.  If it returns, return 0 (about as\n \t@ wrong as possible, but that is what SunOS does...).\n \tbl\t___div0\n \tmov\tr0, #0\n-\tldmia\tsp!, {r4, r5, pc}\n+\tldmia\tsp!, {r4, r5, pc}RETCOND\n \n #endif /* L_umodsi3 */\n \n@@ -1578,14 +1586,14 @@ Lgot_result:\n \trsbmi r3, r3, #0\n \n \tmov r0, r3\n-\tldmia\tsp!, {r4, r5, r6, pc}\n+\tldmia\tsp!, {r4, r5, r6, pc}RETCOND\n \n Ldiv_zero:\n \t@ Divide by zero trap.  If it returns, return 0 (about as\n \t@ wrong as possible, but that is what SunOS does...).\n \tbl\t___div0\n \tmov\tr0, #0\n-\tldmia\tsp!, {r4, r5, r6, pc}\n+\tldmia\tsp!, {r4, r5, r6, pc}RETCOND\n \n #endif /* L_modsi3 */\n \n@@ -1594,6 +1602,6 @@ Ldiv_zero:\n \t.globl ___div0\n \t.align 0\n ___div0:\n-\tmov\tpc, lr\n+\tRET\tpc, lr\n \n #endif /* L_divmodsi_tools */"}]}