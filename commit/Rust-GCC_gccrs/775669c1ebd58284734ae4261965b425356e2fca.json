{"sha": "775669c1ebd58284734ae4261965b425356e2fca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc1NjY5YzFlYmQ1ODI4NDczNGFlNDI2MTk2NWI0MjUzNTZlMmZjYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-20T08:49:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-20T08:49:48Z"}, "message": "cgraphunit.c (analyze_functions): Set node->definition to false to signal symbol removal to...\n\n2016-10-20  Richard Biener  <rguenther@suse.de>\n\n\t* cgraphunit.c (analyze_functions): Set node->definition to\n\tfalse to signal symbol removal to debug_hooks->late_global_decl.\n\t* ipa.c (symbol_table::remove_unreachable_nodes): When not in\n\tWPA signal symbol removal to the debuginfo machinery.\n\t* dwarf2out.c (dwarf2out_late_global_decl): Instead of\n\tusing early_finised to guard the we're called for symbol\n\tremoval case look at the symtabs definition flag.\n\t(gen_variable_die): Remove redundant check.\n\nFrom-SVN: r241363", "tree": {"sha": "eaf4fefd23878ee067a9f658dce72d2897a8686e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaf4fefd23878ee067a9f658dce72d2897a8686e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/775669c1ebd58284734ae4261965b425356e2fca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775669c1ebd58284734ae4261965b425356e2fca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/775669c1ebd58284734ae4261965b425356e2fca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/775669c1ebd58284734ae4261965b425356e2fca/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a65593a4b4ceaecdb650e430dd92efb374b3a1eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a65593a4b4ceaecdb650e430dd92efb374b3a1eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a65593a4b4ceaecdb650e430dd92efb374b3a1eb"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "5655d13a679b6bf80311533623d1c6da7d84b7d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/775669c1ebd58284734ae4261965b425356e2fca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/775669c1ebd58284734ae4261965b425356e2fca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=775669c1ebd58284734ae4261965b425356e2fca", "patch": "@@ -1,3 +1,14 @@\n+2016-10-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* cgraphunit.c (analyze_functions): Set node->definition to\n+\tfalse to signal symbol removal to debug_hooks->late_global_decl.\n+\t* ipa.c (symbol_table::remove_unreachable_nodes): When not in\n+\tWPA signal symbol removal to the debuginfo machinery.\n+\t* dwarf2out.c (dwarf2out_late_global_decl): Instead of\n+\tusing early_finised to guard the we're called for symbol\n+\tremoval case look at the symtabs definition flag.\n+\t(gen_variable_die): Remove redundant check.\n+\n 2016-10-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/s390.md (\"prefetch\"): Add fallthrough comment."}, {"sha": "e315a77ae7ceb316aee1449531026af4f32a5ea3", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/775669c1ebd58284734ae4261965b425356e2fca/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/775669c1ebd58284734ae4261965b425356e2fca/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=775669c1ebd58284734ae4261965b425356e2fca", "patch": "@@ -1208,6 +1208,7 @@ analyze_functions (bool first_time)\n \t         so they effectively appear as readonly.  Show that to\n \t\t the debug machinery.  */\n \t      TREE_READONLY (node->decl) = 1;\n+\t      node->definition = false;\n \t      (*debug_hooks->late_global_decl) (node->decl);\n \t    }\n "}, {"sha": "1d2e385bdde88c647ada181bc09b6e064a817b23", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/775669c1ebd58284734ae4261965b425356e2fca/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/775669c1ebd58284734ae4261965b425356e2fca/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=775669c1ebd58284734ae4261965b425356e2fca", "patch": "@@ -21264,7 +21264,6 @@ gen_variable_die (tree decl, tree origin, dw_die_ref context_die)\n   tree ultimate_origin;\n   dw_die_ref var_die;\n   dw_die_ref old_die = decl ? lookup_decl_die (decl) : NULL;\n-  dw_die_ref origin_die = NULL;\n   bool declaration = (DECL_EXTERNAL (decl_or_origin)\n \t\t      || class_or_namespace_scope_p (context_die));\n   bool specialization_p = false;\n@@ -21424,7 +21423,7 @@ gen_variable_die (tree decl, tree origin, dw_die_ref context_die)\n     var_die = new_die (DW_TAG_variable, context_die, decl);\n \n   if (origin != NULL)\n-    origin_die = add_abstract_origin_attribute (var_die, origin);\n+    add_abstract_origin_attribute (var_die, origin);\n \n   /* Loop unrolling can create multiple blocks that refer to the same\n      static variable, so we must test for the DW_AT_declaration flag.\n@@ -21500,10 +21499,7 @@ gen_variable_die (tree decl, tree origin, dw_die_ref context_die)\n \t     already set.  */\n \t  || (VAR_P (decl_or_origin)\n \t      && TREE_STATIC (decl_or_origin)\n-\t      && DECL_RTL_SET_P (decl_or_origin)))\n-      /* When abstract origin already has DW_AT_location attribute, no need\n-\t to add it again.  */\n-      && (origin_die == NULL || get_AT (origin_die, DW_AT_location) == NULL))\n+\t      && DECL_RTL_SET_P (decl_or_origin))))\n     {\n       if (early_dwarf)\n \tadd_pubname (decl_or_origin, var_die);\n@@ -23969,11 +23965,11 @@ dwarf2out_late_global_decl (tree decl)\n \n       if (die)\n \t{\n-\t  /* We get called during the early debug phase via the symtab\n-\t     code invoking late_global_decl for symbols that are optimized\n-\t     out.  When the early phase is not finished, do not add\n-\t     locations.  */\n-\t  if (! early_dwarf_finished)\n+\t  /* We get called via the symtab code invoking late_global_decl\n+\t     for symbols that are optimized out.  Do not add locations\n+\t     for those.  */\n+\t  varpool_node *node = varpool_node::get (decl);\n+\t  if (! node || ! node->definition)\n \t    tree_add_const_value_attribute_for_decl (die, decl);\n \t  else\n \t    add_location_or_const_value_attribute (die, decl, false);"}, {"sha": "879d9c249cd6ade298bfe39773bf1dec2c6b9fef", "filename": "gcc/ipa.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/775669c1ebd58284734ae4261965b425356e2fca/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/775669c1ebd58284734ae4261965b425356e2fca/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=775669c1ebd58284734ae4261965b425356e2fca", "patch": "@@ -36,6 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-prop.h\"\n #include \"ipa-inline.h\"\n #include \"dbgcnt.h\"\n+#include \"debug.h\"\n \n \n /* Return true when NODE has ADDR reference.  */\n@@ -622,6 +623,12 @@ symbol_table::remove_unreachable_nodes (FILE *file)\n \t  if (file)\n \t    fprintf (file, \" %s/%i\", vnode->name (), vnode->order);\n           vnext = next_variable (vnode);\n+\t  /* Signal removal to the debug machinery.  */\n+\t  if (! flag_wpa)\n+\t    {\n+\t      vnode->definition = false;\n+\t      (*debug_hooks->late_global_decl) (vnode->decl);\n+\t    }\n \t  vnode->remove ();\n \t  changed = true;\n \t}"}]}