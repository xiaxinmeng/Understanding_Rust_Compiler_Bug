{"sha": "5a9085c7dc59f3118e0c9f44b3fe9e771fbde055", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE5MDg1YzdkYzU5ZjMxMThlMGM5ZjQ0YjNmZTllNzcxZmJkZTA1NQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-15T21:37:46Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-15T21:37:46Z"}, "message": "(yylex): Integer constant is unsigned for purposes of\nint_fits_type_p so that it compares huge constants properly.\n\nFrom-SVN: r2127", "tree": {"sha": "4273a3886daccfb4863a77e132ea34757230d950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4273a3886daccfb4863a77e132ea34757230d950"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a9085c7dc59f3118e0c9f44b3fe9e771fbde055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a9085c7dc59f3118e0c9f44b3fe9e771fbde055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a9085c7dc59f3118e0c9f44b3fe9e771fbde055", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a9085c7dc59f3118e0c9f44b3fe9e771fbde055/comments", "author": null, "committer": null, "parents": [{"sha": "dcffa15b6e524634316ad09aab3f20869ad05f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcffa15b6e524634316ad09aab3f20869ad05f6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcffa15b6e524634316ad09aab3f20869ad05f6e"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "e98377317d4191d8a9d60e4c840d3bf1f10c75f4", "filename": "gcc/c-lex.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a9085c7dc59f3118e0c9f44b3fe9e771fbde055/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a9085c7dc59f3118e0c9f44b3fe9e771fbde055/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=5a9085c7dc59f3118e0c9f44b3fe9e771fbde055", "patch": "@@ -1512,6 +1512,7 @@ yylex ()\n \t      }\n \t    \n \t    yylval.ttype = build_int_2 (low, high);\n+\t    TREE_TYPE (yylval.ttype) = long_long_unsigned_type_node;\n \n \t    /* If warn_traditional, calculate both the ANSI type and the\n \t       traditional type, then see if they disagree."}]}