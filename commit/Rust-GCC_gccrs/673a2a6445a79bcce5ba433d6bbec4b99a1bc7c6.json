{"sha": "673a2a6445a79bcce5ba433d6bbec4b99a1bc7c6", "node_id": "C_kwDOANBUbNoAKDY3M2EyYTY0NDVhNzliY2NlNWJhNDMzZDZiYmVjNGI5OWExYmM3YzY", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2023-04-05T14:27:28Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2023-04-06T01:43:01Z"}, "message": "testsuite: fix proc unsupported overriding in modules.exp [PR108899]\n\nThe overrider of proc unsupported in modules.exp had two problems\nreported by Thomas Schwinge, even after Jakub Jel\u00ednek's fix:\n\n- it remained in effect while running other dejagnu testsets\n\n- it didn't quote correctly the argument list passed to it, which\n  caused test names to be surrounded by curly braces, as in:\n\nUNSUPPORTED: {...}\n\nThis patch fixes both issues, obsoleting and reverting Jakub's change,\nby dropping the overrider and renaming the saved proc back, and by\nusing uplevel's argument list splicing.\n\n\nCo-authored-by: Thomas Schwinge <thomas@codesourcery.com>\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR testsuite/108899\n\t* g++.dg/modules/modules.exp (unsupported): Drop renaming.\n\tFix quoting.", "tree": {"sha": "5d930fb73f18e38f6dce8d41c577a4c98a5c8c37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d930fb73f18e38f6dce8d41c577a4c98a5c8c37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/673a2a6445a79bcce5ba433d6bbec4b99a1bc7c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/673a2a6445a79bcce5ba433d6bbec4b99a1bc7c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/673a2a6445a79bcce5ba433d6bbec4b99a1bc7c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/673a2a6445a79bcce5ba433d6bbec4b99a1bc7c6/comments", "author": null, "committer": null, "parents": [{"sha": "5229788da723442d51155693ab98f831e94d1d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5229788da723442d51155693ab98f831e94d1d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5229788da723442d51155693ab98f831e94d1d58"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "dc302d3d0af48725c9eeab68ba3f2e0f34d71639", "filename": "gcc/testsuite/g++.dg/modules/modules.exp", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/673a2a6445a79bcce5ba433d6bbec4b99a1bc7c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/673a2a6445a79bcce5ba433d6bbec4b99a1bc7c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fmodules%2Fmodules.exp?ref=673a2a6445a79bcce5ba433d6bbec4b99a1bc7c6", "patch": "@@ -319,15 +319,11 @@ cleanup_module_files [find $DEFAULT_REPO *.gcm]\n # so that, after an unsupported result in dg-test, we can skip rather\n # than fail subsequent related tests.\n set module_do {\"compile\" \"P\"}\n-if { [info procs unsupported] != [list] \\\n-      && [info procs saved-unsupported] == [list] } {\n-    rename unsupported saved-unsupported\n-\n-    proc unsupported { args } {\n-\tglobal module_do\n-\tlset module_do 1 \"N\"\n-\treturn [saved-unsupported $args]\n-    }\n+rename unsupported modules-saved-unsupported\n+proc unsupported { args } {\n+    global module_do\n+    lset module_do 1 \"N\"\n+    return [uplevel 1 modules-saved-unsupported $args]\n }\n \n # not grouped tests, sadly tcl doesn't have negated glob\n@@ -412,4 +408,10 @@ foreach src [lsort [find $srcdir/$subdir {*_a.[CHX}]] {\n     }\n }\n \n+# Restore the original unsupported proc, lest it will affect\n+# subsequent test runs, or even fail renaming if we run modules.exp\n+# for multiple targets/multilibs/options.\n+rename unsupported {}\n+rename modules-saved-unsupported unsupported\n+\n dg-finish"}]}