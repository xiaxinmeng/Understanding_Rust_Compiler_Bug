{"sha": "73ac7c5a1eca2db1c95ae5b7c3ee9f206ce9aa9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNhYzdjNWExZWNhMmRiMWM5NWFlNWI3YzNlZTlmMjA2Y2U5YWE5ZA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-15T10:12:57Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-15T10:12:57Z"}, "message": "Impl items should have a DefID\n\nThis adds DefId mappings for impl items, this is a building block where\nthe TyTy::FnType will include the DefId of the respective function, which\nwill simplify the backend a bit in relation to optional trait functions\nwith a body.", "tree": {"sha": "e63029333495f98b880706aa96cb6d4ca3ec5ce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e63029333495f98b880706aa96cb6d4ca3ec5ce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73ac7c5a1eca2db1c95ae5b7c3ee9f206ce9aa9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73ac7c5a1eca2db1c95ae5b7c3ee9f206ce9aa9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73ac7c5a1eca2db1c95ae5b7c3ee9f206ce9aa9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73ac7c5a1eca2db1c95ae5b7c3ee9f206ce9aa9d/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "089e62f33c328afea756ec4b92f5823584b08a3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/089e62f33c328afea756ec4b92f5823584b08a3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/089e62f33c328afea756ec4b92f5823584b08a3a"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "9fa65a594850d8c3a873a77ca20fecff7a4c1a5c", "filename": "gcc/rust/hir/rust-ast-lower-implitem.h", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73ac7c5a1eca2db1c95ae5b7c3ee9f206ce9aa9d/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73ac7c5a1eca2db1c95ae5b7c3ee9f206ce9aa9d/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-implitem.h?ref=73ac7c5a1eca2db1c95ae5b7c3ee9f206ce9aa9d", "patch": "@@ -70,13 +70,14 @@ class ASTLowerImplItem : public ASTLoweringBase\n \t\t\t\t   mappings->get_next_hir_id (crate_num),\n \t\t\t\t   mappings->get_next_localdef_id (crate_num));\n \n-    translated = new HIR::TypeAlias (mapping, alias.get_new_type_name (),\n-\t\t\t\t     std::move (generic_params),\n-\t\t\t\t     std::move (where_clause),\n-\t\t\t\t     std::unique_ptr<HIR::Type> (existing_type),\n-\t\t\t\t     std::move (vis), alias.get_outer_attrs (),\n-\t\t\t\t     alias.get_locus ());\n+    auto type_alias = new HIR::TypeAlias (\n+      mapping, alias.get_new_type_name (), std::move (generic_params),\n+      std::move (where_clause), std::unique_ptr<HIR::Type> (existing_type),\n+      std::move (vis), alias.get_outer_attrs (), alias.get_locus ());\n \n+    translated = type_alias;\n+\n+    mappings->insert_defid_mapping (mapping.get_defid (), type_alias);\n     mappings->insert_hir_implitem (mapping.get_crate_num (),\n \t\t\t\t   mapping.get_hirid (), parent_impl_id,\n \t\t\t\t   translated);\n@@ -104,6 +105,7 @@ class ASTLowerImplItem : public ASTLoweringBase\n \t\t\t       constant.get_locus ());\n     translated = translated_constant;\n \n+    mappings->insert_defid_mapping (mapping.get_defid (), translated_constant);\n     mappings->insert_hir_implitem (mapping.get_crate_num (),\n \t\t\t\t   mapping.get_hirid (), parent_impl_id,\n \t\t\t\t   translated);\n@@ -177,6 +179,7 @@ class ASTLowerImplItem : public ASTLoweringBase\n \t\t\t   std::move (vis), function.get_outer_attrs (),\n \t\t\t   HIR::SelfParam::error (), locus);\n \n+    mappings->insert_defid_mapping (mapping.get_defid (), fn);\n     mappings->insert_hir_implitem (mapping.get_crate_num (),\n \t\t\t\t   mapping.get_hirid (), parent_impl_id, fn);\n     mappings->insert_location (crate_num, mapping.get_hirid (),\n@@ -257,6 +260,7 @@ class ASTLowerImplItem : public ASTLoweringBase\n \t\t\t   std::move (vis), method.get_outer_attrs (),\n \t\t\t   std::move (self_param), locus);\n \n+    mappings->insert_defid_mapping (mapping.get_defid (), mth);\n     mappings->insert_hir_implitem (mapping.get_crate_num (),\n \t\t\t\t   mapping.get_hirid (), parent_impl_id, mth);\n     mappings->insert_location (crate_num, mapping.get_hirid (),"}]}