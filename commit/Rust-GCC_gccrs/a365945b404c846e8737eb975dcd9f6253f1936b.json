{"sha": "a365945b404c846e8737eb975dcd9f6253f1936b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM2NTk0NWI0MDRjODQ2ZTg3MzdlYjk3NWRjZDlmNjI1M2YxOTM2Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-12-12T12:15:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-12-12T12:15:38Z"}, "message": "re PR tree-optimization/83385 ([graphite] Wrong code w/ -O1 -floop-nest-optimize)\n\n2017-12-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/83385\n\t* graphite-scop-detection.c (get_order, order): Remove.\n\t(bb_to_rpo): New global.\n\t(cmp_pbbs): Adjust.\n\t(build_scops): Sort pbbs in RPO order.\n\n\t* gcc.dg/graphite/pr83385.c: New testcase.\n\nFrom-SVN: r255579", "tree": {"sha": "ac4b3804e248d0d9a7a517030b5e5193dc7c30eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac4b3804e248d0d9a7a517030b5e5193dc7c30eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a365945b404c846e8737eb975dcd9f6253f1936b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a365945b404c846e8737eb975dcd9f6253f1936b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a365945b404c846e8737eb975dcd9f6253f1936b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a365945b404c846e8737eb975dcd9f6253f1936b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c5060cadf030f6517a1552bf0fc263cb03eb96c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5060cadf030f6517a1552bf0fc263cb03eb96c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5060cadf030f6517a1552bf0fc263cb03eb96c4"}], "stats": {"total": 85, "additions": 53, "deletions": 32}, "files": [{"sha": "4d8072ecdd452b88edf28503d6682d5dd66f4f4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a365945b404c846e8737eb975dcd9f6253f1936b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a365945b404c846e8737eb975dcd9f6253f1936b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a365945b404c846e8737eb975dcd9f6253f1936b", "patch": "@@ -1,3 +1,11 @@\n+2017-12-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83385\n+\t* graphite-scop-detection.c (get_order, order): Remove.\n+\t(bb_to_rpo): New global.\n+\t(cmp_pbbs): Adjust.\n+\t(build_scops): Sort pbbs in RPO order.\n+\n 2017-12-12  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* combine.c (simplify_set): Do not transform subregs to zero_extends"}, {"sha": "bb4cfc3899e3d5f019375fa3781a147b51d0e2a2", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 8, "deletions": 32, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a365945b404c846e8737eb975dcd9f6253f1936b/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a365945b404c846e8737eb975dcd9f6253f1936b/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=a365945b404c846e8737eb975dcd9f6253f1936b", "patch": "@@ -1608,26 +1608,7 @@ gather_bbs::after_dom_children (basic_block bb)\n /* Compute sth like an execution order, dominator order with first executing\n    edges that stay inside the current loop, delaying processing exit edges.  */\n \n-static vec<unsigned> order;\n-\n-static void\n-get_order (scop_p scop, basic_block bb, vec<unsigned> *order, unsigned *dfs_num)\n-{\n-  if (! bb_in_sese_p (bb, scop->scop_info->region))\n-    return;\n-\n-  (*order)[bb->index] = (*dfs_num)++;\n-  for (basic_block son = first_dom_son (CDI_DOMINATORS, bb);\n-       son;\n-       son = next_dom_son (CDI_DOMINATORS, son))\n-    if (flow_bb_inside_loop_p (bb->loop_father, son))\n-      get_order (scop, son, order, dfs_num);\n-  for (basic_block son = first_dom_son (CDI_DOMINATORS, bb);\n-       son;\n-       son = next_dom_son (CDI_DOMINATORS, son))\n-    if (! flow_bb_inside_loop_p (bb->loop_father, son))\n-      get_order (scop, son, order, dfs_num);\n-}\n+static int *bb_to_rpo;\n \n /* Helper for qsort, sorting after order above.  */\n \n@@ -1636,9 +1617,11 @@ cmp_pbbs (const void *pa, const void *pb)\n {\n   poly_bb_p bb1 = *((const poly_bb_p *)pa);\n   poly_bb_p bb2 = *((const poly_bb_p *)pb);\n-  if (order[bb1->black_box->bb->index] < order[bb2->black_box->bb->index])\n+  if (bb_to_rpo[bb1->black_box->bb->index]\n+      < bb_to_rpo[bb2->black_box->bb->index])\n     return -1;\n-  else if (order[bb1->black_box->bb->index] > order[bb2->black_box->bb->index])\n+  else if (bb_to_rpo[bb1->black_box->bb->index]\n+\t   > bb_to_rpo[bb2->black_box->bb->index])\n     return 1;\n   else\n     return 0;\n@@ -1662,7 +1645,7 @@ build_scops (vec<scop_p> *scops)\n   /* Domwalk needs a bb to RPO mapping.  Compute it once here.  */\n   int *postorder = XNEWVEC (int, n_basic_blocks_for_fn (cfun));\n   int postorder_num = pre_and_rev_post_order_compute (NULL, postorder, true);\n-  int *bb_to_rpo = XNEWVEC (int, last_basic_block_for_fn (cfun));\n+  bb_to_rpo = XNEWVEC (int, last_basic_block_for_fn (cfun));\n   for (int i = 0; i < postorder_num; ++i)\n     bb_to_rpo[postorder[i]] = i;\n   free (postorder);\n@@ -1676,16 +1659,8 @@ build_scops (vec<scop_p> *scops)\n       /* Record all basic blocks and their conditions in REGION.  */\n       gather_bbs (CDI_DOMINATORS, scop, bb_to_rpo).walk (s->entry->dest);\n \n-      /* domwalk does not fulfil our code-generations constraints on the\n-         order of pbb which is to produce sth like execution order, delaying\n-\t exection of loop exit edges.  So compute such order and sort after\n-\t that.  */\n-      order.create (last_basic_block_for_fn (cfun));\n-      order.quick_grow (last_basic_block_for_fn (cfun));\n-      unsigned dfs_num = 0;\n-      get_order (scop, s->entry->dest, &order, &dfs_num);\n+      /* Sort pbbs after execution order for initial schedule generation.  */\n       scop->pbbs.qsort (cmp_pbbs);\n-      order.release ();\n \n       if (! build_alias_set (scop))\n \t{\n@@ -1732,6 +1707,7 @@ build_scops (vec<scop_p> *scops)\n     }\n \n   free (bb_to_rpo);\n+  bb_to_rpo = NULL;\n   DEBUG_PRINT (dp << \"number of SCoPs: \" << (scops ? scops->length () : 0););\n }\n "}, {"sha": "09fe88b2155ecfd384e05de2f5fbdaeee6060027", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a365945b404c846e8737eb975dcd9f6253f1936b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a365945b404c846e8737eb975dcd9f6253f1936b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a365945b404c846e8737eb975dcd9f6253f1936b", "patch": "@@ -1,3 +1,8 @@\n+2017-12-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83385\n+\t* gcc.dg/graphite/pr83385.c: New testcase.\n+\n 2017-12-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/82679"}, {"sha": "627ff699040e1913bc0154a52eea8786c77bbede", "filename": "gcc/testsuite/gcc.dg/graphite/pr83385.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a365945b404c846e8737eb975dcd9f6253f1936b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83385.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a365945b404c846e8737eb975dcd9f6253f1936b/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83385.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83385.c?ref=a365945b404c846e8737eb975dcd9f6253f1936b", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O1 -floop-nest-optimize\" } */\n+\n+int xc, n1 = 0;\n+int bx[2];\n+\n+int\n+main (void)\n+{\n+  int aj = 1;\n+  int cs;\n+\n+  for (cs = aj; cs >= 0; --cs)\n+    {\n+      int sq;\n+\n+      for (sq = 0; sq < 2; ++sq)\n+\t{\n+\t  if (aj != 0)\n+\t    --n1;\n+\n+\t  for (xc = 0; xc < 2; ++xc)\n+\t    bx[xc] = 0;\n+\t}\n+\n+      --aj;\n+    }\n+\n+  if (n1 != -2)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}