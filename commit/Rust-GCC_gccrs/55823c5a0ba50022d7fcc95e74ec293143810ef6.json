{"sha": "55823c5a0ba50022d7fcc95e74ec293143810ef6", "node_id": "C_kwDOANBUbNoAKDU1ODIzYzVhMGJhNTAwMjJkN2ZjYzk1ZTc0ZWMyOTMxNDM4MTBlZjY", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-12-12T21:16:25Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-12-13T11:15:41Z"}, "message": "libstdc++: Make ranges::size and ranges::empty check for unbounded arrays\n\nPassing IncompleteType(&)[] to ranges::begin produces an error outside\nthe immediate context, which is fine for ranges::begin, but it means\nthat we fail to enforce the SFINAE-able constraints for ranges::size and\nranges::size. They should not be callable for any array of unknown\nbound, whether the type is complete or not. Because we don't enforce\nthat in their constraints, we get a hard error when they try to use\nranges::begin.\n\nThis simply adds explicit checks for arrays of unknown bound to the\nconstraints for ranges::size and ranges::empty. We only need to check it\nfor the __sentinel_size and __eq_iter_empty concepts, because those are\nthe ones that are relevant to arrays, and which try to use\nranges::begin.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/ranges_base.h (ranges::size, ranges::empty): Add\n\texplicit check for unbounded arrays before using ranges::begin.\n\t* testsuite/std/ranges/access/empty.cc: Check handling of unbounded\n\tarrays.\n\t* testsuite/std/ranges/access/size.cc: Likewise.", "tree": {"sha": "42fe968367bd37354d599b1ea8396344dba783f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42fe968367bd37354d599b1ea8396344dba783f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55823c5a0ba50022d7fcc95e74ec293143810ef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55823c5a0ba50022d7fcc95e74ec293143810ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55823c5a0ba50022d7fcc95e74ec293143810ef6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55823c5a0ba50022d7fcc95e74ec293143810ef6/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef5d671cd80a4afa4f74c3dfe2904c63f51fcfde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5d671cd80a4afa4f74c3dfe2904c63f51fcfde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef5d671cd80a4afa4f74c3dfe2904c63f51fcfde"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "bf95823668b5486eab97c8efa397dfe06bc6b69e", "filename": "libstdc++-v3/include/bits/ranges_base.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55823c5a0ba50022d7fcc95e74ec293143810ef6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55823c5a0ba50022d7fcc95e74ec293143810ef6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_base.h?ref=55823c5a0ba50022d7fcc95e74ec293143810ef6", "patch": "@@ -383,6 +383,8 @@ namespace ranges\n     template<typename _Tp>\n       concept __sentinel_size = requires(_Tp& __t)\n \t{\n+\t  requires (!is_unbounded_array_v<remove_reference_t<_Tp>>);\n+\n \t  { _Begin{}(__t) } -> forward_iterator;\n \n \t  { _End{}(__t) } -> sized_sentinel_for<decltype(_Begin{}(__t))>;\n@@ -466,6 +468,8 @@ namespace ranges\n     template<typename _Tp>\n       concept __eq_iter_empty = requires(_Tp& __t)\n \t{\n+\t  requires (!is_unbounded_array_v<remove_reference_t<_Tp>>);\n+\n \t  { _Begin{}(__t) } -> forward_iterator;\n \n \t  bool(_Begin{}(__t) == _End{}(__t));"}, {"sha": "83b40872bd42f91a13c0d30355a2986b52f378b1", "filename": "libstdc++-v3/testsuite/std/ranges/access/empty.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55823c5a0ba50022d7fcc95e74ec293143810ef6/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Faccess%2Fempty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55823c5a0ba50022d7fcc95e74ec293143810ef6/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Faccess%2Fempty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Faccess%2Fempty.cc?ref=55823c5a0ba50022d7fcc95e74ec293143810ef6", "patch": "@@ -121,6 +121,16 @@ test04()\n   static_assert( ! noexcept(std::ranges::empty(E3{})) );\n }\n \n+template<typename T>\n+  concept has_empty = requires (T& t) { std::ranges::empty(t); };\n+\n+// If T is an array of unknown bound, ranges::empty(E) is ill-formed.\n+static_assert( ! has_empty<int[]> );\n+static_assert( ! has_empty<int(&)[]> );\n+static_assert( ! has_empty<int[][2]> );\n+struct Incomplete;\n+static_assert( ! has_empty<Incomplete[]> );\n+\n int\n main()\n {"}, {"sha": "24857975f7b03fa1e56f61a02fdd7a51ad7d2070", "filename": "libstdc++-v3/testsuite/std/ranges/access/size.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55823c5a0ba50022d7fcc95e74ec293143810ef6/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Faccess%2Fsize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55823c5a0ba50022d7fcc95e74ec293143810ef6/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Faccess%2Fsize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Faccess%2Fsize.cc?ref=55823c5a0ba50022d7fcc95e74ec293143810ef6", "patch": "@@ -122,6 +122,16 @@ test06()\n   static_assert( std::ranges::size(R{}) == 42 );\n }\n \n+template<typename T>\n+  concept has_size = requires (T& t) { std::ranges::size(t); };\n+\n+// If T is an array of unknown bound, ranges::size(E) is ill-formed.\n+static_assert( ! has_size<int[]> );\n+static_assert( ! has_size<int(&)[]> );\n+static_assert( ! has_size<int[][2]> );\n+struct Incomplete;\n+static_assert( ! has_size<Incomplete[]> );\n+\n int\n main()\n {"}]}