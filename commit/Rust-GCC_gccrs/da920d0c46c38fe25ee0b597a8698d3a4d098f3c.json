{"sha": "da920d0c46c38fe25ee0b597a8698d3a4d098f3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE5MjBkMGM0NmMzOGZlMjVlZTBiNTk3YTg2OThkM2E0ZDA5OGYzYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-26T09:35:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-26T09:35:52Z"}, "message": "tree: Fix -fcompare-debug issues due to protected_set_expr_location [PR94323]\n\nThe following testcase FAILs since recently when the C++ FE started calling\nprotected_set_expr_location more often.\nWith -g, it is called on a STATEMENT_LIST that contains a DEBUG_BEGIN_STMT\nand CLEANUP_POINT_EXPR, and as STATEMENT_LISTs have !CAN_HAVE_LOCATION_P,\nnothing is set.  Without -g, it is called instead on the CLEANUP_POINT_EXPR\ndirectly and changes its location.\n\nThe following patch recurses on the single non-DEBUG_BEGIN_STMT statement\nof a STATEMENT_LIST if any to make the two behave the same.\n\n2020-03-26  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/94323\n\t* tree.c (protected_set_expr_location): Recurse on STATEMENT_LIST\n\tthat contains exactly one non-DEBUG_BEGIN_STMT statement.\n\n\t* g++.dg/debug/pr94323.C: New test.", "tree": {"sha": "bd1bd9d225cc9a416eb2df6b4c01883d97207e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd1bd9d225cc9a416eb2df6b4c01883d97207e63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da920d0c46c38fe25ee0b597a8698d3a4d098f3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da920d0c46c38fe25ee0b597a8698d3a4d098f3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da920d0c46c38fe25ee0b597a8698d3a4d098f3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da920d0c46c38fe25ee0b597a8698d3a4d098f3c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6730f06420106af01e26414f046626b5292565d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6730f06420106af01e26414f046626b5292565d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6730f06420106af01e26414f046626b5292565d"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "cc7f4d4ab377786a18d190d8c656c2bd053568b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da920d0c46c38fe25ee0b597a8698d3a4d098f3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da920d0c46c38fe25ee0b597a8698d3a4d098f3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da920d0c46c38fe25ee0b597a8698d3a4d098f3c", "patch": "@@ -1,5 +1,9 @@\n 2020-03-26  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/94323\n+\t* tree.c (protected_set_expr_location): Recurse on STATEMENT_LIST\n+\tthat contains exactly one non-DEBUG_BEGIN_STMT statement.\n+\n \tPR debug/94281\n \t* gimple.h (gimple_seq_first_nondebug_stmt): New function.\n \t(gimple_seq_last_nondebug_stmt): Don't return NULL if seq contains"}, {"sha": "4d73d481a6477a7eb5b95a5fe42a8d6bd06be711", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da920d0c46c38fe25ee0b597a8698d3a4d098f3c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da920d0c46c38fe25ee0b597a8698d3a4d098f3c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da920d0c46c38fe25ee0b597a8698d3a4d098f3c", "patch": "@@ -1,3 +1,8 @@\n+2020-03-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/94323\n+\t* g++.dg/debug/pr94323.C: New test.\n+\n 2020-03-26  Martin Liska  <mliska@suse.cz>\n \n \tPR testsuite/94334"}, {"sha": "eac81a3867effa5f2d59db47507c17fe05ec70dd", "filename": "gcc/testsuite/g++.dg/debug/pr94323.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da920d0c46c38fe25ee0b597a8698d3a4d098f3c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr94323.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da920d0c46c38fe25ee0b597a8698d3a4d098f3c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr94323.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr94323.C?ref=da920d0c46c38fe25ee0b597a8698d3a4d098f3c", "patch": "@@ -0,0 +1,13 @@\n+// PR debug/94323\n+// { dg-do compile }\n+// { dg-options \"-O2 -fcompare-debug\" }\n+\n+volatile int a;\n+\n+void\n+foo ()\n+{\n+  ({\n+     a;\n+   });\n+}"}, {"sha": "63dc6730b2b637182aa3476aa0738d682f7b8102", "filename": "gcc/tree.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da920d0c46c38fe25ee0b597a8698d3a4d098f3c/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da920d0c46c38fe25ee0b597a8698d3a4d098f3c/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=da920d0c46c38fe25ee0b597a8698d3a4d098f3c", "patch": "@@ -5146,6 +5146,33 @@ protected_set_expr_location (tree t, location_t loc)\n {\n   if (CAN_HAVE_LOCATION_P (t))\n     SET_EXPR_LOCATION (t, loc);\n+  else if (t && TREE_CODE (t) == STATEMENT_LIST)\n+    {\n+      /* With -gstatement-frontiers we could have a STATEMENT_LIST with\n+\t DEBUG_BEGIN_STMT(s) and only a single other stmt, which with\n+\t -g wouldn't be present and we'd have that single other stmt\n+\t directly instead.  */\n+      struct tree_statement_list_node *n = STATEMENT_LIST_HEAD (t);\n+      if (!n)\n+\treturn;\n+      while (TREE_CODE (n->stmt) == DEBUG_BEGIN_STMT)\n+\t{\n+\t  n = n->next;\n+\t  if (!n)\n+\t    return;\n+\t}\n+      tree t2 = n->stmt;\n+      do\n+\t{\n+\t  n = n->next;\n+\t  if (!n)\n+\t    {\n+\t      protected_set_expr_location (t2, loc);\n+\t      return;\n+\t    }\n+\t}\n+      while (TREE_CODE (n->stmt) == DEBUG_BEGIN_STMT);\n+    }\n }\n \n /* Data used when collecting DECLs and TYPEs for language data removal.  */"}]}