{"sha": "fb5e7daea59060603a2e526cab4e35b32a8e9438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI1ZTdkYWVhNTkwNjA2MDNhMmU1MjZjYWI0ZTM1YjMyYThlOTQzOA==", "commit": {"author": {"name": "Mikael Pettersson", "email": "mikpe@it.uu.se", "date": "2016-12-05T11:27:55Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-12-05T11:27:55Z"}, "message": "re PR ada/48835 (porting GNAT to m68k-linux)\n\n\tPR ada/48835\n\t* gcc-interface/Makefile.in: Add support for m68k-linux.\n\t* system-linux-m68k.ads: New file.\n\nFrom-SVN: r243247", "tree": {"sha": "0859ca0e41ae440752062996cdc5573736cc44d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0859ca0e41ae440752062996cdc5573736cc44d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb5e7daea59060603a2e526cab4e35b32a8e9438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5e7daea59060603a2e526cab4e35b32a8e9438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5e7daea59060603a2e526cab4e35b32a8e9438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5e7daea59060603a2e526cab4e35b32a8e9438/comments", "author": null, "committer": null, "parents": [{"sha": "62440b4f0e4d6e0dc193d315e79753bb4c5edd99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62440b4f0e4d6e0dc193d315e79753bb4c5edd99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62440b4f0e4d6e0dc193d315e79753bb4c5edd99"}], "stats": {"total": 190, "additions": 190, "deletions": 0}, "files": [{"sha": "858f8cb5abb0a0c825fe83869c16015b8ead5269", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5e7daea59060603a2e526cab4e35b32a8e9438/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5e7daea59060603a2e526cab4e35b32a8e9438/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fb5e7daea59060603a2e526cab4e35b32a8e9438", "patch": "@@ -1,3 +1,9 @@\n+2016-12-05  Mikael Pettersson  <mikpe@it.uu.se>\n+\n+\tPR ada/48835\n+\t* gcc-interface/Makefile.in: Add support for m68k-linux.\n+\t* system-linux-m68k.ads: New file.\n+\n 2016-12-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* system-darwin-ppc.ads (Support_Atomic_Primitives): Set to True only"}, {"sha": "98889c0f30f49debbcad5f04459d0b7bc5ac2639", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5e7daea59060603a2e526cab4e35b32a8e9438/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5e7daea59060603a2e526cab4e35b32a8e9438/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=fb5e7daea59060603a2e526cab4e35b32a8e9438", "patch": "@@ -2049,6 +2049,35 @@ ifeq ($(strip $(filter-out hppa% linux%,$(target_cpu) $(target_os))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+# M68K Linux\n+ifeq ($(strip $(filter-out m68k% linux%,$(target_cpu) $(target_os))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<a-intnam-linux.ads \\\n+  s-inmaop.adb<s-inmaop-posix.adb \\\n+  s-intman.adb<s-intman-posix.adb \\\n+  s-linux.ads<s-linux.ads \\\n+  s-osinte.adb<s-osinte-posix.adb \\\n+  s-osinte.ads<s-osinte-linux.ads \\\n+  s-osprim.adb<s-osprim-posix.adb \\\n+  s-taprop.adb<s-taprop-linux.adb \\\n+  s-tasinf.ads<s-tasinf-linux.ads \\\n+  s-tasinf.adb<s-tasinf-linux.adb \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n+  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+  system.ads<system-linux-m68k.ads\n+\n+  TOOLS_TARGET_PAIRS =  \\\n+    mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n+    indepsw.adb<indepsw-gnu.adb\n+\n+  EXTRA_GNATRTL_TASKING_OBJS=s-linux.o\n+  EH_MECHANISM=-gcc\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n # SH4 Linux\n ifeq ($(strip $(filter-out sh4% linux%,$(target_cpu) $(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\"}, {"sha": "9aa6143f26207bb019db9e0364e52a701628d150", "filename": "gcc/ada/system-linux-m68k.ads", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5e7daea59060603a2e526cab4e35b32a8e9438/gcc%2Fada%2Fsystem-linux-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5e7daea59060603a2e526cab4e35b32a8e9438/gcc%2Fada%2Fsystem-linux-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-m68k.ads?ref=fb5e7daea59060603a2e526cab4e35b32a8e9438", "patch": "@@ -0,0 +1,155 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                         (GNU/Linux/m68k Version)                         --\n+--                                                                          --\n+--          Copyright (C) 2014-2016, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.000_001;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   pragma Preelaborable_Initialization (Address);\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := High_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  Is the following actually true for GNU/Linux/m68k?\n+   --\n+   --  0 .. 98 corresponds to the system priority range 1 .. 99.\n+   --\n+   --  If the scheduling policy is SCHED_FIFO or SCHED_RR the runtime makes use\n+   --  of the entire range provided by the system.\n+   --\n+   --  If the scheduling policy is SCHED_OTHER the only valid system priority\n+   --  is 1 and other values are simply ignored.\n+\n+   Max_Priority           : constant Positive := 97;\n+   Max_Interrupt_Priority : constant Positive := 98;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 98;\n+   subtype Priority           is Any_Priority range  0 .. 97;\n+   subtype Interrupt_Priority is Any_Priority range 98 .. 98;\n+\n+   Default_Priority : constant Priority := 48;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Stack_Check_Limits        : constant Boolean := False;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Always_Compatible_Rep     : constant Boolean := False;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   Frontend_Exceptions       : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+\n+end System;"}]}