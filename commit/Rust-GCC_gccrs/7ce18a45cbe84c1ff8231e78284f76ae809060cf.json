{"sha": "7ce18a45cbe84c1ff8231e78284f76ae809060cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NlMThhNDVjYmU4NGMxZmY4MjMxZTc4Mjg0Zjc2YWU4MDkwNjBjZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-07-30T21:02:44Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-07-30T21:02:44Z"}, "message": "re PR libstdc++/40917 (FAIL: ext/array_allocator/check_delete.cc (test for excess errors))\n\n2009-07-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/40917\n\t* testsuite/util/replacement_memory_operators.h: Add missing includes,\n\ttweak qualifications.\n\n2009-07-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/40916\n\t* testsuite/23_containers/list/modifiers/swap/1.cc: Fix include order.\n\t* testsuite/23_containers/list/modifiers/swap/2.cc: Likewise.\n\t* testsuite/23_containers/list/modifiers/swap/2.cc: Likewise.\n\nFrom-SVN: r150272", "tree": {"sha": "7e6306a5726814cac0b4e9fd2a8a3ed6994680d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e6306a5726814cac0b4e9fd2a8a3ed6994680d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ce18a45cbe84c1ff8231e78284f76ae809060cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce18a45cbe84c1ff8231e78284f76ae809060cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ce18a45cbe84c1ff8231e78284f76ae809060cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ce18a45cbe84c1ff8231e78284f76ae809060cf/comments", "author": null, "committer": null, "parents": [{"sha": "29e6733c20c98fe73c79ca9cac2dd758f3b3d67e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e6733c20c98fe73c79ca9cac2dd758f3b3d67e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e6733c20c98fe73c79ca9cac2dd758f3b3d67e"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "81226a044f75ce1bf007e67876ff57719bc9dd52", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce18a45cbe84c1ff8231e78284f76ae809060cf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce18a45cbe84c1ff8231e78284f76ae809060cf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7ce18a45cbe84c1ff8231e78284f76ae809060cf", "patch": "@@ -1,3 +1,16 @@\n+2009-07-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/40917\n+\t* testsuite/util/replacement_memory_operators.h: Add missing includes,\n+\ttweak qualifications.\n+\n+2009-07-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/40916\n+\t* testsuite/23_containers/list/modifiers/swap/1.cc: Fix include order.\n+\t* testsuite/23_containers/list/modifiers/swap/2.cc: Likewise.\n+\t* testsuite/23_containers/list/modifiers/swap/2.cc: Likewise.\n+\n 2009-07-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* acinclude.m4 (GLIBCXX_CONFIGURE): Use m4_rename_force."}, {"sha": "767640ea996864ca9bebcb8bdfe49cee1495d7e1", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/swap/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce18a45cbe84c1ff8231e78284f76ae809060cf/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce18a45cbe84c1ff8231e78284f76ae809060cf/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F1.cc?ref=7ce18a45cbe84c1ff8231e78284f76ae809060cf", "patch": "@@ -15,8 +15,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include \"1.h\"\n #include <list>\n+#include \"1.h\"\n \n namespace std\n {"}, {"sha": "d1faf025f2f7bac15d38168ba18e84a1fb41de5c", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/swap/2.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce18a45cbe84c1ff8231e78284f76ae809060cf/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce18a45cbe84c1ff8231e78284f76ae809060cf/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F2.cc?ref=7ce18a45cbe84c1ff8231e78284f76ae809060cf", "patch": "@@ -17,8 +17,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include \"2.h\"\n #include <list>\n+#include \"2.h\"\n \n int main()\n { "}, {"sha": "676466d537a4aecd76d8e5f2af0906ee3669f7a0", "filename": "libstdc++-v3/testsuite/23_containers/list/modifiers/swap/3.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce18a45cbe84c1ff8231e78284f76ae809060cf/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce18a45cbe84c1ff8231e78284f76ae809060cf/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fmodifiers%2Fswap%2F3.cc?ref=7ce18a45cbe84c1ff8231e78284f76ae809060cf", "patch": "@@ -17,8 +17,8 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include \"3.h\"\n #include <list>\n+#include \"3.h\"\n \n int main()\n { "}, {"sha": "c7b19edc457a2340a57ebcd3a7724f05f10335a4", "filename": "libstdc++-v3/testsuite/util/replacement_memory_operators.h", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ce18a45cbe84c1ff8231e78284f76ae809060cf/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Freplacement_memory_operators.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ce18a45cbe84c1ff8231e78284f76ae809060cf/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Freplacement_memory_operators.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Freplacement_memory_operators.h?ref=7ce18a45cbe84c1ff8231e78284f76ae809060cf", "patch": "@@ -17,14 +17,17 @@\n // <http://www.gnu.org/licenses/>.\n \n #include <exception>\n+#include <stdexcept>\n+#include <cstdlib>\n+#include <cstdio>\n \n namespace __gnu_test\n {\n   struct counter_error : public std::exception { };\n \n   struct counter\n   {\n-    size_t \t_M_count;\n+    std::size_t _M_count;\n     bool\t_M_throw;\n \n     counter() : _M_count(0), _M_throw(true) { }\n@@ -48,7 +51,7 @@ namespace __gnu_test\n       return g;\n     }\n   \n-    static size_t\n+    static std::size_t\n     count() { return get()._M_count; }\n \n     static void\n@@ -85,7 +88,7 @@ namespace __gnu_test\n \n void* operator new(std::size_t size) throw(std::bad_alloc)\n {\n-  printf(\"operator new is called \\n\");\n+  std::printf(\"operator new is called \\n\");\n   void* p = std::malloc(size);\n   if (p == NULL)\n     throw std::bad_alloc();\n@@ -95,16 +98,16 @@ void* operator new(std::size_t size) throw(std::bad_alloc)\n  \n void operator delete(void* p) throw()\n {\n-  printf(\"operator delete is called \\n\");\n+  std::printf(\"operator delete is called \\n\");\n   if (p != NULL)\n     {\n       std::free(p);\n       __gnu_test::counter::decrement();\n \n       std::size_t count = __gnu_test::counter::count(); \n       if (count == 0)\n-\tprintf(\"All memory released \\n\");\n+\tstd::printf(\"All memory released \\n\");\n       else\n-\tprintf(\"%lu allocations to be released \\n\", count);\n+\tstd::printf(\"%lu allocations to be released \\n\", count);\n     }\n }"}]}