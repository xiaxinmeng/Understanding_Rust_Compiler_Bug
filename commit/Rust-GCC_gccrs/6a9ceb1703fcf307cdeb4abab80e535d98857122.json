{"sha": "6a9ceb1703fcf307cdeb4abab80e535d98857122", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE5Y2ViMTcwM2ZjZjMwN2NkZWI0YWJhYjgwZTUzNWQ5ODg1NzEyMg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-12-19T14:33:18Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-12-19T14:33:18Z"}, "message": "re PR tree-optimization/51583 (One more missing force_gimple_operand in SRA)\n\n2011-12-19  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/51583\n\t* tree-sra.c (load_assign_lhs_subreplacements): Call\n\tforce_gimple_operand_gsi when necessary also in case of no\n\tcorresponding replacement on the RHS.\n\n\t* testsuite/gcc.dg/tree-ssa/pr51583.c: New test.\n\nFrom-SVN: r182483", "tree": {"sha": "47ffc6ec55f4c5ac4dcae8db94b431f1f911d21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47ffc6ec55f4c5ac4dcae8db94b431f1f911d21b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a9ceb1703fcf307cdeb4abab80e535d98857122", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9ceb1703fcf307cdeb4abab80e535d98857122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9ceb1703fcf307cdeb4abab80e535d98857122", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9ceb1703fcf307cdeb4abab80e535d98857122/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1a6c5b26a1b92a2e64f5373139f80aafd8bde81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1a6c5b26a1b92a2e64f5373139f80aafd8bde81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1a6c5b26a1b92a2e64f5373139f80aafd8bde81"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "7c60f7eeeb488f658a20dcc12340a20dbf44efc9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ceb1703fcf307cdeb4abab80e535d98857122/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ceb1703fcf307cdeb4abab80e535d98857122/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a9ceb1703fcf307cdeb4abab80e535d98857122", "patch": "@@ -1,3 +1,10 @@\n+2011-12-19  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/51583\n+\t* tree-sra.c (load_assign_lhs_subreplacements): Call\n+\tforce_gimple_operand_gsi when necessary also in case of no\n+\tcorresponding replacement on the RHS.\n+\n 2011-12-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gimple.h (gimplify_seq_add_stmt): Rename to..."}, {"sha": "b1a3762b47516d2d696dc6b31ef94d6ac67b2839", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ceb1703fcf307cdeb4abab80e535d98857122/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ceb1703fcf307cdeb4abab80e535d98857122/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a9ceb1703fcf307cdeb4abab80e535d98857122", "patch": "@@ -1,3 +1,8 @@\n+2011-12-19  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/51583\n+\t* gcc.dg/tree-ssa/pr51583.c: New test.\n+\n 2011-12-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/51596"}, {"sha": "2c4ec4723c47e2a6873fae12e440fcab2aefb01a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr51583.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ceb1703fcf307cdeb4abab80e535d98857122/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr51583.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ceb1703fcf307cdeb4abab80e535d98857122/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr51583.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr51583.c?ref=6a9ceb1703fcf307cdeb4abab80e535d98857122", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1\" } */\n+\n+typedef __complex__ double Value;\n+\n+union U\n+{\n+  Value v;\n+  char c[sizeof(Value)];\n+};\n+\n+struct S\n+{\n+  union U u;\n+  int i,j;\n+};\n+\n+Value gv;\n+int gi, gj;\n+\n+Value foo (void)\n+{\n+  struct S s,t;\n+\n+  t.i = gi;\n+  t.j = gj;\n+  t.u.v = gv;\n+  t.u.c[0] = 0;\n+\n+  s = t;\n+  __imag__ s.u.v += s.i;\n+\n+  return s.u.v;\n+}"}, {"sha": "db9b9bf4452338a524bdef01c02ac14fb7b03687", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9ceb1703fcf307cdeb4abab80e535d98857122/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9ceb1703fcf307cdeb4abab80e535d98857122/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=6a9ceb1703fcf307cdeb4abab80e535d98857122", "patch": "@@ -2752,6 +2752,9 @@ load_assign_lhs_subreplacements (struct access *lacc, struct access *top_racc,\n \t      else\n \t\trhs = build_ref_for_model (loc, top_racc->base, offset, lacc,\n \t\t\t\t\t    new_gsi, true);\n+\t      if (lacc->grp_partial_lhs)\n+\t\trhs = force_gimple_operand_gsi (new_gsi, rhs, true, NULL_TREE,\n+\t\t\t\t\t\tfalse, GSI_NEW_STMT);\n \t    }\n \n \t  stmt = gimple_build_assign (get_access_replacement (lacc), rhs);"}]}