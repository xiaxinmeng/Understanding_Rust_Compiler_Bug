{"sha": "a5e022d5d6b2921c5e4ca19bc366d87dd0195d01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVlMDIyZDVkNmIyOTIxYzVlNGNhMTliYzM2NmQ4N2RkMDE5NWQwMQ==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@arm.com", "date": "2014-09-09T05:30:36Z"}, "committer": {"name": "Zhenqiang Chen", "email": "zqchen@gcc.gnu.org", "date": "2014-09-09T05:30:36Z"}, "message": "shrink-wrap.h: #define SHRINK_WRAPPING_ENABLED.\n\nChangeLog:\n2014-09-09  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n\n\t* shrink-wrap.h: #define SHRINK_WRAPPING_ENABLED.\n\t* ira.c: #include \"shrink-wrap.h\"\n\t(split_live_ranges_for_shrink_wrap): Use SHRINK_WRAPPING_ENABLED.\n\t* ifcvt.c: #include \"shrink-wrap.h\"\n\t(dead_or_predicable): Use SHRINK_WRAPPING_ENABLED.\n\ntestsuite/ChangeLog:\n2014-09-09  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n\n\t* gcc.target/arm/split-live-ranges-for-shrink-wrap.c: New test.\n\nFrom-SVN: r215041", "tree": {"sha": "fa424604153880fba58f911b58a8fd6e973ae8d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa424604153880fba58f911b58a8fd6e973ae8d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/comments", "author": null, "committer": null, "parents": [{"sha": "157e859ffe3b5d43db1e19475711c1a3d21ab57a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/157e859ffe3b5d43db1e19475711c1a3d21ab57a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/157e859ffe3b5d43db1e19475711c1a3d21ab57a"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "3248a84be8f08d767635d0080ae14fc9073c613f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5e022d5d6b2921c5e4ca19bc366d87dd0195d01", "patch": "@@ -1,3 +1,11 @@\n+2014-09-09  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n+\n+\t* shrink-wrap.h: #define SHRINK_WRAPPING_ENABLED.\n+\t* ira.c: #include \"shrink-wrap.h\"\n+\t(split_live_ranges_for_shrink_wrap): Use SHRINK_WRAPPING_ENABLED.\n+\t* ifcvt.c: #include \"shrink-wrap.h\"\n+\t(dead_or_predicable): Use SHRINK_WRAPPING_ENABLED.\n+\n 2014-09-08  Trevor Saunders  <tsaunders@mozilla.com>\n \n \t* common/config/picochip/picochip-common.c: Remove."}, {"sha": "ed30a599ed673348ca76b94c8c022d3e6f2449cc", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=a5e022d5d6b2921c5e4ca19bc366d87dd0195d01", "patch": "@@ -42,6 +42,7 @@\n #include \"df.h\"\n #include \"vec.h\"\n #include \"dbgcnt.h\"\n+#include \"shrink-wrap.h\"\n \n #ifndef HAVE_conditional_move\n #define HAVE_conditional_move 0\n@@ -4288,14 +4289,13 @@ dead_or_predicable (basic_block test_bb, basic_block merge_bb,\n \tif (NONDEBUG_INSN_P (insn))\n \t  df_simulate_find_defs (insn, merge_set);\n \n-#ifdef HAVE_simple_return\n       /* If shrink-wrapping, disable this optimization when test_bb is\n \t the first basic block and merge_bb exits.  The idea is to not\n \t move code setting up a return register as that may clobber a\n \t register used to pass function parameters, which then must be\n \t saved in caller-saved regs.  A caller-saved reg requires the\n \t prologue, killing a shrink-wrap opportunity.  */\n-      if ((flag_shrink_wrap && HAVE_simple_return && !epilogue_completed)\n+      if ((SHRINK_WRAPPING_ENABLED && !epilogue_completed)\n \t  && ENTRY_BLOCK_PTR_FOR_FN (cfun)->next_bb == test_bb\n \t  && single_succ_p (new_dest)\n \t  && single_succ (new_dest) == EXIT_BLOCK_PTR_FOR_FN (cfun)\n@@ -4342,7 +4342,6 @@ dead_or_predicable (basic_block test_bb, basic_block merge_bb,\n \t    }\n \t  BITMAP_FREE (return_regs);\n \t}\n-#endif\n     }\n \n  no_body:"}, {"sha": "757819ded343cd50b4b03340db6004baa01dc89f", "filename": "gcc/ira.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=a5e022d5d6b2921c5e4ca19bc366d87dd0195d01", "patch": "@@ -393,6 +393,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dce.h\"\n #include \"dbgcnt.h\"\n #include \"rtl-iter.h\"\n+#include \"shrink-wrap.h\"\n \n struct target_ira default_target_ira;\n struct target_ira_int default_target_ira_int;\n@@ -4780,7 +4781,7 @@ split_live_ranges_for_shrink_wrap (void)\n   bitmap_head need_new, reachable;\n   vec<basic_block> queue;\n \n-  if (!flag_shrink_wrap)\n+  if (!SHRINK_WRAPPING_ENABLED)\n     return false;\n \n   bitmap_initialize (&need_new, 0);"}, {"sha": "7b8031aab5d2e3d289daeea0746fae268c99d5fe", "filename": "gcc/shrink-wrap.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2Fshrink-wrap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2Fshrink-wrap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fshrink-wrap.h?ref=a5e022d5d6b2921c5e4ca19bc366d87dd0195d01", "patch": "@@ -47,6 +47,9 @@ extern void convert_to_simple_return (edge entry_edge, edge orig_entry_edge,\n \t\t\t\t      bitmap_head bb_flags,\n \t\t\t\t      rtx_insn *returnjump,\n \t\t\t\t      vec<edge> unconverted_simple_returns);\n+#define SHRINK_WRAPPING_ENABLED (flag_shrink_wrap && HAVE_simple_return)\n+#else\n+#define SHRINK_WRAPPING_ENABLED false\n #endif\n \n #endif  /* GCC_SHRINK_WRAP_H  */"}, {"sha": "a53d96585921e53dd2113a77b9e4b414d973c3aa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5e022d5d6b2921c5e4ca19bc366d87dd0195d01", "patch": "@@ -1,3 +1,7 @@\n+2014-09-09  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n+\n+\t* gcc.target/arm/split-live-ranges-for-shrink-wrap.c: New test.\n+\n 2014-09-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/60196"}, {"sha": "e36000b19a7bf40788f21332930abd5b69b55efd", "filename": "gcc/testsuite/gcc.target/arm/split-live-ranges-for-shrink-wrap.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsplit-live-ranges-for-shrink-wrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e022d5d6b2921c5e4ca19bc366d87dd0195d01/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsplit-live-ranges-for-shrink-wrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsplit-live-ranges-for-shrink-wrap.c?ref=a5e022d5d6b2921c5e4ca19bc366d87dd0195d01", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-mthumb -Os -fdump-rtl-ira \" }  */\n+/* { dg-require-effective-target arm_thumb1_ok } */\n+\n+int foo (char *, char *, int);\n+int test (int d, char * out, char *in, int len)\n+{\n+  if (out != in)\n+    foo (out, in, len);\n+  return 0;\n+}\n+/* { dg-final { object-size text <= 20 } } */\n+/* { dg-final { scan-rtl-dump-not \"Split live-range of register\" \"ira\" } } */\n+/* { dg-final { cleanup-rtl-dump \"ira\" } } */"}]}