{"sha": "9f9f0e4f9ec0c98423fe80a860da80893d77e230", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY5ZjBlNGY5ZWMwYzk4NDIzZmU4MGE4NjBkYTgwODkzZDc3ZTIzMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2000-07-27T01:38:33Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-07-27T01:38:33Z"}, "message": "h8300.c (print_operand): Print \":8\" when the 'R' operand is suitable for 8-bit absolute.\n\n        * h8300.c (print_operand): Print \":8\" when the 'R' operand is\n        suitable for 8-bit absolute.\n        * h8300.h (EIGHTBIT_CONSTANT_ADDRESS_P): New.\n        (OK_FOR_U): Add a case for the 8-bit constant address on the\n        H8/300H.\n\nFrom-SVN: r35278", "tree": {"sha": "f24e797ffc2e9d3e97dcb8d3f9007fc76e0374c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f24e797ffc2e9d3e97dcb8d3f9007fc76e0374c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f9f0e4f9ec0c98423fe80a860da80893d77e230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9f0e4f9ec0c98423fe80a860da80893d77e230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f9f0e4f9ec0c98423fe80a860da80893d77e230", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9f0e4f9ec0c98423fe80a860da80893d77e230/comments", "author": null, "committer": null, "parents": [{"sha": "ec1bff50af97c7cab92ba2c29ff841e88e697cb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec1bff50af97c7cab92ba2c29ff841e88e697cb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec1bff50af97c7cab92ba2c29ff841e88e697cb6"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "61f1e389285522eb77274b69a773e5391c1f230b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9f0e4f9ec0c98423fe80a860da80893d77e230/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9f0e4f9ec0c98423fe80a860da80893d77e230/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f9f0e4f9ec0c98423fe80a860da80893d77e230", "patch": "@@ -1,3 +1,11 @@\n+2000-07-26  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* h8300.c (print_operand): Print \":8\" when the 'R' operand is\n+\tsuitable for 8-bit absolute.\n+\t* h8300.h (EIGHTBIT_CONSTANT_ADDRESS_P): New.\n+\t(OK_FOR_U): Add a case for the 8-bit constant address on the\n+\tH8/300H.\n+\n Wed Jul 26 19:26:21 2000  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* varasm.c (assemble_variable) [! defined(ASM_OUTPUT_ALIGNED_COMMON)"}, {"sha": "c2d74bfcf4bc3e44f9258f4b8df89b9809bc930b", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9f0e4f9ec0c98423fe80a860da80893d77e230/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9f0e4f9ec0c98423fe80a860da80893d77e230/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=9f9f0e4f9ec0c98423fe80a860da80893d77e230", "patch": "@@ -1419,6 +1419,9 @@ print_operand (file, x, code)\n \t  else if (GET_CODE (XEXP (x, 0)) == SYMBOL_REF\n \t\t   && TINY_DATA_NAME_P (XSTR (XEXP (x, 0), 0)))\n \t    fprintf (file, \":16\");\n+\t  else if ((code == 'R')\n+\t\t   && EIGHTBIT_CONSTANT_ADDRESS_P (XEXP (x, 0)))\n+\t    fprintf (file, \":8\");\n \t  break;\n \n \tcase CONST_INT:"}, {"sha": "5c4604a86e1e9ace16d67d43ab2e691f03f0f263", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9f0e4f9ec0c98423fe80a860da80893d77e230/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9f0e4f9ec0c98423fe80a860da80893d77e230/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=9f9f0e4f9ec0c98423fe80a860da80893d77e230", "patch": "@@ -836,6 +836,13 @@ struct cum_arg\n   (GET_CODE (OP) == CONST_INT\t\t\t\\\n    && (INTVAL (OP) == -1 || INTVAL (OP) == -2))\n \n+/* Nonzero if X is a constant address suitable as an 8-bit absolute on\n+   the H8/300H, which is a special case of the 'R' operand.  */\n+\n+#define EIGHTBIT_CONSTANT_ADDRESS_P(X)\t\t\t\\\n+  (GET_CODE (X) == CONST_INT && TARGET_H8300H\t\t\\\n+   && 0xffff00 <= INTVAL (X) && INTVAL (X) <= 0xffffff)\n+\n /* 'U' if valid for a bset destination;\n    i.e. a register, register indirect, or the eightbit memory region\n    (a SYMBOL_REF with an SYMBOL_REF_FLAG set).\n@@ -851,7 +858,11 @@ struct cum_arg\n         && GET_CODE (XEXP (XEXP (OP, 0), 0)) == PLUS \\\n         && GET_CODE (XEXP (XEXP (XEXP (OP, 0), 0), 0)) == SYMBOL_REF \\\n         && GET_CODE (XEXP (XEXP (XEXP (OP, 0), 0), 1)) == CONST_INT) \\\n-        && (TARGET_H8300S || SYMBOL_REF_FLAG (XEXP (XEXP (OP, 0), 0)))))\n+        && (TARGET_H8300S || SYMBOL_REF_FLAG (XEXP (XEXP (OP, 0), 0)))) \\\n+   || (GET_CODE (OP) == MEM\t\t\t\t\t\t\\\n+       && EIGHTBIT_CONSTANT_ADDRESS_P (XEXP (OP, 0))))\n+\n+\n \n #define EXTRA_CONSTRAINT(OP, C)\t\t\t\\\n   ((C) == 'T' ? OK_FOR_T (OP) :\t\t\t\\"}]}