{"sha": "7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JiNGI3YTVjYTk4NGY3ZDg2MGYzM2M5Yjc5MWY0MjViMjY0YTcxZg==", "commit": {"author": {"name": "Andre Simoes Dias Vieira", "email": "andsim01@hw-a20-6.euhpc2.arm.com", "date": "2021-05-17T14:43:53Z"}, "committer": {"name": "Andre Vieira", "email": "andre.simoesdiasvieira@arm.com", "date": "2021-05-19T13:02:51Z"}, "message": "aarch64: Enable aarch64_load to use UNSPEC_PRED_X loads\n\nThis patch will enable the use of loads using the UNSPEC_PRED_X enum in the\naarch64_load pattern, thus enabling combine to combine such loads with extends.\n\ngcc/ChangeLog:\n2021-05-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/aarch64/iterators.md (SVE_PRED_LOAD): New iterator.\n\t(pred_load): New int attribute.\n\t* config/aarch64/aarch64-sve.md\n\t(aarch64_load_<ANY_EXTEND:optab><SVE_HSDI:mode><SVE_PARTIAL_I:mode>): Use\n\tSVE_PRED_LOAD enum iterator and corresponding pred_load attribute.\n\t* config/aarch64/aarch64-sve-builtins-base.cc (expand): Update call to\n\tcode_for_aarch64_load.\n\ngcc/testsuite/ChangeLog:\n2021-05-19  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* gcc.target/aarch64/sve/logical_unpacked_and_2.c: Change\n\tscan-assembly-times to scan-assembly not for superfluous uxtb.\n\t* gcc.target/aarch64/sve/logical_unpacked_and_3.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_and_4.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_and_6.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_and_7.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_2.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_3.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_4.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_6.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_eor_7.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_2.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_3.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_4.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_6.c: Likewise.\n\t* gcc.target/aarch64/sve/logical_unpacked_orr_7.c: Likewise.\n\t* gcc.target/aarch64/sve/ld1_extend.c: New test.", "tree": {"sha": "0e7f4b8ba45ae3d984c6df81ca31ae07204e362d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e7f4b8ba45ae3d984c6df81ca31ae07204e362d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/comments", "author": null, "committer": {"login": "avieira-arm", "id": 68072104, "node_id": "MDQ6VXNlcjY4MDcyMTA0", "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avieira-arm", "html_url": "https://github.com/avieira-arm", "followers_url": "https://api.github.com/users/avieira-arm/followers", "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}", "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions", "organizations_url": "https://api.github.com/users/avieira-arm/orgs", "repos_url": "https://api.github.com/users/avieira-arm/repos", "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/avieira-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35a16e4b38eb9faf212de9814f17a5215fa5538a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a16e4b38eb9faf212de9814f17a5215fa5538a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a16e4b38eb9faf212de9814f17a5215fa5538a"}], "stats": {"total": 50, "additions": 32, "deletions": 18}, "files": [{"sha": "8fd6d3fb3171f56b4ceacaf7ea812bc696117210", "filename": "gcc/config/aarch64/aarch64-sve-builtins-base.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins-base.cc?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -1123,7 +1123,7 @@ class svld1_extend_impl : public extending_load\n   rtx\n   expand (function_expander &e) const OVERRIDE\n   {\n-    insn_code icode = code_for_aarch64_load (extend_rtx_code (),\n+    insn_code icode = code_for_aarch64_load (UNSPEC_LD1_SVE, extend_rtx_code (),\n \t\t\t\t\t     e.vector_mode (0),\n \t\t\t\t\t     e.memory_vector_mode ());\n     return e.use_contiguous_load_insn (icode);"}, {"sha": "9e48c0ea2fb2dc1f112c8283fb8f6d2334472bfb", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -1287,15 +1287,15 @@\n ;; -------------------------------------------------------------------------\n \n ;; Predicated load and extend, with 8 elements per 128-bit block.\n-(define_insn_and_rewrite \"@aarch64_load_<ANY_EXTEND:optab><SVE_HSDI:mode><SVE_PARTIAL_I:mode>\"\n+(define_insn_and_rewrite \"@aarch64_load<SVE_PRED_LOAD:pred_load>_<ANY_EXTEND:optab><SVE_HSDI:mode><SVE_PARTIAL_I:mode>\"\n   [(set (match_operand:SVE_HSDI 0 \"register_operand\" \"=w\")\n \t(unspec:SVE_HSDI\n \t  [(match_operand:<SVE_HSDI:VPRED> 3 \"general_operand\" \"UplDnm\")\n \t   (ANY_EXTEND:SVE_HSDI\n \t     (unspec:SVE_PARTIAL_I\n \t       [(match_operand:<SVE_PARTIAL_I:VPRED> 2 \"register_operand\" \"Upl\")\n \t\t(match_operand:SVE_PARTIAL_I 1 \"memory_operand\" \"m\")]\n-\t       UNSPEC_LD1_SVE))]\n+\t       SVE_PRED_LOAD))]\n \t  UNSPEC_PRED_X))]\n   \"TARGET_SVE && (~<SVE_HSDI:narrower_mask> & <SVE_PARTIAL_I:self_mask>) == 0\"\n   \"ld1<ANY_EXTEND:s><SVE_PARTIAL_I:Vesize>\\t%0.<SVE_HSDI:Vctype>, %2/z, %1\""}, {"sha": "f133bfdebbdc9dfc3408a178a0080033732eb29d", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -2516,6 +2516,10 @@\n \n (define_int_iterator SVE_LDFF1_LDNF1 [UNSPEC_LDFF1 UNSPEC_LDNF1])\n \n+(define_int_iterator SVE_PRED_LOAD [UNSPEC_PRED_X UNSPEC_LD1_SVE])\n+\n+(define_int_attr pred_load [(UNSPEC_PRED_X \"_x\") (UNSPEC_LD1_SVE \"\")])\n+\n (define_int_iterator SVE2_U32_UNARY [UNSPEC_URECPE UNSPEC_RSQRTE])\n \n (define_int_iterator SVE2_INT_UNARY_NARROWB [UNSPEC_SQXTNB"}, {"sha": "7f78cb4b3e4445c4da93b00ae78d6ef6fec1b2de", "filename": "gcc/testsuite/gcc.target/aarch64/sve/ld1_extend.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fld1_extend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fld1_extend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fld1_extend.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 --param vect-partial-vector-usage=1\" } */\n+\n+void foo (signed char * __restrict__ a, signed char * __restrict__ b, short * __restrict__ c, int n)\n+{\n+    for (int i = 0; i < n; ++i)\n+      c[i] = a[i] + b[i];\n+}\n+\n+/* { dg-final { scan-assembler-times {\\tld1sb\\t} 4 } } */"}, {"sha": "505767afaca0e5e9607442b5a73c0b1bc185993a", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_2.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.h,} } } */\n /* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "f7d43607432188fd46e69186013eab868faf9605", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_3.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.s,} } } */\n /* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "1aef9033e6ceab13216722df57cf40616077bb71", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_4.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint32_t *restrict src1, uint16_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxth\\tz[0-9]+\\.s,} } } */\n /* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "fb58b52ee03528a04a7f8fb4b1f78cf1e583d80c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_6.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.h,} } } */\n /* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "34b2cc05734a1cbcf043d8068345f57a7c480090", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_and_7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_and_7.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -10,7 +10,7 @@ f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2){\n \n /* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.s,} } } */\n /* { dg-final { scan-assembler-times {\\tand\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "529c07362daa19182abbf87619f806199b1e305a", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_2.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.h,} } } */\n /* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "b6b0119a7e725ab69804d27558caa1c1979a26ea", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_3.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.s,} } } */\n /* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "a61eed441de3bc44f45729893a28f54dbbbe7914", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_4.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint32_t *restrict src1, uint16_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxth\\tz[0-9]+\\.s,} } } */\n /* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "a3fde4bcb183c9d5004fec1e3525a57ad112b7f6", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_6.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.h,} } } */\n /* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "8e01f3f9ef0bbe4e542ec0b13b01e03387f74221", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_eor_7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_eor_7.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -10,7 +10,7 @@ f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2){\n \n /* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.s,} } } */\n /* { dg-final { scan-assembler-times {\\teor\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "763c81b69c440b75d6a2e821027bad08a9d0558a", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_2.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.h,} } } */\n /* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "17fddcd3eeecd0b916cc0d8b7de952fd325a2e76", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_3.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.s,} } } */\n /* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "4e8c4d0f9a370e53e9f0ac4c0ed8214f7a47cc71", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_4.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint32_t *restrict src1, uint16_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxth\\tz[0-9]+\\.s,} } } */\n /* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "26103cf933b2ba788f21f1ad964cca57958285b2", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_6.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -11,7 +11,7 @@ f (uint64_t *restrict dst, uint16_t *restrict src1, uint8_t *restrict src2)\n \n /* { dg-final { scan-assembler-times {\\tld1h\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.h,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.h,} } } */\n /* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxth\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}, {"sha": "06e1b586e6eeb2b6634dc422b74047f836545b6c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/logical_unpacked_orr_7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bb4b7a5ca984f7d860f33c9b791f425b264a71f/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Flogical_unpacked_orr_7.c?ref=7bb4b7a5ca984f7d860f33c9b791f425b264a71f", "patch": "@@ -10,7 +10,7 @@ f (uint64_t *restrict dst, uint32_t *restrict src1, uint8_t *restrict src2){\n \n /* { dg-final { scan-assembler-times {\\tld1w\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tld1b\\tz[0-9]+\\.d,} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tuxtb\\tz[0-9]+\\.s,} 1 } } */\n+/* { dg-final { scan-assembler-not {\\tuxtb\\tz[0-9]+\\.s,} } } */\n /* { dg-final { scan-assembler-times {\\torr\\tz[0-9]+\\.d, z[0-9]+\\.d, z[0-9]+\\.d\\n} 2 } } */\n /* { dg-final { scan-assembler-times {\\tuxtw\\tz[0-9]+\\.d,} 2 } } */\n /* { dg-final { scan-assembler-times {\\tst1d\\tz[0-9]+\\.d,} 2 } } */"}]}