{"sha": "6c011b01ce31ae105faef46b7d6c583533269a8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMwMTFiMDFjZTMxYWUxMDVmYWVmNDZiN2Q2YzU4MzUzMzI2OWE4ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-07-06T18:24:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-07-06T18:24:46Z"}, "message": "decl.c (lookup_tag): Use CP_DECL_CONTEXT.\n\n\t* decl.c (lookup_tag): Use CP_DECL_CONTEXT.\n\t* tree.c (make_binfo): Fix length.\n\nFrom-SVN: r20954", "tree": {"sha": "6674f65ee8fdde672cfc8b05ea395c5ce725acca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6674f65ee8fdde672cfc8b05ea395c5ce725acca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c011b01ce31ae105faef46b7d6c583533269a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c011b01ce31ae105faef46b7d6c583533269a8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c011b01ce31ae105faef46b7d6c583533269a8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c011b01ce31ae105faef46b7d6c583533269a8e/comments", "author": null, "committer": null, "parents": [{"sha": "092f7be3b124e3e0ca97600c82adedcc0ecd4132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/092f7be3b124e3e0ca97600c82adedcc0ecd4132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/092f7be3b124e3e0ca97600c82adedcc0ecd4132"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "ecd9e843889fb584d6b82a147f2c11f61f815024", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c011b01ce31ae105faef46b7d6c583533269a8e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c011b01ce31ae105faef46b7d6c583533269a8e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6c011b01ce31ae105faef46b7d6c583533269a8e", "patch": "@@ -1,3 +1,9 @@\n+1998-07-06  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl.c (lookup_tag): Use CP_DECL_CONTEXT.\n+\n+\t* tree.c (make_binfo): Fix length.\n+\n 1998-06-30  Benjamin Kosnik  <bkoz@bliss.nabi.net>\n \n         * decl2.c (lang_decode_option): Remove warn_template_debugging."}, {"sha": "2136417edcb61e3aad36a50d384da24425d07b42", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c011b01ce31ae105faef46b7d6c583533269a8e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c011b01ce31ae105faef46b7d6c583533269a8e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6c011b01ce31ae105faef46b7d6c583533269a8e", "patch": "@@ -4414,7 +4414,7 @@ lookup_tag (form, name, binding_level, thislevel_only)\n       else if (level->namespace_p)\n \t/* Do namespace lookup. */\n \t/* XXX: is this a real lookup, considering using-directives etc. ??? */\n-\tfor (tail = current_namespace; 1; tail = DECL_CONTEXT (tail))\n+\tfor (tail = current_namespace; 1; tail = CP_DECL_CONTEXT (tail))\n \t  {\n \t    tree old = BINDING_TYPE (binding_for_name (name, tail));\n \t    /* If it has an original type, it is a typedef, and we"}, {"sha": "87a64a3d9693d3a133638b5095f7851889d31d04", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c011b01ce31ae105faef46b7d6c583533269a8e/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c011b01ce31ae105faef46b7d6c583533269a8e/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=6c011b01ce31ae105faef46b7d6c583533269a8e", "patch": "@@ -1186,7 +1186,7 @@ make_binfo (offset, binfo, vtable, virtuals, chain)\n      tree vtable, virtuals;\n      tree chain;\n {\n-  tree new_binfo = make_tree_vec (6);\n+  tree new_binfo = make_tree_vec (7);\n   tree type;\n \n   if (TREE_CODE (binfo) == TREE_VEC)"}]}