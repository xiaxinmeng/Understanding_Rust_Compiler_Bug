{"sha": "83caa34e2a618842e05f59cbb3e2dda93dc23270", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNjYWEzNGUyYTYxODg0MmUwNWY1OWNiYjNlMmRkYTkzZGMyMzI3MA==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2019-12-03T12:53:53Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2019-12-03T12:53:53Z"}, "message": "Enable OpenACC GCN testing.\n\n2019-12-03  Andrew Stubbs  <ams@codesourcery.com>\n\n\tlibgomp/\n\t* testsuite/lib/libgomp.exp (offload_target_to_openacc_device_type):\n\tRecognize amdgcn.\n\t(check_effective_target_openacc_amdgcn_accel_present): New proc.\n\t(check_effective_target_openacc_amdgcn_accel_selected): New proc.\n\t* testsuite/libgomp.oacc-c++/c++.exp: Add support for amdgcn.\n\t* testsuite/libgomp.oacc-c/c.exp: Likewise.\n\t* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.\n\nFrom-SVN: r278935", "tree": {"sha": "d2e2e9f715d2b9eb06ba548d68729e7883757533", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2e2e9f715d2b9eb06ba548d68729e7883757533"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83caa34e2a618842e05f59cbb3e2dda93dc23270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83caa34e2a618842e05f59cbb3e2dda93dc23270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83caa34e2a618842e05f59cbb3e2dda93dc23270", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83caa34e2a618842e05f59cbb3e2dda93dc23270/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5105b576dfdcae0c6cc30a89a68b4ef3cbf56a1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5105b576dfdcae0c6cc30a89a68b4ef3cbf56a1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5105b576dfdcae0c6cc30a89a68b4ef3cbf56a1c"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "af5add845d04a4a42c1af0419be89132b0da76b5", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83caa34e2a618842e05f59cbb3e2dda93dc23270/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83caa34e2a618842e05f59cbb3e2dda93dc23270/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=83caa34e2a618842e05f59cbb3e2dda93dc23270", "patch": "@@ -1,3 +1,13 @@\n+2019-12-03  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* testsuite/lib/libgomp.exp (offload_target_to_openacc_device_type):\n+\tRecognize amdgcn.\n+\t(check_effective_target_openacc_amdgcn_accel_present): New proc.\n+\t(check_effective_target_openacc_amdgcn_accel_selected): New proc.\n+\t* testsuite/libgomp.oacc-c++/c++.exp: Add support for amdgcn.\n+\t* testsuite/libgomp.oacc-c/c.exp: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.\n+\n 2019-12-03  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \tPR libgomp/91938"}, {"sha": "f52ed7184e44313520b6754730d6d2a658d3474d", "filename": "libgomp/testsuite/lib/libgomp.exp", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83caa34e2a618842e05f59cbb3e2dda93dc23270/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83caa34e2a618842e05f59cbb3e2dda93dc23270/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flib%2Flibgomp.exp?ref=83caa34e2a618842e05f59cbb3e2dda93dc23270", "patch": "@@ -318,6 +318,9 @@ proc libgomp_option_proc { option } {\n # not supported, and 'host' for offload target 'disable'.\n proc offload_target_to_openacc_device_type { offload_target } {\n     switch -glob $offload_target {\n+\tamdgcn* {\n+\t    return \"gcn\"\n+\t}\n \tdisable {\n \t    return \"host\"\n \t}\n@@ -479,3 +482,29 @@ proc check_effective_target_hsa_offloading_selected {} {\n \tcheck_effective_target_hsa_offloading_selected_nocache\n     }]\n }\n+\n+# Return 1 if at least one AMD GCN board is present.\n+\n+proc check_effective_target_openacc_amdgcn_accel_present { } {\n+    return [check_runtime openacc_amdgcn_accel_present {\n+\t#include <openacc.h>\n+\tint main () {\n+\treturn !(acc_get_num_devices (acc_device_gcn) > 0);\n+\t}\n+    } \"\" ]\n+}\n+\n+# Return 1 if at least one AMD GCN board is present, and the AMD GCN device\n+# type is selected by default.\n+\n+proc check_effective_target_openacc_amdgcn_accel_selected { } {\n+    if { ![check_effective_target_openacc_amdgcn_accel_present] } {\n+\treturn 0;\n+    }\n+    global offload_target\n+    if { [string match \"amdgcn*\" $offload_target] } {\n+        return 1;\n+    }\n+    return 0;\n+}\n+"}, {"sha": "c06c2a097e38f9da33e65160857f640457731c9c", "filename": "libgomp/testsuite/libgomp.oacc-c++/c++.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83caa34e2a618842e05f59cbb3e2dda93dc23270/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83caa34e2a618842e05f59cbb3e2dda93dc23270/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp?ref=83caa34e2a618842e05f59cbb3e2dda93dc23270", "patch": "@@ -88,6 +88,15 @@ if { $lang_test_file_found } {\n \t\tunsupported \"$subdir $offload_target offloading\"\n \t\tcontinue\n \t    }\n+\t    gcn {\n+\t\tif { ![check_effective_target_openacc_amdgcn_accel_present] } {\n+\t\t    # Don't bother; execution testing is going to FAIL.\n+\t\t    untested \"$subdir $offload_target offloading: supported, but hardware not accessible\"\n+\t\t    continue\n+\t\t}\n+\n+\t\tset acc_mem_shared 0\n+\t    }\n \t    host {\n \t\tset acc_mem_shared 1\n \t    }"}, {"sha": "7f13242fd59d6119167436b311a92de8f1ada394", "filename": "libgomp/testsuite/libgomp.oacc-c/c.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83caa34e2a618842e05f59cbb3e2dda93dc23270/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83caa34e2a618842e05f59cbb3e2dda93dc23270/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp?ref=83caa34e2a618842e05f59cbb3e2dda93dc23270", "patch": "@@ -51,6 +51,15 @@ foreach offload_target [concat [split $offload_targets \",\"] \"disable\"] {\n \t    unsupported \"$subdir $offload_target offloading\"\n \t    continue\n \t}\n+\tgcn {\n+\t    if { ![check_effective_target_openacc_amdgcn_accel_present] } {\n+\t\t# Don't bother; execution testing is going to FAIL.\n+\t\tuntested \"$subdir $offload_target offloading: supported, but hardware not accessible\"\n+\t\tcontinue\n+\t    }\n+\n+\t    set acc_mem_shared 0\n+\t}\n \thost {\n \t    set acc_mem_shared 1\n \t}"}, {"sha": "60f0889a07cffdd1ce4d380c56d494afae7387fa", "filename": "libgomp/testsuite/libgomp.oacc-fortran/fortran.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83caa34e2a618842e05f59cbb3e2dda93dc23270/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83caa34e2a618842e05f59cbb3e2dda93dc23270/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Ffortran.exp?ref=83caa34e2a618842e05f59cbb3e2dda93dc23270", "patch": "@@ -82,6 +82,15 @@ if { $lang_test_file_found } {\n \t\tunsupported \"$subdir $offload_target offloading\"\n \t\tcontinue\n \t    }\n+\t    gcn {\n+\t\tif { ![check_effective_target_openacc_amdgcn_accel_present] } {\n+\t\t    # Don't bother; execution testing is going to FAIL.\n+\t\t    untested \"$subdir $offload_target offloading: supported, but hardware not accessible\"\n+\t\t    continue\n+\t\t}\n+\n+\t\tset acc_mem_shared 0\n+\t    }\n \t    host {\n \t\tset acc_mem_shared 1\n \t    }"}]}