{"sha": "d0011a1a90750fe1df8425ae86360f0887facc9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAwMTFhMWE5MDc1MGZlMWRmODQyNWFlODYzNjBmMDg4N2ZhY2M5YQ==", "commit": {"author": {"name": "Victor Kaplansky", "email": "victork@il.ibm.com", "date": "2008-08-20T12:05:38Z"}, "committer": {"name": "Victor Kaplansky", "email": "victork@gcc.gnu.org", "date": "2008-08-20T12:05:38Z"}, "message": "vect-multitypes-15.c: Fix typo.\n\n2008-08-20  Victor Kaplansky  <victork@il.ibm.com>\n\n        * gcc.dg/vect/vect-multitypes-15.c: Fix typo.\n        * gcc/testsuite/lib/target-supports.exp\n           (check_effective_target_vect_long_long): Remove spu-*-*.\n        * gcc.dg/vect/vect-multitypes-16.c: Make init loop unvectorizable.\n        * gcc.dg/vect/slp-widen-mult-u8.c: Likewise.\n\nFrom-SVN: r139270", "tree": {"sha": "67a25b26135265007d63d6599f907fc88630d176", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67a25b26135265007d63d6599f907fc88630d176"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0011a1a90750fe1df8425ae86360f0887facc9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0011a1a90750fe1df8425ae86360f0887facc9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0011a1a90750fe1df8425ae86360f0887facc9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0011a1a90750fe1df8425ae86360f0887facc9a/comments", "author": null, "committer": null, "parents": [{"sha": "2af92e28f0612424edab29a57a22f1b9609dad6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2af92e28f0612424edab29a57a22f1b9609dad6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2af92e28f0612424edab29a57a22f1b9609dad6e"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "bb5cf794f65a6b05ba0f7c234d5ebc4d703c802e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0011a1a90750fe1df8425ae86360f0887facc9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0011a1a90750fe1df8425ae86360f0887facc9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0011a1a90750fe1df8425ae86360f0887facc9a", "patch": "@@ -1,3 +1,11 @@\n+2008-08-20  Victor Kaplansky  <victork@il.ibm.com>\n+\n+        * gcc.dg/vect/vect-multitypes-15.c: Fix typo.\n+\t* gcc/testsuite/lib/target-supports.exp\n+\t   (check_effective_target_vect_long_long): Remove spu-*-*.\n+\t* gcc.dg/vect/vect-multitypes-16.c: Make init loop unvectorizable.\n+\t* gcc.dg/vect/slp-widen-mult-u8.c: Likewise.\n+\t\n 2008-08-20  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/pr20701.c: Scan vrp1 dump."}, {"sha": "16bf578168455ee5276f7812f84cda9fba7f1274", "filename": "gcc/testsuite/gcc.dg/vect/slp-widen-mult-u8.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0011a1a90750fe1df8425ae86360f0887facc9a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-widen-mult-u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0011a1a90750fe1df8425ae86360f0887facc9a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-widen-mult-u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fslp-widen-mult-u8.c?ref=d0011a1a90750fe1df8425ae86360f0887facc9a", "patch": "@@ -29,6 +29,8 @@ int main (void)\n   for (i=0; i<N; i++) {\n     X[i] = i;\n     Y[i] = 64-i;\n+    if (i % 5)\n+      X[i] = i;\n   }\n \n   foo1 (N);\n@@ -41,7 +43,7 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" { target { vect_widen_mult_qi_to_hi || vect_unpack } } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target { vect_widen_mult_hi_to_si || vect_inpack } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_widen_mult_qi_to_hi || vect_unpack } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { target { vect_widen_mult_hi_to_si || vect_unpack } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "ad09ff95679c6f7efb3f2babd125ff4a17756a12", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0011a1a90750fe1df8425ae86360f0887facc9a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0011a1a90750fe1df8425ae86360f0887facc9a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-15.c?ref=d0011a1a90750fe1df8425ae86360f0887facc9a", "patch": "@@ -45,6 +45,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_sdot_hi  || vect_uncpack } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { vect_sdot_hi  || vect_unpack } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "b5347ebecc3afd661b73d5a0facdd3c5e780dc46", "filename": "gcc/testsuite/gcc.dg/vect/vect-multitypes-16.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0011a1a90750fe1df8425ae86360f0887facc9a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0011a1a90750fe1df8425ae86360f0887facc9a/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-multitypes-16.c?ref=d0011a1a90750fe1df8425ae86360f0887facc9a", "patch": "@@ -26,6 +26,8 @@ int main (void)\n \n   for (i=0; i<N; i++) {\n     x[i] = i;\n+    if (i % 5)\n+      x[i] = i;\n   }\n \n   foo (N,z+2);\n@@ -38,7 +40,7 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 2 \"vect\" { target vect_unpack } } } */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! vect_unpack } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_unpack } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 0 \"vect\" { target { ! vect_unpack } } } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */\n "}, {"sha": "d525a5bf5a146b057b232ac50811087aa3077797", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0011a1a90750fe1df8425ae86360f0887facc9a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0011a1a90750fe1df8425ae86360f0887facc9a/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=d0011a1a90750fe1df8425ae86360f0887facc9a", "patch": "@@ -1538,8 +1538,7 @@ proc check_effective_target_vect_long_long { } {\n     } else {\n         set et_vect_long_long_saved 0\n         if { [istarget i?86-*-*]\n-              || [istarget x86_64-*-*]\n-              || [istarget spu-*-*] } {\n+              || [istarget x86_64-*-*] } {\n            set et_vect_long_long_saved 1\n         }\n     }"}]}