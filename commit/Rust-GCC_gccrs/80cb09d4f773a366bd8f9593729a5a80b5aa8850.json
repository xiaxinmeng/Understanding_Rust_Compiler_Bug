{"sha": "80cb09d4f773a366bd8f9593729a5a80b5aa8850", "node_id": "C_kwDOANBUbNoAKDgwY2IwOWQ0Zjc3M2EzNjZiZDhmOTU5MzcyOWE1YTgwYjVhYTg4NTA", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-10T11:46:32Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-10T12:50:17Z"}, "message": "Make range-op-float entries public.\n\ngcc/ChangeLog:\n\n\t* range-op-float.cc (class foperator_identity): Make members public.\n\t(class foperator_equal): Same.\n\t(class foperator_not_equal): Same.\n\t(class foperator_lt): Same.\n\t(class foperator_le): Same.\n\t(class foperator_gt): Same.\n\t(class foperator_ge): Same.\n\t(class foperator_unordered): Same.\n\t(class foperator_ordered): Same.", "tree": {"sha": "7aff15111b12d843b15a0225cc4938cd6ce08f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7aff15111b12d843b15a0225cc4938cd6ce08f8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80cb09d4f773a366bd8f9593729a5a80b5aa8850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80cb09d4f773a366bd8f9593729a5a80b5aa8850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80cb09d4f773a366bd8f9593729a5a80b5aa8850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80cb09d4f773a366bd8f9593729a5a80b5aa8850/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e23f7dabe6f7ce1d92bfc07d2b62cc7bcdc0caae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e23f7dabe6f7ce1d92bfc07d2b62cc7bcdc0caae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e23f7dabe6f7ce1d92bfc07d2b62cc7bcdc0caae"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "3cf117d8931491df1625f1fde1ea38eaeb7ec2a8", "filename": "gcc/range-op-float.cc", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cb09d4f773a366bd8f9593729a5a80b5aa8850/gcc%2Frange-op-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cb09d4f773a366bd8f9593729a5a80b5aa8850/gcc%2Frange-op-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op-float.cc?ref=80cb09d4f773a366bd8f9593729a5a80b5aa8850", "patch": "@@ -315,7 +315,7 @@ class foperator_identity : public range_operator_float\n {\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n-\n+public:\n   bool fold_range (frange &r, tree type ATTRIBUTE_UNUSED,\n \t\t   const frange &op1, const frange &op2 ATTRIBUTE_UNUSED,\n \t\t   relation_kind) const final override\n@@ -338,7 +338,7 @@ class foperator_equal : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n-\n+public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n \t\t   relation_kind rel) const final override;\n@@ -444,7 +444,7 @@ class foperator_not_equal : public range_operator_float\n {\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n-\n+public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n \t\t   relation_kind rel) const final override;\n@@ -545,7 +545,7 @@ class foperator_lt : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n-\n+public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n \t\t   relation_kind rel) const final override;\n@@ -660,7 +660,7 @@ class foperator_le : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n-\n+public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n \t\t   relation_kind rel) const final override;\n@@ -767,7 +767,7 @@ class foperator_gt : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n-\n+public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n \t\t   relation_kind rel) const final override;\n@@ -882,7 +882,7 @@ class foperator_ge : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n-\n+public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n \t\t   relation_kind rel) const final override;\n@@ -993,7 +993,6 @@ class foperator_unordered : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n-\n public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,\n@@ -1071,7 +1070,6 @@ class foperator_ordered : public range_operator_float\n   using range_operator_float::fold_range;\n   using range_operator_float::op1_range;\n   using range_operator_float::op2_range;\n-\n public:\n   bool fold_range (irange &r, tree type,\n \t\t   const frange &op1, const frange &op2,"}]}