{"sha": "f1e42c8110b5089084f9739211b8f303cf884600", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFlNDJjODExMGI1MDg5MDg0Zjk3MzkyMTFiOGYzMDNjZjg4NDYwMA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@redhat.com", "date": "2000-08-19T22:32:11Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2000-08-19T22:32:11Z"}, "message": "Do not consider a THEN block ending in an indirect jump for conditional compilation; Fix d30v warning\n\nFrom-SVN: r35812", "tree": {"sha": "c16a7470bdf0c180c60769ef08a4923773b8f3b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c16a7470bdf0c180c60769ef08a4923773b8f3b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1e42c8110b5089084f9739211b8f303cf884600", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e42c8110b5089084f9739211b8f303cf884600", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1e42c8110b5089084f9739211b8f303cf884600", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e42c8110b5089084f9739211b8f303cf884600/comments", "author": null, "committer": null, "parents": [{"sha": "9d6c2770a0999516d86100d90855ac6fd2212df6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d6c2770a0999516d86100d90855ac6fd2212df6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d6c2770a0999516d86100d90855ac6fd2212df6"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "d17aaf157b8d327bb816a743692140346569f52a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e42c8110b5089084f9739211b8f303cf884600/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e42c8110b5089084f9739211b8f303cf884600/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1e42c8110b5089084f9739211b8f303cf884600", "patch": "@@ -1,3 +1,12 @@\n+2000-08-19  Michael Meissner  <meissner@redhat.com>\n+\n+\t* ifcvt.c (find_if_block): Do not consider a THEN block that ends\n+\tin a indirect jump as a potential for conditional execution.\n+\n+\t* d30v.h (d30v_init_expanders): Don't declare here.\n+\t* d30v-protos.h (d30v_init_expanders): Declare here with a valid\n+\tprototype.\n+\n Sat 19-Aug-2000 21:11:45 BST  Neil Booth  <NeilB@earthling.net>\n \n \t* cpp.texi: Add @section for assertions."}, {"sha": "27d1f03efac05d4c1a5e558afa139d12b4b2542c", "filename": "gcc/config/d30v/d30v-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e42c8110b5089084f9739211b8f303cf884600/gcc%2Fconfig%2Fd30v%2Fd30v-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e42c8110b5089084f9739211b8f303cf884600/gcc%2Fconfig%2Fd30v%2Fd30v-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v-protos.h?ref=f1e42c8110b5089084f9739211b8f303cf884600", "patch": "@@ -132,6 +132,7 @@ extern void d30v_machine_dependent_reorg PARAMS ((rtx));\n extern int d30v_adjust_cost\t\tPARAMS ((rtx, rtx, rtx, int));\n extern rtx d30v_return_addr\t\tPARAMS ((void));\n #endif\n+extern void d30v_init_expanders\t\tPARAMS ((void));\n \n \f\n /* External variables referenced */"}, {"sha": "defdc4969531b2d956b712ac10f940a168885eef", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e42c8110b5089084f9739211b8f303cf884600/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e42c8110b5089084f9739211b8f303cf884600/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=f1e42c8110b5089084f9739211b8f303cf884600", "patch": "@@ -1953,7 +1953,7 @@ typedef struct d30v_stack {\n    once for every function before code is generated.  */\n \n #define INIT_EXPANDERS  d30v_init_expanders ()\n-extern void d30v_init_expanders ();\n+\n \f\n /* Stack Checking.  */\n "}, {"sha": "3215f6c3015bf6a60a9a0255668f790f7122a97a", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e42c8110b5089084f9739211b8f303cf884600/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e42c8110b5089084f9739211b8f303cf884600/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=f1e42c8110b5089084f9739211b8f303cf884600", "patch": "@@ -1500,11 +1500,23 @@ find_if_block (test_bb, then_edge, else_edge)\n \n   /* If the THEN block has no successors, conditional execution can still\n      make a conditional call.  Don't do this unless the ELSE block has\n-     only one incoming edge -- the CFG manipulation is too ugly otherwise.  */\n+     only one incoming edge -- the CFG manipulation is too ugly otherwise.\n+     Check for the last insn of the THEN block being an indirect jump, which\n+     is listed as not having any successors, but confuses the rest of the CE\n+     code processing.  XXX we should fix this in the future.  */\n   if (then_succ == NULL)\n     {\n       if (else_bb->pred->pred_next == NULL_EDGE)\n \t{\n+\t  rtx last_insn = then_bb->end;\n+\n+\t  if (GET_CODE (last_insn) == NOTE)\n+\t    last_insn = prev_nonnote_insn (last_insn);\n+\n+\t  if (GET_CODE (last_insn) == JUMP_INSN\n+\t      && ! simplejump_p (last_insn))\n+\t    return FALSE;\n+\n \t  join_bb = else_bb;\n \t  else_bb = NULL_BLOCK;\n \t}"}]}