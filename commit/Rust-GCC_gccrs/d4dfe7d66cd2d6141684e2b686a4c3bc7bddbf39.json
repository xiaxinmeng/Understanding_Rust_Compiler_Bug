{"sha": "d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRkZmU3ZDY2Y2QyZDYxNDE2ODRlMmI2ODZhNGMzYmM3YmRkYmYzOQ==", "commit": {"author": {"name": "Dave Brolley", "email": "brolley@cygnus.com", "date": "1998-05-21T08:56:16Z"}, "committer": {"name": "Dave Brolley", "email": "brolley@gcc.gnu.org", "date": "1998-05-21T08:56:16Z"}, "message": "lex.c: (handle_sysv_pragma): FILE* parameter not used.\n\nThu May 21 11:54:44 1998  Dave Brolley  <brolley@cygnus.com>\n\t* lex.c: (handle_sysv_pragma): FILE* parameter not used.\n\t(cpp_reader,parse_in): Add for cpplib.\n\t(check_newline): Call handle_sysv_pragma with new interface.\n\t(check_newline): Call GET_DIRECTIVE_LINE, not get_directive_line.\n\t* input.c: (yy_cur,yy_lim,yy_get_token,GETC): Add for cpplib.\n\t(sub_getch): Call GETC for cpplib.\n\t* cp-tree.h: (get_directive_line): Different prototype for cpplib.\n\t(GET_DIRECTIVE_LINE): Macro wrapper for get_directive_line.\n\t* Makefile.in (CXX_OBJS): add @extra_cxx_objs@ for cpplib.\n\nFrom-SVN: r19927", "tree": {"sha": "eef30a280f20182a30315e033111a637b91ff67d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eef30a280f20182a30315e033111a637b91ff67d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39/comments", "author": null, "committer": null, "parents": [{"sha": "c87248620c69e3cc5234e16889c7051b372cb61a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c87248620c69e3cc5234e16889c7051b372cb61a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c87248620c69e3cc5234e16889c7051b372cb61a"}], "stats": {"total": 62, "additions": 48, "deletions": 14}, "files": [{"sha": "e0a339913c9e72492a4a3cea6aacfda7ae83b032", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39", "patch": "@@ -1,3 +1,18 @@\n+Thu May 21 11:54:44 1998  Dave Brolley  <brolley@cygnus.com>\n+\n+\t* lex.c: (handle_sysv_pragma): FILE* parameter not used.\n+\t(cpp_reader,parse_in): Add for cpplib.\n+\t(check_newline): Call handle_sysv_pragma with new interface.\n+\t(check_newline): Call GET_DIRECTIVE_LINE, not get_directive_line.\n+\n+\t* input.c: (yy_cur,yy_lim,yy_get_token,GETC): Add for cpplib.\n+\t(sub_getch): Call GETC for cpplib.\n+\n+\t* cp-tree.h: (get_directive_line): Different prototype for cpplib.\n+\t(GET_DIRECTIVE_LINE): Macro wrapper for get_directive_line.\n+\n+\t* Makefile.in (CXX_OBJS): add @extra_cxx_objs@ for cpplib.\n+\n 1998-05-21  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl2.c (maybe_make_one_only): New fn."}, {"sha": "e4ebf24ec617fba7e196f9405638a33074ceaca2", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39", "patch": "@@ -176,7 +176,8 @@ INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. -I$(srcdir)/../config\n \n CXX_OBJS = call.o decl.o errfn.o expr.o pt.o sig.o typeck2.o \\\n  class.o decl2.o error.o lex.o parse.o ptree.o rtti.o spew.o typeck.o cvt.o \\\n- except.o friend.o init.o method.o search.o semantics.o tree.o xref.o repo.o\n+ except.o friend.o init.o method.o search.o semantics.o tree.o xref.o repo.o \\\n+ @extra_cxx_objs@\n \n # Language-independent object files.\n OBJS = `cat ../stamp-objlist` ../c-common.o ../c-pragma.o"}, {"sha": "38b277c0bdfe441178a82860999269252fad55f2", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39", "patch": "@@ -1639,7 +1639,13 @@ extern tree convert_and_check\t\t\tPROTO((tree, tree));\n extern void overflow_warning\t\t\tPROTO((tree));\n extern void unsigned_conversion_warning\t\tPROTO((tree, tree));\n /* Read the rest of the current #-directive line.  */\n+#if USE_CPPLIB\n+extern char *get_directive_line                 PROTO((void));\n+#define GET_DIRECTIVE_LINE() get_directive_line ()\n+#else\n extern char *get_directive_line                 PROTO((FILE *));\n+#define GET_DIRECTIVE_LINE() get_directive_line (finput)\n+#endif\n /* Subroutine of build_binary_op, used for comparison operations.\n    See if the operands have both been converted from subword integer types\n    and, if so, perhaps change them both back to their original type.  */"}, {"sha": "5a73fea8bd05b6c43ef82bd2cc137673a485a729", "filename": "gcc/cp/input.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39/gcc%2Fcp%2Finput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39/gcc%2Fcp%2Finput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finput.c?ref=d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39", "patch": "@@ -59,6 +59,14 @@ extern int lineno;\n #define inline\n #endif\n \n+#if USE_CPPLIB\n+extern unsigned char *yy_cur, *yy_lim;\n+extern int yy_get_token ();\n+#define GETC() (yy_cur < yy_lim ? *yy_cur++ : yy_get_token ())\n+#else\n+#define GETC() getc (finput)\n+#endif\n+\n extern void feed_input PROTO((char *, int));\n extern void put_input PROTO((int));\n extern void put_back PROTO((int));\n@@ -168,7 +176,7 @@ sub_getch ()\n \t}\n       return (unsigned char)input->str[input->offset++];\n     }\n-  return getc (finput);\n+  return GETC ();\n }\n \n inline"}, {"sha": "07109e4284053e2ca9622ffd4b1388764981f824", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=d4dfe7d66cd2d6141684e2b686a4c3bc7bddbf39", "patch": "@@ -83,7 +83,7 @@ static void reinit_parse_for_expr PROTO((struct obstack *));\n static int *init_cpp_parse PROTO((void));\n static int handle_cp_pragma PROTO((char *));\n #ifdef HANDLE_SYSV_PRAGMA\n-static int handle_sysv_pragma PROTO((FILE *, int));\n+static int handle_sysv_pragma PROTO((int));\n #endif\n #ifdef GATHER_STATISTICS\n #ifdef REDUCE_LENGTH\n@@ -112,7 +112,10 @@ file_name_nondirectory (x)\n struct obstack inline_text_obstack;\n char *inline_text_firstobj;\n \n-#if !USE_CPPLIB\n+#if USE_CPPLIB\n+#include \"cpplib.h\"\n+extern cpp_reader parse_in;\n+#else\n FILE *finput;\n #endif\n int end_of_file;\n@@ -2198,9 +2201,6 @@ get_last_nonwhite_on_line ()\n \n int linemode;\n \n-#ifdef HANDLE_SYSV_PRAGMA\n-static int handle_sysv_pragma PROTO((FILE *, int));\n-#endif\n static int handle_cp_pragma PROTO((char *));\n \n static int\n@@ -2261,12 +2261,17 @@ check_newline ()\n \t\tgoto skipline;\n \n #ifdef HANDLE_SYSV_PRAGMA\n-\t      if (handle_sysv_pragma (finput, token))\n+\t      if (handle_sysv_pragma (token))\n \t\tgoto skipline;\n #else\n #ifdef HANDLE_PRAGMA\n-\t      if (HANDLE_PRAGMA (finput, yylval.ttype))\n-\t\tgoto skipline;\n+#if USE_CPPLIB\n+              /* TODO: ??? */\n+              goto skipline;\n+#else\n+  \t      if (HANDLE_PRAGMA (finput, yylval.ttype))\n+  \t\tgoto skipline;\n+#endif /* !USE_CPPLIB */\n #endif\n #endif\n \t    }\n@@ -2281,7 +2286,7 @@ check_newline ()\n \t      && getch () == 'e'\n \t      && ((c = getch ()) == ' ' || c == '\\t'))\n \t    {\n-\t      debug_define (lineno, get_directive_line (finput));\n+\t      debug_define (lineno, GET_DIRECTIVE_LINE ());\n \t      goto skipline;\n \t    }\n \t}\n@@ -2293,7 +2298,7 @@ check_newline ()\n \t      && getch () == 'f'\n \t      && ((c = getch ()) == ' ' || c == '\\t'))\n \t    {\n-\t      debug_undef (lineno, get_directive_line (finput));\n+\t      debug_undef (lineno, GET_DIRECTIVE_LINE ());\n \t      goto skipline;\n \t    }\n \t}\n@@ -4749,8 +4754,7 @@ handle_cp_pragma (pname)\n    the token types.  */\n \n static int\n-handle_sysv_pragma (finput, token)\n-     FILE *finput;\n+handle_sysv_pragma (token)\n      register int token;\n {\n   for (;;)"}]}