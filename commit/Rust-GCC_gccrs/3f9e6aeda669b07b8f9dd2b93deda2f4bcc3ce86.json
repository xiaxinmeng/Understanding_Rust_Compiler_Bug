{"sha": "3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y5ZTZhZWRhNjY5YjA3YjhmOWRkMmI5M2RlZGEyZjRiY2MzY2U4Ng==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2006-02-01T19:44:47Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2006-02-01T19:44:47Z"}, "message": "function.c (assign_parm_setup_reg): Use function argument promotion rules.\n\n2006-02-01  Paul Brook  <paul@codesourcery.com>\n\n\t* function.c (assign_parm_setup_reg): Use function argument promotion\n\trules.\n\t* expr.c (expand_expr_real_1): Use function argument promotion rules\n\tfor PARM_DECLs.\n\nFrom-SVN: r110477", "tree": {"sha": "48daff7f42bc9bf65eb2c0c19a65b31cff51cccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48daff7f42bc9bf65eb2c0c19a65b31cff51cccb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86/comments", "author": null, "committer": null, "parents": [{"sha": "1832d32628764c218bb69a829fb0590594899bab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1832d32628764c218bb69a829fb0590594899bab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1832d32628764c218bb69a829fb0590594899bab"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "d9ebf254136879a7a5405f964576946321d83062", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86", "patch": "@@ -1,3 +1,10 @@\n+2006-02-01  Paul Brook  <paul@codesourcery.com>\n+\n+\t* function.c (assign_parm_setup_reg): Use function argument promotion\n+\trules.\n+\t* expr.c (expand_expr_real_1): Use function argument promotion rules\n+\tfor PARM_DECLs.\n+\n 2006-02-01  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.c (process_command): Change j to 'unsigned int'."}, {"sha": "832cc52a42158d325a9da964a228c9fe2c8a64b9", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86", "patch": "@@ -6774,7 +6774,8 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t  /* Get the signedness used for this variable.  Ensure we get the\n \t     same mode we got when the variable was declared.  */\n \t  pmode = promote_mode (type, DECL_MODE (exp), &unsignedp,\n-\t\t\t\t(TREE_CODE (exp) == RESULT_DECL ? 1 : 0));\n+\t\t\t\t(TREE_CODE (exp) == RESULT_DECL\n+\t\t\t\t || TREE_CODE (exp) == PARM_DECL) ? 1 : 0);\n \t  gcc_assert (GET_MODE (DECL_RTL (exp)) == pmode);\n \n \t  temp = gen_lowpart_SUBREG (mode, DECL_RTL (exp));"}, {"sha": "61ee42127ad2c69fbd20951925bf3e6ab45698cb", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=3f9e6aeda669b07b8f9dd2b93deda2f4bcc3ce86", "patch": "@@ -2624,8 +2624,10 @@ assign_parm_setup_reg (struct assign_parm_data_all *all, tree parm,\n   /* Store the parm in a pseudoregister during the function, but we may\n      need to do it in a wider mode.  */\n \n+  /* This is not really promoting for a call.  However we need to be\n+     consistent with assign_parm_find_data_types and expand_expr_real_1.  */\n   promoted_nominal_mode\n-    = promote_mode (data->nominal_type, data->nominal_mode, &unsignedp, 0);\n+    = promote_mode (data->nominal_type, data->nominal_mode, &unsignedp, 1);\n \n   parmreg = gen_reg_rtx (promoted_nominal_mode);\n "}]}