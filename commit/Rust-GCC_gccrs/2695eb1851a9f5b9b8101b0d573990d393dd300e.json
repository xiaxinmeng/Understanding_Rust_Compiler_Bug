{"sha": "2695eb1851a9f5b9b8101b0d573990d393dd300e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY5NWViMTg1MWE5ZjViOWI4MTAxYjBkNTczOTkwZDM5M2RkMzAwZQ==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2014-05-19T01:41:16Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2014-05-19T01:41:16Z"}, "message": "Add new test case\n\nFrom-SVN: r210599", "tree": {"sha": "40b722a6042ef7b08b18c8590c94550319832873", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40b722a6042ef7b08b18c8590c94550319832873"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2695eb1851a9f5b9b8101b0d573990d393dd300e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2695eb1851a9f5b9b8101b0d573990d393dd300e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2695eb1851a9f5b9b8101b0d573990d393dd300e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2695eb1851a9f5b9b8101b0d573990d393dd300e/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b3376a0da3e5de61c15899e4da1fc03ef7438d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3376a0da3e5de61c15899e4da1fc03ef7438d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3376a0da3e5de61c15899e4da1fc03ef7438d0"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "7e8859699d264845cba618bcb161e31eaca83860", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2695eb1851a9f5b9b8101b0d573990d393dd300e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2695eb1851a9f5b9b8101b0d573990d393dd300e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2695eb1851a9f5b9b8101b0d573990d393dd300e", "patch": "@@ -1,3 +1,7 @@\n+2014-05-17  Xinliang David Li  <davidxl@google.com>\n+\n+\t* g++.dg/ipa/devirt-33.C: New testcase.\n+\n 2014-05-17  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* g++.dg/ipa/comdat.C: New file."}, {"sha": "970a96b88d8ed9a6dec31eaa8980ac8ef46e41cf", "filename": "gcc/testsuite/g++.dg/ipa/devirt-33.C", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2695eb1851a9f5b9b8101b0d573990d393dd300e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2695eb1851a9f5b9b8101b0d573990d393dd300e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-33.C?ref=2695eb1851a9f5b9b8101b0d573990d393dd300e", "patch": "@@ -0,0 +1,78 @@\n+/* Verify we do not devirtualize wrongly to __cxa_pure_virtual */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -std=c++11\"  } */\n+\n+\n+inline void* operator new(__SIZE_TYPE__ s, void* buf) throw() {\n+   return buf;\n+} \n+\n+class A {\n+\n+private:\n+  struct Base {\n+      virtual ~Base() {}\n+      virtual Base *Clone(void *buf) const = 0;\n+      virtual float *Allocate(__SIZE_TYPE__ count) = 0;\n+   };\n+\n+ struct Value : Base {\n+    virtual ~Value (){}\n+    Base *Clone(void* buf)  const override {\n+      return new (buf) Value(); \n+    } \n+\n+    float *Allocate(__SIZE_TYPE__ count) override {\n+      return new float[count];\n+    }\n+  };\n+\n+public:\n+  A() {\n+    new (buffer_) Value();\n+  }\n+  A(const A& other) {\n+    other.ptr()->Clone(buffer_);\n+  }\n+\n+  float *Allocate() {\n+     return ptr()->Allocate(100);\n+  }\n+  const Base *ptr() const { return reinterpret_cast<const Base*>(buffer_);}\n+  Base *ptr()  { return reinterpret_cast< Base*>(buffer_);}\n+\n+private:\n+  alignas(16) char buffer_[1024];\n+};\n+\n+\n+struct B {\n+ B (const A& a) : a_(a) {\n+    buff_ = a_.Allocate();\n+ }\n+\n+ float *buff_;\n+ A a_;\n+};\n+\n+struct Dummy {\n+ int i;\n+};\n+\n+struct D : public Dummy {\n+   __attribute__((noinline)) D( const A&a);\n+\n+  B b_;\n+};\n+\n+D::D(const A&a) : b_(a) {}\n+ \n+int main()\n+{\n+   A a;\n+   D d(a); \n+\n+   return 0;\n+}\n+"}]}