{"sha": "6ce652e01b4aac993fd494aede50a84b688c3091", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNlNjUyZTAxYjRhYWM5OTNmZDQ5NGFlZGU1MGE4NGI2ODhjMzA5MQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-01-31T00:54:57Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-01-31T00:54:57Z"}, "message": "alpha.md (mov patterns): Emit the assembler aliases mov and fmov instead of bis and cpys.\n\n        * alpha.md (mov patterns): Emit the assembler aliases mov and fmov\n        instead of bis and cpys.  Combine alternatives where possible.\n\nFrom-SVN: r24934", "tree": {"sha": "8d4808871f3a5d7c66d0a9102c01cc1011ffd5a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d4808871f3a5d7c66d0a9102c01cc1011ffd5a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ce652e01b4aac993fd494aede50a84b688c3091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ce652e01b4aac993fd494aede50a84b688c3091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ce652e01b4aac993fd494aede50a84b688c3091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ce652e01b4aac993fd494aede50a84b688c3091/comments", "author": null, "committer": null, "parents": [{"sha": "59fee0c5703ea42ac4113a4e9e9e7be77cf7d73a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59fee0c5703ea42ac4113a4e9e9e7be77cf7d73a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59fee0c5703ea42ac4113a4e9e9e7be77cf7d73a"}], "stats": {"total": 174, "additions": 74, "deletions": 100}, "files": [{"sha": "50f3b98fb9b2f3d4ca99f93b70c63620a5c0b127", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ce652e01b4aac993fd494aede50a84b688c3091/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ce652e01b4aac993fd494aede50a84b688c3091/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ce652e01b4aac993fd494aede50a84b688c3091", "patch": "@@ -1,3 +1,8 @@\n+Sun Jan 31 00:52:37 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* alpha.md (mov patterns): Emit the assembler aliases mov and fmov\n+\tinstead of bis and cpys.  Combine alternatives where possible.\n+\n Sat Jan 30 23:14:13 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcov.c (fnotice): Add missing FILE* parameter."}, {"sha": "ee8ba6a3b4f46e37ef9cf14b9c12a966b39a7a01", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 69, "deletions": 100, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ce652e01b4aac993fd494aede50a84b688c3091/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ce652e01b4aac993fd494aede50a84b688c3091/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=6ce652e01b4aac993fd494aede50a84b688c3091", "patch": "@@ -2041,7 +2041,7 @@\n \t(float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"f,m,f\")))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n   \"@\n-   cpys %1,%1,%0\n+   fmov %1,%0\n    ld%, %0,%1\n    st%- %1,%0\"\n   [(set_attr \"type\" \"fcpys,fld,fst\")\n@@ -3749,7 +3749,7 @@\n    (clobber (reg:DI 27))]\n   \"TARGET_OPEN_VMS\"\n   \"@\n-   bis %2,%2,$27\\;jsr $26,0\\;ldq $27,0($29)\n+   mov %2,$27\\;jsr $26,0\\;ldq $27,0($29)\n    ldq $27,%2\\;jsr $26,%0\\;ldq $27,0($29)\"\n   [(set_attr \"type\" \"jsr\")\n    (set_attr \"length\" \"12,16\")])\n@@ -3791,7 +3791,7 @@\n    (clobber (reg:DI 27))]\n   \"TARGET_OPEN_VMS\"\n   \"@\n-   bis %3,%3,$27\\;jsr $26,0\\;ldq $27,0($29)\n+   mov %3,$27\\;jsr $26,0\\;ldq $27,0($29)\n    ldq $27,%3\\;jsr $26,%1\\;ldq $27,0($29)\"\n   [(set_attr \"type\" \"jsr\")\n    (set_attr \"length\" \"12,16\")])\n@@ -4032,72 +4032,68 @@\n ;; they are simpler.\n \n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,f,m\")\n-\t(match_operand:SF 1 \"input_operand\" \"rG,m,rG,f,G,m,fG\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,m\")\n+\t(match_operand:SF 1 \"input_operand\" \"rG,m,r,fG,m,fG\"))]\n   \"! TARGET_CIX\n    && (register_operand (operands[0], SFmode)\n        || reg_or_fp0_operand (operands[1], SFmode))\"\n   \"@\n-   bis %r1,%r1,%0\n+   mov %r1,%0\n    ldl %0,%1\n    stl %r1,%0\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\n+   fmov %R1,%0\n    ld%, %0,%1\n    st%, %R1,%0\"\n-  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fcpys,fld,fst\")])\n+  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fld,fst\")])\n \n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,f,m,f,*r\")\n-\t(match_operand:SF 1 \"input_operand\" \"rG,m,rG,f,G,m,fG,r,*f\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,m,f,*r\")\n+\t(match_operand:SF 1 \"input_operand\" \"rG,m,r,fG,m,fG,r,*f\"))]\n   \"TARGET_CIX\n    && (register_operand (operands[0], SFmode)\n        || reg_or_fp0_operand (operands[1], SFmode))\"\n   \"@\n-   bis %r1,%r1,%0\n+   mov %r1,%0\n    ldl %0,%1\n    stl %r1,%0\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\n+   fmov %R1,%0\n    ld%, %0,%1\n    st%, %R1,%0\n    itofs %1,%0\n    ftois %1,%0\"\n-  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fcpys,fld,fst,itof,ftoi\")])\n+  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fld,fst,itof,ftoi\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,f,m\")\n-\t(match_operand:DF 1 \"input_operand\" \"rG,m,rG,f,G,m,fG\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,m\")\n+\t(match_operand:DF 1 \"input_operand\" \"rG,m,r,fG,m,fG\"))]\n   \"! TARGET_CIX\n    && (register_operand (operands[0], DFmode)\n        || reg_or_fp0_operand (operands[1], DFmode))\"\n   \"@\n-   bis %r1,%r1,%0\n+   mov %r1,%0\n    ldq %0,%1\n    stq %r1,%0\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\n+   fmov %R1,%0\n    ld%- %0,%1\n    st%- %R1,%0\"\n-  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fcpys,fld,fst\")])\n+  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fld,fst\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,f,m,f,*r\")\n-\t(match_operand:DF 1 \"input_operand\" \"rG,m,rG,f,G,m,fG,r,*f\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r,r,m,f,f,m,f,*r\")\n+\t(match_operand:DF 1 \"input_operand\" \"rG,m,r,fG,m,fG,r,*f\"))]\n   \"TARGET_CIX\n    && (register_operand (operands[0], DFmode)\n        || reg_or_fp0_operand (operands[1], DFmode))\"\n   \"@\n-   bis %r1,%r1,%0\n+   mov %r1,%0\n    ldq %0,%1\n    stq %r1,%0\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\n+   fmov %R1,%0\n    ld%- %0,%1\n    st%- %R1,%0\n    itoft %1,%0\n    ftoit %1,%0\"\n-  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fcpys,fld,fst,itof,ftoi\")])\n+  [(set_attr \"type\" \"ilog,ild,ist,fcpys,fld,fst,itof,ftoi\")])\n \n (define_expand \"movsf\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"\")\n@@ -4122,131 +4118,110 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,m,f,f,f,m\")\n-\t(match_operand:SI 1 \"input_operand\" \"r,J,I,K,L,m,rJ,f,J,m,fG\"))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,m,f,f,m\")\n+\t(match_operand:SI 1 \"input_operand\" \"rJ,K,L,m,rJ,fJ,m,f\"))]\n   \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS && ! TARGET_CIX\n    && (register_operand (operands[0], SImode)\n        || reg_or_0_operand (operands[1], SImode))\"\n   \"@\n-   bis %1,%1,%0\n-   bis $31,$31,%0\n-   bis $31,%1,%0\n+   mov %r1,%0\n    lda %0,%1\n    ldah %0,%h1\n    ldl %0,%1\n    stl %r1,%0\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\n+   fmov %R1,%0\n    ld%, %0,%1\n    st%, %R1,%0\"\n-  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ild,ist,fcpys,fcpys,fld,fst\")])\n+  [(set_attr \"type\" \"ilog,iadd,iadd,ild,ist,fcpys,fld,fst\")])\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,m,f,f,f,m,r,*f\")\n-\t(match_operand:SI 1 \"input_operand\" \"r,J,I,K,L,m,rJ,f,J,m,fG,f,*r\"))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,m,f,f,m,r,*f\")\n+\t(match_operand:SI 1 \"input_operand\" \"rJ,K,L,m,rJ,fJ,m,f,f,*r\"))]\n   \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS && TARGET_CIX\n    && (register_operand (operands[0], SImode)\n        || reg_or_0_operand (operands[1], SImode))\"\n   \"@\n-   bis %1,%1,%0\n-   bis $31,$31,%0\n-   bis $31,%1,%0\n+   mov %r1,%0\n    lda %0,%1\n    ldah %0,%h1\n    ldl %0,%1\n    stl %r1,%0\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\n+   fmov %R1,%0\n    ld%, %0,%1\n    st%, %R1,%0\n    ftois %1,%0\n    itofs %1,%0\"\n-  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ild,ist,fcpys,fcpys,fld,fst,ftoi,itof\")])\n+  [(set_attr \"type\" \"ilog,iadd,iadd,ild,ist,fcpys,fld,fst,ftoi,itof\")])\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,r,m,f,f,f,m\")\n-\t(match_operand:SI 1 \"input_operand\" \"r,J,I,K,L,s,m,rJ,f,J,m,fG\"))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,m,f,f,m\")\n+\t(match_operand:SI 1 \"input_operand\" \"rJ,K,L,s,m,rJ,fJ,m,f\"))]\n   \"(TARGET_WINDOWS_NT || TARGET_OPEN_VMS)\n     && (register_operand (operands[0], SImode)\n         || reg_or_0_operand (operands[1], SImode))\"\n   \"@\n-   bis %1,%1,%0\n-   bis $31,$31,%0\n-   bis $31,%1,%0\n+   mov %1,%0\n    lda %0,%1\n    ldah %0,%h1\n    lda %0,%1\n    ldl %0,%1\n    stl %r1,%0\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\n+   fmov %R1,%0\n    ld%, %0,%1\n    st%, %R1,%0\"\n-  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ldsym,ild,ist,fcpys,fcpys,fld,fst\")])\n+  [(set_attr \"type\" \"ilog,iadd,iadd,ldsym,ild,ist,fcpys,fld,fst\")])\n \n (define_insn \"\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,r,r,f,f\")\n-\t(match_operand:HI 1 \"input_operand\" \"r,J,I,n,f,J\"))]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,f\")\n+\t(match_operand:HI 1 \"input_operand\" \"rJ,n,fJ\"))]\n   \"! TARGET_BWX\n    && (register_operand (operands[0], HImode)\n        || register_operand (operands[1], HImode))\"\n   \"@\n-   bis %1,%1,%0\n-   bis $31,$31,%0\n-   bis $31,%1,%0\n+   mov %r1,%0\n    lda %0,%L1\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\"\n-  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,fcpys,fcpys\")])\n+   fmov %R1,%0\"\n+  [(set_attr \"type\" \"ilog,iadd,fcpys\")])\n \n (define_insn \"\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,m,f,f\")\n-\t(match_operand:HI 1 \"input_operand\" \"r,J,I,n,m,rJ,f,J\"))]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,r,m,f\")\n+\t(match_operand:HI 1 \"input_operand\" \"rJ,n,m,rJ,fJ\"))]\n   \"TARGET_BWX\n    && (register_operand (operands[0], HImode)\n        || reg_or_0_operand (operands[1], HImode))\"\n   \"@\n-   bis %1,%1,%0\n-   bis $31,$31,%0\n-   bis $31,%1,%0\n+   mov %r1,%0\n    lda %0,%L1\n    ldwu %0,%1\n    stw %r1,%0\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\"\n-  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,ild,ist,fcpys,fcpys\")])\n+   fmov %R1,%0\"\n+  [(set_attr \"type\" \"ilog,iadd,ild,ist,fcpys\")])\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,r,r,f,f\")\n-\t(match_operand:QI 1 \"input_operand\" \"r,J,I,n,f,J\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,f\")\n+\t(match_operand:QI 1 \"input_operand\" \"rJ,n,fJ\"))]\n   \"! TARGET_BWX\n    && (register_operand (operands[0], QImode)\n        || register_operand (operands[1], QImode))\"\n   \"@\n-   bis %1,%1,%0\n-   bis $31,$31,%0\n-   bis $31,%1,%0\n+   mov %r1,%0\n    lda %0,%L1\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\"\n-  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,fcpys,fcpys\")])\n+   fmov %R1,%0\"\n+  [(set_attr \"type\" \"ilog,iadd,fcpys\")])\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,m,f,f\")\n-\t(match_operand:QI 1 \"input_operand\" \"r,J,I,n,m,rJ,f,J\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,r,m,f\")\n+\t(match_operand:QI 1 \"input_operand\" \"rJ,n,m,rJ,fJ\"))]\n   \"TARGET_BWX\n    && (register_operand (operands[0], QImode)\n        || reg_or_0_operand (operands[1], QImode))\"\n   \"@\n-   bis %1,%1,%0\n-   bis $31,$31,%0\n-   bis $31,%1,%0\n+   mov %r1,%0\n    lda %0,%L1\n    ldbu %0,%1\n    stb %r1,%0\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\"\n-  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,ild,ist,fcpys,fcpys\")])\n+   fmov %R1,%0\"\n+  [(set_attr \"type\" \"ilog,iadd,ild,ist,fcpys\")])\n \n ;; We do two major things here: handle mem->mem and construct long\n ;; constants.\n@@ -4292,48 +4267,42 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"general_operand\" \"=r,r,r,r,r,r,r,m,f,f,f,Q\")\n-\t(match_operand:DI 1 \"input_operand\" \"r,J,I,K,L,s,m,rJ,f,J,Q,fG\"))]\n+  [(set (match_operand:DI 0 \"general_operand\" \"=r,r,r,r,r,m,f,f,Q\")\n+\t(match_operand:DI 1 \"input_operand\" \"rJ,K,L,s,m,rJ,fJ,Q,f\"))]\n   \"! TARGET_CIX\n    && (register_operand (operands[0], DImode)\n        || reg_or_0_operand (operands[1], DImode))\"\n   \"@\n-   bis %1,%1,%0\n-   bis $31,$31,%0\n-   bis $31,%1,%0\n+   mov %r1,%0\n    lda %0,%1\n    ldah %0,%h1\n    lda %0,%1\n    ldq%A1 %0,%1\n    stq%A0 %r1,%0\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\n+   fmov %R1,%0\n    ldt %0,%1\n    stt %R1,%0\"\n-  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ldsym,ild,ist,fcpys,fcpys,fld,fst\")])\n+  [(set_attr \"type\" \"ilog,iadd,iadd,ldsym,ild,ist,fcpys,fld,fst\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"general_operand\" \"=r,r,r,r,r,r,r,m,f,f,f,Q,r,*f\")\n-\t(match_operand:DI 1 \"input_operand\" \"r,J,I,K,L,s,m,rJ,f,J,Q,fG,f,*r\"))]\n+  [(set (match_operand:DI 0 \"general_operand\" \"=r,r,r,r,r,m,f,f,Q,r,*f\")\n+\t(match_operand:DI 1 \"input_operand\" \"rJ,K,L,s,m,rJ,fJ,Q,f,f,*r\"))]\n   \"TARGET_CIX\n    && (register_operand (operands[0], DImode)\n        || reg_or_0_operand (operands[1], DImode))\"\n   \"@\n-   bis %1,%1,%0\n-   bis $31,$31,%0\n-   bis $31,%1,%0\n+   mov %r1,%0\n    lda %0,%1\n    ldah %0,%h1\n    lda %0,%1\n    ldq%A1 %0,%1\n    stq%A0 %r1,%0\n-   cpys %1,%1,%0\n-   cpys $f31,$f31,%0\n+   fmov %R1,%0\n    ldt %0,%1\n    stt %R1,%0\n    ftoit %1,%0\n    itoft %1,%0\"\n-  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ldsym,ild,ist,fcpys,fcpys,fld,fst,ftoi,itof\")])\n+  [(set_attr \"type\" \"ilog,iadd,iadd,ldsym,ild,ist,fcpys,fld,fst,ftoi,itof\")])\n \n ;; We do three major things here: handle mem->mem, put 64-bit constants in\n ;; memory, and construct long 32-bit constants.\n@@ -5151,7 +5120,7 @@\n         (match_operand:DI 1 \"register_operand\" \"r\"))\n    (clobber (mem:BLK (match_operand:DI 2 \"register_operand\" \"r\")))]\n   \"\"\n-  \"bis %1,%1,%0\")\n+  \"mov %1,%0\")\n \n (define_expand \"epilogue\"\n   [(clobber (const_int 0))]"}]}