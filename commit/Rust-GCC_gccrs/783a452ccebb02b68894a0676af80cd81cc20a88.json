{"sha": "783a452ccebb02b68894a0676af80cd81cc20a88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgzYTQ1MmNjZWJiMDJiNjg4OTRhMDY3NmFmODBjZDgxY2MyMGE4OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-08-24T21:32:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-08-24T21:32:24Z"}, "message": "cp-tree.h (DECL_DEFERRED_FN): Remove.\n\n\t* cp-tree.h (DECL_DEFERRED_FN): Remove.\n\t(struct lang_decl_fn): Remove deferred flag.\n\t* class.c (build_clone): Don't set it.\n\t* decl2.c (note_vague_linkage_fn): Don't check or set it.\n\t(mark_used): Don't check it.\n\t* method.c (make_thunk, make_alias_for): Don't set it.\n\nFrom-SVN: r151063", "tree": {"sha": "5f1db66707ec4b1bdfa82e007c44ad7a3fa8aba0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f1db66707ec4b1bdfa82e007c44ad7a3fa8aba0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/783a452ccebb02b68894a0676af80cd81cc20a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783a452ccebb02b68894a0676af80cd81cc20a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/783a452ccebb02b68894a0676af80cd81cc20a88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783a452ccebb02b68894a0676af80cd81cc20a88/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9fbd03b211d96fa1be5f0576e578dd11ed7bd21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9fbd03b211d96fa1be5f0576e578dd11ed7bd21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9fbd03b211d96fa1be5f0576e578dd11ed7bd21"}], "stats": {"total": 48, "additions": 17, "deletions": 31}, "files": [{"sha": "6c9d217111a39788a2a0c8420bbe78762f425f80", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783a452ccebb02b68894a0676af80cd81cc20a88/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783a452ccebb02b68894a0676af80cd81cc20a88/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=783a452ccebb02b68894a0676af80cd81cc20a88", "patch": "@@ -1,5 +1,12 @@\n 2009-08-24  Jason Merrill  <jason@redhat.com>\n \n+\t* cp-tree.h (DECL_DEFERRED_FN): Remove.\n+\t(struct lang_decl_fn): Remove deferred flag.\n+\t* class.c (build_clone): Don't set it.\n+\t* decl2.c (note_vague_linkage_fn): Don't check or set it.\n+\t(mark_used): Don't check it.\n+\t* method.c (make_thunk, make_alias_for): Don't set it.\n+\n \t* decl2.c (mark_used): Streamline logic.\n \n \tPR c++/41109"}, {"sha": "694d2628baa9477fb76891837c0b51f1a2a97222", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783a452ccebb02b68894a0676af80cd81cc20a88/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783a452ccebb02b68894a0676af80cd81cc20a88/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=783a452ccebb02b68894a0676af80cd81cc20a88", "patch": "@@ -3881,8 +3881,6 @@ build_clone (tree fn, tree name)\n   /* There's no pending inline data for this function.  */\n   DECL_PENDING_INLINE_INFO (clone) = NULL;\n   DECL_PENDING_INLINE_P (clone) = 0;\n-  /* And it hasn't yet been deferred.  */\n-  DECL_DEFERRED_FN (clone) = 0;\n \n   /* The base-class destructor is not virtual.  */\n   if (name == base_dtor_identifier)"}, {"sha": "ff9ca7b45a6c6384c7590875862db0e1297fceef", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783a452ccebb02b68894a0676af80cd81cc20a88/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783a452ccebb02b68894a0676af80cd81cc20a88/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=783a452ccebb02b68894a0676af80cd81cc20a88", "patch": "@@ -1642,8 +1642,7 @@ struct GTY(()) lang_decl_fn {\n   unsigned thunk_p : 1;\n   unsigned this_thunk_p : 1;\n   unsigned hidden_friend_p : 1;\n-  unsigned deferred : 1;\n-  /* No spare bits; consider adding to lang_decl_base instead.  */\n+  /* 1 spare bit.  */\n \n   /* For a non-thunk function decl, this is a tree list of\n      friendly classes. For a thunk function decl, it is the\n@@ -2235,10 +2234,6 @@ extern void decl_shadowed_for_var_insert (tree, tree);\n #define CLASSTYPE_SORTED_FIELDS(NODE) \\\n   (LANG_TYPE_CLASS_CHECK (NODE)->sorted_fields)\n \n-/* True if on the deferred_fns (see decl2.c) list.  */\n-#define DECL_DEFERRED_FN(DECL) \\\n-  (LANG_DECL_FN_CHECK (DECL)->deferred)\n-\n /* If non-NULL for a VAR_DECL, FUNCTION_DECL, TYPE_DECL or\n    TEMPLATE_DECL, the entity is either a template specialization (if\n    DECL_USE_TEMPLATE is nonzero) or the abstract instance of the"}, {"sha": "da9c2b7316657f5207ae6efc390571a73133532a", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783a452ccebb02b68894a0676af80cd81cc20a88/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783a452ccebb02b68894a0676af80cd81cc20a88/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=783a452ccebb02b68894a0676af80cd81cc20a88", "patch": "@@ -703,12 +703,8 @@ check_classfn (tree ctype, tree function, tree template_parms)\n void\n note_vague_linkage_fn (tree decl)\n {\n-  if (!DECL_DEFERRED_FN (decl))\n-    {\n-      DECL_DEFERRED_FN (decl) = 1;\n-      DECL_DEFER_OUTPUT (decl) = 1;\n-      VEC_safe_push (tree, gc, deferred_fns, decl);\n-    }\n+  DECL_DEFER_OUTPUT (decl) = 1;\n+  VEC_safe_push (tree, gc, deferred_fns, decl);\n }\n \n /* We have just processed the DECL, which is a static data member.\n@@ -3932,28 +3928,21 @@ mark_used (tree decl)\n     }\n \n   if (TREE_CODE (decl) == FUNCTION_DECL && DECL_DECLARED_INLINE_P (decl)\n-      && !TREE_ASM_WRITTEN (decl))\n+      && !DECL_INITIAL (decl) && !DECL_ARTIFICIAL (decl))\n     /* Remember it, so we can check it was defined.  */\n-    {\n-      if (DECL_DEFERRED_FN (decl))\n-\treturn;\n-\n-      /* Remember the current location for a function we will end up\n-\t synthesizing.  Then we can inform the user where it was\n-\t required in the case of error.  */\n-      if (DECL_ARTIFICIAL (decl) && DECL_NONSTATIC_MEMBER_FUNCTION_P (decl)\n-\t  && !DECL_THUNK_P (decl))\n-\tDECL_SOURCE_LOCATION (decl) = input_location;\n-\n-      note_vague_linkage_fn (decl);\n-    }\n+    note_vague_linkage_fn (decl);\n \n   /* Is it a synthesized method that needs to be synthesized?  */\n   if (TREE_CODE (decl) == FUNCTION_DECL\n       && DECL_NONSTATIC_MEMBER_FUNCTION_P (decl)\n       && DECL_DEFAULTED_FN (decl)\n       && ! DECL_INITIAL (decl))\n     {\n+      /* Remember the current location for a function we will end up\n+\t synthesizing.  Then we can inform the user where it was\n+\t required in the case of error.  */\n+      DECL_SOURCE_LOCATION (decl) = input_location;\n+\n       /* Synthesizing an implicitly defined member function will result in\n \t garbage collection.  We must treat this situation as if we were\n \t within the body of a function so as to avoid collecting live data"}, {"sha": "4563e8f6b5cc246452ed186bbc48a8f92309bdb0", "filename": "gcc/cp/method.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/783a452ccebb02b68894a0676af80cd81cc20a88/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/783a452ccebb02b68894a0676af80cd81cc20a88/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=783a452ccebb02b68894a0676af80cd81cc20a88", "patch": "@@ -157,8 +157,6 @@ make_thunk (tree function, bool this_adjusting,\n   /* The THUNK is not a pending inline, even if the FUNCTION is.  */\n   DECL_PENDING_INLINE_P (thunk) = 0;\n   DECL_DECLARED_INLINE_P (thunk) = 0;\n-  /* Nor has it been deferred.  */\n-  DECL_DEFERRED_FN (thunk) = 0;\n   /* Nor is it a template instantiation.  */\n   DECL_USE_TEMPLATE (thunk) = 0;\n   DECL_TEMPLATE_INFO (thunk) = NULL;\n@@ -286,7 +284,6 @@ make_alias_for (tree function, tree newid)\n   DECL_NO_STATIC_CHAIN (alias) = 1;\n   DECL_PENDING_INLINE_P (alias) = 0;\n   DECL_DECLARED_INLINE_P (alias) = 0;\n-  DECL_DEFERRED_FN (alias) = 0;\n   DECL_USE_TEMPLATE (alias) = 0;\n   DECL_TEMPLATE_INSTANTIATED (alias) = 0;\n   DECL_TEMPLATE_INFO (alias) = NULL;"}]}