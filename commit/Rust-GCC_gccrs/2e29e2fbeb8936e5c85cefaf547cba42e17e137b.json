{"sha": "2e29e2fbeb8936e5c85cefaf547cba42e17e137b", "node_id": "C_kwDOANBUbNoAKDJlMjllMmZiZWI4OTM2ZTVjODVjZWZhZjU0N2NiYTQyZTE3ZTEzN2I", "commit": {"author": {"name": "Matthias Kretz", "email": "m.kretz@gsi.de", "date": "2023-01-14T22:32:38Z"}, "committer": {"name": "Matthias Kretz", "email": "m.kretz@gsi.de", "date": "2023-02-23T14:01:49Z"}, "message": "libstdc++: Simplify three helper functions into one\n\nBroadcast is a very common function. This should reduce compile-time\neffort.\n\nSigned-off-by: Matthias Kretz <m.kretz@gsi.de>\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/108030\n\t* include/experimental/bits/simd.h (__vector_broadcast):\n\tImplement via __vector_broadcast_impl instead of\n\t__call_with_n_evaluations + 2 lambdas.\n\t(__vector_broadcast_impl): New.", "tree": {"sha": "2806731224cdf955963323b7de8364ef726b9f91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2806731224cdf955963323b7de8364ef726b9f91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e29e2fbeb8936e5c85cefaf547cba42e17e137b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e29e2fbeb8936e5c85cefaf547cba42e17e137b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e29e2fbeb8936e5c85cefaf547cba42e17e137b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e29e2fbeb8936e5c85cefaf547cba42e17e137b/comments", "author": {"login": "mattkretz", "id": 3306474, "node_id": "MDQ6VXNlcjMzMDY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3306474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkretz", "html_url": "https://github.com/mattkretz", "followers_url": "https://api.github.com/users/mattkretz/followers", "following_url": "https://api.github.com/users/mattkretz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkretz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkretz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkretz/subscriptions", "organizations_url": "https://api.github.com/users/mattkretz/orgs", "repos_url": "https://api.github.com/users/mattkretz/repos", "events_url": "https://api.github.com/users/mattkretz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkretz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mattkretz", "id": 3306474, "node_id": "MDQ6VXNlcjMzMDY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3306474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkretz", "html_url": "https://github.com/mattkretz", "followers_url": "https://api.github.com/users/mattkretz/followers", "following_url": "https://api.github.com/users/mattkretz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkretz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkretz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkretz/subscriptions", "organizations_url": "https://api.github.com/users/mattkretz/orgs", "repos_url": "https://api.github.com/users/mattkretz/repos", "events_url": "https://api.github.com/users/mattkretz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkretz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af46073dbe83d88e2d93d967da447346b22c70bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af46073dbe83d88e2d93d967da447346b22c70bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af46073dbe83d88e2d93d967da447346b22c70bb"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "7482d10929111bb42d30d98ef0c396153e749e68", "filename": "libstdc++-v3/include/experimental/bits/simd.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e29e2fbeb8936e5c85cefaf547cba42e17e137b/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e29e2fbeb8936e5c85cefaf547cba42e17e137b/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd.h?ref=2e29e2fbeb8936e5c85cefaf547cba42e17e137b", "patch": "@@ -1798,15 +1798,15 @@ template <typename _Tp, typename... _Args>\n \n // }}}\n // __vector_broadcast{{{\n+template <size_t _Np, typename _Tp, size_t... _I>\n+  _GLIBCXX_SIMD_INTRINSIC constexpr __vector_type_t<_Tp, _Np>\n+  __vector_broadcast_impl(_Tp __x, index_sequence<_I...>)\n+  { return __vector_type_t<_Tp, _Np>{((void)_I, __x)...}; }\n+\n template <size_t _Np, typename _Tp>\n   _GLIBCXX_SIMD_INTRINSIC constexpr __vector_type_t<_Tp, _Np>\n   __vector_broadcast(_Tp __x)\n-  {\n-    return __call_with_n_evaluations<_Np>(\n-      [](auto... __xx) _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA {\n-\treturn __vector_type_t<_Tp, _Np>{__xx...};\n-      }, [&__x](int) _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA { return __x; });\n-  }\n+  { return __vector_broadcast_impl<_Np, _Tp>(__x, make_index_sequence<_Np>()); }\n \n // }}}\n // __generate_vector{{{"}]}