{"sha": "62e66577b28d76bd2f4e1feb01ca7bad25dde8e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJlNjY1NzdiMjhkNzZiZDJmNGUxZmViMDFjYTdiYWQyNWRkZThlOA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2009-04-28T15:17:49Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2009-04-28T15:17:49Z"}, "message": "inclhack.def (hpux11_uint32_c): Remove.\n\n\t* inclhack.def (hpux11_uint32_c): Remove.\n\t(hpux_long_double): Disable on hpux11.3*.\n\t(hpux_long_double_2): New.\n\t(hpux_c99_intptr): New.\n\t(hpux_c99_inttypes): New.\n\t(hpux_c99_inttypes2): New.\n\t(hpux_stdint_least): New.\n\t(hpux_stdint_fast): New.\n\t(hpux_inttype_int_least8_t): New.\n\t(hpux_inttype_int8_t): New.\n\t* fixincl.x: Regenerate.\n\t* tests/base/sys/_inttypes.h: New.\n\t* tests/base/inttypes.h: Update.\n\t* tests/base/stdlib.h: Update.\n\t* tests/base/stdint.h: Update.\n\nFrom-SVN: r146899", "tree": {"sha": "f4e2713da92204b23f131d111429435387a6ab03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4e2713da92204b23f131d111429435387a6ab03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/comments", "author": null, "committer": null, "parents": [{"sha": "af04e659c91c5698bb5f8e0a379a35906471ec60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af04e659c91c5698bb5f8e0a379a35906471ec60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af04e659c91c5698bb5f8e0a379a35906471ec60"}], "stats": {"total": 234, "additions": 201, "deletions": 33}, "files": [{"sha": "a31631df12f7d62f1a6ca4131ca7f566278fdbe7", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=62e66577b28d76bd2f4e1feb01ca7bad25dde8e8", "patch": "@@ -1,3 +1,21 @@\n+2009-04-28  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* inclhack.def (hpux11_uint32_c): Remove.\n+\t(hpux_long_double): Disable on hpux11.3*.\n+\t(hpux_long_double_2): New.\n+\t(hpux_c99_intptr): New.\n+\t(hpux_c99_inttypes): New.\n+\t(hpux_c99_inttypes2): New.\n+\t(hpux_stdint_least): New.\n+\t(hpux_stdint_fast): New.\n+\t(hpux_inttype_int_least8_t): New.\n+\t(hpux_inttype_int8_t): New.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/sys/_inttypes.h: New.\n+\t* tests/base/inttypes.h: Update.\n+\t* tests/base/stdlib.h: Update.\n+\t* tests/base/stdint.h: Update.\n+\n 2009-04-28  Joseph Myers  <joseph@codesourcery.com>\n \n \t* inclhack.def (glibc_stdint): New fix."}, {"sha": "f77845f77d293190710b108c25be224a5cc2c8aa", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 107, "deletions": 29, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=62e66577b28d76bd2f4e1feb01ca7bad25dde8e8", "patch": "@@ -1609,35 +1609,6 @@ fix = {\n                 \"extern int snprintf(char *, _hpux_size_t, char *, ...);\";\n };\n \n-\n-/*\n- * In inttypes.h on HPUX 11, the use of __CONCAT__ in the definition\n- * of UINT32_C has undefined behavior according to ISO/ANSI:\n- * the arguments to __CONCAT__ are not macro expanded before the\n- * concatination happens so the trailing ')' in the first argument\n- * is concatinated with the 'l' in the second argument creating an\n- * invalid pp token.  The behavior of invalid pp tokens is undefined.\n- * GCC does not handle these invalid tokens the way the HP compiler does.\n- * This problem will potentially occur anytime macros are used in the\n- * arguments to __CONCAT__.  A general solution to this problem would be to\n- * insert another layer of macro between __CONCAT__ and its use\n- * in UINT32_C.  An example of this solution can be found in the C standard.\n- * A more specific solution, the one used here, is to change the UINT32_C\n- * macro to not used macros in the arguments to __CONCAT__.\n- */\n-fix = {\n-    hackname = hpux11_uint32_c;\n-    files    = inttypes.h;\n-    select   = \"^#define UINT32_C\\\\(__c\\\\)[ \\t]*\"\n-                         \"__CONCAT__\\\\(__CONCAT_U__\\\\(__c\\\\),l\\\\)\";\n-    c_fix    = format;\n-    c_fix_arg = '#define UINT32_C(__c) __CONCAT__(__c,ul)';\n-    test_text =\n-    \"#define CONCAT_U__(__c)\\t__CONCAT__(__c,u)\\n\"\n-    \"#define UINT32_C(__c)\\t__CONCAT__(__CONCAT_U__(__c),l)\";\n-};\n-\n-\n /*\n  *  Fix hpux 11.00 broken vsnprintf declaration\n  */\n@@ -1721,6 +1692,8 @@ fix = {\n  */\n fix = {\n     hackname  = hpux_long_double;\n+    mach      = \"*-*-hpux10*\";\n+    mach      = \"*-*-hpux11.[012]*\";\n     files     = stdlib.h;\n     select    = \"extern[ \\t]long_double[ \\t]strtold\";\n     bypass    = \"long_double_t\";\n@@ -1736,6 +1709,20 @@ fix = {\n \t\t\"extern long_double strtold(const char *, char **);\\n\";\n };\n \n+ /*\n+  * We cannot use the above rule on 11.31 because it removes the strtold\n+  * definition.  ia64 is OK with no hack, PA needs some help.\n+  */\n+fix = {\n+    hackname  = hpux_long_double_2;\n+    mach      = \"hppa*-*-hpux11.3*\";\n+    files     = stdlib.h;\n+    select    = \"#[ \\t]*if[ \\t]*!defined\\\\(__ia64\\\\) \\\\|\\\\| defined\\\\(_PROTOTYPES\\\\) \\\\|\\\\| defined\\\\(_LONG_DOUBLE_STRUCT\\\\)\";\n+    c_fix     = format;\n+    c_fix_arg = \"#  if !defined(_PROTOTYPES) || defined(_LONG_DOUBLE_STRUCT)\";\n+\n+    test_text = \"#  if !defined(__ia64) || !defined(_PROTOTYPES) || defined(_LONG_DOUBLE_STRUCT)\\n\";\n+};\n \n /*\n  *  Fix hpux10.20 <sys/time.h> to avoid invalid forward decl\n@@ -1849,6 +1836,97 @@ fix = {\n \t\t\"}\\n\";\n };\n \n+fix = {\n+    hackname  = hpux_c99_intptr;\n+    mach      = \"*-hp-hpux11.3*\";\n+    files     = stdint.h;\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*PTRDIFF_MAX[ \\t]*INT32_MAX[ \\t]*$@#define PTRDIFF_MAX (2147483647l)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*PTRDIFF_MIN[ \\t]*INT32_MIN[ \\t]*$@#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INTPTR_MAX[ \\t]*INT32_MAX[ \\t]*$@#define INTPTR_MAX (2147483647l)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INTPTR_MIN[ \\t]*INT32_MIN[ \\t]*$@#define INTPTR_MIN (-INTPTR_MAX - 1)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINTPTR_MAX[ \\t]*UINT32_MAX[ \\t]*$@#define UINTPTR_MAX (4294967295ul)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*SIZE_MAX[ \\t]*UINT32_MAX[ \\t]*$@#define SIZE_MAX (4294967295ul)@\";\n+    test_text = \"#define PTRDIFF_MAX\tINT32_MAX\\n\"\n+\t\t\"#define PTRDIFF_MIN\tINT32_MIN\\n\"\n+\t\t\"#define INTPTR_MAX\tINT32_MAX\\n\"\n+\t\t\"#define INTPTR_MIN\tINT32_MIN\\n\"\n+\t\t\"#define UINTPTR_MAX\tUINT32_MAX\\n\"\n+\t\t\"#define SIZE_MAX\tUINT32_MAX\\n\";\n+};\n+\n+/*\n+ * These hacks are need in inttypes.h on 11.23 and in stdint.h on 11.31.\n+ */\n+\n+fix = {\n+    hackname  = hpux_c99_inttypes;\n+    mach      = \"*-hp-hpux11.[23]*\";\n+    files     = inttypes.h;\n+    files     = stdint.h;\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT8_C(__c)[ \\t]*__CONCAT_U__(__c)[ \\t]*$@#define UINT8_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT16_C(__c)[ \\t]*__CONCAT_U__(__c)[ \\t]*$@#define UINT16_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INT32_C(__c)[ \\t]*__CONCAT__(__c,l)[ \\t]*$@#define INT32_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT32_C(__c)[ \\t].*$@#define UINT32_C(__c) __CONCAT__(__c,u)@\";\n+    test_text = \"#define UINT8_C(__c)     __CONCAT_U__(__c)\\n\"\n+                \"#define UINT16_C(__c)    __CONCAT_U__(__c)\\n\"\n+\t\t\"#define INT32_C(__c)     __CONCAT__(__c,l)\\n\"\n+\t\t\"#define UINT32_C(__c)     __CONCAT__(__c,ul)\\n\";\n+};\n+\n+fix = {\n+    hackname  = hpux_c99_inttypes2;\n+    mach      = \"*-hp-hpux11.2*\";\n+    files     = stdint.h;\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INT8_C(__c)[ \\t]*((signed char)(__c))[ \\t]*$@#define INT8_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT8_C(__c)[ \\t]*((unsigned char)(__c))[ \\t]*$@#define UINT8_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INT16_C(__c)[ \\t]*((short)(__c))[ \\t]*$@#define INT16_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT16_C(__c)[ \\t]*((unsigned short)(__c))[ \\t]*$@#define UINT16_C(__c) (__c)@\";\n+    test_text = \"#  define\tINT8_C(__c)\t((signed char)(__c))\\n\"\n+                \"#  define      UINT8_C(__c)    ((unsigned char)(__c))\\n\"\n+\t\t\"#  define      INT16_C(__c)    ((short)(__c))\\n\"\n+\t\t\"#  define\tUINT16_C(__c)\t((unsigned short)(__c))\\n\";\n+};\n+\n+fix = {\n+    hackname  = hpux_stdint_least;\n+    mach      = \"*-hp-hpux11.2*\";\n+    files     = stdint.h;\n+    select    = \"^[ \\t]*#[ \\t]*define[ \\t]*UINT_LEAST64_MAX[ \\t]*ULLONG_MAX\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifdef __LP64__\\n#  define\tUINT_LEAST64_MAX\tULONG_MAX\\n#else\\n%0\\n#endif\\n\";\n+    test_text =\"#  define       UINT_LEAST64_MAX        ULLONG_MAX\\n\";\n+};\n+\n+fix = {\n+    hackname  = hpux_stdint_fast;\n+    mach      = \"*-hp-hpux11.2*\";\n+    files     = stdint.h;\n+    select    = \"^[ \\t]*#[ \\t]*define[ \\t]*UINT_FAST64_MAX[ \\t]*ULLONG_MAX\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifdef __LP64__\\n#  define\tUINT_FAST64_MAX\t\tULONG_MAX\\n#else\\n%0\\n#endif\\n\";\n+    test_text =\"#  define       UINT_FAST64_MAX        ULLONG_MAX\\n\";\n+};\n+\n+fix = {\n+    hackname  = hpux_inttype_int_least8_t;\n+    mach      = \"*-hp-hpux11.*\";\n+    files     = sys/_inttypes.h;\n+    select    = \"^[ \\t]*typedef[ \\t]*char[ \\t]*int_least8_t.*\";\n+    c_fix     = format;\n+    c_fix_arg = \"typedef signed char int_least8_t;\";\n+    test_text =\"typedef char int_least8_t;\\n\";\n+};\n+\n+fix = {\n+    hackname  = hpux_inttype_int8_t;\n+    mach      = \"*-hp-hpux11.*\";\n+    files     = sys/_inttypes.h;\n+    select    = \"^[ \\t]*typedef[ \\t]*char[ \\t]*int8_t.*\";\n+    c_fix     = format;\n+    c_fix_arg = \"typedef signed char int8_t;\";\n+    test_text =\"typedef char int8_t;\\n\";\n+};\n+\n /*\n  *  Fix glibc definition of HUGE_VAL in terms of hex floating point constant\n  */"}, {"sha": "3f556856a41f914d94766d57fad3208133ac3e3b", "filename": "fixincludes/tests/base/inttypes.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2Ftests%2Fbase%2Finttypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2Ftests%2Fbase%2Finttypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Finttypes.h?ref=62e66577b28d76bd2f4e1feb01ca7bad25dde8e8", "patch": "@@ -9,7 +9,10 @@\n \n \n \n-#if defined( HPUX11_UINT32_C_CHECK )\n-#define CONCAT_U__(__c)\t__CONCAT__(__c,u)\n-#define UINT32_C(__c) __CONCAT__(__c,ul)\n-#endif  /* HPUX11_UINT32_C_CHECK */\n+#if defined( HPUX_C99_INTTYPES_CHECK )\n+#define UINT8_C(__c) (__c)\n+#define UINT16_C(__c) (__c)\n+#define INT32_C(__c) (__c)\n+#define UINT32_C(__c) __CONCAT__(__c,u)\n+\n+#endif  /* HPUX_C99_INTTYPES_CHECK */"}, {"sha": "653c5da69e8da672b7b60c9094009a11e31c09c8", "filename": "fixincludes/tests/base/stdint.h", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2Ftests%2Fbase%2Fstdint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2Ftests%2Fbase%2Fstdint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fstdint.h?ref=62e66577b28d76bd2f4e1feb01ca7bad25dde8e8", "patch": "@@ -16,6 +16,48 @@\n #endif  /* GLIBC_STDINT_CHECK */\n \n \n+#if defined( HPUX_C99_INTPTR_CHECK )\n+#define PTRDIFF_MAX __PTRDIFF_MAX__\n+#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)\n+#define INTPTR_MAX (2147483647l)\n+#define INTPTR_MIN (-INTPTR_MAX - 1)\n+#define UINTPTR_MAX (4294967295ul)\n+#define SIZE_MAX __SIZE_MAX__\n+\n+#endif  /* HPUX_C99_INTPTR_CHECK */\n+\n+\n+#if defined( HPUX_C99_INTTYPES2_CHECK )\n+#define INT8_C(__c) (__c)\n+#define UINT8_C(c) __UINT8_C(c)\n+#define INT16_C(__c) (__c)\n+#define UINT16_C(c) __UINT16_C(c)\n+\n+#endif  /* HPUX_C99_INTTYPES2_CHECK */\n+\n+\n+#if defined( HPUX_STDINT_LEAST_CHECK )\n+#ifdef __LP64__\n+#  define\tUINT_LEAST64_MAX\tULONG_MAX\n+#else\n+#  define       UINT_LEAST64_MAX        ULLONG_MAX\n+#endif\n+\n+\n+#endif  /* HPUX_STDINT_LEAST_CHECK */\n+\n+\n+#if defined( HPUX_STDINT_FAST_CHECK )\n+#ifdef __LP64__\n+#  define\tUINT_FAST64_MAX\t\tULONG_MAX\n+#else\n+#  define       UINT_FAST64_MAX        ULLONG_MAX\n+#endif\n+\n+\n+#endif  /* HPUX_STDINT_FAST_CHECK */\n+\n+\n #if defined( IRIX_STDINT_C99_CHECK )\n #if 0\n #error This header file is to be used only for c99 mode compilations"}, {"sha": "d104cc7d5175d7c6d8d800c8faf61f94708a8e66", "filename": "fixincludes/tests/base/stdlib.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2Ftests%2Fbase%2Fstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2Ftests%2Fbase%2Fstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fstdlib.h?ref=62e66577b28d76bd2f4e1feb01ca7bad25dde8e8", "patch": "@@ -20,6 +20,12 @@ extern long double strtold(const char *, char **);\n #endif  /* HPUX_LONG_DOUBLE_CHECK */\n \n \n+#if defined( HPUX_LONG_DOUBLE_2_CHECK )\n+#  if !defined(__ia64) || !defined(_PROTOTYPES) || defined(_LONG_DOUBLE_STRUCT)\n+\n+#endif  /* HPUX_LONG_DOUBLE_2_CHECK */\n+\n+\n #if defined( INT_ABORT_FREE_AND_EXIT_CHECK )\n extern void\tabort(int);\n extern void\tfree(void*);"}, {"sha": "6773ab834c9ee7f67bdbc6e613b3b9795e23cddb", "filename": "fixincludes/tests/base/sys/_inttypes.h", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2Ftests%2Fbase%2Fsys%2F_inttypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62e66577b28d76bd2f4e1feb01ca7bad25dde8e8/fixincludes%2Ftests%2Fbase%2Fsys%2F_inttypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2F_inttypes.h?ref=62e66577b28d76bd2f4e1feb01ca7bad25dde8e8", "patch": "@@ -0,0 +1,21 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/sys/_inttypes.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( HPUX_INTTYPE_INT_LEAST8_T_CHECK )\n+typedef signed char int_least8_t;\n+\n+#endif  /* HPUX_INTTYPE_INT_LEAST8_T_CHECK */\n+\n+\n+#if defined( HPUX_INTTYPE_INT8_T_CHECK )\n+typedef signed char int8_t;\n+\n+#endif  /* HPUX_INTTYPE_INT8_T_CHECK */"}]}