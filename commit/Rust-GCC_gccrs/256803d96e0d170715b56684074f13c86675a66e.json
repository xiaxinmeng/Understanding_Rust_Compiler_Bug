{"sha": "256803d96e0d170715b56684074f13c86675a66e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU2ODAzZDk2ZTBkMTcwNzE1YjU2Njg0MDc0ZjEzYzg2Njc1YTY2ZQ==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2003-02-06T22:34:55Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2003-02-06T22:34:55Z"}, "message": "re PR c++/8785 (ICE in tsubst, at cp/pt.c:6473)\n\n\tPR c++/8785\n\t* g++.dg/parse/fused-params1.C: New test.\n\n\tPR c++/8857\n\t* g++.dg/parse/tmpl-tmpl-operator1.C: New test.\n\n\tPR c++/8921\n\t* g++.dg/parse/non-dependent1.C: New test.\n\n\tPR c++/8928\n\t* g++.dg/parse/dupl-tmpl-args1.C: New test.\n\n\tPR c++/9228\n\t* g++.dg/parse/undefined7.C: New test.\n\t* g++.dg/parse/non-templ1.C: New test.\n\n\tPR c++/9229\n\t* g++.dg/parse/too-many-tmpl-args1.C: New test.\n\nFrom-SVN: r62499", "tree": {"sha": "5e6f137dbefc65aafce38588c95a64b7233d5ffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e6f137dbefc65aafce38588c95a64b7233d5ffb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/256803d96e0d170715b56684074f13c86675a66e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/256803d96e0d170715b56684074f13c86675a66e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/256803d96e0d170715b56684074f13c86675a66e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/256803d96e0d170715b56684074f13c86675a66e/comments", "author": null, "committer": null, "parents": [{"sha": "90330d3193def8b430118466ecb0cf3540d2a40d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90330d3193def8b430118466ecb0cf3540d2a40d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90330d3193def8b430118466ecb0cf3540d2a40d"}], "stats": {"total": 111, "additions": 111, "deletions": 0}, "files": [{"sha": "7d7364128e282f3cb61f21808f562e50491add2a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=256803d96e0d170715b56684074f13c86675a66e", "patch": "@@ -1,3 +1,24 @@\n+2003-02-06  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/8785\n+\t* g++.dg/parse/fused-params1.C: New test.\n+\n+\tPR c++/8857\n+\t* g++.dg/parse/tmpl-tmpl-operator1.C: New test.\n+\n+\tPR c++/8921\n+\t* g++.dg/parse/non-dependent1.C: New test.\n+\n+\tPR c++/8928\n+\t* g++.dg/parse/dupl-tmpl-args1.C: New test.\n+\n+\tPR c++/9228\n+\t* g++.dg/parse/undefined7.C: New test.\n+\t* g++.dg/parse/non-templ1.C: New test.\n+\n+\tPR c++/9229\n+\t* g++.dg/parse/too-many-tmpl-args1.C: New test.\n+\n 2003-02-06  Eric Botcazou <ebotcazou@libertysurf.fr>\n \n \t* gcc.c-torture/compile/20030206-1.c: New test."}, {"sha": "a7beabc90824233b35118afcc6015a03ee4afc7e", "filename": "gcc/testsuite/g++.dg/parse/dupl-tmpl-args1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdupl-tmpl-args1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdupl-tmpl-args1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdupl-tmpl-args1.C?ref=256803d96e0d170715b56684074f13c86675a66e", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/8928\n+// Origin: <sebor@roguewave.com>\n+// { dg-do compile }\n+\n+namespace N\n+{\n+\n+template <typename T, typename U> struct A {};\n+typedef A<int, int> B;\n+\n+}\n+\n+N::B<int, int> a; // { dg-error \"\" }"}, {"sha": "2e9378d93e152a0cba2edba77f2ffbcae6c968f6", "filename": "gcc/testsuite/g++.dg/parse/fused-params1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffused-params1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffused-params1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffused-params1.C?ref=256803d96e0d170715b56684074f13c86675a66e", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/8785\n+// Origin: Alexander Zvyagin <Alexander.Zviagine@cern.ch>\n+// { dg-do compile }\n+\n+template <int N,typename T> struct A\n+{\n+    typedef T X;\n+    template <int M> void foo (const A<M,X>&); // { dg-error \"candidate\" }\n+};\n+\n+template <int N,int M,typename T>\n+void A<N,T>::foo (const A<M,X>&) {} // { dg-error \"\" }"}, {"sha": "d85ecb13ae49e2d1c537c1b5e773755816680426", "filename": "gcc/testsuite/g++.dg/parse/non-dependent1.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-dependent1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-dependent1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-dependent1.C?ref=256803d96e0d170715b56684074f13c86675a66e", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/8921\n+// Origin: Chin-Lung Chang <evirt@iis.sinica.edu.tw>\n+// { dg-do compile }\n+\n+struct A\n+{\n+    template <typename T> void foo();\n+};\n+\n+template <typename T> void bar(A& a)\n+{\n+    a.foo<T>();\n+}\n+\n+void baz()\n+{\n+    A a;\n+    bar<int>(a);\n+}"}, {"sha": "07bb3793a6daa6d7f11388a11916ecab44d382a9", "filename": "gcc/testsuite/g++.dg/parse/non-templ1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-templ1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-templ1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-templ1.C?ref=256803d96e0d170715b56684074f13c86675a66e", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/9228\n+// Origin: Wolfgang Bangerth <bangerth@ticam.utexas.edu>\n+// { dg-do compile }\n+\n+struct A\n+{\n+    struct B { B(int); };\n+};\n+ \n+template <typename T> typename A<T>::B foo() { return 1; } // { dg-error \"\" }"}, {"sha": "dcf2852d1e3dfa29d9d1e1d56eddd721561d668b", "filename": "gcc/testsuite/g++.dg/parse/tmpl-tmpl-operator1.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-tmpl-operator1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-tmpl-operator1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftmpl-tmpl-operator1.C?ref=256803d96e0d170715b56684074f13c86675a66e", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/8857\n+// Origin: Martin v. Loewis <loewis@informatik.hu-berlin.de>\n+// { dg-do compile }\n+\n+template <typename T> struct A\n+{\n+    template <typename U> operator U() { return sizeof(U); }\n+};\n+\n+template <typename T> struct B\n+{\n+    template <template <typename U> class X> operator X<double>() { return X<double>(); }\n+};\n+\n+int main()\n+{\n+  A<double> a;\n+  B<long> b;\n+  a = b;\n+}"}, {"sha": "30c29521e9f4e97c2016e15a6705792cae5c010c", "filename": "gcc/testsuite/g++.dg/parse/too-many-tmpl-args1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftoo-many-tmpl-args1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftoo-many-tmpl-args1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftoo-many-tmpl-args1.C?ref=256803d96e0d170715b56684074f13c86675a66e", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/9229\n+// Origin: Wolfgang Bangerth <bangerth@ticam.utexas.edu>\n+// { dg-do compile }\n+\n+template <typename T> class A\n+{                                                             // { dg-error \"\" }\n+    struct B;\n+    template <typename U> friend typename A<U,void>::B foo(); // { dg-error \"\" }\n+};\n+\n+template class A<int>;"}, {"sha": "1a525fc659ffe0947ae3358ef7d5e1bc51b25c47", "filename": "gcc/testsuite/g++.dg/parse/undefined7.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fundefined7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/256803d96e0d170715b56684074f13c86675a66e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fundefined7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fundefined7.C?ref=256803d96e0d170715b56684074f13c86675a66e", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/9228\n+// Origin: Wolfgang Bangerth <bangerth@ticam.utexas.edu>\n+// { dg-do compile }\n+\n+template <typename T> typename A<T>::B foo() {} // { dg-error \"\" }"}]}