{"sha": "0f032845fcb8614452a24b6b78cb8cd795d24c3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYwMzI4NDVmY2I4NjE0NDUyYTI0YjZiNzhjYjhjZDc5NWQyNGMzZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-11-13T07:59:22Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-11-13T07:59:22Z"}, "message": "i386.md (call_value): Fix comment.\n\n\t* config/i386/i386.md (call_value): Fix comment.\n\t(sibcall_value): Ditto.\n\nFrom-SVN: r154143", "tree": {"sha": "adbe6d0aac23736baa8cda3ed3e8335927f3fa4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adbe6d0aac23736baa8cda3ed3e8335927f3fa4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f032845fcb8614452a24b6b78cb8cd795d24c3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f032845fcb8614452a24b6b78cb8cd795d24c3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f032845fcb8614452a24b6b78cb8cd795d24c3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f032845fcb8614452a24b6b78cb8cd795d24c3e/comments", "author": null, "committer": null, "parents": [{"sha": "9feed21624af821b5e2e4fcda55182dd255d1adb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9feed21624af821b5e2e4fcda55182dd255d1adb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9feed21624af821b5e2e4fcda55182dd255d1adb"}], "stats": {"total": 46, "additions": 29, "deletions": 17}, "files": [{"sha": "586ae0dd5752d2e6489e521ecf03232562aa7a85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f032845fcb8614452a24b6b78cb8cd795d24c3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f032845fcb8614452a24b6b78cb8cd795d24c3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f032845fcb8614452a24b6b78cb8cd795d24c3e", "patch": "@@ -1,10 +1,15 @@\n+2009-11-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (call_value): Fix comment.\n+\t(sibcall_value): Ditto.\n+\n 2009-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/i386/linux-unwind.h (x86_frob_update_context): New function.\n \t(MD_FROB_UPDATE_CONTEXT): Define.\n \n 2009-11-12  Eric Botcazou  <ebotcazou@adacore.com>\n-            Laurent GUERBY  <laurent@guerby.net>\n+\t    Laurent GUERBY  <laurent@guerby.net>\n \n \t* config/sparc/linux-unwind.h (sparc64_fallback_frame_state): Tidy.\n \tDo not schedule an %sp restore.  Compensate for RETURN_ADDR_OFFSET.\n@@ -39,8 +44,8 @@\n \t* cgraph.h (varpool_node_name): Declare.\n \t* cgraphunit.c (process_function_and_variable_attributes): Set\n \tforce_output flag on used variables.\n-\t* ipa.c (function_and_variable_visibility): Dump externally visible and\n-\tneeded variables.\n+\t* ipa.c (function_and_variable_visibility): Dump externally visible\n+\tand needed variables.\n \t* varpool.c (varpool_node_name): Export.\n \t(decide_is_variable_needed): Check COMDAT for externally visible vars;\n \tignore needed flag.\n@@ -10124,7 +10129,7 @@\n \t* arm.c (aapcs_vfp_is_call_or_return_candidate): Change base_mode\n \tto pointer to enum machine_mode.  Update all callers as needed.\n \n-2009-08-21 Uros Bizjak <ubizjak@gmail.com>\n+2009-08-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/alpha/alpha.md (exception_receiver): Emit alternative\n \tGP load sequence if flag_reorder_blocks_and_partition is set."}, {"sha": "2a313665c159c8d84d43672bbec1015d5f719eae", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f032845fcb8614452a24b6b78cb8cd795d24c3e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f032845fcb8614452a24b6b78cb8cd795d24c3e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=0f032845fcb8614452a24b6b78cb8cd795d24c3e", "patch": "@@ -14572,15 +14572,17 @@\n \t\t\t    (match_operand:SI 3 \"\" \"\")))])]\n   \"!TARGET_64BIT\"\n {\n-  ix86_expand_call (NULL, operands[0], operands[1], operands[2], operands[3], 0);\n+  ix86_expand_call (NULL, operands[0], operands[1],\n+\t\t    operands[2], operands[3], 0);\n   DONE;\n })\n \n (define_insn \"*call_pop_0\"\n   [(call (mem:QI (match_operand:SI 0 \"constant_call_address_operand\" \"\"))\n \t (match_operand:SI 1 \"\" \"\"))\n-   (set (reg:SI SP_REG) (plus:SI (reg:SI SP_REG)\n-\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"\")))]\n+   (set (reg:SI SP_REG)\n+\t(plus:SI (reg:SI SP_REG)\n+\t\t (match_operand:SI 2 \"immediate_operand\" \"\")))]\n   \"!TARGET_64BIT\"\n {\n   if (SIBLING_CALL_P (insn))\n@@ -14593,8 +14595,9 @@\n (define_insn \"*call_pop_1_esp\"\n   [(call (mem:QI (match_operand:SI 0 \"call_insn_operand\" \"rsm\"))\n \t (match_operand:SI 1 \"\" \"\"))\n-   (set (reg:SI SP_REG) (plus:SI (reg:SI SP_REG)\n-\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n+   (set (reg:SI SP_REG)\n+\t(plus:SI (reg:SI SP_REG)\n+\t\t (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n   \"!TARGET_64BIT && TARGET_CALL_ESP && !SIBLING_CALL_P (insn)\"\n {\n   if (constant_call_address_operand (operands[0], Pmode))\n@@ -14606,8 +14609,9 @@\n (define_insn \"*call_pop_1\"\n   [(call (mem:QI (match_operand:SI 0 \"call_insn_operand\" \"lsm\"))\n \t (match_operand:SI 1 \"\" \"\"))\n-   (set (reg:SI SP_REG) (plus:SI (reg:SI SP_REG)\n-\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n+   (set (reg:SI SP_REG)\n+\t(plus:SI (reg:SI SP_REG)\n+\t\t (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n   \"!TARGET_64BIT && !TARGET_CALL_ESP && !SIBLING_CALL_P (insn)\"\n {\n   if (constant_call_address_operand (operands[0], Pmode))\n@@ -14619,8 +14623,9 @@\n (define_insn \"*sibcall_pop_1\"\n   [(call (mem:QI (match_operand:SI 0 \"sibcall_insn_operand\" \"s,U\"))\n \t (match_operand:SI 1 \"\" \"\"))\n-   (set (reg:SI SP_REG) (plus:SI (reg:SI SP_REG)\n-\t\t\t    (match_operand:SI 2 \"immediate_operand\" \"i,i\")))]\n+   (set (reg:SI SP_REG)\n+\t(plus:SI (reg:SI SP_REG)\n+\t\t (match_operand:SI 2 \"immediate_operand\" \"i,i\")))]\n   \"!TARGET_64BIT && SIBLING_CALL_P (insn)\"\n   \"@\n    jmp\\t%P0\n@@ -14762,10 +14767,11 @@\n \t(call (match_operand:QI 1 \"\" \"\")\n \t      (match_operand:SI 2 \"\" \"\")))\n    (use (match_operand:SI 3 \"\" \"\"))]\n-  ;; Operand 2 not used on the i386.\n+  ;; Operand 3 is not used on the i386.\n   \"\"\n {\n-  ix86_expand_call (operands[0], operands[1], operands[2], operands[3], NULL, 0);\n+  ix86_expand_call (operands[0], operands[1], operands[2],\n+\t\t    operands[3], NULL, 0);\n   DONE;\n })\n \n@@ -14774,10 +14780,11 @@\n \t(call (match_operand:QI 1 \"\" \"\")\n \t      (match_operand:SI 2 \"\" \"\")))\n    (use (match_operand:SI 3 \"\" \"\"))]\n-  ;; Operand 2 not used on the i386.\n+  ;; Operand 3 is not used on the i386.\n   \"\"\n {\n-  ix86_expand_call (operands[0], operands[1], operands[2], operands[3], NULL, 1);\n+  ix86_expand_call (operands[0], operands[1], operands[2],\n+\t\t    operands[3], NULL, 1);\n   DONE;\n })\n "}]}