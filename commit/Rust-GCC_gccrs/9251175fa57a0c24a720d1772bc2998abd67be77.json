{"sha": "9251175fa57a0c24a720d1772bc2998abd67be77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI1MTE3NWZhNTdhMGMyNGE3MjBkMTc3MmJjMjk5OGFiZDY3YmU3Nw==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2009-01-12T20:53:18Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2009-01-12T20:53:18Z"}, "message": "ppc-spe.c: Compile for all EABI targets.\n\n\t* gcc.target/powerpc/ppc-spe.c: Compile for all EABI targets.\n\tExplicitly enable SPE.\n\t* gcc.target/powerpc/20030505.c: Likewise.  Add dg-message\n\tdirective.\n\n\t* gcc.target/powerpc/20030218-1.c: Pass -mfloat-gprs=single.\n\tExpect -flax-vector-conversions message.  Adjust incompatible\n\ttypes errors.\n\t* gcc.target/powerpc/spe1.c: Pass -mspe and -mfloat-gprs=single.\n\tMake Foo extern.\n\n\t* gcc.dg/cpp/assert4.c: Recognize __PPC__.\n\n\t* g++.dg/other/opaque-1.C: Run on targets with SPE.\n\n\t* g++.dg/ext/spe-1.C: Pass -mspe and -mfloat-gprs=single.\n\t* g++.dg/other/opaque-2.C: Likewise.\n\t* g++.dg/other/opaque-3.C: Likewise.\n\nFrom-SVN: r143307", "tree": {"sha": "3ac997607e480661a09468cd7ef042f380c0fa54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ac997607e480661a09468cd7ef042f380c0fa54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9251175fa57a0c24a720d1772bc2998abd67be77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9251175fa57a0c24a720d1772bc2998abd67be77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9251175fa57a0c24a720d1772bc2998abd67be77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9251175fa57a0c24a720d1772bc2998abd67be77/comments", "author": null, "committer": null, "parents": [{"sha": "33faafca375f8c5c4113b4f0628c69add6971ee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33faafca375f8c5c4113b4f0628c69add6971ee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33faafca375f8c5c4113b4f0628c69add6971ee6"}], "stats": {"total": 52, "additions": 37, "deletions": 15}, "files": [{"sha": "5a54e1e92e8e4617807cbc2d77c03b05b1ad2266", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9251175fa57a0c24a720d1772bc2998abd67be77", "patch": "@@ -1,3 +1,24 @@\n+2009-01-12  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* gcc.target/powerpc/ppc-spe.c: Compile for all EABI targets.\n+\tExplicitly enable SPE.\n+\t* gcc.target/powerpc/20030505.c: Likewise.  Add dg-message\n+\tdirective.\n+\n+\t* gcc.target/powerpc/20030218-1.c: Pass -mfloat-gprs=single.\n+\tExpect -flax-vector-conversions message.  Adjust incompatible\n+\ttypes errors.\n+\t* gcc.target/powerpc/spe1.c: Pass -mspe and -mfloat-gprs=single.\n+\tMake Foo extern.\n+\n+\t* gcc.dg/cpp/assert4.c: Recognize __PPC__.\n+\n+\t* g++.dg/other/opaque-1.C: Run on targets with SPE.\n+\n+\t* g++.dg/ext/spe-1.C: Pass -mspe and -mfloat-gprs=single.\n+\t* g++.dg/other/opaque-2.C: Likewise.\n+\t* g++.dg/other/opaque-3.C: Likewise.\n+\n 2009-01-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/32041"}, {"sha": "fdd213964b4f0643816610a146c450cc27ba70c5", "filename": "gcc/testsuite/g++.dg/ext/spe1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fspe1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fspe1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fspe1.C?ref=9251175fa57a0c24a720d1772bc2998abd67be77", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target powerpc-*-eabi* } } */\n-/* { dg-options \"-mcpu=8540 -mabi=spe -O0\" } */\n+/* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single -O0\" } */\n \n typedef int v2si __attribute__ ((vector_size (8)));\n "}, {"sha": "fa79f6f2a1e4cc012a3ec1cc61400f86e58386b1", "filename": "gcc/testsuite/g++.dg/other/opaque-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-1.C?ref=9251175fa57a0c24a720d1772bc2998abd67be77", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target powerpc-*-eabispe* powerpc*-*-linux*spe* } } */\n+/* { dg-do run { target { powerpc*-*-* && powerpc_spe } } } */\n \n #define __vector __attribute__((vector_size(8)))\n typedef float __vector __ev64_fs__;"}, {"sha": "6b13ba2810db83aa0b29c7afdd17cbb454dba7e8", "filename": "gcc/testsuite/g++.dg/other/opaque-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-2.C?ref=9251175fa57a0c24a720d1772bc2998abd67be77", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target powerpc-*-eabi* powerpc*-*-linux*spe* } } */\n-/* { dg-options \"-mcpu=8540 -mabi=spe\" } */\n+/* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single\" } */\n \n #define __vector __attribute__((vector_size(8)))\n typedef float __vector __ev64_fs__;"}, {"sha": "cf8119ffcac87b6342ccc60a939bc8e982b25455", "filename": "gcc/testsuite/g++.dg/other/opaque-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fopaque-3.C?ref=9251175fa57a0c24a720d1772bc2998abd67be77", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target powerpc-*-eabi* powerpc*-*-linux*spe* } } */\n-/* { dg-options \"-mcpu=8540 -mabi=spe\" } */\n+/* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single\" } */\n \n __ev64_opaque__ o;\n #define v __attribute__((vector_size(8)))"}, {"sha": "0bd88ce0681d5b4827d0d676b6c90614bf893274", "filename": "gcc/testsuite/gcc.dg/cpp/assert4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fassert4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fassert4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fassert4.c?ref=9251175fa57a0c24a720d1772bc2998abd67be77", "patch": "@@ -313,7 +313,7 @@\n # error\n #endif\n \n-#if defined __powerpc__\n+#if defined __powerpc__ || defined __PPC__\n # if defined __powerpc64__\n #  if (#cpu(powerpc) || #machine(powerpc) \\\n        || !#cpu(powerpc64) || !#machine(powerpc64))"}, {"sha": "024f637f8ec062edcd0891a118e2f6516505608b", "filename": "gcc/testsuite/gcc.target/powerpc/20030218-1.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030218-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030218-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030218-1.c?ref=9251175fa57a0c24a720d1772bc2998abd67be77", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target powerpc-*-eabi* } } */\n-/* { dg-options \"-mspe=yes\" } */\n+/* { dg-options \"-mspe=yes -mfloat-gprs=single\" } */\n \n /* Test vectors that can interconvert without a cast.  */\n \n@@ -15,10 +15,11 @@ main (void)\n \n   opp = vfloat;\n   vshort = opp;\n-  vfloat = vshort; /* { dg-error \"incompatible types in assignment\" } */\n+  vfloat = vshort; /* { dg-error \"incompatible types when assigning\" } */\n \n   /* Just because this is a V2SI, it doesn't make it an opaque.  */\n-  vint = vshort; /* { dg-error \"incompatible types in assignment\" } */\n+  vint = vshort; /* { dg-message \"note: use -flax-vector-conversions to permit conversions between vectors with differing element types or numbers of subparts\" } */\n+  /* { dg-error \"incompatible types when assigning\" \"\" { target *-*-* } 21 } */\n \n   return 0;\n }"}, {"sha": "a8283934d71f7af720212baa5aa365253371f644", "filename": "gcc/testsuite/gcc.target/powerpc/20030505.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030505.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030505.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2F20030505.c?ref=9251175fa57a0c24a720d1772bc2998abd67be77", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target powerpc-*-eabispe* } } */\n-/* { dg-options \"-W\" } */\n+/* { dg-do compile { target powerpc-*-eabi* } } */\n+/* { dg-options \"-W -mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single\" } */\n \n #define __vector __attribute__((vector_size(8)))\n \n@@ -9,7 +9,7 @@ __ev64_opaque__ *p1;\n __ev64_fs__ *p2;\n int *x;\n \n-extern void f (__ev64_opaque__ *);\n+extern void f (__ev64_opaque__ *); /* { dg-message \"expected.*but argument is of type\" } */\n \n int main ()\n {"}, {"sha": "841073b22b78fe241437649e13d1582281380b7d", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-spe.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-spe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-spe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-spe.c?ref=9251175fa57a0c24a720d1772bc2998abd67be77", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target powerpc-*-eabispe } } */\n-/* { dg-options \"-mcpu=8540 -mabi=spe -O0\" } */\n+/* { dg-do compile { target powerpc-*-eabi* } } */\n+/* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single -O0\" } */\n \n /* (Test with -O0 so we don't optimize any of them away).  */\n "}, {"sha": "9803d8fdb7f1dbbf58f160c443c6be1f8aaff9bb", "filename": "gcc/testsuite/gcc.target/powerpc/spe1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9251175fa57a0c24a720d1772bc2998abd67be77/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe1.c?ref=9251175fa57a0c24a720d1772bc2998abd67be77", "patch": "@@ -1,12 +1,12 @@\n /* { dg-do compile { target powerpc-*-eabi* } } */\n-/* { dg-options \"-mcpu=8540 -mabi=spe -O0\" } */\n+/* { dg-options \"-mcpu=8540 -mspe -mabi=spe -mfloat-gprs=single -O0\" } */\n \n /* (Test with -O0 so we don't optimize any of them away).  */\n \n \n typedef float __attribute__((vector_size(8))) __ev64_fs__;\n \n-static __ev64_opaque__ Foo (void);\n+__ev64_opaque__ Foo (void);\n \n void Bar ()\n {"}]}