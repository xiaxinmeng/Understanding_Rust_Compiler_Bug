{"sha": "6b2963e742fefd1e901d1ea0ef97afa2fe5be3a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIyOTYzZTc0MmZlZmQxZTkwMWQxZWEwZWY5N2FmYTJmZTViZTNhMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-28T13:22:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-28T13:22:29Z"}, "message": "Update comments.\n\nFrom-SVN: r218149", "tree": {"sha": "bc3f3f83db2f14dad8c561e052b3c6d1e8f0c9a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc3f3f83db2f14dad8c561e052b3c6d1e8f0c9a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b2963e742fefd1e901d1ea0ef97afa2fe5be3a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2963e742fefd1e901d1ea0ef97afa2fe5be3a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b2963e742fefd1e901d1ea0ef97afa2fe5be3a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2963e742fefd1e901d1ea0ef97afa2fe5be3a1/comments", "author": null, "committer": null, "parents": [{"sha": "d200409415e66aec6017dda7daf010f3d7d80a96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d200409415e66aec6017dda7daf010f3d7d80a96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d200409415e66aec6017dda7daf010f3d7d80a96"}], "stats": {"total": 48, "additions": 21, "deletions": 27}, "files": [{"sha": "ea2216822b0d599856a5da6817d07e088bf12b08", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 21, "deletions": 27, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2963e742fefd1e901d1ea0ef97afa2fe5be3a1/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2963e742fefd1e901d1ea0ef97afa2fe5be3a1/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=6b2963e742fefd1e901d1ea0ef97afa2fe5be3a1", "patch": "@@ -680,10 +680,9 @@ package Opt is\n \n    Full_Path_Name_For_Brief_Errors : Boolean := False;\n    --  PROJECT MANAGER\n-   --  When True, in Brief_Output mode, each error message line\n-   --  will start with the full path name of the source.\n-   --  When False, only the file name without directory information\n-   --  is used.\n+   --  When True, in Brief_Output mode, each error message line will start with\n+   --  the full path name of the source. When False, only the file name without\n+   --  directory information is used.\n \n    Full_List : Boolean := False;\n    --  GNAT\n@@ -697,8 +696,8 @@ package Opt is\n \n    Generate_CodePeer_Messages : Boolean := False;\n    --  GNAT\n-   --  Generate CodePeer messages. Ignored if CodePeer_Mode is false.\n-   --  This is turned on by -gnateC.\n+   --  Generate CodePeer messages. Ignored if CodePeer_Mode is false. This is\n+   --  turned on by -gnateC.\n \n    Generate_Processed_File : Boolean := False;\n    --  GNAT\n@@ -717,8 +716,8 @@ package Opt is\n \n    Generate_SCO_Instance_Table : Boolean := False;\n    --  GNAT\n-   --  True when switch -fdump-scos is used. When True, a table of\n-   --  instances is included in SCOs.\n+   --  True when switch -fdump-scos is used. When True, a table of instances is\n+   --  included in SCOs.\n \n    Generating_Code : Boolean := False;\n    --  GNAT\n@@ -906,10 +905,9 @@ package Opt is\n \n    List_Dependencies : Boolean := False;\n    --  GNATMAKE\n-   --  When True gnatmake verifies that the objects are up to date and\n-   --  outputs the list of object dependencies (-M switch).\n-   --  Output depends if -a switch is used or not.\n-   --  This list can be used directly in a Makefile.\n+   --  When True gnatmake verifies that the objects are up to date and outputs\n+   --  the list of object dependencies (-M switch). Output depends if -a switch\n+   --  is used or not. This list can be used directly in a Makefile.\n \n    List_Representation_Info : Int range 0 .. 3 := 0;\n    --  GNAT\n@@ -1067,8 +1065,8 @@ package Opt is\n \n    No_Run_Time_Mode : Boolean := False;\n    --  GNAT, GNATBIND\n-   --  This flag is set True if a No_Run_Time pragma is encountered. See\n-   --  spec of Rtsfind for a full description of handling of this pragma.\n+   --  This flag is set True if a No_Run_Time pragma is encountered. See spec\n+   --  of Rtsfind for a full description of handling of this pragma.\n \n    No_Split_Units : Boolean := False;\n    --  GPRBUILD\n@@ -1214,9 +1212,8 @@ package Opt is\n \n    Preprocessing_Symbol_Defs : String_List_Access := new String_List (1 .. 4);\n    --  An extensible array to temporarily stores symbol definitions specified\n-   --  on the command line with -gnateD switches.\n-   --  What is this magic constant 4 ???\n-   --  What is extensible about this fixed length array ???\n+   --  on the command line with -gnateD switches. The value 4 is an arbitrary\n+   --  starting point, if more space is needed it is allocated as required.\n \n    Preprocessing_Symbol_Last : Natural := 0;\n    --  Index of last symbol definition in array Symbol_Definitions\n@@ -1261,13 +1258,13 @@ package Opt is\n \n    Relaxed_RM_Semantics : Boolean := False;\n    --  GNAT\n-   --  Set to True to ignore some Ada semantic error to help parse legacy\n-   --  Ada code for use in e.g. static analysis (such as CodePeer). This\n-   --  deals with cases where other compilers allow illegal constructs. Tools\n-   --  such as CodePeer are interested in analyzing code rather than enforcing\n-   --  legality rules, so as long as these illegal constructs end up with code\n-   --  that can be handled by the tool in question, there is no reason to\n-   --  reject the code that is considered correct by the other compiler.\n+   --  Set to True to ignore some Ada semantic error to help parse legacy Ada\n+   --  code for use in e.g. static analysis (such as CodePeer). This deals\n+   --  with cases where other compilers allow illegal constructs. Tools such as\n+   --  CodePeer are interested in analyzing code rather than enforcing legality\n+   --  rules, so as long as these illegal constructs end up with code that can\n+   --  be handled by the tool in question, there is no reason to reject the\n+   --  code that is considered correct by the other compiler.\n \n    Replace_In_Comments : Boolean := False;\n    --  GNATPREP\n@@ -2254,7 +2251,4 @@ private\n    --  Indicates which version of gcc is in use (3 = 3.x, 4 = 4.x). Note that\n    --  gcc 2.8.1 (which used to be a value of 2) is no longer supported.\n \n-   -------------------------\n-   -- Effect of GNAT_Mode --\n-   -------------------------\n end Opt;"}]}