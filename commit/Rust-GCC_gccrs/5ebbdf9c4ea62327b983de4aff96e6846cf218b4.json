{"sha": "5ebbdf9c4ea62327b983de4aff96e6846cf218b4", "node_id": "C_kwDOANBUbNoAKDVlYmJkZjljNGVhNjIzMjdiOTgzZGU0YWZmOTZlNjg0NmNmMjE4YjQ", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@gmail.com", "date": "2022-10-10T07:27:12Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gmail.com", "date": "2022-10-10T07:32:44Z"}, "message": "arc: Remove Rcw constraint\n\ngcc/Changelog:\n\n\t* config/arc/arc.md (smaxsi3): Remove Rcw.\n\t(sminsi3): Likewise.\n\t(addsi3_mixed): Likewise.\n\t(add_f_2): Likewise.\n\t(subsi3_insn): Likewise.\n\t(sub_f): Likewise.\n\t(sub_n): Likewise.\n\t(bset): Likewise.\n\t(bxor): Likewise.\n\t(bclr): Likewise.\n\t(bset_insn): Likewise.\n\t(bxor_insn): Likewise.\n\t(bclr_insn): Likewise.\n\t(bmsk_insn): Likewise.\n\t(bicsi3_insn): Likewise.\n\t(xorsi3): Likewise.\n\t(negsi2): Likewise.\n\t(lshrsi3_insn): Likewise.\n\t(abssf2): Likewise.\n\t(negsf2): Likewise.\n\t* config/arc/constraints.md(Rcw): Remove it.\n\nSigned-off-by: Claudiu Zissulescu <claziss@gmail.com>", "tree": {"sha": "9881290fa1b79342be5d2580861f12de737c6501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9881290fa1b79342be5d2580861f12de737c6501"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ebbdf9c4ea62327b983de4aff96e6846cf218b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ebbdf9c4ea62327b983de4aff96e6846cf218b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ebbdf9c4ea62327b983de4aff96e6846cf218b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ebbdf9c4ea62327b983de4aff96e6846cf218b4/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af681e948fb67978a7c97a7fc2bd0d226be6a53b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af681e948fb67978a7c97a7fc2bd0d226be6a53b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af681e948fb67978a7c97a7fc2bd0d226be6a53b"}], "stats": {"total": 234, "additions": 110, "deletions": 124}, "files": [{"sha": "e6fa2a1fbf65f5b07374f8237b9de5cb85344e6b", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 110, "deletions": 110, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ebbdf9c4ea62327b983de4aff96e6846cf218b4/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ebbdf9c4ea62327b983de4aff96e6846cf218b4/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=5ebbdf9c4ea62327b983de4aff96e6846cf218b4", "patch": "@@ -1991,22 +1991,22 @@ archs4x, archs4xd\"\n ;; Maximum and minimum insns\n \n (define_insn \"smaxsi3\"\n-   [(set (match_operand:SI 0 \"dest_reg_operand\"         \"=Rcw, w,  w\")\n-\t (smax:SI (match_operand:SI 1 \"register_operand\"  \"%0, c,  c\")\n-\t\t  (match_operand:SI 2 \"nonmemory_operand\" \"cL,cL,Cal\")))]\n+   [(set (match_operand:SI 0 \"dest_reg_operand\"           \"=r, r,  r\")\n+\t (smax:SI (match_operand:SI 1 \"register_operand\"  \"%0, r,  r\")\n+\t\t  (match_operand:SI 2 \"nonmemory_operand\" \"rL,rL,Cal\")))]\n   \"\"\n-  \"max%? %0,%1,%2\"\n+  \"max%?\\\\t%0,%1,%2\"\n   [(set_attr \"type\" \"two_cycle_core\")\n    (set_attr \"length\" \"4,4,8\")\n    (set_attr \"predicable\" \"yes,no,no\")]\n )\n \n (define_insn \"sminsi3\"\n-   [(set (match_operand:SI 0 \"dest_reg_operand\"         \"=Rcw, w,  w\")\n-\t (smin:SI (match_operand:SI 1 \"register_operand\"  \"%0, c,  c\")\n-\t\t  (match_operand:SI 2 \"nonmemory_operand\" \"cL,cL,Cal\")))]\n+   [(set (match_operand:SI 0 \"dest_reg_operand\"           \"=r, r,  r\")\n+\t (smin:SI (match_operand:SI 1 \"register_operand\"  \"%0, r,  r\")\n+\t\t  (match_operand:SI 2 \"nonmemory_operand\" \"rL,rL,Cal\")))]\n   \"\"\n-  \"min%? %0,%1,%2\"\n+  \"min%?\\\\t%0,%1,%2\"\n   [(set_attr \"type\" \"two_cycle_core\")\n    (set_attr \"length\" \"4,4,8\")\n    (set_attr \"predicable\" \"yes,no,no\")]\n@@ -2028,10 +2028,10 @@ archs4x, archs4xd\"\n ; We avoid letting this pattern use LP_COUNT as a register by specifying\n ;  register class 'W' instead of 'w'.\n (define_insn_and_split \"*addsi3_mixed\"\n-  ;;                                                      0       1    2    3   4   5   6     7    8   9   a    b     c   d e   f  10  11  12\n-  [(set (match_operand:SI 0 \"dest_reg_operand\"          \"=Rcq#q,Rcq,   h,!*Rsd,Rcq,Rcb,Rcq, Rcqq,Rcqq,Rcw,Rcw, Rcw,    W,  W,W,  W,Rcqq,Rcw,  W\")\n-\t(plus:SI (match_operand:SI 1 \"register_operand\" \"%0,      c,   0, Rcqq,  0,  0,Rcb, Rcqq,   0,  0,  c,   0,    c,  c,0,  0,   0,  0,  c\")\n-\t\t (match_operand:SI 2 \"nonmemory_operand\" \"cL,     0, Cm1,    L,CL2,Csp,CM4,RcqqK,  cO, cL,  0,cCca,cLCmL,Cca,I,C2a, Cal,Cal,Cal\")))]\n+  ;;                                                      0       1    2     3   4   5   6     7    8  9 a    b     c   d e   f   10  11  12\n+  [(set (match_operand:SI 0 \"dest_reg_operand\"          \"=Rcq#q,Rcq,   h,!*Rsd,Rcq,Rcb,Rcq, Rcqq,Rcqq, r,r,   r,    W,  W,W,  W,Rcqq,  r,  W\")\n+\t(plus:SI (match_operand:SI 1 \"register_operand\" \"%0,      c,   0, Rcqq,  0,  0,Rcb, Rcqq,   0, 0,r,   0,    c,  c,0,  0,   0,  0,  c\")\n+\t\t (match_operand:SI 2 \"nonmemory_operand\" \"cL,     0, Cm1,    L,CL2,Csp,CM4,RcqqK,  cO,rL,0,rCca,cLCmL,Cca,I,C2a, Cal,Cal,Cal\")))]\n   \"\"\n {\n   arc_output_addsi (operands, arc_ccfsm_cond_exec_p (), true);\n@@ -2792,13 +2792,13 @@ archs4x, archs4xd\"\n (define_insn \"*add_f_2\"\n   [(set (reg:CC_C CC_REG)\n \t(compare:CC_C\n-\t  (plus:SI (match_operand:SI 1 \"register_operand\" \"c,0,c\")\n-\t\t   (match_operand:SI 2 \"nonmemory_operand\" \"cL,I,cCal\"))\n+\t  (plus:SI (match_operand:SI 1 \"register_operand\"  \"r ,0,r\")\n+\t\t   (match_operand:SI 2 \"nonmemory_operand\" \"rL,I,rCal\"))\n \t  (match_dup 2)))\n-   (set (match_operand:SI 0 \"dest_reg_operand\" \"=w,Rcw,w\")\n+   (set (match_operand:SI 0 \"dest_reg_operand\" \"=r,r,r\")\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n   \"\"\n-  \"add.f %0,%1,%2\"\n+  \"add.f\\\\t%0,%1,%2\"\n   [(set_attr \"cond\" \"set\")\n    (set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"4,4,8\")])\n@@ -2895,22 +2895,22 @@ archs4x, archs4xd\"\n ; the casesi expander might generate a sub of zero, so we have to recognize it.\n ; combine should make such an insn go away.\n (define_insn_and_split \"subsi3_insn\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\"           \"=Rcqq,Rcqq,Rcw,Rcw,w,w,w,  w,  w,  w\")\n-\t(minus:SI (match_operand:SI 1 \"nonmemory_operand\"    \"0,Rcqq,  0, cL,c,L,I,Cal,Cal,  c\")\n-\t\t  (match_operand:SI 2 \"nonmemory_operand\" \"Rcqq,Rcqq,  c,  0,c,c,0,  0,  c,Cal\")))]\n+  [(set (match_operand:SI 0 \"dest_reg_operand\"           \"=Rcqq,Rcqq,r, r,r,r,r,  r,  r,  r\")\n+\t(minus:SI (match_operand:SI 1 \"nonmemory_operand\"    \"0,Rcqq,0,rL,r,L,I,Cal,Cal,  r\")\n+\t\t  (match_operand:SI 2 \"nonmemory_operand\" \"Rcqq,Rcqq,r, 0,r,r,0,  0,  r,Cal\")))]\n   \"register_operand (operands[1], SImode)\n    || register_operand (operands[2], SImode)\"\n   \"@\n-    sub%? %0,%1,%2%&\n-    sub%? %0,%1,%2%&\n-    sub%? %0,%1,%2\n-    rsub%? %0,%2,%1\n-    sub %0,%1,%2\n-    rsub %0,%2,%1\n-    rsub %0,%2,%1\n-    rsub%? %0,%2,%1\n-    rsub %0,%2,%1\n-    sub %0,%1,%2\"\n+    sub%?\\\\t%0,%1,%2%&\n+    sub%?\\\\t%0,%1,%2%&\n+    sub%?\\\\t%0,%1,%2\n+    rsub%?\\\\t%0,%2,%1\n+    sub\\\\t%0,%1,%2\n+    rsub\\\\t%0,%2,%1\n+    rsub\\\\t%0,%2,%1\n+    rsub%?\\\\t%0,%2,%1\n+    rsub\\\\t%0,%2,%1\n+    sub\\\\t%0,%1,%2\"\n   \"reload_completed && get_attr_length (insn) == 8\n    && satisfies_constraint_I (operands[1])\n    && GET_CODE (PATTERN (insn)) != COND_EXEC\"\n@@ -2990,19 +2990,19 @@ archs4x, archs4xd\"\n \n (define_insn \"sub_f\"\n   [(set (reg:CC CC_REG)\n-\t(compare:CC (match_operand:SI 1 \"nonmemory_operand\" \" c,L,0,I,c,Cal\")\n-\t\t    (match_operand:SI 2 \"nonmemory_operand\" \"cL,c,I,0,Cal,c\")))\n-   (set (match_operand:SI 0 \"dest_reg_operand\" \"=w,w,Rcw,Rcw,w,w\")\n+\t(compare:CC (match_operand:SI 1 \"nonmemory_operand\" \" r,L,0,I,r,Cal\")\n+\t\t    (match_operand:SI 2 \"nonmemory_operand\" \"rL,r,I,0,Cal,r\")))\n+   (set (match_operand:SI 0 \"dest_reg_operand\" \"=r,r,r,r,r,r\")\n \t(minus:SI (match_dup 1) (match_dup 2)))]\n   \"register_operand (operands[1], SImode)\n    || register_operand (operands[2], SImode)\"\n   \"@\n-\tsub.f %0,%1,%2\n-\trsub.f %0,%2,%1\n-\tsub.f %0,%1,%2\n-\trsub.f %0,%2,%1\n-\tsub.f %0,%1,%2\n-\tsub.f %0,%1,%2\"\n+\tsub.f\\\\t%0,%1,%2\n+\trsub.f\\\\t%0,%2,%1\n+\tsub.f\\\\t%0,%1,%2\n+\trsub.f\\\\t%0,%2,%1\n+\tsub.f\\\\t%0,%1,%2\n+\tsub.f\\\\t%0,%1,%2\"\n   [(set_attr \"type\" \"compare\")\n    (set_attr \"length\" \"4,4,4,4,8,8\")])\n \n@@ -3051,25 +3051,25 @@ archs4x, archs4xd\"\n ;; N.B. sub[123] has the operands of the MINUS in the opposite order from\n ;; what synth_mult likes.\n (define_insn \"*sub_n\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcw,w,w\")\n-\t(minus:SI (match_operand:SI 1 \"nonmemory_operand\" \"0,c,?Cal\")\n-\t\t  (ashift:SI (match_operand:SI 2 \"register_operand\" \"c,c,c\")\n+  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=r,r,r\")\n+\t(minus:SI (match_operand:SI 1 \"nonmemory_operand\" \"0,r,?Cal\")\n+\t\t  (ashift:SI (match_operand:SI 2 \"register_operand\" \"r,r,r\")\n \t\t\t     (match_operand:SI 3 \"_1_2_3_operand\" \"\"))))]\n   \"\"\n-  \"sub%c3%? %0,%1,%2\"\n+  \"sub%c3%?\\\\t%0,%1,%2\"\n   [(set_attr \"type\" \"shift\")\n    (set_attr \"length\" \"4,4,8\")\n    (set_attr \"predicable\" \"yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,nocond\")\n    (set_attr \"iscompact\" \"false\")])\n \n (define_insn \"*sub_n\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcw,w,w\")\n-\t(minus:SI (match_operand:SI 1 \"nonmemory_operand\" \"0,c,?Cal\")\n-\t\t  (mult:SI (match_operand:SI 2 \"register_operand\" \"c,c,c\")\n+  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=r,r,r\")\n+\t(minus:SI (match_operand:SI 1 \"nonmemory_operand\" \"0,r,?Cal\")\n+\t\t  (mult:SI (match_operand:SI 2 \"register_operand\" \"r,r,r\")\n \t\t\t   (match_operand:SI 3 \"_2_4_8_operand\" \"\"))))]\n   \"\"\n-  \"sub%z3%? %0,%1,%2\"\n+  \"sub%z3%?\\\\t%0,%1,%2\"\n   [(set_attr \"type\" \"shift\")\n    (set_attr \"length\" \"4,4,8\")\n    (set_attr \"predicable\" \"yes,no,no\")\n@@ -3078,38 +3078,38 @@ archs4x, archs4xd\"\n \n ; ??? check if combine matches this.\n (define_insn \"*bset\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcw,w,w\")\n+  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=r,r,r\")\n \t(ior:SI (ashift:SI (const_int 1)\n-\t\t\t   (match_operand:SI 1 \"nonmemory_operand\" \"cL,cL,c\"))\n-\t\t(match_operand:SI 2 \"nonmemory_operand\" \"0,c,Cal\")))]\n+\t\t\t   (match_operand:SI 1 \"nonmemory_operand\" \"rL,rL,r\"))\n+\t\t(match_operand:SI 2 \"nonmemory_operand\" \"0,r,Cal\")))]\n   \"\"\n-  \"bset%? %0,%2,%1\"\n+  \"bset%?\\\\t%0,%2,%1\"\n   [(set_attr \"length\" \"4,4,8\")\n    (set_attr \"predicable\" \"yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,nocond\")]\n )\n \n ; ??? check if combine matches this.\n (define_insn \"*bxor\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcw,w,w\")\n+  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=r,r,r\")\n \t(xor:SI (ashift:SI (const_int 1)\n-\t\t\t   (match_operand:SI 1 \"nonmemory_operand\" \"cL,cL,c\"))\n-\t\t(match_operand:SI 2 \"nonmemory_operand\" \"0,c,Cal\")))]\n+\t\t\t   (match_operand:SI 1 \"nonmemory_operand\" \"rL,rL,r\"))\n+\t\t(match_operand:SI 2 \"nonmemory_operand\" \"0,r,Cal\")))]\n   \"\"\n-  \"bxor%? %0,%2,%1\"\n+  \"bxor%?\\\\t%0,%2,%1\"\n   [(set_attr \"length\" \"4,4,8\")\n    (set_attr \"predicable\" \"yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,nocond\")]\n )\n \n ; ??? check if combine matches this.\n (define_insn \"*bclr\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcw,w,w\")\n+  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=r,r,r\")\n \t(and:SI (not:SI (ashift:SI (const_int 1)\n-\t\t\t\t   (match_operand:SI 1 \"nonmemory_operand\" \"cL,cL,c\")))\n-\t\t(match_operand:SI 2 \"nonmemory_operand\" \"0,c,Cal\")))]\n+\t\t\t\t   (match_operand:SI 1 \"nonmemory_operand\" \"rL,rL,r\")))\n+\t\t(match_operand:SI 2 \"nonmemory_operand\" \"0,r,Cal\")))]\n   \"\"\n-  \"bclr%? %0,%2,%1\"\n+  \"bclr%?\\\\t%0,%2,%1\"\n   [(set_attr \"length\" \"4,4,8\")\n    (set_attr \"predicable\" \"yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,nocond\")]\n@@ -3121,65 +3121,65 @@ archs4x, archs4xd\"\n \n ; see also iorsi3 for use with constant bit number.\n (define_insn \"*bset_insn\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcw,w,w\")\n-\t(ior:SI (match_operand:SI 1 \"nonmemory_operand\" \"0,c,Cal\")\n+  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=r,r,r\")\n+\t(ior:SI (match_operand:SI 1 \"nonmemory_operand\" \"0,r,Cal\")\n \t\t(ashift:SI (const_int 1)\n-\t\t\t   (match_operand:SI 2 \"nonmemory_operand\" \"cL,cL,c\"))) ) ]\n+\t\t\t   (match_operand:SI 2 \"nonmemory_operand\" \"rL,rL,r\"))) ) ]\n   \"\"\n   \"@\n-     bset%? %0,%1,%2 ;;peep2, constr 1\n-     bset %0,%1,%2 ;;peep2, constr 2\n-     bset %0,%1,%2 ;;peep2, constr 3\"\n+     bset%?\\\\t%0,%1,%2 ;;peep2, constr 1\n+     bset\\\\t%0,%1,%2 ;;peep2, constr 2\n+     bset\\\\t%0,%1,%2 ;;peep2, constr 3\"\n   [(set_attr \"length\" \"4,4,8\")\n    (set_attr \"predicable\" \"yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,nocond\")]\n )\n \n ; see also xorsi3 for use with constant bit number.\n (define_insn \"*bxor_insn\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcw,w,w\")\n-\t(xor:SI (match_operand:SI 1 \"nonmemory_operand\" \"0,c,Cal\")\n+  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=r,r,r\")\n+\t(xor:SI (match_operand:SI 1 \"nonmemory_operand\" \"0,r,Cal\")\n \t\t(ashift:SI (const_int 1)\n-\t\t\t(match_operand:SI 2 \"nonmemory_operand\" \"cL,cL,c\"))) ) ]\n+\t\t\t(match_operand:SI 2 \"nonmemory_operand\" \"rL,rL,r\"))) ) ]\n   \"\"\n   \"@\n-     bxor%? %0,%1,%2\n-     bxor %0,%1,%2\n-     bxor %0,%1,%2\"\n+     bxor%?\\\\t%0,%1,%2\n+     bxor\\\\t%0,%1,%2\n+     bxor\\\\t%0,%1,%2\"\n   [(set_attr \"length\" \"4,4,8\")\n    (set_attr \"predicable\" \"yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,nocond\")]\n )\n \n ; see also andsi3 for use with constant bit number.\n (define_insn \"*bclr_insn\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcw,w,w\")\n+  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=r,r,r\")\n \t(and:SI (not:SI (ashift:SI (const_int 1)\n-\t\t\t\t   (match_operand:SI 2 \"nonmemory_operand\" \"cL,rL,r\")))\n-\t\t(match_operand:SI 1 \"nonmemory_operand\" \"0,c,Cal\")))]\n+\t\t\t\t   (match_operand:SI 2 \"nonmemory_operand\" \"rL,rL,r\")))\n+\t\t(match_operand:SI 1 \"nonmemory_operand\" \"0,r,Cal\")))]\n   \"\"\n   \"@\n-     bclr%? %0,%1,%2\n-     bclr %0,%1,%2\n-     bclr %0,%1,%2\"\n+     bclr%?\\\\t%0,%1,%2\n+     bclr\\\\t%0,%1,%2\n+     bclr\\\\t%0,%1,%2\"\n   [(set_attr \"length\" \"4,4,8\")\n    (set_attr \"predicable\" \"yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,nocond\")]\n )\n \n ; see also andsi3 for use with constant bit number.\n (define_insn \"*bmsk_insn\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcw,w,w\")\n-\t(and:SI (match_operand:SI 1 \"nonmemory_operand\" \"0,c,Cal\")\n+  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=r,r,r\")\n+\t(and:SI (match_operand:SI 1 \"nonmemory_operand\" \"0,r,Cal\")\n \t\t(plus:SI (ashift:SI (const_int 1)\n \t\t\t\t    (plus:SI (match_operand:SI 2 \"nonmemory_operand\" \"rL,rL,r\")\n \t\t\t\t\t     (const_int 1)))\n \t\t\t (const_int -1))))]\n   \"\"\n   \"@\n-     bmsk%? %0,%1,%2\n-     bmsk %0,%1,%2\n-     bmsk %0,%1,%2\"\n+     bmsk%?\\\\t%0,%1,%2\n+     bmsk\\\\t%0,%1,%2\n+     bmsk\\\\t%0,%1,%2\"\n   [(set_attr \"length\" \"4,4,8\")\n    (set_attr \"predicable\" \"yes,no,no\")\n    (set_attr \"cond\" \"canuse,nocond,nocond\")]\n@@ -3282,18 +3282,18 @@ archs4x, archs4xd\"\n \n ;;bic define_insn that allows limm to be the first operand\n (define_insn \"*bicsi3_insn\"\n-   [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcqq,Rcw,Rcw,Rcw,w,w,w\")\n- \t(and:SI\t(not:SI (match_operand:SI 1 \"nonmemory_operand\" \"Rcqq,Lc,I,Cal,Lc,Cal,c\"))\n- \t\t(match_operand:SI 2 \"nonmemory_operand\" \"0,0,0,0,c,c,Cal\")))]\n+   [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcqq,r,r,r,r,r,r\")\n+ \t(and:SI\t(not:SI (match_operand:SI 1 \"nonmemory_operand\" \"Rcqq,Lr,I,Cal,Lr,Cal,r\"))\n+ \t\t(match_operand:SI 2 \"nonmemory_operand\" \"0,0,0,0,r,r,Cal\")))]\n   \"\"\n   \"@\n-   bic%? %0, %2, %1%& ;;constraint 0\n-   bic%? %0,%2,%1  ;;constraint 1\n-   bic %0,%2,%1    ;;constraint 2, FIXME: will it ever get generated ???\n-   bic%? %0,%2,%1  ;;constraint 3, FIXME: will it ever get generated ???\n-   bic %0,%2,%1    ;;constraint 4\n-   bic %0,%2,%1    ;;constraint 5, FIXME: will it ever get generated ???\n-   bic %0,%2,%1    ;;constraint 6\"\n+   bic%?\\\\t%0, %2, %1%& ;;constraint 0\n+   bic%?\\\\t%0,%2,%1  ;;constraint 1\n+   bic\\\\t%0,%2,%1    ;;constraint 2, FIXME: will it ever get generated ???\n+   bic%?\\\\t%0,%2,%1  ;;constraint 3, FIXME: will it ever get generated ???\n+   bic\\\\t%0,%2,%1    ;;constraint 4\n+   bic\\\\t%0,%2,%1    ;;constraint 5, FIXME: will it ever get generated ???\n+   bic\\\\t%0,%2,%1    ;;constraint 6\"\n   [(set_attr \"length\" \"*,4,4,8,4,8,8\")\n   (set_attr \"iscompact\" \"maybe, false, false, false, false, false, false\")\n   (set_attr \"predicable\" \"no,yes,no,yes,no,no,no\")\n@@ -3334,19 +3334,19 @@ archs4x, archs4xd\"\n    (set_attr \"cond\" \"canuse,canuse,canuse,canuse,canuse,canuse,canuse_limm,nocond,nocond,canuse_limm,nocond,canuse,nocond\")])\n \n (define_insn \"xorsi3\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\"          \"=Rcqq,Rcq,Rcw,Rcw,Rcw,Rcw, w,  w,w,  w,  w\")\n-\t(xor:SI (match_operand:SI 1 \"register_operand\"  \"%0,   Rcq,  0,  c,  0,  0, c,  c,0,  0,  c\")\n-\t\t(match_operand:SI 2 \"nonmemory_operand\" \" Rcqq,  0, cL,  0,C0p,  I,cL,C0p,I,Cal,Cal\")))]\n+  [(set (match_operand:SI 0 \"dest_reg_operand\"          \"=Rcqq,Rcq, r,r,  r,r, r,  r,r,  r,  r\")\n+\t(xor:SI (match_operand:SI 1 \"register_operand\"  \"%0,   Rcq, 0,r,  0,0, r,  r,0,  0,  r\")\n+\t\t(match_operand:SI 2 \"nonmemory_operand\" \" Rcqq,  0,rL,0,C0p,I,rL,C0p,I,Cal,Cal\")))]\n   \"\"\n   \"*\n   switch (which_alternative)\n     {\n     case 0: case 2: case 5: case 6: case 8: case 9: case 10:\n-      return \\\"xor%? %0,%1,%2%&\\\";\n+      return \\\"xor%?\\\\t%0,%1,%2%&\\\";\n     case 1: case 3:\n-      return \\\"xor%? %0,%2,%1%&\\\";\n+      return \\\"xor%?\\\\t%0,%2,%1%&\\\";\n     case 4: case 7:\n-      return \\\"bxor%? %0,%1,%z2\\\";\n+      return \\\"bxor%?\\\\t%0,%1,%z2\\\";\n     default:\n       gcc_unreachable ();\n     }\n@@ -3358,10 +3358,10 @@ archs4x, archs4xd\"\n    (set_attr \"cond\" \"canuse,canuse,canuse,canuse,canuse,canuse_limm,nocond,nocond,canuse_limm,canuse,nocond\")])\n \n (define_insn \"negsi2\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcqq,Rcqq,Rcw,w\")\n-\t(neg:SI (match_operand:SI 1 \"register_operand\" \"0,Rcqq,0,c\")))]\n+  [(set (match_operand:SI 0 \"dest_reg_operand\" \"=Rcqq,Rcqq,r,r\")\n+\t(neg:SI (match_operand:SI 1 \"register_operand\" \"0,Rcqq,0,r\")))]\n   \"\"\n-  \"neg%? %0,%1%&\"\n+  \"neg%?\\\\t%0,%1%&\"\n   [(set_attr \"type\" \"unary\")\n    (set_attr \"iscompact\" \"maybe,true,false,false\")\n    (set_attr \"predicable\" \"no,no,yes,no\")])\n@@ -3498,14 +3498,14 @@ archs4x, archs4xd\"\n    (set_attr \"cond\" \"canuse,nocond,canuse,canuse,nocond,nocond\")])\n \n (define_insn \"*lshrsi3_insn\"\n-  [(set (match_operand:SI 0 \"dest_reg_operand\"             \"=Rcq,Rcqq,Rcqq,Rcw, w,   w\")\n-\t(lshiftrt:SI (match_operand:SI 1 \"nonmemory_operand\" \"!0,Rcqq,   0,  0, c,cCal\")\n-\t\t     (match_operand:SI 2 \"nonmemory_operand\"  \"N,  N,RcqqM, cL,cL,cCal\")))]\n+  [(set (match_operand:SI 0 \"dest_reg_operand\"             \"=Rcq,Rcqq,Rcqq, r, r,   r\")\n+\t(lshiftrt:SI (match_operand:SI 1 \"nonmemory_operand\" \"!0,Rcqq,   0, 0, r,rCal\")\n+\t\t     (match_operand:SI 2 \"nonmemory_operand\"  \"N,  N,RcqqM,rL,rL,rCal\")))]\n   \"TARGET_BARREL_SHIFTER\n    && (register_operand (operands[1], SImode)\n        || register_operand (operands[2], SImode))\"\n   \"*return (which_alternative <= 1 && !arc_ccfsm_cond_exec_p ()\n-\t    ?  \\\"lsr%? %0,%1%&\\\" : \\\"lsr%? %0,%1,%2%&\\\");\"\n+\t    ?  \\\"lsr%?\\\\t%0,%1%&\\\" : \\\"lsr%?\\\\t%0,%1,%2%&\\\");\"\n   [(set_attr \"type\" \"shift\")\n    (set_attr \"iscompact\" \"maybe,maybe,maybe,false,false,false\")\n    (set_attr \"predicable\" \"no,no,no,yes,no,no\")\n@@ -5153,20 +5153,20 @@ archs4x, archs4xd\"\n    (set_attr \"predicable\" \"yes\")])\n \n (define_insn \"abssf2\"\n-  [(set (match_operand:SF 0 \"dest_reg_operand\"    \"=Rcq#q,Rcw,w\")\n-\t(abs:SF (match_operand:SF 1 \"register_operand\" \"0,  0,c\")))]\n+  [(set (match_operand:SF 0 \"dest_reg_operand\"    \"=Rcq#q,r,r\")\n+\t(abs:SF (match_operand:SF 1 \"register_operand\" \"0,0,r\")))]\n   \"\"\n-  \"bclr%? %0,%1,31%&\"\n+  \"bclr%?\\\\t%0,%1,31%&\"\n   [(set_attr \"type\" \"unary\")\n    (set_attr \"iscompact\" \"maybe,false,false\")\n    (set_attr \"length\" \"2,4,4\")\n    (set_attr \"predicable\" \"no,yes,no\")])\n \n (define_insn \"negsf2\"\n-  [(set (match_operand:SF 0 \"dest_reg_operand\" \"=Rcw,w\")\n-\t(neg:SF (match_operand:SF 1 \"register_operand\" \"0,c\")))]\n+  [(set (match_operand:SF 0 \"dest_reg_operand\" \"=r,r\")\n+\t(neg:SF (match_operand:SF 1 \"register_operand\" \"0,r\")))]\n   \"\"\n-  \"bxor%? %0,%1,31\"\n+  \"bxor%?\\\\t%0,%1,31\"\n   [(set_attr \"type\" \"unary\")\n    (set_attr \"predicable\" \"yes,no\")])\n "}, {"sha": "69ec4d53cacf5399ebef4c27b02446116209b96b", "filename": "gcc/config/arc/constraints.md", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ebbdf9c4ea62327b983de4aff96e6846cf218b4/gcc%2Fconfig%2Farc%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ebbdf9c4ea62327b983de4aff96e6846cf218b4/gcc%2Fconfig%2Farc%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Fconstraints.md?ref=5ebbdf9c4ea62327b983de4aff96e6846cf218b4", "patch": "@@ -452,20 +452,6 @@\n \t\t    && !arc_ccfsm_cond_exec_p ()\n \t\t    && IN_RANGE (REGNO (op) ^ 4, 4, 11)\")))\n \n-; If we need a reload, we generally want to steer reload to use three-address\n-; alternatives in preference of two-address alternatives, unless the\n-; three-address alternative introduces a LIMM that is unnecessary for the\n-; two-address alternative.\n-(define_constraint \"Rcw\"\n-  \"@internal\n-   Cryptic w - for use in early alternatives with matching constraint\"\n-  (and (match_code \"reg\")\n-       (match_test\n-\t\"TARGET_Rcw\n-\t && REGNO (op) < FIRST_PSEUDO_REGISTER\n-\t && TEST_HARD_REG_BIT (reg_class_contents[GENERAL_REGS],\n-\t\t\t       REGNO (op))\")))\n-\n (define_constraint \"Rcb\"\n   \"@internal\n    Stack Pointer register @code{r28} - do not reload into its class\""}]}