{"sha": "6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY1YzJjNGI0OWRiNWU5ZWFmZmY3NmM3YmVhZTk2ZTU4NWFmYmZlNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-03T11:05:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-03T11:05:20Z"}, "message": "[multiple changes]\n\n2013-01-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* xref_lib.adb (Parse_Identifier_Info): Fix handling of arrays, which\n\thave information in the ALI file for both the index and the component\n\ttypes.\n\n2013-01-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* projects.texi: Fix error in documenting the project path\n\tcomputed for an aggregate project.\n\n2013-01-03  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_warn.adb (Warn_On_Overlapping_Actuals): Adding documentation\n\tplus restricting the functionality of this routine to cover the\n\tcases described in the Ada 2012 reference manual. The previous\n\textended support is now available under -gnatX.\n\t* s-tassta.adb (Finalize_Global_Tasks): Addition of a dummy\n\tvariable to call Timed_Sleep.  Required to avoid warning on\n\toverlapping out-mode actuals.\n\t* opt.ads (Extensions_Allowed): Update documentation.\n\n2013-01-03  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-arit64.ads: Use Multiply_With_Ovflo_Check as __gnat_mulv64.\n\t* arit64.c: Removed\n\t* gcc-interface/Makefile.in: Remove reference to arit64.c.\n\n2013-01-03  Thomas Quinot  <quinot@adacore.com>\n\n\t* checks.adb, checks.ads (Apply_Address_Clause_Check): The check must\n\tbe generated at the start of the freeze actions for the entity, not\n\tbefore (or after) the freeze node.\n\n2013-01-03  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_aggr.adb (Exp_Aggr.Convert_Aggregate_In_Obj_Decl):\n\tReorganize code to capture initialization statements in a block,\n\tso that freeze nodes are excluded from the captured block.\n\nFrom-SVN: r194848", "tree": {"sha": "74bfeef98783647d44456e2701c329b3314c4d99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74bfeef98783647d44456e2701c329b3314c4d99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/comments", "author": null, "committer": null, "parents": [{"sha": "02217452f075702efcab7aceff594d8c4952600e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02217452f075702efcab7aceff594d8c4952600e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02217452f075702efcab7aceff594d8c4952600e"}], "stats": {"total": 316, "additions": 191, "deletions": 125}, "files": [{"sha": "f55671e2ccae7e0f0b8087f1eb4b220c13190b5f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "patch": "@@ -1,3 +1,43 @@\n+2013-01-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* xref_lib.adb (Parse_Identifier_Info): Fix handling of arrays, which\n+\thave information in the ALI file for both the index and the component\n+\ttypes.\n+\n+2013-01-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* projects.texi: Fix error in documenting the project path\n+\tcomputed for an aggregate project.\n+\n+2013-01-03  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_warn.adb (Warn_On_Overlapping_Actuals): Adding documentation\n+\tplus restricting the functionality of this routine to cover the\n+\tcases described in the Ada 2012 reference manual. The previous\n+\textended support is now available under -gnatX.\n+\t* s-tassta.adb (Finalize_Global_Tasks): Addition of a dummy\n+\tvariable to call Timed_Sleep.  Required to avoid warning on\n+\toverlapping out-mode actuals.\n+\t* opt.ads (Extensions_Allowed): Update documentation.\n+\n+2013-01-03  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-arit64.ads: Use Multiply_With_Ovflo_Check as __gnat_mulv64.\n+\t* arit64.c: Removed\n+\t* gcc-interface/Makefile.in: Remove reference to arit64.c.\n+\n+2013-01-03  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* checks.adb, checks.ads (Apply_Address_Clause_Check): The check must\n+\tbe generated at the start of the freeze actions for the entity, not\n+\tbefore (or after) the freeze node.\n+\n+2013-01-03  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_aggr.adb (Exp_Aggr.Convert_Aggregate_In_Obj_Decl):\n+\tReorganize code to capture initialization statements in a block,\n+\tso that freeze nodes are excluded from the captured block.\n+\n 2013-01-03  Thomas Quinot  <quinot@adacore.com>\n \n \t* exp_ch11.adb: Minor reformatting."}, {"sha": "d906ded0d812da19d69c61e26baae217db3e4bea", "filename": "gcc/ada/arit64.c", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02217452f075702efcab7aceff594d8c4952600e/gcc%2Fada%2Farit64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02217452f075702efcab7aceff594d8c4952600e/gcc%2Fada%2Farit64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Farit64.c?ref=02217452f075702efcab7aceff594d8c4952600e", "patch": "@@ -1,57 +0,0 @@\n-/****************************************************************************\n- *                                                                          *\n- *                         GNAT COMPILER COMPONENTS                         *\n- *                                                                          *\n- *                             A R I T 6 4 . C                              *\n- *                                                                          *\n- *                          C Implementation File                           *\n- *                                                                          *\n- *         Copyright (C) 2009-2012, Free Software Foundation, Inc.          *\n- *                                                                          *\n- * GNAT is free software;  you can  redistribute it  and/or modify it under *\n- * terms of the  GNU General Public License as published  by the Free Soft- *\n- * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n- * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n- * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n- * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n- *                                                                          *\n- * As a special exception under Section 7 of GPL version 3, you are granted *\n- * additional permissions described in the GCC Runtime Library Exception,   *\n- * version 3.1, as published by the Free Software Foundation.               *\n- *                                                                          *\n- * You should have received a copy of the GNU General Public License and    *\n- * a copy of the GCC Runtime Library Exception along with this program;     *\n- * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n- * <http://www.gnu.org/licenses/>.                                          *\n- *                                                                          *\n- * GNAT was originally developed  by the GNAT team at  New York University. *\n- * Extensive contributions were provided by Ada Core Technologies Inc.      *\n- *                                                                          *\n- ****************************************************************************/\n-\n-extern void __gnat_rcheck_CE_Overflow_Check(char *file, int line)\n-  __attribute__ ((__noreturn__));\n-\n-long long int __gnat_mulv64 (long long int x, long long int y)\n-{\n-  unsigned neg = (x >= 0) ^ (y >= 0);\n-  long long unsigned xa = x >= 0 ? (long long unsigned) x\n-                                 : -(long long unsigned) x;\n-  long long unsigned ya = y >= 0 ? (long long unsigned) y\n-                                 : -(long long unsigned) y;\n-  unsigned xhi = (unsigned) (xa >> 32);\n-  unsigned yhi = (unsigned) (ya >> 32);\n-  unsigned xlo = (unsigned) xa;\n-  unsigned ylo = (unsigned) ya;\n-  long long unsigned mid\n-    = xhi ? (long long unsigned) xhi * (long long unsigned) ylo\n-\t : (long long unsigned) yhi * (long long unsigned) xlo;\n-  long long unsigned low = (long long unsigned) xlo * (long long unsigned) ylo;\n-\n-  if ((xhi && yhi) ||  mid + (low  >> 32) > 0x7fffffff + neg)\n-    __gnat_rcheck_CE_Overflow_Check (__FILE__, __LINE__);\n-\n-  low += ((long long unsigned) (unsigned) mid) << 32;\n-\n-  return (long long int) (neg ? -low : low);\n-}"}, {"sha": "337546aedd3a08e4d9e479a5dfbc0d266bd30ab6", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "patch": "@@ -575,6 +575,8 @@ package body Checks is\n    --------------------------------\n \n    procedure Apply_Address_Clause_Check (E : Entity_Id; N : Node_Id) is\n+      pragma Assert (Nkind (N) = N_Freeze_Entity);\n+\n       AC   : constant Node_Id    := Address_Clause (E);\n       Loc  : constant Source_Ptr := Sloc (AC);\n       Typ  : constant Entity_Id  := Etype (E);\n@@ -734,7 +736,11 @@ package body Checks is\n             Remove_Side_Effects (Expr);\n          end if;\n \n-         Insert_After_And_Analyze (N,\n+         if No (Actions (N)) then\n+            Set_Actions (N, New_List);\n+         end if;\n+\n+         Prepend_To (Actions (N),\n            Make_Raise_Program_Error (Loc,\n              Condition =>\n                Make_Op_Ne (Loc,\n@@ -745,11 +751,11 @@ package body Checks is\n                          (RTE (RE_Integer_Address), Expr),\n                      Right_Opnd =>\n                        Make_Attribute_Reference (Loc,\n-                         Prefix => New_Occurrence_Of (E, Loc),\n+                         Prefix         => New_Occurrence_Of (E, Loc),\n                          Attribute_Name => Name_Alignment)),\n                  Right_Opnd => Make_Integer_Literal (Loc, Uint_0)),\n-             Reason => PE_Misaligned_Address_Value),\n-           Suppress => All_Checks);\n+             Reason => PE_Misaligned_Address_Value));\n+         Analyze (First (Actions (N)), Suppress => All_Checks);\n          return;\n       end if;\n "}, {"sha": "fb7370628abf0e0392bd6ae65d52560ee7b433a3", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "patch": "@@ -131,8 +131,11 @@ package Checks is\n    --  are enabled, then this procedure generates a check that the specified\n    --  address has an alignment consistent with the alignment of the object,\n    --  raising PE if this is not the case. The resulting check (if one is\n-   --  generated) is inserted before node N. check is also made for the case of\n-   --  a clear overlay situation that the size of the overlaying object is not\n+   --  generated) is prepended to the Actions list of N_Freeze_Entity node N.\n+   --  Note that the check references E'Alignment, so it cannot be emitted\n+   --  before N (its freeze node), otherwise this would cause an illegal\n+   --  access before elaboration error in GIGI. For the case of a clear overlay\n+   --  situation, we also check that the size of the overlaying object is not\n    --  larger than the overlaid object.\n \n    procedure Apply_Arithmetic_Overflow_Check (N : Node_Id);"}, {"sha": "7476a84a4e29650b679f08eea0f685766911fccd", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 30, "deletions": 20, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "patch": "@@ -3012,8 +3012,6 @@ package body Exp_Aggr is\n       Loc  : constant Source_Ptr := Sloc (Aggr);\n       Typ  : constant Entity_Id  := Etype (Aggr);\n       Occ  : constant Node_Id    := New_Occurrence_Of (Obj, Loc);\n-      Blk  : Node_Id             := Empty;\n-      Ins  : Node_Id;\n \n       function Discriminants_Ok return Boolean;\n       --  If the object type is constrained, the discriminants in the\n@@ -3118,27 +3116,39 @@ package body Exp_Aggr is\n            (Aggr,\n             Sec_Stack =>\n               Is_Controlled (Typ) or else Has_Controlled_Component (Typ));\n-         Ins := N;\n+      end if;\n+\n+      declare\n+         Node_After   : constant Node_Id := Next (N);\n+         Init_Node    : Node_Id;\n+         Blk          : Node_Id;\n+         Init_Actions : constant List_Id := New_List;\n+      begin\n+         Insert_Actions_After (N, Late_Expansion (Aggr, Typ, Occ));\n \n-         --  Need to Set_Initialization_Statements??? (see below)\n+         --  Move inserted, analyzed actions to Init_Actions, but skip over\n+         --  freeze nodes as these need to remain in the proper scope.\n \n-      else\n-         --  Capture initialization statements within an identified block\n-         --  statement, as we might need to move them to the freeze actions\n-         --  of Obj later on if a representation clause (such as an address\n-         --  clause) makes it necessary to delay freezing.\n-\n-         Ins := Make_Null_Statement (Loc);\n-         Blk := Make_Block_Statement (Loc,\n-                  Declarations               => New_List,\n-                  Handled_Statement_Sequence =>\n-                    Make_Handled_Sequence_Of_Statements (Loc,\n-                      Statements => New_List (Ins)));\n-         Insert_Action_After (N, Blk);\n-         Set_Initialization_Statements (Obj, Blk);\n-      end if;\n+         Init_Node := N;\n \n-      Insert_Actions_After (Ins, Late_Expansion (Aggr, Typ, Occ));\n+         while Next (Init_Node) /= Node_After loop\n+            if Nkind (Next (Init_Node)) = N_Freeze_Entity then\n+               Next (Init_Node);\n+            else\n+               Append_To (Init_Actions, Remove_Next (Init_Node));\n+            end if;\n+         end loop;\n+\n+         if not Is_Empty_List (Init_Actions) then\n+            Blk := Make_Block_Statement (Loc,\n+                     Declarations => New_List,\n+                     Handled_Statement_Sequence =>\n+                       Make_Handled_Sequence_Of_Statements (Loc,\n+                         Statements => Init_Actions));\n+            Insert_Action_After (Init_Node, Blk);\n+            Set_Initialization_Statements (Obj, Blk);\n+         end if;\n+      end;\n       Set_No_Initialization (N);\n       Initialize_Discriminants (N, Typ);\n    end Convert_Aggr_In_Object_Decl;"}, {"sha": "bbb05a1761ad8135703085507c145365e9b7871a", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "patch": "@@ -2308,7 +2308,7 @@ endif\n # LIBGNAT_SRCS is the list of all C files (including headers) of the runtime\n # library.  LIBGNAT_OBJS is the list of object files for libgnat.\n # thread.c is special as put into GNATRTL_TASKING_OBJS by Makefile.rtl\n-LIBGNAT_OBJS = adadecode.o adaint.o argv.o arit64.o aux-io.o \t\t\\\n+LIBGNAT_OBJS = adadecode.o adaint.o argv.o aux-io.o \t\t\t\\\n   cal.o cio.o cstreams.o ctrl_c.o\t\t\t\t\t\\\n   env.o errno.o exit.o expect.o final.o \t\t\t\t\\\n   init.o initialize.o locales.o mkdir.o\t\t\t\t\t\\"}, {"sha": "44e7431820badf766eff2afb5d83de3faa0f00e0", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "patch": "@@ -563,7 +563,7 @@ package Opt is\n    Extensions_Allowed : Boolean := False;\n    --  GNAT\n    --  Set to True by switch -gnatX if GNAT specific language extensions\n-   --  are allowed. Currently there are no such defined extensions.\n+   --  are allowed.\n \n    type External_Casing_Type is (\n      As_Is,       -- External names cased as they appear in the Ada source"}, {"sha": "f3ecde9826f3af772cc9e5f18d4a5d1c9e2fac64", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "patch": "@@ -2514,11 +2514,17 @@ project files specified with @code{Project_Files}.\n \n Each aggregate project has its own (that is if agg1.gpr includes\n agg2.gpr, they can potentially both have a different project path).\n-This project path is defined as the concatenation, in that order, of\n-the current directory, followed by the command line -aP switches,\n-then the directories from the Project_Path attribute, then the\n-directories from the GPR_PROJECT_PATH and ADA_PROJECT_PATH env.\n-variables, and finally the predefined directories.\n+\n+This project path is defined as the concatenation, in that order, of:\n+\n+@itemize @bullet\n+@item the current directory;\n+@item followed by the command line -aP switches;\n+@item then the directories from the GPR_PROJECT_PATH and ADA_PROJECT_PATH environment\n+variables;\n+@item then the directories from the Project_Path attribute;\n+@item and finally the predefined directories.\n+@end itemize\n \n In the example above, agg2.gpr's project path is not influenced by\n the attribute agg1'Project_Path, nor is agg1 influenced by"}, {"sha": "4eb115305bad059968fc5e07a8a1b9ed094a87f9", "filename": "gcc/ada/s-arit64.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fs-arit64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fs-arit64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-arit64.ads?ref=6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,6 +33,9 @@\n --  signed integer values in cases where either overflow checking is\n --  required, or intermediate results are longer than 64 bits.\n \n+pragma Restrictions (No_Elaboration_Code);\n+--  Allow direct call from gigi generated code\n+\n with Interfaces;\n \n package System.Arith_64 is\n@@ -49,8 +52,10 @@ package System.Arith_64 is\n    --  bits, otherwise returns the 64-bit signed integer difference.\n \n    function Multiply_With_Ovflo_Check (X, Y : Int64) return Int64;\n+   pragma Export (C, Multiply_With_Ovflo_Check, \"__gnat_mulv64\");\n    --  Raises Constraint_Error if product of operands overflows 64\n    --  bits, otherwise returns the 64-bit signed integer product.\n+   --  GIGI may also call this routine directly.\n \n    procedure Scaled_Divide\n      (X, Y, Z : Int64;"}, {"sha": "75f4e2c4e44ffee5349758ed0f5f886e834d7ca2", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "patch": "@@ -806,8 +806,9 @@ package body System.Tasking.Stages is\n    procedure Finalize_Global_Tasks is\n       Self_ID : constant Task_Id := STPO.Self;\n \n-      Ignore  : Boolean;\n-      pragma Unreferenced (Ignore);\n+      Ignore_1 : Boolean;\n+      Ignore_2 : Boolean;\n+      pragma Unreferenced (Ignore_1, Ignore_2);\n \n       function State\n         (Int : System.Interrupt_Management.Interrupt_ID) return Character;\n@@ -877,7 +878,7 @@ package body System.Tasking.Stages is\n \n             Timed_Sleep\n               (Self_ID, 0.01, System.OS_Primitives.Relative,\n-               Self_ID.Common.State, Ignore, Ignore);\n+               Self_ID.Common.State, Ignore_1, Ignore_2);\n          end loop;\n       end if;\n \n@@ -886,7 +887,7 @@ package body System.Tasking.Stages is\n \n       Timed_Sleep\n         (Self_ID, 0.01, System.OS_Primitives.Relative,\n-         Self_ID.Common.State, Ignore, Ignore);\n+         Self_ID.Common.State, Ignore_1, Ignore_2);\n \n       Unlock (Self_ID);\n "}, {"sha": "a23d0d70b61a070018e708982bf238f429cc8c4c", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 76, "deletions": 25, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "patch": "@@ -3292,56 +3292,98 @@ package body Sem_Warn is\n       Act1, Act2   : Node_Id;\n       Form1, Form2 : Entity_Id;\n \n+      function Is_Covered_Formal (Formal : Node_Id) return Boolean;\n+      --  Return True if Formal is covered by the Ada 2012 rule. Under -gnatX\n+      --  the rule is extended to cover record and array types.\n+\n+      function Refer_Same_Object (Act1, Act2 : Node_Id) return Boolean;\n+      --  Two names are known to refer to the same object if the two names\n+      --  are known to denote the same object; or one of the names is a\n+      --  selected_component, indexed_component, or slice and its prefix is\n+      --  known to refer to the same object as the other name; or one of the\n+      --  two names statically denotes a renaming declaration whose renamed\n+      --  object_name is known to refer to the same object as the other name\n+      --  (RM 6.4.1(6.11/3))\n+\n+      -----------------------\n+      -- Refer_Same_Object --\n+      -----------------------\n+\n+      function Refer_Same_Object (Act1, Act2 : Node_Id) return Boolean is\n+      begin\n+         return Denotes_Same_Object (Act1, Act2)\n+           or else Denotes_Same_Prefix (Act1, Act2);\n+      end Refer_Same_Object;\n+\n+      -----------------------\n+      -- Is_Covered_Formal --\n+      -----------------------\n+\n+      function Is_Covered_Formal (Formal : Node_Id) return Boolean is\n+      begin\n+         --  Ada 2012 rule\n+\n+         if not Extensions_Allowed then\n+            return\n+              Ekind_In (Formal, E_Out_Parameter,\n+                                E_In_Out_Parameter)\n+                and then Is_Elementary_Type (Etype (Formal));\n+\n+         --  Under -gnatX the rule is extended to cover array and record types\n+\n+         else\n+            return\n+              Ekind_In (Formal, E_Out_Parameter,\n+                                E_In_Out_Parameter)\n+                and then (Is_Elementary_Type (Etype (Formal))\n+                            or else Is_Record_Type (Etype (Formal))\n+                            or else Is_Array_Type (Etype (Formal)));\n+         end if;\n+      end Is_Covered_Formal;\n+\n    begin\n-      if not Warn_On_Overlap then\n+      if Ada_Version < Ada_2012 and then not Warn_On_Overlap then\n          return;\n       end if;\n \n       --  Exclude calls rewritten as enumeration literals\n \n-      if Nkind (N) not in N_Subprogram_Call then\n+      if Nkind (N) not in N_Subprogram_Call\n+        and then Nkind (N) /= N_Entry_Call_Statement\n+      then\n          return;\n       end if;\n \n-      --  Exclude calls to library subprograms. Container operations specify\n-      --  safe behavior when source and target coincide.\n+      --  If a call C has two or more parameters of mode in out or out that are\n+      --  of an elementary type, then the call is legal only if for each name\n+      --  N that is passed as a parameter of mode in out or out to the call C,\n+      --  there is no other name among the other parameters of mode in out or\n+      --  out to C that is known to denote the same object (RM 6.4.1(6.15/3))\n \n-      if Is_Predefined_File_Name\n-           (Unit_File_Name (Get_Source_Unit (Sloc (Subp))))\n-      then\n-         return;\n-      end if;\n+      --  Under -gnatX the rule is extended to cover array and record types.\n \n       Form1 := First_Formal (Subp);\n       Act1  := First_Actual (N);\n       while Present (Form1) and then Present (Act1) loop\n-         if Ekind (Form1) /= E_In_Parameter then\n+\n+         if Is_Covered_Formal (Form1) then\n             Form2 := First_Formal (Subp);\n             Act2  := First_Actual (N);\n             while Present (Form2) and then Present (Act2) loop\n                if Form1 /= Form2\n-                 and then Ekind (Form2) /= E_Out_Parameter\n-                 and then\n-                   (Denotes_Same_Object (Act1, Act2)\n-                      or else\n-                    Denotes_Same_Prefix (Act1, Act2))\n+                 and then Is_Covered_Formal (Form2)\n+                 and then Refer_Same_Object (Act1, Act2)\n                then\n-                  --  Exclude generic types and guard against previous errors\n+                  --  Guard against previous errors\n \n                   if Error_Posted (N)\n                     or else No (Etype (Act1))\n                     or else No (Etype (Act2))\n                   then\n                      null;\n \n-                  elsif Is_Generic_Type (Etype (Act1))\n-                          or else\n-                        Is_Generic_Type (Etype (Act2))\n-                  then\n-                     null;\n-\n-                     --  If the actual is a function call in prefix notation,\n-                     --  there is no real overlap.\n+                  --  If the actual is a function call in prefix notation,\n+                  --  there is no real overlap.\n \n                   elsif Nkind (Act2) = N_Function_Call then\n                      null;\n@@ -3350,11 +3392,20 @@ package body Sem_Warn is\n                   --  intended.\n \n                   elsif\n-                    Is_By_Reference_Type (Underlying_Type (Etype (Form1)))\n+                    Present (Underlying_Type (Etype (Form1)))\n+                      and then\n+                        (Is_By_Reference_Type (Underlying_Type (Etype (Form1)))\n+                           or else\n+                             Convention (Underlying_Type (Etype (Form1)))\n+                               = Convention_Ada_Pass_By_Reference)\n                   then\n                      null;\n \n+                  --  Here we may need to issue message\n+\n                   else\n+                     Error_Msg_Warn := Ada_Version < Ada_2012;\n+\n                      declare\n                         Act  : Node_Id;\n                         Form : Entity_Id;"}, {"sha": "56a28efed00528fe492e9ee78455e2699d1d8ddc", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "patch": "@@ -925,10 +925,11 @@ package body Xref_Lib is\n          end;\n       end if;\n \n-      if Ali (Ptr) = '<'\n-        or else Ali (Ptr) = '('\n-        or else Ali (Ptr) = '{'\n-      then\n+      while Ptr <= Ali'Last\n+         and then (Ali (Ptr) = '<'\n+                   or else Ali (Ptr) = '('\n+                   or else Ali (Ptr) = '{')\n+      loop\n          --  Here we have a type derivation information. The format is\n          --  <3|12I45> which means that the current entity is derived from the\n          --  type defined in unit number 3, line 12 column 45. The pipe and\n@@ -1065,7 +1066,7 @@ package body Xref_Lib is\n             end loop;\n             Ptr := Ptr + 1;\n          end if;\n-      end if;\n+      end loop;\n \n       --  To find the body, we will have to parse the file too\n "}]}