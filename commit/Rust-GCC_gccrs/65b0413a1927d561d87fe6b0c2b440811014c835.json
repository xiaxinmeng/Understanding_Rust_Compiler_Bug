{"sha": "65b0413a1927d561d87fe6b0c2b440811014c835", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjViMDQxM2ExOTI3ZDU2MWQ4N2ZlNmIwYzJiNDQwODExMDE0YzgzNQ==", "commit": {"author": {"name": "Chris Fairles", "email": "chris.fairles@gmail.com", "date": "2008-06-17T21:33:15Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-06-17T21:33:15Z"}, "message": "stl_iterator_base_funcs.h (next, prev): Add in C++0x mode.\n\n2008-06-17  Chris Fairles  <chris.fairles@gmail.com>\n\n\t* include/bits/stl_iterator_base_funcs.h (next, prev): Add in\n\tC++0x mode.\n\t* testsuite/24_iterators/operations/next.cc: New.\n\t* testsuite/24_iterators/operations/prev.cc: Likewise.\n\nFrom-SVN: r136873", "tree": {"sha": "66a9c270c3dd3066c44c91de51874dd25fcbf2f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66a9c270c3dd3066c44c91de51874dd25fcbf2f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65b0413a1927d561d87fe6b0c2b440811014c835", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65b0413a1927d561d87fe6b0c2b440811014c835", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65b0413a1927d561d87fe6b0c2b440811014c835", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65b0413a1927d561d87fe6b0c2b440811014c835/comments", "author": {"login": "chrisfearless", "id": 812000, "node_id": "MDQ6VXNlcjgxMjAwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/812000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisfearless", "html_url": "https://github.com/chrisfearless", "followers_url": "https://api.github.com/users/chrisfearless/followers", "following_url": "https://api.github.com/users/chrisfearless/following{/other_user}", "gists_url": "https://api.github.com/users/chrisfearless/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisfearless/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisfearless/subscriptions", "organizations_url": "https://api.github.com/users/chrisfearless/orgs", "repos_url": "https://api.github.com/users/chrisfearless/repos", "events_url": "https://api.github.com/users/chrisfearless/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisfearless/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88fec49fbb65368451cde61064b45d3ce12a29b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88fec49fbb65368451cde61064b45d3ce12a29b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88fec49fbb65368451cde61064b45d3ce12a29b8"}], "stats": {"total": 139, "additions": 138, "deletions": 1}, "files": [{"sha": "5b2288613db9b428d25818fe5bc986d5e6378286", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b0413a1927d561d87fe6b0c2b440811014c835/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b0413a1927d561d87fe6b0c2b440811014c835/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=65b0413a1927d561d87fe6b0c2b440811014c835", "patch": "@@ -1,3 +1,10 @@\n+2008-06-17  Chris Fairles  <chris.fairles@gmail.com>\n+\n+\t* include/bits/stl_iterator_base_funcs.h (next, prev): Add in\n+\tC++0x mode.\n+\t* testsuite/24_iterators/operations/next.cc: New.\n+\t* testsuite/24_iterators/operations/prev.cc: Likewise.\n+\n 2008-06-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* src/string_conversions.cc (__to_xstring<>): New."}, {"sha": "2be3258c95a2641d4bbb0c905f5c48f6274f07e8", "filename": "libstdc++-v3/include/bits/stl_iterator_base_funcs.h", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b0413a1927d561d87fe6b0c2b440811014c835/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b0413a1927d561d87fe6b0c2b440811014c835/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h?ref=65b0413a1927d561d87fe6b0c2b440811014c835", "patch": "@@ -1,6 +1,6 @@\n // Functions used by iterators -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -177,6 +177,26 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       std::__advance(__i, __d, std::__iterator_category(__i));\n     }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+  template<typename _InputIterator>\n+    inline _InputIterator \n+    next(_InputIterator __x, typename\n+\t iterator_traits<_InputIterator>::difference_type __n = 1)\n+    {\n+      std::advance(__x, __n);\n+      return __x;\n+    }\n+\n+  template<typename _BidirectionalIterator>\n+    inline _BidirectionalIterator \n+    prev(_BidirectionalIterator __x, typename\n+\t iterator_traits<_BidirectionalIterator>::difference_type __n = 1) \n+    {\n+      std::advance(__x, -__n);\n+      return __x;\n+    }\n+#endif\n+\n _GLIBCXX_END_NAMESPACE\n \n #endif /* _STL_ITERATOR_BASE_FUNCS_H */"}, {"sha": "53bc23d3f80cc0c19d0f2c882c8e363ac5c65084", "filename": "libstdc++-v3/testsuite/24_iterators/operations/next.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b0413a1927d561d87fe6b0c2b440811014c835/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Foperations%2Fnext.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b0413a1927d561d87fe6b0c2b440811014c835/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Foperations%2Fnext.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Foperations%2Fnext.cc?ref=65b0413a1927d561d87fe6b0c2b440811014c835", "patch": "@@ -0,0 +1,55 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 24.3.4 Iterator operations [iterator.operations]\n+\n+#include <vector>\n+#include <list>\n+#include <iterator>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  std::vector<int> c(3);\n+  std::vector<int>::iterator i = c.begin(), j;\n+\n+  j = std::next(i, 3);\n+  VERIFY( i == c.begin() );\n+  VERIFY( j == c.end() );\n+}\n+\n+void test02()\n+{\n+  bool test __attribute__((unused)) = true;\n+  std::list<int> c(3);    \n+  std::list<int>::iterator i = c.begin(), j;\n+\n+  j = std::next(i, 3);\n+  VERIFY( i == c.begin() );\n+  VERIFY( j == c.end() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  test02();\n+  return 0;\n+}"}, {"sha": "3cc90cb4005d36861771cdbec1bc19f4372998c4", "filename": "libstdc++-v3/testsuite/24_iterators/operations/prev.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b0413a1927d561d87fe6b0c2b440811014c835/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Foperations%2Fprev.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b0413a1927d561d87fe6b0c2b440811014c835/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Foperations%2Fprev.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Foperations%2Fprev.cc?ref=65b0413a1927d561d87fe6b0c2b440811014c835", "patch": "@@ -0,0 +1,55 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 24.3.4 Iterator operations [iterator.operations]\n+\n+#include <vector>\n+#include <list>\n+#include <iterator>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  std::vector<int> c(3);    \n+  std::vector<int>::iterator i = c.end(), j;\n+\n+  j = std::prev(i, 3);\n+  VERIFY( i == c.end() );\n+  VERIFY( j == c.begin() );\n+}\n+\n+void test02()\n+{\n+  bool test __attribute__((unused)) = true;\n+  std::list<int> c(3);    \n+  std::list<int>::iterator i = c.end(), j;\n+\n+  j = std::prev(i, 3);\n+  VERIFY( i == c.end() );\n+  VERIFY( j == c.begin() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  test02();\n+  return 0;\n+}"}]}