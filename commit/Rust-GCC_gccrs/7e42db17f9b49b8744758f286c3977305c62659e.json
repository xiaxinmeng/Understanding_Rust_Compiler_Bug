{"sha": "7e42db17f9b49b8744758f286c3977305c62659e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U0MmRiMTdmOWI0OWI4NzQ0NzU4ZjI4NmMzOTc3MzA1YzYyNjU5ZQ==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2005-02-11T18:12:33Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2005-02-11T18:12:33Z"}, "message": "cselib.c (cselib_process_insn): Clear out regs where HARD_REGNO_CALL_PART_CLOBBERED is true at a call.\n\n2005-02-11  Dale Johannesen  <dalej@apple.com>\n\n\t* cselib.c (cselib_process_insn):  Clear out regs where\n\tHARD_REGNO_CALL_PART_CLOBBERED is true at a call.\n\t* reload.c (find_equiv_reg): Ditto.\n\nFrom-SVN: r94885", "tree": {"sha": "96c02b57150b96ee2f726f5981afec81d54cbad8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96c02b57150b96ee2f726f5981afec81d54cbad8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e42db17f9b49b8744758f286c3977305c62659e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e42db17f9b49b8744758f286c3977305c62659e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e42db17f9b49b8744758f286c3977305c62659e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e42db17f9b49b8744758f286c3977305c62659e/comments", "author": null, "committer": null, "parents": [{"sha": "712b39c5282886e1552a3e105ffa0da9a94f480a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/712b39c5282886e1552a3e105ffa0da9a94f480a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/712b39c5282886e1552a3e105ffa0da9a94f480a"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "33f2560a52b4182554b562d71d6de5442c6066c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e42db17f9b49b8744758f286c3977305c62659e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e42db17f9b49b8744758f286c3977305c62659e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e42db17f9b49b8744758f286c3977305c62659e", "patch": "@@ -1,3 +1,9 @@\n+2005-02-11  Dale Johannesen  <dalej@apple.com>\n+\n+\t* cselib.c (cselib_process_insn):  Clear out regs where\n+\tHARD_REGNO_CALL_PART_CLOBBERED is true at a call.\n+\t* reload.c (find_equiv_reg): Ditto.\n+\n 2005-02-11  Ian Lance Taylor  <ian@airs.com>\n \n \t* read-rtl.c (read_rtx_1): Give fatal error if we see a vector"}, {"sha": "f453489e12bf9c9b8de4276e82a83719c0eaf123", "filename": "gcc/cselib.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e42db17f9b49b8744758f286c3977305c62659e/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e42db17f9b49b8744758f286c3977305c62659e/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=7e42db17f9b49b8744758f286c3977305c62659e", "patch": "@@ -1380,7 +1380,10 @@ cselib_process_insn (rtx insn)\n   if (CALL_P (insn))\n     {\n       for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-\tif (call_used_regs[i])\n+\tif (call_used_regs[i]\n+\t    || (REG_VALUES (i) && REG_VALUES (i)->elt\n+\t\t&& HARD_REGNO_CALL_PART_CLOBBERED (i, \n+\t\t      GET_MODE (REG_VALUES (i)->elt->u.val_rtx))))\n \t  cselib_invalidate_regno (i, reg_raw_mode[i]);\n \n       if (! CONST_OR_PURE_CALL_P (insn))"}, {"sha": "3b3ca9f89f4a6c7a8a15d811d0fcc3203c497308", "filename": "gcc/reload.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e42db17f9b49b8744758f286c3977305c62659e/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e42db17f9b49b8744758f286c3977305c62659e/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=7e42db17f9b49b8744758f286c3977305c62659e", "patch": "@@ -6705,12 +6705,14 @@ find_equiv_reg (rtx goal, rtx insn, enum reg_class class, int other,\n \n \t  if (regno >= 0 && regno < FIRST_PSEUDO_REGISTER)\n \t    for (i = 0; i < nregs; ++i)\n-\t      if (call_used_regs[regno + i])\n+\t      if (call_used_regs[regno + i]\n+\t\t  || HARD_REGNO_CALL_PART_CLOBBERED (regno + i, mode))\n \t\treturn 0;\n \n \t  if (valueno >= 0 && valueno < FIRST_PSEUDO_REGISTER)\n \t    for (i = 0; i < valuenregs; ++i)\n-\t      if (call_used_regs[valueno + i])\n+\t      if (call_used_regs[valueno + i]\n+\t\t  || HARD_REGNO_CALL_PART_CLOBBERED (valueno + i, mode))\n \t\treturn 0;\n \t}\n "}]}