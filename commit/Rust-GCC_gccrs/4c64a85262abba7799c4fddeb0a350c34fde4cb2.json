{"sha": "4c64a85262abba7799c4fddeb0a350c34fde4cb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2NGE4NTI2MmFiYmE3Nzk5YzRmZGRlYjBhMzUwYzM0ZmRlNGNiMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-01T00:50:52Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-01T00:50:52Z"}, "message": "(expand_block_move): Don't pass argument of # bytes to increment\npointers by to movstrsi expanders.\n\nFrom-SVN: r9856", "tree": {"sha": "3c9bde0908b63e6271d3aef4215d75dcd2a86022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c9bde0908b63e6271d3aef4215d75dcd2a86022"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c64a85262abba7799c4fddeb0a350c34fde4cb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c64a85262abba7799c4fddeb0a350c34fde4cb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c64a85262abba7799c4fddeb0a350c34fde4cb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c64a85262abba7799c4fddeb0a350c34fde4cb2/comments", "author": null, "committer": null, "parents": [{"sha": "3c67b67326c4284c79edc1c7aa0579351d85f5f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c67b67326c4284c79edc1c7aa0579351d85f5f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c67b67326c4284c79edc1c7aa0579351d85f5f6"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "5ae1507d01c7158e7924d889782143be4b28fa13", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c64a85262abba7799c4fddeb0a350c34fde4cb2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c64a85262abba7799c4fddeb0a350c34fde4cb2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=4c64a85262abba7799c4fddeb0a350c34fde4cb2", "patch": "@@ -720,8 +720,7 @@ expand_block_move (operands)\n \t      emit_insn (gen_movstrsi_8reg (dest_reg,\n \t\t\t\t\t    src_reg,\n \t\t\t\t\t    GEN_INT ((move_bytes == 32) ? 0 : move_bytes),\n-\t\t\t\t\t    align_rtx,\n-\t\t\t\t\t    GEN_INT ((bytes > move_bytes) ? move_bytes : 0)));\n+\t\t\t\t\t    align_rtx));\n \t    }\n \t  else if (bytes > 16\t/* move up to 24 bytes at a time */\n \t\t   && !fixed_regs[7]\n@@ -735,8 +734,7 @@ expand_block_move (operands)\n \t      emit_insn (gen_movstrsi_6reg (dest_reg,\n \t\t\t\t\t    src_reg,\n \t\t\t\t\t    GEN_INT (move_bytes),\n-\t\t\t\t\t    align_rtx,\n-\t\t\t\t\t    GEN_INT ((bytes > move_bytes) ? move_bytes : 0)));\n+\t\t\t\t\t    align_rtx));\n \t    }\n \t  else if (bytes > 8\t/* move up to 16 bytes at a time */\n \t\t   && !fixed_regs[9]\n@@ -748,29 +746,22 @@ expand_block_move (operands)\n \t      emit_insn (gen_movstrsi_4reg (dest_reg,\n \t\t\t\t\t    src_reg,\n \t\t\t\t\t    GEN_INT (move_bytes),\n-\t\t\t\t\t    align_rtx,\n-\t\t\t\t\t    GEN_INT ((bytes > move_bytes) ? move_bytes : 0)));\n+\t\t\t\t\t    align_rtx));\n \t    }\n \t  else if (bytes > 4 && !TARGET_64BIT)\n \t    {\t\t\t/* move up to 8 bytes at a time */\n \t      move_bytes = (bytes > 8) ? 8 : bytes;\n \t      emit_insn (gen_movstrsi_2reg (dest_reg,\n \t\t\t\t\t    src_reg,\n \t\t\t\t\t    GEN_INT (move_bytes),\n-\t\t\t\t\t    align_rtx,\n-\t\t\t\t\t    GEN_INT ((bytes > move_bytes) ? move_bytes : 0)));\n+\t\t\t\t\t    align_rtx));\n \t    }\n \t  else if (bytes >= 4 && (align >= 4 || !STRICT_ALIGNMENT))\n \t    {\t\t\t/* move 4 bytes */\n \t      move_bytes = 4;\n \t      tmp_reg = gen_reg_rtx (SImode);\n \t      emit_move_insn (tmp_reg, gen_rtx (MEM, SImode, src_reg));\n \t      emit_move_insn (gen_rtx (MEM, SImode, dest_reg), tmp_reg);\n-\t      if (bytes > move_bytes)\n-\t\t{\n-\t\t  emit_insn (gen_addsi3 (src_reg, src_reg, GEN_INT (move_bytes)));\n-\t\t  emit_insn (gen_addsi3 (dest_reg, dest_reg, GEN_INT (move_bytes)));\n-\t\t}\n \t    }\n \t  else if (bytes == 2 && (align >= 2 || !STRICT_ALIGNMENT))\n \t    {\t\t\t/* move 2 bytes */\n@@ -792,10 +783,15 @@ expand_block_move (operands)\n \t      emit_insn (gen_movstrsi_1reg (dest_reg,\n \t\t\t\t\t    src_reg,\n \t\t\t\t\t    GEN_INT (move_bytes),\n-\t\t\t\t\t    align_rtx,\n-\t\t\t\t\t    GEN_INT ((bytes > move_bytes) ? move_bytes : 0)));\n+\t\t\t\t\t    align_rtx));\n \t    }\n \t}\n+\n+      if (bytes > move_bytes)\n+\t{\n+\t  emit_insn (gen_addsi3 (src_reg, src_reg, GEN_INT (move_bytes)));\n+\t  emit_insn (gen_addsi3 (dest_reg, dest_reg, GEN_INT (move_bytes)));\n+\t}\n     }\n \n   else\t\t\t/* string instructions not available */"}]}