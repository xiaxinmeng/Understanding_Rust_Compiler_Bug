{"sha": "344f09a756ebd50510cc1eb3db111fd61c527702", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ0ZjA5YTc1NmViZDUwNTEwY2MxZWIzZGIxMTFmZDYxYzUyNzcwMg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-08-04T07:53:08Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-08-04T09:59:08Z"}, "message": "[nvptx] Handle V2DI/V2SI mode in nvptx_gen_shuffle\n\nWith the pr96628-part1.f90 source and -ftree-slp-vectorize, we run into an\nICE due to the fact that V2DI mode is not handled in nvptx_gen_shuffle.\n\nFix this by adding handling of V2DI as well as V2SI mode in\nnvptx_gen_shuffle.\n\nBuild and reg-tested on x86_64 with nvptx accelerator.\n\ngcc/ChangeLog:\n\n\tPR target/96428\n\t* config/nvptx/nvptx.c (nvptx_gen_shuffle): Handle V2SI/V2DI.\n\nlibgomp/ChangeLog:\n\n\tPR target/96428\n\t* testsuite/libgomp.oacc-fortran/pr96628-part1.f90: New test.\n\t* testsuite/libgomp.oacc-fortran/pr96628-part2.f90: New test.", "tree": {"sha": "a58e2ebb455ec00a2ddf6f706d6493a7dd077eb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a58e2ebb455ec00a2ddf6f706d6493a7dd077eb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/344f09a756ebd50510cc1eb3db111fd61c527702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/344f09a756ebd50510cc1eb3db111fd61c527702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/344f09a756ebd50510cc1eb3db111fd61c527702", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/344f09a756ebd50510cc1eb3db111fd61c527702/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95f5a3258dd8a9584f2b10304f79441ef2d4c64c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95f5a3258dd8a9584f2b10304f79441ef2d4c64c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95f5a3258dd8a9584f2b10304f79441ef2d4c64c"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "cf53a921e5be6173d32a2bc806d31c2f176d6554", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344f09a756ebd50510cc1eb3db111fd61c527702/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344f09a756ebd50510cc1eb3db111fd61c527702/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=344f09a756ebd50510cc1eb3db111fd61c527702", "patch": "@@ -1796,6 +1796,44 @@ nvptx_gen_shuffle (rtx dst, rtx src, rtx idx, nvptx_shuffle_kind kind)\n \tend_sequence ();\n       }\n       break;\n+    case E_V2SImode:\n+      {\n+\trtx src0 = gen_rtx_SUBREG (SImode, src, 0);\n+\trtx src1 = gen_rtx_SUBREG (SImode, src, 4);\n+\trtx dst0 = gen_rtx_SUBREG (SImode, dst, 0);\n+\trtx dst1 = gen_rtx_SUBREG (SImode, dst, 4);\n+\trtx tmp0 = gen_reg_rtx (SImode);\n+\trtx tmp1 = gen_reg_rtx (SImode);\n+\tstart_sequence ();\n+\temit_insn (gen_movsi (tmp0, src0));\n+\temit_insn (gen_movsi (tmp1, src1));\n+\temit_insn (nvptx_gen_shuffle (tmp0, tmp0, idx, kind));\n+\temit_insn (nvptx_gen_shuffle (tmp1, tmp1, idx, kind));\n+\temit_insn (gen_movsi (dst0, tmp0));\n+\temit_insn (gen_movsi (dst1, tmp1));\n+\tres = get_insns ();\n+\tend_sequence ();\n+      }\n+      break;\n+    case E_V2DImode:\n+      {\n+\trtx src0 = gen_rtx_SUBREG (DImode, src, 0);\n+\trtx src1 = gen_rtx_SUBREG (DImode, src, 8);\n+\trtx dst0 = gen_rtx_SUBREG (DImode, dst, 0);\n+\trtx dst1 = gen_rtx_SUBREG (DImode, dst, 8);\n+\trtx tmp0 = gen_reg_rtx (DImode);\n+\trtx tmp1 = gen_reg_rtx (DImode);\n+\tstart_sequence ();\n+\temit_insn (gen_movdi (tmp0, src0));\n+\temit_insn (gen_movdi (tmp1, src1));\n+\temit_insn (nvptx_gen_shuffle (tmp0, tmp0, idx, kind));\n+\temit_insn (nvptx_gen_shuffle (tmp1, tmp1, idx, kind));\n+\temit_insn (gen_movdi (dst0, tmp0));\n+\temit_insn (gen_movdi (dst1, tmp1));\n+\tres = get_insns ();\n+\tend_sequence ();\n+      }\n+      break;\n     case E_BImode:\n       {\n \trtx tmp = gen_reg_rtx (SImode);"}, {"sha": "71219f9c46726b73dddace1e9ad17bbcda94e607", "filename": "libgomp/testsuite/libgomp.oacc-fortran/pr96628-part1.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344f09a756ebd50510cc1eb3db111fd61c527702/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr96628-part1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344f09a756ebd50510cc1eb3db111fd61c527702/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr96628-part1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr96628-part1.f90?ref=344f09a756ebd50510cc1eb3db111fd61c527702", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do run }\n+! { dg-additional-sources pr96628-part2.f90 }\n+! { dg-additional-options \"-ftree-slp-vectorize\" }\n+!\n+! This file is compiled first\n+module m2\n+  real*8 :: mysum\n+  !$acc declare device_resident(mysum)\n+contains\n+    SUBROUTINE one(t)\n+      !$acc routine\n+      REAL*8,  INTENT(IN)    :: t(:)\n+      mysum = sum(t)\n+    END SUBROUTINE one\n+    SUBROUTINE two(t)\n+      !$acc routine seq\n+      REAL*8, INTENT(INOUT) :: t(:)\n+      t = (100.0_8*t)/sum\n+    END SUBROUTINE two\n+end module m2"}, {"sha": "784dc27e19eec386a4f10e029eeeb6756de95274", "filename": "libgomp/testsuite/libgomp.oacc-fortran/pr96628-part2.f90", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/344f09a756ebd50510cc1eb3db111fd61c527702/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr96628-part2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/344f09a756ebd50510cc1eb3db111fd61c527702/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr96628-part2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr96628-part2.f90?ref=344f09a756ebd50510cc1eb3db111fd61c527702", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do compile  { target skip-all-targets } }\n+!\n+! Main file is pr96628-part1.f90\n+\n+MODULE m\n+  IMPLICIT NONE\n+  REAL*8, ALLOCATABLE :: t(:)\n+CONTAINS\n+  SUBROUTINE run()\n+    use m2\n+    IMPLICIT NONE\n+\n+    INTEGER :: i,j    ! loop indices\n+    !$acc data present(t)\n+    !$acc parallel\n+    !$acc loop gang\n+    DO j = 1,2\n+      !$acc loop vector\n+      DO i = 1,2\n+        CALL one(t(:))\n+        CALL two(t(:))\n+      END DO\n+   END DO\n+   !$acc end parallel\n+   !$acc end data\n+  END SUBROUTINE run\n+END MODULE m\n+\n+use m\n+implicit none\n+integer :: i\n+t = [(3.0_8*i, i = 1, 100)]\n+!$acc data copy(t)\n+call run\n+!$acc end data\n+if (any (abs(t - [((300.0_8*i)/15150.0_8, i = 1, 100)]) < 10.0_8*epsilon(t))) stop 1\n+end"}]}