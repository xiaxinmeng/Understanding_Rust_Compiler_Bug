{"sha": "7b909872f15f48482a23e41fe8093cb1f4425c74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I5MDk4NzJmMTVmNDg0ODJhMjNlNDFmZTgwOTNjYjFmNDQyNWM3NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-02-16T18:15:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-02-16T18:15:19Z"}, "message": "re PR tree-optimization/65077 (memcpy generates incorrect code with floating point numbers and -O1)\n\n2015-02-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/65077\n\t* tree-ssa-structalias.c (get_constraint_for_1): Handle\n\tIMAGPART_EXPR, REALPART_EXPR and BIT_FIELD_REF.\n\t(find_func_aliases): Allow float values to carry pointers again.\n\n\t* gcc.dg/torture/pr65077.c: New testcase.\n\nFrom-SVN: r220741", "tree": {"sha": "6cb559fe91c65ad408ec96560ca19c4fb3583cf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cb559fe91c65ad408ec96560ca19c4fb3583cf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b909872f15f48482a23e41fe8093cb1f4425c74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b909872f15f48482a23e41fe8093cb1f4425c74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b909872f15f48482a23e41fe8093cb1f4425c74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b909872f15f48482a23e41fe8093cb1f4425c74/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f880d38dc55082cf671731ab4424b3808bbaf30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f880d38dc55082cf671731ab4424b3808bbaf30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f880d38dc55082cf671731ab4424b3808bbaf30"}], "stats": {"total": 91, "additions": 86, "deletions": 5}, "files": [{"sha": "061e0341c5091c8e4e8b790a40c155bca2ff108a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b909872f15f48482a23e41fe8093cb1f4425c74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b909872f15f48482a23e41fe8093cb1f4425c74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b909872f15f48482a23e41fe8093cb1f4425c74", "patch": "@@ -1,3 +1,10 @@\n+2015-02-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65077\n+\t* tree-ssa-structalias.c (get_constraint_for_1): Handle\n+\tIMAGPART_EXPR, REALPART_EXPR and BIT_FIELD_REF.\n+\t(find_func_aliases): Allow float values to carry pointers again.\n+\n 2015-02-16  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* doc/install.texi (Specific): Reorder targets list to put"}, {"sha": "8af42fa44582893d241e42e4324a1c4ddcb42c61", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b909872f15f48482a23e41fe8093cb1f4425c74/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b909872f15f48482a23e41fe8093cb1f4425c74/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7b909872f15f48482a23e41fe8093cb1f4425c74", "patch": "@@ -1,3 +1,8 @@\n+2015-02-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65077\n+\t* gcc.dg/torture/pr65077.c: New testcase.\n+\n 2015-02-16  Alex Velenko  <Alex.Velenko@arm.com>\n \n \t* gcc.target/aarch64/atomic-op-consume.c (scan-assember-times):"}, {"sha": "f57356c60bbdc07c19703cc073f811dcf9f381a6", "filename": "gcc/testsuite/gcc.dg/torture/pr65077.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b909872f15f48482a23e41fe8093cb1f4425c74/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr65077.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b909872f15f48482a23e41fe8093cb1f4425c74/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr65077.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr65077.c?ref=7b909872f15f48482a23e41fe8093cb1f4425c74", "patch": "@@ -0,0 +1,70 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+extern void *memcpy(void *, const void *, __SIZE_TYPE__);\n+\n+typedef struct {\n+    void *v1;\n+    void *v2;\n+    void *v3;\n+    union {\n+\tvoid *f1;\n+\tvoid *f2;\n+    } u;\n+} S;\n+\n+\n+S *getS();\n+void verify_p(void *p);\n+double *getP(void *p);\n+\n+void memcpy_bug()\n+{\n+  S *s;\n+  double *p = getP(0);\n+\n+  if (p) {\n+      int intSptr[sizeof(S*)/sizeof(int)];\n+      unsigned i = 0;\n+      for (i = 0; i < sizeof(intSptr)/sizeof(*intSptr); ++i) {\n+\t  intSptr[i] = (int) p[i];\n+      }\n+      memcpy(&s, intSptr, sizeof(intSptr));\n+      (s)->u.f1 = p;\n+      verify_p((s)->u.f1);      \n+  } else {\n+      s = getS();\n+  }\n+  verify_p(s->u.f1);\n+}\n+\n+double P[4];\n+\n+double *getP(void *p) {\n+    union u {\n+\tvoid *p;\n+\tint i[2];\n+    } u;\n+    u.p = P;\n+    P[0] = u.i[0];\n+    P[1] = u.i[1];\n+    return P;\n+}\n+\n+S *getS()\n+{\n+  return 0;\n+}\n+\n+void verify_p(void *p)\n+{\n+  if (p != P)\n+    abort ();\n+}\n+\n+int main(int argc, char *argv[])\n+{\n+    memcpy_bug();\n+    return 0;\n+}\n+"}, {"sha": "fd0f5359dd78a702356d1b0696a708a3c9d0c3e4", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b909872f15f48482a23e41fe8093cb1f4425c74/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b909872f15f48482a23e41fe8093cb1f4425c74/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=7b909872f15f48482a23e41fe8093cb1f4425c74", "patch": "@@ -3492,6 +3492,9 @@ get_constraint_for_1 (tree t, vec<ce_s> *results, bool address_p,\n \t  case ARRAY_REF:\n \t  case ARRAY_RANGE_REF:\n \t  case COMPONENT_REF:\n+\t  case IMAGPART_EXPR:\n+\t  case REALPART_EXPR:\n+\t  case BIT_FIELD_REF:\n \t    get_constraint_for_component_ref (t, results, address_p, lhs_p);\n \t    return;\n \t  case VIEW_CONVERT_EXPR:\n@@ -4712,11 +4715,7 @@ find_func_aliases (struct function *fn, gimple origt)\n \n \t  get_constraint_for (lhsop, &lhsc);\n \n-\t  if (FLOAT_TYPE_P (TREE_TYPE (lhsop)))\n-\t    /* If the operation produces a floating point result then\n-\t       assume the value is not produced to transfer a pointer.  */\n-\t    ;\n-\t  else if (code == POINTER_PLUS_EXPR)\n+\t  if (code == POINTER_PLUS_EXPR)\n \t    get_constraint_for_ptr_offset (gimple_assign_rhs1 (t),\n \t\t\t\t\t   gimple_assign_rhs2 (t), &rhsc);\n \t  else if (code == BIT_AND_EXPR"}]}