{"sha": "eab828ba9339c3c3730daf0b02e9ab40b20211cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFiODI4YmE5MzM5YzNjMzczMGRhZjBiMDJlOWFiNDBiMjAyMTFjZA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-09-06T07:02:40Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-09-06T07:02:40Z"}, "message": "timevar.c (timevar_add): Delete.\n\n\t* timevar.c (timevar_add): Delete.\n\t(timevar_get): Also count time since the selected timer was\n\tlast updated.  Do not examine the timevar stack if the\n\tselected timer is standalone.\n\nFrom-SVN: r36184", "tree": {"sha": "0d040b9869b04e0a6f18aecb15ab1dc0279df379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d040b9869b04e0a6f18aecb15ab1dc0279df379"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eab828ba9339c3c3730daf0b02e9ab40b20211cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab828ba9339c3c3730daf0b02e9ab40b20211cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab828ba9339c3c3730daf0b02e9ab40b20211cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab828ba9339c3c3730daf0b02e9ab40b20211cd/comments", "author": null, "committer": null, "parents": [{"sha": "f1d6a533e68da59ef6390623e2ce5c42ed976afd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1d6a533e68da59ef6390623e2ce5c42ed976afd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1d6a533e68da59ef6390623e2ce5c42ed976afd"}], "stats": {"total": 41, "additions": 19, "deletions": 22}, "files": [{"sha": "ee72cc1ccfe98ca9b687228e32d088c991ce6fb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab828ba9339c3c3730daf0b02e9ab40b20211cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab828ba9339c3c3730daf0b02e9ab40b20211cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eab828ba9339c3c3730daf0b02e9ab40b20211cd", "patch": "@@ -1,3 +1,10 @@\n+2000-09-06  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* timevar.c (timevar_add): Delete.\n+\t(timevar_get): Also count time since the selected timer was\n+\tlast updated.  Do not examine the timevar stack if the\n+\tselected timer is standalone.\n+\n 2000-09-05  J. David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* gthr-dce.h (__gthread_objc_mutex_deallocate): Free mutex->backend."}, {"sha": "cce106abd71283ecb0e1b04146d555c6988ef011", "filename": "gcc/timevar.c", "status": "modified", "additions": 12, "deletions": 22, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eab828ba9339c3c3730daf0b02e9ab40b20211cd/gcc%2Ftimevar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eab828ba9339c3c3730daf0b02e9ab40b20211cd/gcc%2Ftimevar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.c?ref=eab828ba9339c3c3730daf0b02e9ab40b20211cd", "patch": "@@ -95,8 +95,6 @@ static struct timevar_time_def start_time;\n \n static void get_time\n   PARAMS ((struct timevar_time_def *));\n-static void timevar_add\n-  PARAMS ((struct timevar_time_def *, struct timevar_time_def *));\n static void timevar_accumulate\n   PARAMS ((struct timevar_time_def *, struct timevar_time_def *, \n \t   struct timevar_time_def *));\n@@ -197,18 +195,6 @@ get_time (now)\n #endif\t/* __BEOS__ */\n }  \n \n-/* Add ELAPSED to TIMER.  */\n-\n-static void\n-timevar_add (timer, elapsed)\n-     struct timevar_time_def *timer;\n-     struct timevar_time_def *elapsed;\n-{\n-  timer->user += elapsed->user;\n-  timer->sys += elapsed->sys;\n-  timer->wall += elapsed->wall;\n-}\n-\n /* Add the difference between STOP_TIME and START_TIME to TIMER.  */\n \n static void \n@@ -387,18 +373,22 @@ timevar_get (timevar, elapsed)\n      struct timevar_time_def *elapsed;\n {\n   struct timevar_def *tv = &timevars[timevar];\n+  struct timevar_time_def now;\n \n   *elapsed = tv->elapsed;\n-\n+  \n   /* Is TIMEVAR currently running as a standalone timer?  */\n   if (tv->standalone)\n-    /* Add the time elapsed since the it was started.  */\n-    timevar_add (elapsed, &tv->start_time);\n-\n-  /* Is TIMEVAR at the top of the timer stack?  */\n-  if (stack->timevar == tv)\n-    /* Add the elapsed time since it was pushed.  */\n-    timevar_add (elapsed, &start_time);\n+    {\n+      get_time (&now);\n+      timevar_accumulate (elapsed, &tv->start_time, &now);\n+    }\n+  /* Or is TIMEVAR at the top of the timer stack?  */\n+  else if (stack->timevar == tv)\n+    {\n+      get_time (&now);\n+      timevar_accumulate (elapsed, &start_time, &now);\n+    }\n }\n \n /* Summarize timing variables to FP.  The timing variable TV_TOTAL has"}]}