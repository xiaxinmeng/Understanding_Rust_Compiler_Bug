{"sha": "f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBhMmQxMWY4YWQ4NWJmZGVkYjc5YmM0N2JkMzRiZDA4ZTM4ZjgxZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-12-02T15:40:32Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-12-02T15:43:27Z"}, "message": "Upgrade ACATS testsuite to latest ACATS 2.6\n\nThis upgrades the ACATS tesuite present in ada/acats from 2.5 to latest 2.6,\nremoving 3 tests and adding 11 tests, some of them written very recently.\n\ngcc/testsuite/ChangeLog:\n\t* ada/acats/support/acats25.lst: Delete.\n\t* ada/acats/support/acats26.lst: New file.\n\t* ada/acats/support/fcndecl.ada: Minor tweak.\n\t* ada/acats/support/impdef.a: Add commentary.\n\t* ada/acats/support/impdefg.a (Negative_Zero return): Simplify.\n\t* ada/acats/support/macro.dfs (TASK_STORAGE_SIZE): Bump.\n\t* ada/acats/support/repbody.ada: Upgrade to ACATS 2.6.\n\t* ada/acats/support/tctouch.ada: Likewise.\n\t* ada/acats/tests/c3/c352001.a: New file.\n\t* ada/acats/tests/c4/c433001.a: Correct error messages.\n\t* ada/acats/tests/c4/c453001.a: New file.\n\t* ada/acats/tests/c4/c45622a.ada: Delete.\n\t* ada/acats/tests/c4/c45624a.ada: Likewise.\n\t* ada/acats/tests/c4/c45624b.ada: Likewise.\n\t* ada/acats/tests/c4/c460013.a: New file.\n\t* ada/acats/tests/c4/c460014.a: Likewise.\n\t* ada/acats/tests/c6/c620001.a: Likewise.\n\t* ada/acats/tests/c6/c620002.a: Likewise.\n\t* ada/acats/tests/c7/c761006.a: Redo Unchecked_Deallocation case.\n\t* ada/acats/tests/c9/c96004a.ada: Adjust for Ada 2005.\n\t* ada/acats/tests/c9/c96007a.ada: Likewise.\n\t* ada/acats/tests/cb/cb41004.a: Adjust for AI95-0044.\n\t* ada/acats/tests/cc/cc3016f.ada: Minor tweak.\n\t* ada/acats/tests/cd/cd30011.a: New file.\n\t* ada/acats/tests/cd/cd30012.a: Likewise.\n\t* ada/acats/tests/cd/cd90001.a: Fix comparison.\n\t* ada/acats/tests/cxa/cxa3004.a: New file.\n\t* ada/acats/tests/cxa/cxa5013.a: Likewise.\n\t* ada/acats/tests/cxa/cxac005.a: Adjust for return-by-reference.\n\t* ada/acats/tests/cxb/cxb30061.am: New file.\n\t* ada/acats/tests/cxf/cxf2001.a: Fix failure message.", "tree": {"sha": "916b846b74525176d97b5e16f29748cd31bc8a19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/916b846b74525176d97b5e16f29748cd31bc8a19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/comments", "author": null, "committer": null, "parents": [{"sha": "0fc6469d2491bb588d02c5416b5be0131aa4c3b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fc6469d2491bb588d02c5416b5be0131aa4c3b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fc6469d2491bb588d02c5416b5be0131aa4c3b0"}], "stats": {"total": 3959, "additions": 3475, "deletions": 484}, "files": [{"sha": "d99145eb5afc9402670da556c5ed160ee583464b", "filename": "gcc/testsuite/ada/acats/support/acats26.lst", "status": "renamed", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Facats26.lst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Facats26.lst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Facats26.lst?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -462,6 +462,7 @@ b460001.a\n b460002.a\n b460004.a\n b460005.a\n+b460006.a\n b46002a.ada\n b46003a.ada\n b46004a.ada\n@@ -846,6 +847,7 @@ b85015a.ada\n b8510010.a\n b8510011.a\n b8510012.am\n+b854001.a\n b86001a0.ada\n b86001a1.ada\n b87b23b.ada\n@@ -1517,6 +1519,7 @@ bd8004b.tst\n bd8004c.tst\n bdb0a01.a\n bdd2001.a\n+bdd2002.a\n bde0001.a\n bde0002.a\n bde0003.a\n@@ -1525,6 +1528,8 @@ bde0005.a\n bde0006.a\n bde0007.a\n bde0008.a\n+bde0009.a\n+bde0010.a\n be2101e.ada\n be2101j.ada\n be2114a.ada\n@@ -1876,6 +1881,10 @@ c37404a.ada\n c37404b.ada\n c37405a.ada\n c37411a.ada\n+c380001.a\n+c380002.a\n+c380003.a\n+c380004.a\n c38002a.ada\n c38002b.ada\n c38005a.ada\n@@ -2218,6 +2227,7 @@ c45532o.dep\n c45532p.dep\n c45534b.ada\n c45536a.dep\n+c456001.a\n c45611a.ada\n c45611b.dep\n c45611c.dep\n@@ -2227,9 +2237,6 @@ c45613c.dep\n c45614a.ada\n c45614b.dep\n c45614c.dep\n-c45622a.ada\n-c45624a.ada\n-c45624b.ada\n c45631a.ada\n c45631b.dep\n c45631c.dep\n@@ -2563,6 +2570,7 @@ c761006.a\n c761007.a\n c761010.a\n c761011.a\n+c761012.a\n c83007a.ada\n c83012d.ada\n c83022a.ada\n@@ -2639,6 +2647,7 @@ c85018b.ada\n c85019a.ada\n c854001.a\n c854002.a\n+c854003.a\n c86003a.ada\n c86004a.ada\n c86004b0.ada\n@@ -3275,6 +3284,7 @@ cc51003.a\n cc51004.a\n cc51006.a\n cc51007.a\n+cc51008.a\n cc51a01.a\n cc51b03.a\n cc51d01.a\n@@ -3293,6 +3303,7 @@ cc70b02.a\n cc70c01.a\n cc70c02.a\n cd10001.a\n+cd10002.a\n cd1009a.ada\n cd1009b.ada\n cd1009d.ada\n@@ -3466,6 +3477,9 @@ cdb0a01.a\n cdb0a02.a\n cdd1001.a\n cdd2001.a\n+cdd2a01.a\n+cdd2a02.a\n+cdd2a03.a\n cde0001.a\n ce2102a.ada\n ce2102b.ada\n@@ -4049,6 +4063,7 @@ fc70c00.a\n fcndecl.ada\n fd72a00.a\n fdb0a00.a\n+fdd2a00.a\n fxa5a00.a\n fxaca00.a\n fxacb00.a\n@@ -4200,6 +4215,15 @@ la5008f0.ada\n la5008f1.ada\n la5008g0.ada\n la5008g1.ada\n+lc300010.a\n+lc300011.a\n+lc300012.am\n+lc300020.a\n+lc300021.a\n+lc300022.am\n+lc300030.a\n+lc300031.a\n+lc300032.am\n lencheck.ada\n lxd70010.a\n lxd70011.a", "previous_filename": "gcc/testsuite/ada/acats/support/acats25.lst"}, {"sha": "eddc13743fd4dd69d0bf6ffd341f7251c6f7e0a0", "filename": "gcc/testsuite/ada/acats/support/fcndecl.ada", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Ffcndecl.ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Ffcndecl.ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Ffcndecl.ada?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -3,22 +3,22 @@\n --                             Grant of Unlimited Rights\n --\n --     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n---     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained\n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n --     unlimited rights in the software and documentation contained herein.\n---     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making\n---     this public release, the Government intends to confer upon all\n---     recipients unlimited rights  equal to those held by the Government.\n---     These rights include rights to use, duplicate, release or disclose the\n---     released technical data and computer software in whole or in part, in\n---     any manner and for any purpose whatsoever, and to have or permit others\n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n+--     this public release, the Government intends to confer upon all \n+--     recipients unlimited rights  equal to those held by the Government.  \n+--     These rights include rights to use, duplicate, release or disclose the \n+--     released technical data and computer software in whole or in part, in \n+--     any manner and for any purpose whatsoever, and to have or permit others \n --     to do so.\n --\n --                                    DISCLAIMER\n --\n --     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n---     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n --     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n---     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n --     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n --     PARTICULAR PURPOSE OF SAID MATERIAL.\n --*"}, {"sha": "ca02a7ae2fa19468fb0be95f45c6dc2ceda30b9a", "filename": "gcc/testsuite/ada/acats/support/impdef.a", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fimpdef.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fimpdef.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fimpdef.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -105,6 +105,9 @@ package ImpDef is\n    Minimum_Task_Switch : constant Duration := 0.001;\n    --                                         ^^^ --- MODIFY HERE AS NEEDED\n \n+   -- The above constant has been chosen for use with delay statements in the\n+   -- GCC testsuite so that they do not take too long, but may be too small.\n+\n    Long_Minimum_Task_Switch : constant Duration := 0.1;\n \n --=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====--\n@@ -119,6 +122,9 @@ package ImpDef is\n    Switch_To_New_Task : constant Duration := 0.001;\n    --                                        ^^^ -- MODIFY HERE AS NEEDED\n \n+   -- The above constant has been chosen for use with delay statements in the\n+   -- GCC testsuite so that they do not take too long, but may be too small.\n+\n    Long_Switch_To_New_Task : constant Duration := 0.1;\n \n --=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====--\n@@ -208,7 +214,7 @@ package ImpDef is\n  \n    -- CD30005_1_Foreign_Address : constant System.Address:=\n    --          System.Storage_Elements.To_Address ( 16#0000_0000# )\n-   --               --MODIFY HERE AS REQUIRED --- ^^^^^^^^^^^^^\n+   --                    MODIFY HERE AS REQUIRED --- ^^^^^^^^^^^^^\n \n --=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====--\n \n@@ -337,11 +343,14 @@ package ImpDef is\n    -- package Address_Value_IO is\n    --     new Ada.Text_IO.Integer_IO(System.Storage_Elements.Integer_Address);\n \n-    package Address_Value_IO is\n-         new Ada.Text_IO.Modular_IO(System.Storage_Elements.Integer_Address);\n+   package Address_Value_IO is\n+        new Ada.Text_IO.Modular_IO(System.Storage_Elements.Integer_Address);\n \n --=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====--\n \n+   -- The following constants have been defined for use with various delay\n+   -- statements in the GCC testsuite so that they do not take too long.\n+\n    One_Second : constant Duration := 0.001;\n    One_Long_Second : constant Duration := 0.1;\n "}, {"sha": "6afc7cd3ca7c9c44231e691d0db4dfcc90a97176", "filename": "gcc/testsuite/ada/acats/support/impdefg.a", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fimpdefg.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fimpdefg.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fimpdefg.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -60,24 +60,31 @@ end ImpDef.Annex_G;\n  \n package body ImpDef.Annex_G is\n \n+   -- NOTE: These are example bodies.  It is expected that implementors\n+   --       will write their own versions of these routines.\n \n --=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====--\n \n-   --  This function must return a negative zero value for implementations\n-   --  for which Float'Signed_Zeros is True.\n-   --  We generate the smallest normalized negative number, and divide by a\n-   --  few powers of two to obtain a number whose absolute value equals zero\n-   --  but whose sign is negative.\n+   -- This function must return a negative zero value for implementations\n+   -- for which Float'Signed_Zeros is True.\n+   --\n+   -- The default body simply returns a negated literal 0.0.  If the\n+   -- default body does not return the value corresponding to a negatively\n+   -- signed zero for the implementation under test, it must be replaced\n+   -- by one which does.  See RM A.5.3(13).\n \n    function Negative_Zero return Float is\n-      negz : float := -1.0 *\n-         float (float'Machine_Radix)\n-            ** ( Float'Machine_Emin - Float'Machine_Mantissa); \n    begin\n-      return negz / 8.0;\n+      return -0.0;      -- Note: If this value is not negative zero for the\n+                        --       implementation, use of this \"default\" value\n+                        --       could result in false failures in\n+                        --       implementations where Float'Signed_Zeros\n+                        --       is True.\n+\n+   -- ^^^^^^^^^^^^^^^^^^^^  MODIFY THIS BODY AS NEEDED  ^^^^^^^^^^^^^^^^^^^^\n+\n    end Negative_Zero;\n \n --=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====-=====--\n \n end ImpDef.Annex_G;\n-"}, {"sha": "c0acaf104b1484f2f7348ff17785a85d61660c27", "filename": "gcc/testsuite/ada/acats/support/macro.dfs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fmacro.dfs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fmacro.dfs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fmacro.dfs?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -244,7 +244,7 @@ MIN_INT                  ACATS4GNATMININT\n -- IDENTIFIER SUCH AS   NO_SUCH_TYPE_AVAILABLE.)                  \n -- USED IN:  C45231D  CD7101G  \n NAME  LONG_LONG_INTEGER                                 \n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t\n -- $OPTIONAL_DISC                                       \n -- A DISCRIMINANT USED AS THE DISCRIMINANT PART OF $RECORD_NAME.\n -- IF MACHINE CODE INSERTIONS ARE NOT SUPPORTED THEN SUBSTITUTE\n@@ -277,7 +277,7 @@ TASK_SIZE                 ACATS4GNATBIT\n -- THE NUMBER OF STORAGE UNITS REQUIRED FOR A TASK ACTIVATION.\n -- USED IN:  BD2C01D  BD2C02A  BD2C03A  C87B62D  CD1009K  CD1009T  \n --           CD1009U  CD1C03E  CD1C06A  CD2C11A  CC1225A  CD2C11D\n-TASK_STORAGE_SIZE 1024                                         \n+TASK_STORAGE_SIZE 32768                                         \n \t\t\t\t\t\t\t\n -- $VARIABLE_ADDRESS                              \n -- AN EXPRESSION YIELDING A LEGAL ADDRESS FOR A VARIABLE FOR THIS\n@@ -298,4 +298,3 @@ VARIABLE_ADDRESS1  VAR_ADDR1\n -- THE MACROS $VARIABLE_ADDRESS AND $VARIABLE_ADDRESS1.          \n -- USED IN:  SPPRT13SP                                    \n VARIABLE_ADDRESS2  VAR_ADDR2\n-"}, {"sha": "d7b9fe022cbaa8b99dce81fe08ac2aec349c5155", "filename": "gcc/testsuite/ada/acats/support/repbody.ada", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Frepbody.ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Frepbody.ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Frepbody.ada?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -57,7 +57,8 @@\n --      RLB  3/16/00  UPDATED ACATS VERSION STRING TO \"2.3\".\n --                    CHANGED VARIOUS STRINGS TO READ \"ACATS\".\n --      RLB  3/22/01  UPDATED ACATS VERSION STRING TO \"2.4\".\n---      RLB  3/29/01  UPDATED ACATS VERSION STRING TO \"2.5\".\n+--      RLB  3/29/02  UPDATED ACATS VERSION STRING TO \"2.5\".\n+--      RLB  3/06/07  UPDATED ACATS VERSION STRING TO \"2.6\".\n \n WITH TEXT_IO, CALENDAR;\n USE TEXT_IO, CALENDAR;\n@@ -80,7 +81,7 @@ PACKAGE BODY REPORT IS\n \n \n \n-     ACATS_VERSION : CONSTANT STRING := \"2.5\";\n+     ACATS_VERSION : CONSTANT STRING := \"2.6\";\n                                        -- VERSION OF ACATS BEING RUN (X.XX).\n \n      PROCEDURE PUT_MSG (MSG : STRING) IS"}, {"sha": "83f12543e0a08f4b8df623e2f7841ea251a71162", "filename": "gcc/testsuite/ada/acats/support/tctouch.ada", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Ftctouch.ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Ftctouch.ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Ftctouch.ada?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -93,11 +93,12 @@\n --     16 MAR 00   RLB     Changed foundation id to reflect test suite version.\n --     22 MAR 01   RLB     Changed foundation id to reflect test suite version.\n --     29 MAR 02   RLB     Changed foundation id to reflect test suite version.\n+--     06 MAR 07   RLB     Changed foundation id to reflect test suite version.\n --\n --!\n \n package TCTouch is\n-  Foundation_ID   : constant String := \"TCTouch ACATS 2.5\";\n+  Foundation_ID   : constant String := \"TCTouch ACATS 2.6\";\n   Max_Touch_Count : constant        := 80;\n \n   procedure Assert    ( SB_True  : Boolean; Message : String );"}, {"sha": "04b094f1ff3692d2305c82177c9fe6bc3852a6a5", "filename": "gcc/testsuite/ada/acats/tests/c3/c352001.a", "status": "added", "additions": 270, "deletions": 0, "changes": 270, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc3%2Fc352001.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc3%2Fc352001.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc3%2Fc352001.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -0,0 +1,270 @@\n+--\n+-- C352001.A\n+--\n+--                             Grant of Unlimited Rights\n+--\n+--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n+--     unlimited rights in the software and documentation contained herein.\n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n+--     this public release, the Government intends to confer upon all \n+--     recipients unlimited rights  equal to those held by the Government.  \n+--     These rights include rights to use, duplicate, release or disclose the \n+--     released technical data and computer software in whole or in part, in \n+--     any manner and for any purpose whatsoever, and to have or permit others \n+--     to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--*\n+--\n+-- OBJECTIVE:\n+--      Check that the predefined Character type comprises 256 positions.  \n+--      Check that the names of the non-graphic characters are usable with \n+--      the attributes (Wide_)Image and (Wide_)Value, and that these\n+--      attributes produce the correct result.\n+--                 \n+-- TEST DESCRIPTION:\n+--      Build two tables of nongraphic characters from positions of Row 00 \n+--      (0000-001F and 007F-009F) of the ISO 10646 Basic Multilingual Plane.\n+--      Fill the first table with compiler created strings. Fill the second \n+--      table with strings defined by the language.  Compare the two tables.  \n+--      Check 256 positions of the predefined character type.  Use attributes \n+--      (Wide_)Image and (Wide_)Value to check the values of the non-graphic \n+--      characters and the last 2 characters.\n+--\n+--\n+-- CHANGE HISTORY:\n+--      20 Jun 95   SAIC    Initial prerelease version.\n+--      27 Jan 96   SAIC    Revised for 2.1.  Hid values, added \"del\" case.\n+--\n+--!\n+\n+with Ada.Characters.Handling;\n+with Report;\n+procedure C352001 is\n+\n+   Lower_Bound  : Integer  :=  0;\n+   Middle_Bound : Integer  := 31;\n+   Upper_Bound  : Integer  := 159;\n+   Half_Bound   : Integer  := 127;\n+   Max_Bound    : Integer  := 255;\n+\n+   type Dyn_String is access String;\n+   type Value_Result is array (Character) of Dyn_String;\n+\n+   Table_Of_Character : Value_Result;\n+   TC_Table           : Value_Result;\n+\n+   function CVII(K : Natural) return Character is\n+   begin\n+     return Character'Val( Report.Ident_Int(K) );\n+   end CVII;\n+\n+   function \"=\" (L, R : String) return Boolean is\n+      UCL : String (L'First .. L'Last);\n+      UCR : String (R'First .. R'last);\n+   begin\n+      UCL := Ada.Characters.Handling.To_Upper (L);\n+      UCR := Ada.Characters.Handling.To_Upper (R);\n+      if UCL'Last /= UCR'Last then \n+         return False;\n+      else\n+         for I in UCL'First .. UCR'Last loop\n+            if UCL (I) /= UCR (I) then \n+               return False;\n+            end if;\n+         end loop;\n+         return True;\n+       end if;\n+   end \"=\";\n+\n+begin\n+\n+   Report.Test (\"C352001\", \"Check that, the predefined Character type \"     &\n+                \"comprises 256 positions.  Check that the names of the \"    &\n+                \"non-graphic characters are usable with the attributes \"    &\n+                \"(Wide_)Image and (Wide_)Value, and that these attributes \" &\n+                \"produce the correct result\");\n+\n+   -- Fill table with strings (positions of Row 00 (0000-001F) of the ISO \n+   -- 10646 Basic Multilingual Plane created by the compiler.\n+\n+   for I in CVII(Lower_Bound) .. CVII(Middle_Bound) loop\n+      Table_Of_Character (I) := new String'(Character'Image(I));\n+   end loop;\n+\n+   -- Fill table with strings (positions of Row 00 (007F-009F) of the ISO \n+   -- 10646 Basic Multilingual Plane created by the compiler.\n+\n+   for I in CVII(Half_Bound) .. CVII(Upper_Bound) loop\n+      Table_Of_Character (I) := new String'(Character'Image(I));\n+   end loop;\n+\n+   -- Fill table with strings (positions of Row 00 (0000-001F) of the ISO \n+   -- 10646 Basic Multilingual Plane defined by the language.\n+\n+   TC_Table (CVII(0))   := new String'(\"nul\");\n+   TC_Table (CVII(1))   := new String'(\"soh\");\n+   TC_Table (CVII(2))   := new String'(\"stx\");\n+   TC_Table (CVII(3))   := new String'(\"etx\");\n+   TC_Table (CVII(4))   := new String'(\"eot\");\n+   TC_Table (CVII(5))   := new String'(\"enq\");\n+   TC_Table (CVII(6))   := new String'(\"ack\");\n+   TC_Table (CVII(7))   := new String'(\"bel\"); \n+   TC_Table (CVII(8))   := new String'(\"bs\");\n+   TC_Table (CVII(9))   := new String'(\"ht\");\n+   TC_Table (CVII(10))  := new String'(\"lf\");\n+   TC_Table (CVII(11))  := new String'(\"vt\");\n+   TC_Table (CVII(12))  := new String'(\"ff\");\n+   TC_Table (CVII(13))  := new String'(\"cr\");\n+   TC_Table (CVII(14))  := new String'(\"so\");\n+   TC_Table (CVII(15))  := new String'(\"si\");\n+   TC_Table (CVII(16))  := new String'(\"dle\");\n+   TC_Table (CVII(17))  := new String'(\"dc1\");\n+   TC_Table (CVII(18))  := new String'(\"dc2\");\n+   TC_Table (CVII(19))  := new String'(\"dc3\");\n+   TC_Table (CVII(20))  := new String'(\"dc4\");\n+   TC_Table (CVII(21))  := new String'(\"nak\");\n+   TC_Table (CVII(22))  := new String'(\"syn\");\n+   TC_Table (CVII(23))  := new String'(\"etb\");\n+   TC_Table (CVII(24))  := new String'(\"can\");\n+   TC_Table (CVII(25))  := new String'(\"em\");\n+   TC_Table (CVII(26))  := new String'(\"sub\");\n+   TC_Table (CVII(27))  := new String'(\"esc\");\n+   TC_Table (CVII(28))  := new String'(\"fs\");\n+   TC_Table (CVII(29))  := new String'(\"gs\");\n+   TC_Table (CVII(30))  := new String'(\"rs\");\n+   TC_Table (CVII(31))  := new String'(\"us\");\n+   TC_Table (CVII(127)) := new String'(\"del\");\n+\n+   -- Fill table with strings (positions of Row 00 (007F-009F) of the ISO \n+   -- 10646 Basic Multilingual Plane defined by the language.\n+\n+   TC_Table (CVII(128)) := new String'(\"reserved_128\");\n+   TC_Table (CVII(129)) := new String'(\"reserved_129\");\n+   TC_Table (CVII(130)) := new String'(\"bph\");\n+   TC_Table (CVII(131)) := new String'(\"nbh\");\n+   TC_Table (CVII(132)) := new String'(\"reserved_132\");\n+   TC_Table (CVII(133)) := new String'(\"nel\");\n+   TC_Table (CVII(134)) := new String'(\"ssa\");\n+   TC_Table (CVII(135)) := new String'(\"esa\");\n+   TC_Table (CVII(136)) := new String'(\"hts\");\n+   TC_Table (CVII(137)) := new String'(\"htj\");\n+   TC_Table (CVII(138)) := new String'(\"vts\");\n+   TC_Table (CVII(139)) := new String'(\"pld\");\n+   TC_Table (CVII(140)) := new String'(\"plu\");\n+   TC_Table (CVII(141)) := new String'(\"ri\");\n+   TC_Table (CVII(142)) := new String'(\"ss2\");\n+   TC_Table (CVII(143)) := new String'(\"ss3\");\n+   TC_Table (CVII(144)) := new String'(\"dcs\");\n+   TC_Table (CVII(145)) := new String'(\"pu1\");\n+   TC_Table (CVII(146)) := new String'(\"pu2\");\n+   TC_Table (CVII(147)) := new String'(\"sts\");\n+   TC_Table (CVII(148)) := new String'(\"cch\");\n+   TC_Table (CVII(149)) := new String'(\"mw\");\n+   TC_Table (CVII(150)) := new String'(\"spa\");\n+   TC_Table (CVII(151)) := new String'(\"epa\");\n+   TC_Table (CVII(152)) := new String'(\"sos\");\n+   TC_Table (CVII(153)) := new String'(\"reserved_153\");\n+   TC_Table (CVII(154)) := new String'(\"sci\");\n+   TC_Table (CVII(155)) := new String'(\"csi\");\n+   TC_Table (CVII(156)) := new String'(\"st\");\n+   TC_Table (CVII(157)) := new String'(\"osc\");\n+   TC_Table (CVII(158)) := new String'(\"pm\");\n+   TC_Table (CVII(159)) := new String'(\"apc\");\n+\n+\n+   -- Compare the first half of two tables.\n+   for I in CVII(Lower_Bound) .. CVII(Middle_Bound) loop\n+     if TC_Table(I).all /= Table_Of_Character(I).all then\n+       Report.Failed(\"Value of character#\" & Integer'Image(Character'Pos(I)) &\n+                     \" is not the same in the first half of the table\");\n+     end if;\n+   end loop;\n+\n+\n+   -- Compare the second half of two tables.\n+   for I in CVII(Half_Bound) .. CVII(Upper_Bound) loop\n+     if TC_Table(I).all /= Table_Of_Character(I).all then\n+       Report.Failed(\"Value of character#\" & Integer'Image(Character'Pos(I)) &\n+                     \" is not the same in the second half of the table\");\n+     end if;\n+   end loop;\n+\n+\n+   -- Check the first character.\n+   if Character'Image( Character'First ) /= \"NUL\" then\n+      Report.Failed(\"Value of character#\"                           &\n+                     Integer'Image(Character'Pos (Character'First)) &\n+                    \" is not NUL\");\n+   end if;\n+\n+\n+   -- Check that the names of the non-graphic characters are usable with\n+   -- Image and Value attributes.\n+   if Character'Value( Character'Image( CVII(153) )) /= \n+     CVII( 153 ) then\n+        Report.Failed (\"Value of character#\"                       &\n+                        Integer'Image( Character'Pos(CVII(153)) )  &\n+                       \" is not reserved_153\");\n+   end if;\n+\n+\n+   for I in CVII(Lower_Bound) .. CVII(Max_Bound) loop\n+     if Character'Value( \n+          Report.Ident_Str(\n+            Character'Image(CVII(Character'Pos(I)))))\n+        /= CVII( Character'Pos(I)) then\n+          Report.Failed (\"Value of character#\"                             &\n+                          Integer'Image( Character'Pos(I) )                &\n+                         \" is not the same as the predefined character type\");\n+     end if;\n+   end loop;\n+\n+\n+   -- Check Wide_Character attributes.\n+   for I in Wide_Character'Val(Lower_Bound) .. Wide_Character'Val(Max_Bound) \n+   loop\n+     if Wide_Character'Wide_Value(\n+          Report.Ident_Wide_Str(\n+            Wide_Character'Wide_Image(\n+              Wide_Character'Val(Wide_Character'Pos(I)))))\n+        /= Wide_Character'Val(Wide_Character'Pos(I)) \n+     then\n+        Report.Failed (\"Value of the predefined Wide_Character type \" &\n+                       \"is not correct\");\n+     end if;\n+   end loop;\n+\n+\n+   if Wide_Character'Value( Wide_Character'Image(Wide_Character'Val(132)) ) \n+     /= Wide_Character'Val( Report.Ident_Int(132) ) then\n+        Report.Failed (\"Wide_Character at 132 is not reserved_132\");\n+   end if;\n+\n+\n+   if Wide_Character'Image( Wide_Character'First ) /= \"NUL\" then\n+      Report.Failed (\"Wide_Character'First is not NUL\");\n+   end if;\n+\n+\n+   if Wide_Character'Image \n+     (Wide_Character'Pred (Wide_Character'Last) ) /= \"FFFE\" then\n+      Report.Failed (\"Wide_Character at 65534 is not FFFE\");\n+   end if;\n+  \n+    \n+   if Wide_Character'Image(Wide_Character'Last) /= \"FFFF\" then\n+      Report.Failed (\"Wide_Character'Last is not FFFF\");\n+   end if;\n+\n+   Report.Result;\n+\n+end C352001;"}, {"sha": "305e010b930f3ed4e7f5ec6d25fb38ebdfc46d6f", "filename": "gcc/testsuite/ada/acats/tests/c4/c433001.a", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc433001.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc433001.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc433001.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -36,6 +36,7 @@\n --\n -- HISTORY:\n --      16 DEC 1999   RLB   Initial Version.\n+--      20 JAN 2009   RLB   Corrected error messages.\n \n with Report;\n procedure C433001 is\n@@ -82,10 +83,10 @@ procedure C433001 is\n            Report.Failed (\"First Component incorrect (\" & Test_Case & \")\");\n         end if;\n         if Obj(Low+1) /= Second_Component then\n-           Report.Failed (\"First Component incorrect (\" & Test_Case & \")\");\n+           Report.Failed (\"Second Component incorrect (\" & Test_Case & \")\");\n         end if;\n         if Obj(High) /= Last_Component then\n-           Report.Failed (\"First Component incorrect (\" & Test_Case & \")\");\n+           Report.Failed (\"Last Component incorrect (\" & Test_Case & \")\");\n         end if;\n     end Check_1;\n \n@@ -104,10 +105,10 @@ procedure C433001 is\n            Report.Failed (\"First Component incorrect (\" & Test_Case & \")\");\n         end if;\n         if Obj(Color_Type'Succ(Low)) /= Second_Component then\n-           Report.Failed (\"First Component incorrect (\" & Test_Case & \")\");\n+           Report.Failed (\"Second Component incorrect (\" & Test_Case & \")\");\n         end if;\n         if Obj(High) /= Last_Component then\n-           Report.Failed (\"First Component incorrect (\" & Test_Case & \")\");\n+           Report.Failed (\"Last Component incorrect (\" & Test_Case & \")\");\n         end if;\n     end Check_2;\n "}, {"sha": "53f458464c506e8b9017956db7ac2ae9367152db", "filename": "gcc/testsuite/ada/acats/tests/c4/c453001.a", "status": "added", "additions": 236, "deletions": 0, "changes": 236, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc453001.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc453001.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc453001.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -0,0 +1,236 @@\n+-- C453001.A\n+--\n+--                             Grant of Unlimited Rights\n+--\n+--     The Ada Conformity Assessment Authority (ACAA) holds unlimited\n+--     rights in the software and documentation contained herein. Unlimited\n+--     rights are the same as those granted by the U.S. Government for older\n+--     parts of the Ada Conformity Assessment Test Suite, and are defined\n+--     in DFAR 252.227-7013(a)(19). By making this public release, the ACAA\n+--     intends to confer upon all recipients unlimited rights equal to those\n+--     held by the ACAA. These rights include rights to use, duplicate,\n+--     release or disclose the released technical data and computer software\n+--     in whole or in part, in any manner and for any purpose whatsoever, and\n+--     to have or permit others to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS. THE ACAA MAKES NO EXPRESS OR IMPLIED\n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--\n+--                                     Notice\n+--\n+--     The ACAA has created and maintains the Ada Conformity Assessment Test\n+--     Suite for the purpose of conformity assessments conducted in accordance\n+--     with the International Standard ISO/IEC 18009 - Ada: Conformity\n+--     assessment of a language processor. This test suite should not be used\n+--     to make claims of conformance unless used in accordance with\n+--     ISO/IEC 18009 and any applicable ACAA procedures.\n+--*\n+-- OBJECTIVES:\n+--     Check that overflow checking is not performed for adding operators of\n+--     modular types.\n+--\n+-- TEST DESCRIPTION:\n+--     Check that Constraint_Error is not raised by + or - when the result\n+--     is out of the range of the base type.\n+--     Also check that assignment to values in the upper half of the range\n+--     does not raise Constraint_Error.\n+--\n+--     We define modular types of various common sizes. We cannot\n+--     assume a binary modulus greater than 2**16 is supported by 3.5.4(23),\n+--     so the DWord type might be smaller on some targets. We also try\n+--     a small prime number as a modulus (these are often used for hashing).\n+--     We also the language-defined types\n+--     System.Storage_Elements.Storage_Element, Ada.Streams.Stream_Element,\n+--     and Ada.Containers.Hash_Type.\n+--\n+-- CHANGE HISTORY:\n+--      11 Feb 17   JAC   Initial pre-release version.\n+--      30 Mar 17   RLB   Renamed, removed non-modular test cases, removed\n+--                        types that aren't required to be supported, added\n+--                        other language-defined types, added key to locate\n+--                        failures, added additional test cases.\n+--      03 Apr 17   RLB   Removed Ada.Containers from the Ada 95 version of\n+--                        this test.\n+--\n+--!\n+with Report;\n+with System.Storage_Elements;\n+with Ada.Streams;\n+\n+procedure C453001 is\n+   type Unsigned_Byte_Type    is mod 16#100#; -- 256;\n+\n+   type Unsigned_Word_Type    is mod 16#1_0000#; -- 65536;\n+\n+   type Unsigned_DWord_Type   is mod\n+                                Natural'Min (2**32, System.Max_Binary_Modulus);\n+\n+   type Unsigned_NBM_Type     is mod System.Max_Nonbinary_Modulus;\n+\n+   type Biggest_Unsigned_Type is mod System.Max_Binary_Modulus;\n+\n+   type Prime_Type            is mod 23; -- Prime number for hashing.\n+\n+   generic\n+      type Mod_Type is mod <>; -- Assume this is a base type.\n+      Key : in String;\n+   procedure Test_Operators;\n+\n+   procedure Test_Operators is\n+\n+      function Ident_Mod (Val : in Mod_Type) return Mod_Type is\n+         -- Optimization breaker.\n+      begin\n+         if Report.Equal (4, 12) then -- Always False (but complex).\n+            return 1;\n+         else\n+            return Val;\n+         end if;\n+      end Ident_Mod;\n+\n+   begin\n+      if Mod_Type'First /= 0 then -- The First of a base type is always 0.\n+         Report.Failed (\"Not base type first - \" & Key);\n+      end if;\n+      if Mod_Type'Last /= Mod_Type'Base'Last then\n+         Report.Failed (\"Not base type last - \" & Key);\n+      end if;\n+\n+      -- Note: Mod_Type'First always is 0.\n+\n+      -- Check addition\n+      declare\n+         M : constant Mod_Type := Mod_Type'Last;\n+         V : Mod_Type;\n+      begin\n+         V := M + 1; -- Should wrap around\n+         if Ident_Mod (V) /= 0 then\n+            Report.Failed (\"Addition didn't wrap round - \" & Key);\n+         end if;\n+         V := Ident_Mod (M - 2) + 5; -- Should wrap around\n+         if Ident_Mod (V) /= 2 then\n+            Report.Failed (\"Addition didn't wrap round again - \" & Key);\n+         end if;\n+      exception\n+         when Constraint_Error =>\n+            Report.Failed (\"Constraint_Error raised for addition - \" & Key);\n+         when others           =>\n+            Report.Failed\n+             (\"Some even more unexpected exception raised for addition - \" &\n+               Key);\n+      end;\n+\n+      -- Check subtraction\n+      declare\n+         M : constant Mod_Type := 0;\n+         V : Mod_Type;\n+      begin\n+         V := M - 1; -- Should wrap around\n+         if Ident_Mod (V) /= Mod_Type'Last then\n+            Report.Failed (\"Subtraction didn't wrap round - \" & Key);\n+         end if;\n+         V := Ident_Mod (3) - 7; -- Should wrap around\n+         if Ident_Mod (V) /= Mod_Type'Last-3 then\n+            Report.Failed (\"Subtraction didn't wrap round again - \" & Key);\n+         end if;\n+      exception\n+         when Constraint_Error =>\n+            Report.Failed (\"Constraint_Error raised for subtraction - \" & Key);\n+         when others           =>\n+            Report.Failed\n+             (\"Some even more unexpected exception raised for subtraction - \" &\n+                Key);\n+      end;\n+\n+   end Test_Operators;\n+\n+   procedure Test_Unsigned_Byte_Operators    is new Test_Operators\n+                                              (Unsigned_Byte_Type, \"Byte\");\n+\n+   procedure Test_Unsigned_Word_Operators    is new Test_Operators\n+                                              (Unsigned_Word_Type, \"Word\");\n+\n+   procedure Test_Unsigned_DWord_Operators   is new Test_Operators\n+                                              (Unsigned_DWord_Type, \"DWord\");\n+\n+   procedure Test_Unsigned_NBM_Operators     is new Test_Operators\n+                                                 (Unsigned_NBM_Type, \"NBM\");\n+\n+   procedure Test_Biggest_Unsigned_Operators is new Test_Operators\n+                                              (Biggest_Unsigned_Type, \"Big\");\n+\n+   procedure Test_Prime_Operators is new Test_Operators (Prime_Type, \"Prime\");\n+\n+   procedure Test_Storage_Element_Operators  is new Test_Operators\n+                        (System.Storage_Elements.Storage_Element, \"Storage\");\n+\n+   procedure Test_Stream_Element_Operators   is new Test_Operators\n+                                     (Ada.Streams.Stream_Element, \"Stream\");\n+\n+begin\n+\n+   Report.Test\n+     (\"C453001\",\n+      \"Check that overflow checking is not performed for adding operators \" &\n+      \"of modular types\");\n+\n+   -- Check assignment\n+   declare\n+      -- Define subtypes\n+      subtype My_Unsigned_Byte_Type  is Unsigned_Byte_Type;\n+      subtype My_Unsigned_Word_Type  is Unsigned_Word_Type;\n+      subtype My_Unsigned_DWord_Type is Unsigned_DWord_Type;\n+\n+      -- Define constants in upper half of range\n+      C1 : constant Unsigned_Byte_Type     := Unsigned_Byte_Type'Last;\n+      C2 : constant My_Unsigned_Byte_Type  := 16#FE#;\n+      C3 : constant Unsigned_Word_Type     := 16#FACE#;\n+      C4 : constant My_Unsigned_Word_Type  := My_Unsigned_Word_Type'Last;\n+      C5 : constant Unsigned_DWord_Type    := My_Unsigned_DWord_Type'Last;\n+\n+      -- Define variables\n+      V1 : Unsigned_Byte_Type;\n+      V2 : My_Unsigned_Byte_Type;\n+      V3 : Unsigned_Word_Type;\n+      V4 : My_Unsigned_Word_Type;\n+      V5 : Unsigned_DWord_Type;\n+   begin\n+      V1 := C1;\n+      V1 := C2;\n+      V2 := C1;\n+      V2 := C2;\n+      V3 := C3;\n+      V3 := C4;\n+      V4 := C3;\n+      V4 := C4;\n+      V5 := C5;\n+      if V1 /= C2 or V2 /= C2 or V3 /= C4 or V4 /= C4 or V5 /= C5 then\n+         Report.Comment (\"Don't optimize assignment!\"); -- Optimization breaker\n+      end if;\n+   exception\n+      when Constraint_Error =>\n+         Report.Failed (\"Constraint_Error raised for assignment\");\n+      when others           =>\n+         Report.Failed (\"Some even more unexpected exception raised \" &\n+                        \"for assignment\");\n+   end;\n+\n+   Test_Unsigned_Byte_Operators;\n+   Test_Unsigned_Word_Operators;\n+   Test_Unsigned_DWord_Operators;\n+   Test_Unsigned_NBM_Operators;\n+   Test_Biggest_Unsigned_Operators;\n+   Test_Prime_Operators;\n+   Test_Storage_Element_Operators;\n+   Test_Stream_Element_Operators;\n+\n+   Report.Result;\n+\n+end C453001;\n+"}, {"sha": "42f02045f1780f5f235a10c7bc9606e375b27477", "filename": "gcc/testsuite/ada/acats/tests/c4/c45622a.ada", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc6469d2491bb588d02c5416b5be0131aa4c3b0/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc45622a.ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc6469d2491bb588d02c5416b5be0131aa4c3b0/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc45622a.ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc45622a.ada?ref=0fc6469d2491bb588d02c5416b5be0131aa4c3b0", "patch": "@@ -1,83 +0,0 @@\n--- C45622A.ADA\n-\n---                             Grant of Unlimited Rights\n---\n---     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n---     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n---     unlimited rights in the software and documentation contained herein.\n---     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n---     this public release, the Government intends to confer upon all \n---     recipients unlimited rights  equal to those held by the Government.  \n---     These rights include rights to use, duplicate, release or disclose the \n---     released technical data and computer software in whole or in part, in \n---     any manner and for any purpose whatsoever, and to have or permit others \n---     to do so.\n---\n---                                    DISCLAIMER\n---\n---     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n---     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n---     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n---     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n---     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n---     PARTICULAR PURPOSE OF SAID MATERIAL.\n---*\n--- OBJECTIVE:\n---     FOR EXPONENTIATION OF FLOATING POINT TYPES, CHECK THAT\n---      CONSTRAINT_ERROR IS RAISED IF\n---     MACHINE_OVERFLOWS IS TRUE AND THE RESULT IS OUTSIDE THE RANGE OF\n---     THE BASE TYPE.  THIS TESTS DIGITS 5.\n-\n--- *** NOTE: This test has been modified since ACVC version 1.11 to    -- 9X\n--- ***       remove incompatibilities associated with the transition   -- 9X\n--- ***       to Ada 9X.                                                -- 9X\n--- ***                                                                 -- 9X\n-\n--- HISTORY:\n---     BCB 02/09/88  CREATED ORIGINAL TEST.\n---     MRM 03/30/93  REMOVED NUMERIC_ERROR FOR 9X COMPATIBILITY\n-\n-WITH REPORT; USE REPORT;\n-\n-PROCEDURE C45622A IS\n-\n-     TYPE FLT IS DIGITS 5;\n-\n-     F : FLT;\n-\n-     FUNCTION EQUAL_FLT (ONE, TWO : FLT) RETURN BOOLEAN IS\n-     BEGIN\n-          RETURN ONE = TWO * FLT (IDENT_INT(1));\n-     END EQUAL_FLT;\n-\n-BEGIN\n-     TEST (\"C45622A\", \"FOR EXPONENTIATION OF FLOATING POINT TYPES, \" &\n-                      \"CHECK THAT CONSTRAINT_ERROR \" &\n-                      \"IS RAISED IF MACHINE_OVERFLOWS IS TRUE AND \" &\n-                      \"THE RESULT IS OUTSIDE THE RANGE OF THE BASE \" &\n-                      \"TYPE.  THIS TESTS DIGITS 5\");\n-\n-     IF FLT'MACHINE_OVERFLOWS THEN\n-          BEGIN\n-               F := (FLT'BASE'LAST)**IDENT_INT (2);\n-               FAILED (\"CONSTRAINT_ERROR WAS NOT RAISED FOR \" &\n-                       \"EXPONENTIATION\");\n-\n-               IF NOT EQUAL_FLT(F,F) THEN\n-                    COMMENT (\"DON'T OPTIMIZE F\");\n-               END IF;\n-          EXCEPTION\n-               WHEN CONSTRAINT_ERROR =>\n-                    COMMENT (\"CONSTRAINT_ERROR WAS RAISED FOR \" &\n-                             \"EXPONENTIATION\");\n-               WHEN OTHERS =>\n-                    FAILED (\"AN EXCEPTION OTHER THAN CONSTRAINT_ERROR \" &\n-                            \"WAS RAISED FOR EXPONENTIATION\");\n-          END;\n-     ELSE\n-          NOT_APPLICABLE (\"THIS TEST IS NOT APPLICABLE DUE TO \" &\n-                          \"MACHINE_OVERFLOWS BEING FALSE\");\n-     END IF;\n-\n-     RESULT;\n-END C45622A;"}, {"sha": "32ba4c07a697fc30b70ab431957d1cafaa41b0c7", "filename": "gcc/testsuite/ada/acats/tests/c4/c45624a.ada", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc6469d2491bb588d02c5416b5be0131aa4c3b0/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc45624a.ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc6469d2491bb588d02c5416b5be0131aa4c3b0/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc45624a.ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc45624a.ada?ref=0fc6469d2491bb588d02c5416b5be0131aa4c3b0", "patch": "@@ -1,86 +0,0 @@\n--- C45624A.ADA\n-\n---                             Grant of Unlimited Rights\n---\n---     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n---     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n---     unlimited rights in the software and documentation contained herein.\n---     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n---     this public release, the Government intends to confer upon all \n---     recipients unlimited rights  equal to those held by the Government.  \n---     These rights include rights to use, duplicate, release or disclose the \n---     released technical data and computer software in whole or in part, in \n---     any manner and for any purpose whatsoever, and to have or permit others \n---     to do so.\n---\n---                                    DISCLAIMER\n---\n---     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n---     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n---     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n---     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n---     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n---     PARTICULAR PURPOSE OF SAID MATERIAL.\n---*\n--- OBJECTIVE:\n---     FOR FLOATING POINT TYPES, CHECK THAT CONSTRAINT_ERROR\n---     IS RAISED IF THE RESULT OF A FLOATING POINT\n---     EXPONENTIATION IS OUTSIDE THE RANGE OF THE BASE TYPE AND\n---     MACHINE_OVERFLOWS IS FALSE.  THIS TESTS DIGITS 5.\n-\n--- *** NOTE: This test has been modified since ACVC version 1.11 to    -- 9X\n--- ***       remove incompatibilities associated with the transition   -- 9X\n--- ***       to Ada 9X.                                                -- 9X\n--- ***                                                                 -- 9X\n-\n--- HISTORY:\n---     BCB 02/09/88  CREATED ORIGINAL TEST.\n---     MRM 03/30/93  REMOVED NUMERIC_ERROR FOR 9X COMPATIBILITY\n-\n-WITH REPORT; USE REPORT;\n-\n-PROCEDURE C45624A IS\n-\n-     TYPE FLT IS DIGITS 5;\n-\n-     F : FLT;\n-\n-     FUNCTION EQUAL_FLT (ONE, TWO : FLT) RETURN BOOLEAN IS\n-     BEGIN\n-          IF EQUAL(3,3) THEN\n-               RETURN ONE = TWO;\n-          ELSE\n-               RETURN ONE /= TWO;\n-          END IF;\n-     END EQUAL_FLT;\n-\n-BEGIN\n-     TEST (\"C45624A\", \"FOR FLOATING POINT TYPES, CHECK THAT \" &\n-                      \"CONSTRAINT_ERROR IS RAISED \" &\n-                      \"IF MACHINE_OVERFLOWS IS FALSE.  THIS TESTS \" &\n-                      \"DIGITS 5\");\n-\n-     IF FLT'MACHINE_OVERFLOWS THEN\n-          NOT_APPLICABLE (\"THIS TEST IS NOT APPLICABLE DUE TO \" &\n-                          \"MACHINE_OVERFLOWS BEING TRUE\");\n-     ELSE\n-          BEGIN\n-               F := FLT'BASE'FIRST**IDENT_INT (2);\n-               COMMENT (\"CONSTRAINT_ERROR WAS NOT RAISED WHEN \" &\n-                         \"MACHINE_OVERFLOWS WAS FALSE\");\n-\n-               IF EQUAL_FLT(F,F**IDENT_INT(1)) THEN\n-                    COMMENT (\"DON'T OPTIMIZE F\");\n-               END IF;\n-          EXCEPTION\n-               WHEN CONSTRAINT_ERROR =>\n-                    COMMENT (\"CONSTRAINT_ERROR WAS RAISED WHEN \" &\n-                             \"MACHINE_OVERFLOWS WAS FALSE\");\n-               WHEN OTHERS =>\n-                    FAILED (\"AN EXCEPTION OTHER THAN CONSTRAINT_ERROR \" &\n-                            \"WAS RAISED\");\n-          END;\n-     END IF;\n-\n-     RESULT;\n-END C45624A;"}, {"sha": "c7bd592d6f6c0f84d4e69cd1a54d325bde501a1f", "filename": "gcc/testsuite/ada/acats/tests/c4/c45624b.ada", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fc6469d2491bb588d02c5416b5be0131aa4c3b0/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc45624b.ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fc6469d2491bb588d02c5416b5be0131aa4c3b0/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc45624b.ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc45624b.ada?ref=0fc6469d2491bb588d02c5416b5be0131aa4c3b0", "patch": "@@ -1,81 +0,0 @@\n--- C45624B.ADA\n-\n---                             Grant of Unlimited Rights\n---\n---     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n---     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n---     unlimited rights in the software and documentation contained herein.\n---     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n---     this public release, the Government intends to confer upon all \n---     recipients unlimited rights  equal to those held by the Government.  \n---     These rights include rights to use, duplicate, release or disclose the \n---     released technical data and computer software in whole or in part, in \n---     any manner and for any purpose whatsoever, and to have or permit others \n---     to do so.\n---\n---                                    DISCLAIMER\n---\n---     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n---     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n---     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n---     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n---     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n---     PARTICULAR PURPOSE OF SAID MATERIAL.\n---*\n--- OBJECTIVE:\n---     FOR FLOATING POINT TYPES, CHECK THAT\n---     CONSTRAINT_ERROR IS RAISED IF THE RESULT OF A FLOATING POINT\n---     EXPONENTIATION IS OUTSIDE THE RANGE OF THE BASE TYPE AND\n---     MACHINE_OVERFLOWS IS FALSE.  THIS TESTS DIGITS 6.\n-\n--- *** NOTE: This test has been modified since ACVC version 1.11 to    -- 9X\n--- ***       remove incompatibilities associated with the transition   -- 9X\n--- ***       to Ada 9X.                                                -- 9X\n--- ***                                                                 -- 9X\n-\n--- HISTORY:\n---     BCB 07/14/88  CREATED ORIGINAL TEST.\n---     MRM 03/30/93  REMOVED NUMERIC_ERROR FOR 9X COMPATIBILITY\n-\n-WITH REPORT; USE REPORT;\n-\n-PROCEDURE C45624B IS\n-\n-     TYPE FLT IS DIGITS 6;\n-\n-     F : FLT;\n-\n-     FUNCTION EQUAL_FLT (ONE, TWO : FLT) RETURN BOOLEAN IS\n-     BEGIN\n-          RETURN ONE = TWO * FLT (IDENT_INT(1));\n-     END EQUAL_FLT;\n-\n-BEGIN\n-     TEST (\"C45624B\", \"FOR FLOATING POINT TYPES, CHECK THAT \" &\n-                      \"CONSTRAINT_ERROR IS RAISED \" &\n-                      \"IF MACHINE_OVERFLOWS IS FALSE.  THIS TESTS \" &\n-                      \"DIGITS 6\");\n-\n-     IF FLT'MACHINE_OVERFLOWS THEN\n-          NOT_APPLICABLE (\"THIS TEST IS NOT APPLICABLE DUE TO \" &\n-                          \"MACHINE_OVERFLOWS BEING TRUE\");\n-     ELSE\n-          BEGIN\n-               F := FLT'BASE'LAST**IDENT_INT (2);\n-               COMMENT (\"CONSTRAINT_ERROR WAS NOT RAISED WHEN \" &\n-                        \"MACHINE_OVERFLOWS WAS FALSE\");\n-               IF NOT EQUAL_FLT(F,F**IDENT_INT(1)) THEN\n-                    COMMENT (\"DON'T OPTIMIZE F\");\n-               END IF;\n-          EXCEPTION\n-               WHEN CONSTRAINT_ERROR =>\n-                    COMMENT (\"CONSTRAINT_ERROR WAS RAISED WHEN \" &\n-                             \"MACHINE_OVERFLOWS WAS FALSE\");\n-               WHEN OTHERS =>\n-                    FAILED (\"AN EXCEPTION OTHER THAN CONSTRAINT_ERROR \" &\n-                            \"WAS RAISED\");\n-          END;\n-     END IF;\n-\n-     RESULT;\n-END C45624B;"}, {"sha": "7644f88594d4f62fb084f21ff0eb3191c83b18e4", "filename": "gcc/testsuite/ada/acats/tests/c4/c460013.a", "status": "added", "additions": 188, "deletions": 0, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc460013.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc460013.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc460013.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -0,0 +1,188 @@\n+-- C460013.A\n+--\n+--                             Grant of Unlimited Rights\n+--\n+--     The Ada Conformity Assessment Authority (ACAA) holds unlimited\n+--     rights in the software and documentation contained herein. Unlimited\n+--     rights are the same as those granted by the U.S. Government for older\n+--     parts of the Ada Conformity Assessment Test Suite, and are defined\n+--     in DFAR 252.227-7013(a)(19). By making this public release, the ACAA\n+--     intends to confer upon all recipients unlimited rights equal to those\n+--     held by the ACAA. These rights include rights to use, duplicate,\n+--     release or disclose the released technical data and computer software\n+--     in whole or in part, in any manner and for any purpose whatsoever, and\n+--     to have or permit others to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--*\n+--\n+-- OBJECTIVE:\n+--    Check that if the target subtype excludes null, the value is not\n+--    null. Check access parameters, which null-excluding if:\n+--     (1) not null is given in their definition;\n+--     (2) the access parameter is controlling;\n+--     (3) an Ada 95 compiler is in use.\n+--\n+--    Note that the not null syntax is required even for Ada 95 compilers\n+--    (see AI95-00447).\n+--\n+-- CHANGE HISTORY:\n+--    18 DEC 2006   RLB   Initial version.\n+--    05 JAN 2007   RLB   Corrected syntax error.\n+--\n+--!\n+with Ada.Exceptions;\n+use Ada.Exceptions;\n+with Report;\n+use Report;\n+procedure C460013 is\n+\n+\n+    package Nest1 is\n+        type Doggie is tagged record\n+            Cnt : Natural;\n+        end record;\n+        type Doggie_Access is access all Doggie;\n+\n+        procedure Controlled (P : access Doggie); -- Always null-excluding.\n+    end Nest1;\n+\n+    package Nest2 is\n+        type Kitty is record\n+            Cnt : Natural;\n+        end record;\n+        type Kitty_Access is access all Kitty;\n+\n+        procedure Include (P : access Kitty); -- Null-excluding only in Ada 95.\n+        procedure Exclude (P : not null access Kitty); -- Always null-excluding.\n+    end Nest2;\n+\n+\n+    package body Nest1 is\n+        procedure Controlled (P : access Doggie) is\n+        begin\n+            if P.Cnt /= Ident_Int(4) then\n+                Failed (\"Bad value in null-excluding controlling parameter\");\n+            -- else OK\n+            end if;\n+        exception\n+            when Constraint_Error => -- Dereference of null\n+                Failed (\"Null allowed in null-excluding controlling parameter\");\n+        end Controlled;\n+    end Nest1;\n+\n+    package body Nest2 is\n+        procedure Include (P : access Kitty) is\n+        begin\n+            if P.Cnt /= Ident_Int(31) then\n+                Failed (\"Bad value in access parameter\");\n+            -- else OK\n+            end if;\n+        exception\n+            when Constraint_Error => -- Dereference of null\n+                null;\n+                --Comment (\"Null allowed in access parameter - Ada 2005 semantics\");\n+        end Include;\n+\n+        procedure Exclude (P : not null access Kitty) is\n+        begin\n+            if P.Cnt /= Ident_Int(80) then\n+                Failed (\"Bad value in explicit null-excluding parameter\");\n+            -- else OK\n+            end if;\n+        exception\n+            when Constraint_Error => -- Dereference of null\n+                Failed (\"Null allowed in explicit null-excluding parameter\");\n+        end Exclude;\n+    end Nest2;\n+\n+    Shep : aliased Nest1.Doggie := (Cnt => 4);\n+    Frisky : aliased Nest2.Kitty := (Cnt => 80);\n+    Snuggles : aliased Nest2.Kitty := (Cnt => 31);\n+\n+begin\n+    Test (\"C460013\",\n+          \"Check that if the target subtype excludes null, the value is not\" &\n+          \" null - access parameter cases\");\n+\n+    declare\n+        Ptr : Nest1.Doggie_Access := Shep'Access;\n+    begin\n+        begin\n+            Nest1.Controlled (Ptr); -- OK.\n+        exception\n+\t    when A: others =>\n+\t        Failed (\"Unexpected exception \" & Exception_Name (A) &\n+                        \" raised (1A) - \" & Exception_Message (A));\n+        end;\n+        Ptr := null;\n+        begin\n+            Nest1.Controlled (Ptr);\n+\t    Failed (\"Null allowed for null-excluding controlling access parameter (1)\");\n+        exception\n+            when Constraint_Error =>\n+                null;\n+\t    when B: others =>\n+\t        Failed (\"Unexpected exception \" & Exception_Name (B) &\n+                        \" raised (1B) - \" & Exception_Message (B));\n+        end;\n+    end;\n+\n+    declare\n+        Ptr : Nest2.Kitty_Access := Frisky'Access;\n+    begin\n+        begin\n+            Nest2.Exclude (Ptr); -- OK.\n+        exception\n+\t    when C: others =>\n+\t        Failed (\"Unexpected exception \" & Exception_Name (C) &\n+                        \" raised (2A) - \" & Exception_Message (C));\n+        end;\n+        Ptr := null;\n+        begin\n+            Nest2.Exclude (Ptr);\n+\t    Failed (\"Null allowed for null-excluding access parameter (2)\");\n+        exception\n+            when Constraint_Error =>\n+                null;\n+\t    when D: others =>\n+\t        Failed (\"Unexpected exception \" & Exception_Name (D) &\n+                        \" raised (2B) - \" & Exception_Message (D));\n+        end;\n+    end;\n+\n+    declare\n+        Ptr : Nest2.Kitty_Access := Snuggles'Access;\n+    begin\n+        begin\n+            Nest2.Include (Ptr); -- OK.\n+        exception\n+\t    when E: others =>\n+\t        Failed (\"Unexpected exception \" & Exception_Name (E) &\n+                        \" raised (3A) - \" & Exception_Message (E));\n+        end;\n+        Ptr := null;\n+        begin\n+            Nest2.Include (Ptr);\n+            Comment (\"Null allowed for normal access parameter - \" &\n+                     \"Ada 2005 semantics\");\n+        exception\n+            when Constraint_Error =>\n+                Comment (\"Null not allowed for normal access parameter - \" &\n+                         \"Ada 95 semantics\");\n+\t    when F: others =>\n+\t        Failed (\"Unexpected exception \" & Exception_Name (F) &\n+                        \" raised (3B) - \" & Exception_Message (F));\n+        end;\n+    end;\n+\n+    Result;\n+end C460013;\n+"}, {"sha": "59a95d95873a83e61610b33a0478b1c2da4b5f60", "filename": "gcc/testsuite/ada/acats/tests/c4/c460014.a", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc460014.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc460014.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc4%2Fc460014.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -0,0 +1,289 @@\n+-- C460014.A\n+--\n+--                             Grant of Unlimited Rights\n+--\n+--     The Ada Conformity Assessment Authority (ACAA) holds unlimited\n+--     rights in the software and documentation contained herein. Unlimited\n+--     rights are the same as those granted by the U.S. Government for older\n+--     parts of the Ada Conformity Assessment Test Suite, and are defined\n+--     in DFAR 252.227-7013(a)(19). By making this public release, the ACAA\n+--     intends to confer upon all recipients unlimited rights equal to those\n+--     held by the ACAA. These rights include rights to use, duplicate,\n+--     release or disclose the released technical data and computer software\n+--     in whole or in part, in any manner and for any purpose whatsoever, and\n+--     to have or permit others to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS. THE ACAA MAKES NO EXPRESS OR IMPLIED\n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--\n+--                                     Notice\n+--\n+--     The ACAA has created and maintains the Ada Conformity Assessment Test\n+--     Suite for the purpose of conformity assessments conducted in accordance\n+--     with the International Standard ISO/IEC 18009 - Ada: Conformity\n+--     assessment of a language processor. This test suite should not be used\n+--     to make claims of conformance unless used in accordance with\n+--     ISO/IEC 18009 and any applicable ACAA procedures.\n+--*\n+-- OBJECTIVES:\n+--      Check that if the operand type of a type conversion is\n+--      access-to-class-wide, Constraint_Error is raised if the tag of the\n+--      object designated by the operand does not identify a specific type\n+--      that is covered by or descended from the target type.\n+--\n+-- TEST DESCRIPTION:\n+--      Attempt to convert a parameter of a type that designates a class-wide\n+--      type to an object of a type that designates a specific member of that\n+--      class, for both an actual with a different tag and an actual with a\n+--      matching tag.\n+--\n+--      This test checks 4.6(42) as required by 4.6(50).\n+--\n+-- CHANGE HISTORY:\n+--      19 Aug 16   JAC     Initial pre-release version.\n+--      19 Jan 17   RLB     Readied for release: replaced objective, renamed\n+--                          to appropriate number, added class-wide cases,\n+--                          eliminated 11.6 problems, added third level of\n+--                          types, and checks on null.\n+--\n+--!\n+package C460014_1 is\n+   type Root_Facade_Type is tagged record\n+      Error_Code : Integer;\n+   end record;\n+\n+   type Root_Facade_Ptr_Type is access all Root_Facade_Type;\n+\n+   type Facade_Class_Ptr_Type is access all Root_Facade_Type'Class;\n+\n+   type Data_A_Type is\n+   record\n+      A : Boolean;\n+   end record;\n+\n+   type Facade_A_Type is new Root_Facade_Type with\n+   record\n+      Data_A : Data_A_Type;\n+   end record;\n+\n+   type Facade_A_Ptr_Type is access all Facade_A_Type;\n+\n+   type Facade_A_Class_Ptr_Type is access all Facade_A_Type'Class;\n+\n+   type Facade_B_Type is new Facade_A_Type with\n+   record\n+      B : Character;\n+   end record;\n+\n+   type Facade_B_Ptr_Type is access all Facade_B_Type;\n+\n+   type Facade_B_Class_Ptr_Type is access all Facade_B_Type'Class;\n+\n+   procedure Define_Construct\n+     (Facade_Class_Ptr : in Facade_Class_Ptr_Type);\n+\n+   procedure Define_Class_Construct\n+     (Facade_Class_Ptr : in Facade_Class_Ptr_Type);\n+\n+   function Init_Root_Facade_Ptr return Root_Facade_Ptr_Type;\n+\n+   function Init_Facade_A_Ptr     return Facade_A_Ptr_Type;\n+\n+   function Init_Facade_B_Ptr     return Facade_B_Ptr_Type;\n+\n+   function Init_Facade_Class_Ptr_with_Root return Facade_Class_Ptr_Type;\n+\n+   function Init_Facade_Class_Ptr_with_A return Facade_Class_Ptr_Type;\n+\n+   function Init_Facade_Class_Ptr_with_B return Facade_Class_Ptr_Type;\n+\n+end C460014_1;\n+\n+with Report;\n+package body C460014_1 is\n+\n+   procedure Define_Construct\n+    (Facade_Class_Ptr : in Facade_Class_Ptr_Type) is\n+\n+      Facade_A_Ptr : constant Facade_A_Ptr_Type :=\n+                                         Facade_A_Ptr_Type (Facade_Class_Ptr);\n+\n+      My_A : Data_A_Type renames Facade_A_Ptr.Data_A;\n+   begin\n+      if not My_A.A then\n+         Report.Comment (\"Wrong value\"); -- So My_A is not dead by 11.6(5).\n+      end if;\n+   end Define_Construct;\n+\n+   procedure Define_Class_Construct\n+    (Facade_Class_Ptr : in Facade_Class_Ptr_Type) is\n+\n+      Facade_Class_A_Ptr : constant Facade_A_Class_Ptr_Type :=\n+                                  Facade_A_Class_Ptr_Type (Facade_Class_Ptr);\n+\n+   begin\n+      if Facade_Class_A_Ptr /= null and then\n+         (not Facade_Class_A_Ptr.Data_A.A) then\n+         Report.Comment (\"Wrong value\"); -- So the ptr is not dead by 11.6(5).\n+      end if;\n+   end Define_Class_Construct;\n+\n+   Dummy_Root_Facade : aliased Root_Facade_Type := (Error_Code => 123);\n+\n+   function Init_Root_Facade_Ptr return Root_Facade_Ptr_Type is\n+   begin\n+      return Dummy_Root_Facade'Access;\n+   end Init_Root_Facade_Ptr;\n+\n+   Dummy_Facade_A    : aliased Facade_A_Type := (Error_Code => 123,\n+                                                 Data_A     => (A => True));\n+\n+   function Init_Facade_A_Ptr     return Facade_A_Ptr_Type is\n+   begin\n+      return Dummy_Facade_A'Access;\n+   end Init_Facade_A_Ptr;\n+\n+   Dummy_Facade_B    : aliased Facade_B_Type := (Error_Code => 234,\n+                                                 Data_A     => (A => True),\n+                                                 B          => 'P');\n+\n+   function Init_Facade_B_Ptr     return Facade_B_Ptr_Type is\n+   begin\n+      return Dummy_Facade_B'Access;\n+   end Init_Facade_B_Ptr;\n+\n+   function Init_Facade_Class_Ptr_with_Root return Facade_Class_Ptr_Type is\n+   begin\n+      return Dummy_Root_Facade'Access;\n+   end Init_Facade_Class_Ptr_with_Root;\n+\n+   function Init_Facade_Class_Ptr_with_A return Facade_Class_Ptr_Type is\n+   begin\n+      return Dummy_Facade_A'Access;\n+   end Init_Facade_Class_Ptr_with_A;\n+\n+   function Init_Facade_Class_Ptr_with_B return Facade_Class_Ptr_Type is\n+   begin\n+      return Dummy_Facade_B'Access;\n+   end Init_Facade_Class_Ptr_with_B;\n+\n+end C460014_1;\n+\n+\n+with C460014_1;\n+with Report;\n+\n+procedure C460014 is\n+\n+   My_Root_Facade_Ptr : constant C460014_1.Facade_Class_Ptr_Type :=\n+                                    C460014_1.Init_Facade_Class_Ptr_with_Root;\n+\n+   My_Facade_A_Ptr    : constant C460014_1.Facade_Class_Ptr_Type :=\n+                                    C460014_1.Init_Facade_Class_Ptr_with_A;\n+\n+   My_Facade_B_Ptr    : constant C460014_1.Facade_Class_Ptr_Type :=\n+                                    C460014_1.Init_Facade_Class_Ptr_with_B;\n+\n+   My_Null_Facade_B_Ptr    : constant C460014_1.Facade_B_Ptr_Type := null;\n+\n+   Constraint_Error_Raised : Boolean;\n+\n+   procedure Test_Define_Construct\n+    (Facade_Class_Ptr : in C460014_1.Facade_Class_Ptr_Type) is\n+   begin\n+      Constraint_Error_Raised := False;\n+      -- Should fail Tag_Check and therefore raise Constraint_Error if\n+      -- parameter doesn't designate an object of Facade_A_Type\n+      -- or Facade_B_Type.\n+      C460014_1.Define_Construct (Facade_Class_Ptr => Facade_Class_Ptr);\n+   exception\n+      when Constraint_Error =>\n+         Constraint_Error_Raised := True;\n+   end Test_Define_Construct;\n+\n+\n+   procedure Test_Define_Class_Construct\n+    (Facade_Class_Ptr : in C460014_1.Facade_Class_Ptr_Type) is\n+   begin\n+      Constraint_Error_Raised := False;\n+      -- Should fail Tag_Check and therefore raise Constraint_Error if\n+      -- parameter doesn't designate an object of Facade_A_Type\n+      -- or Facade_B_Type.\n+      C460014_1.Define_Class_Construct (Facade_Class_Ptr => Facade_Class_Ptr);\n+   exception\n+      when Constraint_Error =>\n+         Constraint_Error_Raised := True;\n+   end Test_Define_Class_Construct;\n+\n+begin\n+\n+   Report.Test\n+     (\"C460014\",\n+      \"Check that if the operand type of a type conversion is \" &\n+      \"access-to-class-wide, Constraint_Error is raised if the tag of the \" &\n+      \"object designated by the operand does not identify a specific type \" &\n+      \"that is covered by or descended from the target type\");\n+\n+   Test_Define_Construct (Facade_Class_Ptr => My_Root_Facade_Ptr);\n+\n+   if not Constraint_Error_Raised then\n+      Report.Failed (\"Didn't get expected Constraint_Error (1)\");\n+   end if;\n+\n+   Test_Define_Construct\n+     (Facade_Class_Ptr => My_Facade_A_Ptr);\n+\n+   if Constraint_Error_Raised then\n+      Report.Failed (\"Unexpected Constraint_Error (2)\");\n+   end if;\n+\n+   Test_Define_Construct\n+     (Facade_Class_Ptr => My_Facade_B_Ptr);\n+\n+   if Constraint_Error_Raised then\n+      Report.Failed (\"Unexpected Constraint_Error (3)\");\n+   end if;\n+\n+   Test_Define_Class_Construct (Facade_Class_Ptr => My_Root_Facade_Ptr);\n+\n+   if not Constraint_Error_Raised then\n+      Report.Failed (\"Didn't get expected Constraint_Error (4)\");\n+   end if;\n+\n+   Test_Define_Class_Construct\n+     (Facade_Class_Ptr => My_Facade_A_Ptr);\n+\n+   if Constraint_Error_Raised then\n+      Report.Failed (\"Unexpected Constraint_Error (5)\");\n+   end if;\n+\n+   Test_Define_Class_Construct\n+     (Facade_Class_Ptr => My_Facade_B_Ptr);\n+\n+   if Constraint_Error_Raised then\n+      Report.Failed (\"Unexpected Constraint_Error (6)\");\n+   end if;\n+\n+   -- Check that it is OK to pass null and that does not cause some failure.\n+   Test_Define_Class_Construct (Facade_Class_Ptr => null);\n+\n+   if Constraint_Error_Raised then\n+      Report.Failed (\"Unexpected Constraint_Error (7)\");\n+   end if;\n+\n+   Test_Define_Class_Construct (Facade_Class_Ptr =>\n+      C460014_1.Facade_Class_Ptr_Type (My_Null_Facade_B_Ptr));\n+\n+   if Constraint_Error_Raised then\n+      Report.Failed (\"Unexpected Constraint_Error (8)\");\n+   end if;\n+\n+   Report.Result;\n+\n+end C460014;"}, {"sha": "0f854d198c76e62fe433e9f7d888112931e6194b", "filename": "gcc/testsuite/ada/acats/tests/c6/c620001.a", "status": "added", "additions": 340, "deletions": 0, "changes": 340, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc6%2Fc620001.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc6%2Fc620001.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc6%2Fc620001.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -0,0 +1,340 @@\n+-- C620001.A\n+\n+--                             Grant of Unlimited Rights\n+--\n+--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained\n+--     unlimited rights in the software and documentation contained herein.\n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making\n+--     this public release, the Government intends to confer upon all\n+--     recipients unlimited rights  equal to those held by the Government.\n+--     These rights include rights to use, duplicate, release or disclose the\n+--     released technical data and computer software in whole or in part, in\n+--     any manner and for any purpose whatsoever, and to have or permit others\n+--     to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--*\n+-- OBJECTIVE:\n+--    Check that elementary parameters are passed by copy.\n+--\n+--    Part 1: Integer, float, and access types, procedures and functions.\n+--\n+-- TEST DESCRIPTION:\n+--    Subtests are:\n+--        (A) Scalar parameters to procedures.\n+--        (B) Scalar parameters to functions.\n+--        (C) Access parameters to procedures.\n+--        (D) Access parameters to functions.\n+--\n+--    For the procedure examples, we pass array elements indexed by dynamically\n+--    determined indexes. Doing this side-steps the check of 6.4.1(6.15/3) and\n+--    makes the test more realistic.\n+--\n+--    To completely test this objective, we should also try in out and out\n+--    parameters for functions (Ada 2012), in/in out/out parameters for\n+--    task and protected entries, and a variety of different scalar types\n+--    (enumeration, modular, fixed, decimal).\n+--\n+-- CHANGE HISTORY:\n+--    14 Jan 1980 DAS Created test.\n+--    26 Oct 1982 SPS\n+--    25 May 1984 CPP\n+--    29 Oct 1985 EG  Eliminate the use of Numeric_Error in the test.\n+--    14 Mar 2014 RLB Revised so test cases are legal for Ada 2012, modernized\n+--                    objective, converted to modern format, added float cases.\n+\n+with Report;\n+procedure C620001 is\n+\n+     use Report;\n+\n+begin\n+     Test (\"C620001\", \"Check that elementary parameters are passed by copy\");\n+\n+     --------------------------------------------------\n+\n+     declare  -- (A)\n+\n+          I,J,K : Natural := Report.Ident_Int(1); -- Index values.\n+          Arr   : array (1 .. 4) of Integer;\n+          E     : exception;\n+\n+          procedure P (PI  : in     Integer;\n+                       PO  :    out Integer;\n+                       PIO : in out Integer) is\n+\n+               Tmp  : Integer;\n+\n+          begin\n+\n+               Tmp := PI;     -- Save value of PI at procedure entry.\n+\n+               PO := 10;\n+               if (PI /= Tmp) then\n+                    Failed (\"Assignement to scalar out \" &\n+                            \"parameter changes the value of \" &\n+                            \"input parameter\");\n+                    Tmp := PI;     -- Reset Tmp for next case.\n+               end if;\n+\n+               PIO := PIO + 100;\n+               if (PI /= Tmp) then\n+                    Failed (\"Assignment to scalar in out \" &\n+                            \"parameter changes the value of \" &\n+                            \"inputparameter\");\n+                    Tmp := PI;     -- Reset Tmp for next case.\n+               end if;\n+\n+               Arr(I) := Arr(I) + 1;\n+               if (PI /= Tmp) then\n+                    Failed (\"Assignment to scalar actual \" &\n+                            \"parameter changes the value of \" &\n+                            \"input parameter\");\n+               end if;\n+\n+               raise E;  -- Check exception handling.\n+          end P;\n+\n+     begin  -- (A)\n+          Arr := (others => 0);\n+          P (Arr(I), Arr(J), Arr(K));\n+          Failed (\"Exception not raised - A\");\n+     exception\n+          when E =>\n+               if (Arr(I) /= 1) then\n+                    case Arr(I) is\n+                         when 11  =>\n+                              Failed (\"Out actual scalar parameter \" &\n+                                      \"changed global value\");\n+                         when 101 =>\n+                              Failed (\"In out actual scalar \" &\n+                                      \"parameter changed global value\");\n+                         when 111 =>\n+                              Failed (\"Out and in out actual scalar \" &\n+                                      \"parameters changed global \" &\n+                                      \"value\");\n+                         when others =>\n+                              Failed (\"Uundetermined change to global \" &\n+                                      \"value\");\n+                    end case;\n+               end if;\n+          when others =>\n+               Failed (\"Wrong exception raised - A\");\n+     end;  -- (A)\n+\n+     --------------------------------------------------\n+\n+     declare  -- (B)\n+\n+          I,J  : Integer;\n+\n+          function F (FI : in Integer) return Integer is\n+\n+               Tmp  : Integer := FI;\n+\n+          begin\n+\n+               I := I + 1;\n+               if (FI /= Tmp) then\n+                    Failed (\"Assignment to scalar actual function \" &\n+                            \"parameter changes the value of \" &\n+                            \"input parameter\");\n+               end if;\n+\n+               return (100);\n+          end F;\n+\n+     begin  -- (B)\n+          I := 100;\n+          J := F (I);\n+     end;  -- (B)\n+\n+     --------------------------------------------------\n+\n+     declare  -- (C)\n+\n+          type Acctype is access Integer;\n+\n+          I,J,K : Natural := Report.Ident_Int(2); -- Index values.\n+          Arr   : array (1 .. 5) of Acctype;\n+          E     : exception;\n+\n+          procedure P (PI  : in     Acctype;\n+                       PO  :    out Acctype;\n+                       PIO : in out Acctype) is\n+\n+               Tmp  : Acctype;\n+\n+          begin\n+\n+               Tmp := PI;     -- Save value of PI at procedure entry.\n+\n+               Arr(I) := new Integer'(101);\n+               if (PI /= Tmp) then\n+                    Failed (\"Assignment to access actual \" &\n+                            \"parameter changes the value of \" &\n+                            \"input parameter\");\n+                    Tmp := PI;     -- Reset Tmp for next case.\n+               end if;\n+\n+               PO := new Integer'(1);\n+               if (PI /= Tmp) then\n+                    Failed (\"Assignment to access out \" &\n+                            \"parameter changes the value of \" &\n+                            \"input parameter\");\n+                    Tmp := PI;     -- Reset Tmp for next case.\n+               end if;\n+\n+               PIO := new Integer'(10);\n+               if (PI /= Tmp) then\n+                    Failed (\"Assignment to access in out \" &\n+                            \"parameter changes the value of \" &\n+                            \"input parameter\");\n+               end if;\n+\n+               raise E;  -- Check exception handling.\n+          end P;\n+\n+     begin  -- (C)\n+          Arr(I) := new Integer'(100);\n+          P (Arr(I), Arr(J), Arr(K));\n+          Failed (\"Exception not raised - C\");\n+     exception\n+          when E =>\n+               if (Arr(I).all /= 101) then\n+                    Failed (\"Out or in out actual procedure \" &\n+                            \"parameter value changed despite \" &\n+                            \"raised exception\");\n+               end if;\n+          when others =>\n+               Failed (\"Wrong exception raised - C\");\n+     end;  -- (C)\n+\n+     --------------------------------------------------\n+\n+     declare  -- (D)\n+\n+          Type Acctype is access Integer;\n+\n+          I,J  : Acctype;\n+\n+          function F (FI : in Acctype) return Acctype is\n+\n+               Tmp  : Acctype := FI;\n+\n+          begin\n+\n+               I := new Integer;\n+               if (FI /= Tmp) then\n+                    Failed (\"Assignment to access actual function \" &\n+                            \"parameter changes the value of \" &\n+                            \"Input parameter\");\n+               end if;\n+\n+               return null;\n+          end F;\n+\n+     begin  -- (D)\n+          I := null;\n+          J := F(I);\n+     end;  -- (D)\n+\n+     --------------------------------------------------\n+\n+     declare  -- (E)\n+\n+          I,J,K : Natural := Report.Ident_Int(3); -- Index values.\n+          Arr   : array (1 .. 3) of Float;\n+          E     : exception;\n+\n+          procedure P (PI  : in     Float;\n+                       PO  :    out Float;\n+                       PIO : in out Float) is\n+\n+               Tmp  : Float;\n+\n+          begin\n+\n+               Tmp := PI;     -- Save value of PI at procedure entry.\n+\n+               PO := 0.5;\n+               if (PI /= Tmp) then\n+                    Failed (\"Assignement to float out \" &\n+                            \"parameter changes the value of \" &\n+                            \"input parameter\");\n+                    Tmp := PI;     -- Reset Tmp for next case.\n+               end if;\n+\n+               PIO := PIO + 0.25;\n+               if (PI /= Tmp) then\n+                    Failed (\"Assignment to float in out \" &\n+                            \"parameter changes the value of \" &\n+                            \"inputparameter\");\n+                    Tmp := PI;     -- Reset Tmp for next case.\n+               end if;\n+\n+               Arr(I) := Arr(I) + 1.0;\n+               if (PI /= Tmp) then\n+                    Failed (\"Assignment to float actual \" &\n+                            \"parameter changes the value of \" &\n+                            \"input parameter\");\n+               end if;\n+\n+               raise E;  -- Check exception handling.\n+          end P;\n+\n+     begin  -- (E)\n+          Arr := (others => 0.0);\n+          P (Arr(I), Arr(J), Arr(K));\n+          Failed (\"Exception not raised - E\");\n+     exception\n+          when E =>\n+               if (Arr(I) /= 1.0) then\n+                    Failed (\"Out or in out actual procedure \" &\n+                            \"parameter value changed despite \" &\n+                            \"raised exception\");\n+               end if;\n+          when others =>\n+               Failed (\"Wrong exception raised - E\");\n+     end;  -- (E)\n+\n+     --------------------------------------------------\n+\n+     declare  -- (F)\n+\n+          I,J  : Float;\n+\n+          function F (FI : in Float) return Float is\n+\n+               Tmp  : Float := FI;\n+\n+          begin\n+\n+               I := I + 1.0;\n+               if (FI /= Tmp) then\n+                    Failed (\"Assignment to float actual function \" &\n+                            \"parameter changes the value of \" &\n+                            \"input parameter\");\n+               end if;\n+\n+               return 100.0;\n+          end F;\n+\n+     begin  -- (F)\n+          I := 100.0;\n+          J := F (I);\n+     end;  -- (F)\n+\n+     --------------------------------------------------\n+\n+     Result;\n+\n+end C620001;"}, {"sha": "b46a04ecb8013d5e7ed9e5e3aa5c5a33270a0206", "filename": "gcc/testsuite/ada/acats/tests/c6/c620002.a", "status": "added", "additions": 509, "deletions": 0, "changes": 509, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc6%2Fc620002.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc6%2Fc620002.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc6%2Fc620002.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -0,0 +1,509 @@\n+-- C620001.A\n+\n+--                             Grant of Unlimited Rights\n+--\n+--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained\n+--     unlimited rights in the software and documentation contained herein.\n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making\n+--     this public release, the Government intends to confer upon all\n+--     recipients unlimited rights  equal to those held by the Government.\n+--     These rights include rights to use, duplicate, release or disclose the\n+--     released technical data and computer software in whole or in part, in\n+--     any manner and for any purpose whatsoever, and to have or permit others\n+--     to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--*\n+-- OBJECTIVE:\n+--    Check that elementary parameters are passed by copy.\n+--\n+--    Part 2: Integer, float, and access types, task and protected entries.\n+--\n+-- TEST DESCRIPTION:\n+--    Subtests are:\n+--        (A) Scalar parameters to task entries.\n+--        (B) Scalar parameters to protected entries.\n+--        (C) Access parameters to task entries.\n+--        (D) Access parameters to protected entries.\n+--\n+--    For all of these examples, we pass array elements indexed by dynamically\n+--    determined indexes. Doing this side-steps the check of 6.4.1(6.15/3) and\n+--    makes the test more realistic.\n+--\n+--    Note: This is based on legacy test C95072A.ADA (which was withdrawn).\n+--\n+-- CHANGE HISTORY:\n+--    22 Jul 1985 DAS Created test.\n+--    12 May 2020 RLB Revised so test cases are legal for Ada 2012, modernized\n+--                    objective, converted to modern format, added float \n+--                    and protected cases.\n+\n+with Report;\n+procedure C620002 is\n+\n+     use Report;\n+\n+begin\n+     Test (\"C620002\", \"Check that elementary parameters are passed by copy,\" &\n+                      \" part 2 - task and protected entries\");\n+\n+     --------------------------------------------------\n+\n+     declare  -- (A)\n+\n+          I,J,K : Natural := Report.Ident_Int (1); -- Index values.\n+          Arr   : array (1 .. 4) of Integer;\n+          E     : exception;\n+\n+          task TA is\n+               entry EA (EI  : in     Integer;\n+                         EO  :    out Integer;\n+                         EIO : in out Integer);\n+          end TA;\n+\n+          task body TA is\n+\n+               Tmp : Integer;\n+\n+          begin\n+\n+               accept EA (EI  : in     Integer;\n+                          EO  :    out Integer;\n+                          EIO : in out Integer) do\n+\n+                    Tmp := EI;     -- Save value of EI at accept.\n+\n+                    EO := 10;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignement to scalar out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - A\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    EIO := EIO + 100;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to scalar in out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - A\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    Arr(I) := Arr(I) + 1;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to scalar actual \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - A\");\n+                    end if;\n+ \n+                    raise E;  -- Check exception handling.\n+               end EA;\n+\n+          exception\n+               when others => null;\n+          end TA;\n+\n+     begin  -- (A)\n+          Arr := (others => 0);\n+          TA.EA (Arr(I), Arr(J), Arr(K));\n+          Failed (\"Exception not raised - A\");\n+     exception\n+          when E =>\n+               if Arr(I) /= 1 then\n+                    case Arr(I) is\n+                         when 11  =>\n+                              Failed (\"Out actual scalar parameter \" &\n+                                      \"changed global value - A\");\n+                         when 101 =>\n+                              Failed (\"In out actual scalar \" &\n+                                      \"parameter changed global value - A\");\n+                         when 111 =>\n+                              Failed (\"Out and in out actual scalar \" &\n+                                      \"parameters changed global \" &\n+                                      \"value - A\");\n+                         when others =>\n+                              Failed (\"Undetermined change to global \" &\n+                                      \"value - A\");\n+                    end case;\n+               end if;\n+          when others =>\n+               Failed (\"Wrong exception raised - A\");\n+     end;  -- (A)\n+\n+     --------------------------------------------------\n+\n+     declare  -- (B)\n+\n+          I,J,K : Natural := Report.Ident_Int (3); -- Index values.\n+          Arr   : array (1 .. 5) of Integer;\n+          E     : exception;\n+\n+          protected PA is\n+               entry EA (EI  : in     Integer;\n+                         EO  :    out Integer;\n+                         EIO : in out Integer);\n+          end PA;\n+\n+          protected body PA is\n+\n+               entry EA (EI  : in     Integer;\n+                         EO  :    out Integer;\n+                         EIO : in out Integer) when True is\n+\n+                   Tmp : Integer;\n+\n+               begin\n+\n+                    Tmp := EI;     -- Save value of EI at entry.\n+\n+                    EO := 10;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignement to scalar out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - B\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    EIO := EIO + 100;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to scalar in out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - B\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    Arr(I) := Arr(I) + 1;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to scalar actual \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - B\");\n+                    end if;\n+ \n+                    raise E;  -- Check exception handling.\n+               end EA;\n+\n+          end PA;\n+\n+     begin  -- (B)\n+          Arr := (others => 0);\n+          PA.EA (Arr(I), Arr(J), Arr(K));\n+          Failed (\"Exception not raised - B\");\n+     exception\n+          when E =>\n+               if Arr(I) /= 1 then\n+                    case Arr(I) is\n+                         when 11  =>\n+                              Failed (\"Out actual scalar parameter \" &\n+                                      \"changed global value - B\");\n+                         when 101 =>\n+                              Failed (\"In out actual scalar \" &\n+                                      \"parameter changed global value - B\");\n+                         when 111 =>\n+                              Failed (\"Out and in out actual scalar \" &\n+                                      \"parameters changed global \" &\n+                                      \"value - B\");\n+                         when others =>\n+                              Failed (\"Undetermined change to global \" &\n+                                      \"value - B\");\n+                    end case;\n+               end if;\n+          when others =>\n+               Failed (\"Wrong exception raised - B\");\n+     end;  -- (B)\n+\n+     --------------------------------------------------\n+\n+     declare  -- (C)\n+\n+          type Acctype is access Integer;\n+\n+          I,J,K : Natural := Report.Ident_Int (2); -- Index values.\n+          Arr   : array (1 .. 5) of Acctype;\n+          E     : exception;\n+\n+          task TB is\n+               entry EB (EI  : in     Acctype;\n+                         EO  :    out Acctype;\n+                         EIO : in out Acctype);\n+          end TB;\n+\n+          task body TB is\n+\n+               Tmp  : Acctype;\n+\n+          begin\n+\n+               accept EB (EI  : in     Acctype;\n+                          EO  :    out Acctype;\n+                          EIO : in out Acctype) do\n+\n+                    Tmp := EI;     -- Save value of EI at accept.\n+\n+                    Arr(I) := new Integer'(101);\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to access actual \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - C\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    EO := new Integer'(1);\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to access out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - C\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    EIO := new Integer'(10);\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to access in out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - C\");\n+                    end if;\n+\n+                    raise E;  -- Check exception handling.\n+              end EB;\n+\n+          exception\n+               when others => null;\n+          end TB;\n+\n+     begin  -- (C)\n+          Arr(I) := new Integer'(100);\n+          TB.EB (Arr(I), Arr(J), Arr(K));\n+          Failed (\"Exception not raised - C\");\n+     exception\n+          when E =>\n+               if (Arr(I).all /= 101) then\n+                    Failed (\"Out or in out actual \" &\n+                            \"parameter value changed despite \" &\n+                            \"raised exception - C\");\n+               end if;\n+          when others =>\n+               Failed (\"Wrong exception raised - C\");\n+     end;  -- (C)\n+\n+     --------------------------------------------------\n+\n+     declare  -- (D)\n+\n+          type Acctype is access Integer;\n+\n+          I,J,K : Natural := Report.Ident_Int (4); -- Index values.\n+          Arr   : array (1 .. 6) of Acctype;\n+          E     : exception;\n+\n+          protected PB is\n+               entry EB (EI  : in     Acctype;\n+                         EO  :    out Acctype;\n+                         EIO : in out Acctype);\n+          end PB;\n+\n+          protected body PB is\n+\n+               entry EB (EI  : in     Acctype;\n+                         EO  :    out Acctype;\n+                         EIO : in out Acctype) when True is\n+\n+                    Tmp  : Acctype;\n+\n+               begin\n+                    Tmp := EI;     -- Save value of EI at entry.\n+\n+                    Arr(I) := new Integer'(101);\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to access actual \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - D\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    EO := new Integer'(1);\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to access out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - D\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    EIO := new Integer'(10);\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to access in out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - D\");\n+                    end if;\n+\n+                    raise E;  -- Check exception handling.\n+               end EB;\n+\n+          end PB;\n+\n+     begin  -- (D)\n+          Arr(I) := new Integer'(100);\n+          PB.EB (Arr(I), Arr(J), Arr(K));\n+          Failed (\"Exception not raised - D\");\n+     exception\n+          when E =>\n+               if (Arr(I).all /= 101) then\n+                    Failed (\"Out or in out actual \" &\n+                            \"parameter value changed despite \" &\n+                            \"raised exception - D\");\n+               end if;\n+          when others =>\n+               Failed (\"Wrong exception raised - D\");\n+     end;  -- (D)\n+\n+     --------------------------------------------------\n+\n+     declare  -- (E)\n+\n+          I,J,K : Natural := Report.Ident_Int (3); -- Index values.\n+          Arr   : array (1 .. 3) of Float;\n+          E     : exception;\n+\n+          task TC is\n+               entry EC (EI  : in     Float;\n+                         EO  :    out Float;\n+                         EIO : in out Float);\n+          end TC;\n+\n+          task body TC is\n+\n+               Tmp : Float;\n+\n+          begin\n+\n+               accept EC (EI  : in     Float;\n+                          EO  :    out Float;\n+                          EIO : in out Float) do\n+\n+                    Tmp := EI;     -- Save value of EI at accept.\n+\n+                    EO := 0.5;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignement to float out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - E\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    EIO := EIO + 0.25;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to float in out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - E\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    Arr(I) := Arr(I) + 1.0;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to float actual \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - E\");\n+                    end if;\n+ \n+                    raise E;  -- Check exception handling.\n+               end EC;\n+\n+          exception\n+               when others => null;\n+          end TC;\n+\n+     begin  -- (E)\n+          Arr := (others => 0.0);\n+          TC.EC (Arr(I), Arr(J), Arr(K));\n+          Failed (\"Exception not raised - E\");\n+     exception\n+          when E =>\n+               if (Arr(I) /= 1.0) then\n+                    Failed (\"Out or in out actual procedure \" &\n+                            \"parameter value changed despite \" &\n+                            \"raised exception - E\");\n+               end if;\n+          when others =>\n+               Failed (\"Wrong exception raised - E\");\n+     end;  -- (E)\n+\n+     --------------------------------------------------\n+\n+     declare  -- (F)\n+\n+          I,J,K : Natural := Report.Ident_Int (6); -- Index values.\n+          Arr   : array (1 .. 7) of Float;\n+          E     : exception;\n+\n+          protected PC is\n+               entry EC (EI  : in     Float;\n+                         EO  :    out Float;\n+                         EIO : in out Float);\n+          end PC;\n+\n+          protected body PC is\n+\n+               entry EC (EI  : in     Float;\n+                         EO  :    out Float;\n+                         EIO : in out Float) when True is\n+\n+                    Tmp : Float;\n+\n+               begin\n+\n+                    Tmp := EI;     -- Save value of EI at entry.\n+\n+                    EO := 0.5;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignement to float out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - F\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    EIO := EIO + 0.25;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to float in out \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - F\");\n+                         Tmp := EI;     -- Reset Tmp for next case.\n+                    end if;\n+\n+                    Arr(I) := Arr(I) + 1.0;\n+                    if EI /= Tmp then\n+                         Failed (\"Assignment to float actual \" &\n+                                 \"parameter changes the value of \" &\n+                                 \"input parameter - F\");\n+                    end if;\n+ \n+                    raise E;  -- Check exception handling.\n+               end EC;\n+\n+          end PC;\n+\n+     begin  -- (F)\n+          Arr := (others => 0.0);\n+          PC.EC (Arr(I), Arr(J), Arr(K));\n+          Failed (\"Exception not raised - F\");\n+     exception\n+          when E =>\n+               if (Arr(I) /= 1.0) then\n+                    Failed (\"Out or in out actual procedure \" &\n+                            \"parameter value changed despite \" &\n+                            \"raised exception - F\");\n+               end if;\n+          when others =>\n+               Failed (\"Wrong exception raised - F\");\n+     end;  -- (F)\n+\n+     --------------------------------------------------\n+\n+     Result;\n+\n+end C620002;"}, {"sha": "5cf4d8995368c096052de5f886a76fcb13ad3262", "filename": "gcc/testsuite/ada/acats/tests/c7/c761006.a", "status": "modified", "additions": 34, "deletions": 13, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc7%2Fc761006.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc7%2Fc761006.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc7%2Fc761006.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -55,6 +55,9 @@\n --      01 DEC 97   EDS    Made correction wrt RM 7.6(21)\n --      16 MAR 01   RLB    Corrected Adjust cases to avoid problems with\n --                         RM 7.6.1(16/1) from Technical Corrigendum 1.\n+--      05 JUL 12   RLB    Redid Unchecked_Deallocation case to handle\n+--                         the fact that the behavior is unspecified (see\n+--                         AI95-0179-1). Also fixed indentation.\n --\n --!\n \n@@ -346,23 +349,39 @@ procedure C761006 is\n     -- finalization of Item/Target should cause PE\n     end Finalize_15;\n \n-  -- check failure in finalize due to Unchecked_Deallocation\n+    -- check failure in finalize due to Unchecked_Deallocation\n \n-  type Shark is access C761006_2.Fin_Check;\n+    procedure Finalize_17_Outer is\n+      -- This procedure exists to make Shark local, so everything allocated\n+      -- on it will be finalized when this routine exits.\n \n-  procedure Catch is\n-    new Unchecked_Deallocation( C761006_2.Fin_Check, Shark );\n+      type Shark is access C761006_2.Fin_Check;\n \n-  procedure Finalize_17 is\n-    White : Shark := new C761006_2.Fin_Check;\n-  begin\n-    Catch( White );\n-  exception\n-    when Program_Error =>\n+      procedure Catch is\n+        new Unchecked_Deallocation( C761006_2.Fin_Check, Shark );\n+\n+      procedure Finalize_17_Inner is\n+        White : Shark := new C761006_2.Fin_Check;\n+      begin\n+        Catch (White);\n+          -- Note: It is unspecified if Catch deallocates the memory\n+          -- of the allocated object, and if it ceases to exist.\n+          -- As such, it is possible that it will be finalized when\n+          -- the scope of the access type is exited. We check for this\n+          -- case below.\n+      exception\n+        when Program_Error =>\n            if not Sup.Events_Occurring(Sup.Good_Finalize) then\n              Report.Failed(\"Unchecked_Deallocation: \" & Fin_Not_Perf);\n            end if;\n-  end Finalize_17;\n+      end Finalize_17_Inner;\n+\n+    begin\n+       Finalize_17_Inner;\n+    exception\n+      when others =>\n+        Report.Failed(\"Unchecked_Deallocation check, unwanted exception in Outer\");\n+    end Finalize_17_Outer;\n \n   begin\n \n@@ -373,10 +392,12 @@ procedure C761006 is\n     end Exception_In_Finalization;\n \n     Use_Of_Unchecked_Deallocation: begin\n-      Finalize_17;\n+      Finalize_17_Outer;\n     exception\n+      when Program_Error =>\n+        Report.Comment(\"Unchecked_Deallocation check, double finalization occurred\");\n       when others =>\n-        Report.Failed(\"Unchecked_Deallocation check, unwanted exception\");\n+        Report.Failed(\"Unchecked_Deallocation check, unwanted exception in caller\");\n     end Use_Of_Unchecked_Deallocation;\n \n   end Finalize_Test;"}, {"sha": "b1f769b3375a139a6f3dc1910f6c9628b5cd8a18", "filename": "gcc/testsuite/ada/acats/tests/c9/c96004a.ada", "status": "modified", "additions": 35, "deletions": 13, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc9%2Fc96004a.ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc9%2Fc96004a.ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc9%2Fc96004a.ada?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -3,22 +3,22 @@\n --                             Grant of Unlimited Rights\n --\n --     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n---     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained\n --     unlimited rights in the software and documentation contained herein.\n---     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n---     this public release, the Government intends to confer upon all \n---     recipients unlimited rights  equal to those held by the Government.  \n---     These rights include rights to use, duplicate, release or disclose the \n---     released technical data and computer software in whole or in part, in \n---     any manner and for any purpose whatsoever, and to have or permit others \n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making\n+--     this public release, the Government intends to confer upon all\n+--     recipients unlimited rights  equal to those held by the Government.\n+--     These rights include rights to use, duplicate, release or disclose the\n+--     released technical data and computer software in whole or in part, in\n+--     any manner and for any purpose whatsoever, and to have or permit others\n --     to do so.\n --\n --                                    DISCLAIMER\n --\n --     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n---     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n --     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n---     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n --     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n --     PARTICULAR PURPOSE OF SAID MATERIAL.\n --*\n@@ -35,6 +35,8 @@\n --     CPP 08/15/84  CREATED ORIGINAL TEST.\n --     JET 01/06/88  UPDATED HEADER FORMAT AND ADDED CODE TO PREVENT\n --                   OPTIMIZATION.\n+--     RLB 12/18/06  Changed so that the test will work for Ada 2005\n+--                   implementations.\n \n WITH CALENDAR;  USE CALENDAR;\n WITH REPORT;  USE REPORT;\n@@ -92,15 +94,35 @@ BEGIN\n           END;\n \n           BEGIN\n-               YR := IDENT_INT(YEAR_NUMBER'LAST + 1);\n-               FAILED (\"EXCEPTION NOT RAISED - (A)3\");\n+               YR := IDENT_INT(2100);\n                IF NOT EQUAL (YR, YR) THEN\n                     COMMENT (\"NO EXCEPTION RAISED\");\n                END IF;\n-\n+               BEGIN\n+                    YR := 2399;\n+                    IF NOT EQUAL (YR, YR) THEN\n+                         COMMENT (\"NO EXCEPTION RAISED\");\n+                    END IF;\n+\n+               EXCEPTION\n+                   WHEN OTHERS =>\n+                        FAILED (\"ADA 2005 CASE RAISED EXCEPTION ON 2399 - (A)\");\n+               END;\n+               BEGIN\n+                    YR := IDENT_INT(2400);\n+                    IF NOT EQUAL (YR, YR) THEN\n+                        COMMENT (\"NO EXCEPTION RAISED\");\n+                    END IF;\n+                    FAILED (\"EXCEPTION NOT RAISED - (A)3\");\n+               EXCEPTION\n+                    WHEN CONSTRAINT_ERROR =>\n+                         Comment (\"Upper bound of Year_Number is appropriate\" &\n+                                  \" for Ada 2005\");\n+               END;\n           EXCEPTION\n                WHEN CONSTRAINT_ERROR =>\n-                    NULL;\n+                    Comment (\"Upper bound of Year_Number is appropriate\" &\n+                             \" for Ada 95\");\n                WHEN OTHERS =>\n                     FAILED (\"WRONG EXCEPTION RAISED - (A)3\");\n           END;"}, {"sha": "15ac5e9b7ed3e4298358f7ee660b4ddd90a39c87", "filename": "gcc/testsuite/ada/acats/tests/c9/c96007a.ada", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc9%2Fc96007a.ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc9%2Fc96007a.ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fc9%2Fc96007a.ada?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -3,22 +3,22 @@\n --                             Grant of Unlimited Rights\n --\n --     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n---     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained\n --     unlimited rights in the software and documentation contained herein.\n---     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n---     this public release, the Government intends to confer upon all \n---     recipients unlimited rights  equal to those held by the Government.  \n---     These rights include rights to use, duplicate, release or disclose the \n---     released technical data and computer software in whole or in part, in \n---     any manner and for any purpose whatsoever, and to have or permit others \n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making\n+--     this public release, the Government intends to confer upon all\n+--     recipients unlimited rights  equal to those held by the Government.\n+--     These rights include rights to use, duplicate, release or disclose the\n+--     released technical data and computer software in whole or in part, in\n+--     any manner and for any purpose whatsoever, and to have or permit others\n --     to do so.\n --\n --                                    DISCLAIMER\n --\n --     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n---     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n --     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n---     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n --     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n --     PARTICULAR PURPOSE OF SAID MATERIAL.\n --*\n@@ -27,7 +27,9 @@\n --   (A) TIME_ERROR IS RAISED ON INVALID DATES.\n --   (B) CONSTRAINT_ERROR IS RAISED FOR OUT-OF-RANGE PARAMETERS.\n \n--- CPP 8/16/84\n+-- CPP  8/16/84\n+-- RLB 12/18/06 - Changed so that the test will work for Ada 2005\n+--                implementations.\n \n WITH CALENDAR;  USE CALENDAR;\n WITH REPORT;  USE REPORT;\n@@ -136,13 +138,13 @@ BEGIN\n           END;\n \n           BEGIN\n-               BAD_TIME := TIME_OF (YEAR_NUMBER'LAST + 1, 8, 13);\n-               FAILED (\"EXCEPTION NOT RAISED - 2100 (B)\");\n+               BAD_TIME := TIME_OF (YEAR_NUMBER'LAST+1, 8, 13);\n+               FAILED (\"EXCEPTION NOT RAISED - YEAR_NUM'LAST+1 (B)\");\n           EXCEPTION\n                WHEN CONSTRAINT_ERROR =>\n                     NULL;\n                WHEN OTHERS =>\n-                    FAILED (\"WRONG EXCEPTION RAISED - 2100 (B)\");\n+                    FAILED (\"WRONG EXCEPTION RAISED - YEAR_NUM'LAST+1 (B)\");\n           END;\n \n           BEGIN"}, {"sha": "b73ed8fcf148b068106f5befadf838ff3bcd5c82", "filename": "gcc/testsuite/ada/acats/tests/cb/cb41004.a", "status": "modified", "additions": 49, "deletions": 24, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcb%2Fcb41004.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcb%2Fcb41004.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcb%2Fcb41004.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -56,10 +56,8 @@\n --      06 Dec 94   SAIC    ACVC 2.0\n --      08 Dec 00   RLB     Removed Exception_Identity subtest, pending\n --                          resolution of AI95-00241.\n---                          Notes for future: Replace Exception_Identity\n---                          subtest with whatever the resolution is.\n---                          Add a subtest for Exception_Name(Null_Id), which\n---                          is missing from this test.\n+--      29 Mar 07   RLB     Replaced Exception_Identity subtest, repaired\n+--                          Raise_Exception subtest for AI95-00446.\n --!\n \n with Report;\n@@ -96,6 +94,29 @@ begin\n       end if;\n \n \n+      -- Verify that Raise_Exception has no effect in the case of Null_Id.\n+      -- Modified by AI-446.\n+      begin\n+         Ada.Exceptions.Raise_Exception(A_Null_Exception_Id);\n+         Report.Comment(\n+           \"No exception raised by procedure Raise_Exception \" &\n+           \"when called with a Null_Id input parameter - compatible with \" &\n+           \"original Ada95\");\n+      exception\n+         when Constraint_Error => null; -- OK, expected exception.\n+            Report.Comment(\n+               \"Constraint_Error exception raised by procedure Raise_Exception \" &\n+               \"when called with a Null_Id input parameter - compatible with \" &\n+               \"AI95-00446\");\n+         when others =>\n+            Report.Failed(\n+               \"Unexpected exception raised by procedure Raise_Exception \" &\n+               \"when called with a Null_Id input parameter\");\n+      end;\n+\n+      TC_Flag := False;\n+\n+\n       -- Verify that Reraise_Occurrence has no effect in the case of\n       -- Null_Occurrence.\n       begin\n@@ -135,26 +156,30 @@ begin\n       end;\n \n \n---      -- Verify that function Exception_Identity raises Constraint_Error for\n---      -- a Null_Occurrence input parameter.\n---      -- Note: (RLB, 2000/12/08) This behavior may be modified by AI-00241.\n---      -- As such, this test case has been removed pending a resolution.\n---      begin\n---         declare\n---            Id : Ada.Exceptions.Exception_Id :=\n---              Ada.Exceptions.Exception_Identity(A_Null_Exception_Occurrence);\n---         begin\n---            Report.Failed\n---              (\"Constraint_Error not raised by Function Exception_Identity \" &\n---               \"when called with a Null_Occurrence input parameter\");\n---         end;\n---      exception\n---         when Constraint_Error => null; -- OK, expected exception.\n---         when others =>\n---            Report.Failed\n---              (\"Unexpected exception raised by Function Exception_Identity \" &\n---               \"when called with a Null_Occurrence input parameter\");\n---      end;\n+      -- Verify that function Exception_Identity raises Constraint_Error for\n+      -- a Null_Occurrence input parameter.\n+      -- Modified by AI-241.\n+      begin\n+         declare\n+            Id : Ada.Exceptions.Exception_Id :=\n+              Ada.Exceptions.Exception_Identity(A_Null_Exception_Occurrence);\n+         begin\n+            Report.Comment\n+              (\"No exception raised by Function Exception_Identity \" &\n+               \"when called with a Null_Occurrence input parameter - \" &\n+               \"compatible with AI95-00241.\");\n+         end;\n+      exception\n+         when Constraint_Error =>\n+            Report.Comment\n+              (\"Constraint_Error raised by Function Exception_Identity \" &\n+               \"when called with a Null_Occurrence input parameter - \" &\n+               \"compatible with original Ada95.\");\n+         when others =>\n+            Report.Failed\n+              (\"Unexpected exception raised by Function Exception_Identity \" &\n+               \"when called with a Null_Occurrence input parameter\");\n+      end;\n \n \n       -- Verify that function Exception_Name raises Constraint_Error for"}, {"sha": "ef94672086d3a478f391cbff934ef0b2ba86ec3c", "filename": "gcc/testsuite/ada/acats/tests/cc/cc3016f.ada", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcc%2Fcc3016f.ada", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcc%2Fcc3016f.ada", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcc%2Fcc3016f.ada?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -3,26 +3,25 @@\n --                             Grant of Unlimited Rights\n --\n --     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n---     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained\n --     unlimited rights in the software and documentation contained herein.\n---     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n---     this public release, the Government intends to confer upon all \n---     recipients unlimited rights  equal to those held by the Government.  \n---     These rights include rights to use, duplicate, release or disclose the \n---     released technical data and computer software in whole or in part, in \n---     any manner and for any purpose whatsoever, and to have or permit others \n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making\n+--     this public release, the Government intends to confer upon all\n+--     recipients unlimited rights  equal to those held by the Government.\n+--     These rights include rights to use, duplicate, release or disclose the\n+--     released technical data and computer software in whole or in part, in\n+--     any manner and for any purpose whatsoever, and to have or permit others\n --     to do so.\n --\n --                                    DISCLAIMER\n --\n --     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n---     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n --     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n---     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n --     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n --     PARTICULAR PURPOSE OF SAID MATERIAL.\n --*\n---     OFFICE, 3E 114, THE PENTAGON, WASHINGTON DC 20301-3081.\n \n -- OBJECTIVE:\n --   CHECK THAT AN INSTANTIATED PACKAGE HAS THE PROPERTIES REQUIRED"}, {"sha": "2cd96a44b71ae5daaa65cdea0d33b5d54cda288f", "filename": "gcc/testsuite/ada/acats/tests/cd/cd30011.a", "status": "added", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcd%2Fcd30011.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcd%2Fcd30011.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcd%2Fcd30011.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -0,0 +1,155 @@\n+-- CD30011.A\n+\n+--                             Grant of Unlimited Rights\n+--\n+--     The Ada Conformity Assessment Authority (ACAA) holds unlimited\n+--     rights in the software and documentation contained herein. Unlimited\n+--     rights are the same as those granted by the U.S. Government for older\n+--     parts of the Ada Conformity Assessment Test Suite, and are defined\n+--     in DFAR 252.227-7013(a)(19). By making this public release, the ACAA\n+--     intends to confer upon all recipients unlimited rights equal to those\n+--     held by the ACAA. These rights include rights to use, duplicate,\n+--     release or disclose the released technical data and computer software\n+--     in whole or in part, in any manner and for any purpose whatsoever, and\n+--     to have or permit others to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--\n+--                                     Notice\n+--\n+--     The ACAA has created and maintains the Ada Conformity Assessment Test\n+--     Suite for the purpose of conformity assessments conducted in accordance\n+--     with the International Standard ISO/IEC 18009 - Ada: Conformity\n+--     assessment of a language processor. This test suite should not be used\n+--     to make claims of conformance unless used in accordance with\n+--     ISO/IEC 18009 and any applicable ACAA procedures.\n+--\n+--*\n+-- OBJECTIVE:\n+--     Check that a size specification can be given by an attribute definition\n+--     clause for an enumeration type:\n+--        * in the visible or private part of a package for a type declared\n+--          in the visible part;\n+--        * for a derived enumeration type;\n+--        * for a derived private type whose full declaration is an\n+--          enumeration type.\n+--\n+-- TEST DESCRIPTION:\n+--     This test was created from legacy tests CD1009B and CD2A31C. The\n+--     objective of CD1009B was also an objective of CD2A31C; the tests\n+--     were merged to eliminate duplication and add appropriate applicability\n+--     criteria.\n+--\n+-- APPLICABILITY CRITERIA:\n+--     All implementations must attempt to compile this test.\n+--\n+--     For implementations validating against Systems Programming Annex (C):\n+--        this test must execute and report PASSED.\n+--\n+--     or implementations not validating against Annex C:\n+--        this test may report compile time errors at one or more points\n+--        indicated by \"-- ANX-C RQMT\", in which case it may be graded as\n+--        inapplicable. Otherwise, the test must execute and report PASSED.\n+--\n+-- CHANGE HISTORY:\n+--      17 Jun 87  PWB  Created original test CD2A21C.\n+--      07 Oct 87  VCL  Created original test CD1009B.\n+--      17 Apr 89  DHH  Changed extension from '.DEP' TO '.ADA', changed\n+--                      operators on 'Size tests, and added check on\n+--                      representation clause.\n+--      26 Mar 92  JRL  Removed testing of nonobjective types.\n+--      29 Mar 17  RLB  Created test from CD2A21C and CD1009B; reformatted\n+--                      to \"modern\" standards, added applicability criteria.\n+\n+with Report; use Report;\n+with Length_Check;                      -- CONTAINS A CALL TO 'Failed'.\n+procedure CD30011 is\n+\n+   type Basic_Enum is (A, B, C, D, E);\n+   Specified_Size : constant := Basic_Enum'Size;\n+\n+   Minimum_Size : Integer := Report.Ident_Int (Specified_Size);\n+\n+   type Derived_Enum is new Basic_Enum;\n+   for Derived_Enum'Size use Specified_Size;                  -- ANX-C RQMT.\n+\n+   package P is\n+      type Enum_in_P is (A1, B1, C1, D1, E1, F1, G1);\n+      for Enum_in_P'Size use Specified_Size;                  -- ANX-C RQMT.\n+      type private_Enum is private;\n+      type Alt_Enum_in_P is (A2, B2, C2, D2, E2, F2, G2);\n+   private\n+      type private_Enum is (A3, B3, C3, D3, E3, F3, G3);\n+      for Alt_Enum_in_P'Size use Specified_Size;              -- ANX-C RQMT.\n+   end P;\n+\n+   type Derived_Private_Enum is new P.Private_Enum;\n+   for Derived_Private_Enum'Size use Specified_Size;          -- ANX-C RQMT.\n+\n+   use P;\n+\n+   procedure Check_1 is new Length_Check (Derived_Enum);\n+   procedure Check_2 is new Length_Check (Enum_in_P);\n+   procedure Check_3 is new Length_Check (Alt_Enum_in_P);\n+\n+   X : Enum_in_P := A1;\n+   Y : Alt_Enum_in_P := A2;\n+\n+begin\n+\n+   Report.Test (\"CD30011\", \"Check that 'Size attribute definition clauses \" &\n+                           \"can be given in the visible or private part \" &\n+                           \"of a package for enumeration types declared \" &\n+                           \"declared in the visible part, and for derived \" &\n+                           \"enumeration types and derived private types \" &\n+                           \"whose full declarations are as enumeration types\");\n+\n+   Check_1 (C,  Specified_Size, \"Derived_Enum\");\n+   Check_2 (C1, Specified_Size, \"Enum_in_P\");\n+   Check_3 (C2, Specified_Size, \"Alt_Enum_in_P\");\n+\n+   if Derived_Enum'Size /= Minimum_Size then\n+      Failed (\"Derived_Enum'Size should not be greater than\" &\n+              Integer'Image (Minimum_Size) & \". Actual Size is\" &\n+              Integer'Image (Derived_Enum'Size));\n+   end if;\n+\n+   if Enum_in_P'Size /= Minimum_Size then\n+      Failed (\"Enum_in_P'Size should not be greater than\" &\n+              Integer'Image (Minimum_Size) & \". Actual Size is\" &\n+              Integer'Image (Enum_in_P'Size));\n+   end if;\n+\n+   if Alt_Enum_in_P'Size /= Minimum_Size then\n+      Failed (\"Alt_Enum_in_P'Size should not be greater than\" &\n+              Integer'Image (Minimum_Size) & \". Actual Size is\" &\n+              Integer'Image (Alt_Enum_in_P'Size));\n+   end if;\n+\n+   if Derived_Private_Enum'Size /= Minimum_Size then\n+\n+      Failed (\"Derived_Private_Enum'Size should not be greater \" &\n+              \"than \" & Integer'Image (Minimum_Size) & \". Actual Size is\" &\n+              Integer'Image (Derived_Private_Enum'Size));\n+   end if;\n+\n+   if X'Size < Specified_Size then\n+      Failed (\"Object'Size is too small --\" &\n+              Enum_in_P'Image (X));\n+   end if;\n+\n+   if Y'Size < Specified_Size then\n+      Failed (\"Object'Size is too small --\" &\n+              Alt_Enum_in_P'Image (Y));\n+   end if;\n+\n+   Report.Result;\n+\n+end CD30011;"}, {"sha": "a55dfbd47a2a90b81a4abdbf328de09d18cc9a17", "filename": "gcc/testsuite/ada/acats/tests/cd/cd30012.a", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcd%2Fcd30012.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcd%2Fcd30012.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcd%2Fcd30012.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -0,0 +1,173 @@\n+-- CD30012.A\n+\n+--                             Grant of Unlimited Rights\n+--\n+--     The Ada Conformity Assessment Authority (ACAA) holds unlimited\n+--     rights in the software and documentation contained herein. Unlimited\n+--     rights are the same as those granted by the U.S. Government for older\n+--     parts of the Ada Conformity Assessment Test Suite, and are defined\n+--     in DFAR 252.227-7013(a)(19). By making this public release, the ACAA\n+--     intends to confer upon all recipients unlimited rights equal to those\n+--     held by the ACAA. These rights include rights to use, duplicate,\n+--     release or disclose the released technical data and computer software\n+--     in whole or in part, in any manner and for any purpose whatsoever, and\n+--     to have or permit others to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--\n+--                                     Notice\n+--\n+--     The ACAA has created and maintains the Ada Conformity Assessment Test\n+--     Suite for the purpose of conformity assessments conducted in accordance\n+--     with the International Standard ISO/IEC 18009 - Ada: Conformity\n+--     assessment of a language processor. This test suite should not be used\n+--     to make claims of conformance unless used in accordance with\n+--     ISO/IEC 18009 and any applicable ACAA procedures.\n+--\n+--*\n+-- OBJECTIVE:\n+--     Check that a size specification can be given by an attribute definition\n+--     clause for an integer type:\n+--        * in the visible or private part of a package for a type declared\n+--          in the visible part;\n+--        * for a derived integer type;\n+--        * for a derived private type whose full declaration is an\n+--          integer type.\n+--\n+-- TEST DESCRIPTION:\n+--     This test was created from legacy tests CD1009B and CD2A31C. The\n+--     objective of CD1009B was also an objective of CD30012; the tests\n+--     were merged to eliminate duplication and add appropriate applicability\n+--     criteria.\n+--\n+-- APPLICABILITY CRITERIA:\n+--     All implementations must attempt to compile this test.\n+--\n+--     For implementations validating against Systems Programming Annex (C):\n+--        this test must execute and report PASSED.\n+--\n+--     or implementations not validating against Annex C:\n+--        this test may report compile time errors at one or more points\n+--        indicated by \"-- ANX-C RQMT\", in which case it may be graded as\n+--        inapplicable. Otherwise, the test must execute and report PASSED.\n+--\n+-- CHANGE HISTORY:\n+--      17 Jun 87  PWB  Created original test CD2A31C.\n+--      09 Sep 87  VCL  Created original test CD1009A.\n+--      06 Apr 89  DHH  Changed extension from '.DEP' TO '.ADA', changed\n+--                      size clause value to 9, and added representation\n+--                      clause check and included test for for integer in a\n+--                      generic unit.\n+--      27 Mar 92  JRL  Removed testing of nonobjective types.\n+--      17 Jun 92  DTN  Removed the length clause for type Private_Int.\n+--      29 Mar 17  RLB  Created test from CD2A31C and CD1009A; reformatted\n+--                      to \"modern\" standards, added applicability criteria,\n+--                      removed nonobjective packed array.\n+\n+with Report; use Report;\n+with Length_Check;                      -- Contains a call to 'Failed'.\n+procedure CD30012 is\n+\n+   type Basic_Int is range -60 .. 80;\n+   Specified_Size : constant := 9;\n+\n+   type Derived_Int is new Basic_Int;\n+   for Derived_Int'Size use Specified_Size;                   -- ANX-C RQMT.\n+\n+   package P is\n+      type Int_in_P is range -125 .. 125;\n+      for Int_in_P'Size use Specified_Size;                   -- ANX-C RQMT.\n+      type Private_Int is private;\n+      type Alt_Int_in_P is range -125 .. 125;\n+   private\n+      type Private_Int is range -125 .. 125;\n+      for Alt_Int_in_P'Size use Specified_Size;               -- ANX-C RQMT.\n+   end P;\n+\n+   use P;\n+   type Derived_Private_Int is new Private_Int;\n+   for Derived_Private_Int'Size use Specified_Size;           -- ANX-C RQMT.\n+   Minimum_Size : Integer := Report.Ident_Int (Specified_Size);\n+\n+   -- Size specification given in a generic procedure:\n+\n+   generic\n+   procedure Genproc;\n+\n+   procedure Genproc is\n+      type Check_Int is range -125 .. 125;\n+      for Check_Int'Size use Specified_Size;                  -- ANX-C RQMT.\n+\n+      procedure Check_4 is new Length_Check (Check_Int);\n+\n+   begin\n+\n+      if Check_Int'Size /= Minimum_Size then\n+         Failed (\"Generic Check_Int'Size is incorrect\");\n+      end if;\n+      Check_4 (-60, 9, \"generic Check_Int\");\n+\n+   end Genproc;\n+\n+   procedure Newproc is new Genproc;\n+\n+   procedure Check_1 is new Length_Check (Derived_Int);\n+   procedure Check_2 is new Length_Check (Int_in_P);\n+   procedure Check_3 is new Length_Check (Alt_Int_in_P);\n+\n+   Obj1 : Int_in_P := 92;\n+   Obj2 : Alt_Int_in_P := 52;\n+\n+begin\n+\n+   Report.Test (\"CD30012\", \"Check that 'Size attribute definition clauses \" &\n+                           \"can be given in the visible or private part \" &\n+                           \"of a package for integer types declared \" &\n+                           \"declared in the visible part, and for derived \" &\n+                           \"integer types and derived private types \" &\n+                           \"whose full declarations are as integer types\");\n+\n+   Check_1 (-60, 9, \"Derived_Int\");\n+   Check_2 (-60, 9, \"Int_in_P\");\n+   Check_3 (-60, 9, \"Alt_Int_in_P\");\n+   Check_2 (Obj1, 9, \"Int_in_P\");\n+   Check_3 (Obj2, 9, \"Alt_Int_in_P\");\n+\n+   Newproc;\n+\n+   if Derived_Int'Size /= Minimum_Size then\n+        Failed (\"Derived_Int'Size incorrect\");\n+   end if;\n+\n+   if Int_in_P'Size /= Minimum_Size then\n+        Failed (\"Int_in_P'Size incorrect\");\n+   end if;\n+\n+   if Alt_Int_in_P'Size /= Minimum_Size then\n+        Failed (\"Alt_Int_in_P'Size incorrect\");\n+   end if;\n+\n+   if Derived_Private_Int'Size /= Minimum_Size then\n+        Failed (\"Derived_Private_Int'Size incorrect\");\n+   end if;\n+\n+   if Obj1'Size < Specified_Size then\n+      Failed (\"Object'Size is too small --\" &\n+              Int_in_P'Image (Obj1));\n+   end if;\n+\n+   if Obj2'Size < Specified_Size then\n+      Failed (\"Object'Size is too small --\" &\n+              Alt_Int_in_P'Image (Obj2));\n+   end if;\n+\n+   Report.Result;\n+\n+end CD30012;"}, {"sha": "3f3bd8901528e89b2b4c7fdf726728b10c63aa66", "filename": "gcc/testsuite/ada/acats/tests/cd/cd90001.a", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcd%2Fcd90001.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcd%2Fcd90001.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcd%2Fcd90001.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -3,34 +3,34 @@\n --                             Grant of Unlimited Rights\n --\n --     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n---     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained\n --     unlimited rights in the software and documentation contained herein.\n---     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n---     this public release, the Government intends to confer upon all \n---     recipients unlimited rights  equal to those held by the Government.  \n---     These rights include rights to use, duplicate, release or disclose the \n---     released technical data and computer software in whole or in part, in \n---     any manner and for any purpose whatsoever, and to have or permit others \n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making\n+--     this public release, the Government intends to confer upon all\n+--     recipients unlimited rights  equal to those held by the Government.\n+--     These rights include rights to use, duplicate, release or disclose the\n+--     released technical data and computer software in whole or in part, in\n+--     any manner and for any purpose whatsoever, and to have or permit others\n --     to do so.\n --\n --                                    DISCLAIMER\n --\n --     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n---     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n --     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n---     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n --     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n --     PARTICULAR PURPOSE OF SAID MATERIAL.\n --*\n --\n -- OBJECTIVE:\n --      Check that Unchecked_Conversion is supported and is reversible in\n --      the cases where:\n---        Source'Size = Target'Size                            \n---        Source'Alignment = Target'Alignment                  \n---        Source and Target are both represented contiguously  \n+--        Source'Size = Target'Size\n+--        Source'Alignment = Target'Alignment\n+--        Source and Target are both represented contiguously\n --        Bit pattern in Source is a meaningful value of Target type\n---                                                             \n+--\n -- TEST DESCRIPTION:\n --      This test declares an enumeration type with a representation\n --      specification that should fit neatly into an 8 bit object; and a\n@@ -61,6 +61,7 @@\n --      27 JUL 96   SAIC   Allowed for partial N/A to be PASS\n --      14 FEB 97   PWB.CTA  Corrected \"=\" to \"/=\" in alignment check.\n --      16 FEB 98   EDS    Modified documentation.\n+--      21 DEC 05   RLB    Corrected \"=\" to \"/=\" in other alignment check.\n --!\n \n ----------------------------------------------------------------- CD90001_0\n@@ -136,7 +137,7 @@ package body CD90001_0 is\n         Report.Failed (\"EU => EB conversion failed\");\n       end if;\n \n-    end loop; \n+    end loop;\n   end TC_Check_Case_1;\n \n   procedure TC_Check_Case_2 is\n@@ -209,7 +210,7 @@ begin  -- Main test procedure.\n       Report.Comment(\"The sizes of the 16 bit types used in this test \"\n                             & \"do not match\" );\n       Sixteen_NA := True;\n-    elsif CD90001_0.Signed_16'Alignment = CD90001_0.Bits_16'Alignment then\n+    elsif CD90001_0.Signed_16'Alignment /= CD90001_0.Bits_16'Alignment then\n       Report.Comment(\"The alignments of the 16 bit types used in this \"\n                             & \"test do not match\" );\n       Sixteen_NA := True;"}, {"sha": "ed2023e37e535162ca12bf102c87339549698e55", "filename": "gcc/testsuite/ada/acats/tests/cxa/cxa3004.a", "status": "added", "additions": 235, "deletions": 0, "changes": 235, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxa%2Fcxa3004.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxa%2Fcxa3004.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxa%2Fcxa3004.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -0,0 +1,235 @@\n+-- CXA3004.A\n+--\n+--                             Grant of Unlimited Rights\n+--\n+--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n+--     unlimited rights in the software and documentation contained herein.\n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n+--     this public release, the Government intends to confer upon all \n+--     recipients unlimited rights  equal to those held by the Government.  \n+--     These rights include rights to use, duplicate, release or disclose the \n+--     released technical data and computer software in whole or in part, in \n+--     any manner and for any purpose whatsoever, and to have or permit others \n+--     to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--*\n+--\n+-- OBJECTIVE:\n+--      Check that the functions defined in package Ada.Characters.Handling\n+--      for classification of and conversion between Wide_Character and\n+--      Character values produce correct results when given the appropriate\n+--      Character and String inputs.\n+--\n+-- TEST DESCRIPTION:\n+--      This test demonstrates the functions defined in package \n+--      Ada.Characters.Handling which provide for the classification of and \n+--      conversion between Wide_Characters and Characters, in character \n+--      variables and strings.\n+--      Each of the functions is provided with input values that are of the \n+--      appropriate range. The results of the function processing are \n+--      subsequently evaluated.\n+--      \n+-- APPLICABILITY CRITERIA: \n+--      Applicable to all implementations using the Latin_1 set as the\n+--      definition of Character.\n+--\n+--       \n+-- CHANGE HISTORY:\n+--      06 Dec 94   SAIC    ACVC 2.0\n+--      27 Dec 94   SAIC    Corrected variable names.\n+--\n+--!\n+\n+with Report;\n+with Ada.Characters.Handling;\n+\n+procedure CXA3004 is\n+begin\n+\n+   Report.Test (\"CXA3004\", \"Check that the functions defined in package \"  &\n+                           \"Ada.Characters.Handling for classification \"   &\n+                           \"of and conversion between Wide_Character and \" &\n+                           \"Character values produce correct results \"     &\n+                           \"when given the appropriate Character \"         &\n+                           \"and String inputs\");\n+\n+   Test_Block:\n+   declare\n+\n+      package ACH renames Ada.Characters.Handling;\n+\n+      Char_End      : Integer        := 255;\n+      WC_Start      : Integer        := 256;\n+      Sub_Char      : Character      := '*';\n+\n+      Blank         : Character      := ' ';\n+      First_Char    : Character      := Character'First;\n+      Last_Char     : Character      := Character'Last;\n+      F_Char        : Character      := 'F';\n+\n+\n+      First_Wide_Char        : Wide_Character := Wide_Character'First;\n+      Last_Non_Wide_Char     : Wide_Character := Wide_Character'Val(Char_End);\n+      First_Unique_Wide_Char : Wide_Character := Wide_Character'Val(WC_Start);\n+      Last_Wide_Char         : Wide_Character := Wide_Character'Last;\n+\n+      A_String      : String (1..3)      := First_Char & 'X' & Last_Char;\n+      A_Wide_String : Wide_String (1..3) := First_Wide_Char            & \n+                                            ACH.To_Wide_Character('X') & \n+                                            ACH.To_Wide_Character(Last_Char);\n+\n+      Unique_Wide_String : Wide_String (1..2) := First_Unique_Wide_Char &\n+                                                 Last_Wide_Char;\n+\n+      Mixed_Wide_String  : Wide_String (1..6) := ACH.To_Wide_Character('A') & \n+                                                 First_Wide_Char            &\n+                                                 Last_Non_Wide_Char         & \n+                                                 First_Unique_Wide_Char     & \n+                                                 Last_Wide_Char             &\n+                                                 ACH.To_Wide_Character('Z');\n+\n+\n+      Basic_Char         : Character          := 'A';\n+      Basic_Wide_Char    : Wide_Character     := 'A';\n+      Basic_String       : String (1..6)      := \"ABCXYZ\";\n+      Basic_Wide_String  : Wide_String (1..6) := \"ABCXYZ\";\n+\n+   begin\n+\n+\n+      -- Function Is_Character\n+\n+\n+      if not ACH.Is_Character(First_Wide_Char) then\n+         Report.Failed (\"Incorrect result from Is_Character - 1\");\n+      end if;\n+\n+\n+      if ACH.Is_Character(First_Unique_Wide_Char) or        \n+         ACH.Is_Character(Last_Wide_Char)\n+      then\n+         Report.Failed (\"Incorrect result from Is_Character - 2\");\n+      end if;\n+       \n+\n+      -- Function Is_String\n+\n+\n+      if not ACH.Is_String(A_Wide_String) then\n+         Report.Failed (\"Incorrect result from Is_String - 1\");\n+      end if;\n+\n+\n+      if ACH.Is_String(Unique_Wide_String) or\n+         ACH.Is_String(Mixed_Wide_String)\n+      then\n+         Report.Failed (\"Incorrect result from Is_String - 2\");\n+      end if;\n+      \n+\n+      -- Function To_Character\n+\n+\n+      -- Use default substitution character in call of To_Character.\n+\n+      if ACH.To_Character(First_Wide_Char)    /= First_Char or \n+         ACH.To_Character(Last_Non_Wide_Char) /= Last_Char\n+      then\n+         Report.Failed (\"Incorrect result from To_Character - 1\");\n+      end if;\n+\n+\n+      -- Provide a substitution character for use with To_Character.\n+\n+      if ACH.To_Character(First_Unique_Wide_Char, Blank)    /= Blank    or\n+         ACH.To_Character(First_Unique_Wide_Char, Sub_Char) /= Sub_Char or\n+         ACH.To_Character(Last_Wide_Char)                   /= ' '  -- default\n+      then\n+         Report.Failed (\"Incorrect result from To_Character - 2\");\n+      end if;\n+\n+\n+      -- Function To_String\n+\n+\n+      if ACH.To_String(A_Wide_String) /=  A_String then\n+         Report.Failed (\"Incorrect result from To_String - 1\");\n+      end if;\n+\n+     \n+      if ACH.To_String(Unique_Wide_String, Sub_Char) /= \"**\" then\n+         Report.Failed (\"Incorrect result from To_String - 2\");\n+      end if;\n+\n+\n+\n+      if ACH.To_String(Mixed_Wide_String,  Sub_Char) /= \n+         ('A' & First_Char & Last_Char & \"**\" & 'Z')   or\n+         ACH.To_String(Mixed_Wide_String,  Sub_Char) /= \n+         (ACH.To_Character(Mixed_Wide_String(1), Sub_Char) &\n+          ACH.To_Character(Mixed_Wide_String(2), Sub_Char) &\n+          ACH.To_Character(Mixed_Wide_String(3), Sub_Char) &\n+          ACH.To_Character(Mixed_Wide_String(4), Sub_Char) &\n+          ACH.To_Character(Mixed_Wide_String(5), Sub_Char) &\n+          ACH.To_Character(Mixed_Wide_String(6), Sub_Char)) \n+      then\n+         Report.Failed (\"Incorrect result from To_String - 3\");\n+      end if;\n+\n+\n+      -- Function To_Wide_Character\n+\n+\n+      if ACH.To_Wide_Character(Basic_Char) /= Basic_Wide_Char then\n+         Report.Failed (\"Incorrect result from To_Wide_Character\");\n+      end if;\n+\n+    \n+      -- Function To_Wide_String\n+\n+\n+      if not (ACH.To_Wide_String(Basic_String) = Basic_Wide_String) then\n+         Report.Failed (\"Incorrect result from To_Wide_String\");\n+      end if;\n+\n+\n+      -- Functions Used In Combination\n+\n+      if not ACH.Is_Character (ACH.To_Wide_Character (\n+        ACH.To_Character(First_Wide_Char))) \n+      then\n+         Report.Failed (\"Incorrect result from functions in combination - 1\");\n+      end if;\n+\n+\n+      if not ACH.Is_String(ACH.To_Wide_String(ACH.To_String(A_Wide_String)))\n+      then\n+         Report.Failed (\"Incorrect result from functions in combination - 2\");\n+      end if;\n+\n+\n+      if ACH.To_String(ACH.To_Wide_Character('A')    &\n+                       ACH.To_Wide_Character(F_Char) &\n+                       ACH.To_Wide_Character('Z'))     /=  \"AFZ\"\n+      then\n+         Report.Failed (\"Incorrect result from functions in combination - 3\");\n+      end if;\n+         \n+\n+   exception\n+      when others => Report.Failed (\"Exception raised in Test_Block\");\n+   end Test_Block;\n+\n+\n+   Report.Result;\n+\n+end CXA3004;"}, {"sha": "fe5b6e2ab9365c2dc80537233547ff0adddf06d6", "filename": "gcc/testsuite/ada/acats/tests/cxa/cxa5013.a", "status": "added", "additions": 326, "deletions": 0, "changes": 326, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxa%2Fcxa5013.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxa%2Fcxa5013.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxa%2Fcxa5013.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -0,0 +1,326 @@\n+-- CXA5013.A\n+--\n+--                             Grant of Unlimited Rights\n+--\n+--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n+--     unlimited rights in the software and documentation contained herein.\n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n+--     this public release, the Government intends to confer upon all \n+--     recipients unlimited rights  equal to those held by the Government.  \n+--     These rights include rights to use, duplicate, release or disclose the \n+--     released technical data and computer software in whole or in part, in \n+--     any manner and for any purpose whatsoever, and to have or permit others \n+--     to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--*\n+--\n+-- OBJECTIVE:\n+--      Check that a discrete random number generator will yield each value\n+--      in its result subtype in a finite number of calls, provided that\n+--      the number of such values does not exceed 2**15.\n+--      \n+-- TEST DESCRIPTION:\n+--      This test demonstrates certain capabilities of the random number \n+--      generator packages in Ada.Numerics.  A generic subprogram is\n+--      defined that will be instantiated to produce a total of two test\n+--      subprograms.\n+--      The area examined by this test is the production of random values \n+--      over a discrete range.  A generic procedure is instantiated with\n+--      an instance of the Discrete_Random package, once for an integer type,\n+--      and once for an enumeration type.  The test procedure performs a \n+--      test run, generating a specific number of random numbers over the \n+--      range of the type.  If this run did not generate each of the values\n+--      in the type range, an asynchronous select statement is invoked.  This\n+--      select statement has a trigger statement delay for a specific \n+--      (implementation defined) amount of time during which additional test\n+--      runs will be performed.  \n+--      At the end of each run in this test, an evaluation is made to \n+--      determine if each value in the range of possible values have been \n+--      generated.  At the conclusion of the runs, or if the specified test\n+--      delay time expires, the test is concluded with  a status value\n+--      returned from the test procedure.  An implementation is given three\n+--      completely separate opportunities to run the test successfully, and \n+--      if at the conclusion of all of these tests no successful result has \n+--      been returned, the test is considered failed.\n+--      \n+--       \n+-- CHANGE HISTORY:\n+--      27 Apr 95   SAIC    Initial prerelease version.\n+--\n+--!\n+\n+with Ada.Numerics.Discrete_Random;\n+with ImpDef;\n+with Report;\n+\n+procedure CXA5013 is\n+\n+begin\n+\n+   Report.Test (\"CXA5013\", \"Check that a discrete random number generator \" &\n+                           \"will yield each value in its result subtype \"   &\n+                           \"in a finite number of calls\");\n+\n+   Test_Block:\n+   declare\n+\n+      use Ada.Numerics;\n+\n+      -- The following constant designed into the test creates a high \n+      -- probability that a random series of numbers will satisfy the \n+      -- requirements. Occasionally, even a random series of numbers \n+      -- will fail.  In such a case, the test will reset the random \n+      -- number generator and rerun the test conditions.  This constant\n+      -- determines how many times the random number generator will be\n+      -- reset before any individual test run is failed.\n+\n+      TC_Max_Random_Test_Runs       : constant :=    3;\n+\n+      -- The following constant will ensure that multiple attempts of the\n+      -- complete set of tests are performed in the event of a failure of \n+      -- a set of test runs.\n+\n+      TC_Finite_Number_Of_Tests : constant :=    3;\n+\n+\n+      TC_Test_Run               : Integer  :=    0;\n+      TC_Success                : Boolean  := False;\n+      TC_Trials_Per_Test        : Integer  := 1500;\n+\n+      type Enum_Type         is (One, Two, Three, Four, Five, Six, Seven);\n+      type Discrete_Type     is range 1..100;\n+\n+\n+      package Enum_Pack      is new Discrete_Random(Enum_Type);\n+      package Discrete_Pack  is \n+        new Discrete_Random(Result_Subtype => Discrete_Type);\n+\n+\n+\n+      --\n+      -- Definition of generic Random_Test procedure, which will be \n+      -- instantiated for both an integer type and an enumeration type.\n+      --\n+\n+      generic\n+         with package Gen_Pack is new Ada.Numerics.Discrete_Random (<>);\n+      procedure Random_Test (Trials_Per_Test : in     Integer;\n+                             Success         :    out Boolean); \n+\n+\n+      procedure Random_Test (Trials_Per_Test : in     Integer;\n+                             Success         :    out Boolean) is\n+         Total_Runs               : Integer  := 0;\n+         Total_Trials             : Integer  := 0;\n+         Total_Attempts_This_Test : Integer  := 0;\n+         Random_Array             : array (Gen_Pack.Result_Subtype) \n+                                      of Boolean := (others => False);\n+         Gen                      : Gen_Pack.Generator;\n+\n+         function All_Values_Present return Boolean is\n+            Result : Boolean := True;\n+         begin\n+            for i in Gen_Pack.Result_Subtype'Range loop\n+               if not Random_Array(i) then \n+                  Result := False; \n+                  exit;\n+               end if;\n+            end loop;\n+            return Result;\n+         end All_Values_Present;\n+\n+      begin\n+\n+         Success := False;     -- Initialized to failure prior to test.\n+         Gen_Pack.Reset(Gen);  -- Perform a time-dependent reset.\n+\n+         -- Guarantee that a specific minimum number of trials are performed\n+         -- prior to the timer being set.\n+\n+         for i in 1..Trials_Per_Test loop\n+            -- Set array element to True when a particular array\n+            -- index is generated by the random number generator.\n+            Random_Array(Gen_Pack.Random(Gen)) := True;\n+         end loop;\n+\n+         if All_Values_Present then\n+\n+            Success := True;  -- Test was successful, exit procedure with no\n+                              -- further testing performed.\n+         else\n+\n+            -- Initial test above was unsuccessful, so set a timer and perform\n+            -- additional trials to determine if all values in the discrete\n+            -- range will be produced.\n+\n+            select\n+\n+               -- This asynchronous select has a triggering statement which\n+               -- is a delay statement, set to an implementation defined \n+               -- number of seconds for any particular test to execute.  \n+               -- The point here is to allow the implementation to decide \n+               -- how long to run this test in order to generate an \n+               -- appropriate (i.e., correct) sample from the Random Number\n+               -- Generator.\n+\n+               delay ImpDef.Delay_Per_Random_Test;  -- Delay per test.\n+\n+               -- If, after expiration of delay, the random number generator\n+               -- has generated all values within the range at least once,\n+               -- then the result is success; otherwise, a comment is output\n+               -- to indicate that the random number generator was \n+               -- unsuccessful in this series of test runs.\n+\n+               if All_Values_Present then\n+                  Success := True;\n+               else\n+                  Total_Attempts_This_Test := \n+                    Total_Runs * Trials_Per_Test + Total_Trials;\n+                  Report.Comment\n+                    (\"Not all numbers within the Range were produced in \" &\n+                     Integer'Image(\n+                       Integer(ImpDef.Delay_Per_Random_Test*1000.0))      &\n+                     \" milliseconds or in \"                               &\n+                     Integer'Image(Total_Attempts_This_Test)              &\n+                     \" trials during this test\");\n+               end if;\n+\n+            then abort\n+\n+               -- After setting the triggering statement above, the execution\n+               -- of this abortable part is begun.\n+               -- This loop continues until either a) every value has been\n+               -- produced or b) the triggering statement times out.\n+\n+               Total_Runs := 1;\n+\n+               Test_Loop:  -- This loop continues until a test run is\n+               loop        -- successful, the test run limit has been reached, \n+                           -- or the triggering statement times-out above.\n+\n+                  Total_Trials := 0;\n+\n+                  for i in 1..Trials_Per_Test loop\n+                     Total_Trials := i; -- Used above if triggering statement\n+                                        -- completes prior to test completion.\n+\n+                     -- Set array element to True when a particular array\n+                     -- index is generated by the random number generator.\n+\n+                     Random_Array(Gen_Pack.Random(Gen)) := True;\n+\n+                  end loop;\n+\n+                  -- At the conclusion of a complete series of trials, the\n+                  -- following evaluation is performed to determine whether\n+                  -- the test run was successful, or whether an additional\n+                  -- test run should be re-attempted.\n+\n+                  if All_Values_Present then\n+                     Success := True;\n+                     exit Test_Loop;\n+                  elsif Total_Runs = TC_Max_Random_Test_Runs then\n+                     Report.Comment\n+                       (\"Not all numbers in the Range were produced in \" &\n+                        Integer'Image(Total_Runs*Trials_Per_Test) &\n+                        \" individual trials during this test\");\n+                     exit Test_Loop;\n+                  else\n+                     Total_Runs := Total_Runs + 1;\n+                  end if;\n+\n+               end loop Test_Loop;\n+            end select;\n+         end if;\n+      end Random_Test;\n+\n+\n+\n+      -- Instantiation of test procedures.\n+\n+      procedure Discrete_Random_Test    is new Random_Test(Discrete_Pack);\n+      procedure Enumeration_Random_Test is new Random_Test(Enum_Pack);\n+\n+\n+   begin\n+\n+      -- Make a series of test runs, checking to ensure that discrete \n+      -- random number generators produce each value in their result subtype\n+      -- within a finite number of calls.  In each case, if the first test\n+      -- is not successful, another attempt is made, after a time-dependent\n+      -- reset, up to a total of 3 runs.  This allows an implementation \n+      -- multiple opportunities to pass the test successfully.\n+      -- Note: The odds of getting all 100 integer values in 1500 trials are\n+      --       greater than 99.997 percent, confirmed by Monte Carlo \n+      --       simulation.\n+\n+\n+\n+      -- Run the Random_Test for an integer discrete random number generator.\n+\n+      TC_Test_Run := 0;\n+      TC_Success  := False;\n+      while TC_Test_Run < TC_Finite_Number_Of_Tests and \n+            not TC_Success \n+      loop\n+         TC_Test_Run := TC_Test_Run + 1;            -- Increment test counter.\n+         Discrete_Random_Test (TC_Trials_Per_Test,  -- Perform test.\n+                               TC_Success); \n+         -- Increment the number of trials that will be performed\n+         -- in the next test by 50%.\n+         TC_Trials_Per_Test := TC_Trials_Per_Test + TC_Trials_Per_Test/2 ;\n+      end loop;\n+\n+      if not TC_Success then\n+         Report.Failed(\"Random_Test was run \" & Integer'Image(TC_Test_Run) &\n+                       \" times, but a successful result was not recorded \" &\n+                       \"from any run using the integer discrete random \"   &\n+                       \"number generator\");\n+      end if;\n+\n+\n+\n+      -- Run the Random_Test for an enumeration type random number generator.\n+\n+      -- Note: The odds of getting all seven enumeration values in 100 \n+      --       trials are greater than 99.997 percent, confirmed by Monte\n+      --       Carlo simulation.\n+\n+      TC_Test_Run        := 0;\n+      TC_Trials_Per_Test := 100;\n+      TC_Success         := False;\n+      while TC_Test_Run < TC_Finite_Number_Of_Tests and \n+            not TC_Success \n+      loop\n+         TC_Test_Run := TC_Test_Run + 1;\n+         Enumeration_Random_Test (TC_Trials_Per_Test,\n+                                  TC_Success); \n+         -- Increment the number of trials that will be performed\n+         -- in the next test by 50%.\n+         TC_Trials_Per_Test := TC_Trials_Per_Test + TC_Trials_Per_Test/2 ;\n+      end loop;\n+\n+      if not TC_Success then\n+         Report.Failed(\"Random_Test was run \" & Integer'Image(TC_Test_Run) &\n+                       \" times, but a successful result was not recorded \" &\n+                       \"from any run using the enumeration random number \" &\n+                       \"generator\");\n+      end if;\n+\n+\n+   exception\n+      when others => Report.Failed (\"Exception raised in Test_Block\");\n+   end Test_Block;\n+\n+   Report.Result;\n+\n+end CXA5013;"}, {"sha": "50323576ac6a45244f8c6015746eac6b5a7f5f40", "filename": "gcc/testsuite/ada/acats/tests/cxa/cxac005.a", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxa%2Fcxac005.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxa%2Fcxac005.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxa%2Fcxac005.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -31,6 +31,7 @@\n --    12 FEB 2001   PHL   Initial version.\n --    14 MAR 2001   RLB   Readied for release; fixed Not_Applicable check\n --                        to terminate test gracefully.\n+--    05 MAR 2007   RLB   Updated to avoid problems with return-by-reference.\n --\n --!\n with Ada.Streams.Stream_Io;\n@@ -53,7 +54,6 @@ procedure CXAC005 is\n     package Checked_Stream_Io is\n \n         type File_Type (Max_Size : Stream_Element_Count) is limited private;\n-        function Stream_Io_File (File : File_Type) return Stream_Io.File_Type;\n \n         procedure Create (File : in out File_Type;\n                           Mode : in Stream_Io.File_Mode := Stream_Io.Out_File;\n@@ -93,6 +93,8 @@ procedure CXAC005 is\n \n         function Index (File : in File_Type) return Stream_Io.Positive_Count;\n \n+        function Size (File : in File_Type) return Stream_Io.Count;\n+\n         procedure Set_Mode (File : in out File_Type;\n                             Mode : in Stream_Io.File_Mode);\n \n@@ -111,11 +113,6 @@ procedure CXAC005 is\n \n         use Stream_Io;\n \n-        function Stream_Io_File (File : File_Type) return Stream_Io.File_Type is\n-        begin\n-            return File.File;\n-        end Stream_Io_File;\n-\n         procedure Create (File : in out File_Type;\n                           Mode : in Stream_Io.File_Mode := Stream_Io.Out_File;\n                           Name : in String := \"\";\n@@ -244,6 +241,13 @@ procedure CXAC005 is\n             return New_Index;\n         end Index;\n \n+        function Size (File : in File_Type) return Stream_Io.Count is\n+            New_Size : constant Count := Stream_Io.Size (File.File);\n+        begin\n+            TC_Assert (New_Size <= Count(File.Max_Size), \"File too large\");\n+            return New_Size;\n+        end Size;\n+\n         procedure Set_Mode (File : in out File_Type;\n                             Mode : in Stream_Io.File_Mode) is\n             Old_Index : constant Count := File.Index;\n@@ -268,7 +272,8 @@ procedure CXAC005 is\n \n begin\n \n-    Test (\"CXAC005\", \"Check that stream file positioning work as specified\");\n+    Report.Test (\"CXAC005\",\n+                 \"Check that stream file positioning work as specified\");\n \n     declare\n         Name : constant String := Legal_File_Name;\n@@ -320,8 +325,7 @@ begin\n         -- Check the contents of the entire file.\n         declare\n             S : Stream_Element_Array\n-                   (1 .. Stream_Element_Offset\n-                            (Stream_Io.Size (Csio.Stream_Io_File (F))));\n+                   (1 .. Stream_Element_Offset (Csio.Size (F)));\n         begin\n             Csio.Reset (F, Stream_Io.In_File);\n             Csio.Read (F, S, Last);\n@@ -330,7 +334,7 @@ begin\n         Csio.Delete (F);\n     end;\n \n-    Result;\n+    Report.Result;\n exception\n    when Incomplete =>\n       Report.Result;"}, {"sha": "d31345a8eb1291bcbae072b23dc808c57054ec11", "filename": "gcc/testsuite/ada/acats/tests/cxb/cxb30061.am", "status": "added", "additions": 404, "deletions": 0, "changes": 404, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxb%2Fcxb30061.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxb%2Fcxb30061.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxb%2Fcxb30061.am?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -0,0 +1,404 @@\n+-- CXB30061.AM\n+--\n+--                             Grant of Unlimited Rights\n+--\n+--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained\n+--     unlimited rights in the software and documentation contained herein.\n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making\n+--     this public release, the Government intends to confer upon all\n+--     recipients unlimited rights  equal to those held by the Government.\n+--     These rights include rights to use, duplicate, release or disclose the\n+--     released technical data and computer software in whole or in part, in\n+--     any manner and for any purpose whatsoever, and to have or permit others\n+--     to do so.\n+--\n+--                                    DISCLAIMER\n+--\n+--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n+--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n+--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n+--     PARTICULAR PURPOSE OF SAID MATERIAL.\n+--*\n+--\n+-- OBJECTIVE:\n+--      Check that the function To_C maps between the Ada type Wide_Character\n+--      and the C type wchar_t.\n+--\n+--      Check that the function To_Ada maps between the C type wchar_t and\n+--      the Ada type Wide_Character.\n+--\n+--      Check that the function Is_Nul_Terminated returns True if the\n+--      wchar_array parameter contains wide_nul, and otherwise False.\n+--\n+--      Check that the function To_C produces a correct wchar_array result,\n+--      with lower bound of 0, and length dependent upon the Item and\n+--      Append_Nul parameters.\n+--\n+--      Check that the function To_Ada produces a correct wide_string result,\n+--      with lower bound of 1, and length dependent upon the Item and\n+--      Trim_Nul parameters.\n+--\n+--      Check that the function To_Ada raises Terminator_Error if the\n+--      parameter Trim_Nul is set to True, but the actual Item parameter\n+--      does not contain the wide_nul wchar_t.\n+--\n+-- TEST DESCRIPTION:\n+--      This test uses a variety of Wide_Character, wchar_t, Wide_String, and\n+--      wchar_array objects to test versions of the To_C, To_Ada, and\n+--      Is_Nul_Terminated functions.\n+--\n+--      This test assumes that the following characters are all included\n+--      in the implementation defined type Interfaces.C.wchar_t:\n+--      ' ', ',', '.', '0'..'9', 'a'..'z' and 'A'..'Z'.\n+--\n+-- APPLICABILITY CRITERIA:\n+--      This test is applicable to all implementations that provide\n+--      package Interfaces.C.  If an implementation provides\n+--      package Interfaces.C, this test must compile, execute, and\n+--      report \"PASSED\".\n+--\n+-- SPECIAL REQUIREMENTS:\n+--      The file CXB30060.C must be compiled with a C compiler.\n+--      Implementation dialects of C may require alteration of\n+--      the C program syntax (see individual C files).\n+--\n+--      Note that the compiled C code must be bound with the compiled Ada\n+--      code to create an executable image.  An implementation must provide\n+--      the necessary commands to accomplish this.\n+--\n+--      Note that the C code included in CXB30060.C conforms\n+--      to ANSI-C.  Modifications to these files may be required for other\n+--      C compilers.  An implementation must provide the necessary\n+--      modifications to satisfy the function requirements.\n+--\n+-- TEST FILES:\n+--      The following files comprise this test:\n+--\n+--         CXB30060.C\n+--         CXB30061.AM\n+--\n+-- CHANGE HISTORY:\n+--      07 Sep 95   SAIC    Initial prerelease version.\n+--      09 May 96   SAIC    Incorporated reviewer comments for ACVC 2.1.\n+--      13 Sep 99   RLB     Replaced (bogus) Unchecked_Conversions with a\n+--                          C function character generator.\n+--\n+--!\n+\n+with Report;\n+with Interfaces.C;                                            -- N/A => ERROR\n+with Ada.Characters.Latin_1;\n+with Ada.Characters.Handling;\n+with Ada.Exceptions;\n+with Ada.Strings.Wide_Fixed;\n+with Impdef;\n+\n+procedure CXB30061 is\n+begin\n+\n+   Report.Test (\"CXB3006\", \"Check that the functions To_C and To_Ada \" &\n+                           \"produce correct results\");\n+\n+   Test_Block:\n+   declare\n+\n+      use Interfaces, Interfaces.C;\n+      use Ada.Characters, Ada.Characters.Latin_1, Ada.Characters.Handling;\n+      use Ada.Strings.Wide_Fixed;\n+\n+      First_Character,\n+      Last_Character  : Character;\n+      TC_wchar_t,\n+      TC_Low_wchar_t,\n+      TC_High_wchar_t : wchar_t           := wchar_t'First;\n+      TC_Wide_String  : Wide_String(1..8) := (others => Wide_Character'First);\n+      TC_wchar_array  : wchar_array(0..7) := (others => C.wide_nul);\n+\n+      -- The function Char_Gen returns a character corresponding to its\n+      -- argument.\n+      --     Value   0 ..  9 ==> '0' .. '9'\n+      --     Value  10 .. 19 ==> 'A' .. 'J'\n+      --     Value  20 .. 29 ==> 'k' .. 't'\n+      --     Value  30       ==> ' '\n+      --     Value  31       ==> '.'\n+      --     Value  32       ==> ','\n+\n+      function Char_Gen (Value   : in int) return wchar_t;\n+\n+      -- Use the user-defined C function char_gen as a completion to the\n+      -- function specification above.\n+\n+      pragma Import (Convention    => C,\n+                     Entity        => Char_Gen,\n+                     External_Name => Impdef.CXB30060_External_Name);\n+\n+   begin\n+\n+      -- Check that the functions To_C and To_Ada map between the Ada type\n+      -- Wide_Character and the C type wchar_t.\n+\n+      if To_C(To_Wide_Character(Ada.Characters.Latin_1.NUL)) /=\n+         Interfaces.C.wide_nul\n+      then\n+         Report.Failed(\"Incorrect result from To_C with NUL character input\");\n+      end if;\n+\n+      First_Character := Report.Ident_Char('k');\n+      Last_Character  := Report.Ident_Char('t');\n+      for i in First_Character..Last_Character loop\n+         if To_C(Item => To_Wide_Character(i)) /=\n+\t    Char_Gen(Character'Pos(i) - Character'Pos('k') + 20)\n+         then\n+            Report.Failed(\"Incorrect result from To_C with lower case \" &\n+                          \"alphabetic wide character input\");\n+         end if;\n+      end loop;\n+\n+      First_Character := Report.Ident_Char('A');\n+      Last_Character  := Report.Ident_Char('J');\n+      for i in First_Character..Last_Character loop\n+         if To_C(Item => To_Wide_Character(i)) /=\n+\t    Char_Gen(Character'Pos(i) - Character'Pos('A') + 10)\n+         then\n+            Report.Failed(\"Incorrect result from To_C with upper case \" &\n+                          \"alphabetic wide character input\");\n+         end if;\n+      end loop;\n+\n+      First_Character := Report.Ident_Char('0');\n+      Last_Character  := Report.Ident_Char('9');\n+      for i in First_Character..Last_Character loop\n+         if To_C(Item => To_Wide_Character(i)) /=\n+\t    Char_Gen(Character'Pos(i) - Character'Pos('0'))\n+         then\n+            Report.Failed(\"Incorrect result from To_C with digit \" &\n+                          \"wide character input\");\n+         end if;\n+      end loop;\n+\n+      if To_C(Item => To_Wide_Character(' ')) /= Char_Gen(30)\n+      then\n+            Report.Failed(\"Incorrect result from To_C with space \" &\n+                          \"wide character input\");\n+      end if;\n+\n+      if To_C(Item => To_Wide_Character('.')) /= Char_Gen(31)\n+      then\n+            Report.Failed(\"Incorrect result from To_C with dot \" &\n+                          \"wide character input\");\n+      end if;\n+\n+      if To_C(Item => To_Wide_Character(',')) /= Char_Gen(32)\n+      then\n+            Report.Failed(\"Incorrect result from To_C with comma \" &\n+                          \"wide character input\");\n+      end if;\n+\n+      if To_Ada(Interfaces.C.wide_nul) /=\n+         To_Wide_Character(Ada.Characters.Latin_1.NUL)\n+      then\n+         Report.Failed(\"Incorrect result from To_Ada with wide_nul \" &\n+                       \"wchar_t input\");\n+      end if;\n+\n+      for Code in int range\n+         int(Report.Ident_Int(20)) .. int(Report.Ident_Int(29)) loop\n+            -- 'k' .. 't'\n+         if To_Ada(Item => Char_Gen(Code)) /=\n+\t    To_Wide_Character(Character'Val (Character'Pos('k') + (Code - 20)))\n+         then\n+            Report.Failed(\"Incorrect result from To_Ada with lower case \" &\n+                          \"alphabetic wchar_t input\");\n+         end if;\n+      end loop;\n+\n+      for Code in int range\n+         int(Report.Ident_Int(10)) .. int(Report.Ident_Int(19)) loop\n+            -- 'A' .. 'J'\n+         if To_Ada(Item => Char_Gen(Code)) /=\n+\t    To_Wide_Character(Character'Val (Character'Pos('A') + (Code - 10)))\n+         then\n+            Report.Failed(\"Incorrect result from To_Ada with upper case \" &\n+                          \"alphabetic wchar_t input\");\n+         end if;\n+      end loop;\n+\n+      for Code in int range\n+         int(Report.Ident_Int(0)) .. int(Report.Ident_Int(9)) loop\n+            -- '0' .. '9'\n+         if To_Ada(Item => Char_Gen(Code)) /=\n+\t    To_Wide_Character(Character'Val (Character'Pos('0') + (Code)))\n+         then\n+            Report.Failed(\"Incorrect result from To_Ada with digit \" &\n+                          \"wchar_t input\");\n+         end if;\n+      end loop;\n+\n+      if To_Ada(Item => Char_Gen(30)) /= ' ' then\n+         Report.Failed(\"Incorrect result from To_Ada with space \" &\n+                       \"char input\");\n+      end if;\n+      if To_Ada(Item => Char_Gen(31)) /= '.' then\n+         Report.Failed(\"Incorrect result from To_Ada with dot \" &\n+                       \"char input\");\n+      end if;\n+      if To_Ada(Item => Char_Gen(32)) /= ',' then\n+         Report.Failed(\"Incorrect result from To_Ada with comma \" &\n+                       \"char input\");\n+      end if;\n+\n+      -- Check that the function Is_Nul_Terminated produces correct results\n+      -- whether or not the wchar_array argument contains the\n+      -- Ada.Interfaces.C.wide_nul character.\n+\n+      TC_Wide_String := \"abcdefgh\";\n+      if Is_Nul_Terminated(Item => To_C(TC_Wide_String, Append_Nul => False))\n+      then\n+         Report.Failed(\"Incorrect result from Is_Nul_Terminated when no \" &\n+                       \"wide_nul wchar_t is present\");\n+      end if;\n+\n+      if not Is_Nul_Terminated(To_C(TC_Wide_String, Append_Nul => True)) then\n+         Report.Failed(\"Incorrect result from Is_Nul_Terminated when the \" &\n+                       \"wide_nul wchar_t is present\");\n+      end if;\n+\n+\n+\n+      -- Now that we've tested the character/char versions of To_Ada and To_C,\n+      -- use them to test the string versions.\n+\n+      declare\n+         i                    : size_t  := 0;\n+         j                    : integer := 1;\n+         Incorrect_Conversion : Boolean := False;\n+\n+         TC_No_wide_nul       : constant wchar_array := To_C(TC_Wide_String,\n+                                                             False);\n+         TC_wide_nul_Appended : constant wchar_array := To_C(TC_Wide_String,\n+                                                             True);\n+      begin\n+\n+         -- Check that the function To_C produces a wchar_array result with\n+         -- lower bound of 0, and length dependent upon the Item and\n+         -- Append_Nul parameters (if Append_Nul is True, length is\n+         -- Item'Length + 1; if False, length is Item'Length).\n+\n+         if TC_No_wide_nul'First /= 0 or TC_wide_nul_Appended'First /= 0 then\n+            Report.Failed(\"Incorrect lower bound from Function To_C\");\n+         end if;\n+\n+         if TC_No_wide_nul'Length /= TC_Wide_String'Length then\n+            Report.Failed(\"Incorrect length returned from Function To_C \" &\n+                          \"when Append_Nul => False\");\n+         end if;\n+\n+         if TC_wide_nul_Appended'Length /= TC_Wide_String'Length + 1 then\n+            Report.Failed(\"Incorrect length returned from Function To_C \" &\n+                          \"when Append_Nul => True\");\n+         end if;\n+\n+         if not Is_Nul_Terminated(TC_wide_nul_Appended) then\n+            Report.Failed(\"No wide_nul appended to the wide_string \"    &\n+                          \"parameter during conversion to wchar_array \" &\n+                          \"by function To_C\");\n+         end if;\n+\n+         for TC_char in Report.Ident_Char('a')..Report.Ident_Char('h') loop\n+            if TC_No_wide_nul(i)       /= To_C(To_Wide_Character(TC_char)) or\n+               TC_wide_nul_Appended(i) /= To_C(To_Wide_Character(TC_char)) then\n+               -- Use single character To_C.\n+               Incorrect_Conversion := True;\n+            end if;\n+            i := i + 1;\n+         end loop;\n+\n+         if Incorrect_Conversion then\n+            Report.Failed(\"Incorrect result from To_C with wide_string input \" &\n+                          \"and wchar_array result\");\n+         end if;\n+\n+\n+         -- Check that the function To_Ada produces a wide_string result with\n+         -- lower bound of 1, and length dependent upon the Item and\n+         -- Trim_Nul parameters (if Trim_Nul is False, length is Item'Length;\n+         -- if False, length will be the length of the slice of Item prior to\n+         -- the first wide_nul).\n+\n+         declare\n+            TC_No_NUL_Wide_String       : constant Wide_String :=\n+              To_Ada(Item => TC_wide_nul_Appended, Trim_Nul => True);\n+\n+            TC_NUL_Appended_Wide_String : constant Wide_String :=\n+              To_Ada(TC_wide_nul_Appended, False);\n+\n+         begin\n+\n+            if TC_No_NUL_Wide_String'First       /= 1 or\n+               TC_NUL_Appended_Wide_String'First /= 1\n+            then\n+               Report.Failed(\"Incorrect lower bound from Function To_Ada\");\n+            end if;\n+\n+            if TC_No_NUL_Wide_String'Length /= TC_Wide_String'Length then\n+               Report.Failed(\"Incorrect length returned from Function \" &\n+                             \"To_Ada when Trim_Nul => True\");\n+            end if;\n+\n+            if TC_NUL_Appended_Wide_String'Length /=\n+               TC_Wide_String'Length + 1\n+            then\n+               Report.Failed(\"Incorrect length returned from Function \" &\n+                             \"To_Ada when Trim_Nul => False\");\n+            end if;\n+\n+            for TC_Character in Wide_Character'('a') .. Wide_Character'('h') loop\n+               if TC_No_NUL_Wide_String(j)       /= TC_Character or\n+                  TC_NUL_Appended_Wide_String(j) /= TC_Character\n+               then\n+                  Report.Failed(\"Incorrect result from To_Ada with \" &\n+                                \"char_array input, index = \"         &\n+                                Integer'Image(j));\n+               end if;\n+               j := j + 1;\n+            end loop;\n+\n+         end;\n+\n+\n+         -- Check that the function To_Ada raises Terminator_Error if the\n+         -- parameter Trim_Nul is set to True, but the actual Item parameter\n+         -- does not contain the wide_nul wchar_t.\n+\n+         begin\n+            TC_Wide_String := To_Ada(TC_No_wide_nul, Trim_Nul => True);\n+            Report.Failed(\"Terminator_Error not raised when Item \"    &\n+                          \"parameter of To_Ada does not contain the \" &\n+                          \"wide_nul wchar_t, but parameter Trim_Nul \" &\n+                          \"=> True\");\n+            Report.Comment\n+              (To_String(TC_Wide_String) & \" printed to defeat optimization\");\n+         exception\n+            when Terminator_Error => null;  -- OK, expected exception.\n+            when others           =>\n+               Report.Failed(\"Incorrect exception raised by function \"  &\n+                             \"To_Ada when the Item parameter does not \" &\n+                             \"contain the wide_nul wchar_t, but \"       &\n+                             \"parameter Trim_Nul => True\");\n+         end;\n+\n+      end;\n+\n+   exception\n+      when The_Error : others =>\n+         Report.Failed\n+           (\"The following exception was raised in the Test_Block: \" &\n+            Ada.Exceptions.Exception_Name(The_Error));\n+   end Test_Block;\n+\n+   Report.Result;\n+\n+end CXB30061;"}, {"sha": "a9f4bb21e3008b83c8e0567efe6fb123cdbfd5dc", "filename": "gcc/testsuite/ada/acats/tests/cxf/cxf2001.a", "status": "modified", "additions": 101, "deletions": 101, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxf%2Fcxf2001.a", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxf%2Fcxf2001.a", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Ftests%2Fcxf%2Fcxf2001.a?ref=f0a2d11f8ad85bfdedb79bc47bd34bd08e38f81f", "patch": "@@ -3,22 +3,22 @@\n --                             Grant of Unlimited Rights\n --\n --     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,\n---     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained \n+--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained\n --     unlimited rights in the software and documentation contained herein.\n---     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making \n---     this public release, the Government intends to confer upon all \n---     recipients unlimited rights  equal to those held by the Government.  \n---     These rights include rights to use, duplicate, release or disclose the \n---     released technical data and computer software in whole or in part, in \n---     any manner and for any purpose whatsoever, and to have or permit others \n+--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making\n+--     this public release, the Government intends to confer upon all\n+--     recipients unlimited rights  equal to those held by the Government.\n+--     These rights include rights to use, duplicate, release or disclose the\n+--     released technical data and computer software in whole or in part, in\n+--     any manner and for any purpose whatsoever, and to have or permit others\n --     to do so.\n --\n --                                    DISCLAIMER\n --\n --     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR\n---     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED \n+--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED\n --     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE\n---     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE \n+--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE\n --     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A\n --     PARTICULAR PURPOSE OF SAID MATERIAL.\n --*\n@@ -31,33 +31,33 @@\n --\n -- TEST DESCRIPTION:\n --      This test is designed to test the generic procedure Divide found in\n---      package Ada.Decimal.  \n+--      package Ada.Decimal.\n --\n---      The table below attempts to portray the design approach used in this \n+--      The table below attempts to portray the design approach used in this\n --      test.  There are three \"dimensions\" of concern:\n --        1) the delta value of the Quotient and Remainder types, shown as\n --           column headers,\n --        2) specific choices for the Dividend and Divisor numerical values\n --           (i.e., whether they yielded a repeating/non-terminating result,\n---            or a terminating result [\"exact\"]), displayed on the left side \n+--            or a terminating result [\"exact\"]), displayed on the left side\n --            of the tables, and\n --        3) the delta for the Dividend and Divisor.\n---      \n+--\n --      Each row in the tables indicates a specific test case, showing the\n --      specific quotient and remainder (under the appropriate Delta column)\n --      for each combination of dividend and divisor values.  Test cases\n --      follow the top-to-bottom sequence shown in the tables.\n---      \n+--\n --      Most of the test case sets (same dividend/divisor combinations -\n---      indicated by dashed horizontal lines in the tables) vary the \n---      delta of the quotient and remainder types between test cases. This \n+--      indicated by dashed horizontal lines in the tables) vary the\n+--      delta of the quotient and remainder types between test cases. This\n --      allows for an examination of how different deltas for a quotient\n --      and/or remainder type can influence the results of a division with\n --      identical dividend and divisor.\n---      \n+--\n --      Note: Test cases are performed for both Radix 10 and Radix 2 types.\n---      \n---      \n+--\n+--\n --  Divid  Divis    Delta     Delta       Delta       Delta       Delta\n -- (Delta)(Delta)|  .1   |    .01    |   .001    |   .0001   |  .00001   |Test\n --               |---|---|-----|-----|-----|-----|-----|-----|-----|-----|Case\n@@ -88,14 +88,14 @@\n -- ---------------------------------------------------------------------------\n -- Divide by Zero| Raise Constraint_Error                                 41\n -- ---------------------------------------------------------------------------\n--- \n---       \n+--\n+--\n -- CHANGE HISTORY:\n --      06 Dec 94   SAIC    ACVC 2.0\n --      29 Dec 94   SAIC    Modified Radix 2 cases to match Radix 10 cases.\n---      03 Oct 95   RBKD    Modified to fix incorrect remainder results\n+--      03 Oct 95   RBKD    Modified to fix incorrect remainder results.\n --      15 Nov 95   SAIC    Incorporated reviewer fixes for ACVC 2.0.1.\n---\n+--      18 Dec 06   RLB     Fixed failure message to have correct block name.\n --!\n \n with Report;\n@@ -117,12 +117,12 @@ begin\n       -- Declare all types and variables used in the various blocks below\n       -- for all Radix 10 evaluations.\n \n-      type DT_1       is delta 1.0     digits 5; \n-      type DT_0_1     is delta 0.1     digits 10; \n-      type DT_0_01    is delta 0.01    digits 10; \n-      type DT_0_001   is delta 0.001   digits 10; \n-      type DT_0_0001  is delta 0.0001  digits 10; \n-      type DT_0_00001 is delta 0.00001 digits 10; \n+      type DT_1       is delta 1.0     digits 5;\n+      type DT_0_1     is delta 0.1     digits 10;\n+      type DT_0_01    is delta 0.01    digits 10;\n+      type DT_0_001   is delta 0.001   digits 10;\n+      type DT_0_0001  is delta 0.0001  digits 10;\n+      type DT_0_00001 is delta 0.00001 digits 10;\n \n       for DT_1'Machine_Radix       use 10;\n       for DT_0_1'Machine_Radix     use 10;\n@@ -138,11 +138,11 @@ begin\n       Dd_0_0001,  Dv_0_0001,  Quot_0_0001,  Rem_0_0001  : DT_0_0001  := 0.0;\n       Dd_0_00001, Dv_0_00001, Quot_0_00001, Rem_0_00001 : DT_0_00001 := 0.0;\n \n-   begin \n+   begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(Dividend_Type  => DT_0_01,\n                                    Divisor_Type   => DT_0_1,\n                                    Quotient_Type  => DT_0_1,\n@@ -158,7 +158,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_0_1, DT_0_1, DT_0_1);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 2\"); end if;\n@@ -171,7 +171,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_0_1, DT_0_01, DT_0_001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 3\"); end if;\n@@ -184,7 +184,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_0_1, DT_0_01, DT_0_01);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 4\"); end if;\n@@ -197,22 +197,22 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_0_1, DT_0_001, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 5\"); end if;\n          Dd_0_01 := DT_0_01(0.05);  Dv_0_1 := DT_0_1(0.3);\n          Div(Dd_0_01, Dv_0_1, Quot_0_001, Rem_0_0001);\n-         if Quot_0_001 /= DT_0_001(0.166)   or \n-            Rem_0_0001 /= DT_0_0001(0.0002) \n+         if Quot_0_001 /= DT_0_001(0.166)   or\n+            Rem_0_0001 /= DT_0_0001(0.0002)\n          then\n             Report.Failed(\"Incorrect values returned, Case 5\");\n          end if;\n       end;\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_01, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 6\"); end if;\n@@ -225,7 +225,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_01, DT_0_001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 7\"); end if;\n@@ -238,7 +238,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_01, DT_0_01);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 8\"); end if;\n@@ -251,7 +251,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_001, DT_0_001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 9\"); end if;\n@@ -264,7 +264,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_001, DT_0_01);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 10\"); end if;\n@@ -277,43 +277,43 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_0001, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 11\"); end if;\n          Dd_0_01 := DT_0_01(0.15);  Dv_1 := DT_1(20);\n          Div(Dd_0_01, Dv_1, Quot_0_0001, Rem_0_0001);\n-         if Quot_0_0001 /= DT_0_0001(0.0075) or \n-            Rem_0_0001  /= DT_0_0001(0.0) \n+         if Quot_0_0001 /= DT_0_0001(0.0075) or\n+            Rem_0_0001  /= DT_0_0001(0.0)\n          then\n             Report.Failed(\"Incorrect values returned, Case 11\");\n          end if;\n       end;\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_0001, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 12\"); end if;\n          Dd_0_00001 := DT_0_00001(0.03125);  Dv_0_1 := DT_0_1(0.5);\n          Div(Dd_0_00001, Dv_0_1, Quot_0_0001, Rem_0_0001);\n-         if Quot_0_0001 /= DT_0_0001(0.0625) or \n-            Rem_0_0001  /= DT_0_0001(0.0) \n+         if Quot_0_0001 /= DT_0_0001(0.0625) or\n+            Rem_0_0001  /= DT_0_0001(0.0)\n          then\n             Report.Failed(\"Incorrect values returned, Case 12\");\n          end if;\n       end;\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_001, DT_0_00001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 13\"); end if;\n          Dd_0_00001 := DT_0_00001(0.03125);  Dv_0_1 := DT_0_1(0.5);\n          Div(Dd_0_00001, Dv_0_1, Quot_0_001, Rem_0_00001);\n-         if Quot_0_001 /= DT_0_001(0.062) or \n+         if Quot_0_001 /= DT_0_001(0.062) or\n             Rem_0_00001  /= DT_0_00001(0.00025)\n          then\n             Report.Failed(\"Incorrect values returned, Case 13\");\n@@ -322,13 +322,13 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_001, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 14\"); end if;\n          Dd_0_00001 := DT_0_00001(0.03125);  Dv_0_1 := DT_0_1(0.5);\n          Div(Dd_0_00001, Dv_0_1, Quot_0_001, Rem_0_0001);\n-         if Quot_0_001 /= DT_0_001(0.062) or \n+         if Quot_0_001 /= DT_0_001(0.062) or\n             Rem_0_0001  /= DT_0_0001(0.0002)\n          then\n             Report.Failed(\"Incorrect values returned, Case 14\");\n@@ -337,7 +337,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_001, DT_0_001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 15\"); end if;\n@@ -351,7 +351,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_001, DT_0_01);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 16\"); end if;\n@@ -364,35 +364,35 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_01, DT_0_00001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 17\"); end if;\n          Dd_0_00001 := DT_0_00001(0.03125);  Dv_0_1 := DT_0_1(0.5);\n          Div(Dd_0_00001, Dv_0_1, Quot_0_01, Rem_0_00001);\n-         if Quot_0_01 /= DT_0_01(0.06) or Rem_0_00001 /= DT_0_00001(0.00125) \n+         if Quot_0_01 /= DT_0_01(0.06) or Rem_0_00001 /= DT_0_00001(0.00125)\n          then\n             Report.Failed(\"Incorrect values returned, Case 17\");\n          end if;\n       end;\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_01, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 18\"); end if;\n          Dd_0_00001 := DT_0_00001(0.03125);  Dv_0_1 := DT_0_1(0.5);\n          Div(Dd_0_00001, Dv_0_1, Quot_0_01, Rem_0_0001);\n-         if Quot_0_01 /= DT_0_01(0.06) or Rem_0_0001 /= DT_0_0001(0.0012) \n+         if Quot_0_01 /= DT_0_01(0.06) or Rem_0_0001 /= DT_0_0001(0.0012)\n          then\n             Report.Failed(\"Incorrect values returned, Case 18\");\n          end if;\n       end;\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_01, DT_0_001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 19\"); end if;\n@@ -405,7 +405,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_01, DT_0_01);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 20\"); end if;\n@@ -429,12 +429,12 @@ begin\n       -- Declare all types and variables used in the various blocks below\n       -- for all Radix 2 evaluations.\n \n-      type DT_1       is delta 1.0     digits 5; \n-      type DT_0_1     is delta 0.1     digits 10; \n-      type DT_0_01    is delta 0.01    digits 10; \n-      type DT_0_001   is delta 0.001   digits 10; \n-      type DT_0_0001  is delta 0.0001  digits 10; \n-      type DT_0_00001 is delta 0.00001 digits 10; \n+      type DT_1       is delta 1.0     digits 5;\n+      type DT_0_1     is delta 0.1     digits 10;\n+      type DT_0_01    is delta 0.01    digits 10;\n+      type DT_0_001   is delta 0.001   digits 10;\n+      type DT_0_0001  is delta 0.0001  digits 10;\n+      type DT_0_00001 is delta 0.00001 digits 10;\n \n       for DT_1'Machine_Radix       use 2;\n       for DT_0_1'Machine_Radix     use 2;\n@@ -450,11 +450,11 @@ begin\n       Dd_0_0001,  Dv_0_0001,  Quot_0_0001,  Rem_0_0001  : DT_0_0001  := 0.0;\n       Dd_0_00001, Dv_0_00001, Quot_0_00001, Rem_0_00001 : DT_0_00001 := 0.0;\n \n-   begin \n+   begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(Dividend_Type  => DT_0_01,\n                                    Divisor_Type   => DT_0_1,\n                                    Quotient_Type  => DT_0_1,\n@@ -470,7 +470,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_0_1, DT_0_1, DT_0_1);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 22\"); end if;\n@@ -483,7 +483,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_0_1, DT_0_01, DT_0_001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 23\"); end if;\n@@ -496,7 +496,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_0_1, DT_0_01, DT_0_01);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 24\"); end if;\n@@ -509,22 +509,22 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_0_1, DT_0_001, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 25\"); end if;\n          Dd_0_01 := DT_0_01(0.05);  Dv_0_1 := DT_0_1(0.3);\n          Div(Dd_0_01, Dv_0_1, Quot_0_001, Rem_0_0001);\n-         if Quot_0_001 /= DT_0_001(0.166)   or \n-            Rem_0_0001 /= DT_0_0001(0.0002) \n+         if Quot_0_001 /= DT_0_001(0.166)   or\n+            Rem_0_0001 /= DT_0_0001(0.0002)\n          then\n             Report.Failed(\"Incorrect values returned, Case 25\");\n          end if;\n       end;\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_01, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 26\"); end if;\n@@ -537,7 +537,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_01, DT_0_001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 27\"); end if;\n@@ -550,7 +550,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_01, DT_0_01);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 28\"); end if;\n@@ -563,7 +563,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_001, DT_0_001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 29\"); end if;\n@@ -576,7 +576,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_001, DT_0_01);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 30\"); end if;\n@@ -589,43 +589,43 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_01, DT_1, DT_0_0001, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 31\"); end if;\n          Dd_0_01 := DT_0_01(0.15);  Dv_1 := DT_1(20);\n          Div(Dd_0_01, Dv_1, Quot_0_0001, Rem_0_0001);\n-         if Quot_0_0001 /= DT_0_0001(0.0075) or \n-            Rem_0_0001  /= DT_0_0001(0.0) \n+         if Quot_0_0001 /= DT_0_0001(0.0075) or\n+            Rem_0_0001  /= DT_0_0001(0.0)\n          then\n             Report.Failed(\"Incorrect values returned, Case 31\");\n          end if;\n       end;\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_0001, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 32\"); end if;\n          Dd_0_00001 := DT_0_00001(0.03125);  Dv_0_1 := DT_0_1(0.5);\n          Div(Dd_0_00001, Dv_0_1, Quot_0_0001, Rem_0_0001);\n-         if Quot_0_0001 /= DT_0_0001(0.0625) or \n-            Rem_0_0001  /= DT_0_0001(0.0) \n+         if Quot_0_0001 /= DT_0_0001(0.0625) or\n+            Rem_0_0001  /= DT_0_0001(0.0)\n          then\n             Report.Failed(\"Incorrect values returned, Case 32\");\n          end if;\n       end;\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_001, DT_0_00001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 33\"); end if;\n          Dd_0_00001 := DT_0_00001(0.03125);  Dv_0_1 := DT_0_1(0.5);\n          Div(Dd_0_00001, Dv_0_1, Quot_0_001, Rem_0_00001);\n-         if Quot_0_001 /= DT_0_001(0.062) or \n+         if Quot_0_001 /= DT_0_001(0.062) or\n             Rem_0_00001  /= DT_0_00001(0.00025)\n          then\n             Report.Failed(\"Incorrect values returned, Case 33\");\n@@ -634,13 +634,13 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_001, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 34\"); end if;\n          Dd_0_00001 := DT_0_00001(0.03125);  Dv_0_1 := DT_0_1(0.5);\n          Div(Dd_0_00001, Dv_0_1, Quot_0_001, Rem_0_0001);\n-         if Quot_0_001 /= DT_0_001(0.062) or \n+         if Quot_0_001 /= DT_0_001(0.062) or\n             Rem_0_0001  /= DT_0_0001(0.0002)\n          then\n             Report.Failed(\"Incorrect values returned, Case 34\");\n@@ -649,7 +649,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_001, DT_0_001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 35\"); end if;\n@@ -663,7 +663,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_001, DT_0_01);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 36\"); end if;\n@@ -676,35 +676,35 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_01, DT_0_00001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 37\"); end if;\n          Dd_0_00001 := DT_0_00001(0.03125);  Dv_0_1 := DT_0_1(0.5);\n          Div(Dd_0_00001, Dv_0_1, Quot_0_01, Rem_0_00001);\n-         if Quot_0_01 /= DT_0_01(0.06) or Rem_0_00001 /= DT_0_00001(0.00125) \n+         if Quot_0_01 /= DT_0_01(0.06) or Rem_0_00001 /= DT_0_00001(0.00125)\n          then\n             Report.Failed(\"Incorrect values returned, Case 37\");\n          end if;\n       end;\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_01, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 38\"); end if;\n          Dd_0_00001 := DT_0_00001(0.03125);  Dv_0_1 := DT_0_1(0.5);\n          Div(Dd_0_00001, Dv_0_1, Quot_0_01, Rem_0_0001);\n-         if Quot_0_01 /= DT_0_01(0.06) or Rem_0_0001 /= DT_0_0001(0.0012) \n+         if Quot_0_01 /= DT_0_01(0.06) or Rem_0_0001 /= DT_0_0001(0.0012)\n          then\n             Report.Failed(\"Incorrect values returned, Case 38\");\n          end if;\n       end;\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_01, DT_0_001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 39\"); end if;\n@@ -717,7 +717,7 @@ begin\n \n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_00001, DT_0_1, DT_0_01, DT_0_01);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 40\"); end if;\n@@ -729,24 +729,24 @@ begin\n       end;\n \n       declare\n-         procedure Div is \n+         procedure Div is\n             new Ada.Decimal.Divide(DT_0_0001, DT_1, DT_0_0001, DT_0_0001);\n       begin\n          if TC_Verbose then Report.Comment(\"Case 41\"); end if;\n-         Dd_0_0001 := (DT_0_0001(6062.0) / DT_0_0001(16384.0));  \n+         Dd_0_0001 := (DT_0_0001(6062.0) / DT_0_0001(16384.0));\n          Dv_1 := DT_1(0.0);\n          Div(Dd_0_0001, Dv_1, Quot_0_0001, Rem_0_0001);\n          Report.Failed(\"Divide by Zero didn't raise Constraint_Error, \" &\n                        \"Case 41\");\n       exception\n          when Constraint_Error =>  null;  -- OK, expected exception.\n-         when others => \n+         when others =>\n             Report.Failed(\"Unexpected exception raised by Divide by Zero,\" &\n                           \"Case 41\");\n       end;\n \n    exception\n-      when others => Report.Failed(\"Exception raised in Radix_10_Block\");\n+      when others => Report.Failed(\"Exception raised in Radix_2_Block\");\n    end Radix_2_Block;\n \n "}]}