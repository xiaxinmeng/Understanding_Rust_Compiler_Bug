{"sha": "1e6a3e1e1ed2664c90b02372d92cc2a365adfde7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU2YTNlMWUxZWQyNjY0YzkwYjAyMzcyZDkyY2MyYTM2NWFkZmRlNw==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@nerim.net", "date": "2002-07-30T06:34:57Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2002-07-30T06:34:57Z"}, "message": "c-pretty-print.c (pp_c_primary_expression): Handle STMT_EXPR.\n\n\t* c-pretty-print.c (pp_c_primary_expression): Handle STMT_EXPR.\n\t(pp_c_postfix_expression): Handle ARROW_EXPR, FFS_EXPR,\n\tCOMPOUND_LITERAL_EXPR, VA_ARG_EXPR.\n\t(pp_c_expression): Update.\n\nFrom-SVN: r55864", "tree": {"sha": "c472c84e113ec07a3d06866afeafb25c9815f490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c472c84e113ec07a3d06866afeafb25c9815f490"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e6a3e1e1ed2664c90b02372d92cc2a365adfde7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6a3e1e1ed2664c90b02372d92cc2a365adfde7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e6a3e1e1ed2664c90b02372d92cc2a365adfde7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6a3e1e1ed2664c90b02372d92cc2a365adfde7/comments", "author": null, "committer": null, "parents": [{"sha": "03fc215c4cd08c7ba124c617a7676c0f2f689c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03fc215c4cd08c7ba124c617a7676c0f2f689c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03fc215c4cd08c7ba124c617a7676c0f2f689c3f"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "f8e3ef6bfbeea2202e764586f8b59c358c590e0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6a3e1e1ed2664c90b02372d92cc2a365adfde7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6a3e1e1ed2664c90b02372d92cc2a365adfde7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e6a3e1e1ed2664c90b02372d92cc2a365adfde7", "patch": "@@ -1,3 +1,10 @@\n+2002-07-30  Gabriel Dos Reis  <gdr@nerim.net>\n+\n+\t* c-pretty-print.c (pp_c_primary_expression): Handle STMT_EXPR.\n+\t(pp_c_postfix_expression): Handle ARROW_EXPR, FFS_EXPR,\n+\tCOMPOUND_LITERAL_EXPR, VA_ARG_EXPR.\n+\t(pp_c_expression): Update.\n+\n 2002-07-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* alpha/vms-cc.c (preprocess_args, main): Use xstrdup and/or"}, {"sha": "19c83d487317b1466a3fe3201578d9b63c2f8fe6", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6a3e1e1ed2664c90b02372d92cc2a365adfde7/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6a3e1e1ed2664c90b02372d92cc2a365adfde7/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=1e6a3e1e1ed2664c90b02372d92cc2a365adfde7", "patch": "@@ -335,6 +335,12 @@ pp_c_primary_expression (ppi, e)\n \t}\n       pp_c_right_paren (ppi);\n \n+    case STMT_EXPR:\n+      pp_c_left_paren (ppi);\n+      pp_statement (ppi, STMT_EXPR_STMT (e));\n+      pp_c_right_paren (ppi);\n+      break;\n+\n     default:\n       /*  Make sure this call won't cause any infinite loop. */\n       pp_c_left_paren (ppi);\n@@ -416,6 +422,11 @@ pp_c_postfix_expression (ppi, e)\n       pp_postfix_expression (ppi, TREE_OPERAND (e, 0));\n       pp_identifier (ppi, code == POSTINCREMENT_EXPR ? \"++\" : \"--\");\n       break;\n+      \n+    case ARROW_EXPR:\n+      pp_postfix_expression (ppi, TREE_OPERAND (e, 0));\n+      pp_arrow (ppi);\n+      break;\n \n     case ARRAY_REF:\n       pp_postfix_expression (ppi, TREE_OPERAND (e, 0));\n@@ -432,7 +443,9 @@ pp_c_postfix_expression (ppi, e)\n       break;\n \n     case ABS_EXPR:\n-      pp_c_identifier (ppi, \"abs\");\n+    case FFS_EXPR:\n+      pp_c_identifier (ppi, \n+\t\t       code == ABS_EXPR ? \"__builtin_abs\" : \"__builtin_ffs\");\n       pp_c_left_paren (ppi);\n       pp_c_expression (ppi, TREE_OPERAND (e, 0));\n       pp_c_right_paren (ppi);\n@@ -481,9 +494,21 @@ pp_c_postfix_expression (ppi, e)\n       pp_right_brace (ppi);\n       break;\n \n+    case COMPOUND_LITERAL_EXPR:\n+      e = DECL_INITIAL (e);\n+      /* Fall through.  */\n     case CONSTRUCTOR:\n       pp_initializer (ppi, e);\n       break;\n+      \n+    case VA_ARG_EXPR:\n+      pp_c_identifier (ppi, \"__builtin_va_arg\");\n+      pp_c_left_paren (ppi);\n+      pp_assignment_expression (ppi, TREE_OPERAND (e, 0));\n+      pp_separate_with (ppi, ',');\n+      pp_type_id (ppi, TREE_TYPE (e));\n+      pp_c_right_paren (ppi);\n+      break;\n \n     default:\n       pp_primary_expression (ppi, e);\n@@ -868,19 +893,24 @@ pp_c_expression (ppi, e)\n     case LABEL_DECL:\n     case ERROR_MARK:\n     case TARGET_EXPR:\n+    case STMT_EXPR:\n       pp_c_primary_expression (ppi, e);\n       break;\n \n     case POSTINCREMENT_EXPR:\n     case POSTDECREMENT_EXPR:\n+    case ARROW_EXPR:\n     case ARRAY_REF:\n     case CALL_EXPR:\n     case COMPONENT_REF:\n     case COMPLEX_CST:\n     case VECTOR_CST:\n     case ABS_EXPR:\n+    case FFS_EXPR:\n     case CONSTRUCTOR:\n+    case COMPOUND_LITERAL_EXPR:\n     case COMPLEX_EXPR:\n+    case VA_ARG_EXPR:\n       pp_c_postfix_expression (ppi, e);\n       break;\n "}]}