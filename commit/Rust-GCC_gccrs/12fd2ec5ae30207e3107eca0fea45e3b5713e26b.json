{"sha": "12fd2ec5ae30207e3107eca0fea45e3b5713e26b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJmZDJlYzVhZTMwMjA3ZTMxMDdlY2EwZmVhNDVlM2I1NzEzZTI2Yg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2019-11-04T10:01:22Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-11-04T10:01:22Z"}, "message": "libgomp/testsuite - use unique numbers with Fortran's 'stop'\n\n        PR fortran/92305\n        * testsuite/libgomp.fortran/allocatable2.f90: Use\n        unique numbers with 'stop'.\n        * testsuite/libgomp.fortran/use_device_addr-1.f90: Ditto.\n        * testsuite/libgomp.fortran/use_device_addr-2.f90: Ditto.\n        * testsuite/libgomp.fortran/use_device_ptr-1.f90: Ditto.\n        * testsuite/libgomp.oacc-fortran/lib-15.f90: Ditto.\n        * testsuite/libgomp.oacc-fortran/pset-1.f90: Ditto.\n\nFrom-SVN: r277769", "tree": {"sha": "bc3a628304603430d917dc7eb84a04327d1fa069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc3a628304603430d917dc7eb84a04327d1fa069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12fd2ec5ae30207e3107eca0fea45e3b5713e26b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12fd2ec5ae30207e3107eca0fea45e3b5713e26b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12fd2ec5ae30207e3107eca0fea45e3b5713e26b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2323aa040bb4b401445d27bfe6f8c75a50ecf76d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2323aa040bb4b401445d27bfe6f8c75a50ecf76d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2323aa040bb4b401445d27bfe6f8c75a50ecf76d"}], "stats": {"total": 1177, "additions": 594, "deletions": 583}, "files": [{"sha": "557a7512d6a53dd67b7800471591afd1f7b731ce", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=12fd2ec5ae30207e3107eca0fea45e3b5713e26b", "patch": "@@ -1,3 +1,14 @@\n+2019-11-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/92305\n+\t* testsuite/libgomp.fortran/allocatable2.f90: Use\n+\tunique numbers with 'stop'.\n+\t* testsuite/libgomp.fortran/use_device_addr-1.f90: Ditto.\n+\t* testsuite/libgomp.fortran/use_device_addr-2.f90: Ditto.\n+\t* testsuite/libgomp.fortran/use_device_ptr-1.f90: Ditto.\n+\t* testsuite/libgomp.oacc-fortran/lib-15.f90: Ditto.\n+\t* testsuite/libgomp.oacc-fortran/pset-1.f90: Ditto.\n+\n 2019-11-01  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* testsuite/libgomp.fortran/use_device_addr-1.f90 (test_nullptr_1,"}, {"sha": "fbf81c214b82435e1545a003d0e6ea9e1ef98d54", "filename": "libgomp/testsuite/libgomp.fortran/allocatable2.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable2.f90?ref=12fd2ec5ae30207e3107eca0fea45e3b5713e26b", "patch": "@@ -16,7 +16,7 @@\n   l = l.or..not.allocated (a)\n   l = l.or.size(a).ne.12.or.size(a,1).ne.3.or.size(a,2).ne.4\n !$omp end parallel\n-  if (l.or.any(a.ne.6)) stop 1\n+  if (l.or.any(a.ne.6)) stop 2\n !$omp parallel num_threads (4) copyin (a) reduction(.or.:l) private (b)\n   l = l.or.allocated (b)\n   l = l.or..not.allocated (a)\n@@ -37,11 +37,11 @@\n   deallocate (b)\n   l = l.or.allocated (b)\n !$omp end parallel\n-  if (n.lt.0 .or. n.ge.4) stop 2\n-  if (l.or.any(a.ne.(n + 36))) stop 3\n+  if (n.lt.0 .or. n.ge.4) stop 3\n+  if (l.or.any(a.ne.(n + 36))) stop 4\n !$omp parallel num_threads (4) reduction(.or.:l)\n   deallocate (a)\n   l = l.or.allocated (a)\n !$omp end parallel\n-  if (l.or.allocated (a)) stop 4\n+  if (l.or.allocated (a)) stop 5\n end"}, {"sha": "94ac76f570027763bee6787ea5ef0a53dc72c5be", "filename": "libgomp/testsuite/libgomp.fortran/use_device_addr-1.f90", "status": "modified", "additions": 241, "deletions": 241, "changes": 482, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-1.f90?ref=12fd2ec5ae30207e3107eca0fea45e3b5713e26b", "patch": "@@ -135,26 +135,26 @@ subroutine test_dummy_callee_1(aa, bb, cc, dd, ee, ff, gg, hh, N)\n      call copy3_scalar(c_loc(aa), c_loc(bb))\n      !$omp end target data\n      if (abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 2\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n      call copy3_scalar(c_loc(cc), c_loc(dd))\n      !$omp end target data\n-     if (abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc)) stop 3\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 4\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n      call copy3_scalar(c_loc(ee), c_loc(ff))\n      !$omp end target data\n-     if (abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee)) stop 5\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 6\n \n \n      !$omp target data map(to:gg) map(from:hh) use_device_addr(gg,hh)\n      call copy3_array(c_loc(gg), c_loc(hh), N)\n      !$omp end target data\n-     if (any(abs(gg - 77.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77.0_c_double) > 10.0_c_double * epsilon(gg))) stop 7\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 8\n   end subroutine test_dummy_callee_1\n \n   ! Save device ptr - and recall pointer\n@@ -221,28 +221,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n      ! check c_loc ptr once\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 9\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 10\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_double\n      !$omp target update to(aa)\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 11\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 12\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_double\n      !$omp target update to(aa)\n      call copy3_scalar(c_loc(aptr), c_loc(bptr))\n      !$omp target update from(bb)\n-     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 13\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 14\n      !$omp end target data\n \n-     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 15\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 16\n \n \n      !$omp target data map(to:cc) map(from:dd)\n@@ -256,28 +256,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n      ! check c_loc ptr once\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 17\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 18\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_double\n      !$omp target update to(cc)\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 19\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 20\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_double\n      !$omp target update to(cc)\n      call copy3_scalar(c_loc(cptr), c_loc(dptr))\n      !$omp target update from(dd)\n-     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 21\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 22\n      !$omp end target data\n \n-     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd)) stop 1\n+     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd)) stop 23\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd)) stop 24\n \n \n      !$omp target data map(to:ee) map(from:ff)\n@@ -291,28 +291,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n      ! check c_loc ptr once\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 25\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 26\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_double\n      !$omp target update to(ee)\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 27\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 28\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_double\n      !$omp target update to(ee)\n      call copy3_scalar(c_loc(eptr), c_loc(fptr))\n      !$omp target update from(ff)\n-     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff)) stop 1\n+     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 29\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff)) stop 30\n      !$omp end target data\n \n-     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 31\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 32\n \n \n      !$omp target data map(to:gg) map(from:hh)\n@@ -326,28 +326,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n      ! check c_loc ptr once\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(hh))) stop 1\n+     if (any(abs(gg - 777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 33\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(hh))) stop 34\n \n      ! check c_loc ptr again after target-value modification\n      gg = 7777.0_c_double\n      !$omp target update to(gg)\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 7777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 7777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 35\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 36\n \n      ! check Fortran pointer after target-value modification\n      gg = 77777.0_c_double\n      !$omp target update to(gg)\n      call copy3_array(c_loc(gptr), c_loc(hptr), N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 37\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 38\n      !$omp end target data\n \n-     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 39\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 40\n   end subroutine test_dummy_callee_2\n end module test_dummies\n \n@@ -378,8 +378,8 @@ subroutine test_dummy_val_callee_1(aa, bb)\n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n      call copy3_scalar(c_loc(aa), c_loc(bb))\n      !$omp end target data\n-     if (abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa)) stop 41\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 42\n   end subroutine test_dummy_val_callee_1\n \n   ! Save device ptr - and recall pointer\n@@ -413,28 +413,28 @@ subroutine test_dummy_val_callee_2(aa, bb, c_aptr, c_bptr, aptr, bptr)\n      ! check c_loc ptr once\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 43\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 44\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_double\n      !$omp target update to(aa)\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 45\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 46\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_double\n      !$omp target update to(aa)\n      call copy3_scalar(c_loc(aptr), c_loc(bptr))\n      !$omp target update from(bb)\n-     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 47\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 48\n      !$omp end target data\n \n-     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 49\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 50\n   end subroutine test_dummy_val_callee_2\n end module test_dummies_value\n \n@@ -486,45 +486,45 @@ subroutine test_dummy_opt_callee_1(aa, bb, cc, dd, ee, ff, gg, hh, N)\n      integer, value :: N\n \n      ! All shall be present - and pointing to non-NULL\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.present(gg) .or. .not.present(hh)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 51\n+     if (.not.present(cc) .or. .not.present(dd)) stop 52\n+     if (.not.present(ee) .or. .not.present(ff)) stop 53\n+     if (.not.present(gg) .or. .not.present(hh)) stop 54\n \n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 55\n \n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 56\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 57\n      call copy3_scalar(c_loc(aa), c_loc(bb))\n      !$omp end target data\n-     if (abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa)) stop 58\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 59\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 60\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 61\n      call copy3_scalar(c_loc(cc), c_loc(dd))\n      !$omp end target data\n-     if (abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc)) stop 62\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 63\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 64\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 65\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 66\n      call copy3_scalar(c_loc(ee), c_loc(ff))\n      !$omp end target data\n-     if (abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee)) stop 67\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 68\n \n      !$omp target data map(to:gg) map(from:hh) use_device_addr(gg,hh)\n-     if (.not.present(gg) .or. .not.present(hh)) stop 1\n-     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 1\n+     if (.not.present(gg) .or. .not.present(hh)) stop 69\n+     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 70\n      call copy3_array(c_loc(gg), c_loc(hh), N)\n      !$omp end target data\n-     if (any(abs(gg - 77.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77.0_c_double) > 10.0_c_double * epsilon(gg))) stop 71\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 72\n   end subroutine test_dummy_opt_callee_1\n \n   ! Save device ptr - and recall pointer\n@@ -572,12 +572,12 @@ subroutine test_dummy_opt_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n      real(c_double) :: dummy\n \n      ! All shall be present - and pointing to non-NULL\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.present(gg) .or. .not.present(hh)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 73\n+     if (.not.present(cc) .or. .not.present(dd)) stop 74\n+     if (.not.present(ee) .or. .not.present(ff)) stop 75\n+     if (.not.present(gg) .or. .not.present(hh)) stop 76\n \n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 77\n \n      aa = 111.0_c_double\n      bb = 222.0_c_double\n@@ -590,177 +590,177 @@ subroutine test_dummy_opt_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n \n      !$omp target data map(to:aa) map(from:bb)\n      !$omp target data map(alloc:dummy) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 78\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 79\n      c_aptr = c_loc(aa)\n      c_bptr = c_loc(bb)\n      aptr => aa\n      bptr => bb\n-     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 1\n-     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 1\n+     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 80\n+     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 81\n      !$omp end target data\n \n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n-     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 1\n-     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 82\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 83\n+     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 84\n+     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 85\n \n      ! check c_loc ptr once\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 86\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 87\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_double\n      !$omp target update to(aa)\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 88\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 89\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_double\n      !$omp target update to(aa)\n      call copy3_scalar(c_loc(aptr), c_loc(bptr))\n      !$omp target update from(bb)\n-     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 90\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 91\n      !$omp end target data\n \n-     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 92\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 93\n \n \n      !$omp target data map(to:cc) map(from:dd)\n      !$omp target data map(alloc:dummy) use_device_addr(cc,dd)\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 94\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 95\n      c_cptr = c_loc(cc)\n      c_dptr = c_loc(dd)\n      cptr => cc\n      dptr => dd\n-     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 1\n-     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 1\n+     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 96\n+     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 97\n      !$omp end target data\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n-     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 1\n-     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 98\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 99\n+     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 100\n+     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 101\n \n      ! check c_loc ptr once\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 102\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 103\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_double\n      !$omp target update to(cc)\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 104\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 105\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_double\n      !$omp target update to(cc)\n      call copy3_scalar(c_loc(cptr), c_loc(dptr))\n      !$omp target update from(dd)\n-     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 106\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 107\n      !$omp end target data\n \n-     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd)) stop 1\n+     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd)) stop 108\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd)) stop 109\n \n \n      !$omp target data map(to:ee) map(from:ff)\n      !$omp target data map(alloc:dummy) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 110\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 111\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 112\n      c_eptr = c_loc(ee)\n      c_fptr = c_loc(ff)\n      eptr => ee\n      fptr => ff\n-     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 1\n-     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 1\n+     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 113\n+     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 114\n      !$omp end target data\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n-     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 1\n-     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 115\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 116\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 117\n+     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 118\n+     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 119\n \n      ! check c_loc ptr once\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 120\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 121\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_double\n      !$omp target update to(ee)\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 122\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 123\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_double\n      !$omp target update to(ee)\n      call copy3_scalar(c_loc(eptr), c_loc(fptr))\n      !$omp target update from(ff)\n-     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff)) stop 1\n+     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 124\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff)) stop 125\n      !$omp end target data\n \n-     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 126\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 127\n \n \n      !$omp target data map(to:gg) map(from:hh)\n      !$omp target data map(alloc:dummy) use_device_addr(gg,hh)\n-     if (.not.present(gg) .or. .not.present(hh)) stop 1\n-     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 1\n+     if (.not.present(gg) .or. .not.present(hh)) stop 128\n+     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 129\n      c_gptr = c_loc(gg)\n      c_hptr = c_loc(hh)\n      gptr => gg\n      hptr => hh\n-     if (.not.c_associated(c_gptr) .or. .not.c_associated(c_hptr)) stop 1\n-     if (.not.associated(gptr) .or. .not.associated(hptr)) stop 1\n+     if (.not.c_associated(c_gptr) .or. .not.c_associated(c_hptr)) stop 130\n+     if (.not.associated(gptr) .or. .not.associated(hptr)) stop 131\n      !$omp end target data\n-     if (.not.present(gg) .or. .not.present(hh)) stop 1\n-     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 1\n-     if (.not.c_associated(c_gptr) .or. .not.c_associated(c_hptr)) stop 1\n-     if (.not.associated(gptr) .or. .not.associated(hptr)) stop 1\n+     if (.not.present(gg) .or. .not.present(hh)) stop 132\n+     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 133\n+     if (.not.c_associated(c_gptr) .or. .not.c_associated(c_hptr)) stop 134\n+     if (.not.associated(gptr) .or. .not.associated(hptr)) stop 135\n \n      ! check c_loc ptr once\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(hh))) stop 1\n+     if (any(abs(gg - 777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 136\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(hh))) stop 137\n \n      ! check c_loc ptr again after target-value modification\n      gg = 7777.0_c_double\n      !$omp target update to(gg)\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 7777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 7777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 138\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 139\n \n      ! check Fortran pointer after target-value modification\n      gg = 77777.0_c_double\n      !$omp target update to(gg)\n      call copy3_array(c_loc(gptr), c_loc(hptr), N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 140\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 141\n      !$omp end target data\n \n-     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 142\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 143\n   end subroutine test_dummy_opt_callee_2\n end module test_dummies_opt\n \n@@ -789,15 +789,15 @@ subroutine test_dummy_opt_val_callee_1(aa, bb)\n      ! scalars\n      real(c_double), optional, value, target :: aa, bb\n \n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 144\n \n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 145\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 146\n      call copy3_scalar(c_loc(aa), c_loc(bb))\n      !$omp end target data\n-     if (abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa)) stop 147\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 148\n   end subroutine test_dummy_opt_val_callee_1\n \n   ! Save device ptr - and recall pointer\n@@ -817,56 +817,56 @@ subroutine test_dummy_opt_val_callee_2(aa, bb, c_aptr, c_bptr, aptr, bptr)\n \n      real(c_double) :: dummy\n \n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 1\n-     if (.not.present(aptr) .or. .not.present(bptr)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 149\n+     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 150\n+     if (.not.present(aptr) .or. .not.present(bptr)) stop 151\n \n      aa = 111.0_c_double\n      bb = 222.0_c_double\n \n      !$omp target data map(to:aa) map(from:bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 1\n-     if (.not.present(aptr) .or. .not.present(bptr)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 152\n+     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 153\n+     if (.not.present(aptr) .or. .not.present(bptr)) stop 154\n \n      !$omp target data map(alloc:dummy) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 1\n-     if (.not.present(aptr) .or. .not.present(bptr)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 155\n+     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 156\n+     if (.not.present(aptr) .or. .not.present(bptr)) stop 157\n \n      c_aptr = c_loc(aa)\n      c_bptr = c_loc(bb)\n      aptr => aa\n      bptr => bb\n-     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 1\n-     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 1\n+     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 158\n+     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 159\n      !$omp end target data\n \n      ! check c_loc ptr once\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 160\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 161\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_double\n      !$omp target update to(aa)\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 162\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 163\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_double\n      !$omp target update to(aa)\n      call copy3_scalar(c_loc(aptr), c_loc(bptr))\n      !$omp target update from(bb)\n-     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 164\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 165\n      !$omp end target data\n \n-     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 166\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 167\n   end subroutine test_dummy_opt_val_callee_2\n end module test_dummies_opt_value\n \n@@ -894,31 +894,31 @@ subroutine test_nullptr_1()\n      ee => null()\n      ff => null()\n \n-     if (associated(aa) .or. associated(bb)) stop 1\n+     if (associated(aa) .or. associated(bb)) stop 168\n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (c_associated(c_loc(aa)) .or. c_associated(c_loc(bb))) stop 1\n+     if (c_associated(c_loc(aa)) .or. c_associated(c_loc(bb))) stop 169\n      c_aptr = c_loc(aa)\n      c_bptr = c_loc(bb)\n      aptr => aa\n      bptr => bb\n-     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 1\n-     if (associated(aptr) .or. associated(bptr, bb)) stop 1\n+     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 170\n+     if (associated(aptr) .or. associated(bptr, bb)) stop 171\n      !$omp end target data\n-     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 1\n-     if (associated(aptr) .or. associated(bptr, bb)) stop 1\n+     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 172\n+     if (associated(aptr) .or. associated(bptr, bb)) stop 173\n \n-     if (allocated(gg)) stop 1\n+     if (allocated(gg)) stop 174\n      !$omp target data map(tofrom:gg) use_device_addr(gg)\n-     if (c_associated(c_loc(gg))) stop 1\n+     if (c_associated(c_loc(gg))) stop 175\n      c_gptr = c_loc(gg)\n      gptr => gg\n-     if (c_associated(c_gptr)) stop 1\n-     if (associated(gptr)) stop 1\n-     if (allocated(gg)) stop 1\n+     if (c_associated(c_gptr)) stop 176\n+     if (associated(gptr)) stop 177\n+     if (allocated(gg)) stop 178\n      !$omp end target data\n-     if (c_associated(c_gptr)) stop 1\n-     if (associated(gptr)) stop 1\n-     if (allocated(gg)) stop 1\n+     if (c_associated(c_gptr)) stop 179\n+     if (associated(gptr)) stop 180\n+     if (allocated(gg)) stop 181\n \n      call test_dummy_opt_nullptr_callee_1(ee, ff, hh, c_eptr, c_fptr, c_hptr, eptr, fptr, hptr)\n   end subroutine test_nullptr_1\n@@ -931,43 +931,43 @@ subroutine test_dummy_opt_nullptr_callee_1(ee, ff, hh, c_eptr, c_fptr, c_hptr, e\n      type(c_ptr), optional :: c_eptr, c_fptr, c_hptr\n      real(c_double), optional, pointer :: eptr, fptr, hptr\n \n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (associated(ee) .or. associated(ff)) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 182\n+     if (associated(ee) .or. associated(ff)) stop 183\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (associated(ee) .or. associated(ff)) stop 1\n-     if (c_associated(c_loc(ee)) .or. c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 184\n+     if (associated(ee) .or. associated(ff)) stop 185\n+     if (c_associated(c_loc(ee)) .or. c_associated(c_loc(ff))) stop 186\n      c_eptr = c_loc(ee)\n      c_fptr = c_loc(ff)\n      eptr => ee\n      fptr => ff\n-     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 1\n-     if (associated(eptr) .or. associated(fptr)) stop 1\n+     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 187\n+     if (associated(eptr) .or. associated(fptr)) stop 188\n      !$omp end target data\n \n-     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 1\n-     if (associated(eptr) .or. associated(fptr)) stop 1\n-     if (associated(ee) .or. associated(ff)) stop 1\n+     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 189\n+     if (associated(eptr) .or. associated(fptr)) stop 190\n+     if (associated(ee) .or. associated(ff)) stop 191\n \n \n-     if (.not.present(hh)) stop 1\n-     if (allocated(hh)) stop 1\n+     if (.not.present(hh)) stop 192\n+     if (allocated(hh)) stop 193\n \n      !$omp target data map(tofrom:hh) use_device_addr(hh)\n-     if (.not.present(hh)) stop 1\n-     if (allocated(hh)) stop 1\n-     if (c_associated(c_loc(hh))) stop 1\n+     if (.not.present(hh)) stop 194\n+     if (allocated(hh)) stop 195\n+     if (c_associated(c_loc(hh))) stop 196\n      c_hptr = c_loc(hh)\n      hptr => hh\n-     if (c_associated(c_hptr)) stop 1\n-     if (associated(hptr)) stop 1\n-     if (allocated(hh)) stop 1\n+     if (c_associated(c_hptr)) stop 197\n+     if (associated(hptr)) stop 198\n+     if (allocated(hh)) stop 199\n      !$omp end target data\n \n-     if (c_associated(c_hptr)) stop 1\n-     if (associated(hptr)) stop 1\n-     if (allocated(hh)) stop 1\n+     if (c_associated(c_hptr)) stop 200\n+     if (associated(hptr)) stop 201\n+     if (allocated(hh)) stop 202\n   end subroutine test_dummy_opt_nullptr_callee_1\n end module test_nullptr\n \n@@ -1008,27 +1008,27 @@ subroutine test_main_1()\n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n      call copy3_scalar(c_loc(aa), c_loc(bb))\n      !$omp end target data\n-     if (abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11.0_c_double) > 10.0_c_double * epsilon(aa)) stop 203\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 204\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n      call copy3_scalar(c_loc(cc), c_loc(dd))\n      !$omp end target data\n-     if (abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 33.0_c_double) > 10.0_c_double * epsilon(cc)) stop 205\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 206\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n      call copy3_scalar(c_loc(ee), c_loc(ff))\n      !$omp end target data\n-     if (abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 55.0_c_double) > 10.0_c_double * epsilon(ee)) stop 207\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 208\n \n \n      !$omp target data map(to:gg) map(from:hh) use_device_addr(gg,hh)\n      call copy3_array(c_loc(gg), c_loc(hh), N)\n      !$omp end target data\n-     if (any(abs(gg - 77.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77.0_c_double) > 10.0_c_double * epsilon(gg))) stop 209\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 210\n \n      deallocate(ee, ff) ! pointers, only\n    end subroutine test_main_1\n@@ -1072,28 +1072,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 211\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 212\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_double\n      !$omp target update to(aa)\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 1111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 213\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 214\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_double\n      !$omp target update to(aa)\n      call copy3_scalar(c_loc(aptr), c_loc(bptr))\n      !$omp target update from(bb)\n-     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 215\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 216\n      !$omp end target data\n \n-     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 1\n-     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_double) > 10.0_c_double * epsilon(aa)) stop 217\n+     if (abs(3.0_c_double * aa - bb) > 10.0_c_double * epsilon(aa)) stop 218\n \n \n      !$omp target data map(to:cc) map(from:dd)\n@@ -1107,28 +1107,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 219\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 220\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_double\n      !$omp target update to(cc)\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 3333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 221\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 222\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_double\n      !$omp target update to(cc)\n      call copy3_scalar(c_loc(cptr), c_loc(dptr))\n      !$omp target update from(dd)\n-     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 1\n+     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(cc)) stop 223\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(cc)) stop 224\n      !$omp end target data\n \n-     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd)) stop 1\n-     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd)) stop 1\n+     if (abs(cc - 33333.0_c_double) > 10.0_c_double * epsilon(dd)) stop 225\n+     if (abs(3.0_c_double * cc - dd) > 10.0_c_double * epsilon(dd)) stop 226\n \n \n      !$omp target data map(to:ee) map(from:ff)\n@@ -1142,28 +1142,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 227\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 228\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_double\n      !$omp target update to(ee)\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 5555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 229\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 230\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_double\n      !$omp target update to(ee)\n      call copy3_scalar(c_loc(eptr), c_loc(fptr))\n      !$omp target update from(ff)\n-     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff)) stop 1\n+     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 231\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ff)) stop 232\n      !$omp end target data\n \n-     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 1\n-     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 1\n+     if (abs(ee - 55555.0_c_double) > 10.0_c_double * epsilon(ee)) stop 233\n+     if (abs(3.0_c_double * ee - ff) > 10.0_c_double * epsilon(ee)) stop 234\n \n \n      !$omp target data map(to:gg) map(from:hh)\n@@ -1177,28 +1177,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(hh))) stop 1\n+     if (any(abs(gg - 777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 235\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(hh))) stop 236\n \n      ! check c_loc ptr again after target-value modification\n      gg = 7777.0_c_double\n      !$omp target update to(gg)\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 7777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 7777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 237\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 238\n \n      ! check Fortran pointer after target-value modification\n      gg = 77777.0_c_double\n      !$omp target update to(gg)\n      call copy3_array(c_loc(gptr), c_loc(hptr), N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 239\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 240\n      !$omp end target data\n \n-     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_double) > 10.0_c_double * epsilon(gg))) stop 241\n+     if (any(abs(3.0_c_double * gg - hh) > 10.0_c_double * epsilon(gg))) stop 242\n \n      deallocate(ee, ff)\n    end subroutine test_main_2"}, {"sha": "d6c5a6723700d9e6dd5668e90db1d82fc9cf2ed5", "filename": "libgomp/testsuite/libgomp.fortran/use_device_addr-2.f90", "status": "modified", "additions": 241, "deletions": 241, "changes": 482, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_addr-2.f90?ref=12fd2ec5ae30207e3107eca0fea45e3b5713e26b", "patch": "@@ -135,26 +135,26 @@ subroutine test_dummy_callee_1(aa, bb, cc, dd, ee, ff, gg, hh, N)\n      call copy3_scalar(c_loc(aa), c_loc(bb))\n      !$omp end target data\n      if (abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 2\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n      call copy3_scalar(c_loc(cc), c_loc(dd))\n      !$omp end target data\n-     if (abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc)) stop 3\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 4\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n      call copy3_scalar(c_loc(ee), c_loc(ff))\n      !$omp end target data\n-     if (abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee)) stop 5\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 6\n \n \n      !$omp target data map(to:gg) map(from:hh) use_device_addr(gg,hh)\n      call copy3_array(c_loc(gg), c_loc(hh), N)\n      !$omp end target data\n-     if (any(abs(gg - 77.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77.0_c_float) > 10.0_c_float * epsilon(gg))) stop 7\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 8\n   end subroutine test_dummy_callee_1\n \n   ! Save device ptr - and recall pointer\n@@ -221,28 +221,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n      ! check c_loc ptr once\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 9\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 10\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_float\n      !$omp target update to(aa)\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 11\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 12\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_float\n      !$omp target update to(aa)\n      call copy3_scalar(c_loc(aptr), c_loc(bptr))\n      !$omp target update from(bb)\n-     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 13\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 14\n      !$omp end target data\n \n-     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 15\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 16\n \n \n      !$omp target data map(to:cc) map(from:dd)\n@@ -256,28 +256,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n      ! check c_loc ptr once\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 17\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 18\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_float\n      !$omp target update to(cc)\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 19\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 20\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_float\n      !$omp target update to(cc)\n      call copy3_scalar(c_loc(cptr), c_loc(dptr))\n      !$omp target update from(dd)\n-     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 21\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 22\n      !$omp end target data\n \n-     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd)) stop 1\n+     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd)) stop 23\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd)) stop 24\n \n \n      !$omp target data map(to:ee) map(from:ff)\n@@ -291,28 +291,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n      ! check c_loc ptr once\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 25\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 26\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_float\n      !$omp target update to(ee)\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 27\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 28\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_float\n      !$omp target update to(ee)\n      call copy3_scalar(c_loc(eptr), c_loc(fptr))\n      !$omp target update from(ff)\n-     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff)) stop 1\n+     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 29\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff)) stop 30\n      !$omp end target data\n \n-     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 31\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 32\n \n \n      !$omp target data map(to:gg) map(from:hh)\n@@ -326,28 +326,28 @@ subroutine test_dummy_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n      ! check c_loc ptr once\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(hh))) stop 1\n+     if (any(abs(gg - 777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 33\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(hh))) stop 34\n \n      ! check c_loc ptr again after target-value modification\n      gg = 7777.0_c_float\n      !$omp target update to(gg)\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 7777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 7777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 35\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 36\n \n      ! check Fortran pointer after target-value modification\n      gg = 77777.0_c_float\n      !$omp target update to(gg)\n      call copy3_array(c_loc(gptr), c_loc(hptr), N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 37\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 38\n      !$omp end target data\n \n-     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 39\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 40\n   end subroutine test_dummy_callee_2\n end module test_dummies\n \n@@ -378,8 +378,8 @@ subroutine test_dummy_val_callee_1(aa, bb)\n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n      call copy3_scalar(c_loc(aa), c_loc(bb))\n      !$omp end target data\n-     if (abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa)) stop 41\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 42\n   end subroutine test_dummy_val_callee_1\n \n   ! Save device ptr - and recall pointer\n@@ -413,28 +413,28 @@ subroutine test_dummy_val_callee_2(aa, bb, c_aptr, c_bptr, aptr, bptr)\n      ! check c_loc ptr once\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 43\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 44\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_float\n      !$omp target update to(aa)\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 45\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 46\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_float\n      !$omp target update to(aa)\n      call copy3_scalar(c_loc(aptr), c_loc(bptr))\n      !$omp target update from(bb)\n-     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 47\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 48\n      !$omp end target data\n \n-     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 49\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 50\n   end subroutine test_dummy_val_callee_2\n end module test_dummies_value\n \n@@ -486,45 +486,45 @@ subroutine test_dummy_opt_callee_1(aa, bb, cc, dd, ee, ff, gg, hh, N)\n      integer, value :: N\n \n      ! All shall be present - and pointing to non-NULL\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.present(gg) .or. .not.present(hh)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 51\n+     if (.not.present(cc) .or. .not.present(dd)) stop 52\n+     if (.not.present(ee) .or. .not.present(ff)) stop 53\n+     if (.not.present(gg) .or. .not.present(hh)) stop 54\n \n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 55\n \n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 56\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 57\n      call copy3_scalar(c_loc(aa), c_loc(bb))\n      !$omp end target data\n-     if (abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa)) stop 58\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 59\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 60\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 61\n      call copy3_scalar(c_loc(cc), c_loc(dd))\n      !$omp end target data\n-     if (abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc)) stop 62\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 63\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 64\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 65\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 66\n      call copy3_scalar(c_loc(ee), c_loc(ff))\n      !$omp end target data\n-     if (abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee)) stop 67\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 68\n \n      !$omp target data map(to:gg) map(from:hh) use_device_addr(gg,hh)\n-     if (.not.present(gg) .or. .not.present(hh)) stop 1\n-     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 1\n+     if (.not.present(gg) .or. .not.present(hh)) stop 69\n+     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 70\n      call copy3_array(c_loc(gg), c_loc(hh), N)\n      !$omp end target data\n-     if (any(abs(gg - 77.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77.0_c_float) > 10.0_c_float * epsilon(gg))) stop 71\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 72\n   end subroutine test_dummy_opt_callee_1\n \n   ! Save device ptr - and recall pointer\n@@ -572,12 +572,12 @@ subroutine test_dummy_opt_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n      real(c_float) :: dummy\n \n      ! All shall be present - and pointing to non-NULL\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.present(gg) .or. .not.present(hh)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 73\n+     if (.not.present(cc) .or. .not.present(dd)) stop 74\n+     if (.not.present(ee) .or. .not.present(ff)) stop 75\n+     if (.not.present(gg) .or. .not.present(hh)) stop 76\n \n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 77\n \n      aa = 111.0_c_float\n      bb = 222.0_c_float\n@@ -590,177 +590,177 @@ subroutine test_dummy_opt_callee_2(aa, bb, cc, dd, ee, ff, gg, hh, &\n \n      !$omp target data map(to:aa) map(from:bb)\n      !$omp target data map(alloc:dummy) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 78\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 79\n      c_aptr = c_loc(aa)\n      c_bptr = c_loc(bb)\n      aptr => aa\n      bptr => bb\n-     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 1\n-     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 1\n+     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 80\n+     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 81\n      !$omp end target data\n \n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n-     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 1\n-     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 82\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 83\n+     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 84\n+     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 85\n \n      ! check c_loc ptr once\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 86\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 87\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_float\n      !$omp target update to(aa)\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 88\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 89\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_float\n      !$omp target update to(aa)\n      call copy3_scalar(c_loc(aptr), c_loc(bptr))\n      !$omp target update from(bb)\n-     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 90\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 91\n      !$omp end target data\n \n-     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 92\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 93\n \n \n      !$omp target data map(to:cc) map(from:dd)\n      !$omp target data map(alloc:dummy) use_device_addr(cc,dd)\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 94\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 95\n      c_cptr = c_loc(cc)\n      c_dptr = c_loc(dd)\n      cptr => cc\n      dptr => dd\n-     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 1\n-     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 1\n+     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 96\n+     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 97\n      !$omp end target data\n-     if (.not.present(cc) .or. .not.present(dd)) stop 1\n-     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 1\n-     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 1\n-     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 1\n+     if (.not.present(cc) .or. .not.present(dd)) stop 98\n+     if (.not.c_associated(c_loc(cc)) .or. .not.c_associated(c_loc(dd))) stop 99\n+     if (.not.c_associated(c_cptr) .or. .not.c_associated(c_dptr)) stop 100\n+     if (.not.associated(cptr) .or. .not.associated(dptr)) stop 101\n \n      ! check c_loc ptr once\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 102\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 103\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_float\n      !$omp target update to(cc)\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 104\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 105\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_float\n      !$omp target update to(cc)\n      call copy3_scalar(c_loc(cptr), c_loc(dptr))\n      !$omp target update from(dd)\n-     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 106\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 107\n      !$omp end target data\n \n-     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd)) stop 1\n+     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd)) stop 108\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd)) stop 109\n \n \n      !$omp target data map(to:ee) map(from:ff)\n      !$omp target data map(alloc:dummy) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 110\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 111\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 112\n      c_eptr = c_loc(ee)\n      c_fptr = c_loc(ff)\n      eptr => ee\n      fptr => ff\n-     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 1\n-     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 1\n+     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 113\n+     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 114\n      !$omp end target data\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (.not.associated(ee) .or. .not.associated(ff)) stop 1\n-     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 1\n-     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 1\n-     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 115\n+     if (.not.associated(ee) .or. .not.associated(ff)) stop 116\n+     if (.not.c_associated(c_loc(ee)) .or. .not.c_associated(c_loc(ff))) stop 117\n+     if (.not.c_associated(c_eptr) .or. .not.c_associated(c_fptr)) stop 118\n+     if (.not.associated(eptr) .or. .not.associated(fptr)) stop 119\n \n      ! check c_loc ptr once\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 120\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 121\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_float\n      !$omp target update to(ee)\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 122\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 123\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_float\n      !$omp target update to(ee)\n      call copy3_scalar(c_loc(eptr), c_loc(fptr))\n      !$omp target update from(ff)\n-     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff)) stop 1\n+     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 124\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff)) stop 125\n      !$omp end target data\n \n-     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 126\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 127\n \n \n      !$omp target data map(to:gg) map(from:hh)\n      !$omp target data map(alloc:dummy) use_device_addr(gg,hh)\n-     if (.not.present(gg) .or. .not.present(hh)) stop 1\n-     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 1\n+     if (.not.present(gg) .or. .not.present(hh)) stop 128\n+     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 129\n      c_gptr = c_loc(gg)\n      c_hptr = c_loc(hh)\n      gptr => gg\n      hptr => hh\n-     if (.not.c_associated(c_gptr) .or. .not.c_associated(c_hptr)) stop 1\n-     if (.not.associated(gptr) .or. .not.associated(hptr)) stop 1\n+     if (.not.c_associated(c_gptr) .or. .not.c_associated(c_hptr)) stop 130\n+     if (.not.associated(gptr) .or. .not.associated(hptr)) stop 131\n      !$omp end target data\n-     if (.not.present(gg) .or. .not.present(hh)) stop 1\n-     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 1\n-     if (.not.c_associated(c_gptr) .or. .not.c_associated(c_hptr)) stop 1\n-     if (.not.associated(gptr) .or. .not.associated(hptr)) stop 1\n+     if (.not.present(gg) .or. .not.present(hh)) stop 132\n+     if (.not.c_associated(c_loc(gg)) .or. .not.c_associated(c_loc(hh))) stop 133\n+     if (.not.c_associated(c_gptr) .or. .not.c_associated(c_hptr)) stop 134\n+     if (.not.associated(gptr) .or. .not.associated(hptr)) stop 135\n \n      ! check c_loc ptr once\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(hh))) stop 1\n+     if (any(abs(gg - 777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 136\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(hh))) stop 137\n \n      ! check c_loc ptr again after target-value modification\n      gg = 7777.0_c_float\n      !$omp target update to(gg)\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 7777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 7777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 138\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 139\n \n      ! check Fortran pointer after target-value modification\n      gg = 77777.0_c_float\n      !$omp target update to(gg)\n      call copy3_array(c_loc(gptr), c_loc(hptr), N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 140\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 141\n      !$omp end target data\n \n-     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 142\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 143\n   end subroutine test_dummy_opt_callee_2\n end module test_dummies_opt\n \n@@ -789,15 +789,15 @@ subroutine test_dummy_opt_val_callee_1(aa, bb)\n      ! scalars\n      real(c_float), optional, value, target :: aa, bb\n \n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 144\n \n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 145\n+     if (.not.c_associated(c_loc(aa)) .or. .not.c_associated(c_loc(bb))) stop 146\n      call copy3_scalar(c_loc(aa), c_loc(bb))\n      !$omp end target data\n-     if (abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa)) stop 147\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 148\n   end subroutine test_dummy_opt_val_callee_1\n \n   ! Save device ptr - and recall pointer\n@@ -817,56 +817,56 @@ subroutine test_dummy_opt_val_callee_2(aa, bb, c_aptr, c_bptr, aptr, bptr)\n \n      real(c_float) :: dummy\n \n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 1\n-     if (.not.present(aptr) .or. .not.present(bptr)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 149\n+     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 150\n+     if (.not.present(aptr) .or. .not.present(bptr)) stop 151\n \n      aa = 111.0_c_float\n      bb = 222.0_c_float\n \n      !$omp target data map(to:aa) map(from:bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 1\n-     if (.not.present(aptr) .or. .not.present(bptr)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 152\n+     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 153\n+     if (.not.present(aptr) .or. .not.present(bptr)) stop 154\n \n      !$omp target data map(alloc:dummy) use_device_addr(aa,bb)\n-     if (.not.present(aa) .or. .not.present(bb)) stop 1\n-     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 1\n-     if (.not.present(aptr) .or. .not.present(bptr)) stop 1\n+     if (.not.present(aa) .or. .not.present(bb)) stop 155\n+     if (.not.present(c_aptr) .or. .not.present(c_bptr)) stop 156\n+     if (.not.present(aptr) .or. .not.present(bptr)) stop 157\n \n      c_aptr = c_loc(aa)\n      c_bptr = c_loc(bb)\n      aptr => aa\n      bptr => bb\n-     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 1\n-     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 1\n+     if (.not.c_associated(c_aptr) .or. .not.c_associated(c_bptr)) stop 158\n+     if (.not.associated(aptr) .or. .not.associated(bptr)) stop 159\n      !$omp end target data\n \n      ! check c_loc ptr once\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 160\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 161\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_float\n      !$omp target update to(aa)\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 162\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 163\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_float\n      !$omp target update to(aa)\n      call copy3_scalar(c_loc(aptr), c_loc(bptr))\n      !$omp target update from(bb)\n-     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 164\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 165\n      !$omp end target data\n \n-     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 166\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 167\n   end subroutine test_dummy_opt_val_callee_2\n end module test_dummies_opt_value\n \n@@ -894,31 +894,31 @@ subroutine test_nullptr_1()\n      ee => null()\n      ff => null()\n \n-     if (associated(aa) .or. associated(bb)) stop 1\n+     if (associated(aa) .or. associated(bb)) stop 168\n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n-     if (c_associated(c_loc(aa)) .or. c_associated(c_loc(bb))) stop 1\n+     if (c_associated(c_loc(aa)) .or. c_associated(c_loc(bb))) stop 169\n      c_aptr = c_loc(aa)\n      c_bptr = c_loc(bb)\n      aptr => aa\n      bptr => bb\n-     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 1\n-     if (associated(aptr) .or. associated(bptr, bb)) stop 1\n+     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 170\n+     if (associated(aptr) .or. associated(bptr, bb)) stop 171\n      !$omp end target data\n-     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 1\n-     if (associated(aptr) .or. associated(bptr, bb)) stop 1\n+     if (c_associated(c_aptr) .or. c_associated(c_bptr)) stop 172\n+     if (associated(aptr) .or. associated(bptr, bb)) stop 173\n \n-     if (allocated(gg)) stop 1\n+     if (allocated(gg)) stop 174\n      !$omp target data map(tofrom:gg) use_device_addr(gg)\n-     if (c_associated(c_loc(gg))) stop 1\n+     if (c_associated(c_loc(gg))) stop 175\n      c_gptr = c_loc(gg)\n      gptr => gg\n-     if (c_associated(c_gptr)) stop 1\n-     if (associated(gptr)) stop 1\n-     if (allocated(gg)) stop 1\n+     if (c_associated(c_gptr)) stop 176\n+     if (associated(gptr)) stop 177\n+     if (allocated(gg)) stop 178\n      !$omp end target data\n-     if (c_associated(c_gptr)) stop 1\n-     if (associated(gptr)) stop 1\n-     if (allocated(gg)) stop 1\n+     if (c_associated(c_gptr)) stop 179\n+     if (associated(gptr)) stop 180\n+     if (allocated(gg)) stop 181\n \n      call test_dummy_opt_nullptr_callee_1(ee, ff, hh, c_eptr, c_fptr, c_hptr, eptr, fptr, hptr)\n   end subroutine test_nullptr_1\n@@ -931,43 +931,43 @@ subroutine test_dummy_opt_nullptr_callee_1(ee, ff, hh, c_eptr, c_fptr, c_hptr, e\n      type(c_ptr), optional :: c_eptr, c_fptr, c_hptr\n      real(c_float), optional, pointer :: eptr, fptr, hptr\n \n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (associated(ee) .or. associated(ff)) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 182\n+     if (associated(ee) .or. associated(ff)) stop 183\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n-     if (.not.present(ee) .or. .not.present(ff)) stop 1\n-     if (associated(ee) .or. associated(ff)) stop 1\n-     if (c_associated(c_loc(ee)) .or. c_associated(c_loc(ff))) stop 1\n+     if (.not.present(ee) .or. .not.present(ff)) stop 184\n+     if (associated(ee) .or. associated(ff)) stop 185\n+     if (c_associated(c_loc(ee)) .or. c_associated(c_loc(ff))) stop 186\n      c_eptr = c_loc(ee)\n      c_fptr = c_loc(ff)\n      eptr => ee\n      fptr => ff\n-     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 1\n-     if (associated(eptr) .or. associated(fptr)) stop 1\n+     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 187\n+     if (associated(eptr) .or. associated(fptr)) stop 188\n      !$omp end target data\n \n-     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 1\n-     if (associated(eptr) .or. associated(fptr)) stop 1\n-     if (associated(ee) .or. associated(ff)) stop 1\n+     if (c_associated(c_eptr) .or. c_associated(c_fptr)) stop 189\n+     if (associated(eptr) .or. associated(fptr)) stop 190\n+     if (associated(ee) .or. associated(ff)) stop 191\n \n \n-     if (.not.present(hh)) stop 1\n-     if (allocated(hh)) stop 1\n+     if (.not.present(hh)) stop 192\n+     if (allocated(hh)) stop 193\n \n      !$omp target data map(tofrom:hh) use_device_addr(hh)\n-     if (.not.present(hh)) stop 1\n-     if (allocated(hh)) stop 1\n-     if (c_associated(c_loc(hh))) stop 1\n+     if (.not.present(hh)) stop 194\n+     if (allocated(hh)) stop 195\n+     if (c_associated(c_loc(hh))) stop 196\n      c_hptr = c_loc(hh)\n      hptr => hh\n-     if (c_associated(c_hptr)) stop 1\n-     if (associated(hptr)) stop 1\n-     if (allocated(hh)) stop 1\n+     if (c_associated(c_hptr)) stop 197\n+     if (associated(hptr)) stop 198\n+     if (allocated(hh)) stop 199\n      !$omp end target data\n \n-     if (c_associated(c_hptr)) stop 1\n-     if (associated(hptr)) stop 1\n-     if (allocated(hh)) stop 1\n+     if (c_associated(c_hptr)) stop 200\n+     if (associated(hptr)) stop 201\n+     if (allocated(hh)) stop 202\n   end subroutine test_dummy_opt_nullptr_callee_1\n end module test_nullptr\n \n@@ -1008,27 +1008,27 @@ subroutine test_main_1()\n      !$omp target data map(to:aa) map(from:bb) use_device_addr(aa,bb)\n      call copy3_scalar(c_loc(aa), c_loc(bb))\n      !$omp end target data\n-     if (abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11.0_c_float) > 10.0_c_float * epsilon(aa)) stop 203\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 204\n \n      !$omp target data map(to:cc) map(from:dd) use_device_addr(cc,dd)\n      call copy3_scalar(c_loc(cc), c_loc(dd))\n      !$omp end target data\n-     if (abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 33.0_c_float) > 10.0_c_float * epsilon(cc)) stop 205\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 206\n \n      !$omp target data map(to:ee) map(from:ff) use_device_addr(ee,ff)\n      call copy3_scalar(c_loc(ee), c_loc(ff))\n      !$omp end target data\n-     if (abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 55.0_c_float) > 10.0_c_float * epsilon(ee)) stop 207\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 208\n \n \n      !$omp target data map(to:gg) map(from:hh) use_device_addr(gg,hh)\n      call copy3_array(c_loc(gg), c_loc(hh), N)\n      !$omp end target data\n-     if (any(abs(gg - 77.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77.0_c_float) > 10.0_c_float * epsilon(gg))) stop 209\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 210\n \n      deallocate(ee, ff) ! pointers, only\n    end subroutine test_main_1\n@@ -1072,28 +1072,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 211\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 212\n \n      ! check c_loc ptr again after target-value modification\n      aa = 1111.0_c_float\n      !$omp target update to(aa)\n      call copy3_scalar(c_aptr, c_bptr)\n      !$omp target update from(bb)\n-     if (abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 1111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 213\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 214\n \n      ! check Fortran pointer after target-value modification\n      aa = 11111.0_c_float\n      !$omp target update to(aa)\n      call copy3_scalar(c_loc(aptr), c_loc(bptr))\n      !$omp target update from(bb)\n-     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 215\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 216\n      !$omp end target data\n \n-     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 1\n-     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 1\n+     if (abs(aa - 11111.0_c_float) > 10.0_c_float * epsilon(aa)) stop 217\n+     if (abs(3.0_c_float * aa - bb) > 10.0_c_float * epsilon(aa)) stop 218\n \n \n      !$omp target data map(to:cc) map(from:dd)\n@@ -1107,28 +1107,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 219\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 220\n \n      ! check c_loc ptr again after target-value modification\n      cc = 3333.0_c_float\n      !$omp target update to(cc)\n      call copy3_scalar(c_cptr, c_dptr)\n      !$omp target update from(dd)\n-     if (abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 3333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 221\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 222\n \n      ! check Fortran pointer after target-value modification\n      cc = 33333.0_c_float\n      !$omp target update to(cc)\n      call copy3_scalar(c_loc(cptr), c_loc(dptr))\n      !$omp target update from(dd)\n-     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 1\n+     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(cc)) stop 223\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(cc)) stop 224\n      !$omp end target data\n \n-     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd)) stop 1\n-     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd)) stop 1\n+     if (abs(cc - 33333.0_c_float) > 10.0_c_float * epsilon(dd)) stop 225\n+     if (abs(3.0_c_float * cc - dd) > 10.0_c_float * epsilon(dd)) stop 226\n \n \n      !$omp target data map(to:ee) map(from:ff)\n@@ -1142,28 +1142,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 227\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 228\n \n      ! check c_loc ptr again after target-value modification\n      ee = 5555.0_c_float\n      !$omp target update to(ee)\n      call copy3_scalar(c_eptr, c_fptr)\n      !$omp target update from(ff)\n-     if (abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 5555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 229\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 230\n \n      ! check Fortran pointer after target-value modification\n      ee = 55555.0_c_float\n      !$omp target update to(ee)\n      call copy3_scalar(c_loc(eptr), c_loc(fptr))\n      !$omp target update from(ff)\n-     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff)) stop 1\n+     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 231\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ff)) stop 232\n      !$omp end target data\n \n-     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 1\n-     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 1\n+     if (abs(ee - 55555.0_c_float) > 10.0_c_float * epsilon(ee)) stop 233\n+     if (abs(3.0_c_float * ee - ff) > 10.0_c_float * epsilon(ee)) stop 234\n \n \n      !$omp target data map(to:gg) map(from:hh)\n@@ -1177,28 +1177,28 @@ subroutine test_main_2\n      ! check c_loc ptr once\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(hh))) stop 1\n+     if (any(abs(gg - 777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 235\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(hh))) stop 236\n \n      ! check c_loc ptr again after target-value modification\n      gg = 7777.0_c_float\n      !$omp target update to(gg)\n      call copy3_array(c_gptr, c_hptr, N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 7777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 7777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 237\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 238\n \n      ! check Fortran pointer after target-value modification\n      gg = 77777.0_c_float\n      !$omp target update to(gg)\n      call copy3_array(c_loc(gptr), c_loc(hptr), N)\n      !$omp target update from(hh)\n-     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 239\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 240\n      !$omp end target data\n \n-     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 1\n-     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 1\n+     if (any(abs(gg - 77777.0_c_float) > 10.0_c_float * epsilon(gg))) stop 241\n+     if (any(abs(3.0_c_float * gg - hh) > 10.0_c_float * epsilon(gg))) stop 242\n \n      deallocate(ee, ff)\n    end subroutine test_main_2"}, {"sha": "6428beb357c8da23a36e4f6fb64a3df85a9f6de5", "filename": "libgomp/testsuite/libgomp.fortran/use_device_ptr-1.f90", "status": "modified", "additions": 83, "deletions": 83, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_ptr-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_ptr-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fuse_device_ptr-1.f90?ref=12fd2ec5ae30207e3107eca0fea45e3b5713e26b", "patch": "@@ -121,23 +121,23 @@ subroutine use_device_ptr_sub(AA, BB, CC, DD, EE, FF, AptrA, BptrB, N)\n     !$omp end target data\n \n     if (any(abs(AA - 11.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 2\n \n     ! allocatable array to use_device_ptr\n     !$omp target data map(to:CC) map(from:DD) use_device_ptr(CC,DD)\n     call copy3_array(c_loc(CC), c_loc(DD), N)\n     !$omp end target data\n \n-    if (any(abs(CC - 33.0_c_double) > 10.0_c_double * epsilon(CC))) stop 1\n-    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 1\n+    if (any(abs(CC - 33.0_c_double) > 10.0_c_double * epsilon(CC))) stop 3\n+    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 4\n \n     ! fixed-size decriptorless array to use_device_ptr\n     !$omp target data map(to:EE) map(from:FF) use_device_ptr(EE,FF)\n     call copy3_array(c_loc(EE), c_loc(FF), N)\n     !$omp end target data\n \n-    if (any(abs(EE - 55.0_c_double) > 10.0_c_double * epsilon(EE))) stop 1\n-    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 1\n+    if (any(abs(EE - 55.0_c_double) > 10.0_c_double * epsilon(EE))) stop 5\n+    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 6\n \n \n \n@@ -159,53 +159,53 @@ subroutine use_device_ptr_sub(AA, BB, CC, DD, EE, FF, AptrA, BptrB, N)\n \n     call copy3_array(tgt_aptr, tgt_bptr, N)\n     !$omp target update from(BB)\n-    if (any(abs(AA - 111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(AA - 111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 7\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 8\n \n     AA = 1111.0_c_double\n     !$omp target update to(AA)\n     call copy3_array(tgt_aptr, tgt_bptr, N)\n     !$omp target update from(BB)\n-    if (any(abs(AA - 1111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(AA - 1111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 9\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 10\n \n     ! AprtA tests\n     AA = 7.0_c_double\n     !$omp target update to(AA)\n     call copy3_array(c_loc(AptrA), c_loc(BptrB), N)\n     !$omp target update from(BB)\n-    if (any(abs(AA - 7.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(AA - 7.0_c_double) > 10.0_c_double * epsilon(AA))) stop 11\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 12\n \n     AA = 77.0_c_double\n     !$omp target update to(AA)\n     call copy3_array1(AptrA, BptrB)\n     !$omp target update from(BB)\n-    if (any(abs(AA - 77.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(AA - 77.0_c_double) > 10.0_c_double * epsilon(AA))) stop 13\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 14\n \n !    AA = 777.0_c_double\n !    !$omp target update to(AA)\n !    call copy3_array2(AptrA, BptrB)\n !    !$omp target update from(BB)\n-!    if (any(abs(AA - 777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-!    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+!    if (any(abs(AA - 777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 15\n+!    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 16\n \n     AA = 7777.0_c_double\n     !$omp target update to(AA)\n     call copy3_array3(AptrA, BptrB)\n     !$omp target update from(BB)\n-    if (any(abs(AA - 7777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(AA - 7777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 17\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 18\n \n !    AA = 77777.0_c_double\n !    !$omp target update to(AA)\n !    call copy3_array4(AptrA, BptrB)\n !    !$omp target update from(BB)\n     !$omp end target data\n !\n-!    if (any(abs(AA - 77777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-!    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+!    if (any(abs(AA - 77777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 19\n+!    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 20\n \n \n \n@@ -218,17 +218,17 @@ subroutine use_device_ptr_sub(AA, BB, CC, DD, EE, FF, AptrA, BptrB, N)\n \n     call copy3_array(tgt_cptr, tgt_dptr, N)\n     !$omp target update from(DD)\n-    if (any(abs(CC - 333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 1\n-    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 1\n+    if (any(abs(CC - 333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 21\n+    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 22\n \n     CC = 3333.0_c_double\n     !$omp target update to(CC)\n     call copy3_array(tgt_cptr, tgt_dptr, N)\n     !$omp target update from(DD)\n     !$omp end target data\n \n-    if (any(abs(CC - 3333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 1\n-    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 1\n+    if (any(abs(CC - 3333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 23\n+    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 24\n \n \n \n@@ -241,17 +241,17 @@ subroutine use_device_ptr_sub(AA, BB, CC, DD, EE, FF, AptrA, BptrB, N)\n \n     call copy3_array(tgt_eptr, tgt_fptr, N)\n     !$omp target update from(FF)\n-    if (any(abs(EE - 555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 1\n-    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 1\n+    if (any(abs(EE - 555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 25\n+    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 26\n \n     EE = 5555.0_c_double\n     !$omp target update to(EE)\n     call copy3_array(tgt_eptr, tgt_fptr, N)\n     !$omp target update from(FF)\n     !$omp end target data\n \n-    if (any(abs(EE - 5555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 1\n-    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 1\n+    if (any(abs(EE - 5555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 27\n+    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 28\n   end subroutine use_device_ptr_sub\n \n \n@@ -280,24 +280,24 @@ subroutine use_device_ptr_sub2(AA, BB, CC, DD, EE, FF, AptrA, BptrB, N)\n     call copy3_array(c_loc(AA), c_loc(BB), N)\n     !$omp end target data\n \n-    if (any(abs(AA - 11.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(AA - 11.0_c_double) > 10.0_c_double * epsilon(AA))) stop 29\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 30\n \n     ! allocatable array to use_device_ptr\n     !$omp target data map(to:CC) map(from:DD) use_device_ptr(CC,DD)\n     call copy3_array(c_loc(CC), c_loc(DD), N)\n     !$omp end target data\n \n-    if (any(abs(CC - 33.0_c_double) > 10.0_c_double * epsilon(CC))) stop 1\n-    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 1\n+    if (any(abs(CC - 33.0_c_double) > 10.0_c_double * epsilon(CC))) stop 31\n+    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 32\n \n     ! fixed-size decriptorless array to use_device_ptr\n     !$omp target data map(to:EE) map(from:FF) use_device_ptr(EE,FF)\n     call copy3_array(c_loc(EE), c_loc(FF), N)\n     !$omp end target data\n \n-    if (any(abs(EE - 55.0_c_double) > 10.0_c_double * epsilon(EE))) stop 1\n-    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 1\n+    if (any(abs(EE - 55.0_c_double) > 10.0_c_double * epsilon(EE))) stop 33\n+    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 34\n \n \n \n@@ -319,53 +319,53 @@ subroutine use_device_ptr_sub2(AA, BB, CC, DD, EE, FF, AptrA, BptrB, N)\n \n     call copy3_array(tgt_aptr, tgt_bptr, N)\n     !$omp target update from(BB)\n-    if (any(abs(AA - 111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(AA - 111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 35\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 36\n \n     AA = 1111.0_c_double\n     !$omp target update to(AA)\n     call copy3_array(tgt_aptr, tgt_bptr, N)\n     !$omp target update from(BB)\n-    if (any(abs(AA - 1111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(AA - 1111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 37\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 38\n \n     ! AprtA tests\n     AA = 7.0_c_double\n     !$omp target update to(AA)\n     call copy3_array(c_loc(AptrA), c_loc(BptrB), N)\n     !$omp target update from(BB)\n-    if (any(abs(AA - 7.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(AA - 7.0_c_double) > 10.0_c_double * epsilon(AA))) stop 39\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 40\n \n     AA = 77.0_c_double\n     !$omp target update to(AA)\n     call copy3_array1(AptrA, BptrB)\n     !$omp target update from(BB)\n-    if (any(abs(AA - 77.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(AA - 77.0_c_double) > 10.0_c_double * epsilon(AA))) stop 41\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 42\n \n !    AA = 777.0_c_double\n !    !$omp target update to(AA)\n !    call copy3_array2(AptrA, BptrB)\n !    !$omp target update from(BB)\n-!    if (any(abs(AA - 777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-!    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+!    if (any(abs(AA - 777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 43\n+!    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 44\n \n     AA = 7777.0_c_double\n     !$omp target update to(AA)\n     call copy3_array3(AptrA, BptrB)\n     !$omp target update from(BB)\n-    if (any(abs(AA - 7777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+    if (any(abs(AA - 7777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 45\n+    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 46\n \n !    AA = 77777.0_c_double\n !    !$omp target update to(AA)\n !    call copy3_array4(AptrA, BptrB)\n !    !$omp target update from(BB)\n     !$omp end target data\n !\n-!    if (any(abs(AA - 77777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-!    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+!    if (any(abs(AA - 77777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 47\n+!    if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 48\n \n \n \n@@ -378,17 +378,17 @@ subroutine use_device_ptr_sub2(AA, BB, CC, DD, EE, FF, AptrA, BptrB, N)\n \n     call copy3_array(tgt_cptr, tgt_dptr, N)\n     !$omp target update from(DD)\n-    if (any(abs(CC - 333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 1\n-    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 1\n+    if (any(abs(CC - 333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 49\n+    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 50\n \n     CC = 3333.0_c_double\n     !$omp target update to(CC)\n     call copy3_array(tgt_cptr, tgt_dptr, N)\n     !$omp target update from(DD)\n     !$omp end target data\n \n-    if (any(abs(CC - 3333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 1\n-    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 1\n+    if (any(abs(CC - 3333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 51\n+    if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 52\n \n \n \n@@ -401,16 +401,16 @@ subroutine use_device_ptr_sub2(AA, BB, CC, DD, EE, FF, AptrA, BptrB, N)\n \n     call copy3_array(tgt_eptr, tgt_fptr, N)\n     !$omp target update from(FF)\n-    if (any(abs(EE - 555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 1\n-    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 1\n+    if (any(abs(EE - 555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 53\n+    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 54\n \n     EE = 5555.0_c_double\n     !$omp target update to(EE)\n     call copy3_array(tgt_eptr, tgt_fptr, N)\n     !$omp end target data\n \n-    if (any(abs(EE - 5555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 1\n-    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 1\n+    if (any(abs(EE - 5555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 55\n+    if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 56\n   end subroutine use_device_ptr_sub2\n end module offloading2\n \n@@ -444,24 +444,24 @@ program omp_device_ptr\n   call copy3_array(c_loc(AA), c_loc(BB), N)\n   !$omp end target data\n \n-  if (any(abs(AA - 11.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+  if (any(abs(AA - 11.0_c_double) > 10.0_c_double * epsilon(AA))) stop 57\n+  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 58\n \n   ! allocatable array to use_device_ptr\n   !$omp target data map(to:CC) map(from:DD) use_device_ptr(CC,DD)\n   call copy3_array(c_loc(CC), c_loc(DD), N)\n   !$omp end target data\n \n-  if (any(abs(CC - 33.0_c_double) > 10.0_c_double * epsilon(CC))) stop 1\n-  if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 1\n+  if (any(abs(CC - 33.0_c_double) > 10.0_c_double * epsilon(CC))) stop 59\n+  if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 60\n \n   ! fixed-size decriptorless array to use_device_ptr\n   !$omp target data map(to:EE) map(from:FF) use_device_ptr(EE,FF)\n   call copy3_array(c_loc(EE), c_loc(FF), N)\n   !$omp end target data\n \n-  if (any(abs(EE - 55.0_c_double) > 10.0_c_double * epsilon(EE))) stop 1\n-  if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 1\n+  if (any(abs(EE - 55.0_c_double) > 10.0_c_double * epsilon(EE))) stop 61\n+  if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 62\n \n \n \n@@ -483,53 +483,53 @@ program omp_device_ptr\n \n   call copy3_array(tgt_aptr, tgt_bptr, N)\n   !$omp target update from(BB)\n-  if (any(abs(AA - 111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+  if (any(abs(AA - 111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 63\n+  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 64\n \n   AA = 1111.0_c_double\n   !$omp target update to(AA)\n   call copy3_array(tgt_aptr, tgt_bptr, N)\n   !$omp target update from(BB)\n-  if (any(abs(AA - 1111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+  if (any(abs(AA - 1111.0_c_double) > 10.0_c_double * epsilon(AA))) stop 65\n+  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 66\n \n   ! AprtA tests\n   AA = 7.0_c_double\n   !$omp target update to(AA)\n   call copy3_array(c_loc(AptrA), c_loc(BptrB), N)\n   !$omp target update from(BB)\n-  if (any(abs(AA - 7.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+  if (any(abs(AA - 7.0_c_double) > 10.0_c_double * epsilon(AA))) stop 67\n+  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 68\n \n   AA = 77.0_c_double\n   !$omp target update to(AA)\n   call copy3_array1(AptrA, BptrB)\n   !$omp target update from(BB)\n-  if (any(abs(AA - 77.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+  if (any(abs(AA - 77.0_c_double) > 10.0_c_double * epsilon(AA))) stop 69\n+  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 70\n \n !  AA = 777.0_c_double\n !  !$omp target update to(AA)\n !  call copy3_array2(AptrA, BptrB)\n !  !$omp target update from(BB)\n-!  if (any(abs(AA - 777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-!  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+!  if (any(abs(AA - 777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 71\n+!  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 72\n \n   AA = 7777.0_c_double\n   !$omp target update to(AA)\n   call copy3_array3(AptrA, BptrB)\n   !$omp target update from(BB)\n-  if (any(abs(AA - 7777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+  if (any(abs(AA - 7777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 73\n+  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 74\n \n !  AA = 77777.0_c_double\n !  !$omp target update to(AA)\n !  call copy3_array4(AptrA, BptrB)\n !  !$omp target update from(BB)\n   !$omp end target data\n !\n-!  if (any(abs(AA - 77777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 1\n-!  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 1\n+!  if (any(abs(AA - 77777.0_c_double) > 10.0_c_double * epsilon(AA))) stop 75\n+!  if (any(abs(3.0_c_double * AA - BB) > 10.0_c_double * epsilon(AA))) stop 76\n \n \n \n@@ -542,17 +542,17 @@ program omp_device_ptr\n \n   call copy3_array(tgt_cptr, tgt_dptr, N)\n   !$omp target update from(DD)\n-  if (any(abs(CC - 333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 1\n-  if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 1\n+  if (any(abs(CC - 333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 77\n+  if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 78\n \n   CC = 3333.0_c_double\n   !$omp target update to(CC)\n   call copy3_array(tgt_cptr, tgt_dptr, N)\n   !$omp target update from(DD)\n   !$omp end target data\n \n-  if (any(abs(CC - 3333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 1\n-  if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 1\n+  if (any(abs(CC - 3333.0_c_double) > 10.0_c_double * epsilon(CC))) stop 79\n+  if (any(abs(3.0_c_double * CC - DD) > 10.0_c_double * epsilon(CC))) stop 80\n \n \n \n@@ -565,17 +565,17 @@ program omp_device_ptr\n \n   call copy3_array(tgt_eptr, tgt_fptr, N)\n   !$omp target update from(FF)\n-  if (any(abs(EE - 555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 1\n-  if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 1\n+  if (any(abs(EE - 555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 81\n+  if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 82\n \n   EE = 5555.0_c_double\n   !$omp target update to(EE)\n   call copy3_array(tgt_eptr, tgt_fptr, N)\n   !$omp target update from(FF)\n   !$omp end target data\n \n-  if (any(abs(EE - 5555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 1\n-  if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 1\n+  if (any(abs(EE - 5555.0_c_double) > 10.0_c_double * epsilon(EE))) stop 83\n+  if (any(abs(3.0_c_double * EE - FF) > 10.0_c_double * epsilon(EE))) stop 84\n \n \n "}, {"sha": "8b9bbd94cbccef29a787b3dccc3a85ffd09b1c3e", "filename": "libgomp/testsuite/libgomp.oacc-fortran/lib-15.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Flib-15.f90?ref=12fd2ec5ae30207e3107eca0fea45e3b5713e26b", "patch": "@@ -47,6 +47,6 @@ program main\n \n   call acc_delete (h)\n \n-  if (acc_is_present (h) .neqv. .FALSE.) stop 4\n+  if (acc_is_present (h) .neqv. .FALSE.) stop 5\n   \n end program"}, {"sha": "3cf7eb5987da3a70d80786916d4aead058937209", "filename": "libgomp/testsuite/libgomp.oacc-fortran/pset-1.f90", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpset-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12fd2ec5ae30207e3107eca0fea45e3b5713e26b/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpset-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpset-1.f90?ref=12fd2ec5ae30207e3107eca0fea45e3b5713e26b", "patch": "@@ -9,7 +9,7 @@ program test\n   integer, allocatable :: c3(:,:,:)\n \n   allocate (a1(5))\n-  if (.not.allocated (a1)) STOP 1\n+  if (.not.allocated (a1)) STOP 49\n \n   a1 = 10\n \n@@ -30,7 +30,7 @@ program test\n   deallocate(a1)\n \n   allocate (a1(0:4))\n-  if (.not.allocated (a1)) STOP 2\n+  if (.not.allocated (a1)) STOP 50\n \n   a1 = 10\n \n@@ -51,7 +51,7 @@ program test\n   deallocate(a1)\n \n   allocate (b2(5,5))\n-  if (.not.allocated (b2)) STOP 3\n+  if (.not.allocated (b2)) STOP 51\n \n   b2 = 11\n \n@@ -72,7 +72,7 @@ program test\n   deallocate(b2)\n \n   allocate (b2(0:4,0:4))\n-  if (.not.allocated (b2)) STOP 4\n+  if (.not.allocated (b2)) STOP 52\n \n   b2 = 11\n \n@@ -93,7 +93,7 @@ program test\n   deallocate(b2)\n \n   allocate (c3(5,5,5))\n-  if (.not.allocated (c3)) STOP 5\n+  if (.not.allocated (c3)) STOP 53\n \n   c3 = 12\n \n@@ -114,7 +114,7 @@ program test\n   deallocate(c3)\n \n   allocate (c3(0:4,0:4,0:4))\n-  if (.not.allocated (c3)) STOP 6\n+  if (.not.allocated (c3)) STOP 54\n \n   c3 = 12\n \n@@ -135,13 +135,13 @@ program test\n   deallocate(c3)\n \n   allocate (a1(5))\n-  if (.not.allocated (a1)) STOP 7\n+  if (.not.allocated (a1)) STOP 55\n \n   allocate (b1(5))\n-  if (.not.allocated (b1)) STOP 8\n+  if (.not.allocated (b1)) STOP 56\n \n   allocate (c1(5))\n-  if (.not.allocated (c1)) STOP 9\n+  if (.not.allocated (c1)) STOP 57\n \n   a1 = 10\n   b1 = 3\n@@ -172,13 +172,13 @@ program test\n   deallocate(c1)\n \n   allocate (a1(0:4))\n-  if (.not.allocated (a1)) STOP 10\n+  if (.not.allocated (a1)) STOP 58\n \n   allocate (b1(0:4))\n-  if (.not.allocated (b1)) STOP 11\n+  if (.not.allocated (b1)) STOP 59\n \n   allocate (c1(0:4))\n-  if (.not.allocated (c1)) STOP 12\n+  if (.not.allocated (c1)) STOP 60\n \n   a1 = 10\n   b1 = 3\n@@ -209,7 +209,7 @@ program test\n   deallocate(c1)\n \n   allocate (a1(5))\n-  if (.not.allocated (a1)) STOP 13\n+  if (.not.allocated (a1)) STOP 61\n \n   a1 = 10\n "}]}