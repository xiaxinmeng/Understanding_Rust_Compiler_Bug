{"sha": "fd02e833d86d0e4d34cf59eb3c9c6846b859753a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQwMmU4MzNkODZkMGU0ZDM0Y2Y1OWViM2M5YzY4NDZiODU5NzUzYQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-10-08T10:46:38Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-10-08T10:46:38Z"}, "message": "mcore.h (INCOMING_RETURN_ADDR_RTX): Define.\n\n\t* config/mcore/mcore.h (INCOMING_RETURN_ADDR_RTX): Define.\n\t* config/mcore/mcore.c (TARGET_EXCEPT_UNWIND_INFO): Define.\n\nFrom-SVN: r165161", "tree": {"sha": "e759359e7424061c8d25a494909fd05aa8b7658c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e759359e7424061c8d25a494909fd05aa8b7658c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd02e833d86d0e4d34cf59eb3c9c6846b859753a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd02e833d86d0e4d34cf59eb3c9c6846b859753a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd02e833d86d0e4d34cf59eb3c9c6846b859753a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd02e833d86d0e4d34cf59eb3c9c6846b859753a/comments", "author": null, "committer": null, "parents": [{"sha": "8779dffad8f0189867d391a79c3f91baf98026c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8779dffad8f0189867d391a79c3f91baf98026c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8779dffad8f0189867d391a79c3f91baf98026c8"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "4fd75541c71877425371f1dbb7e8e8f12f0db821", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd02e833d86d0e4d34cf59eb3c9c6846b859753a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd02e833d86d0e4d34cf59eb3c9c6846b859753a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd02e833d86d0e4d34cf59eb3c9c6846b859753a", "patch": "@@ -1,3 +1,8 @@\n+2010-10-08  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/mcore/mcore.h (INCOMING_RETURN_ADDR_RTX): Define.\n+\t* config/mcore/mcore.c (TARGET_EXCEPT_UNWIND_INFO): Define.\n+\n 2010-10-08  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/45656"}, {"sha": "152c343964b4f1dfe4f398ef8a0ef5744f2aa889", "filename": "gcc/config/mcore/mcore.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd02e833d86d0e4d34cf59eb3c9c6846b859753a/gcc%2Fconfig%2Fmcore%2Fmcore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd02e833d86d0e4d34cf59eb3c9c6846b859753a/gcc%2Fconfig%2Fmcore%2Fmcore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.c?ref=fd02e833d86d0e4d34cf59eb3c9c6846b859753a", "patch": "@@ -227,6 +227,9 @@ static const struct attribute_spec mcore_attribute_table[] =\n #undef TARGET_OPTION_OPTIMIZATION\n #define TARGET_OPTION_OPTIMIZATION mcore_option_optimization\n \n+#undef TARGET_EXCEPT_UNWIND_INFO\n+#define TARGET_EXCEPT_UNWIND_INFO sjlj_except_unwind_info\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Adjust the stack and return the number of bytes taken to do it.  */"}, {"sha": "a149eb13e1dd655d68a00734a3c432d58baa6a38", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd02e833d86d0e4d34cf59eb3c9c6846b859753a/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd02e833d86d0e4d34cf59eb3c9c6846b859753a/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=fd02e833d86d0e4d34cf59eb3c9c6846b859753a", "patch": "@@ -776,6 +776,8 @@ extern const enum reg_class reg_class_from_letter[];\n #undef  TARGET_ASM_NAMED_SECTION\n #define TARGET_ASM_NAMED_SECTION  mcore_asm_named_section\n \n+#define INCOMING_RETURN_ADDR_RTX gen_rtx_REG (SImode, LK_REG)\n+\n /* This is how to output an insn to push a register on the stack.\n    It need not be very fast code.  */\n #define ASM_OUTPUT_REG_PUSH(FILE,REGNO)  \\"}]}