{"sha": "d2927bd54faa7baef708485327161bbc1c4a8b47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI5MjdiZDU0ZmFhN2JhZWY3MDg0ODUzMjcxNjFiYmMxYzRhOGI0Nw==", "commit": {"author": {"name": "Josh Conner", "email": "jconner@apple.com", "date": "2006-11-07T17:40:13Z"}, "committer": {"name": "Josh Conner", "email": "jconner@gcc.gnu.org", "date": "2006-11-07T17:40:13Z"}, "message": "invoke.texi (fstrict-aliasing): Move implementation details...\n\n2006-11-07  Josh Conner  <jconner@apple.com>\n\n\t* doc/invoke.texi (fstrict-aliasing): Move implementation\n\tdetails...\n\t* doc/tree-ssa.texi (Alias analysis): ...here.\n\nFrom-SVN: r118559", "tree": {"sha": "4cc04ddf12c473596fd9f71982e0a34b90d6eacf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cc04ddf12c473596fd9f71982e0a34b90d6eacf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2927bd54faa7baef708485327161bbc1c4a8b47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2927bd54faa7baef708485327161bbc1c4a8b47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2927bd54faa7baef708485327161bbc1c4a8b47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2927bd54faa7baef708485327161bbc1c4a8b47/comments", "author": null, "committer": null, "parents": [{"sha": "98e06787f5cee2336535be4400afc68744378cbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e06787f5cee2336535be4400afc68744378cbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98e06787f5cee2336535be4400afc68744378cbf"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "0791389c2815c869f3684c41fe18eea21142609c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2927bd54faa7baef708485327161bbc1c4a8b47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2927bd54faa7baef708485327161bbc1c4a8b47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2927bd54faa7baef708485327161bbc1c4a8b47", "patch": "@@ -1,3 +1,9 @@\n+2006-11-07  Josh Conner  <jconner@apple.com>\n+\n+\t* doc/invoke.texi (fstrict-aliasing): Move implementation\n+\tdetails...\n+\t* doc/tree-ssa.texi (Alias analysis): ...here.\n+\n 2006-11-07  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/29610"}, {"sha": "8d221ef4ef4533f06f06d66c13c588176c84ae33", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2927bd54faa7baef708485327161bbc1c4a8b47/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2927bd54faa7baef708485327161bbc1c4a8b47/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d2927bd54faa7baef708485327161bbc1c4a8b47", "patch": "@@ -5377,12 +5377,6 @@ int f() @{\n @}\n @end smallexample\n \n-Every language that wishes to perform language-specific alias analysis\n-should define a function that computes, given an @code{tree}\n-node, an alias set for the node.  Nodes in different alias sets are not\n-allowed to alias.  For an example, see the C front-end function\n-@code{c_get_alias_set}.\n-\n Enabled at levels @option{-O2}, @option{-O3}, @option{-Os}.\n \n @item -falign-functions"}, {"sha": "66793214d35c743e4ca51e1073cbf326c372c7b3", "filename": "gcc/doc/tree-ssa.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2927bd54faa7baef708485327161bbc1c4a8b47/gcc%2Fdoc%2Ftree-ssa.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2927bd54faa7baef708485327161bbc1c4a8b47/gcc%2Fdoc%2Ftree-ssa.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftree-ssa.texi?ref=d2927bd54faa7baef708485327161bbc1c4a8b47", "patch": "@@ -1591,6 +1591,12 @@ every addressable variable found in the program.  Given a symbol\n memory tag SMT and an addressable variable V@.  If the alias sets\n of SMT and V conflict (as computed by may_alias_p), then V is\n marked as an alias tag and added to the alias set of SMT@.\n+\n+Every language that wishes to perform language-specific alias analysis\n+should define a function that computes, given a @code{tree}\n+node, an alias set for the node.  Nodes in different alias sets are not\n+allowed to alias.  For an example, see the C front-end function\n+@code{c_get_alias_set}.\n @end enumerate\n \n For instance, consider the following function:"}]}