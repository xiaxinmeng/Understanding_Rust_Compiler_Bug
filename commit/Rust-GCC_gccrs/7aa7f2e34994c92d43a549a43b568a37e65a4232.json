{"sha": "7aa7f2e34994c92d43a549a43b568a37e65a4232", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FhN2YyZTM0OTk0YzkyZDQzYTU0OWE0M2I1NjhhMzdlNjVhNDIzMg==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2013-03-03T20:21:26Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2013-03-03T20:21:26Z"}, "message": "target.def (TARGET_OPTION_VALID_ATTRIBUTE_P): Update comments; the attribute is now called \"target\" instead of \"option\".\n\n2013-03-03  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* target.def (TARGET_OPTION_VALID_ATTRIBUTE_P): Update comments;\n\tthe attribute is now called \"target\" instead of \"option\".\n\t(TARGET_OPTION_PRAGMA_PARSE): Likewise, for the pragma.\n\t* doc/tm.texi.in (Target Attributes):  Likewise document the correct\n\tattribute/pragma name for TARGET_OPTION_VALID_P and\n\tTARGET_OPTION_PRAGMA_PARSE.  Also copy-edit and correct markup.\n\t* doc/tm.texi: Regenerated.\n\nFrom-SVN: r196418", "tree": {"sha": "cd68349cb850e06995ade8d1a0ac880a25aa6a00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd68349cb850e06995ade8d1a0ac880a25aa6a00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7aa7f2e34994c92d43a549a43b568a37e65a4232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aa7f2e34994c92d43a549a43b568a37e65a4232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aa7f2e34994c92d43a549a43b568a37e65a4232", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aa7f2e34994c92d43a549a43b568a37e65a4232/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1216b4d21d04278222774cd255c4699b656f4fef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1216b4d21d04278222774cd255c4699b656f4fef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1216b4d21d04278222774cd255c4699b656f4fef"}], "stats": {"total": 91, "additions": 50, "deletions": 41}, "files": [{"sha": "e94430ad3e1f9eb471e2a1553f29fab2b22e36b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa7f2e34994c92d43a549a43b568a37e65a4232/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa7f2e34994c92d43a549a43b568a37e65a4232/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7aa7f2e34994c92d43a549a43b568a37e65a4232", "patch": "@@ -1,3 +1,13 @@\n+2013-03-03  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* target.def (TARGET_OPTION_VALID_ATTRIBUTE_P): Update comments;\n+\tthe attribute is now called \"target\" instead of \"option\".\n+\t(TARGET_OPTION_PRAGMA_PARSE): Likewise, for the pragma.\n+\t* doc/tm.texi.in (Target Attributes):  Likewise document the correct\n+\tattribute/pragma name for TARGET_OPTION_VALID_P and\n+\tTARGET_OPTION_PRAGMA_PARSE.  Also copy-edit and correct markup.\n+\t* doc/tm.texi: Regenerated.\n+\n 2013-03-02  David Holsgrove <david.holsgrove@xilinx.com>\n \n \t*  config/microblaze/microblaze.c:"}, {"sha": "cbbc82dfe39f3c0163793acaa439c6131b623ed2", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa7f2e34994c92d43a549a43b568a37e65a4232/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa7f2e34994c92d43a549a43b568a37e65a4232/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=7aa7f2e34994c92d43a549a43b568a37e65a4232", "patch": "@@ -9848,40 +9848,40 @@ target specific attribute attached to it, it will not be inlined.\n @end deftypefn\n \n @deftypefn {Target Hook} bool TARGET_OPTION_VALID_ATTRIBUTE_P (tree @var{fndecl}, tree @var{name}, tree @var{args}, int @var{flags})\n-This hook is called to parse the @code{attribute(option(\"...\"))}, and\n-it allows the function to set different target machine compile time\n-options for the current function that might be different than the\n-options specified on the command line.  The hook should return\n+This hook is called to parse @code{attribute(target(\"...\"))}, which\n+allows setting target-specific options on individual functions.\n+These function-specific options may differ\n+from the options specified on the command line.  The hook should return\n @code{true} if the options are valid.\n \n-The hook should set the @var{DECL_FUNCTION_SPECIFIC_TARGET} field in\n-the function declaration to hold a pointer to a target specific\n-@var{struct cl_target_option} structure.\n+The hook should set the @code{DECL_FUNCTION_SPECIFIC_TARGET} field in\n+the function declaration to hold a pointer to a target-specific\n+@code{struct cl_target_option} structure.\n @end deftypefn\n \n @deftypefn {Target Hook} void TARGET_OPTION_SAVE (struct cl_target_option *@var{ptr})\n-This hook is called to save any additional target specific information\n-in the @var{struct cl_target_option} structure for function specific\n+This hook is called to save any additional target-specific information\n+in the @code{struct cl_target_option} structure for function-specific\n options.\n @xref{Option file format}.\n @end deftypefn\n \n @deftypefn {Target Hook} void TARGET_OPTION_RESTORE (struct cl_target_option *@var{ptr})\n-This hook is called to restore any additional target specific\n-information in the @var{struct cl_target_option} structure for\n-function specific options.\n+This hook is called to restore any additional target-specific\n+information in the @code{struct cl_target_option} structure for\n+function-specific options.\n @end deftypefn\n \n @deftypefn {Target Hook} void TARGET_OPTION_PRINT (FILE *@var{file}, int @var{indent}, struct cl_target_option *@var{ptr})\n-This hook is called to print any additional target specific\n-information in the @var{struct cl_target_option} structure for\n-function specific options.\n+This hook is called to print any additional target-specific\n+information in the @code{struct cl_target_option} structure for\n+function-specific options.\n @end deftypefn\n \n @deftypefn {Target Hook} bool TARGET_OPTION_PRAGMA_PARSE (tree @var{args}, tree @var{pop_target})\n-This target hook parses the options for @code{#pragma GCC option} to\n-set the machine specific options for functions that occur later in the\n-input stream.  The options should be the same as handled by the\n+This target hook parses the options for @code{#pragma GCC target}, which\n+sets the target-specific options for functions that occur later in the\n+input stream.  The options accepted should be the same as those handled by the\n @code{TARGET_OPTION_VALID_ATTRIBUTE_P} hook.\n @end deftypefn\n "}, {"sha": "dfba947f51bb1bcf974ac8b1a5311b03b6276f8d", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa7f2e34994c92d43a549a43b568a37e65a4232/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa7f2e34994c92d43a549a43b568a37e65a4232/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=7aa7f2e34994c92d43a549a43b568a37e65a4232", "patch": "@@ -9709,40 +9709,40 @@ target specific attribute attached to it, it will not be inlined.\n @end deftypefn\n \n @hook TARGET_OPTION_VALID_ATTRIBUTE_P\n-This hook is called to parse the @code{attribute(option(\"...\"))}, and\n-it allows the function to set different target machine compile time\n-options for the current function that might be different than the\n-options specified on the command line.  The hook should return\n+This hook is called to parse @code{attribute(target(\"...\"))}, which\n+allows setting target-specific options on individual functions.\n+These function-specific options may differ\n+from the options specified on the command line.  The hook should return\n @code{true} if the options are valid.\n \n-The hook should set the @var{DECL_FUNCTION_SPECIFIC_TARGET} field in\n-the function declaration to hold a pointer to a target specific\n-@var{struct cl_target_option} structure.\n+The hook should set the @code{DECL_FUNCTION_SPECIFIC_TARGET} field in\n+the function declaration to hold a pointer to a target-specific\n+@code{struct cl_target_option} structure.\n @end deftypefn\n \n @hook TARGET_OPTION_SAVE\n-This hook is called to save any additional target specific information\n-in the @var{struct cl_target_option} structure for function specific\n+This hook is called to save any additional target-specific information\n+in the @code{struct cl_target_option} structure for function-specific\n options.\n @xref{Option file format}.\n @end deftypefn\n \n @hook TARGET_OPTION_RESTORE\n-This hook is called to restore any additional target specific\n-information in the @var{struct cl_target_option} structure for\n-function specific options.\n+This hook is called to restore any additional target-specific\n+information in the @code{struct cl_target_option} structure for\n+function-specific options.\n @end deftypefn\n \n @hook TARGET_OPTION_PRINT\n-This hook is called to print any additional target specific\n-information in the @var{struct cl_target_option} structure for\n-function specific options.\n+This hook is called to print any additional target-specific\n+information in the @code{struct cl_target_option} structure for\n+function-specific options.\n @end deftypefn\n \n @hook TARGET_OPTION_PRAGMA_PARSE\n-This target hook parses the options for @code{#pragma GCC option} to\n-set the machine specific options for functions that occur later in the\n-input stream.  The options should be the same as handled by the\n+This target hook parses the options for @code{#pragma GCC target}, which\n+sets the target-specific options for functions that occur later in the\n+input stream.  The options accepted should be the same as those handled by the\n @code{TARGET_OPTION_VALID_ATTRIBUTE_P} hook.\n @end deftypefn\n "}, {"sha": "831cad8119b44223227c069444dabe25e209fb34", "filename": "gcc/target.def", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa7f2e34994c92d43a549a43b568a37e65a4232/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa7f2e34994c92d43a549a43b568a37e65a4232/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=7aa7f2e34994c92d43a549a43b568a37e65a4232", "patch": "@@ -2774,9 +2774,9 @@ HOOK_VECTOR_END (emutls)\n #define HOOK_PREFIX \"TARGET_OPTION_\"\n HOOK_VECTOR (TARGET_OPTION_HOOKS, target_option_hooks)\n \n-/* Function to validate the attribute((option(...))) strings or NULL.  If\n-   the option is validated, it is assumed that DECL_FUNCTION_SPECIFIC will\n-   be filled in in the function decl node.  */\n+/* Function to validate the attribute((target(...))) strings.  If\n+   the option is validated, the hook should also fill in\n+   DECL_FUNCTION_SPECIFIC_TARGET in the function decl node.  */\n DEFHOOK\n (valid_attribute_p,\n  \"\",\n@@ -2803,11 +2803,10 @@ DEFHOOK\n  \"\",\n  void, (FILE *file, int indent, struct cl_target_option *ptr), NULL)\n \n-/* Function to parse arguments to be validated for #pragma option, and to\n+/* Function to parse arguments to be validated for #pragma target, and to\n    change the state if the options are valid.  If the first argument is\n    NULL, the second argument specifies the default options to use.  Return\n    true if the options are valid, and set the current state.  */\n-/* ??? The documentation in tm.texi is incomplete.  */\n DEFHOOK\n (pragma_parse,\n  \"\","}]}