{"sha": "4123650bd0ae53153142949ab5305eb48ec86390", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEyMzY1MGJkMGFlNTMxNTMxNDI5NDlhYjUzMDVlYjQ4ZWM4NjM5MA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-06-19T00:50:13Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-06-19T00:50:13Z"}, "message": "libstdc++: Implement LWG 3546 changes to common_iterator\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/stl_iterator.h\n\t(__detail::__common_iter_use_postfix_proxy): Add\n\tmove_constructible constraint as per LWG 3546.\n\t(common_iterator::__postfix_proxy): Adjust initializer of\n\t_M_keep as per LWG 3546.", "tree": {"sha": "1e13877c96af2ce88d49fb9c54081670a40b5713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e13877c96af2ce88d49fb9c54081670a40b5713"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4123650bd0ae53153142949ab5305eb48ec86390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4123650bd0ae53153142949ab5305eb48ec86390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4123650bd0ae53153142949ab5305eb48ec86390", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4123650bd0ae53153142949ab5305eb48ec86390/comments", "author": null, "committer": null, "parents": [{"sha": "c5581d4842efff98060c6caf270c6f6c55e9888a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5581d4842efff98060c6caf270c6f6c55e9888a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5581d4842efff98060c6caf270c6f6c55e9888a"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "7fe727d8093f3ce24121d5268c4639ce00304ab0", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4123650bd0ae53153142949ab5305eb48ec86390/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4123650bd0ae53153142949ab5305eb48ec86390/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=4123650bd0ae53153142949ab5305eb48ec86390", "patch": "@@ -1672,7 +1672,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     template<typename _It>\n       concept __common_iter_use_postfix_proxy\n \t= (!requires (_It& __i) { { *__i++ } -> __can_reference; })\n-\t  && constructible_from<iter_value_t<_It>, iter_reference_t<_It>>;\n+\t  && constructible_from<iter_value_t<_It>, iter_reference_t<_It>>\n+\t  && move_constructible<iter_value_t<_It>>;\n   } // namespace __detail\n \n   /// An iterator/sentinel adaptor for representing a non-common range.\n@@ -1715,7 +1716,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       iter_value_t<_It> _M_keep;\n \n       __postfix_proxy(iter_reference_t<_It>&& __x)\n-      : _M_keep(std::move(__x)) { }\n+      : _M_keep(std::forward<iter_reference_t<_It>>(__x)) { }\n \n       friend class common_iterator;\n "}]}