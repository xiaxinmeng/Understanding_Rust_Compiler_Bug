{"sha": "e97e99296505e6015bc9e281364818bb89ca8a49", "node_id": "C_kwDOANBUbNoAKGU5N2U5OTI5NjUwNWU2MDE1YmM5ZTI4MTM2NDgxOGJiODljYThhNDk", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-05-13T17:11:18Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-05-13T18:38:50Z"}, "message": "Check operand for type, not LHS.\n\nWhen folding, the LHS has not been set, so we should be checking the type of\nop1.  We should also make sure op1 is not undefined.\n\n\tPR tree-optimization/105597\n\tgcc/\n\t* range-op.cc (operator_minus::lhs_op1_relation): Use op1 instead\n\tof the lhs and make sure it is not undefined.\n\tgcc/testsuite/\n\t* gcc.dg/pr105597.c: New.", "tree": {"sha": "074f420c07e8ab9dc8c6b038b2627025d0689ab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/074f420c07e8ab9dc8c6b038b2627025d0689ab0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e97e99296505e6015bc9e281364818bb89ca8a49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97e99296505e6015bc9e281364818bb89ca8a49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97e99296505e6015bc9e281364818bb89ca8a49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97e99296505e6015bc9e281364818bb89ca8a49/comments", "author": null, "committer": null, "parents": [{"sha": "70d624ff067920d6d57ce5064ddc2a2411377488", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70d624ff067920d6d57ce5064ddc2a2411377488", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70d624ff067920d6d57ce5064ddc2a2411377488"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "c88da8caa6c849f160c642b85a46d9385374606f", "filename": "gcc/range-op.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97e99296505e6015bc9e281364818bb89ca8a49/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97e99296505e6015bc9e281364818bb89ca8a49/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=e97e99296505e6015bc9e281364818bb89ca8a49", "patch": "@@ -1343,10 +1343,10 @@ operator_minus::wi_fold (irange &r, tree type,\n // OP1 and OP2.\n \n relation_kind\n-operator_minus::lhs_op1_relation (const irange &lhs, const irange &,\n+operator_minus::lhs_op1_relation (const irange &, const irange &op1,\n \t\t\t\t  const irange &, relation_kind rel) const\n {\n-  if (TYPE_SIGN (lhs.type ()) == UNSIGNED)\n+  if (!op1.undefined_p () && TYPE_SIGN (op1.type ()) == UNSIGNED)\n     switch (rel)\n       {\n       case VREL_GT:"}, {"sha": "e463ec6c194702e045cf0592aa0af6d24daebd79", "filename": "gcc/testsuite/gcc.dg/pr105597.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97e99296505e6015bc9e281364818bb89ca8a49/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105597.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97e99296505e6015bc9e281364818bb89ca8a49/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105597.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105597.c?ref=e97e99296505e6015bc9e281364818bb89ca8a49", "patch": "@@ -0,0 +1,27 @@\n+/* PR tree-optimization/105597 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wno-int-conversion\" } */\n+\n+typedef struct {\n+  int allocated;\n+} vvec;\n+\n+int vvneeds_want, mgpssort;\n+\n+void vvinit(vvec *v, int minelems) { v->allocated = -minelems; }\n+\n+void vvneeds(vvec *v, int needed) {\n+  if (needed > v->allocated)\n+    if (v->allocated < 0)\n+      ;\n+    else {\n+      int next = v->allocated + (v->allocated >> 1);\n+      vvneeds_want = next;\n+    }\n+}\n+\n+void mgpssort_1() {\n+  vvinit((vvec *) &mgpssort, mgpssort_1);\n+  vvneeds((vvec *) &mgpssort, mgpssort_1);\n+}\n+"}]}