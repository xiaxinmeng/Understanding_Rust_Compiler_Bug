{"sha": "e40fdcc4f423dd1c3543979ddb8f33bf01dac5e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQwZmRjYzRmNDIzZGQxYzM1NDM5NzlkZGI4ZjMzYmYwMWRhYzVlNA==", "commit": {"author": {"name": "Stafford Horne", "email": "shorne@gmail.com", "date": "2020-03-22T01:13:22Z"}, "committer": {"name": "Stafford Horne", "email": "shorne@gmail.com", "date": "2021-01-13T23:45:01Z"}, "message": "or1k: Fixup exception header data encodings\n\nWhile running glibc tests several *-textrel tests failed showing that\nrelocations remained against read only sections.  It turned out this was\nrelated to exception headers data encoding being wrong.\n\nBy default pointer encoding will always use the DW_EH_PE_absptr format.\n\nThis patch uses format DW_EH_PE_pcrel and DW_EH_PE_sdata4.  Optionally\nDW_EH_PE_indirect is included for global symbols.  This eliminates the\nrelocations.\n\ngcc/ChangeLog:\n\n\t* config/or1k/or1k.h (ASM_PREFERRED_EH_DATA_FORMAT): New macro.", "tree": {"sha": "42a8ea887d16836f6470219832bad0cbf12205e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42a8ea887d16836f6470219832bad0cbf12205e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e40fdcc4f423dd1c3543979ddb8f33bf01dac5e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40fdcc4f423dd1c3543979ddb8f33bf01dac5e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e40fdcc4f423dd1c3543979ddb8f33bf01dac5e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40fdcc4f423dd1c3543979ddb8f33bf01dac5e4/comments", "author": {"login": "stffrdhrn", "id": 2404255, "node_id": "MDQ6VXNlcjI0MDQyNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stffrdhrn", "html_url": "https://github.com/stffrdhrn", "followers_url": "https://api.github.com/users/stffrdhrn/followers", "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}", "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions", "organizations_url": "https://api.github.com/users/stffrdhrn/orgs", "repos_url": "https://api.github.com/users/stffrdhrn/repos", "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}", "received_events_url": "https://api.github.com/users/stffrdhrn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stffrdhrn", "id": 2404255, "node_id": "MDQ6VXNlcjI0MDQyNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stffrdhrn", "html_url": "https://github.com/stffrdhrn", "followers_url": "https://api.github.com/users/stffrdhrn/followers", "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}", "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions", "organizations_url": "https://api.github.com/users/stffrdhrn/orgs", "repos_url": "https://api.github.com/users/stffrdhrn/repos", "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}", "received_events_url": "https://api.github.com/users/stffrdhrn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ed637c585b1ffb25b9c00c57c3a9ee9955a0df5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ed637c585b1ffb25b9c00c57c3a9ee9955a0df5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ed637c585b1ffb25b9c00c57c3a9ee9955a0df5"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "fe01ab81ead5c686a9fc8281f837295acc5edb55", "filename": "gcc/config/or1k/or1k.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e40fdcc4f423dd1c3543979ddb8f33bf01dac5e4/gcc%2Fconfig%2For1k%2For1k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e40fdcc4f423dd1c3543979ddb8f33bf01dac5e4/gcc%2Fconfig%2For1k%2For1k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2For1k%2For1k.h?ref=e40fdcc4f423dd1c3543979ddb8f33bf01dac5e4", "patch": "@@ -408,4 +408,8 @@ do {                                                    \\\n     ((N) < 4 ? HW_TO_GCC_REGNO (25) + (N) : INVALID_REGNUM)\n #define EH_RETURN_STACKADJ_RTX gen_rtx_REG (Pmode, EH_RETURN_REGNUM)\n \n+/* Select a format to encode pointers in exception handling data.  */\n+#define ASM_PREFERRED_EH_DATA_FORMAT(CODE, GLOBAL) \\\n+  (((GLOBAL) ? DW_EH_PE_indirect : 0) | DW_EH_PE_pcrel | DW_EH_PE_sdata4)\n+\n #endif /* GCC_OR1K_H */"}]}