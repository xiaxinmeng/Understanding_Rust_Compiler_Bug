{"sha": "a367df532e6bf5e05727a86c00d0ff4dfda45f9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM2N2RmNTMyZTZiZjVlMDU3MjdhODZjMDBkMGZmNGRmZGE0NWY5ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-06-05T08:21:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-06-05T08:21:02Z"}, "message": "tree-streamer.c (streamer_tree_cache_insert_1): Update the index associated with the tree we are supposed to replace.\n\n2013-06-05  Richard Biener  <rguenther@suse.de>\n\n\t* tree-streamer.c (streamer_tree_cache_insert_1): Update the\n\tindex associated with the tree we are supposed to replace.\n\t* tree-streamer-out.c (pack_ts_base_value_fields): Output\n\tTREE_ASM_WRITTEN as zero for everything but SSA names.\n\n\tlto/\n\t* lto.c (num_merged_types): New global variable.\n\t(uniquify_nodes): Increase num_merged_types when merging a type.\n\t(print_lto_report_1): Output the number of merged types.\n\nFrom-SVN: r199683", "tree": {"sha": "acdabb98bbc49efe5badc893d7d7bc98306fb7ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acdabb98bbc49efe5badc893d7d7bc98306fb7ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a367df532e6bf5e05727a86c00d0ff4dfda45f9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a367df532e6bf5e05727a86c00d0ff4dfda45f9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a367df532e6bf5e05727a86c00d0ff4dfda45f9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a367df532e6bf5e05727a86c00d0ff4dfda45f9e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c99299ff31351021bd4414dc056b40c704ad2743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c99299ff31351021bd4414dc056b40c704ad2743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c99299ff31351021bd4414dc056b40c704ad2743"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "cc304241ec3aa57b8e4ab488712861ed3760a40e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a367df532e6bf5e05727a86c00d0ff4dfda45f9e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a367df532e6bf5e05727a86c00d0ff4dfda45f9e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a367df532e6bf5e05727a86c00d0ff4dfda45f9e", "patch": "@@ -1,3 +1,10 @@\n+2013-06-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-streamer.c (streamer_tree_cache_insert_1): Update the\n+\tindex associated with the tree we are supposed to replace.\n+\t* tree-streamer-out.c (pack_ts_base_value_fields): Output\n+\tTREE_ASM_WRITTEN as zero for everything but SSA names.\n+\n 2013-06-05  David Malcolm  <dmalcolm@redhat.com>\n \n \t* tree-ssa-structalias.c (call_stmt_vars): Make static."}, {"sha": "f98c31d725aafd771814f773b06bf2b1c475975e", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a367df532e6bf5e05727a86c00d0ff4dfda45f9e/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a367df532e6bf5e05727a86c00d0ff4dfda45f9e/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=a367df532e6bf5e05727a86c00d0ff4dfda45f9e", "patch": "@@ -1,3 +1,9 @@\n+2013-06-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* lto.c (num_merged_types): New global variable.\n+\t(uniquify_nodes): Increase num_merged_types when merging a type.\n+\t(print_lto_report_1): Output the number of merged types.\n+\n 2013-06-01  Jan Hubicka  <jh@suse.cz>\n \n \t* lto.c (read_cgraph_and_symbols): Simplify dumping; Replace"}, {"sha": "c90a2d8496eb301a80a4da75d1a46ea78452ce3e", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a367df532e6bf5e05727a86c00d0ff4dfda45f9e/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a367df532e6bf5e05727a86c00d0ff4dfda45f9e/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=a367df532e6bf5e05727a86c00d0ff4dfda45f9e", "patch": "@@ -1788,6 +1788,7 @@ lto_register_function_decl_in_symtab (struct data_in *data_in, tree decl)\n     }\n }\n \n+static unsigned long num_merged_types = 0;\n \n /* Given a streamer cache structure DATA_IN (holding a sequence of trees\n    for one compilation unit) go over all trees starting at index FROM until the\n@@ -1817,7 +1818,10 @@ uniquify_nodes (struct data_in *data_in, unsigned from)\n \t     to reset that flag afterwards - nothing that refers\n \t     to those types is left and they are collected.  */\n \t  if (newt != t)\n-\t    TREE_VISITED (t) = 1;\n+\t    {\n+\t      num_merged_types++;\n+\t      TREE_VISITED (t) = 1;\n+\t    }\n \t}\n     }\n \n@@ -3136,6 +3140,7 @@ print_lto_report_1 (void)\n \t     htab_collisions (type_hash_cache));\n   else\n     fprintf (stderr, \"[%s] GIMPLE type hash cache table is empty\\n\", pfx);\n+  fprintf (stderr, \"[%s] Merged %lu types\\n\", pfx, num_merged_types);\n \n   print_gimple_types_stats (pfx);\n   print_lto_report (pfx);"}, {"sha": "39b212e47b3cda311908640d44d4f96fbf0b3e78", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a367df532e6bf5e05727a86c00d0ff4dfda45f9e/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a367df532e6bf5e05727a86c00d0ff4dfda45f9e/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=a367df532e6bf5e05727a86c00d0ff4dfda45f9e", "patch": "@@ -87,8 +87,9 @@ pack_ts_base_value_fields (struct bitpack_d *bp, tree expr)\n     bp_pack_value (bp, TYPE_UNSIGNED (expr), 1);\n   else\n     bp_pack_value (bp, 0, 1);\n-  /* We write debug info two times, do not confuse the second one.  */\n-  bp_pack_value (bp, ((TYPE_P (expr) || TREE_CODE (expr) == TYPE_DECL)\n+  /* We write debug info two times, do not confuse the second one.\n+     The only relevant TREE_ASM_WRITTEN use is on SSA names.  */\n+  bp_pack_value (bp, (TREE_CODE (expr) != SSA_NAME\n \t\t      ? 0 : TREE_ASM_WRITTEN (expr)), 1);\n   if (TYPE_P (expr))\n     bp_pack_value (bp, TYPE_ARTIFICIAL (expr), 1);"}, {"sha": "e4d948b4cca95641ef251a36f3b9436f7e7f3b15", "filename": "gcc/tree-streamer.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a367df532e6bf5e05727a86c00d0ff4dfda45f9e/gcc%2Ftree-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a367df532e6bf5e05727a86c00d0ff4dfda45f9e/gcc%2Ftree-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer.c?ref=a367df532e6bf5e05727a86c00d0ff4dfda45f9e", "patch": "@@ -152,6 +152,7 @@ streamer_tree_cache_insert_1 (struct streamer_tree_cache_d *cache,\n \t     the requested location slot.  */\n \t  ix = *ix_p;\n \t  streamer_tree_cache_add_to_node_array (cache, ix, t);\n+\t  *slot = (void *)(size_t) (ix + 1);\n \t}\n \n       /* Indicate that T was already in the cache.  */"}]}