{"sha": "7d14f0fcec5a42b1a532f616ea57abb86c54b5f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QxNGYwZmNlYzVhNDJiMWE1MzJmNjE2ZWE1N2FiYjg2YzU0YjVmMw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2006-03-06T11:13:25Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2006-03-06T11:13:25Z"}, "message": "* config/m32r/m32r.h (OPTIMIZATION_OPTIONS): Remove reference to flag_strength_reduce.\n\nFrom-SVN: r111786", "tree": {"sha": "3123cb4c7611b1aaa225c2c6c1fa6b1d09bddc19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3123cb4c7611b1aaa225c2c6c1fa6b1d09bddc19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d14f0fcec5a42b1a532f616ea57abb86c54b5f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d14f0fcec5a42b1a532f616ea57abb86c54b5f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d14f0fcec5a42b1a532f616ea57abb86c54b5f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d14f0fcec5a42b1a532f616ea57abb86c54b5f3/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3c5267cab6b291e842de6626be76c3355e6b447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3c5267cab6b291e842de6626be76c3355e6b447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3c5267cab6b291e842de6626be76c3355e6b447"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "d8ecfa7cd2eee47a5e2496885029fa462c411081", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d14f0fcec5a42b1a532f616ea57abb86c54b5f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d14f0fcec5a42b1a532f616ea57abb86c54b5f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d14f0fcec5a42b1a532f616ea57abb86c54b5f3", "patch": "@@ -1,3 +1,8 @@\n+2006-03-06  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/m32r/m32r.h (OPTIMIZATION_OPTIONS): Remove reference to\n+\tflag_strength_reduce.\n+\n 2006-03-06  Ben Elliston  <bje@au.ibm.com>\n \n \t* config.gcc: Add t-dfprules to $tmake_file for i*86-*-linux* and"}, {"sha": "1134569f86aa399bf11fb0ae2e25c57f9af69329", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d14f0fcec5a42b1a532f616ea57abb86c54b5f3/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d14f0fcec5a42b1a532f616ea57abb86c54b5f3/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=7d14f0fcec5a42b1a532f616ea57abb86c54b5f3", "patch": "@@ -692,6 +692,17 @@ gen_compare (enum rtx_code code, rtx x, rtx y, int need_compare)\n \t{\n \tcase EQ:\n \t  if (GET_CODE (y) == CONST_INT\n+\t      && UINT16_P (INTVAL (y))\t\t/* Reg equal to small const.  */\n+\t      && y != const0_rtx)\n+\t    {\n+\t      rtx tmp = gen_reg_rtx (SImode);\t\t\n+\t      \n+\t      emit_insn (gen_xorsi3 (tmp, x, GEN_INT (INTVAL (y))));\n+\t      x = tmp;\n+\t      y = const0_rtx;\n+\t    }\n+#if 0 /* Removed for miss optimizing at simplify_relational_operation().  */\n+\t  else if (GET_CODE (y) == CONST_INT\n \t      && CMP_INT16_P (INTVAL (y))\t\t/* Reg equal to small const.  */\n \t      && y != const0_rtx)\n \t    {\n@@ -701,6 +712,7 @@ gen_compare (enum rtx_code code, rtx x, rtx y, int need_compare)\n \t      x = tmp;\n \t      y = const0_rtx;\n \t    }\n+#endif\n \t  else if (CONSTANT_P (y))\t\t\t/* Reg equal to const.  */\n \t    {\n \t      rtx tmp = force_reg (GET_MODE (x), y);\n@@ -813,6 +825,17 @@ gen_compare (enum rtx_code code, rtx x, rtx y, int need_compare)\n \treturn gen_rtx_fmt_ee (code, CCmode, x, y);\n       \n       /* Reg/smallconst equal comparison.  */\n+      if (compare_code == EQ\n+\t  && GET_CODE (y) == CONST_INT\n+\t  && UINT16_P (INTVAL (y)))\n+\t{\n+\t  rtx tmp = gen_reg_rtx (SImode);\n+\n+\t  emit_insn (gen_xorsi3 (tmp, x, GEN_INT (INTVAL (y))));\n+\t  return gen_rtx_fmt_ee (code, CCmode, tmp, const0_rtx);\n+\t}\n+      \n+#if 0 /* Removed for miss optimizing at simplify_relational_operation().  */\n       if (compare_code == EQ\n \t  && GET_CODE (y) == CONST_INT\n \t  && CMP_INT16_P (INTVAL (y)))\n@@ -822,6 +845,7 @@ gen_compare (enum rtx_code code, rtx x, rtx y, int need_compare)\n \t  emit_insn (gen_addsi3 (tmp, x, GEN_INT (-INTVAL (y))));\n \t  return gen_rtx_fmt_ee (code, CCmode, tmp, const0_rtx);\n \t}\n+#endif\n       \n       /* Reg/const equal comparison.  */\n       if (compare_code == EQ"}]}