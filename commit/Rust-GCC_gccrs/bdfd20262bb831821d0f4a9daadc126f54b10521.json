{"sha": "bdfd20262bb831821d0f4a9daadc126f54b10521", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRmZDIwMjYyYmI4MzE4MjFkMGY0YTlkYWFkYzEyNmY1NGIxMDUyMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-08-07T14:55:32Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-08-07T14:55:32Z"}, "message": "re PR target/37048 (Revision 138835 breaks bootstrap)\n\n\tPR target/37048\n\t* i386.md (single stringop patterns): Enable unconditionally.\n\nFrom-SVN: r138841", "tree": {"sha": "8c09ba8d904a9c2828d8c4f993bb3d7d3a72f16b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c09ba8d904a9c2828d8c4f993bb3d7d3a72f16b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdfd20262bb831821d0f4a9daadc126f54b10521", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdfd20262bb831821d0f4a9daadc126f54b10521", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdfd20262bb831821d0f4a9daadc126f54b10521", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdfd20262bb831821d0f4a9daadc126f54b10521/comments", "author": null, "committer": null, "parents": [{"sha": "7a4ef3104c1b2b083cc3cbb8f62ace7b97e79ac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a4ef3104c1b2b083cc3cbb8f62ace7b97e79ac8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a4ef3104c1b2b083cc3cbb8f62ace7b97e79ac8"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "3b34da2aa7fd643772676aa416647a457f104696", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfd20262bb831821d0f4a9daadc126f54b10521/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfd20262bb831821d0f4a9daadc126f54b10521/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bdfd20262bb831821d0f4a9daadc126f54b10521", "patch": "@@ -1,3 +1,8 @@\n+2008-08-07  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR target/37048\n+\t* i386.md (single stringop patterns): Enable unconditionally. \n+\n 2008-08-07  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/36992"}, {"sha": "ddd545d30d01719edf27e6e86611282037f999ed", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfd20262bb831821d0f4a9daadc126f54b10521/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfd20262bb831821d0f4a9daadc126f54b10521/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=bdfd20262bb831821d0f4a9daadc126f54b10521", "patch": "@@ -18652,7 +18652,7 @@\n    (set (match_operand:DI 1 \"register_operand\" \"=S\")\n \t(plus:DI (match_dup 3)\n \t\t (const_int 8)))]\n-  \"TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"TARGET_64BIT\"\n   \"movsq\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"mode\" \"DI\")\n@@ -18667,7 +18667,7 @@\n    (set (match_operand:SI 1 \"register_operand\" \"=S\")\n \t(plus:SI (match_dup 3)\n \t\t (const_int 4)))]\n-  \"!TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"!TARGET_64BIT\"\n   \"movs{l|d}\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"mode\" \"SI\")\n@@ -18682,7 +18682,7 @@\n    (set (match_operand:DI 1 \"register_operand\" \"=S\")\n \t(plus:DI (match_dup 3)\n \t\t (const_int 4)))]\n-  \"TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"TARGET_64BIT\"\n   \"movs{l|d}\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"mode\" \"SI\")\n@@ -18697,7 +18697,7 @@\n    (set (match_operand:SI 1 \"register_operand\" \"=S\")\n \t(plus:SI (match_dup 3)\n \t\t (const_int 2)))]\n-  \"!TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"!TARGET_64BIT\"\n   \"movsw\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"both\")\n@@ -18712,7 +18712,7 @@\n    (set (match_operand:DI 1 \"register_operand\" \"=S\")\n \t(plus:DI (match_dup 3)\n \t\t (const_int 2)))]\n-  \"TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"TARGET_64BIT\"\n   \"movsw\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"both\")\n@@ -18727,7 +18727,7 @@\n    (set (match_operand:SI 1 \"register_operand\" \"=S\")\n \t(plus:SI (match_dup 3)\n \t\t (const_int 1)))]\n-  \"!TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"!TARGET_64BIT\"\n   \"movsb\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"both\")\n@@ -18742,7 +18742,7 @@\n    (set (match_operand:DI 1 \"register_operand\" \"=S\")\n \t(plus:DI (match_dup 3)\n \t\t (const_int 1)))]\n-  \"TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"TARGET_64BIT\"\n   \"movsb\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"both\")\n@@ -18917,7 +18917,7 @@\n \t\t   (match_operand 2 \"register_operand\" \"\"))\n \t      (set (match_operand 0 \"register_operand\" \"\")\n \t\t   (match_operand 3 \"\" \"\"))])]\n-  \"TARGET_SINGLE_STRINGOP\"\n+  \"\"\n   \"ix86_current_function_needs_cld = 1;\")\n \n (define_insn \"*strsetdi_rex_1\"\n@@ -18926,7 +18926,7 @@\n    (set (match_operand:DI 0 \"register_operand\" \"=D\")\n \t(plus:DI (match_dup 1)\n \t\t (const_int 8)))]\n-  \"TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"TARGET_64BIT\"\n   \"stosq\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"store\")\n@@ -18938,7 +18938,7 @@\n    (set (match_operand:SI 0 \"register_operand\" \"=D\")\n \t(plus:SI (match_dup 1)\n \t\t (const_int 4)))]\n-  \"!TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"!TARGET_64BIT\"\n   \"stos{l|d}\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"store\")\n@@ -18950,7 +18950,7 @@\n    (set (match_operand:DI 0 \"register_operand\" \"=D\")\n \t(plus:DI (match_dup 1)\n \t\t (const_int 4)))]\n-  \"TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"TARGET_64BIT\"\n   \"stos{l|d}\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"store\")\n@@ -18962,7 +18962,7 @@\n    (set (match_operand:SI 0 \"register_operand\" \"=D\")\n \t(plus:SI (match_dup 1)\n \t\t (const_int 2)))]\n-  \"!TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"!TARGET_64BIT\"\n   \"stosw\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"store\")\n@@ -18974,7 +18974,7 @@\n    (set (match_operand:DI 0 \"register_operand\" \"=D\")\n \t(plus:DI (match_dup 1)\n \t\t (const_int 2)))]\n-  \"TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"TARGET_64BIT\"\n   \"stosw\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"store\")\n@@ -18986,7 +18986,7 @@\n    (set (match_operand:SI 0 \"register_operand\" \"=D\")\n \t(plus:SI (match_dup 1)\n \t\t (const_int 1)))]\n-  \"!TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"!TARGET_64BIT\"\n   \"stosb\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"store\")\n@@ -18998,7 +18998,7 @@\n    (set (match_operand:DI 0 \"register_operand\" \"=D\")\n \t(plus:DI (match_dup 1)\n \t\t (const_int 1)))]\n-  \"TARGET_64BIT && TARGET_SINGLE_STRINGOP\"\n+  \"TARGET_64BIT\"\n   \"stosb\"\n   [(set_attr \"type\" \"str\")\n    (set_attr \"memory\" \"store\")"}]}