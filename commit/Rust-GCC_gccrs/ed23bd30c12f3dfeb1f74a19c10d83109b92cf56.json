{"sha": "ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQyM2JkMzBjMTJmM2RmZWIxZjc0YTE5YzEwZDgzMTA5YjkyY2Y1Ng==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-04-06T08:41:37Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-04-06T08:41:37Z"}, "message": "config.host: Add a section for generic hosts, and a subsection for Darwin.\n\n\t* config.host: Add a section for generic hosts, and a subsection\n\tfor Darwin.  Add a case for x86-darwin.  Update ppc-darwin case.\n\t* config/host-darwin.c: New, split out of config/rs6000/host-darwin.c.\n\t* config/host-darwin.h: New.\n\t* config/x-darwin: New.\n\t* config/i386/host-i386-darwin.c: New.\n\t* config/i386/x-darwin: New.\n\t* config/rs6000/host-darwin.c: Include host-darwin.h.\n\t(darwin_rs6000_gt_pch_get_address): Move to config/host-darwin.c.\n\t(darwin_rs6000_gt_pch_use_address): Likewise.\n\t* config/rs6000/x-darwin: Change name of .o built, update\n\tdependencies for changes to rs6000/host-darwin.c.\n\nFrom-SVN: r97709", "tree": {"sha": "5aa04462241caebfe03d88f0811f2affe93e6d35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5aa04462241caebfe03d88f0811f2affe93e6d35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0df9bf6371e21b575b77a684bd6689d8691db945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df9bf6371e21b575b77a684bd6689d8691db945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df9bf6371e21b575b77a684bd6689d8691db945"}], "stats": {"total": 252, "additions": 183, "deletions": 69}, "files": [{"sha": "fbdb5157aab302d08a3a0d15694bf939810c9845", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "patch": "@@ -1,3 +1,18 @@\n+2005-04-06  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config.host: Add a section for generic hosts, and a subsection\n+\tfor Darwin.  Add a case for x86-darwin.  Update ppc-darwin case.\n+\t* config/host-darwin.c: New, split out of config/rs6000/host-darwin.c.\n+\t* config/host-darwin.h: New.\n+\t* config/x-darwin: New.\n+\t* config/i386/host-i386-darwin.c: New.\n+\t* config/i386/x-darwin: New.\n+\t* config/rs6000/host-darwin.c: Include host-darwin.h.\n+\t(darwin_rs6000_gt_pch_get_address): Move to config/host-darwin.c.\n+\t(darwin_rs6000_gt_pch_use_address): Likewise.\n+\t* config/rs6000/x-darwin: Change name of .o built, update\n+\tdependencies for changes to rs6000/host-darwin.c.\n+\n 2005-04-06  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n \tPR target/17824"}, {"sha": "dbbf5b129e046230787ec11cda9e4c2fcc3bc71b", "filename": "gcc/config.host", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "patch": "@@ -85,6 +85,15 @@ case ${host} in\n     ;;\n esac\n \n+# Common parts for widely ported systems.\n+case ${target} in\n+  *-darwin*)\n+    # Generic darwin host support.\n+    out_host_hook_obj=host-darwin.o\n+    host_xmake_file=x-darwin\n+    ;;\n+esac\n+\n # Machine-specific settings.\n case ${host} in\n   alpha*-dec-*vms*)\n@@ -164,16 +173,19 @@ case ${host} in\n   i[34567]86-*-interix3*)\n     host_xmake_file=\"x-interix\"\n     ;;\n+  i[34567]86-*-darwin*)\n+    out_host_hook_obj=\"${out_host_hook_obj} host-i386-darwin.o\"\n+    host_xmake_file=\"${host_xmake_file} i386/x-darwin\"\n+    ;;\n   i860-*-sysv4*)\n     host_xmake_file=i860/x-sysv4\n     ;;\n   powerpc-*-beos*)\n     host_can_use_collect2=no\n     ;;\n   powerpc-*-darwin*)\n-    # powerpc-darwin host support.\n-    out_host_hook_obj=host-darwin.o\n-    host_xmake_file=rs6000/x-darwin\n+    out_host_hook_obj=\"${out_host_hook_obj} host-ppc-darwin.o\"\n+    host_xmake_file=\"${host_xmake_file} rs6000/x-darwin\"\n     ;;\n   *-*-solaris2*)\n     out_host_hook_obj=host-solaris.o"}, {"sha": "8bf32aacc6252d948b177c125b4e8536070e2ffd", "filename": "gcc/config/host-darwin.c", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Fhost-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Fhost-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fhost-darwin.c?ref=ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "patch": "@@ -0,0 +1,81 @@\n+/* Darwin host-specific hook definitions.\n+   Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 2, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING.  If not, write to the\n+   Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+   MA 02111-1307, USA.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include <sys/mman.h>\n+#include \"toplev.h\"\n+#include \"config/host-darwin.h\"\n+\n+/* Yes, this is really supposed to work.  */\n+static char pch_address_space[1024*1024*1024] __attribute__((aligned (4096)));\n+\n+/* Return the address of the PCH address space, if the PCH will fit in it.  */\n+\n+void *\n+darwin_gt_pch_get_address (size_t sz, int fd ATTRIBUTE_UNUSED)\n+{\n+  if (sz <= sizeof (pch_address_space))\n+    return pch_address_space;\n+  else\n+    return NULL;\n+}\n+\n+/* Check ADDR and SZ for validity, and deallocate (using munmap) that part of\n+   pch_address_space beyond SZ.  */\n+\n+int\n+darwin_gt_pch_use_address (void *addr, size_t sz, int fd, size_t off)\n+{\n+  const size_t pagesize = getpagesize();\n+  void *mmap_result;\n+  int ret;\n+\n+  if ((size_t)pch_address_space % pagesize != 0\n+      || sizeof (pch_address_space) % pagesize != 0)\n+    abort ();\n+  \n+  ret = (addr == pch_address_space && sz <= sizeof (pch_address_space));\n+  if (! ret)\n+    sz = 0;\n+\n+  /* Round the size to a whole page size.  Normally this is a no-op.  */\n+  sz = (sz + pagesize - 1) / pagesize * pagesize;\n+\n+  if (munmap (pch_address_space + sz, sizeof (pch_address_space) - sz) != 0)\n+    fatal_error (\"couldn't unmap pch_address_space: %m\\n\");\n+\n+  if (ret)\n+    {\n+      mmap_result = mmap (addr, sz,\n+\t\t\t  PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_FIXED,\n+\t\t\t  fd, off);\n+\n+      /* The file might not be mmap-able.  */\n+      ret = mmap_result != (void *) MAP_FAILED;\n+\n+      /* Sanity check for broken MAP_FIXED.  */\n+      if (ret && mmap_result != addr)\n+\tabort ();\n+    }\n+\n+  return ret;\n+}"}, {"sha": "742570745121672a946eece5b2518f941984eb09", "filename": "gcc/config/host-darwin.h", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Fhost-darwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Fhost-darwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fhost-darwin.h?ref=ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "patch": "@@ -0,0 +1,28 @@\n+/* Darwin host-specific hook definitions.\n+   Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 2, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING.  If not, write to the\n+   Free Software Foundation, 59 Temple Place - Suite 330, Boston,\n+   MA 02111-1307, USA.  */\n+\n+extern void * darwin_gt_pch_get_address (size_t sz, int fd);\n+extern int darwin_gt_pch_use_address (void *addr, size_t sz, int fd, \n+\t\t\t\t      size_t off);\n+\n+#undef HOST_HOOKS_GT_PCH_GET_ADDRESS\n+#define HOST_HOOKS_GT_PCH_GET_ADDRESS darwin_gt_pch_get_address\n+#undef HOST_HOOKS_GT_PCH_USE_ADDRESS\n+#define HOST_HOOKS_GT_PCH_USE_ADDRESS darwin_gt_pch_use_address"}, {"sha": "80a9a9a07343c31449f10f7b9e340a8014099b99", "filename": "gcc/config/i386/host-i386-darwin.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Fi386%2Fhost-i386-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Fi386%2Fhost-i386-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-i386-darwin.c?ref=ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "patch": "@@ -0,0 +1,31 @@\n+/* i386-darwin host-specific hook definitions.\n+   Copyright (C) 2003, 2005 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 2, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to the Free\n+Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+02111-1307, USA.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"hosthooks.h\"\n+#include \"hosthooks-def.h\"\n+#include \"config/host-darwin.h\"\n+\n+/* Darwin doesn't do anything special for x86 hosts; this file exists just\n+   to include config/host-darwin.h.  */\n+\n+const struct host_hooks host_hooks = HOST_HOOKS_INITIALIZER;"}, {"sha": "9a3b0f262ce2a315f175beb50fb8f3616ac63940", "filename": "gcc/config/i386/x-darwin", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Fi386%2Fx-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Fi386%2Fx-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-darwin?ref=ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "patch": "@@ -0,0 +1,4 @@\n+host-i386-darwin.o : $(srcdir)/config/i386/host-i386-darwin.c \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h hosthooks.h $(HOSTHOOKS_DEF_H) \\\n+  config/host-darwin.h\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "1b8cb83a1ea3658a32656d633ab4dfb3d794f7ed", "filename": "gcc/config/rs6000/host-darwin.c", "status": "modified", "additions": 2, "deletions": 62, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fhost-darwin.c?ref=ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "patch": "@@ -1,5 +1,5 @@\n /* Darwin/powerpc host-specific hook definitions.\n-   Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -23,11 +23,11 @@\n #include \"coretypes.h\"\n #include <signal.h>\n #include <sys/ucontext.h>\n-#include <sys/mman.h>\n #include \"hosthooks.h\"\n #include \"hosthooks-def.h\"\n #include \"toplev.h\"\n #include \"diagnostic.h\"\n+#include \"config/host-darwin.h\"\n \n static void segv_crash_handler (int);\n static void segv_handler (int, siginfo_t *, void *);\n@@ -137,65 +137,5 @@ darwin_rs6000_extra_signals (void)\n     fatal_error (\"While setting up signal handler: %m\");\n }\n \f\n-#undef HOST_HOOKS_GT_PCH_GET_ADDRESS\n-#define HOST_HOOKS_GT_PCH_GET_ADDRESS darwin_rs6000_gt_pch_get_address\n-#undef HOST_HOOKS_GT_PCH_USE_ADDRESS\n-#define HOST_HOOKS_GT_PCH_USE_ADDRESS darwin_rs6000_gt_pch_use_address\n-\n-/* Yes, this is really supposed to work.  */\n-static char pch_address_space[1024*1024*1024] __attribute__((aligned (4096)));\n-\n-/* Return the address of the PCH address space, if the PCH will fit in it.  */\n-\n-static void *\n-darwin_rs6000_gt_pch_get_address (size_t sz, int fd ATTRIBUTE_UNUSED)\n-{\n-  if (sz <= sizeof (pch_address_space))\n-    return pch_address_space;\n-  else\n-    return NULL;\n-}\n-\n-/* Check ADDR and SZ for validity, and deallocate (using munmap) that part of\n-   pch_address_space beyond SZ.  */\n-\n-static int\n-darwin_rs6000_gt_pch_use_address (void *addr, size_t sz, int fd, size_t off)\n-{\n-  const size_t pagesize = getpagesize();\n-  void *mmap_result;\n-  int ret;\n-\n-  if ((size_t)pch_address_space % pagesize != 0\n-      || sizeof (pch_address_space) % pagesize != 0)\n-    abort ();\n-  \n-  ret = (addr == pch_address_space && sz <= sizeof (pch_address_space));\n-  if (! ret)\n-    sz = 0;\n-\n-  /* Round the size to a whole page size.  Normally this is a no-op.  */\n-  sz = (sz + pagesize - 1) / pagesize * pagesize;\n-\n-  if (munmap (pch_address_space + sz, sizeof (pch_address_space) - sz) != 0)\n-    fatal_error (\"couldn't unmap pch_address_space: %m\\n\");\n-\n-  if (ret)\n-    {\n-      mmap_result = mmap (addr, sz,\n-\t\t\t  PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_FIXED,\n-\t\t\t  fd, off);\n-\n-      /* The file might not be mmap-able.  */\n-      ret = mmap_result != (void *) MAP_FAILED;\n-\n-      /* Sanity check for broken MAP_FIXED.  */\n-      if (ret && mmap_result != addr)\n-\tabort ();\n-    }\n-\n-  return ret;\n-}\n-\f\n \n const struct host_hooks host_hooks = HOST_HOOKS_INITIALIZER;"}, {"sha": "bcf1c9ecb1ffb244db0d206e9b672445f9d34cd4", "filename": "gcc/config/rs6000/x-darwin", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Frs6000%2Fx-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Frs6000%2Fx-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fx-darwin?ref=ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "patch": "@@ -1,4 +1,4 @@\n-host-darwin.o : $(srcdir)/config/rs6000/host-darwin.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h hosthooks.h hosthooks-def.h toplev.h diagnostic.h $(HOOKS_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/config/rs6000/host-darwin.c\n+host-ppc-darwin.o : $(srcdir)/config/rs6000/host-darwin.c \\\n+  $(CONFIG_H) $(SYSTEM_H) coretypes.h hosthooks.h $(HOSTHOOKS_DEF_H) toplev.h \\\n+  diagnostic.h config/host-darwin.h\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $< -o $@"}, {"sha": "c2ffd7d5c898ab093e0a0f24c19a69b17affce10", "filename": "gcc/config/x-darwin", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Fx-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed23bd30c12f3dfeb1f74a19c10d83109b92cf56/gcc%2Fconfig%2Fx-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fx-darwin?ref=ed23bd30c12f3dfeb1f74a19c10d83109b92cf56", "patch": "@@ -0,0 +1,3 @@\n+host-darwin.o : $(srcdir)/config/host-darwin.c $(CONFIG_H) $(SYSTEM_H) \\\n+  coretypes.h toplev.h config/host-darwin.h\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}]}