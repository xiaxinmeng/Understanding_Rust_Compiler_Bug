{"sha": "aa6b905d086b46e95c3a29dbf64831b883892575", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE2YjkwNWQwODZiNDZlOTVjM2EyOWRiZjY0ODMxYjg4Mzg5MjU3NQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-25T01:28:42Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-25T01:28:42Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r828", "tree": {"sha": "e03589b5d34405d07d8e87fe0f91576708a62c78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e03589b5d34405d07d8e87fe0f91576708a62c78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa6b905d086b46e95c3a29dbf64831b883892575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa6b905d086b46e95c3a29dbf64831b883892575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa6b905d086b46e95c3a29dbf64831b883892575", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa6b905d086b46e95c3a29dbf64831b883892575/comments", "author": null, "committer": null, "parents": [{"sha": "1bfe98cbe6c1d8575b71739efeb7e666d6495e08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bfe98cbe6c1d8575b71739efeb7e666d6495e08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bfe98cbe6c1d8575b71739efeb7e666d6495e08"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "8756b8c3dbb0f1a1fc2e103ad0f9615f00f383c6", "filename": "gcc/config/i860/sysv3.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa6b905d086b46e95c3a29dbf64831b883892575/gcc%2Fconfig%2Fi860%2Fsysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa6b905d086b46e95c3a29dbf64831b883892575/gcc%2Fconfig%2Fi860%2Fsysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fsysv3.h?ref=aa6b905d086b46e95c3a29dbf64831b883892575", "patch": "@@ -24,7 +24,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* Provide a set of pre-definitions and pre-assertions appropriate for\n    the i860 running svr3.  */\n-#define CPP_PREDEFINES \"-Di860 -Dunix -DSVR3\"\n+#define CPP_PREDEFINES \"-Di860 -Dunix -DSVR3 -D__SVR3__\"\n \n /* Use crt1.o as a startup file and crtn.o as a closing file.  */\n \n@@ -103,7 +103,7 @@ extern char *current_function_original_name;\n \t          fprintf ((FILE), \"\\\"\\n\");\t\t\t\t\\\n \t          bytes_in_chunk = 0;\t\t\t\t\t\\\n \t        }\t\t\t\t\t\t\t\\\n-\t      fprintf ((FILE), \"%s\\t%d\\n\", ASM_BYTE_OP, ch);\t\t\\\n+\t      fprintf ((FILE), \"\\t%s\\t%d\\n\", ASM_BYTE_OP, ch);\t\t\\\n \t    }\t\t\t\t\t\t\t\t\\\n           else\t\t\t\t\t\t\t\t\\\n \t    {\t\t\t\t\t\t\t\t\\"}, {"sha": "2e91601addea6393824807d20820d2c24e4d3a5a", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa6b905d086b46e95c3a29dbf64831b883892575/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa6b905d086b46e95c3a29dbf64831b883892575/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=aa6b905d086b46e95c3a29dbf64831b883892575", "patch": "@@ -67,13 +67,13 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    to keep the Sparc/svr4 assembler somewhat compatible with the Sparc/SunOS\n    assembler.  */\n \n-#define STRING_ASM_OP\t\t\"\\t.asciz\"\n-#define COMMON_ASM_OP\t\t\"\\t.common\"\n-#define SKIP_ASM_OP\t\t\"\\t.skip\"\n-#define UNALIGNED_INT_ASM_OP\t\"\\t.uaword\"\n-#define UNALIGNED_SHORT_ASM_OP\t\"\\t.uahalf\"\n-#define PUSHSECTION_ASM_OP\t\"\\t.pushsection\"\n-#define POPSECTION_ASM_OP\t\"\\t.popsection\"\n+#define STRING_ASM_OP\t\t\".asciz\"\n+#define COMMON_ASM_OP\t\t\".common\"\n+#define SKIP_ASM_OP\t\t\".skip\"\n+#define UNALIGNED_INT_ASM_OP\t\".uaword\"\n+#define UNALIGNED_SHORT_ASM_OP\t\".uahalf\"\n+#define PUSHSECTION_ASM_OP\t\".pushsection\"\n+#define POPSECTION_ASM_OP\t\".popsection\"\n \n /* This is the format used to print the second operand of a .type pseudo-op\n    for the Sparc/svr4 assembler.  */\n@@ -174,10 +174,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n    *not* to push the previous section name onto the assembler's\n    section names stack (as we do often in dwarfout.c).  */\n \n-#define TEXT_SECTION_ASM_OP\t\"\\t.section\\t\\\".text\\\"\"\n-#define DATA_SECTION_ASM_OP\t\"\\t.section\\t\\\".data\\\"\"\n-#define BSS_SECTION_ASM_OP\t\"\\t.section\\t\\\".bss\\\"\"\n-#define CONST_SECTION_ASM_OP\t\"\\t.section\\t\\\".rodata\\\"\"\n-#define INIT_SECTION_ASM_OP\t\"\\t.section\\t\\\".init\\\",#alloc\"\n-#define CTORS_SECTION_ASM_OP    \"\\t.section\\t\\\".ctors\\\",#alloc\"\n-#define DTORS_SECTION_ASM_OP    \"\\t.section\\t\\\".dtors\\\",#alloc\"\n+#define TEXT_SECTION_ASM_OP\t\".section\\t\\\".text\\\"\"\n+#define DATA_SECTION_ASM_OP\t\".section\\t\\\".data\\\"\"\n+#define BSS_SECTION_ASM_OP\t\".section\\t\\\".bss\\\"\"\n+#define CONST_SECTION_ASM_OP\t\".section\\t\\\".rodata\\\"\"\n+#define INIT_SECTION_ASM_OP\t\".section\\t\\\".init\\\",#alloc\"\n+#define CTORS_SECTION_ASM_OP    \".section\\t\\\".ctors\\\",#alloc\"\n+#define DTORS_SECTION_ASM_OP    \".section\\t\\\".dtors\\\",#alloc\""}]}