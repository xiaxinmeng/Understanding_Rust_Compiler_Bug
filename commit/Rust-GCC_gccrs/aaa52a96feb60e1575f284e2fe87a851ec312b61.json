{"sha": "aaa52a96feb60e1575f284e2fe87a851ec312b61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFhNTJhOTZmZWI2MGUxNTc1ZjI4NGUyZmU4N2E4NTFlYzMxMmI2MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-01-21T19:35:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-01-21T19:35:42Z"}, "message": "re PR middle-end/45566 (ICE: in convert_to_eh_region_ranges, at except.c:2446 with -freorder-blocks-and-partition -fnon-call-exceptions -fprofile-use)\n\n\tPR middle-end/45566\n\t* except.c (convert_to_eh_region_ranges): Emit queued no-region\n\tnotes from other section in hot/cold partitioning even if\n\tlast_action is -3.  Increment call_site_base.\n\n\t* g++.dg/tree-prof/partition3.C: New test.\n\n\t* g++.dg/tree-prof/tree-prof.exp: Fix a comment.\n\nFrom-SVN: r169101", "tree": {"sha": "2f06c97b51a57f4c825b3b7477b29a1a12ddc91a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f06c97b51a57f4c825b3b7477b29a1a12ddc91a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aaa52a96feb60e1575f284e2fe87a851ec312b61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaa52a96feb60e1575f284e2fe87a851ec312b61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaa52a96feb60e1575f284e2fe87a851ec312b61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaa52a96feb60e1575f284e2fe87a851ec312b61/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7360d2ac8dae5659de0adc18cd1d74b15a5971ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7360d2ac8dae5659de0adc18cd1d74b15a5971ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7360d2ac8dae5659de0adc18cd1d74b15a5971ed"}], "stats": {"total": 69, "additions": 50, "deletions": 19}, "files": [{"sha": "db2be18d7a0c793ed741f946109bc1369f250dc7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa52a96feb60e1575f284e2fe87a851ec312b61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa52a96feb60e1575f284e2fe87a851ec312b61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aaa52a96feb60e1575f284e2fe87a851ec312b61", "patch": "@@ -1,5 +1,10 @@\n 2011-01-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/45566\n+\t* except.c (convert_to_eh_region_ranges): Emit queued no-region\n+\tnotes from other section in hot/cold partitioning even if\n+\tlast_action is -3.  Increment call_site_base.\n+\n \tPR rtl-optimization/47366\n \t* fwprop.c (forward_propagate_into): Return bool.  If\n \tany changes are made, -fnon-call-exceptions is used and"}, {"sha": "66bf41005a6a143499099e582c0831dbdda7028f", "filename": "gcc/except.c", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa52a96feb60e1575f284e2fe87a851ec312b61/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa52a96feb60e1575f284e2fe87a851ec312b61/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=aaa52a96feb60e1575f284e2fe87a851ec312b61", "patch": "@@ -2421,30 +2421,33 @@ convert_to_eh_region_ranges (void)\n \tif (last_action != this_action\n \t    || last_landing_pad != this_landing_pad)\n \t  {\n+\t    /* If there is a queued no-action region in the other section\n+\t       with hot/cold partitioning, emit it now.  */\n+\t    if (first_no_action_insn_before_switch)\n+\t      {\n+\t\tgcc_assert (this_action != -1\n+\t\t\t    && last_action == (first_no_action_insn\n+\t\t\t\t\t       ? -1 : -3));\n+\t\tcall_site = add_call_site (NULL_RTX, 0, 0);\n+\t\tnote = emit_note_before (NOTE_INSN_EH_REGION_BEG,\n+\t\t\t\t\t first_no_action_insn_before_switch);\n+\t\tNOTE_EH_HANDLER (note) = call_site;\n+\t\tnote = emit_note_after (NOTE_INSN_EH_REGION_END,\n+\t\t\t\t\tlast_no_action_insn_before_switch);\n+\t\tNOTE_EH_HANDLER (note) = call_site;\n+\t\tgcc_assert (last_action != -3\n+\t\t\t    || (last_action_insn\n+\t\t\t\t== last_no_action_insn_before_switch));\n+\t\tfirst_no_action_insn_before_switch = NULL_RTX;\n+\t\tlast_no_action_insn_before_switch = NULL_RTX;\n+\t\tcall_site_base++;\n+\t      }\n \t    /* If we'd not seen a previous action (-3) or the previous\n \t       action was must-not-throw (-2), then we do not need an\n \t       end note.  */\n \t    if (last_action >= -1)\n \t      {\n \t\t/* If we delayed the creation of the begin, do it now.  */\n-\t\tif (first_no_action_insn_before_switch)\n-\t\t  {\n-\t\t    call_site = add_call_site (NULL_RTX, 0, 0);\n-\t\t    note\n-\t\t      = emit_note_before (NOTE_INSN_EH_REGION_BEG,\n-\t\t\t\t\t  first_no_action_insn_before_switch);\n-\t\t    NOTE_EH_HANDLER (note) = call_site;\n-\t\t    if (first_no_action_insn)\n-\t\t      {\n-\t\t\tnote\n-\t\t\t  = emit_note_after (NOTE_INSN_EH_REGION_END,\n-\t\t\t\t\t     last_no_action_insn_before_switch);\n-\t\t\tNOTE_EH_HANDLER (note) = call_site;\n-\t\t      }\n-\t\t    else\n-\t\t      gcc_assert (last_action_insn\n-\t\t\t\t  == last_no_action_insn_before_switch);\n-\t\t  }\n \t\tif (first_no_action_insn)\n \t\t  {\n \t\t    call_site = add_call_site (NULL_RTX, 0, cur_sec);"}, {"sha": "657a61d9c3248b1a615aae4bbb080c9edf05bc0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa52a96feb60e1575f284e2fe87a851ec312b61/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa52a96feb60e1575f284e2fe87a851ec312b61/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aaa52a96feb60e1575f284e2fe87a851ec312b61", "patch": "@@ -1,5 +1,10 @@\n 2011-01-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/45566\n+\t* g++.dg/tree-prof/partition3.C: New test.\n+\n+\t* g++.dg/tree-prof/tree-prof.exp: Fix a comment.\n+\n \tPR rtl-optimization/47366\n \t* g++.dg/opt/pr47366.C: New test.\n "}, {"sha": "7846983692101f790d03bdd98388a2a9bb5eea76", "filename": "gcc/testsuite/g++.dg/tree-prof/partition3.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa52a96feb60e1575f284e2fe87a851ec312b61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpartition3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa52a96feb60e1575f284e2fe87a851ec312b61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpartition3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fpartition3.C?ref=aaa52a96feb60e1575f284e2fe87a851ec312b61", "patch": "@@ -0,0 +1,18 @@\n+// PR middle-end/45566\n+// { dg-require-effective-target freorder }\n+// { dg-options \"-O -fnon-call-exceptions -freorder-blocks-and-partition\" }\n+\n+int k;\n+\n+int\n+main ()\n+{\n+  try\n+  {\n+    if (k)\n+      throw 6;\n+  }\n+  catch (...)\n+  {\n+  }\n+}"}, {"sha": "92de03210ffdf81195a9a990394cb7411b56001e", "filename": "gcc/testsuite/g++.dg/tree-prof/tree-prof.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaa52a96feb60e1575f284e2fe87a851ec312b61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Ftree-prof.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaa52a96feb60e1575f284e2fe87a851ec312b61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Ftree-prof.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Ftree-prof.exp?ref=aaa52a96feb60e1575f284e2fe87a851ec312b61", "patch": "@@ -16,7 +16,7 @@\n # <http://www.gnu.org/licenses/>.\n \n # Test the functionality of programs compiled with profile-directed block\n-# ordering using -fprofile-generate followed by -fbranch-use.\n+# ordering using -fprofile-generate followed by -fprofile-use.\n \n load_lib target-supports.exp\n "}]}