{"sha": "f36dda3b640088390c182eae1a44f07d1041eb27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM2ZGRhM2I2NDAwODgzOTBjMTgyZWFlMWE0NGYwN2QxMDQxZWIyNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-07-23T10:28:26Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-07-23T10:28:26Z"}, "message": "re PR target/80569 (i686: \"shrx\" instruction generated in 16-bit mode)\n\n\tPR target/80569\n\t* config/i386/i386.c (ix86_option_override_internal): Disable\n\tBMI, BMI2 and TBM instructions for -m16.\n\ntestsuite/ChangeLog:\n\n\tPR target/80569\n\t* gcc.target/i386/pr80569.c: New test.\n\nFrom-SVN: r250459", "tree": {"sha": "d3edad4ade9231b06e6ec6b2f60db020220c4d08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3edad4ade9231b06e6ec6b2f60db020220c4d08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f36dda3b640088390c182eae1a44f07d1041eb27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36dda3b640088390c182eae1a44f07d1041eb27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f36dda3b640088390c182eae1a44f07d1041eb27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36dda3b640088390c182eae1a44f07d1041eb27/comments", "author": null, "committer": null, "parents": [{"sha": "4a15d84228ee29d55cd011094f82c8d4fa9a5a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a15d84228ee29d55cd011094f82c8d4fa9a5a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a15d84228ee29d55cd011094f82c8d4fa9a5a76"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "4554109cc391c70ea108f910550b74ba85efe154", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36dda3b640088390c182eae1a44f07d1041eb27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36dda3b640088390c182eae1a44f07d1041eb27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f36dda3b640088390c182eae1a44f07d1041eb27", "patch": "@@ -1,3 +1,9 @@\n+2017-07-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/80569\n+\t* config/i386/i386.c (ix86_option_override_internal): Disable\n+\tBMI, BMI2 and TBM instructions for -m16.\n+\n 2017-07-21  Carl Love  <cel@us.ibm.com>\n \n \t* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add\n@@ -384,10 +390,10 @@\n \n 2017-07-18  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n \n-        * tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Remove\n+\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Remove\n \tbody_cost_vec from _vect_peel_extended_info.\n \t(vect_peeling_hash_get_lowest_cost): Do not set body_cost_vec.\n-        (vect_peeling_hash_choose_best_peeling): Remove body_cost_vec and\n+\t(vect_peeling_hash_choose_best_peeling): Remove body_cost_vec and\n \tnpeel.\n \n 2017-07-18  Bin Cheng  <bin.cheng@arm.com>\n@@ -431,7 +437,7 @@\n \n 2017-07-17  Yury Gribov  <tetra2005@gmail.com>\n \n-        * tree-vrp.c (compare_assert_loc): Fix comparison function\n+\t* tree-vrp.c (compare_assert_loc): Fix comparison function\n \tto return predictable results.\n \n 2017-07-17  Claudiu Zissulescu  <claziss@synopsys.com>\n@@ -3422,11 +3428,11 @@\n 2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* config/vxworks.h (VXWORKS_LIBS_RTP): Alternative definition for\n-  \t64bit configurations.\n-  \t(PTR_DIFF_TYPE): Alternative definition for TARGET_LP64.\n-  \t(SIZE_TYPE): Likewise.\n-  \t* config/vxworks.c (vxworks_emutls_var_fields): Use\n-  \tlong_unsigned_type_node instead of unsigned_type_node as the offset\n+\t64bit configurations.\n+\t(PTR_DIFF_TYPE): Alternative definition for TARGET_LP64.\n+\t(SIZE_TYPE): Likewise.\n+\t* config/vxworks.c (vxworks_emutls_var_fields): Use\n+\tlong_unsigned_type_node instead of unsigned_type_node as the offset\n \tfield type, which is \"pointer\" mode in emutls.c.\n \n 2017-06-27  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "b7ef5544bfd17b3c42a82ab93f22fa33ea2bf65d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36dda3b640088390c182eae1a44f07d1041eb27/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36dda3b640088390c182eae1a44f07d1041eb27/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f36dda3b640088390c182eae1a44f07d1041eb27", "patch": "@@ -6284,6 +6284,12 @@ ix86_option_override_internal (bool main_args_p,\n     opts->x_ix86_isa_flags\n       |= OPTION_MASK_ISA_LZCNT & ~opts->x_ix86_isa_flags_explicit;\n \n+  /* Disable BMI, BMI2 and TBM instructions for -m16.  */\n+  if (TARGET_16BIT_P(opts->x_ix86_isa_flags))\n+    opts->x_ix86_isa_flags\n+      &= ~((OPTION_MASK_ISA_BMI | OPTION_MASK_ISA_BMI2 | OPTION_MASK_ISA_TBM)\n+\t   & ~opts->x_ix86_isa_flags_explicit);\n+\n   /* Validate -mpreferred-stack-boundary= value or default it to\n      PREFERRED_STACK_BOUNDARY_DEFAULT.  */\n   ix86_preferred_stack_boundary = PREFERRED_STACK_BOUNDARY_DEFAULT;"}, {"sha": "026323570961c5b0225944c8aef93a15276e0447", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36dda3b640088390c182eae1a44f07d1041eb27/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36dda3b640088390c182eae1a44f07d1041eb27/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f36dda3b640088390c182eae1a44f07d1041eb27", "patch": "@@ -1,3 +1,8 @@\n+2017-07-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/80569\n+\t* gcc.target/i386/pr80569.c: New test.\n+\n 2017-07-21  Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/powerpc/builtins-2.c (vmulosh, vmulouh, vmulesh,"}, {"sha": "8e11c40bb08b53fd57cf01506623430d05ceba41", "filename": "gcc/testsuite/gcc.target/i386/pr80569.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36dda3b640088390c182eae1a44f07d1041eb27/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80569.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36dda3b640088390c182eae1a44f07d1041eb27/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80569.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80569.c?ref=f36dda3b640088390c182eae1a44f07d1041eb27", "patch": "@@ -0,0 +1,9 @@\n+/* PR target/80569 */\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -m16 -march=haswell\" } */\n+\n+void load_kernel(void *setup_addr)\n+{\n+    unsigned int seg = (unsigned int)setup_addr >> 4;\n+    asm(\"movl %0, %%es\" : : \"r\"(seg));\n+}"}]}