{"sha": "197eb5a168c47dbb71bd59cd45d71751d4874037", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk3ZWI1YTE2OGM0N2RiYjcxYmQ1OWNkNDVkNzE3NTFkNDg3NDAzNw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2009-12-07T15:36:46Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2009-12-07T15:36:46Z"}, "message": "re PR other/40302 (GCC must hard-require MPC before release)\n\n\tPR other/40302\n\t* gcc.dg/torture/builtin-math-6.c: Assume we have MPC.\n\t* gcc.dg/torture/builtin-math-7.c: Likewise.\n\t* gfortran.dg/complex_intrinsic_7.f90: Likewise.\n\t* gfortran.dg/complex_intrinsic_8.f90: Likewise.\n\t* gfortran.dg/integer_exponentiation_4.f90: Re-enable some tests.\n\t* lib/target-supports.exp (check_effective_target_mpc,\n\tcheck_effective_target_mpc_pow, check_effective_target_mpc_arc):\n\tDelete.\n\nFrom-SVN: r155045", "tree": {"sha": "0c740b6e8e7cbffe847bb5208005cb256aef7505", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c740b6e8e7cbffe847bb5208005cb256aef7505"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/197eb5a168c47dbb71bd59cd45d71751d4874037", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197eb5a168c47dbb71bd59cd45d71751d4874037", "html_url": "https://github.com/Rust-GCC/gccrs/commit/197eb5a168c47dbb71bd59cd45d71751d4874037", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197eb5a168c47dbb71bd59cd45d71751d4874037/comments", "author": null, "committer": null, "parents": [{"sha": "b17f98b1c541dbbb8a615063a0449b4c6245cbc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b17f98b1c541dbbb8a615063a0449b4c6245cbc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b17f98b1c541dbbb8a615063a0449b4c6245cbc2"}], "stats": {"total": 74, "additions": 16, "deletions": 58}, "files": [{"sha": "edd2b462065a6ec68d70aead2632503a9fa6ba4f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=197eb5a168c47dbb71bd59cd45d71751d4874037", "patch": "@@ -1,3 +1,15 @@\n+2009-12-07  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\tPR other/40302\n+\t* gcc.dg/torture/builtin-math-6.c: Assume we have MPC.\n+\t* gcc.dg/torture/builtin-math-7.c: Likewise.\n+\t* gfortran.dg/complex_intrinsic_7.f90: Likewise.\n+\t* gfortran.dg/complex_intrinsic_8.f90: Likewise.\n+\t* gfortran.dg/integer_exponentiation_4.f90: Re-enable some tests.\n+\t* lib/target-supports.exp (check_effective_target_mpc,\n+\tcheck_effective_target_mpc_pow, check_effective_target_mpc_arc):\n+\tDelete.\n+\n 2009-12-07  Edmar Wienskoski  <edmar@freescale.com>\n \n \t* gcc.target/powerpc/ppc-eq0-1.c: Adjust testcase for isel"}, {"sha": "462c7d3ee019370ff6a4ea48cf220eabef337da2", "filename": "gcc/testsuite/gcc.dg/torture/builtin-math-6.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-6.c?ref=197eb5a168c47dbb71bd59cd45d71751d4874037", "patch": "@@ -6,7 +6,6 @@\n    Origin: Kaveh R. Ghazi,  January 28, 2009.  */\n \n /* { dg-do link } */\n-/* { dg-require-effective-target mpc_arc } */\n \n /* All references to link_error should go away at compile-time.  The\n    first number is the line number and the second is the value number"}, {"sha": "5bc432924ec8cc31535cde0b6432b6bd6615942c", "filename": "gcc/testsuite/gcc.dg/torture/builtin-math-7.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-7.c?ref=197eb5a168c47dbb71bd59cd45d71751d4874037", "patch": "@@ -5,7 +5,6 @@\n    Origin: Kaveh R. Ghazi,  August 13, 2009.  */\n \n /* { dg-do run } */\n-/* { dg-require-effective-target mpc_pow } */\n /* { dg-add-options ieee } */\n \n extern void link_error(int);"}, {"sha": "dcc6bf91f9243d75a8581b67f5d4b29edded9d16", "filename": "gcc/testsuite/gfortran.dg/complex_intrinsic_7.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomplex_intrinsic_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomplex_intrinsic_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomplex_intrinsic_7.f90?ref=197eb5a168c47dbb71bd59cd45d71751d4874037", "patch": "@@ -1,5 +1,4 @@\n ! { dg-do compile }\n-! { dg-require-effective-target mpc }\n ! { dg-options \"-fdump-tree-original\" }\n !\n ! PR fortran/33197"}, {"sha": "255449dda52857c17bb6ebf9936aa8f3fcd31ac4", "filename": "gcc/testsuite/gfortran.dg/complex_intrinsic_8.f90", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomplex_intrinsic_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomplex_intrinsic_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcomplex_intrinsic_8.f90?ref=197eb5a168c47dbb71bd59cd45d71751d4874037", "patch": "@@ -1,5 +1,4 @@\n ! { dg-do link }\n-! { dg-require-effective-target mpc_arc }\n !\n ! PR fortran/33197\n !"}, {"sha": "655f6514c57950bf2b74da32a2ca700b2b52c2e8", "filename": "gcc/testsuite/gfortran.dg/integer_exponentiation_4.f90", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Fgfortran.dg%2Finteger_exponentiation_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Fgfortran.dg%2Finteger_exponentiation_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finteger_exponentiation_4.f90?ref=197eb5a168c47dbb71bd59cd45d71751d4874037", "patch": "@@ -38,10 +38,9 @@ program test\n   print *, nearest(1.0,-1.0)**(-huge(0)) ! { dg-error \"Arithmetic overflow\" }\n \n !!!!!! COMPLEX BASE !!!!!!\n-! Put these lines back in (and \"no-\" -> \"dg-\") prior to gcc-4.5.\n-!  print *, (2.0,-4.3)**huge(0) ! { no-error \"Arithmetic overflow\" }\n-!  print *, (2.0,-4.3)**huge(0_8) ! { no-error \"Arithmetic overflow\" }\n-!  print *, (2.0,-4.3)**(-huge(0))\n-!  print *, (2.0,-4.3)**(-huge(0_8))\n+  print *, (2.0,-4.3)**huge(0) ! { dg-error \"Arithmetic overflow\" }\n+  print *, (2.0,-4.3)**huge(0_8) ! { dg-error \"Arithmetic overflow\" }\n+  print *, (2.0,-4.3)**(-huge(0))\n+  print *, (2.0,-4.3)**(-huge(0_8))\n \n end program test"}, {"sha": "df3158a67b02159b804511f9b12648c2b2df0071", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197eb5a168c47dbb71bd59cd45d71751d4874037/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=197eb5a168c47dbb71bd59cd45d71751d4874037", "patch": "@@ -3140,55 +3140,6 @@ proc check_effective_target_lto { } {\n     return [info exists ENABLE_LTO]\n }\n \n-# Return 1 if the MPC library is integrated with GCC, 0 otherwise.\n-\n-proc check_effective_target_mpc { } {\n-    return [check_no_compiler_messages mpc executable {\n-\textern void link_error(void);\n-\tint main ()\n-\t{\n-\t  if (__builtin_csin(0) != 0)\n-\t    link_error();\n-\t}\n-    }]\n-}\n-\n-# Return 1 if the MPC library with mpc_pow is integrated with GCC, 0 otherwise.\n-\n-proc check_effective_target_mpc_pow { } {\n-    return [check_no_compiler_messages mpc_pow executable {\n-\textern void link_error(void);\n-\tint main ()\n-\t{\n-\t  if (__builtin_cpow(1,1) != 1)\n-\t    link_error();\n-\t}\n-    }]\n-}\n-\n-# Return 1 if the MPC library with \"arc\" functions is integrated with GCC, 0 otherwise.\n-\n-proc check_effective_target_mpc_arc { } {\n-    return [check_no_compiler_messages mpc_arc executable {\n-\textern void link_error(void);\n-\tint main ()\n-\t{\n-\t  if (__builtin_cacos(1) != 0)\n-\t    link_error();\n-\t  if (__builtin_casin(0) != 0)\n-\t    link_error();\n-\t  if (__builtin_catan(0) != 0)\n-\t    link_error();\n-\t  if (__builtin_cacosh(1) != 0)\n-\t    link_error();\n-\t  if (__builtin_casinh(0) != 0)\n-\t    link_error();\n-\t  if (__builtin_catanh(0) != 0)\n-\t    link_error();\n-\t}\n-    }]\n-}\n-\n # Return 1 if the language for the compiler under test is C.\n \n proc check_effective_target_c { } {"}]}