{"sha": "df0581a4aff45e73ba7b73df7b98ba492bdc28a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYwNTgxYTRhZmY0NWU3M2JhN2I3M2RmN2I5OGJhNDkyYmRjMjhhOA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-18T11:58:39Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-04-21T10:53:14Z"}, "message": "Support LABEL_DECL in %qD directive.\n\ngcc/cp/ChangeLog:\n\n\t* error.c (dump_decl): Support anonymous labels.\n\ngcc/ChangeLog:\n\n\t* tree-cfg.c (gimple_verify_flow_info): Use qD instead\n\tof print_generic_expr.", "tree": {"sha": "deb9e91fcba5aed59006d5358af7dc06477887d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/deb9e91fcba5aed59006d5358af7dc06477887d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df0581a4aff45e73ba7b73df7b98ba492bdc28a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0581a4aff45e73ba7b73df7b98ba492bdc28a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df0581a4aff45e73ba7b73df7b98ba492bdc28a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df0581a4aff45e73ba7b73df7b98ba492bdc28a8/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8f953819e8f72e646f22c7803d79bd2b56d1e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f953819e8f72e646f22c7803d79bd2b56d1e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8f953819e8f72e646f22c7803d79bd2b56d1e30"}], "stats": {"total": 34, "additions": 14, "deletions": 20}, "files": [{"sha": "c88d1749a0f0820a94808feae749b72c3a4815ac", "filename": "gcc/cp/error.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0581a4aff45e73ba7b73df7b98ba492bdc28a8/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0581a4aff45e73ba7b73df7b98ba492bdc28a8/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=df0581a4aff45e73ba7b73df7b98ba492bdc28a8", "patch": "@@ -1362,7 +1362,10 @@ dump_decl (cxx_pretty_printer *pp, tree t, int flags)\n       break;\n \n     case LABEL_DECL:\n-      pp_cxx_tree_identifier (pp, DECL_NAME (t));\n+      if (DECL_NAME (t))\n+\tpp_cxx_tree_identifier (pp, DECL_NAME (t));\n+      else\n+\tdump_generic_node (pp, t, 0, TDF_SLIM, false);\n       break;\n \n     case CONST_DECL:"}, {"sha": "f985867ced323bba520342cb3510a18969cc9860", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df0581a4aff45e73ba7b73df7b98ba492bdc28a8/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df0581a4aff45e73ba7b73df7b98ba492bdc28a8/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=df0581a4aff45e73ba7b73df7b98ba492bdc28a8", "patch": "@@ -5564,37 +5564,29 @@ gimple_verify_flow_info (void)\n \t  label = gimple_label_label (as_a <glabel *> (stmt));\n \t  if (prev_stmt && DECL_NONLOCAL (label))\n \t    {\n-\t      error (\"nonlocal label \");\n-\t      print_generic_expr (stderr, label);\n-\t      fprintf (stderr, \" is not first in a sequence of labels in bb %d\",\n-\t\t       bb->index);\n+\t      error (\"nonlocal label %qD is not first in a sequence \"\n+\t\t     \"of labels in bb %d\", label, bb->index);\n \t      err = 1;\n \t    }\n \n \t  if (prev_stmt && EH_LANDING_PAD_NR (label) != 0)\n \t    {\n-\t      error (\"EH landing pad label \");\n-\t      print_generic_expr (stderr, label);\n-\t      fprintf (stderr, \" is not first in a sequence of labels in bb %d\",\n-\t\t       bb->index);\n+\t      error (\"EH landing pad label %qD is not first in a sequence \"\n+\t\t     \"of labels in bb %d\", label, bb->index);\n \t      err = 1;\n \t    }\n \n \t  if (label_to_block (cfun, label) != bb)\n \t    {\n-\t      error (\"label \");\n-\t      print_generic_expr (stderr, label);\n-\t      fprintf (stderr, \" to block does not match in bb %d\",\n-\t\t       bb->index);\n+\t      error (\"label %qD to block does not match in bb %d\",\n+\t\t     label, bb->index);\n \t      err = 1;\n \t    }\n \n \t  if (decl_function_context (label) != current_function_decl)\n \t    {\n-\t      error (\"label \");\n-\t      print_generic_expr (stderr, label);\n-\t      fprintf (stderr, \" has incorrect context in bb %d\",\n-\t\t       bb->index);\n+\t      error (\"label %qD has incorrect context in bb %d\",\n+\t\t     label, bb->index);\n \t      err = 1;\n \t    }\n \t}\n@@ -5616,9 +5608,8 @@ gimple_verify_flow_info (void)\n \n \t  if (glabel *label_stmt = dyn_cast <glabel *> (stmt))\n \t    {\n-\t      error (\"label \");\n-\t      print_generic_expr (stderr, gimple_label_label (label_stmt));\n-\t      fprintf (stderr, \" in the middle of basic block %d\", bb->index);\n+\t      error (\"label %qD in the middle of basic block %d\",\n+\t\t     gimple_label_label (label_stmt), bb->index);\n \t      err = 1;\n \t    }\n \t}"}]}