{"sha": "68d884911e5d330965258f5ee34005ec7ef83022", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhkODg0OTExZTVkMzMwOTY1MjU4ZjVlZTM0MDA1ZWM3ZWY4MzAyMg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-04T02:12:28Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-04T02:12:28Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1153", "tree": {"sha": "582ed9089a32b015ed6df64bada7119b852c7443", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/582ed9089a32b015ed6df64bada7119b852c7443"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68d884911e5d330965258f5ee34005ec7ef83022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d884911e5d330965258f5ee34005ec7ef83022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68d884911e5d330965258f5ee34005ec7ef83022", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d884911e5d330965258f5ee34005ec7ef83022/comments", "author": null, "committer": null, "parents": [{"sha": "454f2ef20efb456f6e550bba8482627f7021e283", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/454f2ef20efb456f6e550bba8482627f7021e283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/454f2ef20efb456f6e550bba8482627f7021e283"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "761409a8373021ca15e9cc787be4513f17721a94", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d884911e5d330965258f5ee34005ec7ef83022/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d884911e5d330965258f5ee34005ec7ef83022/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=68d884911e5d330965258f5ee34005ec7ef83022", "patch": "@@ -1220,7 +1220,7 @@ move\\\\t%0,%z4\\\\n\\\\\n    and\\\\t%0,%1,%2\n    andi\\\\t%0,%1,%x2\n    lui\\\\t%3,(%X2)>>16\\;and\\\\t%0,%1,%3\n-   li\\\\t%@,%X2\\;and\\\\t%0,%1,%@\"\n+   li\\\\t%3,%X2\\;and\\\\t%0,%1,%3\"\n   [(set_attr \"type\"\t\"arith,arith,multi,multi\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"1,1,2,3\")\n@@ -1336,7 +1336,7 @@ move\\\\t%0,%z4\\\\n\\\\\n    or\\\\t%0,%1,%2\n    ori\\\\t%0,%1,%x2\n    lui\\\\t%3,(%X2)>>16\\;or\\\\t%0,%1,%3\n-   li\\\\t%@,%X2\\;or\\\\t%0,%1,%@\"\n+   li\\\\t%3,%X2\\;or\\\\t%0,%1,%3\"\n   [(set_attr \"type\"\t\"arith,arith,multi,multi\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"1,1,2,3\")\n@@ -1452,7 +1452,7 @@ move\\\\t%0,%z4\\\\n\\\\\n    xor\\\\t%0,%1,%2\n    xori\\\\t%0,%1,%x2\n    lui\\\\t%3,(%X2)>>16\\;xor\\\\t%0,%1,%3\n-   li\\\\t%@,%X2\\;xor\\\\t%0,%1,%@\"\n+   li\\\\t%3,%X2\\;xor\\\\t%0,%1,%3\"\n   [(set_attr \"type\"\t\"arith,arith,multi,multi\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"\t\"1,1,2,3\")"}, {"sha": "0bc6db3e55ef6c3103756cedf8b91f7e9ae5f619", "filename": "gcc/fold-const.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68d884911e5d330965258f5ee34005ec7ef83022/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68d884911e5d330965258f5ee34005ec7ef83022/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=68d884911e5d330965258f5ee34005ec7ef83022", "patch": "@@ -2733,6 +2733,8 @@ fold (expr)\n       /* Other kinds of FIX are not handled properly by fold_convert.  */\n       /* Two conversions in a row are not needed unless:\n \t - the intermediate type is narrower than both initial and final, or\n+\t - the intermediate type and innermost type differ in signedness,\n+\t   and the outermost type is wider than the intermediate, or\n \t - the initial type is a pointer type and the precisions of the\n \t   intermediate and final types differ, or\n \t - the final type is a pointer type and the precisions of the \n@@ -2744,6 +2746,14 @@ fold (expr)\n \t      ||\n \t      TYPE_PRECISION (TREE_TYPE (TREE_OPERAND (t, 0)))\n \t      > TYPE_PRECISION (TREE_TYPE (t)))\n+\t  && ! ((TREE_CODE (TREE_TYPE (TREE_OPERAND (TREE_OPERAND (t, 0), 0)))\n+\t\t == INTEGER_TYPE)\n+\t\t&& (TREE_CODE (TREE_TYPE (TREE_OPERAND (t, 0)))\n+\t\t    == INTEGER_TYPE)\n+\t\t&& (TREE_UNSIGNED (TREE_TYPE (TREE_OPERAND (t, 0)))\n+\t\t    != TREE_UNSIGNED (TREE_OPERAND (TREE_OPERAND (t, 0), 0)))\n+\t\t&& (TYPE_PRECISION (TREE_TYPE (TREE_OPERAND (t, 0)))\n+\t\t    < TYPE_PRECISION (TREE_TYPE (t))))\n \t  && ((TREE_UNSIGNED (TREE_TYPE (TREE_OPERAND (t, 0)))\n \t       && (TYPE_PRECISION (TREE_TYPE (TREE_OPERAND (t, 0)))\n \t\t   > TYPE_PRECISION (TREE_TYPE (TREE_OPERAND (TREE_OPERAND (t, 0), 0)))))"}]}