{"sha": "84ae6d7ba5b2cc9d0ecbb844486c435598594123", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRhZTZkN2JhNWIyY2M5ZDBlY2JiODQ0NDg2YzQzNTU5ODU5NDEyMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-04-08T10:21:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-04-08T10:21:23Z"}, "message": "re PR tree-optimization/43679 (ice in gen_lsm_tmp_name, at tree-ssa-loop-im.c:1812)\n\n2010-04-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43679\n\t* tree-ssa-pre.c (eliminate): Only propagate copies.\n\n\t* gcc.c-torture/compile/pr43679.c: New testcase.\n\nFrom-SVN: r158112", "tree": {"sha": "e91f5063ba8dc6863a237ba78a49067e0708b610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e91f5063ba8dc6863a237ba78a49067e0708b610"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84ae6d7ba5b2cc9d0ecbb844486c435598594123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ae6d7ba5b2cc9d0ecbb844486c435598594123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84ae6d7ba5b2cc9d0ecbb844486c435598594123", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ae6d7ba5b2cc9d0ecbb844486c435598594123/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a905a2b23dec8efb2aea618962eefbac1092f41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a905a2b23dec8efb2aea618962eefbac1092f41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a905a2b23dec8efb2aea618962eefbac1092f41"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "c7d4ecbf02be48158be9518d6f4e3399c76ecf6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ae6d7ba5b2cc9d0ecbb844486c435598594123/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ae6d7ba5b2cc9d0ecbb844486c435598594123/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84ae6d7ba5b2cc9d0ecbb844486c435598594123", "patch": "@@ -1,3 +1,8 @@\n+2010-04-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43679\n+\t* tree-ssa-pre.c (eliminate): Only propagate copies.\n+\n 2010-04-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/43681"}, {"sha": "51cf82d59bdaf7411bb996664cb613413c251abb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ae6d7ba5b2cc9d0ecbb844486c435598594123/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ae6d7ba5b2cc9d0ecbb844486c435598594123/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=84ae6d7ba5b2cc9d0ecbb844486c435598594123", "patch": "@@ -1,3 +1,8 @@\n+2010-04-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43679\n+\t* gcc.c-torture/compile/pr43679.c: New testcase.\n+\n 2010-04-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/43670"}, {"sha": "c45ef9f965f1eae2c7cd1e037544fdd4af1c70e4", "filename": "gcc/testsuite/gcc.c-torture/compile/pr43679.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ae6d7ba5b2cc9d0ecbb844486c435598594123/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43679.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ae6d7ba5b2cc9d0ecbb844486c435598594123/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43679.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr43679.c?ref=84ae6d7ba5b2cc9d0ecbb844486c435598594123", "patch": "@@ -0,0 +1,33 @@\n+unsigned g_5;\n+int g_7;\n+int g_23[2];\n+int *g_29 = &g_23[0];\n+int **g_59;\n+unsigned long g_186;\n+\n+int foo (int, int);\n+int bar (int);\n+\n+void func_37 (long p_38)\n+{\n+  int *l_39 = &g_7;\n+  *l_39 = (*l_39\n+             ||\n+             (foo\n+              (((*g_29 != *l_39, ((bar (g_59 != &l_39), 0), 0))),\n+               0)));\n+  foo (*l_39, 0);\n+  int **l_256 = &l_39;\n+  {\n+    for (0; g_186; 0)\n+      {\n+        *l_256 = *l_256;\n+        if (g_5)\n+          goto lbl_270;\n+        *l_39 &= 0;\n+      }\n+  }\n+lbl_270:\n+  ;\n+}\n+"}, {"sha": "ae630df1b48636dc14640cdc8e392b6b3179edaa", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ae6d7ba5b2cc9d0ecbb844486c435598594123/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ae6d7ba5b2cc9d0ecbb844486c435598594123/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=84ae6d7ba5b2cc9d0ecbb844486c435598594123", "patch": "@@ -4341,15 +4341,16 @@ eliminate (void)\n   for (i = 0; VEC_iterate (gimple, to_remove, i, stmt); ++i)\n     {\n       tree lhs = gimple_assign_lhs (stmt);\n+      tree rhs = gimple_assign_rhs1 (stmt);\n       use_operand_p use_p;\n       gimple use_stmt;\n \n       /* If there is a single use only, propagate the equivalency\n \t instead of keeping the copy.  */\n       if (TREE_CODE (lhs) == SSA_NAME\n+\t  && TREE_CODE (rhs) == SSA_NAME\n \t  && single_imm_use (lhs, &use_p, &use_stmt)\n-\t  && may_propagate_copy (USE_FROM_PTR (use_p),\n-\t\t\t\t gimple_assign_rhs1 (stmt)))\n+\t  && may_propagate_copy (USE_FROM_PTR (use_p), rhs))\n \t{\n \t  SET_USE (use_p, gimple_assign_rhs1 (stmt));\n \t  update_stmt (use_stmt);"}]}