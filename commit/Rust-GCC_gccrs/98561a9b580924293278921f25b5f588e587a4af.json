{"sha": "98561a9b580924293278921f25b5f588e587a4af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg1NjFhOWI1ODA5MjQyOTMyNzg5MjFmMjViNWY1ODhlNTg3YTRhZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-02-25T10:17:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-02-25T10:17:31Z"}, "message": "re PR middle-end/79396 (ICE (verify_flow_info failed) with -fnon-call-exceptions -O2 -march=haswell)\n\n\tPR middle-end/79396\n\t* tree-eh.c (operation_could_trap_p, stmt_could_throw_1_p): Handle\n\tFMA_EXPR like tcc_binary or tcc_unary.\n\n\t* g++.dg/opt/pr79396.C: New test.\n\nFrom-SVN: r245735", "tree": {"sha": "7f16fff7359d19855690094fa2060ab4af1435f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f16fff7359d19855690094fa2060ab4af1435f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98561a9b580924293278921f25b5f588e587a4af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98561a9b580924293278921f25b5f588e587a4af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98561a9b580924293278921f25b5f588e587a4af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98561a9b580924293278921f25b5f588e587a4af/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d975cb6a6cf049da5c0c3fada48a9dc3c016c63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d975cb6a6cf049da5c0c3fada48a9dc3c016c63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d975cb6a6cf049da5c0c3fada48a9dc3c016c63"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "18410bc65a6f9472d8b185bb56535e93db9281a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98561a9b580924293278921f25b5f588e587a4af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98561a9b580924293278921f25b5f588e587a4af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98561a9b580924293278921f25b5f588e587a4af", "patch": "@@ -1,5 +1,9 @@\n 2017-02-25  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/79396\n+\t* tree-eh.c (operation_could_trap_p, stmt_could_throw_1_p): Handle\n+\tFMA_EXPR like tcc_binary or tcc_unary.\n+\n \t* tree-ssa-loop-niter.c (number_of_iterations_exit): Simplify warning.\n \n \tPR debug/77589"}, {"sha": "e2850e84f88bf48507b309f8d93056f6d10627a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98561a9b580924293278921f25b5f588e587a4af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98561a9b580924293278921f25b5f588e587a4af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98561a9b580924293278921f25b5f588e587a4af", "patch": "@@ -1,3 +1,8 @@\n+2017-02-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/79396\n+\t* g++.dg/opt/pr79396.C: New test.\n+\n 2017-02-25  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \n \tPR fortran/79597"}, {"sha": "328c271358a3216632019f3f89922517e8331de1", "filename": "gcc/testsuite/g++.dg/opt/pr79396.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98561a9b580924293278921f25b5f588e587a4af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr79396.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98561a9b580924293278921f25b5f588e587a4af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr79396.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr79396.C?ref=98561a9b580924293278921f25b5f588e587a4af", "patch": "@@ -0,0 +1,13 @@\n+// PR middle-end/79396\n+// { dg-do compile }\n+// { dg-options \"-fnon-call-exceptions -O2\" }\n+// { dg-additional-options \"-mfma\" { target i?86-*-* x86_64-*-* } }\n+\n+struct A { A (); ~A (); };\n+\n+float\n+foo (float x)\n+{\n+  A a;\n+  return __builtin_pow (x, 2) + 2;\n+}"}, {"sha": "0b785e9b314d8cfaf0f21e040a1b3079e6373fa2", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98561a9b580924293278921f25b5f588e587a4af/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98561a9b580924293278921f25b5f588e587a4af/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=98561a9b580924293278921f25b5f588e587a4af", "patch": "@@ -2513,7 +2513,8 @@ operation_could_trap_p (enum tree_code op, bool fp_operation, bool honor_trapv,\n \n   if (TREE_CODE_CLASS (op) != tcc_comparison\n       && TREE_CODE_CLASS (op) != tcc_unary\n-      && TREE_CODE_CLASS (op) != tcc_binary)\n+      && TREE_CODE_CLASS (op) != tcc_binary\n+      && op != FMA_EXPR)\n     return false;\n \n   return operation_could_trap_helper_p (op, fp_operation, honor_trapv,\n@@ -2738,7 +2739,8 @@ stmt_could_throw_1_p (gimple *stmt)\n \n   if (TREE_CODE_CLASS (code) == tcc_comparison\n       || TREE_CODE_CLASS (code) == tcc_unary\n-      || TREE_CODE_CLASS (code) == tcc_binary)\n+      || TREE_CODE_CLASS (code) == tcc_binary\n+      || code == FMA_EXPR)\n     {\n       if (is_gimple_assign (stmt)\n \t  && TREE_CODE_CLASS (code) == tcc_comparison)"}]}