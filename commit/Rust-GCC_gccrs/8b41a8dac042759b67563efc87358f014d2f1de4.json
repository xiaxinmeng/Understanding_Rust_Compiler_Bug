{"sha": "8b41a8dac042759b67563efc87358f014d2f1de4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI0MWE4ZGFjMDQyNzU5YjY3NTYzZWZjODczNThmMDE0ZDJmMWRlNA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-03-06T01:34:55Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-03-06T01:34:55Z"}, "message": "h8300.md (a peephole2): Generalize to accept a memory operand.\n\n\t* config/h8300/h8300.md (a peephole2): Generalize to\n\taccept a memory operand.\n\nFrom-SVN: r63883", "tree": {"sha": "1b1500db78a0b26369d472dd40b6575cf1afccf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b1500db78a0b26369d472dd40b6575cf1afccf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b41a8dac042759b67563efc87358f014d2f1de4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b41a8dac042759b67563efc87358f014d2f1de4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b41a8dac042759b67563efc87358f014d2f1de4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b41a8dac042759b67563efc87358f014d2f1de4/comments", "author": null, "committer": null, "parents": [{"sha": "39ee7fa95535337ab8e7a0423f3cf00c1bd4ea84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ee7fa95535337ab8e7a0423f3cf00c1bd4ea84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39ee7fa95535337ab8e7a0423f3cf00c1bd4ea84"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "e5c4f3c0e10d798144a428b38c761101456256d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b41a8dac042759b67563efc87358f014d2f1de4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b41a8dac042759b67563efc87358f014d2f1de4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b41a8dac042759b67563efc87358f014d2f1de4", "patch": "@@ -1,3 +1,8 @@\n+2003-03-05  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (a peephole2): Generalize to\n+\taccept a memory operand.\n+\n Wed Mar  5 19:34:18 2003  Olivier Hainque <hainque@act-europe.fr>\n \n \t* config/alpha/alpha.h (PRINT_OPERAND_PUNCT_VALID_P): Add '+'."}, {"sha": "ed154b7d79a2ad3938b9fd34b1e0f8307ba04b3e", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b41a8dac042759b67563efc87358f014d2f1de4/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b41a8dac042759b67563efc87358f014d2f1de4/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=8b41a8dac042759b67563efc87358f014d2f1de4", "patch": "@@ -3570,20 +3570,19 @@\n \n (define_peephole2\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(match_operand:SI 1 \"register_operand\" \"\"))\n+\t(match_operand:SI 1 \"general_operand\" \"\"))\n    (set (match_dup 0)\n \t(and:SI (match_dup 0)\n \t\t(const_int 255)))]\n   \"(TARGET_H8300H || TARGET_H8300S)\n-   && REG_P (operands[0])\n-   && REG_P (operands[1])\n-   && REGNO (operands[0]) != REGNO (operands[1])\"\n+   && !reg_overlap_mentioned_p (operands[0], operands[1])\n+   && !(GET_CODE (operands[1]) == MEM && MEM_VOLATILE_P (operands[1]))\"\n   [(set (match_dup 0)\n \t(const_int 0))\n    (set (strict_low_part (match_dup 2))\n \t(match_dup 3))]\n-  \"operands[2] = gen_rtx_REG (QImode, REGNO (operands[0]));\n-   operands[3] = gen_rtx_REG (QImode, REGNO (operands[1]));\")\n+  \"operands[2] = gen_lowpart (QImode, operands[0]);\n+   operands[3] = gen_lowpart (QImode, operands[1]);\")\n \n ;; (compare (reg:SI) (const_int)) takes 6 bytes, so we try to achieve\n ;; the equivalent with shorter sequences.  Here is the summary.  Cases"}]}