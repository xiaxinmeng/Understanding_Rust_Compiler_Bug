{"sha": "357ad64f1cc374a7d63f0ac509d398a628cb56cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU3YWQ2NGYxY2MzNzRhN2Q2M2YwYWM1MDlkMzk4YTYyOGNiNTZjYw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-06-13T13:04:26Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-06-13T13:04:26Z"}, "message": "re PR fortran/36476 (ICE: len=* CHARACTER array with separate PARAMETER statement)\n\n2008-06-13  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/36476\n        * decl.c (do_parm): Handle init expression for len=*.\n\n2008-06-13  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/36476\n        * gfortran.dg/parameter_array_init_4.f90: New.\n\nFrom-SVN: r136754", "tree": {"sha": "ee90829065df76d1d0e50512bc83f0ce56c5addd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee90829065df76d1d0e50512bc83f0ce56c5addd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/357ad64f1cc374a7d63f0ac509d398a628cb56cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/357ad64f1cc374a7d63f0ac509d398a628cb56cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/357ad64f1cc374a7d63f0ac509d398a628cb56cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/357ad64f1cc374a7d63f0ac509d398a628cb56cc/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4dc3e453c81f50fd3fac74ae85a7b7752cf58924", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc3e453c81f50fd3fac74ae85a7b7752cf58924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dc3e453c81f50fd3fac74ae85a7b7752cf58924"}], "stats": {"total": 86, "additions": 84, "deletions": 2}, "files": [{"sha": "4a6b07a76920a5a2991e66da34e94462c7019525", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357ad64f1cc374a7d63f0ac509d398a628cb56cc/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357ad64f1cc374a7d63f0ac509d398a628cb56cc/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=357ad64f1cc374a7d63f0ac509d398a628cb56cc", "patch": "@@ -1,3 +1,8 @@\n+2008-06-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36476\n+\t* decl.c (do_parm): Handle init expression for len=*.\n+\n 2008-06-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/36462"}, {"sha": "a1c7d5aa44e4bb906aa7544b754c405becbe7c38", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357ad64f1cc374a7d63f0ac509d398a628cb56cc/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357ad64f1cc374a7d63f0ac509d398a628cb56cc/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=357ad64f1cc374a7d63f0ac509d398a628cb56cc", "patch": "@@ -5820,10 +5820,27 @@ do_parm (void)\n       && sym->ts.cl->length != NULL\n       && sym->ts.cl->length->expr_type == EXPR_CONSTANT\n       && init->expr_type == EXPR_CONSTANT\n-      && init->ts.type == BT_CHARACTER\n-      && init->ts.kind == 1)\n+      && init->ts.type == BT_CHARACTER)\n     gfc_set_constant_character_len (\n       mpz_get_si (sym->ts.cl->length->value.integer), init, false);\n+  else if (sym->ts.type == BT_CHARACTER && sym->ts.cl != NULL\n+\t   && sym->ts.cl->length == NULL)\n+\t{\n+\t  int clen;\n+\t  if (init->expr_type == EXPR_CONSTANT)\n+\t    {\n+\t      clen = init->value.character.length;\n+\t      sym->ts.cl->length = gfc_int_expr (clen);\n+\t    }\n+\t  else if (init->expr_type == EXPR_ARRAY)\n+\t    {\n+\t      gfc_expr *p = init->value.constructor->expr;\n+\t      clen = p->value.character.length;\n+\t      sym->ts.cl->length = gfc_int_expr (clen);\n+\t    }\n+\t  else if (init->ts.cl && init->ts.cl->length)\n+\t    sym->ts.cl->length = gfc_copy_expr (sym->value->ts.cl->length);\n+\t}\n \n   sym->value = init;\n   return MATCH_YES;"}, {"sha": "333db9a73ca615eec38b9b324326026414920575", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357ad64f1cc374a7d63f0ac509d398a628cb56cc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357ad64f1cc374a7d63f0ac509d398a628cb56cc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=357ad64f1cc374a7d63f0ac509d398a628cb56cc", "patch": "@@ -1,3 +1,8 @@\n+2008-06-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36476\n+\t* gfortran.dg/parameter_array_init_4.f90: New.\n+\n 2008-06-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.c-torture/compile/20080613-1.c: New test."}, {"sha": "5bdcb3723b1a10846a2951cd8fe7a975c5e5796f", "filename": "gcc/testsuite/gfortran.dg/parameter_array_init_4.f90", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/357ad64f1cc374a7d63f0ac509d398a628cb56cc/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_init_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/357ad64f1cc374a7d63f0ac509d398a628cb56cc/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_init_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_init_4.f90?ref=357ad64f1cc374a7d63f0ac509d398a628cb56cc", "patch": "@@ -0,0 +1,55 @@\n+! { dg-do run }\n+! PR fortran/36476\n+!\n+IMPLICIT NONE\n+CHARACTER (len=*) MY_STRING(1:3), my_string_s\n+PARAMETER ( MY_STRING = (/ \"A\" , \"B\", \"C\" /) )\n+PARAMETER ( MY_STRING_S = \"AB C\" )\n+character(len=*), parameter :: str(2) = [ 'Ac','cc']\n+character(len=*), parameter :: str_s = 'Acc'\n+\n+CHARACTER (kind=1,len=*) MY_STRING1(1:3), my_string_s1\n+PARAMETER ( MY_STRING1 = (/ \"A\" , \"B\", \"C\" /) )\n+PARAMETER ( MY_STRING_S1 = \"AB C\" )\n+character(kind=1,len=*), parameter :: str1(2) = [ 1_'Ac',1_'cc']\n+character(kind=1,len=*), parameter :: str_s1 = 'Acc'\n+\n+CHARACTER (kind=4,len=*) MY_STRING4(1:3), my_string_s4\n+PARAMETER ( MY_STRING4 = (/ \"A\" , \"B\", \"C\" /) )\n+PARAMETER ( MY_STRING_S4 = \"AB C\" )\n+character(kind=4,len=*), parameter :: str4(2) = [ 1_'Ac',1_'cc']\n+character(kind=4,len=*), parameter :: str_s4 = 'Acc'\n+\n+if(len(MY_STRING)   /= 1) call abort()\n+if(    MY_STRING(1) /= \"A\" &\n+   .or.MY_STRING(2) /= \"B\" &\n+   .or.MY_STRING(3) /= \"C\") call abort()\n+if(len(MY_STRING_s)  /= 4) call abort()\n+if(MY_STRING_S /= \"AB C\") call abort()\n+if(len(str)        /= 2) call abort()\n+if(str(1) /= \"Ac\" .or. str(2) /=  \"cc\") call abort()\n+if(len(str_s)      /= 3) call abort()\n+if(str_s /= 'Acc') call abort()\n+\n+if(len(MY_STRING1) /= 1) call abort()\n+if(    MY_STRING1(1) /= 1_\"A\" &\n+   .or.MY_STRING1(2) /= 1_\"B\" &\n+   .or.MY_STRING1(3) /= 1_\"C\") call abort()\n+if(len(MY_STRING_s1)  /= 4) call abort()\n+if(MY_STRING_S1 /= 1_\"AB C\") call abort()\n+if(len(str1)       /= 2) call abort()\n+if(str1(1) /= 1_\"Ac\" .or. str1(2) /=  1_\"cc\") call abort()\n+if(len(str_s1)     /= 3) call abort()\n+if(str_s1 /= 1_'Acc') call abort()\n+\n+if(len(MY_STRING4) /= 1) call abort()\n+if(    MY_STRING4(1) /= 4_\"A\" &\n+   .or.MY_STRING4(2) /= 4_\"B\" &\n+   .or.MY_STRING4(3) /= 4_\"C\") call abort()\n+if(len(MY_STRING_s4)  /= 4) call abort()\n+if(MY_STRING_S4 /= 4_\"AB C\") call abort()\n+if(len(str4)       /= 2) call abort()\n+if(str4(1) /= 4_\"Ac\" .or. str4(2) /=  4_\"cc\") call abort()\n+if(len(str_s4)     /= 3) call abort()\n+if(str_s4 /= 4_'Acc') call abort()\n+end"}]}