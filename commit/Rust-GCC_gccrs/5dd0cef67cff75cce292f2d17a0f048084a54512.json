{"sha": "5dd0cef67cff75cce292f2d17a0f048084a54512", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRkMGNlZjY3Y2ZmNzVjY2UyOTJmMmQxN2EwZjA0ODA4NGE1NDUxMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-12T21:03:10Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-12-12T21:03:10Z"}, "message": "compiler: Check for nil when slicing pointer to array.\n\nFrom-SVN: r205942", "tree": {"sha": "04469f666ca0ee6847a5b7a0ccf8b24048c0a1ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04469f666ca0ee6847a5b7a0ccf8b24048c0a1ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dd0cef67cff75cce292f2d17a0f048084a54512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd0cef67cff75cce292f2d17a0f048084a54512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dd0cef67cff75cce292f2d17a0f048084a54512", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd0cef67cff75cce292f2d17a0f048084a54512/comments", "author": null, "committer": null, "parents": [{"sha": "3a24b26591ef6a0f19901ddc4fd7931c9297b899", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a24b26591ef6a0f19901ddc4fd7931c9297b899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a24b26591ef6a0f19901ddc4fd7931c9297b899"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "35bcdbb5145ccdb7a564e7ee58eef7bd88b3ff7c", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dd0cef67cff75cce292f2d17a0f048084a54512/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dd0cef67cff75cce292f2d17a0f048084a54512/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=5dd0cef67cff75cce292f2d17a0f048084a54512", "patch": "@@ -10259,6 +10259,14 @@ Index_expression::do_lower(Gogo*, Named_object*, Statement_inserter*, int)\n     {\n       Expression* deref = Expression::make_unary(OPERATOR_MULT, left,\n \t\t\t\t\t\t location);\n+\n+      // For an ordinary index into the array, the pointer will be\n+      // dereferenced.  For a slice it will not--the resulting slice\n+      // will simply reuse the pointer, which is incorrect if that\n+      // pointer is nil.\n+      if (end != NULL || cap != NULL)\n+\tderef->issue_nil_check();\n+\n       return Expression::make_array_index(deref, start, end, cap, location);\n     }\n   else if (type->is_string_type())"}]}