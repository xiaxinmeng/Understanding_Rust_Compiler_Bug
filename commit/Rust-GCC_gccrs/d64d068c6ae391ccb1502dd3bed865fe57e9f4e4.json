{"sha": "d64d068c6ae391ccb1502dd3bed865fe57e9f4e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY0ZDA2OGM2YWUzOTFjY2IxNTAyZGQzYmVkODY1ZmU1N2U5ZjRlNA==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2018-11-05T16:34:32Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@gcc.gnu.org", "date": "2018-11-05T16:34:32Z"}, "message": "S/390: Make tests expect column numbers in RTL output\n\nRTL output now includes column numbers in addition to line numbers,\nlike this:\n\n  \"gcc/testsuite/gcc.target/s390/md/andc-splitter-1.c\":16:1\n\nThis confuses some S/390 tests.\n\ngcc/testsuite/ChangeLog:\n\n2018-11-05  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\t* gcc.target/s390/md/andc-splitter-1.c: Add colon to\n\texpectations.\n\t* gcc.target/s390/md/andc-splitter-2.c: Likewise.\n\t* gcc.target/s390/md/setmem_long-1.c: Likewise.\n\nFrom-SVN: r265813", "tree": {"sha": "9b74d356c97e739f09dda5b1ba6ad6b148a39af8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b74d356c97e739f09dda5b1ba6ad6b148a39af8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "733441e2e1d207a1ab0a4a255dea03ee7c6c8774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/733441e2e1d207a1ab0a4a255dea03ee7c6c8774", "html_url": "https://github.com/Rust-GCC/gccrs/commit/733441e2e1d207a1ab0a4a255dea03ee7c6c8774"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "665c049e7cbdf6a886eefd23ffdcbdaa73c639b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d64d068c6ae391ccb1502dd3bed865fe57e9f4e4", "patch": "@@ -1,3 +1,10 @@\n+2018-11-05  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* gcc.target/s390/md/andc-splitter-1.c: Add colon to\n+\texpectations.\n+\t* gcc.target/s390/md/andc-splitter-2.c: Likewise.\n+\t* gcc.target/s390/md/setmem_long-1.c: Likewise.\n+\n 2018-11-05  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87873"}, {"sha": "36f2cfc53de6d6aa0415ac701514d74e7a40a023", "filename": "gcc/testsuite/gcc.target/s390/md/andc-splitter-1.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-1.c?ref=d64d068c6ae391ccb1502dd3bed865fe57e9f4e4", "patch": "@@ -14,26 +14,26 @@\n __attribute__ ((noinline))\n unsigned long andc_vv(unsigned long a, unsigned long b)\n { return ~b & a; }\n-/* { dg-final { scan-assembler \":16 .\\* \\{\\\\*anddi3\\}\" } } */\n-/* { dg-final { scan-assembler \":16 .\\* \\{\\\\*xordi3\\}\" } } */\n+/* { dg-final { scan-assembler \":16:.\\* \\{\\\\*anddi3\\}\" } } */\n+/* { dg-final { scan-assembler \":16:.\\* \\{\\\\*xordi3\\}\" } } */\n \n __attribute__ ((noinline))\n unsigned long andc_pv(unsigned long *a, unsigned long b)\n { return ~b & *a; }\n-/* { dg-final { scan-assembler \":22 .\\* \\{\\\\*anddi3\\}\" } } */\n-/* { dg-final { scan-assembler \":22 .\\* \\{\\\\*xordi3\\}\" } } */\n+/* { dg-final { scan-assembler \":22:.\\* \\{\\\\*anddi3\\}\" } } */\n+/* { dg-final { scan-assembler \":22:.\\* \\{\\\\*xordi3\\}\" } } */\n \n __attribute__ ((noinline))\n unsigned long andc_vp(unsigned long a, unsigned long *b)\n { return ~*b & a; }\n-/* { dg-final { scan-assembler \":28 .\\* \\{\\\\*anddi3\\}\" } } */\n-/* { dg-final { scan-assembler \":28 .\\* \\{\\\\*xordi3\\}\" } } */\n+/* { dg-final { scan-assembler \":28:.\\* \\{\\\\*anddi3\\}\" } } */\n+/* { dg-final { scan-assembler \":28:.\\* \\{\\\\*xordi3\\}\" } } */\n \n __attribute__ ((noinline))\n unsigned long andc_pp(unsigned long *a, unsigned long *b)\n { return ~*b & *a; }\n-/* { dg-final { scan-assembler \":34 .\\* \\{\\\\*anddi3\\}\" } } */\n-/* { dg-final { scan-assembler \":34 .\\* \\{\\\\*xordi3\\}\" } } */\n+/* { dg-final { scan-assembler \":34:.\\* \\{\\\\*anddi3\\}\" } } */\n+/* { dg-final { scan-assembler \":34:.\\* \\{\\\\*xordi3\\}\" } } */\n \n /* { dg-final { scan-assembler-times \"\\tngr\\?k\\?\\t\" 4 } } */\n /* { dg-final { scan-assembler-times \"\\txgr\\?\\t\" 4 } } */"}, {"sha": "75ab75b5273d2587ff37baa30751523bba42d68a", "filename": "gcc/testsuite/gcc.target/s390/md/andc-splitter-2.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fandc-splitter-2.c?ref=d64d068c6ae391ccb1502dd3bed865fe57e9f4e4", "patch": "@@ -14,26 +14,26 @@\n __attribute__ ((noinline))\n unsigned int andc_vv(unsigned int a, unsigned int b)\n { return ~b & a; }\n-/* { dg-final { scan-assembler \":16 .\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n-/* { dg-final { scan-assembler \":16 .\\* \\{\\\\*xorsi3\\}\" } } */\n+/* { dg-final { scan-assembler \":16:.\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n+/* { dg-final { scan-assembler \":16:.\\* \\{\\\\*xorsi3\\}\" } } */\n \n __attribute__ ((noinline))\n unsigned int andc_pv(unsigned int *a, unsigned int b)\n { return ~b & *a; }\n-/* { dg-final { scan-assembler \":22 .\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n-/* { dg-final { scan-assembler \":22 .\\* \\{\\\\*xorsi3\\}\" } } */\n+/* { dg-final { scan-assembler \":22:.\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n+/* { dg-final { scan-assembler \":22:.\\* \\{\\\\*xorsi3\\}\" } } */\n \n __attribute__ ((noinline))\n unsigned int andc_vp(unsigned int a, unsigned int *b)\n { return ~*b & a; }\n-/* { dg-final { scan-assembler \":28 .\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n-/* { dg-final { scan-assembler \":28 .\\* \\{\\\\*xorsi3\\}\" } } */\n+/* { dg-final { scan-assembler \":28:.\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n+/* { dg-final { scan-assembler \":28:.\\* \\{\\\\*xorsi3\\}\" } } */\n \n __attribute__ ((noinline))\n unsigned int andc_pp(unsigned int *a, unsigned int *b)\n { return ~*b & *a; }\n-/* { dg-final { scan-assembler \":34 .\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n-/* { dg-final { scan-assembler \":34 .\\* \\{\\\\*xorsi3\\}\" } } */\n+/* { dg-final { scan-assembler \":34:.\\* \\{\\\\*andsi3_\\(esa\\|zarch\\)\\}\" } } */\n+/* { dg-final { scan-assembler \":34:.\\* \\{\\\\*xorsi3\\}\" } } */\n \n /* { dg-final { scan-assembler-times \"\\tnr\\?k\\?\\t\" 4 } } */\n /* { dg-final { scan-assembler-times \"\\txr\\?k\\?\\t\" 4 } } */"}, {"sha": "a1d1c11df37b87894b0fa221fdc2fef5fb95f174", "filename": "gcc/testsuite/gcc.target/s390/md/setmem_long-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fsetmem_long-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64d068c6ae391ccb1502dd3bed865fe57e9f4e4/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fsetmem_long-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fsetmem_long-1.c?ref=d64d068c6ae391ccb1502dd3bed865fe57e9f4e4", "patch": "@@ -23,8 +23,8 @@ void test2(char *p, int c, int len)\n }\n \n /* Check that the right patterns are used.  */\n-/* { dg-final { scan-assembler-times {c\"?:16 .*{[*]setmem_long_?3?1?z?}} 1 } } */\n-/* { dg-final { scan-assembler-times {c\"?:22 .*{[*]setmem_long_and_?3?1?z?}} 1 } } */\n+/* { dg-final { scan-assembler-times {c\"?:16:.*{[*]setmem_long_?3?1?z?}} 1 } } */\n+/* { dg-final { scan-assembler-times {c\"?:22:.*{[*]setmem_long_and_?3?1?z?}} 1 } } */\n \n #define LEN 500\n char buf[LEN + 2];"}]}