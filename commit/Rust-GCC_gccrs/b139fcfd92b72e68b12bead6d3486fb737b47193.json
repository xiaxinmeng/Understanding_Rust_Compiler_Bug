{"sha": "b139fcfd92b72e68b12bead6d3486fb737b47193", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEzOWZjZmQ5MmI3MmU2OGIxMmJlYWQ2ZDM0ODZmYjczN2I0NzE5Mw==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2002-09-05T13:24:41Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2002-09-05T13:24:41Z"}, "message": "verify.c (verify_jvm_instructions): Allow exception handler inside code that is being protected, but generate a warning.\n\n2002-08-28  Andrew Haley  <aph@redhat.com>\n\n\t* verify.c (verify_jvm_instructions): Allow exception handler\n\tinside code that is being protected, but generate a warning.\n\t* except.c (link_handler): Initialize `expanded' in new eh_range.\n\t(binding_depth, is_class_level, current_pc): Declare extern.\n\nFrom-SVN: r56842", "tree": {"sha": "c4640e65d1a3edd785878c258a17aaf2680193ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4640e65d1a3edd785878c258a17aaf2680193ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b139fcfd92b72e68b12bead6d3486fb737b47193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b139fcfd92b72e68b12bead6d3486fb737b47193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b139fcfd92b72e68b12bead6d3486fb737b47193", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b139fcfd92b72e68b12bead6d3486fb737b47193/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f373d4c761d558910774264f085e117f6c8cf791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f373d4c761d558910774264f085e117f6c8cf791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f373d4c761d558910774264f085e117f6c8cf791"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "2eb6a9d2d92c8f0cc2c84e8564fab24f5327f53b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b139fcfd92b72e68b12bead6d3486fb737b47193/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b139fcfd92b72e68b12bead6d3486fb737b47193/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=b139fcfd92b72e68b12bead6d3486fb737b47193", "patch": "@@ -1,3 +1,10 @@\n+2002-08-28  Andrew Haley  <aph@redhat.com>\n+\n+\t* verify.c (verify_jvm_instructions): Allow exception handler\n+\tinside code that is being protected, but generate a warning.\n+\t* except.c (link_handler): Initialize `expanded' in new eh_range.\n+\t(binding_depth, is_class_level, current_pc): Declare extern.\n+\n 2002-09-01  Mark Wielaard <mark@klomp.org>\n \n \t* gcj.texi: Add chapter about system properties."}, {"sha": "614587d33622f2ba7c6f04d7582cdb1896f0e33c", "filename": "gcc/java/except.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b139fcfd92b72e68b12bead6d3486fb737b47193/gcc%2Fjava%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b139fcfd92b72e68b12bead6d3486fb737b47193/gcc%2Fjava%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexcept.c?ref=b139fcfd92b72e68b12bead6d3486fb737b47193", "patch": "@@ -61,9 +61,9 @@ static struct eh_range *cache_next_child;\n struct eh_range whole_range;\n \n #if defined(DEBUG_JAVA_BINDING_LEVELS)\n-int binding_depth;\n-int is_class_level;\n-int current_pc;\n+extern int binding_depth;\n+extern int is_class_level;\n+extern int current_pc;\n extern void indent ();\n \n #endif\n@@ -172,6 +172,7 @@ link_handler (range, outer)\n       h->handlers = build_tree_list (TREE_PURPOSE (range->handlers),\n \t\t\t\t     TREE_VALUE (range->handlers));\n       h->next_sibling = NULL;\n+      h->expanded = 0;\n       /* Restart both from the top to avoid having to make this\n \t function smart about reentrancy.  */\n       link_handler (h, &whole_range);"}, {"sha": "c3b3b98a84d1743eb9f5b8776645830a3345601e", "filename": "gcc/java/verify.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b139fcfd92b72e68b12bead6d3486fb737b47193/gcc%2Fjava%2Fverify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b139fcfd92b72e68b12bead6d3486fb737b47193/gcc%2Fjava%2Fverify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify.c?ref=b139fcfd92b72e68b12bead6d3486fb737b47193", "patch": "@@ -471,7 +471,6 @@ verify_jvm_instructions (jcf, byte_ops, length)\n       if (start_pc < 0 || start_pc >= length\n \t  || end_pc < 0 || end_pc > length || start_pc >= end_pc\n \t  || handler_pc < 0 || handler_pc >= length\n-\t  || (handler_pc >= start_pc && handler_pc < end_pc)\n \t  || ! (instruction_bits [start_pc] & BCODE_INSTRUCTION_START)\n \t  || (end_pc < length &&\n \t     ! (instruction_bits [end_pc] & BCODE_INSTRUCTION_START))\n@@ -482,6 +481,9 @@ verify_jvm_instructions (jcf, byte_ops, length)\n \t  return 0;\n \t}\n \n+      if  (handler_pc >= start_pc && handler_pc < end_pc)\n+\twarning (\"exception handler inside code that is being protected\");\n+\n       add_handler (start_pc, end_pc,\n \t\t   lookup_label (handler_pc),\n \t\t   catch_type == 0 ? NULL_TREE"}]}