{"sha": "8f42219220d936ddcaa2904bcfc6ab67010bce2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY0MjIxOTIyMGQ5MzZkZGNhYTI5MDRiY2ZjNmFiNjcwMTBiY2UyYw==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "2004-01-26T03:24:39Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2004-01-26T03:24:39Z"}, "message": "c4x.h (BCT_CHECK_LOOP_ITERATIONS): Remove.\n\n\t* config/c4x/c4x.h (BCT_CHECK_LOOP_ITERATIONS): Remove.\n\t(HAVE_GAS_HIDDEN): Undefine as interim measure.\n\nFrom-SVN: r76617", "tree": {"sha": "5ea24506ed8a0f1109961fd2500581576c10ae65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ea24506ed8a0f1109961fd2500581576c10ae65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f42219220d936ddcaa2904bcfc6ab67010bce2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f42219220d936ddcaa2904bcfc6ab67010bce2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f42219220d936ddcaa2904bcfc6ab67010bce2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f42219220d936ddcaa2904bcfc6ab67010bce2c/comments", "author": null, "committer": null, "parents": [{"sha": "b7c707d1d95fbd6ecc91d7b653c4e607d307cb02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7c707d1d95fbd6ecc91d7b653c4e607d307cb02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7c707d1d95fbd6ecc91d7b653c4e607d307cb02"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "a4f3b43c32272e9a08cf6d128957e3fc0339b5cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f42219220d936ddcaa2904bcfc6ab67010bce2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f42219220d936ddcaa2904bcfc6ab67010bce2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f42219220d936ddcaa2904bcfc6ab67010bce2c", "patch": "@@ -1,3 +1,8 @@\n+2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.h (BCT_CHECK_LOOP_ITERATIONS): Remove.\n+\t(HAVE_GAS_HIDDEN): Undefine as interim measure.\n+\t\n 2004-01-26  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.c (c4x_legitimate_address_p):  Invalidate direct"}, {"sha": "aa80ffbd17075572fb492d6d42426ee14dac5282", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f42219220d936ddcaa2904bcfc6ab67010bce2c/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f42219220d936ddcaa2904bcfc6ab67010bce2c/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=8f42219220d936ddcaa2904bcfc6ab67010bce2c", "patch": "@@ -306,11 +306,14 @@ extern int target_flags;\n #define TARGET_C40\t\t(target_flags & C40_FLAG)\n #define TARGET_C44\t\t(target_flags & C44_FLAG)\n \n-/* Define some options to control code generation.  */\n+/* Nonzero to use load_immed_addr pattern rather than forcing memory\n+   addresses into memory.  */\n #define TARGET_LOAD_ADDRESS\t(1 || (! TARGET_C3X && ! TARGET_SMALL))\n+\n /* Nonzero to convert direct memory references into HIGH/LO_SUM pairs\n    during RTL generation.  */\n #define TARGET_EXPOSE_LDP\t0\n+\n /* Nonzero to force loading of direct memory references into a register.  */\n #define TARGET_LOAD_DIRECT_MEMS\t0\n \n@@ -320,8 +323,6 @@ extern int target_flags;\n \n #define TARGET_RPTS_CYCLES(CYCLES) (TARGET_RPTS || (CYCLES) < c4x_rpts_cycles)\n \n-#define\tBCT_CHECK_LOOP_ITERATIONS  !(TARGET_LOOP_UNSIGNED)\n-\n /* -mcpu=XX    with XX = target DSP version number.  */\n \n extern const char *c4x_rpts_cycles_string, *c4x_cpu_version_string;\n@@ -1284,6 +1285,7 @@ CUMULATIVE_ARGS;\n #define LEGITIMIZE_ADDRESS(X, OLDX, MODE, WIN) \\\n {\t\t\t\t\t\t\t\t\t\\\n   rtx new;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n   new = c4x_legitimize_address (X, MODE);\t\t\t\t\\\n   if (new != NULL_RTX)\t\t\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n@@ -1918,3 +1920,8 @@ enum c4x_builtins\n   C4X_BUILTIN_FRIEEE,\t/*\tfrieee\t   (only C4x)\t*/\n   C4X_BUILTIN_RCPF\t/*\tfast_invf  (only C4x)\t*/\n };\n+\n+\n+/* Hack to overcome use of libgcc2.c using auto-host.h to determine\n+   HAVE_GAS_HIDDEN.  */\n+#undef HAVE_GAS_HIDDEN"}]}