{"sha": "0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY5YWFhYzc5ZWQwYjUzNDhlYTgwY2QzMjVhMDQ0MDZiYmY0Y2E3ZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-08-26T11:42:03Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-08-26T11:42:03Z"}, "message": "tree.h (tree_decl_with_vis): Add cxx_constructor, cxx_destructor.\n\n\n\t* tree.h (tree_decl_with_vis): Add cxx_constructor, cxx_destructor.\n\t(DECL_CXX_CONSTRUCTOR_P, DECL_CXX_DESTRUCTOR_P): New macros.\n\t* cp-tree.h (DECL_CONSTRUCTOR_P, DECL_DESTRUCTOR_P): Use\n\tmiddle-end flag.\n\nFrom-SVN: r201994", "tree": {"sha": "e9f1a76e7f06dbff4df1301317efffbb2ccbbfac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9f1a76e7f06dbff4df1301317efffbb2ccbbfac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d/comments", "author": null, "committer": null, "parents": [{"sha": "4b37444e7193b7df8ab9c00532598dff98bff49d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b37444e7193b7df8ab9c00532598dff98bff49d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b37444e7193b7df8ab9c00532598dff98bff49d"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "f0436be43f0f2bf49740dfe76c5eb9926506bad5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d", "patch": "@@ -1,3 +1,8 @@\n+2013-08-26  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree.h (tree_decl_with_vis): Add cxx_constructor, cxx_destructor.\n+\t(DECL_CXX_CONSTRUCTOR_P, DECL_CXX_DESTRUCTOR_P): New macros.\n+\n 2013-08-26  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* config/i386/i386.c (x86_64_elf_select_section): Put ATTRIBUTE_UNUSED"}, {"sha": "c110d9193a13b375f47b4c08f8833fdbca17376a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d", "patch": "@@ -1,3 +1,8 @@\n+2013-08-26  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cp-tree.h (DECL_CONSTRUCTOR_P, DECL_DESTRUCTOR_P): Use\n+\tmiddle-end flag.\n+\n 2013-08-26  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* cxx-pretty-print.h (cxx_pretty_printer::unary_expression):"}, {"sha": "61fdf437b705af5de429a938d0228207cdc29014", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d", "patch": "@@ -2121,9 +2121,10 @@ struct GTY((variable_size)) lang_decl {\n #define SET_DECL_LANGUAGE(NODE, LANGUAGE) \\\n   (DECL_LANG_SPECIFIC (NODE)->u.base.language = (LANGUAGE))\n \n-/* For FUNCTION_DECLs: nonzero means that this function is a constructor.  */\n+/* For FUNCTION_DECLs and TEMPLATE_DECLs: nonzero means that this function\n+   is a constructor.  */\n #define DECL_CONSTRUCTOR_P(NODE) \\\n-  (LANG_DECL_FN_CHECK (NODE)->constructor_attr)\n+  DECL_CXX_CONSTRUCTOR_P (STRIP_TEMPLATE (NODE))\n \n /* Nonzero if NODE (a FUNCTION_DECL) is a constructor for a complete\n    object.  */\n@@ -2152,9 +2153,10 @@ struct GTY((variable_size)) lang_decl {\n #define DECL_MOVE_CONSTRUCTOR_P(NODE) \\\n   (DECL_CONSTRUCTOR_P (NODE) && move_fn_p (NODE))\n \n-/* Nonzero if NODE is a destructor.  */\n+/* Nonzero if NODE (a FUNCTION_DECL or TEMPLATE_DECL)\n+   is a destructor.  */\n #define DECL_DESTRUCTOR_P(NODE)\t\t\t\t\\\n-  (LANG_DECL_FN_CHECK (NODE)->destructor_attr)\n+  DECL_CXX_DESTRUCTOR_P (STRIP_TEMPLATE (NODE))\n \n /* Nonzero if NODE (a FUNCTION_DECL) is a destructor, but not the\n    specialized in-charge constructor, in-charge deleting constructor,"}, {"sha": "1492f6c0fb133fa116b441d669697f1812a9ee21", "filename": "gcc/tree.h", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=0f9aaac79ed0b5348ea80cd325a04406bbf4ca7d", "patch": "@@ -3232,8 +3232,12 @@ struct GTY(()) tree_decl_with_vis {\n  /* Used by C++ only.  Might become a generic decl flag.  */\n  unsigned shadowed_for_var_p : 1;\n  /* Belong to FUNCTION_DECL exclusively.  */\n+ unsigned cxx_constructor : 1;\n+ /* Belong to FUNCTION_DECL exclusively.  */\n+ unsigned cxx_destructor : 1;\n+ /* Belong to FUNCTION_DECL exclusively.  */\n  unsigned final : 1;\n- /* 13 unused bits. */\n+ /* 11 unused bits. */\n };\n \n extern tree decl_debug_expr_lookup (tree);\n@@ -3483,6 +3487,18 @@ extern vec<tree, va_gc> **decl_debug_args_insert (tree);\n #define DECL_FUNCTION_VERSIONED(NODE)\\\n    (FUNCTION_DECL_CHECK (NODE)->function_decl.versioned_function)\n \n+/* In FUNCTION_DECL, this is set if this function is a C++ constructor.\n+   Devirtualization machinery uses this knowledge for determing type of the\n+   object constructed.  Also we assume that constructor address is not\n+   important.  */\n+#define DECL_CXX_CONSTRUCTOR_P(NODE)\\\n+   (FUNCTION_DECL_CHECK (NODE)->decl_with_vis.cxx_constructor)\n+\n+/* In FUNCTION_DECL, this is set if this function is a C++ destructor.\n+   Devirtualization machinery uses this to track types in destruction.  */\n+#define DECL_CXX_DESTRUCTOR_P(NODE)\\\n+   (FUNCTION_DECL_CHECK (NODE)->decl_with_vis.cxx_destructor)\n+\n /* In FUNCTION_DECL that represent an virtual method this is set when\n    the method is final.  */\n #define DECL_FINAL_P(NODE)\\"}]}