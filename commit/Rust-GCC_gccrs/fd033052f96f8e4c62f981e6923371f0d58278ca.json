{"sha": "fd033052f96f8e4c62f981e6923371f0d58278ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQwMzMwNTJmOTZmOGU0YzYyZjk4MWU2OTIzMzcxZjBkNTgyNzhjYQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-09-12T16:21:12Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-09-12T16:21:12Z"}, "message": "gjavah.c (cxx_keywords): Const-ification.\n\n\t* gjavah.c (cxx_keywords): Const-ification.\n\t* keyword.gperf (java_keyword): Likewise.\n\t* lang.c (java_tree_code_name): Likewise.\n\t* lex.c (cxx_keywords): Likewise.\n\t* parse.y (java_parser_context_suspend, merge_string_cste): Likewise.\n\nFrom-SVN: r45564", "tree": {"sha": "f688b4f2187b5454d9c4305a6522c2901bddc1ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f688b4f2187b5454d9c4305a6522c2901bddc1ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd033052f96f8e4c62f981e6923371f0d58278ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd033052f96f8e4c62f981e6923371f0d58278ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd033052f96f8e4c62f981e6923371f0d58278ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd033052f96f8e4c62f981e6923371f0d58278ca/comments", "author": null, "committer": null, "parents": [{"sha": "a8b7afb969789d5e4b4557c89e49151107eb7df1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b7afb969789d5e4b4557c89e49151107eb7df1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8b7afb969789d5e4b4557c89e49151107eb7df1"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "ba4a3b2c2b78746bb12876bd64762a54b627aa4a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=fd033052f96f8e4c62f981e6923371f0d58278ca", "patch": "@@ -1,3 +1,11 @@\n+2001-09-12  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gjavah.c (cxx_keywords): Const-ification.\n+\t* keyword.gperf (java_keyword): Likewise.\n+\t* lang.c (java_tree_code_name): Likewise.\n+\t* lex.c (cxx_keywords): Likewise.\n+\t* parse.y (java_parser_context_suspend, merge_string_cste): Likewise.\n+\n 2001-09-11  Richard Henderson  <rth@redhat.com>\n \n \t* parse.h (ctxp_for_generation): Mark extern."}, {"sha": "d340e66277e65e6f3f1217cacdc938e1111ea2d2", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=fd033052f96f8e4c62f981e6923371f0d58278ca", "patch": "@@ -390,7 +390,7 @@ utf8_cmp (str, length, name)\n \n /* This is a sorted list of all C++ keywords.  */\n \n-static const char *cxx_keywords[] =\n+static const char *const cxx_keywords[] =\n {\n   \"_Complex\",\n   \"__alignof\","}, {"sha": "2d28812bc2d8256553df9fab22aa5b0386271c2f", "filename": "gcc/java/keyword.gperf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Fkeyword.gperf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Fkeyword.gperf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fkeyword.gperf?ref=fd033052f96f8e4c62f981e6923371f0d58278ca", "patch": "@@ -25,7 +25,7 @@ of Sun Microsystems, Inc. in the United States and other countries.\n The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n %}\n-struct java_keyword { const char *name; int token; };\n+struct java_keyword { const char *const name; int token; };\n #ifdef __GNUC__\n __inline\n #endif"}, {"sha": "7e8832f4ec7cc0fa8320b5e6ce0aeac68af91c68", "filename": "gcc/java/keyword.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Fkeyword.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Fkeyword.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fkeyword.h?ref=fd033052f96f8e4c62f981e6923371f0d58278ca", "patch": "@@ -25,7 +25,7 @@ Java and all Java-based marks are trademarks or registered trademarks\n of Sun Microsystems, Inc. in the United States and other countries.\n The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n-struct java_keyword { const char *name; int token; };\n+struct java_keyword { const char *const name; int token; };\n #ifdef __GNUC__\n __inline\n #endif"}, {"sha": "482d89b1cd4d88ddd21e86a0b7e2149c2375e6c6", "filename": "gcc/java/lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=fd033052f96f8e4c62f981e6923371f0d58278ca", "patch": "@@ -89,7 +89,7 @@ int java_tree_code_length[] = {\n    Used for printing out the tree and error messages.  */\n #define DEFTREECODE(SYM, NAME, TYPE, LEN) NAME,\n \n-const char *java_tree_code_name[] = {\n+static const char *const java_tree_code_name[] = {\n   \"@@dummy\",\n #include \"java-tree.def\"\n };"}, {"sha": "926827ace8db208a901f5009c130b418edbdfdf4", "filename": "gcc/java/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=fd033052f96f8e4c62f981e6923371f0d58278ca", "patch": "@@ -1822,7 +1822,7 @@ utf8_cmp (str, length, name)\n \n /* A sorted list of all C++ keywords.  */\n \n-static const char *cxx_keywords[] =\n+static const char *const cxx_keywords[] =\n {\n   \"_Complex\",\n   \"__alignof\","}, {"sha": "62f231c4e03975e1f7e55e32abbe7eb54852434d", "filename": "gcc/java/parse.y", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd033052f96f8e4c62f981e6923371f0d58278ca/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=fd033052f96f8e4c62f981e6923371f0d58278ca", "patch": "@@ -2774,7 +2774,7 @@ static void\n java_parser_context_suspend ()\n {\n   /* This makes debugging through java_debug_context easier */\n-  static const char *name = \"<inner buffer context>\";\n+  static const char *const name = \"<inner buffer context>\";\n \n   /* Duplicate the previous context, use it to save the globals we're\n      interested in */\n@@ -13902,9 +13902,9 @@ merge_string_cste (op1, op2, after)\n   /* Reasonable integer constant can be treated right away */\n   if (TREE_CODE (op2) == INTEGER_CST && !TREE_CONSTANT_OVERFLOW (op2))\n     {\n-      static const char *boolean_true = \"true\";\n-      static const char *boolean_false = \"false\";\n-      static const char *null_pointer = \"null\";\n+      static const char *const boolean_true = \"true\";\n+      static const char *const boolean_false = \"false\";\n+      static const char *const null_pointer = \"null\";\n       char ch[3];\n       const char *string;\n       "}]}