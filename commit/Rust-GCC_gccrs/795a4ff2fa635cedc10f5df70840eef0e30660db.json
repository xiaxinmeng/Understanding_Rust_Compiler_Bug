{"sha": "795a4ff2fa635cedc10f5df70840eef0e30660db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk1YTRmZjJmYTYzNWNlZGMxMGY1ZGY3MDg0MGVlZjBlMzA2NjBkYg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2003-06-11T18:21:38Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2003-06-11T18:21:38Z"}, "message": "scalar-by-value-3_main.c: New file.\n\n\t* gcc.dg/compat/scalar-by-value-3_main.c: New file.\n\t* gcc.dg/compat/scalar-by-value-3_x.c: New file.\n\t* gcc.dg/compat/scalar-by-value-3_y.c: New file.\n\t* gcc.dg/compat/scalar-by-value-4_main.c: New file.\n\t* gcc.dg/compat/scalar-by-value-4_x.c: New file.\n\t* gcc.dg/compat/scalar-by-value-4_y.c: New file.\n\t* gcc.dg/compat/scalar-return-3_main.c: New file.\n\t* gcc.dg/compat/scalar-return-3_x.c: New file.\n\t* gcc.dg/compat/scalar-return-3_y.c: New file.\n\t* gcc.dg/compat/scalar-return-4_main.c: New file.\n\t* gcc.dg/compat/scalar-return-4_x.c: New file.\n\t* gcc.dg/compat/scalar-return-4_y.c: New file.\n\nFrom-SVN: r67789", "tree": {"sha": "3c1e9f143e073e4342cc59523d08f32d502cf75a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c1e9f143e073e4342cc59523d08f32d502cf75a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/795a4ff2fa635cedc10f5df70840eef0e30660db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/795a4ff2fa635cedc10f5df70840eef0e30660db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/795a4ff2fa635cedc10f5df70840eef0e30660db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/795a4ff2fa635cedc10f5df70840eef0e30660db/comments", "author": null, "committer": null, "parents": [{"sha": "e68b8bd0ffb3bf2e806c29b352554f124ff3349d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68b8bd0ffb3bf2e806c29b352554f124ff3349d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68b8bd0ffb3bf2e806c29b352554f124ff3349d"}], "stats": {"total": 776, "additions": 776, "deletions": 0}, "files": [{"sha": "f11e2fb72b0b9515fe099499f1c2765546f8236c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -1,3 +1,18 @@\n+2003-06-11  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* gcc.dg/compat/scalar-by-value-3_main.c: New file.\n+\t* gcc.dg/compat/scalar-by-value-3_x.c: New file.\n+\t* gcc.dg/compat/scalar-by-value-3_y.c: New file.\n+\t* gcc.dg/compat/scalar-by-value-4_main.c: New file.\n+\t* gcc.dg/compat/scalar-by-value-4_x.c: New file.\n+\t* gcc.dg/compat/scalar-by-value-4_y.c: New file.\n+\t* gcc.dg/compat/scalar-return-3_main.c: New file.\n+\t* gcc.dg/compat/scalar-return-3_x.c: New file.\n+\t* gcc.dg/compat/scalar-return-3_y.c: New file.\n+\t* gcc.dg/compat/scalar-return-4_main.c: New file.\n+\t* gcc.dg/compat/scalar-return-4_x.c: New file.\n+\t* gcc.dg/compat/scalar-return-4_y.c: New file.\n+\n 2003-06-10  Janis Johnson  <janis187@us.ibm.com>\n \n \t* gcc.dg/compat/fp2-struct-check.h: New file."}, {"sha": "307e6ccb67e4c80f6b3b1660b2e98afee104cada", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-3_main.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_main.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,14 @@\n+/* Test passing scalars by value.  This test includes _Complex types\n+   whose real and imaginary parts can be used in variable-length\n+   argument lists.  */\n+\n+extern void scalar_by_value_3_x (void);\n+extern void exit (int);\n+int fails;\n+\n+int\n+main ()\n+{\n+  scalar_by_value_3_x ();\n+  exit (0);\n+}"}, {"sha": "523210f8221d05758bfd0a353c9494b00ae163eb", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-3_x.c", "status": "added", "additions": 170, "deletions": 0, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_x.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,170 @@\n+#include \"compat-common.h\"\n+\n+#define T(NAME, TYPE, INITVAL) \t\t\t\t\t\\\n+TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n+TYPE g05##NAME, g06##NAME, g07##NAME, g08##NAME;\t\t\\\n+TYPE g09##NAME, g10##NAME, g11##NAME, g12##NAME;\t\t\\\n+TYPE g13##NAME, g14##NAME, g15##NAME, g16##NAME;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void init##NAME (TYPE *p, TYPE v);\t\t\t\\\n+extern void checkg##NAME (void);\t\t\t\t\\\n+extern void\t\t\t\t\t\t\t\\\n+test##NAME (TYPE x01, TYPE x02, TYPE x03, TYPE x04,\t\t\\\n+            TYPE x05, TYPE x06, TYPE x07, TYPE x08,\t\t\\\n+            TYPE x09, TYPE x10, TYPE x11, TYPE x12,\t\t\\\n+            TYPE x13, TYPE x14, TYPE x15, TYPE x16);\t\t\\\n+extern void testva##NAME (int n, ...);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+check##NAME (TYPE x, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (x != v + INITVAL)\t\t\t\t\t\t\\\n+    DEBUG_CHECK\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+test2_##NAME (TYPE x01, TYPE x02, TYPE x03, TYPE x04,\t\t\\\n+\t      TYPE x05, TYPE x06, TYPE x07, TYPE x08)\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  test##NAME (x01, g02##NAME, x02, g04##NAME,\t\t\t\\\n+\t      x03, g06##NAME, x04, g08##NAME,\t\t\t\\\n+\t      x05, g10##NAME, x06, g12##NAME,\t\t\t\\\n+\t      x07, g14##NAME, x08, g16##NAME);\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testit##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n+  init##NAME (&g01##NAME,  1);\t\t\t\t\t\\\n+  init##NAME (&g02##NAME,  2);\t\t\t\t\t\\\n+  init##NAME (&g03##NAME,  3);\t\t\t\t\t\\\n+  init##NAME (&g04##NAME,  4);\t\t\t\t\t\\\n+  init##NAME (&g05##NAME,  5);\t\t\t\t\t\\\n+  init##NAME (&g06##NAME,  6);\t\t\t\t\t\\\n+  init##NAME (&g07##NAME,  7);\t\t\t\t\t\\\n+  init##NAME (&g08##NAME,  8);\t\t\t\t\t\\\n+  init##NAME (&g09##NAME,  9);\t\t\t\t\t\\\n+  init##NAME (&g10##NAME, 10);\t\t\t\t\t\\\n+  init##NAME (&g11##NAME, 11);\t\t\t\t\t\\\n+  init##NAME (&g12##NAME, 12);\t\t\t\t\t\\\n+  init##NAME (&g13##NAME, 13);\t\t\t\t\t\\\n+  init##NAME (&g14##NAME, 14);\t\t\t\t\t\\\n+  init##NAME (&g15##NAME, 15);\t\t\t\t\t\\\n+  init##NAME (&g16##NAME, 16);\t\t\t\t\t\\\n+  checkg##NAME ();\t\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test: \");\t\t\t\t\t\\\n+  test##NAME (g01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t      g05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n+\t      g09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n+\t      g13##NAME, g14##NAME, g15##NAME, g16##NAME);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva:\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (1,\t\t\t\t\t\t\\\n+\t\tg01##NAME);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (2,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (3,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (4,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (5,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (6,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME, g06##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (7,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME, g06##NAME, g07##NAME);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (8,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (9,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n+\t\tg09##NAME);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (10,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n+\t\tg09##NAME, g10##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (11,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n+\t\tg09##NAME, g10##NAME, g11##NAME);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (12,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n+\t\tg09##NAME, g10##NAME, g11##NAME, g12##NAME);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (13,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n+\t\tg09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n+\t\tg13##NAME);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (14,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n+\t\tg09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n+\t\tg13##NAME, g14##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (15,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n+\t\tg09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n+\t\tg13##NAME, g14##NAME, g15##NAME);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##NAME (16,\t\t\t\t\t\t\\\n+\t\tg01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t\tg05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n+\t\tg09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n+\t\tg13##NAME, g14##NAME, g15##NAME, g16##NAME);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test2: \");\t\t\t\t\t\\\n+  test2_##NAME (g01##NAME, g03##NAME, g05##NAME, g07##NAME,\t\\\n+\t\tg09##NAME, g11##NAME, g13##NAME, g15##NAME);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+}\n+\n+T(ci, _Complex int, (2,3))\n+T(cl, _Complex long, (3,4))\n+T(cll, _Complex long long, (5,6))\n+T(cd, _Complex double, (7.0,8.0))\n+T(cld, _Complex long double, (8.0,9.0))\n+\n+#undef T\n+\n+void\n+scalar_by_value_3_x ()\n+{\n+#define T(NAME) testit##NAME ();\n+\n+T(ci)\n+T(cl)\n+T(cll)\n+T(cd)\n+T(cld)\n+\n+if (fails != 0)\n+  abort ();\n+\n+#undef T\n+}"}, {"sha": "35354c0f7b5a437947656b0f9aa606236ee0fc21", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-3_y.c", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-3_y.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,92 @@\n+#include <stdarg.h>\n+\n+#include \"compat-common.h\"\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#define T(NAME, TYPE, INITVAL)\t\t\t\t\t\\\n+extern TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n+extern TYPE g05##NAME, g06##NAME, g07##NAME, g08##NAME;\t\t\\\n+extern TYPE g09##NAME, g10##NAME, g11##NAME, g12##NAME;\t\t\\\n+extern TYPE g13##NAME, g14##NAME, g15##NAME, g16##NAME;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void check##NAME (TYPE x, TYPE v);\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+init##NAME (TYPE *p, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  *p = v + INITVAL;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+checkg##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##NAME (g01##NAME,  1);\t\t\t\t\t\\\n+  check##NAME (g02##NAME,  2);\t\t\t\t\t\\\n+  check##NAME (g03##NAME,  3);\t\t\t\t\t\\\n+  check##NAME (g04##NAME,  4);\t\t\t\t\t\\\n+  check##NAME (g05##NAME,  5);\t\t\t\t\t\\\n+  check##NAME (g06##NAME,  6);\t\t\t\t\t\\\n+  check##NAME (g07##NAME,  7);\t\t\t\t\t\\\n+  check##NAME (g08##NAME,  8);\t\t\t\t\t\\\n+  check##NAME (g09##NAME,  9);\t\t\t\t\t\\\n+  check##NAME (g10##NAME, 10);\t\t\t\t\t\\\n+  check##NAME (g11##NAME, 11);\t\t\t\t\t\\\n+  check##NAME (g12##NAME, 12);\t\t\t\t\t\\\n+  check##NAME (g13##NAME, 13);\t\t\t\t\t\\\n+  check##NAME (g14##NAME, 14);\t\t\t\t\t\\\n+  check##NAME (g15##NAME, 15);\t\t\t\t\t\\\n+  check##NAME (g16##NAME, 16);\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+test##NAME (TYPE x01, TYPE x02, TYPE x03, TYPE x04,\t\t\\\n+            TYPE x05, TYPE x06, TYPE x07, TYPE x08,\t\t\\\n+            TYPE x09, TYPE x10, TYPE x11, TYPE x12,\t\t\\\n+            TYPE x13, TYPE x14, TYPE x15, TYPE x16)\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##NAME (x01,  1);\t\t\t\t\t\\\n+  check##NAME (x02,  2);\t\t\t\t\t\\\n+  check##NAME (x03,  3);\t\t\t\t\t\\\n+  check##NAME (x04,  4);\t\t\t\t\t\\\n+  check##NAME (x05,  5);\t\t\t\t\t\\\n+  check##NAME (x06,  6);\t\t\t\t\t\\\n+  check##NAME (x07,  7);\t\t\t\t\t\\\n+  check##NAME (x08,  8);\t\t\t\t\t\\\n+  check##NAME (x09,  9);\t\t\t\t\t\\\n+  check##NAME (x10, 10);\t\t\t\t\t\\\n+  check##NAME (x11, 11);\t\t\t\t\t\\\n+  check##NAME (x12, 12);\t\t\t\t\t\\\n+  check##NAME (x13, 13);\t\t\t\t\t\\\n+  check##NAME (x14, 14);\t\t\t\t\t\\\n+  check##NAME (x15, 15);\t\t\t\t\t\\\n+  check##NAME (x16, 16);\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testva##NAME (int n, ...)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\t\\\n+  va_list ap;\t\t\t\t\t\t\t\\\n+  if (test_va)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      va_start (ap, n);\t\t\t\t\t\t\\\n+      for (i = 0; i < n; i++)\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  TYPE t = va_arg (ap, TYPE);\t\t\t\t\\\n+\t  check##NAME (t, i+1);\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      va_end (ap);\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}\n+\n+T(ci, _Complex int, (2,3))\n+T(cl, _Complex long, (3,4))\n+T(cll, _Complex long long, (5,6))\n+T(cd, _Complex double, (7.0,8.0))\n+T(cld, _Complex long double, (8.0,9.0))"}, {"sha": "8164b44283a0f8fee51c3898e49a7f538b37921b", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-4_main.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_main.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,14 @@\n+/* Test passing scalars by value.  This test includes _Complex types\n+   whose real and imaginary parts cannot be used in variable-length\n+   argument lists.  */\n+\n+extern void scalar_by_value_4_x (void);\n+extern void exit (int);\n+int fails;\n+\n+int\n+main ()\n+{\n+  scalar_by_value_4_x ();\n+  exit (0);\n+}"}, {"sha": "3b4c427c2ac0aa7e5de117e7e3677eb86de6c9cc", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-4_x.c", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_x.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,90 @@\n+#include \"compat-common.h\"\n+\n+#define T(NAME, TYPE, INITVAL) \t\t\t\t\t\\\n+TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n+TYPE g05##NAME, g06##NAME, g07##NAME, g08##NAME;\t\t\\\n+TYPE g09##NAME, g10##NAME, g11##NAME, g12##NAME;\t\t\\\n+TYPE g13##NAME, g14##NAME, g15##NAME, g16##NAME;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void init##NAME (TYPE *p, TYPE v);\t\t\t\\\n+extern void checkg##NAME (void);\t\t\t\t\\\n+extern void\t\t\t\t\t\t\t\\\n+test##NAME (TYPE x01, TYPE x02, TYPE x03, TYPE x04,\t\t\\\n+            TYPE x05, TYPE x06, TYPE x07, TYPE x08,\t\t\\\n+            TYPE x09, TYPE x10, TYPE x11, TYPE x12,\t\t\\\n+            TYPE x13, TYPE x14, TYPE x15, TYPE x16);\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+check##NAME (TYPE x, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (x != v + INITVAL)\t\t\t\t\t\t\\\n+    DEBUG_CHECK\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+test2_##NAME (TYPE x01, TYPE x02, TYPE x03, TYPE x04,\t\t\\\n+\t      TYPE x05, TYPE x06, TYPE x07, TYPE x08)\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  test##NAME (x01, g02##NAME, x02, g04##NAME,\t\t\t\\\n+\t      x03, g06##NAME, x04, g08##NAME,\t\t\t\\\n+\t      x05, g10##NAME, x06, g12##NAME,\t\t\t\\\n+\t      x07, g14##NAME, x08, g16##NAME);\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testit##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n+  init##NAME (&g01##NAME,  1);\t\t\t\t\t\\\n+  init##NAME (&g02##NAME,  2);\t\t\t\t\t\\\n+  init##NAME (&g03##NAME,  3);\t\t\t\t\t\\\n+  init##NAME (&g04##NAME,  4);\t\t\t\t\t\\\n+  init##NAME (&g05##NAME,  5);\t\t\t\t\t\\\n+  init##NAME (&g06##NAME,  6);\t\t\t\t\t\\\n+  init##NAME (&g07##NAME,  7);\t\t\t\t\t\\\n+  init##NAME (&g08##NAME,  8);\t\t\t\t\t\\\n+  init##NAME (&g09##NAME,  9);\t\t\t\t\t\\\n+  init##NAME (&g10##NAME, 10);\t\t\t\t\t\\\n+  init##NAME (&g11##NAME, 11);\t\t\t\t\t\\\n+  init##NAME (&g12##NAME, 12);\t\t\t\t\t\\\n+  init##NAME (&g13##NAME, 13);\t\t\t\t\t\\\n+  init##NAME (&g14##NAME, 14);\t\t\t\t\t\\\n+  init##NAME (&g15##NAME, 15);\t\t\t\t\t\\\n+  init##NAME (&g16##NAME, 16);\t\t\t\t\t\\\n+  checkg##NAME ();\t\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test: \");\t\t\t\t\t\\\n+  test##NAME (g01##NAME, g02##NAME, g03##NAME, g04##NAME,\t\\\n+\t      g05##NAME, g06##NAME, g07##NAME, g08##NAME,\t\\\n+\t      g09##NAME, g10##NAME, g11##NAME, g12##NAME,\t\\\n+\t      g13##NAME, g14##NAME, g15##NAME, g16##NAME);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test2: \");\t\t\t\t\t\\\n+  test2_##NAME (g01##NAME, g03##NAME, g05##NAME, g07##NAME,\t\\\n+\t\tg09##NAME, g11##NAME, g13##NAME, g15##NAME);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+}\n+\n+T(cc, _Complex char, (0,1))\n+T(cs, _Complex short, (1,2))\n+T(cf, _Complex float, (6.0,7.0))\n+\n+#undef T\n+\n+void\n+scalar_by_value_4_x ()\n+{\n+#define T(NAME) testit##NAME ();\n+\n+T(cc)\n+T(cs)\n+T(cf)\n+\n+if (fails != 0)\n+  abort ();\n+\n+#undef T\n+}"}, {"sha": "fdf5b24e5ba6f0928e3a4ed3922777ce00414862", "filename": "gcc/testsuite/gcc.dg/compat/scalar-by-value-4_y.c", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-by-value-4_y.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,73 @@\n+#include <stdarg.h>\n+\n+#include \"compat-common.h\"\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#define T(NAME, TYPE, INITVAL)\t\t\t\t\t\\\n+extern TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n+extern TYPE g05##NAME, g06##NAME, g07##NAME, g08##NAME;\t\t\\\n+extern TYPE g09##NAME, g10##NAME, g11##NAME, g12##NAME;\t\t\\\n+extern TYPE g13##NAME, g14##NAME, g15##NAME, g16##NAME;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void check##NAME (TYPE x, TYPE v);\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+init##NAME (TYPE *p, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  *p = v + INITVAL;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+checkg##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##NAME (g01##NAME,  1);\t\t\t\t\t\\\n+  check##NAME (g02##NAME,  2);\t\t\t\t\t\\\n+  check##NAME (g03##NAME,  3);\t\t\t\t\t\\\n+  check##NAME (g04##NAME,  4);\t\t\t\t\t\\\n+  check##NAME (g05##NAME,  5);\t\t\t\t\t\\\n+  check##NAME (g06##NAME,  6);\t\t\t\t\t\\\n+  check##NAME (g07##NAME,  7);\t\t\t\t\t\\\n+  check##NAME (g08##NAME,  8);\t\t\t\t\t\\\n+  check##NAME (g09##NAME,  9);\t\t\t\t\t\\\n+  check##NAME (g10##NAME, 10);\t\t\t\t\t\\\n+  check##NAME (g11##NAME, 11);\t\t\t\t\t\\\n+  check##NAME (g12##NAME, 12);\t\t\t\t\t\\\n+  check##NAME (g13##NAME, 13);\t\t\t\t\t\\\n+  check##NAME (g14##NAME, 14);\t\t\t\t\t\\\n+  check##NAME (g15##NAME, 15);\t\t\t\t\t\\\n+  check##NAME (g16##NAME, 16);\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+test##NAME (TYPE x01, TYPE x02, TYPE x03, TYPE x04,\t\t\\\n+            TYPE x05, TYPE x06, TYPE x07, TYPE x08,\t\t\\\n+            TYPE x09, TYPE x10, TYPE x11, TYPE x12,\t\t\\\n+            TYPE x13, TYPE x14, TYPE x15, TYPE x16)\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##NAME (x01,  1);\t\t\t\t\t\\\n+  check##NAME (x02,  2);\t\t\t\t\t\\\n+  check##NAME (x03,  3);\t\t\t\t\t\\\n+  check##NAME (x04,  4);\t\t\t\t\t\\\n+  check##NAME (x05,  5);\t\t\t\t\t\\\n+  check##NAME (x06,  6);\t\t\t\t\t\\\n+  check##NAME (x07,  7);\t\t\t\t\t\\\n+  check##NAME (x08,  8);\t\t\t\t\t\\\n+  check##NAME (x09,  9);\t\t\t\t\t\\\n+  check##NAME (x10, 10);\t\t\t\t\t\\\n+  check##NAME (x11, 11);\t\t\t\t\t\\\n+  check##NAME (x12, 12);\t\t\t\t\t\\\n+  check##NAME (x13, 13);\t\t\t\t\t\\\n+  check##NAME (x14, 14);\t\t\t\t\t\\\n+  check##NAME (x15, 15);\t\t\t\t\t\\\n+  check##NAME (x16, 16);\t\t\t\t\t\\\n+}\n+\n+T(cc, _Complex char, (0,1))\n+T(cs, _Complex short, (1,2))\n+T(cf, _Complex float, (6.0,7.0))"}, {"sha": "8f2738be6a242f20befd54c33d9e655dae33ec1b", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-3_main.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_main.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,14 @@\n+/* Test function return values.  This test includes _Complex types\n+   whose real and imaginary parts can be used in variable-length\n+   argument lists.  */\n+\n+extern void scalar_return_3_x (void);\n+extern void exit (int);\n+int fails;\n+\n+int\n+main ()\n+{\n+  scalar_return_3_x ();\n+  exit (0);\n+}"}, {"sha": "5cf84faa04b044bfd8d2b8c1b990e2d6bf3bb73d", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-3_x.c", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_x.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,110 @@\n+#include \"compat-common.h\"\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#define T(NAME, TYPE, INITVAL) \t\t\t\t\t\\\n+TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n+TYPE g05##NAME, g06##NAME, g07##NAME, g08##NAME;\t\t\\\n+TYPE g09##NAME, g10##NAME, g11##NAME, g12##NAME;\t\t\\\n+TYPE g13##NAME, g14##NAME, g15##NAME, g16##NAME;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void init##NAME (TYPE *p, TYPE v);\t\t\t\\\n+extern void checkg##NAME (void);\t\t\t\t\\\n+extern TYPE test0##NAME (void);\t\t\t\t\t\\\n+extern TYPE test1##NAME (TYPE);\t\t\t\t\t\\\n+extern TYPE testva##NAME (int n, ...);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+check##NAME (TYPE x, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (x != v)\t\t\t\t\t\t\t\\\n+    DEBUG_CHECK\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testit##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  TYPE rslt;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n+  init##NAME (&g01##NAME,  1);\t\t\t\t\t\\\n+  init##NAME (&g02##NAME,  2);\t\t\t\t\t\\\n+  init##NAME (&g03##NAME,  3);\t\t\t\t\t\\\n+  init##NAME (&g04##NAME,  4);\t\t\t\t\t\\\n+  init##NAME (&g05##NAME,  5);\t\t\t\t\t\\\n+  init##NAME (&g06##NAME,  6);\t\t\t\t\t\\\n+  init##NAME (&g07##NAME,  7);\t\t\t\t\t\\\n+  init##NAME (&g08##NAME,  8);\t\t\t\t\t\\\n+  init##NAME (&g09##NAME,  9);\t\t\t\t\t\\\n+  init##NAME (&g10##NAME, 10);\t\t\t\t\t\\\n+  init##NAME (&g11##NAME, 11);\t\t\t\t\t\\\n+  init##NAME (&g12##NAME, 12);\t\t\t\t\t\\\n+  init##NAME (&g13##NAME, 13);\t\t\t\t\t\\\n+  init##NAME (&g14##NAME, 14);\t\t\t\t\t\\\n+  init##NAME (&g15##NAME, 15);\t\t\t\t\t\\\n+  init##NAME (&g16##NAME, 16);\t\t\t\t\t\\\n+  checkg##NAME ();\t\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test0: \");\t\t\t\t\t\\\n+  rslt = test0##NAME ();\t\t\t\t\t\\\n+  check##NAME (rslt, g01##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test1: \");\t\t\t\t\t\\\n+  rslt = test1##NAME (g01##NAME);\t\t\t\t\\\n+  check##NAME (rslt, g01##NAME);\t\t\t\t\\\n+  if (test_va)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      DEBUG_NL;\t\t\t\t\t\t\t\\\n+      DEBUG_FPUTS (#NAME);\t\t\t\t\t\\\n+      DEBUG_FPUTS (\" testva: \");\t\t\t\t\\\n+      rslt = testva##NAME (1, g01##NAME);\t\t\t\\\n+      check##NAME (rslt, g01##NAME);\t\t\t\t\\\n+      rslt = testva##NAME (5, g01##NAME, g02##NAME, g03##NAME,\t\\\n+\t\t\t   g04##NAME, g05##NAME);\t\t\\\n+      check##NAME (rslt, g05##NAME);\t\t\t\t\\\n+      rslt = testva##NAME (9, g01##NAME, g02##NAME, g03##NAME,\t\\\n+\t\t\t   g04##NAME, g05##NAME, g06##NAME,\t\\\n+\t\t\t   g07##NAME, g08##NAME, g09##NAME);\t\\\n+      check##NAME (rslt, g09##NAME);\t\t\t\t\\\n+      rslt = testva##NAME (16, g01##NAME, g02##NAME, g03##NAME,\t\\\n+\t\t\t   g04##NAME, g05##NAME, g06##NAME,\t\\\n+\t\t\t   g07##NAME, g08##NAME, g09##NAME,\t\\\n+\t\t\t   g10##NAME, g11##NAME, g12##NAME,\t\\\n+\t\t\t   g13##NAME, g14##NAME, g15##NAME,\t\\\n+\t\t\t   g16##NAME);\t\t\t\t\\\n+      check##NAME (rslt, g16##NAME);\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+}\n+\n+T(ci, _Complex int, (2,3))\n+T(cl, _Complex long, (3,4))\n+T(cll, _Complex long long, (4,5))\n+T(cd, _Complex double, (2.0,3.0))\n+T(cld, _Complex long double, (3.0,4.0))\n+\n+#undef T\n+\n+void\n+scalar_return_3_x ()\n+{\n+#define T(NAME) testit##NAME ();\n+\n+T(ci)\n+T(cl)\n+T(cll)\n+T(cd)\n+T(cld)\n+\n+if (fails != 0)\n+  abort ();\n+\n+#undef T\n+}"}, {"sha": "564866dd2236dc3cd7508d786f601db7329f9709", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-3_y.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-3_y.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,69 @@\n+#include <stdarg.h>\n+\n+#include \"compat-common.h\"\n+\n+#define T(NAME, TYPE, INITVAL)\t\t\t\t\t\\\n+extern TYPE g01##NAME, g02##NAME, g03##NAME, g04##NAME;\t\t\\\n+extern TYPE g05##NAME, g06##NAME, g07##NAME, g08##NAME;\t\t\\\n+extern TYPE g09##NAME, g10##NAME, g11##NAME, g12##NAME;\t\t\\\n+extern TYPE g13##NAME, g14##NAME, g15##NAME, g16##NAME;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void check##NAME (TYPE x, TYPE v);\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+init##NAME (TYPE *p, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  *p = v + INITVAL;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+checkg##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##NAME (g01##NAME,  1+INITVAL);\t\t\t\t\\\n+  check##NAME (g02##NAME,  2+INITVAL);\t\t\t\t\\\n+  check##NAME (g03##NAME,  3+INITVAL);\t\t\t\t\\\n+  check##NAME (g04##NAME,  4+INITVAL);\t\t\t\t\\\n+  check##NAME (g05##NAME,  5+INITVAL);\t\t\t\t\\\n+  check##NAME (g06##NAME,  6+INITVAL);\t\t\t\t\\\n+  check##NAME (g07##NAME,  7+INITVAL);\t\t\t\t\\\n+  check##NAME (g08##NAME,  8+INITVAL);\t\t\t\t\\\n+  check##NAME (g09##NAME,  9+INITVAL);\t\t\t\t\\\n+  check##NAME (g10##NAME, 10+INITVAL);\t\t\t\t\\\n+  check##NAME (g11##NAME, 11+INITVAL);\t\t\t\t\\\n+  check##NAME (g12##NAME, 12+INITVAL);\t\t\t\t\\\n+  check##NAME (g13##NAME, 13+INITVAL);\t\t\t\t\\\n+  check##NAME (g14##NAME, 14+INITVAL);\t\t\t\t\\\n+  check##NAME (g15##NAME, 15+INITVAL);\t\t\t\t\\\n+  check##NAME (g16##NAME, 16+INITVAL);\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test0##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return g01##NAME;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test1##NAME (TYPE x01)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return x01;\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+testva##NAME (int n, ...)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\t\\\n+  TYPE rslt;\t\t\t\t\t\t\t\\\n+  va_list ap;\t\t\t\t\t\t\t\\\n+  va_start (ap, n);\t\t\t\t\t\t\\\n+  for (i = 0; i < n; i++)\t\t\t\t\t\\\n+    rslt = va_arg (ap, TYPE);\t\t\t\t\t\\\n+  va_end (ap);\t\t\t\t\t\t\t\\\n+  return rslt;\t\t\t\t\t\t\t\\\n+}\n+\n+T(ci, _Complex int, (2,3))\n+T(cl, _Complex long, (3,4))\n+T(cll, _Complex long long, (4,5))\n+T(cd, _Complex double, (2.0,3.0))\n+T(cld, _Complex long double, (3.0,4.0))"}, {"sha": "2bcfa04872f5c659987eac752037eb3b6488d576", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-4_main.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_main.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,14 @@\n+/* Test function return values.  This test includes _Complex types\n+   whose real and imaginary parts cannot be used in variable-length\n+   argument lists.  */\n+\n+extern void scalar_return_4_x (void);\n+extern void exit (int);\n+int fails;\n+\n+int\n+main ()\n+{\n+  scalar_return_4_x ();\n+  exit (0);\n+}"}, {"sha": "cb413e62d4cab7c294d297deb05e9750ded47523", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-4_x.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_x.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,58 @@\n+#include \"compat-common.h\"\n+\n+#define T(NAME, TYPE, INITVAL) \t\t\t\t\t\\\n+TYPE g01##NAME;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void init##NAME (TYPE *p, TYPE v);\t\t\t\\\n+extern void checkg##NAME (void);\t\t\t\t\\\n+extern TYPE test0##NAME (void);\t\t\t\t\t\\\n+extern TYPE test1##NAME (TYPE);\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+check##NAME (TYPE x, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (x != v)\t\t\t\t\t\t\t\\\n+    DEBUG_CHECK\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testit##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  TYPE rslt;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n+  init##NAME (&g01##NAME,  1);\t\t\t\t\t\\\n+  checkg##NAME ();\t\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test0: \");\t\t\t\t\t\\\n+  rslt = test0##NAME ();\t\t\t\t\t\\\n+  check##NAME (rslt, g01##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#NAME);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test1: \");\t\t\t\t\t\\\n+  rslt = test1##NAME (g01##NAME);\t\t\t\t\\\n+  check##NAME (rslt, g01##NAME);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+}\n+\n+T(cc, _Complex char, (0,1))\n+T(cs, _Complex short, (1,2))\n+T(cf, _Complex float, (1.0,2.0))\n+\n+#undef T\n+\n+void\n+scalar_return_4_x ()\n+{\n+#define T(NAME) testit##NAME ();\n+\n+T(cc)\n+T(cs)\n+T(cf)\n+\n+if (fails != 0)\n+  abort ();\n+\n+#undef T\n+}"}, {"sha": "5ac68b5cc0fdb0189744bbef1b99d104217f0b07", "filename": "gcc/testsuite/gcc.dg/compat/scalar-return-4_y.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/795a4ff2fa635cedc10f5df70840eef0e30660db/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fscalar-return-4_y.c?ref=795a4ff2fa635cedc10f5df70840eef0e30660db", "patch": "@@ -0,0 +1,43 @@\n+#include <stdarg.h>\n+\n+#include \"compat-common.h\"\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#define T(NAME, TYPE, INITVAL)\t\t\t\t\t\\\n+extern TYPE g01##NAME;\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void check##NAME (TYPE x, TYPE v);\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+init##NAME (TYPE *p, TYPE v)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  *p = v + INITVAL;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+checkg##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##NAME (g01##NAME,  1+INITVAL);\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test0##NAME (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return g01##NAME;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test1##NAME (TYPE x01)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return x01;\t\t\t\t\t\t\t\\\n+}\n+\n+T(cc, _Complex char, (0,1))\n+T(cs, _Complex short, (1,2))\n+T(cf, _Complex float, (1.0,2.0))"}]}