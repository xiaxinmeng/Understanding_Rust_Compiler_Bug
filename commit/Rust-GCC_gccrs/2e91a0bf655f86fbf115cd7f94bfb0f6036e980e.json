{"sha": "2e91a0bf655f86fbf115cd7f94bfb0f6036e980e", "node_id": "C_kwDOANBUbNoAKDJlOTFhMGJmNjU1Zjg2ZmJmMTE1Y2Q3Zjk0YmZiMGY2MDM2ZTk4MGU", "commit": {"author": {"name": "Owen Avery", "email": "powerboat9.gamer@gmail.com", "date": "2023-04-26T13:29:04Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-05-04T09:07:52Z"}, "message": "Handle replacing stripped tail expressions\n\ngcc/rust/ChangeLog:\n\n\t* ast/rust-ast.cc\n\t(BlockExpr::strip_tail_expr):\n\tTry to take new tail expression from statements list.\n\t* ast/rust-expr.h\n\t(BlockExpr::strip_tail_expr):\n\tReplace definition with only declaration.\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/execute/torture/cfg-tail.rs: New test.\n\nSigned-off-by: Owen Avery <powerboat9.gamer@gmail.com>", "tree": {"sha": "77f3d68a5209ce9a4f6336e68e5cceaa59879045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77f3d68a5209ce9a4f6336e68e5cceaa59879045"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e91a0bf655f86fbf115cd7f94bfb0f6036e980e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e91a0bf655f86fbf115cd7f94bfb0f6036e980e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e91a0bf655f86fbf115cd7f94bfb0f6036e980e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e91a0bf655f86fbf115cd7f94bfb0f6036e980e/comments", "author": {"login": "powerboat9", "id": 7397652, "node_id": "MDQ6VXNlcjczOTc2NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/7397652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powerboat9", "html_url": "https://github.com/powerboat9", "followers_url": "https://api.github.com/users/powerboat9/followers", "following_url": "https://api.github.com/users/powerboat9/following{/other_user}", "gists_url": "https://api.github.com/users/powerboat9/gists{/gist_id}", "starred_url": "https://api.github.com/users/powerboat9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powerboat9/subscriptions", "organizations_url": "https://api.github.com/users/powerboat9/orgs", "repos_url": "https://api.github.com/users/powerboat9/repos", "events_url": "https://api.github.com/users/powerboat9/events{/privacy}", "received_events_url": "https://api.github.com/users/powerboat9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d294dde0d2998868ac6427b6b01506562562a3ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d294dde0d2998868ac6427b6b01506562562a3ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d294dde0d2998868ac6427b6b01506562562a3ae"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "688062178e80eb4354ea5bc2ebcae656d2229b91", "filename": "gcc/rust/ast/rust-ast.cc", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e91a0bf655f86fbf115cd7f94bfb0f6036e980e/gcc%2Frust%2Fast%2Frust-ast.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e91a0bf655f86fbf115cd7f94bfb0f6036e980e/gcc%2Frust%2Fast%2Frust-ast.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast.cc?ref=2e91a0bf655f86fbf115cd7f94bfb0f6036e980e", "patch": "@@ -4213,6 +4213,31 @@ Attribute::is_parsed_to_meta_item () const\n   return has_attr_input () && attr_input->is_meta_item ();\n }\n \n+void\n+BlockExpr::strip_tail_expr ()\n+{\n+  if (expr)\n+    {\n+      expr = nullptr;\n+\n+      // HACK: try to turn the last statement into a tail expression\n+      if (statements.size () && statements.back ()->is_expr ())\n+\t{\n+\t  auto &stmt = static_cast<ExprStmt &> (*statements.back ());\n+\n+\t  if (stmt.get_type () == ExprStmt::ExprStmtType::WITH_BLOCK)\n+\t    {\n+\t      auto &stmt_block = static_cast<ExprStmtWithBlock &> (stmt);\n+\t      if (!stmt_block.is_semicolon_followed ())\n+\t\t{\n+\t\t  expr = std::move (stmt_block.get_expr ());\n+\t\t  statements.pop_back ();\n+\t\t}\n+\t    }\n+\t}\n+    }\n+}\n+\n /* Visitor implementations - these are short but inlining can't happen anyway\n  * due to virtual functions and I didn't want to make the ast header includes\n  * any longer than they already are. */"}, {"sha": "c43baf3cadec3f749b5c71becbf9328b31a94b94", "filename": "gcc/rust/ast/rust-expr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e91a0bf655f86fbf115cd7f94bfb0f6036e980e/gcc%2Frust%2Fast%2Frust-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e91a0bf655f86fbf115cd7f94bfb0f6036e980e/gcc%2Frust%2Fast%2Frust-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-expr.h?ref=2e91a0bf655f86fbf115cd7f94bfb0f6036e980e", "patch": "@@ -2446,7 +2446,7 @@ class BlockExpr : public ExprWithBlock\n   }\n \n   // Removes the tail expression from the block.\n-  void strip_tail_expr () { expr = nullptr; }\n+  void strip_tail_expr ();\n \n   const std::vector<Attribute> &get_outer_attrs () const { return outer_attrs; }\n   std::vector<Attribute> &get_outer_attrs () override { return outer_attrs; }"}, {"sha": "69411a6cdbccd45140de1f25a96c63170a2f63c9", "filename": "gcc/testsuite/rust/execute/torture/cfg-tail.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e91a0bf655f86fbf115cd7f94bfb0f6036e980e/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fcfg-tail.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e91a0bf655f86fbf115cd7f94bfb0f6036e980e/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fcfg-tail.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fcfg-tail.rs?ref=2e91a0bf655f86fbf115cd7f94bfb0f6036e980e", "patch": "@@ -0,0 +1,9 @@\n+fn foo() -> i32 {\n+    {54}\n+    #[cfg(all(A, not(A)))]\n+    {45}\n+}\n+\n+fn main() -> i32 {\n+    return foo() - 54;\n+}"}]}