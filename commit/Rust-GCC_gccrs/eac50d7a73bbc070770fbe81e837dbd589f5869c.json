{"sha": "eac50d7a73bbc070770fbe81e837dbd589f5869c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFjNTBkN2E3M2JiYzA3MDc3MGZiZTgxZTgzN2RiZDU4OWY1ODY5Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2001-11-23T11:21:07Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2001-11-23T11:21:07Z"}, "message": "final.c (output_addr_const): Output PC as '.' even if !flag_pic.\n\n\t* final.c (output_addr_const): Output PC as '.' even if !flag_pic.\n\t* varasm.c (output_constructor): Use assemble_integer rather\n\tthan ASM_OUTPUT_BYTE.\n\nFrom-SVN: r47287", "tree": {"sha": "96af688c8ee0ddf755c506574feb4c6c27885b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96af688c8ee0ddf755c506574feb4c6c27885b70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eac50d7a73bbc070770fbe81e837dbd589f5869c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eac50d7a73bbc070770fbe81e837dbd589f5869c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eac50d7a73bbc070770fbe81e837dbd589f5869c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eac50d7a73bbc070770fbe81e837dbd589f5869c/comments", "author": null, "committer": null, "parents": [{"sha": "e1e7d56bf1be024a7c5b08f98d5ea524cc5ad64f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e7d56bf1be024a7c5b08f98d5ea524cc5ad64f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1e7d56bf1be024a7c5b08f98d5ea524cc5ad64f"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "54e153dee00ca3b4df64432c0d12dfe0503f29c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac50d7a73bbc070770fbe81e837dbd589f5869c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac50d7a73bbc070770fbe81e837dbd589f5869c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eac50d7a73bbc070770fbe81e837dbd589f5869c", "patch": "@@ -1,3 +1,9 @@\n+2001-11-23  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* final.c (output_addr_const): Output PC as '.' even if !flag_pic.\n+\t* varasm.c (output_constructor): Use assemble_integer rather\n+\tthan ASM_OUTPUT_BYTE.\n+\n 2001-11-23  Andreas Jaeger  <aj@suse.de>\n \n \t* cpplex.c (cpp_interpret_charconst): Use HOST_WIDE_INT for sign"}, {"sha": "761bd7142ad0efbf28d794b0c08702bfc145aefb", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac50d7a73bbc070770fbe81e837dbd589f5869c/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac50d7a73bbc070770fbe81e837dbd589f5869c/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=eac50d7a73bbc070770fbe81e837dbd589f5869c", "patch": "@@ -3658,10 +3658,7 @@ output_addr_const (file, x)\n   switch (GET_CODE (x))\n     {\n     case PC:\n-      if (flag_pic)\n-\tputc ('.', file);\n-      else\n-\tabort ();\n+      putc ('.', file);\n       break;\n \n     case SYMBOL_REF:"}, {"sha": "c241745054bc01fb3662fd05cab7a8dfd4676789", "filename": "gcc/varasm.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac50d7a73bbc070770fbe81e837dbd589f5869c/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac50d7a73bbc070770fbe81e837dbd589f5869c/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=eac50d7a73bbc070770fbe81e837dbd589f5869c", "patch": "@@ -4724,7 +4724,7 @@ output_constructor (exp, size, align)\n \t  /* Output any buffered-up bit-fields preceding this element.  */\n \t  if (byte_buffer_in_use)\n \t    {\n-\t      ASM_OUTPUT_BYTE (asm_out_file, byte);\n+\t      assemble_integer (GEN_INT (byte), 1, BITS_PER_UNIT, 1);\n \t      total_bytes++;\n \t      byte_buffer_in_use = 0;\n \t    }\n@@ -4802,7 +4802,7 @@ output_constructor (exp, size, align)\n \t      /* Output remnant of any bit field in previous bytes.  */\n \t      if (byte_buffer_in_use)\n \t\t{\n-\t\t  ASM_OUTPUT_BYTE (asm_out_file, byte);\n+\t\t  assemble_integer (GEN_INT (byte), 1, BITS_PER_UNIT, 1);\n \t\t  total_bytes++;\n \t\t  byte_buffer_in_use = 0;\n \t\t}\n@@ -4838,7 +4838,7 @@ output_constructor (exp, size, align)\n \t\t within this element when necessary.  */\n \t      while (next_byte != total_bytes)\n \t\t{\n-\t\t  ASM_OUTPUT_BYTE (asm_out_file, byte);\n+\t\t  assemble_integer (GEN_INT (byte), 1, BITS_PER_UNIT, 1);\n \t\t  total_bytes++;\n \t\t  byte = 0;\n \t\t}\n@@ -4924,7 +4924,7 @@ output_constructor (exp, size, align)\n \n   if (byte_buffer_in_use)\n     {\n-      ASM_OUTPUT_BYTE (asm_out_file, byte);\n+      assemble_integer (GEN_INT (byte), 1, BITS_PER_UNIT, 1);\n       total_bytes++;\n     }\n "}]}