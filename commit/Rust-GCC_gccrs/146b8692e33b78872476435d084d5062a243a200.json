{"sha": "146b8692e33b78872476435d084d5062a243a200", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ2Yjg2OTJlMzNiNzg4NzI0NzY0MzVkMDg0ZDUwNjJhMjQzYTIwMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-04-11T07:30:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-04-11T07:30:20Z"}, "message": "re PR tree-optimization/56899 (Wrong constant folding)\n\n\tPR tree-optimization/56899\n\t* fold-const.c (extract_muldiv_1): Apply distributive law\n\tonly if TYPE_OVERFLOW_WRAPS (ctype).\n\n\t* gcc.c-torture/execute/pr56899.c: New test.\n\nFrom-SVN: r197692", "tree": {"sha": "cfb012f8c9037ad4b63ec4f3e82cbc88f9a21773", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfb012f8c9037ad4b63ec4f3e82cbc88f9a21773"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/146b8692e33b78872476435d084d5062a243a200", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/146b8692e33b78872476435d084d5062a243a200", "html_url": "https://github.com/Rust-GCC/gccrs/commit/146b8692e33b78872476435d084d5062a243a200", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/146b8692e33b78872476435d084d5062a243a200/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8578ff77f8ea4d23fa5edc2805e1f3625b46c14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8578ff77f8ea4d23fa5edc2805e1f3625b46c14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8578ff77f8ea4d23fa5edc2805e1f3625b46c14"}], "stats": {"total": 64, "additions": 62, "deletions": 2}, "files": [{"sha": "bab67ab7b01ff9b8232312569085d6ef640e35b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146b8692e33b78872476435d084d5062a243a200/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146b8692e33b78872476435d084d5062a243a200/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=146b8692e33b78872476435d084d5062a243a200", "patch": "@@ -1,3 +1,9 @@\n+2013-04-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56899\n+\t* fold-const.c (extract_muldiv_1): Apply distributive law\n+\tonly if TYPE_OVERFLOW_WRAPS (ctype).\n+\n 2013-04-11  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR target/56124"}, {"sha": "467b6d6561959978a7b4a3f2c765e3917e80fd28", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146b8692e33b78872476435d084d5062a243a200/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146b8692e33b78872476435d084d5062a243a200/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=146b8692e33b78872476435d084d5062a243a200", "patch": "@@ -5850,8 +5850,10 @@ extract_muldiv_1 (tree t, tree c, enum tree_code code, tree wide_type,\n \n       /* The last case is if we are a multiply.  In that case, we can\n \t apply the distributive law to commute the multiply and addition\n-\t if the multiplication of the constants doesn't overflow.  */\n-      if (code == MULT_EXPR)\n+\t if the multiplication of the constants doesn't overflow\n+\t and overflow is defined.  With undefined overflow\n+\t op0 * c might overflow, while (op0 + orig_op1) * c doesn't.  */\n+      if (code == MULT_EXPR && TYPE_OVERFLOW_WRAPS (ctype))\n \treturn fold_build2 (tcode, ctype,\n \t\t\t    fold_build2 (code, ctype,\n \t\t\t\t\t fold_convert (ctype, op0),"}, {"sha": "62557021bba8be0acf7a62ee9384863870dc5f77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146b8692e33b78872476435d084d5062a243a200/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146b8692e33b78872476435d084d5062a243a200/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=146b8692e33b78872476435d084d5062a243a200", "patch": "@@ -1,3 +1,8 @@\n+2013-04-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56899\n+\t* gcc.c-torture/execute/pr56899.c: New test.\n+\n 2013-04-10  David S. Miller  <davem@davemloft.net>\n \n \t* gcc.target/sparc/setcc-4.c: New test."}, {"sha": "9adf9af00ff9c6b9b412f37638d6fd4477d465c6", "filename": "gcc/testsuite/gcc.c-torture/execute/pr56899.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/146b8692e33b78872476435d084d5062a243a200/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr56899.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/146b8692e33b78872476435d084d5062a243a200/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr56899.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr56899.c?ref=146b8692e33b78872476435d084d5062a243a200", "patch": "@@ -0,0 +1,47 @@\n+/* PR tree-optimization/56899 */\n+\n+#if __SIZEOF_INT__ == 4 && __CHAR_BIT__ == 8\n+__attribute__((noinline, noclone)) void\n+f1 (int v)\n+{\n+  int x = -214748365 * (v - 1);\n+  if (x != -1932735285)\n+    __builtin_abort ();\n+}\n+\n+__attribute__((noinline, noclone)) void\n+f2 (int v)\n+{\n+  int x = 214748365 * (v + 1);\n+  if (x != -1932735285)\n+    __builtin_abort ();\n+}\n+\n+__attribute__((noinline, noclone)) void\n+f3 (unsigned int v)\n+{\n+  unsigned int x = -214748365U * (v - 1);\n+  if (x != -1932735285U)\n+    __builtin_abort ();\n+}\n+\n+__attribute__((noinline, noclone)) void\n+f4 (unsigned int v)\n+{\n+  unsigned int x = 214748365U * (v + 1);\n+  if (x != -1932735285U)\n+    __builtin_abort ();\n+}\n+#endif\n+\n+int\n+main ()\n+{\n+#if __SIZEOF_INT__ == 4 && __CHAR_BIT__ == 8\n+  f1 (10);\n+  f2 (-10);\n+  f3 (10);\n+  f4 (-10U);\n+#endif\n+  return 0;\n+}"}]}