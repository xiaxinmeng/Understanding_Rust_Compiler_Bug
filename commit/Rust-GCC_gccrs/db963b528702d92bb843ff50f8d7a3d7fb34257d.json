{"sha": "db963b528702d92bb843ff50f8d7a3d7fb34257d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI5NjNiNTI4NzAyZDkyYmI4NDNmZjUwZjhkN2EzZDdmYjM0MjU3ZA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2011-01-25T14:51:23Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2011-01-25T14:51:23Z"}, "message": "Fix PR47271: only if-convert full writes.\n\n2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n\t    Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/47271\n\t* tree-if-conv.c (bb_postdominates_preds): New.\n\t(if_convertible_bb_p): Call bb_postdominates_preds.\n\t(if_convertible_loop_p_1): Compute CDI_POST_DOMINATORS.\n\t(predicate_scalar_phi): Call bb_postdominates_preds.\n\n\t* gcc.dg/tree-ssa/ifc-pr47271.c: New.\n\nCo-Authored-By: Jakub Jelinek <jakub@redhat.com>\n\nFrom-SVN: r169233", "tree": {"sha": "a0d39d42e2fe0300dd15f8f54888f83ac348c280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0d39d42e2fe0300dd15f8f54888f83ac348c280"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db963b528702d92bb843ff50f8d7a3d7fb34257d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db963b528702d92bb843ff50f8d7a3d7fb34257d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db963b528702d92bb843ff50f8d7a3d7fb34257d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db963b528702d92bb843ff50f8d7a3d7fb34257d/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcddd3b99ca8aecbe9fe7afbf53548f9adc1498c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcddd3b99ca8aecbe9fe7afbf53548f9adc1498c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcddd3b99ca8aecbe9fe7afbf53548f9adc1498c"}], "stats": {"total": 87, "additions": 87, "deletions": 0}, "files": [{"sha": "ac512392e798fa4bab3333fba5d3ba8256c4ec78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db963b528702d92bb843ff50f8d7a3d7fb34257d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db963b528702d92bb843ff50f8d7a3d7fb34257d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db963b528702d92bb843ff50f8d7a3d7fb34257d", "patch": "@@ -1,3 +1,12 @@\n+2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/47271\n+\t* tree-if-conv.c (bb_postdominates_preds): New.\n+\t(if_convertible_bb_p): Call bb_postdominates_preds.\n+\t(if_convertible_loop_p_1): Compute CDI_POST_DOMINATORS.\n+\t(predicate_scalar_phi): Call bb_postdominates_preds.\n+\n 2011-01-25  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rx/rx.h (LIBCALL_VALUE): Do not promote complex types."}, {"sha": "7b5efca3b62fe6bf8878683d763afb97c5b977b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db963b528702d92bb843ff50f8d7a3d7fb34257d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db963b528702d92bb843ff50f8d7a3d7fb34257d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=db963b528702d92bb843ff50f8d7a3d7fb34257d", "patch": "@@ -1,3 +1,9 @@\n+2011-01-25  Sebastian Pop  <sebastian.pop@amd.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/47271\n+\t* gcc.dg/tree-ssa/ifc-pr47271.c: New.\n+\n 2011-01-25  Nick Clifton  <nickc@redhat.com>\n \n \t* gcc.target/rx/builtins.c: Allow -fipa-cp-clone."}, {"sha": "bf3607946918682b1e4398b8a654d5e43929ddbe", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ifc-pr47271.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db963b528702d92bb843ff50f8d7a3d7fb34257d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-pr47271.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db963b528702d92bb843ff50f8d7a3d7fb34257d/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-pr47271.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fifc-pr47271.c?ref=db963b528702d92bb843ff50f8d7a3d7fb34257d", "patch": "@@ -0,0 +1,49 @@\n+/* { dg-options \"-O3\" } */\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+void func (void)\n+{\n+  int i;\n+  int nops;\n+  char *codestr =\n+    \"|\\000\\000Ee\\000\\000Z\\001\\000d\\000\\000Z\\002\\000d\\025\\000Z\\003\\000\"\n+    \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\td\\026\\000Z\\004\\000d\\005\\000\\204\\000\\000Z\"\n+    \"\\005\\000e\\006\\000e\\a\\000j\\005\\000e\\b\\000d\\006\\000\\204\\002\\000\\203\"\n+    \"\\001\\000Z\\t\\000d\\a\\000\\204\\000\\000Z\\n\\000d\\b\\000\\204\\000\\000Z\\v\\000d\"\n+    \"\\t\\000\\204\\000\\000Z\\f\\000d\\n\\000\\204\\000\\000Z\\r\\000e\\016\\000e\\017\\000d\"\n+    \"\\v\\000\\203\\001\\000d\\f\\000d\\r\\000\\203\\001\\001Z\\020\\000e\\016\\000e\\017\"\n+    \"\\000d\\016\\000\\203\\001\\000d\\f\\000d\\017\\000\\203\\001\\001Z\\021\\000e\\016\"\n+    \"\\000e\\017\\000d\\020\\000\\203\\001\\000d\\f\\000d\\021\\000\\203\\001\\001Z\\022\"\n+    \"\\000e\\016\\000e\\017\\000d\\022\\000\\203\\001\\000d\\f\\000d\\023\\000\\203\\001\"\n+    \"\\001Z\\023\\000d\\024\\000S\";\n+  int codelen = 209;\n+  int addrmap[500];\n+\n+  for (i=0, nops=0 ; i<codelen ; i += ((codestr[i] >= 90) ? 3 : 1))\n+    {\n+      addrmap[i] = i - nops;\n+      if (codestr[i] == 9)\n+\tnops++;\n+    }\n+\n+  if (addrmap[0] != 0\n+      || addrmap[3] != 3\n+      || addrmap[4] != 4\n+      || addrmap[7] != 7\n+      || addrmap[10] != 10\n+      || addrmap[13] != 13\n+      || addrmap[16] != 16\n+      || addrmap[19] != 19\n+      || addrmap[22] != 22\n+      || addrmap[23] != 22\n+      || addrmap[24] != 22)\n+    abort ();\n+}\n+\n+int main ()\n+{\n+  func ();\n+  return 0;\n+}"}, {"sha": "ca8f84a54cf7bf503d0a8e98a2d43c67aa6eff42", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db963b528702d92bb843ff50f8d7a3d7fb34257d/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db963b528702d92bb843ff50f8d7a3d7fb34257d/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=db963b528702d92bb843ff50f8d7a3d7fb34257d", "patch": "@@ -716,6 +716,20 @@ if_convertible_stmt_p (gimple stmt, VEC (data_reference_p, heap) *refs)\n   return true;\n }\n \n+/* Return true when BB post-dominates all its predecessors.  */\n+\n+static bool\n+bb_postdominates_preds (basic_block bb)\n+{\n+  unsigned i;\n+\n+  for (i = 0; i < EDGE_COUNT (bb->preds); i++)\n+    if (!dominated_by_p (CDI_POST_DOMINATORS, EDGE_PRED (bb, i)->src, bb))\n+      return false;\n+\n+  return true;\n+}\n+\n /* Return true when BB is if-convertible.  This routine does not check\n    basic block's statements and phis.\n \n@@ -774,6 +788,11 @@ if_convertible_bb_p (struct loop *loop, basic_block bb, basic_block exit_bb)\n \treturn false;\n       }\n \n+  if (EDGE_COUNT (bb->preds) == 2\n+      && bb != loop->header\n+      && !bb_postdominates_preds (bb))\n+    return false;\n+\n   return true;\n }\n \n@@ -992,6 +1011,7 @@ if_convertible_loop_p_1 (struct loop *loop,\n     return false;\n \n   calculate_dominance_info (CDI_DOMINATORS);\n+  calculate_dominance_info (CDI_POST_DOMINATORS);\n \n   /* Allow statements that can be handled during if-conversion.  */\n   ifc_bbs = get_loop_body_in_if_conv_order (loop);\n@@ -1262,6 +1282,9 @@ predicate_scalar_phi (gimple phi, tree cond,\n \t  arg_1 = gimple_phi_arg_def (phi, 1);\n \t}\n \n+      gcc_checking_assert (bb == bb->loop_father->header\n+\t\t\t   || bb_postdominates_preds (bb));\n+\n       /* Build new RHS using selected condition and arguments.  */\n       rhs = build3 (COND_EXPR, TREE_TYPE (res),\n \t\t    unshare_expr (cond), arg_0, arg_1);"}]}