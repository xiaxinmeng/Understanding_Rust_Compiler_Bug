{"sha": "31a7923695f5540aa1b721f35ab21e471320bda6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFhNzkyMzY5NWY1NTQwYWExYjcyMWYzNWFiMjFlNDcxMzIwYmRhNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-11-08T21:44:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-11-08T21:44:58Z"}, "message": "re PR c++/19450 (__thread static class members)\n\n\tPR c++/19450\n\t* decl.c (redeclaration_error_message): Issue diagnostics about\n\tolddecl and newdecl disagreement on __thread property.\n\t(grokdeclarator): Set DECL_TLS_MODEL on class static variables.\n\n\t* g++.dg/tls/diag-3.C: New test.\n\t* g++.dg/tls/diag-4.C: New test.\n\t* g++.dg/tls/static-1.C: New test.\n\t* g++.dg/tls/static-1a.cc: New file.\n\nFrom-SVN: r106657", "tree": {"sha": "c3d8a4d48d1074926a1e30b5347d5e5bdfc1a4b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3d8a4d48d1074926a1e30b5347d5e5bdfc1a4b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31a7923695f5540aa1b721f35ab21e471320bda6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a7923695f5540aa1b721f35ab21e471320bda6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31a7923695f5540aa1b721f35ab21e471320bda6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a7923695f5540aa1b721f35ab21e471320bda6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da11c5d2261283280dade0b9a7942ed56c4e67de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da11c5d2261283280dade0b9a7942ed56c4e67de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da11c5d2261283280dade0b9a7942ed56c4e67de"}], "stats": {"total": 103, "additions": 103, "deletions": 0}, "files": [{"sha": "bcbddc7fbd9c3a1dc3a74faceb59e0b62034b06d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=31a7923695f5540aa1b721f35ab21e471320bda6", "patch": "@@ -1,3 +1,10 @@\n+2005-11-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/19450\n+\t* decl.c (redeclaration_error_message): Issue diagnostics about\n+\tolddecl and newdecl disagreement on __thread property.\n+\t(grokdeclarator): Set DECL_TLS_MODEL on class static variables.\n+\n 2005-11-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/21123"}, {"sha": "7263b32d2ee592e339bc7b2facc7d731d721b40c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=31a7923695f5540aa1b721f35ab21e471320bda6", "patch": "@@ -2014,6 +2014,18 @@ redeclaration_error_message (tree newdecl, tree olddecl)\n \n       return NULL;\n     }\n+  else if (TREE_CODE (newdecl) == VAR_DECL\n+\t   && DECL_THREAD_LOCAL_P (newdecl) != DECL_THREAD_LOCAL_P (olddecl))\n+    {\n+      /* Only variables can be thread-local, and all declarations must\n+\t agree on this property.  */\n+      if (DECL_THREAD_LOCAL_P (newdecl))\n+\treturn \"thread-local declaration of %q#D follows \"\n+\t       \"non-thread-local declaration\";\n+      else\n+\treturn \"non-thread-local declaration of %q#D follows \"\n+\t       \"thread-local declaration\";\n+    }\n   else if (toplevel_bindings_p () || DECL_NAMESPACE_SCOPE_P (newdecl))\n     {\n       /* Objects declared at top level:  */\n@@ -8216,6 +8228,17 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t   is considered undefined until an out-of-class\n \t\t   definition is provided.  */\n \t\tDECL_EXTERNAL (decl) = 1;\n+\n+\t\tif (thread_p)\n+\t\t  {\n+\t\t    if (targetm.have_tls)\n+\t\t      DECL_TLS_MODEL (decl) = decl_default_tls_model (decl);\n+\t\t    else\n+\t\t      /* A mere warning is sure to result in improper\n+\t\t\t semantics at runtime.  Don't bother to allow this to\n+\t\t\t compile.  */\n+\t\t      error (\"thread-local storage not supported for this target\");\n+\t\t  }\n \t      }\n \t    else\n \t      {"}, {"sha": "8058bb84e5c003103c4f9871e34f89e52baa0c8a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=31a7923695f5540aa1b721f35ab21e471320bda6", "patch": "@@ -1,3 +1,11 @@\n+2005-11-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/19450\n+\t* g++.dg/tls/diag-3.C: New test.\n+\t* g++.dg/tls/diag-4.C: New test.\n+\t* g++.dg/tls/static-1.C: New test.\n+\t* g++.dg/tls/static-1a.cc: New file.\n+\n 2005-11-08  Diego Novillo  <dnovillo@redhat.com>\n \n \tPR 23046"}, {"sha": "ae2b6ce211fb3825b7cce00c767925ee457b2024", "filename": "gcc/testsuite/g++.dg/tls/diag-3.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-3.C?ref=31a7923695f5540aa1b721f35ab21e471320bda6", "patch": "@@ -0,0 +1,10 @@\n+// Report invalid extern and __thread combinations.\n+\n+extern int j;\t\t// { dg-error \"previously declared here\" }\n+__thread int j;\t\t// { dg-error \"follows non-thread-local\" }\n+\n+extern __thread int i;\t// { dg-error \"previously declared here\" }\n+int i;\t\t\t// { dg-error \"follows thread-local\" }\n+\n+extern __thread int k;\t// This is fine.\n+__thread int k;"}, {"sha": "3b840f1e7b9131b1c4839829682277653f3bfc5b", "filename": "gcc/testsuite/g++.dg/tls/diag-4.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fdiag-4.C?ref=31a7923695f5540aa1b721f35ab21e471320bda6", "patch": "@@ -0,0 +1,9 @@\n+/* Invalid __thread specifiers.  */\n+\n+__thread typedef int g4;\t/* { dg-error \"multiple storage classes\" } */\n+\n+void foo()\n+{\n+  __thread auto int l2;\t\t/* { dg-error \"multiple storage classes\" } */\n+  __thread register int l4;\t/* { dg-error \"multiple storage classes\" } */\n+}"}, {"sha": "3cbcbec2d31555252c832b51d064e58ecf1b0735", "filename": "gcc/testsuite/g++.dg/tls/static-1.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1.C?ref=31a7923695f5540aa1b721f35ab21e471320bda6", "patch": "@@ -0,0 +1,28 @@\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+// { dg-additional-sources \"static-1a.cc\" }\n+\n+extern \"C\" void abort ();\n+extern int test ();\n+\n+struct A\n+{\n+  static __thread int i;\n+};\n+\n+__thread int A::i = 8;\n+\n+int\n+main ()\n+{\n+  if (A::i != 8)\n+    abort ();\n+\n+  if (test ())\n+    abort ();\n+\n+  if (A::i != 17)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "c87efdb8ecd1b0df55fa563e6e8504c009eaa9a4", "filename": "gcc/testsuite/g++.dg/tls/static-1a.cc", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1a.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a7923695f5540aa1b721f35ab21e471320bda6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1a.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fstatic-1a.cc?ref=31a7923695f5540aa1b721f35ab21e471320bda6", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+// { dg-additional-sources \"static-1a.cc\" }\n+\n+struct A\n+{\n+  static __thread int i;\n+};\n+\n+int\n+test ()\n+{\n+  if (A::i != 8)\n+    return 1;\n+\n+  A::i = 17;\n+  return 0;\n+}"}]}