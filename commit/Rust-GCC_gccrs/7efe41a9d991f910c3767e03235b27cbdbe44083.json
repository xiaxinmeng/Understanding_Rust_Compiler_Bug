{"sha": "7efe41a9d991f910c3767e03235b27cbdbe44083", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VmZTQxYTlkOTkxZjkxMGMzNzY3ZTAzMjM1YjI3Y2JkYmU0NDA4Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-04T23:21:33Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-04T23:21:33Z"}, "message": "libgcc2.c (near eh_context_specific): Comment #endif string.\n\n        * libgcc2.c (near eh_context_specific): Comment #endif string.\n        * longlong.h: Don't use strings with embedded newlines.\n\nFrom-SVN: r33687", "tree": {"sha": "ba891167e014f39d732dfa068693f479b8fda05b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba891167e014f39d732dfa068693f479b8fda05b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7efe41a9d991f910c3767e03235b27cbdbe44083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7efe41a9d991f910c3767e03235b27cbdbe44083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7efe41a9d991f910c3767e03235b27cbdbe44083", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7efe41a9d991f910c3767e03235b27cbdbe44083/comments", "author": null, "committer": null, "parents": [{"sha": "12a4e8c50d525934b027bf45749f389c02df9b74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a4e8c50d525934b027bf45749f389c02df9b74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12a4e8c50d525934b027bf45749f389c02df9b74"}], "stats": {"total": 506, "additions": 238, "deletions": 268}, "files": [{"sha": "ba003120e1cafa9d378e3137dc9db459401b17de", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7efe41a9d991f910c3767e03235b27cbdbe44083/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7efe41a9d991f910c3767e03235b27cbdbe44083/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=7efe41a9d991f910c3767e03235b27cbdbe44083", "patch": "@@ -3193,7 +3193,7 @@ eh_context_specific (void)\n \n   return eh;\n }\n-#endif __GTHREADS\n+#endif /* __GTHREADS */\n \f\n /* Support routines for setjmp/longjmp exception handling.  */\n "}, {"sha": "aa9aea585e465ad9f845b4504ae1ea16c245eb0b", "filename": "gcc/longlong.h", "status": "modified", "additions": 237, "deletions": 267, "changes": 504, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7efe41a9d991f910c3767e03235b27cbdbe44083/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7efe41a9d991f910c3767e03235b27cbdbe44083/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=7efe41a9d991f910c3767e03235b27cbdbe44083", "patch": "@@ -108,17 +108,15 @@\n \n #if (defined (__a29k__) || defined (_AM29K)) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"add %1,%4,%5\n-\taddc %0,%2,%3\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"add %1,%4,%5\\n\\taddc %0,%2,%3\"\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t    \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%r\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"rI\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%r\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"rI\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"sub %1,%4,%5\n-\tsubc %0,%2,%3\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"sub %1,%4,%5\\n\\tsubc %0,%2,%3\"\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"r\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -175,17 +173,15 @@ extern UDItype __udiv_qrnnd PARAMS ((UDItype *, UDItype, UDItype, UDItype));\n \n #if defined (__arc__) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"add.f\t%1, %4, %5\n-\tadc\t%0, %2, %3\"\t\t\t\t\t\t\\\n+  __asm__ (\"add.f\t%1, %4, %5\\n\\tadc\t%0, %2, %3\"\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%r\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"rIJ\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%r\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"rIJ\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"sub.f\t%1, %4, %5\n-\tsbc\t%0, %2, %3\"\t\t\t\t\t\t\\\n+  __asm__ (\"sub.f\t%1, %4, %5\\n\\tsbc\t%0, %2, %3\"\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"r\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -206,17 +202,15 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if defined (__arm__) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"adds\t%1, %4, %5\n-\tadc\t%0, %2, %3\"\t\t\t\t\t\t\\\n+  __asm__ (\"adds\t%1, %4, %5\\n\\tadc\t%0, %2, %3\"\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%r\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"rI\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%r\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"rI\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"subs\t%1, %4, %5\n-\tsbc\t%0, %2, %3\"\t\t\t\t\t\t\\\n+  __asm__ (\"subs\t%1, %4, %5\\n\\tsbc\t%0, %2, %3\"\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"r\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -225,19 +219,19 @@ UDItype __umulsidi3 (USItype, USItype);\n \t     \"rI\" ((USItype) (bl)))\n #define umul_ppmm(xh, xl, a, b) \\\n {register USItype __t0, __t1, __t2;\t\t\t\t\t\\\n-  __asm__ (\"%@ Inlined umul_ppmm\n-\tmov\t%2, %5, lsr #16\n-\tmov\t%0, %6, lsr #16\n-\tbic\t%3, %5, %2, lsl #16\n-\tbic\t%4, %6, %0, lsl #16\n-\tmul\t%1, %3, %4\n-\tmul\t%4, %2, %4\n-\tmul\t%3, %0, %3\n-\tmul\t%0, %2, %0\n-\tadds\t%3, %4, %3\n-\taddcs\t%0, %0, #65536\n-\tadds\t%1, %1, %3, lsl #16\n-\tadc\t%0, %0, %3, lsr #16\"\t\t\t\t\t\\\n+  __asm__ (\"%@ Inlined umul_ppmm\\n\"\t\t\t\t\t\\\n+\t   \"\tmov\t%2, %5, lsr #16\\n\"\t\t\t\t\\\n+\t   \"\tmov\t%0, %6, lsr #16\\n\"\t\t\t\t\\\n+\t   \"\tbic\t%3, %5, %2, lsl #16\\n\"\t\t\t\t\\\n+\t   \"\tbic\t%4, %6, %0, lsl #16\\n\"\t\t\t\t\\\n+\t   \"\tmul\t%1, %3, %4\\n\"\t\t\t\t\t\\\n+\t   \"\tmul\t%4, %2, %4\\n\"\t\t\t\t\t\\\n+\t   \"\tmul\t%3, %0, %3\\n\"\t\t\t\t\t\\\n+\t   \"\tmul\t%0, %2, %0\\n\"\t\t\t\t\t\\\n+\t   \"\tadds\t%3, %4, %3\\n\"\t\t\t\t\t\\\n+\t   \"\taddcs\t%0, %0, #65536\\n\"\t\t\t\t\\\n+\t   \"\tadds\t%1, %1, %3, lsl #16\\n\"\t\t\t\t\\\n+\t   \"\tadc\t%0, %0, %3, lsr #16\"\t\t\t\t\\\n \t   : \"=&r\" ((USItype) (xh)),\t\t\t\t\t\\\n \t     \"=r\" ((USItype) (xl)),\t\t\t\t\t\\\n \t     \"=&r\" (__t0), \"=&r\" (__t1), \"=r\" (__t2)\t\t\t\\\n@@ -277,17 +271,15 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if defined (__gmicro__) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"add.w %5,%1\n-\taddx %3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"add.w %5,%1\\n\\taddx %3,%0\"\t\t\t\t\t\\\n \t   : \"=g\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&g\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%0\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%1\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"sub.w %5,%1\n-\tsubx %3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"sub.w %5,%1\\n\\tsubx %3,%0\"\t\t\t\t\t\\\n \t   : \"=g\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&g\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"0\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -316,17 +308,15 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if defined (__hppa) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"add %4,%5,%1\n-\taddc %2,%3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"add %4,%5,%1\\n\\taddc %2,%3,%0\"\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%rM\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"rM\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%rM\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"rM\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"sub %4,%5,%1\n-\tsubb %2,%3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"sub %4,%5,%1\\n\\tsubb %2,%3,%0\"\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"rM\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -357,22 +347,22 @@ UDItype __umulsidi3 (USItype, USItype);\n   do {\t\t\t\t\t\t\t\t\t\\\n     USItype __tmp;\t\t\t\t\t\t\t\\\n     __asm__ (\t\t\t\t\t\t\t\t\\\n-       \"ldi\t\t1,%0\n-\textru,=\t\t%1,15,16,%%r0\t\t; Bits 31..16 zero?\n-\textru,tr\t%1,15,16,%1\t\t; No.  Shift down, skip add.\n-\tldo\t\t16(%0),%0\t\t; Yes.  Perform add.\n-\textru,=\t\t%1,23,8,%%r0\t\t; Bits 15..8 zero?\n-\textru,tr\t%1,23,8,%1\t\t; No.  Shift down, skip add.\n-\tldo\t\t8(%0),%0\t\t; Yes.  Perform add.\n-\textru,=\t\t%1,27,4,%%r0\t\t; Bits 7..4 zero?\n-\textru,tr\t%1,27,4,%1\t\t; No.  Shift down, skip add.\n-\tldo\t\t4(%0),%0\t\t; Yes.  Perform add.\n-\textru,=\t\t%1,29,2,%%r0\t\t; Bits 3..2 zero?\n-\textru,tr\t%1,29,2,%1\t\t; No.  Shift down, skip add.\n-\tldo\t\t2(%0),%0\t\t; Yes.  Perform add.\n-\textru\t\t%1,30,1,%1\t\t; Extract bit 1.\n-\tsub\t\t%0,%1,%0\t\t; Subtract it.\n-\t\" : \"=r\" (count), \"=r\" (__tmp) : \"1\" (x));\t\t\t\\\n+       \"ldi\t\t1,%0\\n\"\t\t\t\t\t\t\\\n+\"\textru,=\t\t%1,15,16,%%r0\t\t; Bits 31..16 zero?\\n\"\t\\\n+\"\textru,tr\t%1,15,16,%1\t\t; No.  Shift down, skip add.\\n\"\\\n+\"\tldo\t\t16(%0),%0\t\t; Yes.  Perform add.\\n\"\t\\\n+\"\textru,=\t\t%1,23,8,%%r0\t\t; Bits 15..8 zero?\\n\"\t\\\n+\"\textru,tr\t%1,23,8,%1\t\t; No.  Shift down, skip add.\\n\"\\\n+\"\tldo\t\t8(%0),%0\t\t; Yes.  Perform add.\\n\"\t\\\n+\"\textru,=\t\t%1,27,4,%%r0\t\t; Bits 7..4 zero?\\n\"\t\\\n+\"\textru,tr\t%1,27,4,%1\t\t; No.  Shift down, skip add.\\n\"\\\n+\"\tldo\t\t4(%0),%0\t\t; Yes.  Perform add.\\n\"\t\\\n+\"\textru,=\t\t%1,29,2,%%r0\t\t; Bits 3..2 zero?\\n\"\t\\\n+\"\textru,tr\t%1,29,2,%1\t\t; No.  Shift down, skip add.\\n\"\\\n+\"\tldo\t\t2(%0),%0\t\t; Yes.  Perform add.\\n\"\t\\\n+\"\textru\t\t%1,30,1,%1\t\t; Extract bit 1.\\n\"\t\\\n+\"\tsub\t\t%0,%1,%0\t\t; Subtract it.\\n\"\t\\\n+\t: \"=r\" (count), \"=r\" (__tmp) : \"1\" (x));\t\t\t\\\n   } while (0)\n #endif\n \n@@ -419,17 +409,15 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if (defined (__i386__) || defined (__i486__)) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"addl %5,%1\n-\tadcl %3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"addl %5,%1\\n\\tadcl %3,%0\"\t\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%0\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%1\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"subl %5,%1\n-\tsbbl %3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"subl %5,%1\\n\\tsbbl %3,%0\"\t\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"0\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -525,9 +513,7 @@ UDItype __umulsidi3 (USItype, USItype);\n #if defined (__M32R__) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   /* The cmp clears the condition bit.  */ \\\n-  __asm__ (\"cmp %0,%0\n-\taddx %%5,%1\n-\taddx %%3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"cmp %0,%0\\n\\taddx %%5,%1\\n\\taddx %%3,%0\"\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%0\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -537,9 +523,7 @@ UDItype __umulsidi3 (USItype, USItype);\n \t   : \"cbit\")\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n   /* The cmp clears the condition bit.  */ \\\n-  __asm__ (\"cmp %0,%0\n-\tsubx %5,%1\n-\tsubx %3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"cmp %0,%0\\n\\tsubx %5,%1\\n\\tsubx %3,%0\"\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"0\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -551,17 +535,15 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if defined (__mc68000__) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"add%.l %5,%1\n-\taddx%.l %3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"add%.l %5,%1\\n\\taddx%.l %3,%0\"\t\t\t\t\\\n \t   : \"=d\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&d\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%0\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"d\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%1\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"sub%.l %5,%1\n-\tsubx%.l %3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"sub%.l %5,%1\\n\\tsubx%.l %3,%0\"\t\t\t\t\\\n \t   : \"=d\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&d\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"0\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -602,32 +584,32 @@ UDItype __umulsidi3 (USItype, USItype);\n #if !defined(__mcf5200__)\n /* %/ inserts REGISTER_PREFIX, %# inserts IMMEDIATE_PREFIX.  */\n #define umul_ppmm(xh, xl, a, b) \\\n-  __asm__ (\"| Inlined umul_ppmm\n-\tmove%.l\t%2,%/d0\n-\tmove%.l\t%3,%/d1\n-\tmove%.l\t%/d0,%/d2\n-\tswap\t%/d0\n-\tmove%.l\t%/d1,%/d3\n-\tswap\t%/d1\n-\tmove%.w\t%/d2,%/d4\n-\tmulu\t%/d3,%/d4\n-\tmulu\t%/d1,%/d2\n-\tmulu\t%/d0,%/d3\n-\tmulu\t%/d0,%/d1\n-\tmove%.l\t%/d4,%/d0\n-\teor%.w\t%/d0,%/d0\n-\tswap\t%/d0\n-\tadd%.l\t%/d0,%/d2\n-\tadd%.l\t%/d3,%/d2\n-\tjcc\t1f\n-\tadd%.l\t%#65536,%/d1\n-1:\tswap\t%/d2\n-\tmoveq\t%#0,%/d0\n-\tmove%.w\t%/d2,%/d0\n-\tmove%.w\t%/d4,%/d2\n-\tmove%.l\t%/d2,%1\n-\tadd%.l\t%/d1,%/d0\n-\tmove%.l\t%/d0,%0\"\t\t\t\t\t\t\\\n+  __asm__ (\"| Inlined umul_ppmm\\n\"\t\t\t\t\t\\\n+\t   \"\tmove%.l\t%2,%/d0\\n\"\t\t\t\t\t\\\n+\t   \"\tmove%.l\t%3,%/d1\\n\"\t\t\t\t\t\\\n+\t   \"\tmove%.l\t%/d0,%/d2\\n\"\t\t\t\t\t\\\n+\t   \"\tswap\t%/d0\\n\"\t\t\t\t\t\t\\\n+\t   \"\tmove%.l\t%/d1,%/d3\\n\"\t\t\t\t\t\\\n+\t   \"\tswap\t%/d1\\n\"\t\t\t\t\t\t\\\n+\t   \"\tmove%.w\t%/d2,%/d4\\n\"\t\t\t\t\t\\\n+\t   \"\tmulu\t%/d3,%/d4\\n\"\t\t\t\t\t\\\n+\t   \"\tmulu\t%/d1,%/d2\\n\"\t\t\t\t\t\\\n+\t   \"\tmulu\t%/d0,%/d3\\n\"\t\t\t\t\t\\\n+\t   \"\tmulu\t%/d0,%/d1\\n\"\t\t\t\t\t\\\n+\t   \"\tmove%.l\t%/d4,%/d0\\n\"\t\t\t\t\t\\\n+\t   \"\teor%.w\t%/d0,%/d0\\n\"\t\t\t\t\t\\\n+\t   \"\tswap\t%/d0\\n\"\t\t\t\t\t\t\\\n+\t   \"\tadd%.l\t%/d0,%/d2\\n\"\t\t\t\t\t\\\n+\t   \"\tadd%.l\t%/d3,%/d2\\n\"\t\t\t\t\t\\\n+\t   \"\tjcc\t1f\\n\"\t\t\t\t\t\t\\\n+\t   \"\tadd%.l\t%#65536,%/d1\\n\"\t\t\t\t\t\\\n+\t   \"1:\tswap\t%/d2\\n\"\t\t\t\t\t\t\\\n+\t   \"\tmoveq\t%#0,%/d0\\n\"\t\t\t\t\t\\\n+\t   \"\tmove%.w\t%/d2,%/d0\\n\"\t\t\t\t\t\\\n+\t   \"\tmove%.w\t%/d4,%/d2\\n\"\t\t\t\t\t\\\n+\t   \"\tmove%.l\t%/d2,%1\\n\"\t\t\t\t\t\\\n+\t   \"\tadd%.l\t%/d1,%/d0\\n\"\t\t\t\t\t\\\n+\t   \"\tmove%.l\t%/d0,%0\"\t\t\t\t\t\\\n \t   : \"=g\" ((USItype) (xh)),\t\t\t\t\t\\\n \t     \"=g\" ((USItype) (xl))\t\t\t\t\t\\\n \t   : \"g\" ((USItype) (a)),\t\t\t\t\t\\\n@@ -653,17 +635,15 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if defined (__m88000__) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"addu.co %1,%r4,%r5\n-\taddu.ci %0,%r2,%r3\"\t\t\t\t\t\t\\\n+  __asm__ (\"addu.co %1,%r4,%r5\\n\\taddu.ci %0,%r2,%r3\"\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%rJ\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"rJ\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%rJ\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"rJ\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"subu.co %1,%r4,%r5\n-\tsubu.ci %0,%r2,%r3\"\t\t\t\t\t\t\\\n+  __asm__ (\"subu.co %1,%r4,%r5\\n\\tsubu.ci %0,%r2,%r3\"\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"rJ\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -882,17 +862,15 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if defined (__pyr__) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"addw\t%5,%1\n-\taddwc\t%3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"addw\t%5,%1\\n\\taddwc\t%3,%0\"\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%0\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%1\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"subw\t%5,%1\n-\tsubwb\t%3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"subw\t%5,%1\\n\\tsubwb\t%3,%0\"\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"0\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -914,17 +892,15 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if defined (__ibm032__) /* RT/ROMP */ && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"a %1,%5\n-\tae %0,%3\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"a %1,%5\\n\\tae %0,%3\"\t\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%0\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"r\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%1\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"r\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"s %1,%5\n-\tse %0,%3\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"s %1,%5\\n\\tse %0,%3\"\t\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"0\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -935,26 +911,26 @@ UDItype __umulsidi3 (USItype, USItype);\n   do {\t\t\t\t\t\t\t\t\t\\\n     USItype __m0 = (m0), __m1 = (m1);\t\t\t\t\t\\\n     __asm__ (\t\t\t\t\t\t\t\t\\\n-       \"s\tr2,r2\n-\tmts\tr10,%2\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tm\tr2,%3\n-\tcas\t%0,r2,r0\n-\tmfs\tr10,%1\"\t\t\t\t\t\t\t\\\n+       \"s\tr2,r2\\n\"\t\t\t\t\t\t\\\n+\"\tmts\tr10,%2\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tm\tr2,%3\\n\"\t\t\t\t\t\t\\\n+\"\tcas\t%0,r2,r0\\n\"\t\t\t\t\t\t\\\n+\"\tmfs\tr10,%1\"\t\t\t\t\t\t\t\\\n \t     : \"=r\" ((USItype) (ph)),\t\t\t\t\t\\\n \t       \"=r\" ((USItype) (pl))\t\t\t\t\t\\\n \t     : \"%r\" (__m0),\t\t\t\t\t\t\\\n@@ -984,9 +960,7 @@ UDItype __umulsidi3 (USItype, USItype);\n #if defined (__sh2__) && W_TYPE_SIZE == 32\n #define umul_ppmm(w1, w0, u, v) \\\n   __asm__ (\t\t\t\t\t\t\t\t\\\n-       \"dmulu.l\t%2,%3\n-\tsts\tmacl,%1\n-\tsts\tmach,%0\"\t\t\t\t\t\t\\\n+       \"dmulu.l\t%2,%3\\n\\tsts\tmacl,%1\\n\\tsts\tmach,%0\"\t\t\\\n \t   : \"=r\" ((USItype)(w1)),\t\t\t\t\t\\\n \t     \"=r\" ((USItype)(w0))\t\t\t\t\t\\\n \t   : \"r\" ((USItype)(u)),\t\t\t\t\t\\\n@@ -998,8 +972,7 @@ UDItype __umulsidi3 (USItype, USItype);\n #if defined (__sparc__) && !defined (__arch64__) && !defined (__sparcv9) \\\n     && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"addcc %r4,%5,%1\n-\taddx %r2,%3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"addcc %r4,%5,%1\\n\\taddx %r2,%3,%0\"\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%rJ\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -1008,8 +981,7 @@ UDItype __umulsidi3 (USItype, USItype);\n \t     \"rI\" ((USItype) (bl))\t\t\t\t\t\\\n \t   __CLOBBER_CC)\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"subcc %r4,%5,%1\n-\tsubx %r2,%3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"subcc %r4,%5,%1\\n\\tsubx %r2,%3,%0\"\t\t\t\t\\\n \t   : \"=r\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"rJ\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -1042,45 +1014,45 @@ UDItype __umulsidi3 (USItype, USItype);\n \t   : \"r\" ((USItype) (u)),\t\t\t\t\t\\\n \t     \"r\" ((USItype) (v)))\n #define udiv_qrnnd(q, r, n1, n0, d) \\\n-  __asm__ (\"! Inlined udiv_qrnnd\n-\twr\t%%g0,%2,%%y\t! Not a delayed write for sparclite\n-\ttst\t%%g0\n-\tdivscc\t%3,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%%g1\n-\tdivscc\t%%g1,%4,%0\n-\trd\t%%y,%1\n-\tbl,a 1f\n-\tadd\t%1,%4,%1\n-1:\t! End of inline udiv_qrnnd\"\t\t\t\t\t\\\n+  __asm__ (\"! Inlined udiv_qrnnd\\n\"\t\t\t\t\t\\\n+\"\twr\t%%g0,%2,%%y\t! Not a delayed write for sparclite\\n\"\t\\\n+\"\ttst\t%%g0\\n\"\t\t\t\t\t\t\t\\\n+\"\tdivscc\t%3,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tdivscc\t%%g1,%4,%0\\n\"\t\t\t\t\t\t\\\n+\"\trd\t%%y,%1\\n\"\t\t\t\t\t\t\\\n+\"\tbl,a 1f\\n\"\t\t\t\t\t\t\t\\\n+\"\tadd\t%1,%4,%1\\n\"\t\t\t\t\t\t\\\n+\"1:\t! End of inline udiv_qrnnd\"\t\t\t\t\t\\\n \t   : \"=r\" ((USItype) (q)),\t\t\t\t\t\\\n \t     \"=r\" ((USItype) (r))\t\t\t\t\t\\\n \t   : \"r\" ((USItype) (n1)),\t\t\t\t\t\\\n@@ -1101,46 +1073,46 @@ UDItype __umulsidi3 (USItype, USItype);\n /* SPARC without integer multiplication and divide instructions.\n    (i.e. at least Sun4/20,40,60,65,75,110,260,280,330,360,380,470,490) */\n #define umul_ppmm(w1, w0, u, v) \\\n-  __asm__ (\"! Inlined umul_ppmm\n-\twr\t%%g0,%2,%%y\t! SPARC has 0-3 delay insn after a wr\n-\tsra\t%3,31,%%o5\t! Don't move this insn\n-\tand\t%2,%%o5,%%o5\t! Don't move this insn\n-\tandcc\t%%g0,0,%%g1\t! Don't move this insn\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,%3,%%g1\n-\tmulscc\t%%g1,0,%%g1\n-\tadd\t%%g1,%%o5,%0\n-\trd\t%%y,%1\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"! Inlined umul_ppmm\\n\"\t\t\t\t\t\\\n+\"\twr\t%%g0,%2,%%y\t! SPARC has 0-3 delay insn after a wr\\n\"\\\n+\"\tsra\t%3,31,%%o5\t! Don't move this insn\\n\"\t\t\\\n+\"\tand\t%2,%%o5,%%o5\t! Don't move this insn\\n\"\t\t\\\n+\"\tandcc\t%%g0,0,%%g1\t! Don't move this insn\\n\"\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,%3,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tmulscc\t%%g1,0,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tadd\t%%g1,%%o5,%0\\n\"\t\t\t\t\t\t\\\n+\"\trd\t%%y,%1\"\t\t\t\t\t\t\t\\\n \t   : \"=r\" ((USItype) (w1)),\t\t\t\t\t\\\n \t     \"=r\" ((USItype) (w0))\t\t\t\t\t\\\n \t   : \"%rI\" ((USItype) (u)),\t\t\t\t\t\\\n@@ -1150,30 +1122,30 @@ UDItype __umulsidi3 (USItype, USItype);\n /* It's quite necessary to add this much assembler for the sparc.\n    The default udiv_qrnnd (in C) is more than 10 times slower!  */\n #define udiv_qrnnd(__q, __r, __n1, __n0, __d) \\\n-  __asm__ (\"! Inlined udiv_qrnnd\n-\tmov\t32,%%g1\n-\tsubcc\t%1,%2,%%g0\n-1:\tbcs\t5f\n-\t addxcc %0,%0,%0\t! shift n1n0 and a q-bit in lsb\n-\tsub\t%1,%2,%1\t! this kills msb of n\n-\taddx\t%1,%1,%1\t! so this can't give carry\n-\tsubcc\t%%g1,1,%%g1\n-2:\tbne\t1b\n-\t subcc\t%1,%2,%%g0\n-\tbcs\t3f\n-\t addxcc %0,%0,%0\t! shift n1n0 and a q-bit in lsb\n-\tb\t3f\n-\t sub\t%1,%2,%1\t! this kills msb of n\n-4:\tsub\t%1,%2,%1\n-5:\taddxcc\t%1,%1,%1\n-\tbcc\t2b\n-\t subcc\t%%g1,1,%%g1\n-! Got carry from n.  Subtract next step to cancel this carry.\n-\tbne\t4b\n-\t addcc\t%0,%0,%0\t! shift n1n0 and a 0-bit in lsb\n-\tsub\t%1,%2,%1\n-3:\txnor\t%0,0,%0\n-\t! End of inline udiv_qrnnd\"\t\t\t\t\t\\\n+  __asm__ (\"! Inlined udiv_qrnnd\\n\"\t\t\t\t\t\\\n+\"\tmov\t32,%%g1\\n\"\t\t\t\t\t\t\\\n+\"\tsubcc\t%1,%2,%%g0\\n\"\t\t\t\t\t\t\\\n+\"1:\tbcs\t5f\\n\"\t\t\t\t\t\t\t\\\n+\"\t addxcc %0,%0,%0\t! shift n1n0 and a q-bit in lsb\\n\"\t\\\n+\"\tsub\t%1,%2,%1\t! this kills msb of n\\n\"\t\t\\\n+\"\taddx\t%1,%1,%1\t! so this can't give carry\\n\"\t\t\\\n+\"\tsubcc\t%%g1,1,%%g1\\n\"\t\t\t\t\t\t\\\n+\"2:\tbne\t1b\\n\"\t\t\t\t\t\t\t\\\n+\"\t subcc\t%1,%2,%%g0\\n\"\t\t\t\t\t\t\\\n+\"\tbcs\t3f\\n\"\t\t\t\t\t\t\t\\\n+\"\t addxcc %0,%0,%0\t! shift n1n0 and a q-bit in lsb\\n\"\t\\\n+\"\tb\t3f\\n\"\t\t\t\t\t\t\t\\\n+\"\t sub\t%1,%2,%1\t! this kills msb of n\\n\"\t\t\\\n+\"4:\tsub\t%1,%2,%1\\n\"\t\t\t\t\t\t\\\n+\"5:\taddxcc\t%1,%1,%1\\n\"\t\t\t\t\t\t\\\n+\"\tbcc\t2b\\n\"\t\t\t\t\t\t\t\\\n+\"\t subcc\t%%g1,1,%%g1\\n\"\t\t\t\t\t\t\\\n+\"! Got carry from n.  Subtract next step to cancel this carry.\\n\"\t\\\n+\"\tbne\t4b\\n\"\t\t\t\t\t\t\t\\\n+\"\t addcc\t%0,%0,%0\t! shift n1n0 and a 0-bit in lsb\\n\"\t\\\n+\"\tsub\t%1,%2,%1\\n\"\t\t\t\t\t\t\\\n+\"3:\txnor\t%0,0,%0\\n\"\t\t\t\t\t\t\\\n+\"\t! End of inline udiv_qrnnd\"\t\t\t\t\t\\\n \t   : \"=&r\" ((USItype) (__q)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype) (__r))\t\t\t\t\t\\\n \t   : \"r\" ((USItype) (__d)),\t\t\t\t\t\\\n@@ -1187,11 +1159,11 @@ UDItype __umulsidi3 (USItype, USItype);\n #if ((defined (__sparc__) && defined (__arch64__)) || defined (__sparcv9)) \\\n     && W_TYPE_SIZE == 64\n #define add_ssaaaa(sh, sl, ah, al, bh, bl)\t\t\t\t\\\n-  __asm__ (\"addcc %r4,%5,%1\n-  \t    add %r2,%3,%0\n-  \t    bcs,a,pn %%xcc, 1f\n-  \t    add %0, 1, %0\n-  \t    1:\"\t\t\t\t\t\t\t\t\\\n+  __asm__ (\"addcc %r4,%5,%1\\n\\t\"\t\t\t\t\t\\\n+   \t   \"add %r2,%3,%0\\n\\t\"\t\t\t\t\t\t\\\n+   \t   \"bcs,a,pn %%xcc, 1f\\n\\t\"\t\t\t\t\t\\\n+   \t   \"add %0, 1, %0\\n\"\t\t\t\t\t\t\\\n+\t   \"1:\"\t\t\t\t\t\t\t\t\\\n \t   : \"=r\" ((UDItype)(sh)),\t\t\t\t      \t\\\n \t     \"=&r\" ((UDItype)(sl))\t\t\t\t      \t\\\n \t   : \"%rJ\" ((UDItype)(ah)),\t\t\t\t     \t\\\n@@ -1201,11 +1173,11 @@ UDItype __umulsidi3 (USItype, USItype);\n \t   __CLOBBER_CC)\n \n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \t\t\t\t\\\n-  __asm__ (\"subcc %r4,%5,%1\n-  \t    sub %r2,%3,%0\n-  \t    bcs,a,pn %%xcc, 1f\n-  \t    sub %0, 1, %0\n-  \t    1:\"\t\t\t\t\t\t\t\t\\\n+  __asm__ (\"subcc %r4,%5,%1\\n\\t\"\t\t\t\t\t\\\n+   \t   \"sub %r2,%3,%0\\n\\t\"\t\t\t\t\t\t\\\n+   \t   \"bcs,a,pn %%xcc, 1f\\n\\t\"\t\t\t\t\t\\\n+   \t   \"sub %0, 1, %0\\n\\t\"\t\t\t\t\t\t\\\n+\t   \"1:\"\t\t\t\t\t\t\t\t\\\n \t   : \"=r\" ((UDItype)(sh)),\t\t\t\t      \t\\\n \t     \"=&r\" ((UDItype)(sl))\t\t\t\t      \t\\\n \t   : \"rJ\" ((UDItype)(ah)),\t\t\t\t     \t\\\n@@ -1218,27 +1190,27 @@ UDItype __umulsidi3 (USItype, USItype);\n   do {\t\t\t\t\t\t\t\t\t\\\n \t  UDItype tmp1, tmp2, tmp3, tmp4;\t\t\t\t\\\n \t  __asm__ __volatile__ (\t\t\t\t\t\\\n-\t\t   \"srl %7,0,%3\n-\t\t    mulx %3,%6,%1\n-\t\t    srlx %6,32,%2\n-\t\t    mulx %2,%3,%4\n-\t\t    sllx %4,32,%5\n-\t\t    srl %6,0,%3\n-\t\t    sub %1,%5,%5\n-\t\t    srlx %5,32,%5\n-\t\t    addcc %4,%5,%4\n-\t\t    srlx %7,32,%5\n-\t\t    mulx %3,%5,%3\n-\t\t    mulx %2,%5,%5\n-\t\t    sethi %%hi(0x80000000),%2\n-\t\t    addcc %4,%3,%4\n-\t\t    srlx %4,32,%4\n-\t\t    add %2,%2,%2\n-\t\t    movcc %%xcc,%%g0,%2\n-\t\t    addcc %5,%4,%5\n-\t\t    sllx %3,32,%3\n-\t\t    add %1,%3,%1\n-\t\t    add %5,%2,%0\"\t\t\t\t\t\\\n+\t\t   \"srl %7,0,%3\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"mulx %3,%6,%1\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"srlx %6,32,%2\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"mulx %2,%3,%4\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"sllx %4,32,%5\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"srl %6,0,%3\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"sub %1,%5,%5\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"srlx %5,32,%5\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"addcc %4,%5,%4\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"srlx %7,32,%5\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"mulx %3,%5,%3\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"mulx %2,%5,%5\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"sethi %%hi(0x80000000),%2\\n\\t\"\t\t\t\\\n+\t\t   \"addcc %4,%3,%4\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"srlx %4,32,%4\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"add %2,%2,%2\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"movcc %%xcc,%%g0,%2\\n\\t\"\t\t\t\t\\\n+\t\t   \"addcc %5,%4,%5\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"sllx %3,32,%3\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"add %1,%3,%1\\n\\t\"\t\t\t\t\t\\\n+\t\t   \"add %5,%2,%0\"\t\t\t\t\t\\\n \t   : \"=r\" ((UDItype)(wh)),\t\t\t\t\t\\\n \t     \"=&r\" ((UDItype)(wl)),\t\t\t\t\t\\\n \t     \"=&r\" (tmp1), \"=&r\" (tmp2), \"=&r\" (tmp3), \"=&r\" (tmp4)\t\\\n@@ -1252,17 +1224,15 @@ UDItype __umulsidi3 (USItype, USItype);\n \n #if defined (__vax__) && W_TYPE_SIZE == 32\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"addl2 %5,%1\n-\tadwc %3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"addl2 %5,%1\\n\\tadwc %3,%0\"\t\t\t\t\t\\\n \t   : \"=g\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&g\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"%0\" ((USItype) (ah)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"%1\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bl)))\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"subl2 %5,%1\n-\tsbwc %3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"subl2 %5,%1\\n\\tsbwc %3,%0\"\t\t\t\t\t\\\n \t   : \"=g\" ((USItype) (sh)),\t\t\t\t\t\\\n \t     \"=&g\" ((USItype) (sl))\t\t\t\t\t\\\n \t   : \"0\" ((USItype) (ah)),\t\t\t\t\t\\\n@@ -1444,7 +1414,7 @@ UDItype __umulsidi3 (USItype, USItype);\n #endif\n \n #if !defined (count_leading_zeros)\n-static const UQItype __clz_tab[];\n+extern const UQItype __clz_tab[];\n #define count_leading_zeros(count, x) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     UWtype __xr = (x);\t\t\t\t\t\t\t\\"}]}