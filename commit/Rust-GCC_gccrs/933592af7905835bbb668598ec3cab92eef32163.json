{"sha": "933592af7905835bbb668598ec3cab92eef32163", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMzNTkyYWY3OTA1ODM1YmJiNjY4NTk4ZWMzY2FiOTJlZWYzMjE2Mw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-05-30T13:16:34Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-05-30T13:16:34Z"}, "message": "2004-05-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/awt/DefaultKeyboardFocusManager.java\n\t(dispatchEvent): Call method to get key event dispatchers.\n\t(dispatchKeyEvent): Call method to get key event post processors.\n\t* javax/swing/JComponent.java\n\t(listenerList): Made protected.\n\t* javax/swing/JOptionPane.java\n\t(message): Don't initialize.\n\t(JOptionPane): Set message text.\n\t* javax/swing/JPopupMenu.java\n\t(show): Fixed typo in argument name.\n\t* javax/swing/RepaintManager.java\n\t(paintDirtyRegions): Use public API of java.util.Map.\n\t* javax/swing/plaf/basic/BasicSplitPaneDivider.java\n\t(positionForMouseEvent): Removed redundant ';'.\n\t(continueDrag): Use method arguments.\n\nFrom-SVN: r82445", "tree": {"sha": "7a4b1b850d319518930150058dd925c453255742", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a4b1b850d319518930150058dd925c453255742"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/933592af7905835bbb668598ec3cab92eef32163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/933592af7905835bbb668598ec3cab92eef32163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/933592af7905835bbb668598ec3cab92eef32163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/933592af7905835bbb668598ec3cab92eef32163/comments", "author": null, "committer": null, "parents": [{"sha": "5f251c2603135f0565ac08898410d795dff8e8d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f251c2603135f0565ac08898410d795dff8e8d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f251c2603135f0565ac08898410d795dff8e8d0"}], "stats": {"total": 51, "additions": 34, "deletions": 17}, "files": [{"sha": "46a472e549e4987486fe0ad99a61654ec780fa53", "filename": "libjava/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933592af7905835bbb668598ec3cab92eef32163/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933592af7905835bbb668598ec3cab92eef32163/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=933592af7905835bbb668598ec3cab92eef32163", "patch": "@@ -1,3 +1,21 @@\n+2004-05-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/awt/DefaultKeyboardFocusManager.java\n+\t(dispatchEvent): Call method to get key event dispatchers.\n+\t(dispatchKeyEvent): Call method to get key event post processors.\n+\t* javax/swing/JComponent.java\n+\t(listenerList): Made protected.\n+\t* javax/swing/JOptionPane.java\n+\t(message): Don't initialize.\n+\t(JOptionPane): Set message text.\n+\t* javax/swing/JPopupMenu.java\n+\t(show): Fixed typo in argument name.\n+\t* javax/swing/RepaintManager.java\n+\t(paintDirtyRegions): Use public API of java.util.Map.\n+\t* javax/swing/plaf/basic/BasicSplitPaneDivider.java\n+\t(positionForMouseEvent): Removed redundant ';'.\n+\t(continueDrag): Use method arguments.\n+\n 2004-05-29  Ranjit Mathew  <rmathew@hotmail.com>\n \n \t* testsuite/libjava.jacks/jacks.xfail: Update for post tree-ssa merge"}, {"sha": "c4dd7eac6097c1d523fc3c412c286f532e95238b", "filename": "libjava/java/awt/DefaultKeyboardFocusManager.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDefaultKeyboardFocusManager.java?ref=933592af7905835bbb668598ec3cab92eef32163", "patch": "@@ -180,7 +180,7 @@ else if (e instanceof KeyEvent)\n       {\n         // Loop through all registered KeyEventDispatchers, giving\n         // each a chance to handle this event.\n-        Iterator i = keyEventDispatchers.iterator ();\n+        Iterator i = getKeyEventDispatchers().iterator();\n \n         while (i.hasNext ())\n           {\n@@ -234,7 +234,7 @@ public boolean dispatchKeyEvent (KeyEvent e)\n \n     // Loop through all registered KeyEventPostProcessors, giving\n     // each a chance to process this event.\n-    Iterator i = keyEventPostProcessors.iterator ();\n+    Iterator i = getKeyEventPostProcessors().iterator();\n \n     while (i.hasNext ())\n       {"}, {"sha": "e03c1c9dde4d4925c4f0c263695a7370be2a61cb", "filename": "libjava/javax/swing/JComponent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjavax%2Fswing%2FJComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjavax%2Fswing%2FJComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJComponent.java?ref=933592af7905835bbb668598ec3cab92eef32163", "patch": "@@ -305,7 +305,7 @@ public void removePropertyChangeListener(PropertyChangeListener listener) {}\n    * handled by this listener list. PropertyChangeEvents are handled in\n    * {@link #changeSupport}.\n    */\n-  EventListenerList listenerList = new EventListenerList();\n+  protected EventListenerList listenerList = new EventListenerList();\n \n   /** \n    * Support for {@link PropertyChangeEvent} events. This is constructed"}, {"sha": "decd02c92132f014f5cc7969760daadfd2c3d4d1", "filename": "libjava/javax/swing/JOptionPane.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjavax%2Fswing%2FJOptionPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjavax%2Fswing%2FJOptionPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJOptionPane.java?ref=933592af7905835bbb668598ec3cab92eef32163", "patch": "@@ -203,7 +203,7 @@ public AccessibleRole getAccessibleRole()\n   protected Object inputValue = UNINITIALIZED_VALUE;\n \n   /** The message displayed in the dialog/internal frame. */\n-  protected Object message = \"JOptionPane message\";\n+  protected Object message;\n \n   /** The type of message displayed. */\n   protected int messageType = PLAIN_MESSAGE;\n@@ -235,7 +235,7 @@ public AccessibleRole getAccessibleRole()\n    */\n   public JOptionPane()\n   {\n-    this(this.message, PLAIN_MESSAGE, DEFAULT_OPTION, null, null, null);\n+    this(\"JOptionPane message\", PLAIN_MESSAGE, DEFAULT_OPTION, null, null, null);\n   }\n \n   /**"}, {"sha": "3cf3c8343ec0a5a4d48b9990dd1e68d6b8695d20", "filename": "libjava/javax/swing/JPopupMenu.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjavax%2Fswing%2FJPopupMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJPopupMenu.java?ref=933592af7905835bbb668598ec3cab92eef32163", "patch": "@@ -70,7 +70,7 @@\n  * DOCUMENT ME!\n  *\n  * @author $author$\n- * @version $Revision: 1.4 $\n+ * @version $Revision: 1.5 $\n  */\n public class JPopupMenu extends JComponent implements Accessible, MenuElement\n {\n@@ -800,7 +800,7 @@ public AccessibleContext getAccessibleContext()\n    * DOCUMENT ME!\n    *\n    * @author $author$\n-   * @version $Revision: 1.4 $\n+   * @version $Revision: 1.5 $\n    */\n   private interface Popup\n   {\n@@ -824,7 +824,7 @@ public AccessibleContext getAccessibleContext()\n    * DOCUMENT ME!\n    *\n    * @author $author$\n-   * @version $Revision: 1.4 $\n+   * @version $Revision: 1.5 $\n    */\n   private class LightWeightPopup extends JPanel implements Popup\n   {\n@@ -870,7 +870,7 @@ public void hide()\n    * DOCUMENT ME!\n    *\n    * @author $author$\n-   * @version $Revision: 1.4 $\n+   * @version $Revision: 1.5 $\n    */\n   private class MediumWeightPopup extends Panel implements Popup\n   {\n@@ -893,7 +893,7 @@ public MediumWeightPopup(Container c)\n      * @param width DOCUMENT ME!\n      * @param heigth DOCUMENT ME!\n      */\n-    public void show(int x, int y, int width, int heigth)\n+    public void show(int x, int y, int width, int height)\n     {\n       JLayeredPane layeredPane;\n       layeredPane = SwingUtilities.getRootPane(invoker).getLayeredPane();\n@@ -917,7 +917,7 @@ public void hide()\n    * DOCUMENT ME!\n    *\n    * @author $author$\n-   * @version $Revision: 1.4 $\n+   * @version $Revision: 1.5 $\n    */\n   private class HeavyWeightPopup extends JWindow implements Popup\n   {\n@@ -958,7 +958,7 @@ public void hide()\n    * DOCUMENT ME!\n    *\n    * @author $author$\n-   * @version $Revision: 1.4 $\n+   * @version $Revision: 1.5 $\n    */\n   public static class Separator extends JSeparator\n   {\n@@ -984,7 +984,7 @@ public String getUIClassID()\n    * DOCUMENT ME!\n    *\n    * @author $author$\n-   * @version $Revision: 1.4 $\n+   * @version $Revision: 1.5 $\n    */\n   protected class AccessibleJPopupMenu extends AccessibleJComponent\n   {"}, {"sha": "22986014738653952554c74f3691a319d2b91da4", "filename": "libjava/javax/swing/RepaintManager.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjavax%2Fswing%2FRepaintManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FRepaintManager.java?ref=933592af7905835bbb668598ec3cab92eef32163", "patch": "@@ -41,11 +41,11 @@\n import java.awt.Dimension;\n import java.awt.Image;\n import java.awt.Rectangle;\n-import java.util.AbstractMap;\n import java.util.Enumeration;\n import java.util.Hashtable;\n import java.util.HashMap;\n import java.util.Iterator;\n+import java.util.Map;\n import java.util.Vector;\n \n \n@@ -441,7 +441,7 @@ public void paintDirtyRegions()\n     Iterator i = roots.values().iterator();\n     while(i.hasNext())\n       {\n-        AbstractMap.BasicMapEntry ent = (AbstractMap.BasicMapEntry) i.next();\n+        Map.Entry ent = (Map.Entry) i.next();\n         JRootPane root = (JRootPane) ent.getKey();\n         Rectangle rect = (Rectangle) ent.getValue();\n         root.paintImmediately(rect);                "}, {"sha": "e169f6d09520d64ac66c0f0292f2c147f713044e", "filename": "libjava/javax/swing/plaf/basic/BasicSplitPaneDivider.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSplitPaneDivider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933592af7905835bbb668598ec3cab92eef32163/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSplitPaneDivider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicSplitPaneDivider.java?ref=933592af7905835bbb668598ec3cab92eef32163", "patch": "@@ -623,7 +623,6 @@ protected boolean isValid()\n     protected int positionForMouseEvent(MouseEvent e)\n     {\n       return e.getX() + getX() - offset;\n-      ;\n     }\n \n     /**\n@@ -650,7 +649,7 @@ protected int getNeededLocation(int x, int y)\n     protected void continueDrag(int newX, int newY)\n     {\n       if (isValid())\n-\tdragDividerTo(adjust(x, y));\n+\tdragDividerTo(adjust(newX, newY));\n     }\n \n     /**"}]}