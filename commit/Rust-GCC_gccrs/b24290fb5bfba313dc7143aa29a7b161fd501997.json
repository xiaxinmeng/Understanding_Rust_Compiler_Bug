{"sha": "b24290fb5bfba313dc7143aa29a7b161fd501997", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI0MjkwZmI1YmZiYTMxM2RjNzE0M2FhMjlhN2IxNjFmZDUwMTk5Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-04-11T22:00:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-04-11T22:00:06Z"}, "message": "PR c++/48457, Core 1238\n\n\tPR c++/48457, Core 1238\n\t* call.c (reference_binding): Allow rvalue reference to bind to\n\tfunction lvalue.\n\t* tree.c (lvalue_kind): Functions are always lvalues.\n\nFrom-SVN: r172282", "tree": {"sha": "dd92eb9594d145c9a1cbd548aadb98292d461fc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd92eb9594d145c9a1cbd548aadb98292d461fc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b24290fb5bfba313dc7143aa29a7b161fd501997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24290fb5bfba313dc7143aa29a7b161fd501997", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b24290fb5bfba313dc7143aa29a7b161fd501997", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24290fb5bfba313dc7143aa29a7b161fd501997/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e6d1da02d97cb863bd000c90d0309ba8f630955", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6d1da02d97cb863bd000c90d0309ba8f630955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e6d1da02d97cb863bd000c90d0309ba8f630955"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "104005169650a75792d6ed5e8d43e063eea3c730", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24290fb5bfba313dc7143aa29a7b161fd501997/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24290fb5bfba313dc7143aa29a7b161fd501997/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b24290fb5bfba313dc7143aa29a7b161fd501997", "patch": "@@ -1,3 +1,10 @@\n+2011-04-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48457, Core 1238\n+\t* call.c (reference_binding): Allow rvalue reference to bind to\n+\tfunction lvalue.\n+\t* tree.c (lvalue_kind): Functions are always lvalues.\n+\n 2011-04-07  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48500"}, {"sha": "4d03646b44421f9b270742e0039e44a2d4f7680e", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24290fb5bfba313dc7143aa29a7b161fd501997/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24290fb5bfba313dc7143aa29a7b161fd501997/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=b24290fb5bfba313dc7143aa29a7b161fd501997", "patch": "@@ -1521,8 +1521,10 @@ reference_binding (tree rto, tree rfrom, tree expr, bool c_cast_p, int flags)\n \t   actually occurs.  */\n \tconv->need_temporary_p = true;\n \n-      /* Don't allow binding of lvalues to rvalue references.  */\n+      /* Don't allow binding of lvalues (other than function lvalues) to\n+\t rvalue references.  */\n       if (is_lvalue && TYPE_REF_IS_RVALUE (rto)\n+\t  && TREE_CODE (to) != FUNCTION_TYPE\n           && !(flags & LOOKUP_PREFER_RVALUE))\n \tconv->bad_p = true;\n "}, {"sha": "d6b6197cbe23e9d4ec33aa98f6b1e4c8363c5069", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24290fb5bfba313dc7143aa29a7b161fd501997/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24290fb5bfba313dc7143aa29a7b161fd501997/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=b24290fb5bfba313dc7143aa29a7b161fd501997", "patch": "@@ -73,7 +73,9 @@ lvalue_kind (const_tree ref)\n       if (TYPE_REF_IS_RVALUE (TREE_TYPE (ref))\n \t  && TREE_CODE (ref) != PARM_DECL\n \t  && TREE_CODE (ref) != VAR_DECL\n-\t  && TREE_CODE (ref) != COMPONENT_REF)\n+\t  && TREE_CODE (ref) != COMPONENT_REF\n+\t  /* Functions are always lvalues.  */\n+\t  && TREE_CODE (TREE_TYPE (TREE_TYPE (ref))) != FUNCTION_TYPE)\n \treturn clk_rvalueref;\n \n       /* lvalue references and named rvalue references are lvalues.  */"}, {"sha": "3812feff89a3ee922412012271ff95f77b65f696", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24290fb5bfba313dc7143aa29a7b161fd501997/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24290fb5bfba313dc7143aa29a7b161fd501997/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b24290fb5bfba313dc7143aa29a7b161fd501997", "patch": "@@ -1,3 +1,7 @@\n+2011-04-11  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/rv-func.C: New.\n+\n 2011-04-11  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.dg/torture/pr47917.c: Define _ISO_C_SOURCE=19990L for"}, {"sha": "db142961128a36ef6b7e45d123caa97d42f03a20", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-func.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24290fb5bfba313dc7143aa29a7b161fd501997/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-func.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24290fb5bfba313dc7143aa29a7b161fd501997/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-func.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-func.C?ref=b24290fb5bfba313dc7143aa29a7b161fd501997", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/48457, Core 1238\n+// { dg-options -std=c++0x }\n+\n+template<class T>\n+T&& create();\n+\n+template<class T, class Arg>\n+void test() {\n+  T t(create<Arg>());\n+  (void) t;\n+}\n+\n+void f (void (&)());\n+void f (void (&&)());\n+\n+int main() {\n+  test<void(&)(), void()>();\n+  test<void(&&)(), void()>();\n+  // This call should choose the lvalue reference overload.\n+  // { dg-final { scan-assembler-not \"_Z1fOFvvE\" } }\n+  f(create<void()>());\n+}"}, {"sha": "5768ea607080481d78ff5aa24d7d1d7cf10598ad", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24290fb5bfba313dc7143aa29a7b161fd501997/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24290fb5bfba313dc7143aa29a7b161fd501997/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b24290fb5bfba313dc7143aa29a7b161fd501997", "patch": "@@ -1,3 +1,7 @@\n+2011-04-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* testsuite/20_util/is_convertible/value.cc: Adjust.\n+\n 2011-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/25_algorithms/inplace_merge/moveable.cc: Actually run"}, {"sha": "fc6007ac55593058bece6db5b478fd797a422de9", "filename": "libstdc++-v3/testsuite/20_util/is_convertible/value.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24290fb5bfba313dc7143aa29a7b161fd501997/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_convertible%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24290fb5bfba313dc7143aa29a7b161fd501997/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_convertible%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_convertible%2Fvalue.cc?ref=b24290fb5bfba313dc7143aa29a7b161fd501997", "patch": "@@ -93,7 +93,7 @@ void test01()\n \t                                     const volatile int&>(false)) );\n   VERIFY( (test_relationship<is_convertible, volatile int,\n \t                                     volatile int&>(false)) );\n-  VERIFY( (test_relationship<is_convertible, int(int), int(&)(int)>(false)) );\n+  VERIFY( (test_relationship<is_convertible, int(int), int(&)(int)>(true)) );\n \n   VERIFY( (test_relationship<is_convertible, int&, ExplicitClass>(false)) );\n   VERIFY( (test_relationship<is_convertible, void*, ExplicitClass>(false)) );"}]}