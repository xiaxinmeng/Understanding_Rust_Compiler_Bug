{"sha": "b83a701b0f79c99a487202016d158c40eb0c4629", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgzYTcwMWIwZjc5Yzk5YTQ4NzIwMjAxNmQxNThjNDBlYjBjNDYyOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-04-26T20:07:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-04-26T20:07:10Z"}, "message": "re PR c/43893 (Error: Invalid controlling predicate with -fopenmp)\n\n\tPR c/43893\n\t* c-omp.c (c_finish_omp_for): Handle also EQ_EXPR.\n\n\t* testsuite/libgomp.c/pr43893.c: New test.\n\t* testsuite/libgomp.c++/pr43893.C: New test.\n\nFrom-SVN: r158745", "tree": {"sha": "20ef77abbc49b7740132e220cf8488695349b001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20ef77abbc49b7740132e220cf8488695349b001"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b83a701b0f79c99a487202016d158c40eb0c4629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b83a701b0f79c99a487202016d158c40eb0c4629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b83a701b0f79c99a487202016d158c40eb0c4629", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b83a701b0f79c99a487202016d158c40eb0c4629/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8415f31724e1cb601b97b3f82292a24257cb5ff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8415f31724e1cb601b97b3f82292a24257cb5ff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8415f31724e1cb601b97b3f82292a24257cb5ff9"}], "stats": {"total": 211, "additions": 206, "deletions": 5}, "files": [{"sha": "4ac33a351ca7d94eef7988c8b28622ec991ea72f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b83a701b0f79c99a487202016d158c40eb0c4629/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b83a701b0f79c99a487202016d158c40eb0c4629/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b83a701b0f79c99a487202016d158c40eb0c4629", "patch": "@@ -1,3 +1,8 @@\n+2010-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/43893\n+\t* c-omp.c (c_finish_omp_for): Handle also EQ_EXPR.\n+\n 2010-04-26  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* c-parser.c (struct c_token): Move location field up."}, {"sha": "012a632b21427f65bea5f1f8b10f47005b084ff9", "filename": "gcc/c-omp.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b83a701b0f79c99a487202016d158c40eb0c4629/gcc%2Fc-omp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b83a701b0f79c99a487202016d158c40eb0c4629/gcc%2Fc-omp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-omp.c?ref=b83a701b0f79c99a487202016d158c40eb0c4629", "patch": "@@ -1,7 +1,7 @@\n /* This file contains routines to construct GNU OpenMP constructs,\n    called from parsing in the C and C++ front ends.\n \n-   Copyright (C) 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Richard Henderson <rth@redhat.com>,\n \t\t  Diego Novillo <dnovillo@redhat.com>.\n \n@@ -301,7 +301,8 @@ c_finish_omp_for (location_t locus, tree declv, tree initv, tree condv,\n \t      || TREE_CODE (cond) == LE_EXPR\n \t      || TREE_CODE (cond) == GT_EXPR\n \t      || TREE_CODE (cond) == GE_EXPR\n-\t      || TREE_CODE (cond) == NE_EXPR)\n+\t      || TREE_CODE (cond) == NE_EXPR\n+\t      || TREE_CODE (cond) == EQ_EXPR)\n \t    {\n \t      tree op0 = TREE_OPERAND (cond, 0);\n \t      tree op1 = TREE_OPERAND (cond, 1);\n@@ -346,18 +347,21 @@ c_finish_omp_for (location_t locus, tree declv, tree initv, tree condv,\n \t\t  cond_ok = true;\n \t\t}\n \n-\t      if (TREE_CODE (cond) == NE_EXPR)\n+\t      if (TREE_CODE (cond) == NE_EXPR\n+\t\t  || TREE_CODE (cond) == EQ_EXPR)\n \t\t{\n \t\t  if (!INTEGRAL_TYPE_P (TREE_TYPE (decl)))\n \t\t    cond_ok = false;\n \t\t  else if (operand_equal_p (TREE_OPERAND (cond, 1),\n \t\t\t\t\t    TYPE_MIN_VALUE (TREE_TYPE (decl)),\n \t\t\t\t\t    0))\n-\t\t    TREE_SET_CODE (cond, GT_EXPR);\n+\t\t    TREE_SET_CODE (cond, TREE_CODE (cond) == NE_EXPR\n+\t\t\t\t\t ? GT_EXPR : LE_EXPR);\n \t\t  else if (operand_equal_p (TREE_OPERAND (cond, 1),\n \t\t\t\t\t    TYPE_MAX_VALUE (TREE_TYPE (decl)),\n \t\t\t\t\t    0))\n-\t\t    TREE_SET_CODE (cond, LT_EXPR);\n+\t\t    TREE_SET_CODE (cond, TREE_CODE (cond) == NE_EXPR\n+\t\t\t\t\t ? LT_EXPR : GE_EXPR);\n \t\t  else\n \t\t    cond_ok = false;\n \t\t}"}, {"sha": "351672afbefef1afc9cde9e7f8d4942a9f596272", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b83a701b0f79c99a487202016d158c40eb0c4629/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b83a701b0f79c99a487202016d158c40eb0c4629/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=b83a701b0f79c99a487202016d158c40eb0c4629", "patch": "@@ -1,3 +1,9 @@\n+2010-04-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/43893\n+\t* testsuite/libgomp.c/pr43893.c: New test.\n+\t* testsuite/libgomp.c++/pr43893.C: New test.\n+\n 2010-04-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/43570"}, {"sha": "be0b6f4abd4269f77a2f041e022cad7b05bd9f08", "filename": "libgomp/testsuite/libgomp.c++/pr43893.C", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b83a701b0f79c99a487202016d158c40eb0c4629/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr43893.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b83a701b0f79c99a487202016d158c40eb0c4629/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr43893.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr43893.C?ref=b83a701b0f79c99a487202016d158c40eb0c4629", "patch": "@@ -0,0 +1,125 @@\n+// PR c/43893\n+// { dg-do run }\n+\n+extern \"C\" void abort ();\n+\n+template <typename T, T M, T N>\n+void\n+f1 ()\n+{\n+  int c;\n+  T i;\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = M; i < N; i++)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+}\n+\n+template <typename T, T M, T N>\n+void\n+f2 ()\n+{\n+  int c;\n+  T i;\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = M; i <= N; i++)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+}\n+\n+template <typename T, T M, T N>\n+void\n+f3 ()\n+{\n+  int c;\n+  T i;\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = M; i > N; i--)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+}\n+\n+template <typename T, T M, T N>\n+void\n+f4 ()\n+{\n+  int c;\n+  T i;\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = M; i >= N; i--)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  int c;\n+  unsigned int i;\n+  int j;\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = 0; i < 1; i++)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  f1 <unsigned int, 0, 1> ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = 0; i <= 0; i++)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  f2 <unsigned int, 0, 0> ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (j = - __INT_MAX__ - 1; j < - __INT_MAX__; j++)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  f1 <int, (- __INT_MAX__ - 1), (- __INT_MAX__)> ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (j = - __INT_MAX__ - 1; j <= - __INT_MAX__ - 1; j++)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  f2 <int, (- __INT_MAX__ - 1), (- __INT_MAX__ - 1)> ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = 2U * __INT_MAX__ + 1; i > 2U * __INT_MAX__; i--)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  f3 <unsigned int, (2U * __INT_MAX__ + 1), (2U * __INT_MAX__)> ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = 2U * __INT_MAX__ + 1; i >= 2U * __INT_MAX__ + 1; i--)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  f4 <unsigned int, (2U * __INT_MAX__ + 1), (2U * __INT_MAX__ + 1)> ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (j = __INT_MAX__; j > __INT_MAX__ - 1; j--)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  f3 <int, __INT_MAX__, (__INT_MAX__ - 1)> ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (j = __INT_MAX__; j >= __INT_MAX__; j--)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  f4 <int, __INT_MAX__, __INT_MAX__> ();\n+  return 0;\n+}"}, {"sha": "b85e9242bb33cf11b3c891fa952dc4cc2fe4b0a6", "filename": "libgomp/testsuite/libgomp.c/pr43893.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b83a701b0f79c99a487202016d158c40eb0c4629/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr43893.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b83a701b0f79c99a487202016d158c40eb0c4629/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr43893.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr43893.c?ref=b83a701b0f79c99a487202016d158c40eb0c4629", "patch": "@@ -0,0 +1,61 @@\n+/* PR c/43893 */\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+int\n+main ()\n+{\n+  int c;\n+  unsigned int i;\n+  int j;\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = 0; i < 1; i++)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = 0; i <= 0; i++)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (j = - __INT_MAX__ - 1; j < - __INT_MAX__; j++)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (j = - __INT_MAX__ - 1; j <= - __INT_MAX__ - 1; j++)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = 2U * __INT_MAX__ + 1; i > 2U * __INT_MAX__; i--)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (i = 2U * __INT_MAX__ + 1; i >= 2U * __INT_MAX__ + 1; i--)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (j = __INT_MAX__; j > __INT_MAX__ - 1; j--)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  c = 0;\n+#pragma omp parallel for reduction(+:c)\n+  for (j = __INT_MAX__; j >= __INT_MAX__; j--)\n+    c++;\n+  if (c != 1)\n+    abort ();\n+  return 0;\n+}"}]}