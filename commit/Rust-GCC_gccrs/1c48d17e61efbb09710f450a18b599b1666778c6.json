{"sha": "1c48d17e61efbb09710f450a18b599b1666778c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM0OGQxN2U2MWVmYmIwOTcxMGY0NTBhMThiNTk5YjE2NjY3NzhjNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-09T00:20:09Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-09T00:20:09Z"}, "message": "(c-parse.y, objc-parse.y): Use sed, not awk.\n\nFrom-SVN: r4046", "tree": {"sha": "15dce3f32881e980e0b3b3d7a457695fd0026beb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15dce3f32881e980e0b3b3d7a457695fd0026beb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c48d17e61efbb09710f450a18b599b1666778c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c48d17e61efbb09710f450a18b599b1666778c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c48d17e61efbb09710f450a18b599b1666778c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c48d17e61efbb09710f450a18b599b1666778c6/comments", "author": null, "committer": null, "parents": [{"sha": "fbe23ee7418e3a909ef68eae235c040b9c31402e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe23ee7418e3a909ef68eae235c040b9c31402e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbe23ee7418e3a909ef68eae235c040b9c31402e"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "8dc2dcc0487912fdd0e80f7a100b7ef715ddee9f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c48d17e61efbb09710f450a18b599b1666778c6/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c48d17e61efbb09710f450a18b599b1666778c6/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=1c48d17e61efbb09710f450a18b599b1666778c6", "patch": "@@ -741,10 +741,15 @@ crtend.o:\tcrtstuff.c $(GCC_PASSES) $(CONFIG_H) gbl-ctors.h\n c-parse.o : $(srcdir)/c-parse.c $(CONFIG_H) $(TREE_H) c-lex.h c-parse.h \\\n     c-tree.h input.h flags.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/c-parse.c\n-$(srcdir)/c-parse.c $(srcdir)/c-parse.h: $(srcdir)/c-parse.y\n-\tcd $(srcdir); $(BISON) $(BISONFLAGS) -d c-parse.y -o c-parse.c\n-$(srcdir)/c-parse.y: $(srcdir)/c-parse.in $(srcdir)/cond.awk\n-\tcd $(srcdir); awk -f cond.awk objc=0 c-parse.in > c-parse.y\n+$(srcdir)/c-parse.y: $(srcdir)/c-parse.in\n+\tsed -e \"/^ifobjc$$/,/^end ifobjc$$/d\" \\\n+\t  -e \"/^ifc$$/d\" -e \"/^end ifc$$/d\" \\\n+\t  $(srcdir)/c-parse.in > $(srcdir)/c-parse.y\n+\n+$(srcdir)/objc-parse.y: $(srcdir)/c-parse.in\n+\tsed -e \"/^ifc$$/,/^end ifc$$/d\" \\\n+\t  -e \"/^ifobjc$$/d\" -e \"/^end ifobjc$$/d\" \\\n+\t  $(srcdir)/c-parse.in > $(srcdir)/objc-parse.y\n \n c-decl.o : c-decl.c $(CONFIG_H) $(TREE_H) c-tree.h c-lex.h flags.h\n c-typeck.o : c-typeck.c $(CONFIG_H) $(TREE_H) c-tree.h flags.h"}]}