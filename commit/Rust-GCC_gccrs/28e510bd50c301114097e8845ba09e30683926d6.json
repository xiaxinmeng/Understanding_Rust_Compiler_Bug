{"sha": "28e510bd50c301114097e8845ba09e30683926d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhlNTEwYmQ1MGMzMDExMTQwOTdlODg0NWJhMDllMzA2ODM5MjZkNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-02-06T19:04:01Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-02-06T19:04:01Z"}, "message": "rs6000.h (ASM_OUTPUT_SYMBOL_REF): Define.\n\n\t* config/rs6000/rs6000.h (ASM_OUTPUT_SYMBOL_REF): Define.\n\t* config/rs6000/rs6000-protos.h (rs6000_output_symbol_ref): Declare.\n\t* config/rs6000/rs6000.c (VTABLE_NAME_P): New macro.\n\t(rs6000_output_symbol_ref): New function.\n\t(output_toc): Use VTABLE_NAME_P.\n\nFrom-SVN: r39497", "tree": {"sha": "e24c8d0cb0ede4380a07adda9b07f477891f7c06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e24c8d0cb0ede4380a07adda9b07f477891f7c06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28e510bd50c301114097e8845ba09e30683926d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e510bd50c301114097e8845ba09e30683926d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28e510bd50c301114097e8845ba09e30683926d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e510bd50c301114097e8845ba09e30683926d6/comments", "author": null, "committer": null, "parents": [{"sha": "9fbbdc9f61d1e70857236ad5b286e683130fa545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fbbdc9f61d1e70857236ad5b286e683130fa545", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fbbdc9f61d1e70857236ad5b286e683130fa545"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "9a6c0b745ed23e07f9ad85f248cb2abd33239d13", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e510bd50c301114097e8845ba09e30683926d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e510bd50c301114097e8845ba09e30683926d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28e510bd50c301114097e8845ba09e30683926d6", "patch": "@@ -1,3 +1,11 @@\n+2001-02-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* config/rs6000/rs6000.h (ASM_OUTPUT_SYMBOL_REF): Define.\n+\t* config/rs6000/rs6000-protos.h (rs6000_output_symbol_ref): Declare.\n+\t* config/rs6000/rs6000.c (VTABLE_NAME_P): New macro.\n+\t(rs6000_output_symbol_ref): New function.\n+\t(output_toc): Use VTABLE_NAME_P.\n+\t\n Tue Feb  6 07:54:51 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* print-tree.c (print_node, case PARM_DECL):"}, {"sha": "31e5716bcf8448e11fed922eb3571d3f0789be24", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e510bd50c301114097e8845ba09e30683926d6/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e510bd50c301114097e8845ba09e30683926d6/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=28e510bd50c301114097e8845ba09e30683926d6", "patch": "@@ -109,6 +109,7 @@ extern void rs6000_emit_move PARAMS ((rtx, rtx, enum machine_mode));\n extern rtx rs6000_legitimize_address PARAMS ((rtx, rtx, enum machine_mode));\n extern void rs6000_select_rtx_section PARAMS ((enum machine_mode, rtx));\n extern rtx rs6000_return_addr PARAMS ((int, rtx));\n+extern void rs6000_output_symbol_ref PARAMS ((FILE*, rtx));\n #endif /* RTX_CODE */\n \n #ifdef TREE_CODE"}, {"sha": "40c8bbd4cc54cb07425eb07760089287fe628811", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e510bd50c301114097e8845ba09e30683926d6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e510bd50c301114097e8845ba09e30683926d6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=28e510bd50c301114097e8845ba09e30683926d6", "patch": "@@ -6735,6 +6735,38 @@ toc_hash_mark_table (vht)\n   htab_traverse (*ht, toc_hash_mark_entry, (void *)0);\n }\n \n+/* These are the names given by the C++ front-end to vtables, and\n+   vtable-like objects.  Ideally, this logic should not be here;\n+   instead, there should be some programmatic way of inquiring as\n+   to whether or not an object is a vtable.  */\n+\n+#define VTABLE_NAME_P(NAME)\t\t\t\t\\\n+  (strncmp (\"_vt.\", name, strlen(\"_vt.\")) == 0\t\t\\\n+  || strncmp (\"_ZTV\", name, strlen (\"_ZTV\")) == 0\t\\\n+  || strncmp (\"_ZTT\", name, strlen (\"_ZTT\")) == 0\t\\\n+  || strncmp (\"_ZTC\", name, strlen (\"_ZTC\")) == 0) \n+\n+void\n+rs6000_output_symbol_ref (file, x)\n+     FILE *file;\n+     rtx x;\n+{\n+  /* Currently C++ toc references to vtables can be emitted before it\n+     is decided whether the vtable is public or private.  If this is\n+     the case, then the linker will eventually complain that there is\n+     a reference to an unknown section.  Thus, for vtables only, \n+     we emit the TOC reference to reference the symbol and not the\n+     section.  */\n+  const char *name = XSTR (x, 0);\n+\n+  if (VTABLE_NAME_P (name)) \n+    {\n+      RS6000_OUTPUT_BASENAME (file, name);\n+    }\n+  else\n+    assemble_name (file, name);\n+}\n+\n /* Output a TOC entry.  We derive the entry name from what is\n    being written.  */\n \n@@ -6942,7 +6974,7 @@ output_toc (file, x, labelno, mode)\n      a TOC reference to an unknown section.  Thus, for vtables only,\n      we emit the TOC reference to reference the symbol and not the\n      section.  */\n-  if (strncmp (\"_vt.\", name, 4) == 0)\n+  if (VTABLE_NAME_P (name))\n     {\n       RS6000_OUTPUT_BASENAME (file, name);\n       if (offset < 0)"}, {"sha": "bb59c473358f4480b0e74e157880e69abfaa5982", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e510bd50c301114097e8845ba09e30683926d6/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e510bd50c301114097e8845ba09e30683926d6/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=28e510bd50c301114097e8845ba09e30683926d6", "patch": "@@ -2628,6 +2628,11 @@ do {\t\t\t\t\t\t\t\t\t\\\n ( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n   sprintf ((OUTPUT), \"%s.%d\", (NAME), (LABELNO)))\n \n+/* Output a reference to SYM on FILE.  */\n+\n+#define ASM_OUTPUT_SYMBOL_REF(FILE, SYM) \\\n+  rs6000_output_symbol_ref (FILE, SYM)\n+\n /* Define the parentheses used to group arithmetic operations\n    in assembler code.  */\n "}]}