{"sha": "0c2e838b251178be0a1eb709fc9e3d86d52f6577", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMyZTgzOGIyNTExNzhiZTBhMWViNzA5ZmM5ZTNkODZkNTJmNjU3Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-07-17T09:58:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-07-17T09:58:38Z"}, "message": "(instantiate_decls{,_1}): Don't do instantiation here if the address\nis mode-dependent.\n\nFrom-SVN: r1615", "tree": {"sha": "4bbefe3d62dd882a07050a8ba1268d442bf34fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bbefe3d62dd882a07050a8ba1268d442bf34fd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c2e838b251178be0a1eb709fc9e3d86d52f6577", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2e838b251178be0a1eb709fc9e3d86d52f6577", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c2e838b251178be0a1eb709fc9e3d86d52f6577", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2e838b251178be0a1eb709fc9e3d86d52f6577/comments", "author": null, "committer": null, "parents": [{"sha": "0dadecf68133e62ab48b9649edbff5daf83a370f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dadecf68133e62ab48b9649edbff5daf83a370f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dadecf68133e62ab48b9649edbff5daf83a370f"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "87db0bb15cbe2c1ab93d83ec36db5d72b2788e97", "filename": "gcc/function.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c2e838b251178be0a1eb709fc9e3d86d52f6577/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c2e838b251178be0a1eb709fc9e3d86d52f6577/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=0c2e838b251178be0a1eb709fc9e3d86d52f6577", "patch": "@@ -1902,12 +1902,16 @@ instantiate_decls (fndecl, valid_only)\n   /* Process all parameters of the function.  */\n   for (decl = DECL_ARGUMENTS (fndecl); decl; decl = TREE_CHAIN (decl))\n     {\n-      if (DECL_RTL (decl) && GET_CODE (DECL_RTL (decl)) == MEM)\n+      if (DECL_RTL (decl) && GET_CODE (DECL_RTL (decl)) == MEM\n+\t  && (! valid_only\n+\t      || ! mode_dependent_address_p (XEXP (DECL_RTL (decl), 0))))\n \tinstantiate_virtual_regs_1 (&XEXP (DECL_RTL (decl), 0),\n \t\t\t\t    (valid_only ? DECL_RTL (decl) : NULL_RTX),\n \t\t\t\t    0);\n       if (DECL_INCOMING_RTL (decl)\n-\t  && GET_CODE (DECL_INCOMING_RTL (decl)) == MEM)\n+\t  && GET_CODE (DECL_INCOMING_RTL (decl)) == MEM\n+\t  && (! valid_only\n+\t      || ! mode_dependent_address_p (XEXP (DECL_INCOMING_RTL (decl), 0))))\n \tinstantiate_virtual_regs_1 (&XEXP (DECL_INCOMING_RTL (decl), 0),\n \t\t\t\t    (valid_only ? DECL_INCOMING_RTL (decl)\n \t\t\t\t     : NULL_RTX),\n@@ -1938,7 +1942,9 @@ instantiate_decls_1 (let, valid_only)\n   tree t;\n \n   for (t = BLOCK_VARS (let); t; t = TREE_CHAIN (t))\n-    if (DECL_RTL (t) && GET_CODE (DECL_RTL (t)) == MEM)\n+    if (DECL_RTL (t) && GET_CODE (DECL_RTL (t)) == MEM\n+\t&& (! valid_only\n+\t    || ! mode_dependent_address_p (XEXP (DECL_RTL (t), 0))))\n       instantiate_virtual_regs_1 (& XEXP (DECL_RTL (t), 0),\n \t\t\t\t  valid_only ? DECL_RTL (t) : NULL_RTX, 0);\n "}]}