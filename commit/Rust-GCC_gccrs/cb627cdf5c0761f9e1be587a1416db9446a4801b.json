{"sha": "cb627cdf5c0761f9e1be587a1416db9446a4801b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I2MjdjZGY1YzA3NjFmOWUxYmU1ODdhMTQxNmRiOTQ0NmE0ODAxYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-01-09T13:05:58Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-01-09T13:05:58Z"}, "message": "PR66414 optimize std::string::find\n\n2017-01-09  Jonathan Wakely  <jwakely@redhat.com>\n\t    Aditya Kumar  <hiraditya@msn.com>\n\n\tPR libstdc++/66414\n\t* include/bits/basic_string.tcc\n\t(basic_string::find(const CharT*, size_type, size_type)): Optimize.\n\nCo-Authored-By: Aditya Kumar <hiraditya@msn.com>\n\nFrom-SVN: r244225", "tree": {"sha": "46f37e5514f528ae92eb070447b2bf14ee402a03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46f37e5514f528ae92eb070447b2bf14ee402a03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb627cdf5c0761f9e1be587a1416db9446a4801b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb627cdf5c0761f9e1be587a1416db9446a4801b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb627cdf5c0761f9e1be587a1416db9446a4801b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb627cdf5c0761f9e1be587a1416db9446a4801b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f63d601b9629ffbf756c97dac2d4241ed43d9e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63d601b9629ffbf756c97dac2d4241ed43d9e4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63d601b9629ffbf756c97dac2d4241ed43d9e4e"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "79b12ccab09eb266b0602c4f512ac09dd4eaac7e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb627cdf5c0761f9e1be587a1416db9446a4801b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb627cdf5c0761f9e1be587a1416db9446a4801b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cb627cdf5c0761f9e1be587a1416db9446a4801b", "patch": "@@ -1,3 +1,10 @@\n+2017-01-09  Jonathan Wakely  <jwakely@redhat.com>\n+\t    Aditya Kumar  <hiraditya@msn.com>\n+\n+\tPR libstdc++/66414\n+\t* include/bits/basic_string.tcc\n+\t(basic_string::find(const CharT*, size_type, size_type)): Optimize.\n+\n 2017-01-06  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/21_strings/basic_string/operations/find/char/6.cc: New."}, {"sha": "41b7fa196b0be530325b3faab5d627ca09c46042", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb627cdf5c0761f9e1be587a1416db9446a4801b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb627cdf5c0761f9e1be587a1416db9446a4801b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=cb627cdf5c0761f9e1be587a1416db9446a4801b", "patch": "@@ -1190,18 +1190,30 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       __glibcxx_requires_string_len(__s, __n);\n       const size_type __size = this->size();\n-      const _CharT* __data = _M_data();\n \n       if (__n == 0)\n \treturn __pos <= __size ? __pos : npos;\n+      if (__pos >= __size)\n+\treturn npos;\n \n-      if (__n <= __size)\n+      const _CharT __elem0 = __s[0];\n+      const _CharT* const __data = data();\n+      const _CharT* __first = __data + __pos;\n+      const _CharT* const __last = __data + __size;\n+      size_type __len = __size - __pos;\n+\n+      while (__len >= __n)\n \t{\n-\t  for (; __pos <= __size - __n; ++__pos)\n-\t    if (traits_type::eq(__data[__pos], __s[0])\n-\t\t&& traits_type::compare(__data + __pos + 1,\n-\t\t\t\t\t__s + 1, __n - 1) == 0)\n-\t      return __pos;\n+\t  // Find the first occurrence of __elem0:\n+\t  __first = traits_type::find(__first, __len - __n + 1, __elem0);\n+\t  if (!__first)\n+\t    return npos;\n+\t  // Compare the full strings from the first occurrence of __elem0.\n+\t  // We already know that __first[0] == __s[0] but compare them again\n+\t  // anyway because __s is probably aligned, which helps memcmp.\n+\t  if (traits_type::compare(__first, __s, __n) == 0)\n+\t    return __first - __data;\n+\t  __len = __last - ++__first;\n \t}\n       return npos;\n     }"}]}