{"sha": "32cac6f1ae656a45a32dbc3de0d8362c4b9703ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJjYWM2ZjFhZTY1NmE0NWEzMmRiYzNkZTBkODM2MmM0Yjk3MDNjYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-10-27T19:52:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-10-27T19:52:06Z"}, "message": "i386.c (ix86_print_operand): Handle 'q' and 'x' overrides for -masm=intel memory.\n\n\t* config/i386/i386.c (ix86_print_operand): Handle 'q' and 'x'\n\toverrides for -masm=intel memory.\n\t* config/i386/sse.md (sse2_cvtdq2pd, sse2_cvtps2pd,\n\tsse4_1_<code>v8qiv8hi2, avx2_<code>v8qiv8si2,\n\tsse4_1_<code>v4hiv4si2, avx2_<code>v4hiv4di2,\n\tsse4_1_<code>v2siv2di2): Use %q1 instead of %1 for -masm=intel.\n\t(sse4_1_<code>v4qiv4si2, avx2_<code>v4qiv4di2,\n\tsse4_1_<code>v2hiv2di2): Use %k1 instead of %1 for -masm=intel.\n\t(sse4_1_<code>v2qiv2di2): Use %w1 instead of %1 for -masm=intel.\n\nFrom-SVN: r180579", "tree": {"sha": "dfaefa30ff8fa32f9f7b3652008782a7447e3bd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfaefa30ff8fa32f9f7b3652008782a7447e3bd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c419671cf3dc5b2869f06922c56c2091c1867580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c419671cf3dc5b2869f06922c56c2091c1867580", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c419671cf3dc5b2869f06922c56c2091c1867580"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "e64511d7eb06b978d474fe031543a9d2177fc2ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32cac6f1ae656a45a32dbc3de0d8362c4b9703ca", "patch": "@@ -1,3 +1,15 @@\n+2011-10-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_print_operand): Handle 'q' and 'x'\n+\toverrides for -masm=intel memory.\n+\t* config/i386/sse.md (sse2_cvtdq2pd, sse2_cvtps2pd,\n+\tsse4_1_<code>v8qiv8hi2, avx2_<code>v8qiv8si2,\n+\tsse4_1_<code>v4hiv4si2, avx2_<code>v4hiv4di2,\n+\tsse4_1_<code>v2siv2di2): Use %q1 instead of %1 for -masm=intel.\n+\t(sse4_1_<code>v4qiv4si2, avx2_<code>v4qiv4di2,\n+\tsse4_1_<code>v2hiv2di2): Use %k1 instead of %1 for -masm=intel.\n+\t(sse4_1_<code>v2qiv2di2): Use %w1 instead of %1 for -masm=intel.\n+\n 2011-10-27  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.c (compute_pass_through_member_ptrs): Rename parm_info"}, {"sha": "7072d4264ef4e38d5d125cf2dbf35663fa057a7c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=32cac6f1ae656a45a32dbc3de0d8362c4b9703ca", "patch": "@@ -14118,13 +14118,18 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \t      gcc_unreachable ();\n \t    }\n \n-\t  /* Check for explicit size override (codes 'b', 'w' and 'k')  */\n+\t  /* Check for explicit size override (codes 'b', 'w', 'k',\n+\t     'q' and 'x')  */\n \t  if (code == 'b')\n \t    size = \"BYTE\";\n \t  else if (code == 'w')\n \t    size = \"WORD\";\n \t  else if (code == 'k')\n \t    size = \"DWORD\";\n+\t  else if (code == 'q')\n+\t    size = \"QWORD\";\n+\t  else if (code == 'x')\n+\t    size = \"XMMWORD\";\n \n \t  fputs (size, file);\n \t  fputs (\" PTR \", file);"}, {"sha": "25854e4ca7b958900b2dc2ac125a7f575388ca09", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=32cac6f1ae656a45a32dbc3de0d8362c4b9703ca", "patch": "@@ -2529,7 +2529,7 @@\n \t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0) (const_int 1)]))))]\n   \"TARGET_SSE2\"\n-  \"%vcvtdq2pd\\t{%1, %0|%0, %1}\"\n+  \"%vcvtdq2pd\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"V2DF\")])\n@@ -2724,7 +2724,7 @@\n \t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0) (const_int 1)]))))]\n   \"TARGET_SSE2\"\n-  \"%vcvtps2pd\\t{%1, %0|%0, %1}\"\n+  \"%vcvtps2pd\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"amdfam10_decode\" \"direct\")\n    (set_attr \"athlon_decode\" \"double\")\n@@ -9675,7 +9675,7 @@\n \t\t       (const_int 6)\n \t\t       (const_int 7)]))))]\n   \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>bw\\t{%1, %0|%0, %1}\"\n+  \"%vpmov<extsuffix>bw\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n@@ -9695,7 +9695,7 @@\n \t\t       (const_int 6)\n \t\t       (const_int 7)]))))]\n   \"TARGET_AVX2\"\n-  \"vpmov<extsuffix>bd\\t{%1, %0|%0, %1}\"\n+  \"vpmov<extsuffix>bd\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"vex\")\n@@ -9711,7 +9711,7 @@\n \t\t       (const_int 2)\n \t\t       (const_int 3)]))))]\n   \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>bd\\t{%1, %0|%0, %1}\"\n+  \"%vpmov<extsuffix>bd\\t{%1, %0|%0, %k1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n@@ -9738,7 +9738,7 @@\n \t\t       (const_int 2)\n \t\t       (const_int 3)]))))]\n   \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>wd\\t{%1, %0|%0, %1}\"\n+  \"%vpmov<extsuffix>wd\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n@@ -9754,7 +9754,7 @@\n \t\t       (const_int 2)\n \t\t       (const_int 3)]))))]\n   \"TARGET_AVX2\"\n-  \"vpmov<extsuffix>bq\\t{%1, %0|%0, %1}\"\n+  \"vpmov<extsuffix>bq\\t{%1, %0|%0, %k1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"vex\")\n@@ -9768,7 +9768,7 @@\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)]))))]\n   \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>bq\\t{%1, %0|%0, %1}\"\n+  \"%vpmov<extsuffix>bq\\t{%1, %0|%0, %w1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n@@ -9784,7 +9784,7 @@\n \t\t       (const_int 2)\n \t\t       (const_int 3)]))))]\n   \"TARGET_AVX2\"\n-  \"vpmov<extsuffix>wq\\t{%1, %0|%0, %1}\"\n+  \"vpmov<extsuffix>wq\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"vex\")\n@@ -9798,7 +9798,7 @@\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)]))))]\n   \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>wq\\t{%1, %0|%0, %1}\"\n+  \"%vpmov<extsuffix>wq\\t{%1, %0|%0, %k1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")\n@@ -9822,7 +9822,7 @@\n \t    (parallel [(const_int 0)\n \t\t       (const_int 1)]))))]\n   \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>dq\\t{%1, %0|%0, %1}\"\n+  \"%vpmov<extsuffix>dq\\t{%1, %0|%0, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"maybe_vex\")"}]}