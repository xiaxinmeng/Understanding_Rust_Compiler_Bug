{"sha": "ee0602299c6e6e70f24adb7983137786f227c70c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUwNjAyMjk5YzZlNmU3MGYyNGFkYjc5ODMxMzc3ODZmMjI3YzcwYw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2004-11-01T19:49:55Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-01T19:49:55Z"}, "message": "re PR c/18239 (ICE in get_parm_info with werid attribute)\n\n\tPR c/18239\n\t* c-decl.c (get_parm_info): Allow FUNCTION_DECLs to appear amongst\n\tparameter declarations.\n\ntestsuite:\n\t* gcc.dg/parm-impl-decl-1.c, gcc.dg/parm-impl-decl-2.c: New tests.\n\nFrom-SVN: r89956", "tree": {"sha": "807c495bb9e4d5a1fe92f0997159322a7f1f95a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/807c495bb9e4d5a1fe92f0997159322a7f1f95a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee0602299c6e6e70f24adb7983137786f227c70c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0602299c6e6e70f24adb7983137786f227c70c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee0602299c6e6e70f24adb7983137786f227c70c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee0602299c6e6e70f24adb7983137786f227c70c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40d05429503044c2cd3d10317ae1cff1b06d21ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40d05429503044c2cd3d10317ae1cff1b06d21ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40d05429503044c2cd3d10317ae1cff1b06d21ce"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "eacc39352c7687024c9e8dc9672058ae53514374", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0602299c6e6e70f24adb7983137786f227c70c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0602299c6e6e70f24adb7983137786f227c70c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee0602299c6e6e70f24adb7983137786f227c70c", "patch": "@@ -1,3 +1,9 @@\n+2004-11-01  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/18239\n+\t* c-decl.c (get_parm_info): Allow FUNCTION_DECLs to appear amongst\n+\tparameter declarations.\n+\n 2004-11-01  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.c (regclass_map): Put reg 33 (cc) to CC_REGS group."}, {"sha": "ba4249ac37c2befd656837d1f3a8c537a398fdd3", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0602299c6e6e70f24adb7983137786f227c70c/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0602299c6e6e70f24adb7983137786f227c70c/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=ee0602299c6e6e70f24adb7983137786f227c70c", "patch": "@@ -4855,10 +4855,13 @@ get_parm_info (bool ellipsis)\n \n \tcase CONST_DECL:\n \tcase TYPE_DECL:\n+\tcase FUNCTION_DECL:\n \t  /* CONST_DECLs appear here when we have an embedded enum,\n \t     and TYPE_DECLs appear here when we have an embedded struct\n \t     or union.  No warnings for this - we already warned about the\n-\t     type itself.  */\n+\t     type itself.  FUNCTION_DECLs appear when there is an implicit\n+\t     function declaration in the parameter list.  */\n+\n \t  TREE_CHAIN (decl) = others;\n \t  others = decl;\n \t  /* fall through */\n@@ -4875,7 +4878,6 @@ get_parm_info (bool ellipsis)\n \n \t  /* Other things that might be encountered.  */\n \tcase LABEL_DECL:\n-\tcase FUNCTION_DECL:\n \tcase VAR_DECL:\n \tdefault:\n \t  gcc_unreachable ();"}, {"sha": "b4746bcc691b789900944ea945805bd16ff0ef8f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0602299c6e6e70f24adb7983137786f227c70c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0602299c6e6e70f24adb7983137786f227c70c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee0602299c6e6e70f24adb7983137786f227c70c", "patch": "@@ -1,3 +1,8 @@\n+2004-11-01  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR c/18239\n+\t* gcc.dg/parm-impl-decl-1.c, gcc.dg/parm-impl-decl-2.c: New tests.\n+\n 2004-11-01  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/18064"}, {"sha": "1e45d3b8849b05f252799bd808fb74732ce9cc3b", "filename": "gcc/testsuite/gcc.dg/parm-impl-decl-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0602299c6e6e70f24adb7983137786f227c70c/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0602299c6e6e70f24adb7983137786f227c70c/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-1.c?ref=ee0602299c6e6e70f24adb7983137786f227c70c", "patch": "@@ -0,0 +1,33 @@\n+/* Test implicit function declarations and other odd declarations in\n+   function prototypes.  Bug 18239.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+/* Implicit function declaration in attribute in definition (testcase\n+   from bug).  */\n+int\n+foo (int __attribute__ ((__mode__ (vector_size(8)))) i) /* { dg-warning \"warning: '__mode__' attribute ignored\" } */\n+{\n+  return (long long) i;\n+}\n+\n+/* Various other cases.  */\n+\n+int f (int [sizeof(g())]);\n+int f1 (int [sizeof(g1())]);\n+\n+int g () { return 1; }\n+\n+int\n+h (int (*p)[sizeof(i())])\n+{\n+  int g2 (), g3 ();\n+  return (*p)[0] + g3() + g2();\n+}\n+\n+int i () { return 2; }\n+\n+int f2 (int [sizeof(g2())]);\n+int f3 (int [sizeof(g3())]);\n+int g3 () { return 4; }"}, {"sha": "1f4630047b0b2ab9fab2d8493db9587afcd577bf", "filename": "gcc/testsuite/gcc.dg/parm-impl-decl-2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee0602299c6e6e70f24adb7983137786f227c70c/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee0602299c6e6e70f24adb7983137786f227c70c/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-impl-decl-2.c?ref=ee0602299c6e6e70f24adb7983137786f227c70c", "patch": "@@ -0,0 +1,7 @@\n+/* Test implicit function declarations and other odd declarations in\n+   function prototypes.  Make sure that LABEL_DECLs don't occur.  */\n+/* Origin: Joseph Myers <joseph@codesourcery.com> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+int k (int [sizeof &&z]); /* { dg-error \"error: label 'z' referenced outside of any function\" } */"}]}