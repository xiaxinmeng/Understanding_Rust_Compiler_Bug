{"sha": "84c44566f3f16c29b65a007944e0d3ea81b48c34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRjNDQ1NjZmM2YxNmMyOWI2NWEwMDc5NDRlMGQzZWE4MWI0OGMzNA==", "commit": {"author": {"name": "Terry Guo", "email": "terry.guo@arm.com", "date": "2013-11-26T11:58:37Z"}, "committer": {"name": "Xuepeng Guo", "email": "xguo@gcc.gnu.org", "date": "2013-11-26T11:58:37Z"}, "message": "arm.c (require_pic_register): Handle high pic base register for thumb-1.\n\ngcc/ChangeLog\n2013-11-26  Terry Guo  <terry.guo@arm.com>\n\n\t* config/arm/arm.c (require_pic_register): Handle high pic base\n\tregister for thumb-1.\n\t(arm_load_pic_register): Also initialize high pic base register.\n\t* doc/invoke.texi: Update documentation for option -mpic-register.\n\ngcc/testsuite/ChangeLog\n2013-11-26  Terry Guo  <terry.guo@arm.com>\n\n\t* gcc.target/arm/thumb1-pic-high-reg.c: New case.\n\t* gcc.target/arm/thumb1-pic-single-base.c: New case.\n\nFrom-SVN: r205391", "tree": {"sha": "c28c0015a2db55a9692a02f344509a6dfd60209f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c28c0015a2db55a9692a02f344509a6dfd60209f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84c44566f3f16c29b65a007944e0d3ea81b48c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c44566f3f16c29b65a007944e0d3ea81b48c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84c44566f3f16c29b65a007944e0d3ea81b48c34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84c44566f3f16c29b65a007944e0d3ea81b48c34/comments", "author": null, "committer": null, "parents": [{"sha": "91f65b12bb90226b982c4c7a31d135e73810c1de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f65b12bb90226b982c4c7a31d135e73810c1de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f65b12bb90226b982c4c7a31d135e73810c1de"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "7974b5798f0ab6e323adc6833c3147c6906ee470", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84c44566f3f16c29b65a007944e0d3ea81b48c34", "patch": "@@ -1,3 +1,10 @@\n+2013-11-26  Terry Guo  <terry.guo@arm.com>\n+\n+\t* config/arm/arm.c (require_pic_register): Handle high pic base\n+\tregister for thumb-1.\n+\t(arm_load_pic_register): Also initialize high pic base register.\n+\t* doc/invoke.texi: Update documentation for option -mpic-register.\n+\n 2013-11-26  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/58314"}, {"sha": "4af6c05949f255001fd042af8132747d3bfd3b6f", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=84c44566f3f16c29b65a007944e0d3ea81b48c34", "patch": "@@ -5917,7 +5917,8 @@ require_pic_register (void)\n   if (!crtl->uses_pic_offset_table)\n     {\n       gcc_assert (can_create_pseudo_p ());\n-      if (arm_pic_register != INVALID_REGNUM)\n+      if (arm_pic_register != INVALID_REGNUM\n+\t  && !(TARGET_THUMB1 && arm_pic_register > LAST_LO_REGNUM))\n \t{\n \t  if (!cfun->machine->pic_reg)\n \t    cfun->machine->pic_reg = gen_rtx_REG (Pmode, arm_pic_register);\n@@ -5943,7 +5944,12 @@ require_pic_register (void)\n \t      crtl->uses_pic_offset_table = 1;\n \t      start_sequence ();\n \n-\t      arm_load_pic_register (0UL);\n+\t      if (TARGET_THUMB1 && arm_pic_register != INVALID_REGNUM\n+\t\t  && arm_pic_register > LAST_LO_REGNUM)\n+\t\temit_move_insn (cfun->machine->pic_reg,\n+\t\t\t\tgen_rtx_REG (Pmode, arm_pic_register));\n+\t      else\n+\t\tarm_load_pic_register (0UL);\n \n \t      seq = get_insns ();\n \t      end_sequence ();\n@@ -6202,6 +6208,14 @@ arm_load_pic_register (unsigned long saved_regs ATTRIBUTE_UNUSED)\n \t      emit_insn (gen_movsi (pic_offset_table_rtx, pic_tmp));\n \t      emit_insn (gen_pic_add_dot_plus_four (pic_reg, pic_reg, labelno));\n \t    }\n+\t  else if (arm_pic_register != INVALID_REGNUM\n+\t\t   && arm_pic_register > LAST_LO_REGNUM\n+\t\t   && REGNO (pic_reg) <= LAST_LO_REGNUM)\n+\t    {\n+\t      emit_insn (gen_pic_load_addr_unified (pic_reg, pic_rtx, labelno));\n+\t      emit_move_insn (gen_rtx_REG (Pmode, arm_pic_register), pic_reg);\n+\t      emit_use (gen_rtx_REG (Pmode, arm_pic_register));\n+\t    }\n \t  else\n \t    emit_insn (gen_pic_load_addr_unified (pic_reg, pic_rtx, labelno));\n \t}"}, {"sha": "466eee0a91c3078997f0d5b4c16014e738123fbd", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=84c44566f3f16c29b65a007944e0d3ea81b48c34", "patch": "@@ -12216,8 +12216,11 @@ before execution begins.\n \n @item -mpic-register=@var{reg}\n @opindex mpic-register\n-Specify the register to be used for PIC addressing.  The default is R10\n-unless stack-checking is enabled, when R9 is used.\n+Specify the register to be used for PIC addressing.\n+For standard PIC base case, the default will be any suitable register\n+determined by compiler.  For single PIC base case, the default is\n+@samp{R9} if target is EABI based or stack-checking is enabled,\n+otherwise the default is @samp{R10}.\n \n @item -mpic-data-is-text-relative\n @opindex mpic-data-is-text-relative"}, {"sha": "2ae530032a1c90778071b60c665caed995cc4cbf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=84c44566f3f16c29b65a007944e0d3ea81b48c34", "patch": "@@ -1,3 +1,8 @@\n+2013-11-26  Terry Guo  <terry.guo@arm.com>\n+\n+\t* gcc.target/arm/thumb1-pic-high-reg.c: New case.\n+\t* gcc.target/arm/thumb1-pic-single-base.c: New case.\n+\n 2013-11-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58700"}, {"sha": "df269fc84765da54e755c8505f79724c166e583e", "filename": "gcc/testsuite/gcc.target/arm/thumb1-pic-high-reg.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-pic-high-reg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-pic-high-reg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-pic-high-reg.c?ref=84c44566f3f16c29b65a007944e0d3ea81b48c34", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_thumb1_ok } */\n+/* { dg-options \"-mthumb -fpic -mpic-register=9\" } */\n+\n+int g_test;\n+\n+int\n+foo (int par)\n+{\n+    g_test = par;\n+}"}, {"sha": "6e9b2570a4a1434b4fdb2b4d2692d1dfc35200f6", "filename": "gcc/testsuite/gcc.target/arm/thumb1-pic-single-base.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-pic-single-base.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84c44566f3f16c29b65a007944e0d3ea81b48c34/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-pic-single-base.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-pic-single-base.c?ref=84c44566f3f16c29b65a007944e0d3ea81b48c34", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_thumb1_ok } */\n+/* { dg-options \"-mthumb -fpic -msingle-pic-base\" } */\n+\n+int g_test;\n+\n+int\n+foo (int par)\n+{\n+    g_test = par;\n+}"}]}