{"sha": "d97b75bee3fb323447411a7f2cad05535698d5ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk3Yjc1YmVlM2ZiMzIzNDQ3NDExYTdmMmNhZDA1NTM1Njk4ZDVlYQ==", "commit": {"author": {"name": "Brad Lucier", "email": "lucier@math.purdue.edu", "date": "2001-03-05T23:50:06Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-03-05T23:50:06Z"}, "message": "* invoke.texi: Document __FAST_MATH__.\n\nFrom-SVN: r40249", "tree": {"sha": "ef7277ac688e38fcbd288d15239a5080c231a4c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef7277ac688e38fcbd288d15239a5080c231a4c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d97b75bee3fb323447411a7f2cad05535698d5ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d97b75bee3fb323447411a7f2cad05535698d5ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d97b75bee3fb323447411a7f2cad05535698d5ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d97b75bee3fb323447411a7f2cad05535698d5ea/comments", "author": {"login": "gambiteer", "id": 1544698, "node_id": "MDQ6VXNlcjE1NDQ2OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1544698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gambiteer", "html_url": "https://github.com/gambiteer", "followers_url": "https://api.github.com/users/gambiteer/followers", "following_url": "https://api.github.com/users/gambiteer/following{/other_user}", "gists_url": "https://api.github.com/users/gambiteer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gambiteer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gambiteer/subscriptions", "organizations_url": "https://api.github.com/users/gambiteer/orgs", "repos_url": "https://api.github.com/users/gambiteer/repos", "events_url": "https://api.github.com/users/gambiteer/events{/privacy}", "received_events_url": "https://api.github.com/users/gambiteer/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b5640cd0a0f600338be9e59df93bb309ef97d9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b5640cd0a0f600338be9e59df93bb309ef97d9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b5640cd0a0f600338be9e59df93bb309ef97d9f"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "6a2442b71a4f2dd43fa5d89ef4dced61b90ec826", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d97b75bee3fb323447411a7f2cad05535698d5ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d97b75bee3fb323447411a7f2cad05535698d5ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d97b75bee3fb323447411a7f2cad05535698d5ea", "patch": "@@ -1,3 +1,7 @@\n+2001-03-05  Brad Lucier  <lucier@math.purdue.edu>\n+\n+\t* invoke.texi: Document __FAST_MATH__.\n+\n 2001-03-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* crtstuff.c: Restore include of auto-host.h."}, {"sha": "660e8732c40919c15e4dee1c5aca786400657fec", "filename": "gcc/invoke.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d97b75bee3fb323447411a7f2cad05535698d5ea/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d97b75bee3fb323447411a7f2cad05535698d5ea/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=d97b75bee3fb323447411a7f2cad05535698d5ea", "patch": "@@ -2940,6 +2940,8 @@ example, it allows the compiler to assume arguments to the @code{sqrt}\n function are non-negative numbers and that no floating-point values\n are NaNs.\n \n+This option causes the preprocessor macro __FAST_MATH__ to be defined.\n+\n This option should never be turned on by any @samp{-O} option since\n it can result in incorrect output for programs which depend on\n an exact implementation of IEEE or ISO rules/specifications for"}]}