{"sha": "fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE2YWRjYWI5ZDhjMmZmNmJlODdlMzBmYjY2M2VkZTlhNjY0YjlmZg==", "commit": {"author": {"name": "Arjan van de Ven", "email": "arjan@linux.intel.com", "date": "2006-07-27T23:12:08Z"}, "committer": {"name": "Christopher Faylor", "email": "cgf@gcc.gnu.org", "date": "2006-07-27T23:12:08Z"}, "message": "2006-07-27  Arjan van de Ven <arjan@linux.intel.com>\n\n\t* config/i386/i386.md (stack_tls_protect_set_di) Use %gs rather than\n\t%fs for -mcmodel=kernel.\n\t(stack_tls_protect_test_di): Likewise.\n\n\t* testsuite/gcc.target/i386/stack-prot-kernel.c: New test.\n\nFrom-SVN: r115782", "tree": {"sha": "8a8ae5d5601b225f6c7d6129e61fd25a2b15f49f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a8ae5d5601b225f6c7d6129e61fd25a2b15f49f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff/comments", "author": {"login": "fenrus75", "id": 1302037, "node_id": "MDQ6VXNlcjEzMDIwMzc=", "avatar_url": "https://avatars.githubusercontent.com/u/1302037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fenrus75", "html_url": "https://github.com/fenrus75", "followers_url": "https://api.github.com/users/fenrus75/followers", "following_url": "https://api.github.com/users/fenrus75/following{/other_user}", "gists_url": "https://api.github.com/users/fenrus75/gists{/gist_id}", "starred_url": "https://api.github.com/users/fenrus75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fenrus75/subscriptions", "organizations_url": "https://api.github.com/users/fenrus75/orgs", "repos_url": "https://api.github.com/users/fenrus75/repos", "events_url": "https://api.github.com/users/fenrus75/events{/privacy}", "received_events_url": "https://api.github.com/users/fenrus75/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab7efd9148063d4bcb27ae72dd390b1c5fc18a58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab7efd9148063d4bcb27ae72dd390b1c5fc18a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab7efd9148063d4bcb27ae72dd390b1c5fc18a58"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "9a2580c1606e2ae875deb9d591044d0aee097c5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff", "patch": "@@ -1,3 +1,9 @@\n+2006-07-27  Arjan van de Ven <arjan@linux.intel.com>\n+\n+\t* config/i386/i386.md (stack_tls_protect_set_di) Use %gs rather than\n+\t%fs for -mcmodel=kernel.\n+\t(stack_tls_protect_test_di): Likewise.\n+\n 2006-07-27  Carlos O'Donell  <carlos@codesourcery.com>\n \n \t* Makefile.in: Use mkinstalldirs."}, {"sha": "4808853e655edcc7b27a1407de79ce0f2b7f82be", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff", "patch": "@@ -20393,7 +20393,15 @@\n    (set (match_scratch:DI 2 \"=&r\") (const_int 0))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT\"\n-  \"mov{q}\\t{%%fs:%P1, %2|%2, QWORD PTR %%fs:%P1}\\;mov{q}\\t{%2, %0|%0, %2}\\;xor{l}\\t%k2, %k2\"\n+  {\n+     /* The kernel uses a different segment register for performance reasons; a\n+        system call would not have to trash the userspace segment register,\n+        which would be expensive */\n+     if (ix86_cmodel != CM_KERNEL)\n+        return \"mov{q}\\t{%%fs:%P1, %2|%2, QWORD PTR %%fs:%P1}\\;mov{q}\\t{%2, %0|%0, %2}\\;xor{l}\\t%k2, %k2\";\n+     else\n+        return \"mov{q}\\t{%%gs:%P1, %2|%2, QWORD PTR %%gs:%P1}\\;mov{q}\\t{%2, %0|%0, %2}\\;xor{l}\\t%k2, %k2\";\n+  }\n   [(set_attr \"type\" \"multi\")])\n \n (define_expand \"stack_protect_test\"\n@@ -20461,7 +20469,15 @@\n \t\t    UNSPEC_SP_TLS_TEST))\n    (clobber (match_scratch:DI 3 \"=r\"))]\n   \"TARGET_64BIT\"\n-  \"mov{q}\\t{%1, %3|%3, %1}\\;xor{q}\\t{%%fs:%P2, %3|%3, QWORD PTR %%fs:%P2}\"\n+  {\n+     /* The kernel uses a different segment register for performance reasons; a\n+        system call would not have to trash the userspace segment register,\n+        which would be expensive */\n+     if (ix86_cmodel != CM_KERNEL)\n+        return \"mov{q}\\t{%1, %3|%3, %1}\\;xor{q}\\t{%%fs:%P2, %3|%3, QWORD PTR %%fs:%P2}\";\n+     else\n+        return \"mov{q}\\t{%1, %3|%3, %1}\\;xor{q}\\t{%%gs:%P2, %3|%3, QWORD PTR %%gs:%P2}\";\n+  }\n   [(set_attr \"type\" \"multi\")])\n \n (include \"sse.md\")"}, {"sha": "4cfaccf2615bdfbfe154b304d16e2255c6d2d91c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff", "patch": "@@ -1,3 +1,7 @@\n+2006-07-27  Arjan van de Ven <arjan@linux.intel.com>\n+\n+\t* gcc.target/i386/stack-prot-kernel.c: New test.\n+\n 2006-07-27  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.dg/builtins-55.c: New test case."}, {"sha": "94fdf4f44e730f2ae7566ebaa876dd61a22c033d", "filename": "gcc/testsuite/gcc.target/i386/stack-prot-kernel.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstack-prot-kernel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstack-prot-kernel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstack-prot-kernel.c?ref=fa6adcab9d8c2ff6be87e30fb663ede9a664b9ff", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O2 -fstack-protector-all -mcmodel=kernel\" } */\n+\n+void test1 (int x)\n+{\n+  char p[40];\n+  int i;\n+  for (i=0; i<40; i++)\n+\tp[i] = x;\n+}\n+\n+/* { dg-final { scan-assembler-not \"%fs\" } } */"}]}