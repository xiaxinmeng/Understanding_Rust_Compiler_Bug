{"sha": "2f8844a8b6bc71fb4d7e67cdd60517336fb9682f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY4ODQ0YThiNmJjNzFmYjRkN2U2N2NkZDYwNTE3MzM2ZmI5NjgyZg==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1997-07-28T19:40:28Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1997-07-28T19:40:28Z"}, "message": "x\n\nFrom-SVN: r14544", "tree": {"sha": "400427da0c0129c59eca767986564d85be10f5a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/400427da0c0129c59eca767986564d85be10f5a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f8844a8b6bc71fb4d7e67cdd60517336fb9682f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8844a8b6bc71fb4d7e67cdd60517336fb9682f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f8844a8b6bc71fb4d7e67cdd60517336fb9682f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8844a8b6bc71fb4d7e67cdd60517336fb9682f/comments", "author": null, "committer": null, "parents": [{"sha": "6a7a9f0156a41296bf8bccd423c5ec8c5cd32e2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7a9f0156a41296bf8bccd423c5ec8c5cd32e2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a7a9f0156a41296bf8bccd423c5ec8c5cd32e2b"}], "stats": {"total": 75, "additions": 60, "deletions": 15}, "files": [{"sha": "5f640c7bb7b6706add64e2b056131ad548f1a9b6", "filename": "gcc/toplev.c", "status": "modified", "additions": 60, "deletions": 15, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8844a8b6bc71fb4d7e67cdd60517336fb9682f/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8844a8b6bc71fb4d7e67cdd60517336fb9682f/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=2f8844a8b6bc71fb4d7e67cdd60517336fb9682f", "patch": "@@ -126,6 +126,11 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n #define PREFERRED_DEBUGGING_TYPE NO_DEBUG\n #endif\n \n+#ifdef DWARF2_DEBUGGING_INFO\n+#undef PREFERRED_DEBUGGING_TYPE\n+#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n+#endif\n+\n extern int rtx_equal_function_value_matters;\n \n #if ! (defined (VMS) || defined (OS2))\n@@ -238,6 +243,7 @@ extern int target_flags;\n int rtl_dump = 0;\n int rtl_dump_and_exit = 0;\n int jump_opt_dump = 0;\n+int addressof_dump = 0;\n int cse_dump = 0;\n int loop_dump = 0;\n int cse2_dump = 0;\n@@ -851,6 +857,7 @@ FILE *asm_out_file;\n FILE *aux_info_file;\n FILE *rtl_dump_file;\n FILE *jump_opt_dump_file;\n+FILE *addressof_dump_file;\n FILE *cse_dump_file;\n FILE *loop_dump_file;\n FILE *cse2_dump_file;\n@@ -1015,6 +1022,8 @@ fatal_insn (message, insn)\n     fflush (rtl_dump_file);\n   if (jump_opt_dump_file)\n     fflush (jump_opt_dump_file);\n+  if (addressof_dump_file)\n+    fflush (addressof_dump_file);\n   if (cse_dump_file)\n     fflush (cse_dump_file);\n   if (loop_dump_file)\n@@ -2171,6 +2180,10 @@ compile_file (name)\n   if (jump_opt_dump)\n     jump_opt_dump_file = open_dump_file (dump_base_name, \".jump\");\n \n+  /* If addressof dump desired, open the output file.  */\n+  if (addressof_dump)\n+    addressof_dump_file = open_dump_file (dump_base_name, \".addressof\");\n+\n   /* If cse dump desired, open the output file.  */\n   if (cse_dump)\n     cse_dump_file = open_dump_file (dump_base_name, \".cse\");\n@@ -2486,6 +2499,7 @@ compile_file (name)\n \t\t&& DECL_INITIAL (decl) != 0\n \t\t&& DECL_SAVED_INSNS (decl) != 0\n \t\t&& (flag_keep_inline_functions\n+\t\t    || TREE_PUBLIC (decl)\n \t\t    || TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl))))\n \t      {\n \t\treconsider = 1;\n@@ -2657,6 +2671,9 @@ compile_file (name)\n   if (jump_opt_dump)\n     fclose (jump_opt_dump_file);\n \n+  if (addressof_dump)\n+    fclose (addressof_dump_file);\n+\n   if (cse_dump)\n     fclose (cse_dump_file);\n \n@@ -2901,7 +2918,7 @@ rest_of_compilation (decl)\n \tTIMEVAR (dump_time,\n \t\t {\n \t\t   fprintf (rtl_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\t    IDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t    (*decl_printable_name) (decl, 2));\n \t\t   if (DECL_SAVED_INSNS (decl))\n \t\t     fprintf (rtl_dump_file, \";; (integrable)\\n\\n\");\n \t\t   print_rtl (rtl_dump_file, insns);\n@@ -2916,6 +2933,18 @@ rest_of_compilation (decl)\n \t functions containing nested functions since the nested function\n \t data is in our non-saved obstack.  */\n \n+      /* If this is a nested inline, remove ADDRESSOF now so we can\n+\t finish compiling ourselves.  Otherwise, wait until EOF.\n+\t We have to do this because the purge_addressof transformation\n+\t changes the DECL_RTL for many variables, which confuses integrate.  */\n+      if (DECL_INLINE (decl))\n+\t{\n+\t  if (decl_function_context (decl))\n+\t    purge_addressof (insns);\n+\t  else\n+\t    DECL_DEFER_OUTPUT (decl) = 1;\n+\t}\n+\n       if (! current_function_contains_functions\n \t  && (DECL_DEFER_OUTPUT (decl)\n \t      || (DECL_INLINE (decl)\n@@ -3066,7 +3095,7 @@ rest_of_compilation (decl)\n     TIMEVAR (dump_time,\n \t     {\n \t       fprintf (jump_opt_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\tIDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t(*decl_printable_name) (decl, 2));\n \t       print_rtl (jump_opt_dump_file, insns);\n \t       fflush (jump_opt_dump_file);\n \t     });\n@@ -3080,7 +3109,7 @@ rest_of_compilation (decl)\n     TIMEVAR (dump_time,\n \t     {\n \t       fprintf (cse_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\tIDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t(*decl_printable_name) (decl, 2));\n \t     });\n \n   if (optimize > 0)\n@@ -3108,11 +3137,23 @@ rest_of_compilation (decl)\n \t       fflush (cse_dump_file);\n \t     });\n \n+  purge_addressof (insns);\n+  reg_scan (insns, max_reg_num (), 1);\n+\n+  if (addressof_dump)\n+    TIMEVAR (dump_time,\n+\t     {\n+\t       fprintf (addressof_dump_file, \"\\n;; Function %s\\n\\n\",\n+\t\t\t(*decl_printable_name) (decl, 2));\n+\t       print_rtl (addressof_dump_file, insns);\n+\t       fflush (addressof_dump_file);\n+\t     });\n+\n   if (loop_dump)\n     TIMEVAR (dump_time,\n \t     {\n \t       fprintf (loop_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\tIDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t(*decl_printable_name) (decl, 2));\n \t     });\n \n   /* Move constant computations out of loops.  */\n@@ -3138,7 +3179,7 @@ rest_of_compilation (decl)\n     TIMEVAR (dump_time,\n \t     {\n \t       fprintf (cse2_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\tIDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t(*decl_printable_name) (decl, 2));\n \t     });\n \n   if (optimize > 0 && flag_rerun_cse_after_loop)\n@@ -3178,7 +3219,7 @@ rest_of_compilation (decl)\n     TIMEVAR (dump_time,\n \t     {\n \t       fprintf (branch_prob_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\tIDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t(*decl_printable_name) (decl, 2));\n \t     });\n \n   if (profile_arc_flag || flag_test_coverage || flag_branch_probabilities)\n@@ -3213,7 +3254,7 @@ rest_of_compilation (decl)\n     TIMEVAR (dump_time,\n \t     {\n \t       fprintf (flow_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\tIDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t(*decl_printable_name) (decl, 2));\n \t     });\n \n   if (obey_regdecls)\n@@ -3259,7 +3300,7 @@ rest_of_compilation (decl)\n     TIMEVAR (dump_time,\n \t     {\n \t       fprintf (combine_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\tIDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t(*decl_printable_name) (decl, 2));\n \t       dump_combine_stats (combine_dump_file);\n \t       print_rtl (combine_dump_file, insns);\n \t       fflush (combine_dump_file);\n@@ -3272,7 +3313,7 @@ rest_of_compilation (decl)\n     TIMEVAR (dump_time,\n \t     {\n \t       fprintf (sched_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\tIDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t(*decl_printable_name) (decl, 2));\n \t     });\n \n   if (optimize > 0 && flag_schedule_insns)\n@@ -3308,7 +3349,7 @@ rest_of_compilation (decl)\n     TIMEVAR (dump_time,\n \t     {\n \t       fprintf (local_reg_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\tIDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t(*decl_printable_name) (decl, 2));\n \t       dump_flow_info (local_reg_dump_file);\n \t       dump_local_alloc (local_reg_dump_file);\n \t       print_rtl (local_reg_dump_file, insns);\n@@ -3318,7 +3359,7 @@ rest_of_compilation (decl)\n   if (global_reg_dump)\n     TIMEVAR (dump_time,\n \t     fprintf (global_reg_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t      IDENTIFIER_POINTER (DECL_NAME (decl))));\n+\t\t      (*decl_printable_name) (decl, 2)));\n \n   /* Save the last label number used so far, so reorg can tell\n      when it's safe to kill spill regs.  */\n@@ -3366,7 +3407,7 @@ rest_of_compilation (decl)\n \tTIMEVAR (dump_time,\n \t\t {\n \t\t   fprintf (sched2_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\t    IDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t    (*decl_printable_name) (decl, 2));\n \t\t });\n \n       /* Do control and data sched analysis again,\n@@ -3406,7 +3447,7 @@ rest_of_compilation (decl)\n     TIMEVAR (dump_time,\n \t     {\n \t       fprintf (jump2_opt_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\tIDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t(*decl_printable_name) (decl, 2));\n \t       print_rtl (jump2_opt_dump_file, insns);\n \t       fflush (jump2_opt_dump_file);\n \t     });\n@@ -3428,7 +3469,7 @@ rest_of_compilation (decl)\n \t  TIMEVAR (dump_time,\n \t\t {\n \t\t   fprintf (dbr_sched_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\t    IDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t\t    (*decl_printable_name) (decl, 2));\n \t\t   print_rtl (dbr_sched_dump_file, insns);\n \t\t   fflush (dbr_sched_dump_file);\n \t\t });\n@@ -3449,7 +3490,7 @@ rest_of_compilation (decl)\n       TIMEVAR (dump_time,\n \t       {\n \t\t fprintf (stack_reg_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t\t\t  IDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t          (*decl_printable_name) (decl, 2));\n \t\t print_rtl (stack_reg_dump_file, insns);\n \t\t fflush (stack_reg_dump_file);\n \t       });\n@@ -3721,6 +3762,7 @@ main (argc, argv, envp)\n  \t\t    flow_dump = 1;\n  \t\t    global_reg_dump = 1;\n  \t\t    jump_opt_dump = 1;\n+ \t\t    addressof_dump = 1;\n  \t\t    jump2_opt_dump = 1;\n  \t\t    local_reg_dump = 1;\n  \t\t    loop_dump = 1;\n@@ -3751,6 +3793,9 @@ main (argc, argv, envp)\n \t\t  case 'j':\n \t\t    jump_opt_dump = 1;\n \t\t    break;\n+\t\t  case 'D':\n+\t\t    addressof_dump = 1;\n+\t\t    break;\n \t\t  case 'J':\n \t\t    jump2_opt_dump = 1;\n \t\t    break;"}]}