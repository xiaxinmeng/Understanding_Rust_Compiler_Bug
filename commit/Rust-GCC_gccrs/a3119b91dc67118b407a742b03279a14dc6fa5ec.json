{"sha": "a3119b91dc67118b407a742b03279a14dc6fa5ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMxMTliOTFkYzY3MTE4YjQwN2E3NDJiMDMyNzlhMTRkYzZmYTVlYw==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2009-11-13T15:57:14Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2009-11-13T15:57:14Z"}, "message": "Forgot to add gcc/ChangeLog entry for debug/41065\n\nFrom-SVN: r154154", "tree": {"sha": "fcd3ffe74388a153e9d268c7285b61da98b31fdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcd3ffe74388a153e9d268c7285b61da98b31fdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3119b91dc67118b407a742b03279a14dc6fa5ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3119b91dc67118b407a742b03279a14dc6fa5ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3119b91dc67118b407a742b03279a14dc6fa5ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3119b91dc67118b407a742b03279a14dc6fa5ec/comments", "author": null, "committer": null, "parents": [{"sha": "8ad7097c112322eb6048f6d465b540676b0d2d2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad7097c112322eb6048f6d465b540676b0d2d2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad7097c112322eb6048f6d465b540676b0d2d2e"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "02fa62bfae747b674e02b768513b1bb48f65445a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3119b91dc67118b407a742b03279a14dc6fa5ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3119b91dc67118b407a742b03279a14dc6fa5ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3119b91dc67118b407a742b03279a14dc6fa5ec", "patch": "@@ -5212,6 +5212,34 @@\n \tmode.  Use it to convert addresses to other modes.  Accept\n \tptr_mode addresses.\n \n+2009-09-23  Dodji Seketeli <dodji@redhat.com>\n+\n+\tPR debug/41065\n+\t* function.h (types_used_by_vars_hash): Declare new hash table.\n+\t(types_used_by_vars_eq, types_used_by_var_decl_insert): Declare\n+\tequality and hash function for the hash table.\n+\t(types_used_by_cur_var_decl): Declare a new global chained list.\n+\t(types_used_by_var_decl_insert): Declare new function.\n+\t* function.c (types_used_by_vars_hash): Define the hashtable ...\n+\t(types_used_by_vars_eq, types_used_by_vars_do_hash): ... as well as\n+\tits equality and hash functions.\n+\t(hash_types_used_by_vars_entry): New hash helper.\n+\t(types_used_by_cur_var_decl): Define the global chained list.\n+\t(used_types_insert): Update the list of types used by the global\n+\tvariable being parsed.\n+\t(types_used_by_var_decl_insert): Define new function.\n+\t* c-common.h (record_types_used_by_current_var_decl): Declare ...\n+\t* c-common.c (record_types_used_by_current_var_decl): ... new\n+\tfunction.\n+\t* c-decl.c (finish_decl): Record the types used by the global\n+\tvariable declaration we've just parsed.\n+\t* dwarf2out.c (premark_used_types): Insert a new line between\n+\tcomment and function.\n+\t(premark_used_types_helper): Fix comment.\n+\t(premark_types_used_by_global_vars_helper,\n+\tpremark_types_used_by_global_vars): New functions.\n+\t(prune_unused_types): Do not prune types used by global variables.\n+\n 2009-09-23  Richard Guenther  <rguenther@suse.de>\n \n \t* alias.c (ao_ref_from_mem): Correct for negative MEM_OFFSET"}]}