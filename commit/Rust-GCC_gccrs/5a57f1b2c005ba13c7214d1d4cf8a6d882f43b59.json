{"sha": "5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE1N2YxYjJjMDA1YmExM2M3MjE0ZDFkNGNmOGE2ZDg4MmY0M2I1OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2004-06-10T18:28:53Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-06-10T18:28:53Z"}, "message": "re PR c++/15875 (rejects pointer to member in template)\n\n        PR c++/15875\n        Revert:\n        2004-06-01  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n        * init.c (build_offset_ref): Build SCOPE_REF with non-null\n        TREE_TYPE for non-dependent names.\n        * pt.c (type_dependent_expression_p): Handle SCOPE_REF with\n        unknown_type_node as its TREE_TYPE.\n        * cxx-pretty_print.c (pp_cxx_unqualified_id): Handle BASELINK.\n        * error.c (dump_decl) <SCOPE_REF case>: Use pp_expression.\n        (dump_expr) <SCOPE_REF case>: Likewise.\n\nFrom-SVN: r82933", "tree": {"sha": "a5a8617488c066ac09291b56eec8860859a2ef95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5a8617488c066ac09291b56eec8860859a2ef95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "078c8b08a0a0d7db27f491a4212957c967619f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078c8b08a0a0d7db27f491a4212957c967619f67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/078c8b08a0a0d7db27f491a4212957c967619f67"}], "stats": {"total": 158, "additions": 37, "deletions": 121}, "files": [{"sha": "278e4d4a2230384a936250955fccd33af1a98d58", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59", "patch": "@@ -1,3 +1,16 @@\n+2004-06-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/15875\n+\tRevert:\n+\t2004-06-01  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\t* init.c (build_offset_ref): Build SCOPE_REF with non-null\n+\tTREE_TYPE for non-dependent names.\n+\t* pt.c (type_dependent_expression_p): Handle SCOPE_REF with\n+\tunknown_type_node as its TREE_TYPE.\n+\t* cxx-pretty_print.c (pp_cxx_unqualified_id): Handle BASELINK.\n+\t* error.c (dump_decl) <SCOPE_REF case>: Use pp_expression.\n+\t(dump_expr) <SCOPE_REF case>: Likewise.\n+\n 2004-06-10  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/15227"}, {"sha": "c5e667d9495f9efbaff808f07c0a5e467558d6e8", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59", "patch": "@@ -180,10 +180,6 @@ pp_cxx_unqualified_id (cxx_pretty_printer *pp, tree t)\n       pp_cxx_template_id (pp, t);\n       break;\n \n-    case BASELINK:\n-      pp_cxx_unqualified_id (pp, BASELINK_FUNCTIONS (t));\n-      break;\n-\n     case RECORD_TYPE:\n     case UNION_TYPE:\n     case ENUMERAL_TYPE:"}, {"sha": "6e186503bad925328ceccb6d533042be94f66248", "filename": "gcc/cp/error.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59", "patch": "@@ -771,7 +771,9 @@ dump_decl (tree t, int flags)\n       break;\n \n     case SCOPE_REF:\n-      pp_expression (cxx_pp, t);\n+      dump_decl (TREE_OPERAND (t, 0), flags & ~TFF_DECL_SPECIFIERS);\n+      pp_colon_colon (cxx_pp); \n+      dump_decl (TREE_OPERAND (t, 1), flags);\n       break;\n \n     case ARRAY_REF:\n@@ -1697,7 +1699,9 @@ dump_expr (tree t, int flags)\n       break;\n \n     case SCOPE_REF:\n-      pp_expression (cxx_pp, t);\n+      dump_type (TREE_OPERAND (t, 0), flags);\n+      pp_colon_colon (cxx_pp);\n+      dump_expr (TREE_OPERAND (t, 1), flags | TFF_EXPR_IN_PARENS);\n       break;\n \n     case CAST_EXPR:"}, {"sha": "1c003566108f05570478a0f08b264b0b0a4021c9", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59", "patch": "@@ -1368,7 +1368,7 @@ build_offset_ref (tree type, tree name, bool address_p)\n   if (TREE_CODE (name) == TEMPLATE_DECL)\n     return name;\n \n-  if (dependent_type_p (type) || type_dependent_expression_p (name))\n+  if (processing_template_decl || uses_template_parms (type))\n     return build_min_nt (SCOPE_REF, type, name);\n \n   if (TREE_CODE (name) == TEMPLATE_ID_EXPR)\n@@ -1450,14 +1450,6 @@ build_offset_ref (tree type, tree name, bool address_p)\n       return error_mark_node;\n     }\n \n-  if (processing_template_decl)\n-    {\n-      if (TREE_CODE (orig_name) == TEMPLATE_ID_EXPR)\n-\treturn build_min (SCOPE_REF, TREE_TYPE (member), type, orig_name);\n-      else\n-\treturn build_min (SCOPE_REF, TREE_TYPE (member), type, name);\n-    }\n-\n   if (TREE_CODE (member) == TYPE_DECL)\n     {\n       TREE_USED (member) = 1;"}, {"sha": "ff96eaa83c7eeb04183640caeb07d47ffdb1eb30", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 17, "deletions": 19, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5a57f1b2c005ba13c7214d1d4cf8a6d882f43b59", "patch": "@@ -11913,6 +11913,22 @@ type_dependent_expression_p (tree expression)\n \treturn dependent_type_p (type);\n     }\n \n+  if (TREE_CODE (expression) == SCOPE_REF\n+      && dependent_scope_ref_p (expression,\n+\t\t\t\ttype_dependent_expression_p))\n+    return true;\n+\n+  if (TREE_CODE (expression) == FUNCTION_DECL\n+      && DECL_LANG_SPECIFIC (expression)\n+      && DECL_TEMPLATE_INFO (expression)\n+      && (any_dependent_template_arguments_p\n+\t  (INNERMOST_TEMPLATE_ARGS (DECL_TI_ARGS (expression)))))\n+    return true;\n+\n+  if (TREE_CODE (expression) == TEMPLATE_DECL\n+      && !DECL_TEMPLATE_TEMPLATE_PARM_P (expression))\n+    return false;\n+\n   if (TREE_TYPE (expression) == unknown_type_node)\n     {\n       if (TREE_CODE (expression) == ADDR_EXPR)\n@@ -11926,9 +11942,7 @@ type_dependent_expression_p (tree expression)\n \t  if (TREE_CODE (expression) == IDENTIFIER_NODE)\n \t    return false;\n \t}\n-      if (TREE_CODE (expression) == SCOPE_REF)\n-\treturn false;\n-\n+      \n       if (TREE_CODE (expression) == BASELINK)\n \texpression = BASELINK_FUNCTIONS (expression);\n       if (TREE_CODE (expression) == TEMPLATE_ID_EXPR)\n@@ -11951,22 +11965,6 @@ type_dependent_expression_p (tree expression)\n       abort ();\n     }\n   \n-  if (TREE_CODE (expression) == SCOPE_REF\n-      && dependent_scope_ref_p (expression,\n-\t\t\t\ttype_dependent_expression_p))\n-    return true;\n-\n-  if (TREE_CODE (expression) == FUNCTION_DECL\n-      && DECL_LANG_SPECIFIC (expression)\n-      && DECL_TEMPLATE_INFO (expression)\n-      && (any_dependent_template_arguments_p\n-\t  (INNERMOST_TEMPLATE_ARGS (DECL_TI_ARGS (expression)))))\n-    return true;\n-\n-  if (TREE_CODE (expression) == TEMPLATE_DECL\n-      && !DECL_TEMPLATE_TEMPLATE_PARM_P (expression))\n-    return false;\n-\n   return (dependent_type_p (TREE_TYPE (expression)));\n }\n "}, {"sha": "369e137317c7dc1b8d4dced6d2b1da223455bbb2", "filename": "gcc/testsuite/g++.dg/template/non-dependent10.C", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078c8b08a0a0d7db27f491a4212957c967619f67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078c8b08a0a0d7db27f491a4212957c967619f67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent10.C?ref=078c8b08a0a0d7db27f491a4212957c967619f67", "patch": "@@ -1,21 +0,0 @@\n-// { dg-do compile }\n-\n-// Origin: Giovanni Bajo <giovannibajo@libero.it>\n-\n-// Two-phase name lookup for address of member:\n-// Detecting error during parsing\n-\n-struct S\n-{\n-  char i;\n-};\n-\n-template<int S::*p>\n-struct X\n-{};\n-\n-template <class T>\n-struct Foo\n-{\n-  X<&S::i> x;\t// { dg-error \"convert|no type\" }\n-};"}, {"sha": "c046312d558c36b89c37e291736b533d56c0a6bc", "filename": "gcc/testsuite/g++.dg/template/non-dependent7.C", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078c8b08a0a0d7db27f491a4212957c967619f67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078c8b08a0a0d7db27f491a4212957c967619f67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent7.C?ref=078c8b08a0a0d7db27f491a4212957c967619f67", "patch": "@@ -1,22 +0,0 @@\n-// { dg-do compile }\n-\n-// Origin: Giovanni Bajo <giovannibajo@libero.it>\n-\n-// Two-phase name lookup for address of member:\n-// Overloading function\n-\n-struct S\n-{\n-  int f();\n-  int f(int);\n-};\n-\n-template<int (S::*p)()>\n-struct X\n-{};\n-\n-template <class T>\n-struct Foo\n-{\n-  X<&S::f> x;\n-};"}, {"sha": "0adac25f08da97de9348c0a00b8fa8fb467acf51", "filename": "gcc/testsuite/g++.dg/template/non-dependent8.C", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078c8b08a0a0d7db27f491a4212957c967619f67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078c8b08a0a0d7db27f491a4212957c967619f67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent8.C?ref=078c8b08a0a0d7db27f491a4212957c967619f67", "patch": "@@ -1,22 +0,0 @@\n-// { dg-do compile }\n-\n-// Origin: Giovanni Bajo <giovannibajo@libero.it>\n-\n-// Two-phase name lookup for address of member:\n-// Detecting overloading function error during parsing\n-\n-struct S\n-{\n-  int f(char);\n-  int f(int);\n-};\n-\n-template<int (S::*p)()>\n-struct X\n-{};\n-\n-template <class T>\n-struct Foo\n-{\n-  X<&S::f> x;\t// { dg-error \"convert|no type\" }\n-};"}, {"sha": "ee34327ad63b171b2f7ea0a36229956ffadf9ca9", "filename": "gcc/testsuite/g++.dg/template/non-dependent9.C", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078c8b08a0a0d7db27f491a4212957c967619f67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078c8b08a0a0d7db27f491a4212957c967619f67/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent9.C?ref=078c8b08a0a0d7db27f491a4212957c967619f67", "patch": "@@ -1,22 +0,0 @@\n-// { dg-do compile }\n-\n-// Origin: Giovanni Bajo <giovannibajo@libero.it>\n-\n-// PR c++/13092: ICE taking address of member which is non-dependent\n-\n-struct S\n-{\n-  int i;\n-};\n-\n-template<int S::*p>\n-struct X\n-{};\n-\n-template <class T>\n-struct Foo\n-{\n-  X<&S::i> x;\n-};\n-\n-template struct Foo<void>;"}]}