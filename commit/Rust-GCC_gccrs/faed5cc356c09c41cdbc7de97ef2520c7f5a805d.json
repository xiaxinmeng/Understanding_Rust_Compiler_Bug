{"sha": "faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFlZDVjYzM1NmMwOWM0MWNkYmM3ZGU5N2VmMjUyMGM3ZjVhODA1ZA==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-01-13T01:58:45Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-01-13T01:58:45Z"}, "message": "re PR c++/13376 (Incorrect dumps of RTL for passes that use current_function_name)\n\n\tPR c++/13376\n\t* function.h (struct function): Kill `name' field.\n\t(current_function_name): Make it an extern function.\n\t* function.c (current_function_name): New function.\n\t* graph.c: Update all uses of current_function_name.\n\t* gcse.c: Likewise.\n\t* config/alpha/alpha.c, config/avr/avr.c, config/c4x/c4x.c,\n\tconfig/mips/mips.c, config/pdp11/pdp11.c: Likewise.\n\t* config/ip2k/ip2k.c (function_prologue): Use MAIN_NAME_P\n\tinstead of a strcmp with \"main\".\n\nFrom-SVN: r75784", "tree": {"sha": "620724275961c3e490611bea34f8d2c8cba0a9dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/620724275961c3e490611bea34f8d2c8cba0a9dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/comments", "author": null, "committer": null, "parents": [{"sha": "e4a32afbe15212baa1f5eab9d0315077ca005a9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a32afbe15212baa1f5eab9d0315077ca005a9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4a32afbe15212baa1f5eab9d0315077ca005a9d"}], "stats": {"total": 91, "additions": 56, "deletions": 35}, "files": [{"sha": "ee83e98ffe00af7ea2a045c15eb868a9621aa246", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "patch": "@@ -1,3 +1,16 @@\n+2004-01-13  Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR c++/13376\n+\t* function.h (struct function): Kill `name' field.\n+\t(current_function_name): Make it an extern function.\n+\t* function.c (current_function_name): New function.\n+\t* graph.c: Update all uses of current_function_name.\n+\t* gcse.c: Likewise.\n+\t* config/alpha/alpha.c, config/avr/avr.c, config/c4x/c4x.c,\n+\tconfig/mips/mips.c, config/pdp11/pdp11.c: Likewise.\n+\t* config/ip2k/ip2k.c (function_prologue): Use MAIN_NAME_P\n+\tinstead of a strcmp with \"main\".\n+\n 2004-01-13  Jan Hubicka  <jh@suse.cz>\n \n \t* c-decl.c (diagnose_mismatched_decls):  Fix warning calls."}, {"sha": "e25ece23030f6917a14d71c9ac76458014f33434", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "patch": "@@ -9739,7 +9739,7 @@ unicosmk_add_call_info_word (rtx x)\n   ++machine->ciw_count;\n \n   return GEN_INT (machine->ciw_count\n-\t\t  + strlen (current_function_name)/8 + 5);\n+\t\t  + strlen (current_function_name ())/8 + 5);\n }\n \n static char unicosmk_section_buf[100];"}, {"sha": "198c56895d345578ae18db0deb3a8d3e971ad5f0", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "patch": "@@ -662,13 +662,14 @@ avr_output_function_prologue (FILE *file, HOST_WIDE_INT size)\n     }\n   else if (minimize && (frame_pointer_needed || live_seq > 6)) \n     {\n+      const char *cfun_name = current_function_name ();\n       fprintf (file, (\"\\t\"\n \t\t      AS1 (ldi, r26) \",lo8(\" HOST_WIDE_INT_PRINT_DEC \")\" CR_TAB\n \t\t      AS1 (ldi, r27) \",hi8(\" HOST_WIDE_INT_PRINT_DEC \")\" CR_TAB), size, size);\n \n       fprintf (file, (AS2 (ldi, r30, pm_lo8(.L_%s_body)) CR_TAB\n-\t\t      AS2 (ldi, r31, pm_hi8(.L_%s_body)) CR_TAB)\n-\t       ,current_function_name, current_function_name);\n+\t\t      AS2 (ldi, r31, pm_hi8(.L_%s_body)) CR_TAB),\n+\t       cfun_name, cfun_name);\n       \n       prologue_size += 4;\n       \n@@ -684,7 +685,7 @@ avr_output_function_prologue (FILE *file, HOST_WIDE_INT size)\n \t\t   (18 - live_seq) * 2);\n \t  ++prologue_size;\n \t}\n-      fprintf (file, \".L_%s_body:\\n\", current_function_name);\n+      fprintf (file, \".L_%s_body:\\n\", cfun_name);\n     }\n   else\n     {\n@@ -871,7 +872,7 @@ avr_output_function_epilogue (FILE *file, HOST_WIDE_INT size)\n \n  out:\n   fprintf (file, \"/* epilogue end (size=%d) */\\n\", epilogue_size);\n-  fprintf (file, \"/* function %s size %d (%d) */\\n\", current_function_name,\n+  fprintf (file, \"/* function %s size %d (%d) */\\n\", current_function_name (),\n \t   prologue_size + function_size + epilogue_size, function_size);\n   commands_in_file += prologue_size + function_size + epilogue_size;\n   commands_in_prologues += prologue_size;"}, {"sha": "28e13359f940021027d4563b809685c4840a6b9b", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "patch": "@@ -791,18 +791,20 @@ c4x_naked_function_p (void)\n int\n c4x_interrupt_function_p (void)\n {\n+  const char *cfun_name;\n   if (lookup_attribute (\"interrupt\",\n \t\t\tTYPE_ATTRIBUTES (TREE_TYPE (current_function_decl))))\n     return 1;\n \n   /* Look for TI style c_intnn.  */\n-  return current_function_name[0] == 'c'\n-    && current_function_name[1] == '_'\n-    && current_function_name[2] == 'i'\n-    && current_function_name[3] == 'n' \n-    && current_function_name[4] == 't'\n-    && ISDIGIT (current_function_name[5])\n-    && ISDIGIT (current_function_name[6]);\n+  cfun_name = current_function_name ();\n+  return cfun_name[0] == 'c'\n+    && cfun_name[1] == '_'\n+    && cfun_name[2] == 'i'\n+    && cfun_name[3] == 'n' \n+    && cfun_name[4] == 't'\n+    && ISDIGIT (cfun_name[5])\n+    && ISDIGIT (cfun_name[6]);\n }\n \n void\n@@ -846,7 +848,7 @@ c4x_expand_prologue (void)\n \t     storage!  */\n \t  if (size > 32767)\n \t    error (\"ISR %s requires %d words of local vars, max is 32767\",\n-\t\t   current_function_name, size);\n+\t\t   current_function_name (), size);\n \n \t  insn = emit_insn (gen_addqi3 (gen_rtx_REG (QImode, SP_REGNO),\n \t\t\t\t        gen_rtx_REG (QImode, SP_REGNO),"}, {"sha": "6f32c43d07c1e3f8343e3a9243145ef914b15bb3", "filename": "gcc/config/ip2k/ip2k.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Fip2k%2Fip2k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Fip2k%2Fip2k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fip2k%2Fip2k.c?ref=faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "patch": "@@ -202,7 +202,7 @@ function_prologue (FILE *file, HOST_WIDE_INT size)\n     }\n \n   leaf_func_p = leaf_function_p ();\n-  main_p = ! strcmp (\"main\", current_function_name);\n+  main_p = MAIN_NAME_P (DECL_NAME (current_function_decl));\n \n   /* For now, we compute all these facts about the function, but don't\n      take any action based on the information.  */"}, {"sha": "477f98964aa61651c3c9f304890ae1d889421b15", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "patch": "@@ -7659,7 +7659,7 @@ build_mips16_function_stub (FILE *file)\n \t\t\t build_function_type (void_type_node, NULL_TREE));\n   DECL_SECTION_NAME (stubdecl) = build_string (strlen (secname), secname);\n \n-  fprintf (file, \"\\t# Stub function for %s (\", current_function_name);\n+  fprintf (file, \"\\t# Stub function for %s (\", current_function_name ());\n   need_comma = 0;\n   for (f = (unsigned int) current_function_args_info.fp_code; f != 0; f >>= 2)\n     {"}, {"sha": "049b541a4ac3b5132febd85f9c008c5fed1dfe29", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "patch": "@@ -148,7 +148,8 @@ pdp11_output_function_prologue (FILE *stream, HOST_WIDE_INT size)\n     int via_ac = -1;\n \n     fprintf (stream,\n-\t     \"\\n\\t;\t/* function prologue %s*/\\n\", current_function_name);\n+\t     \"\\n\\t;\t/* function prologue %s*/\\n\",\n+\t     current_function_name ());\n \n     /* if we are outputting code for main, \n        the switch FPU to right mode if TARGET_FPU */"}, {"sha": "02f095a19b3bfb83cf479b231f73bdd24f36c1f5", "filename": "gcc/function.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "patch": "@@ -6408,8 +6408,6 @@ allocate_struct_function (tree fndecl)\n   DECL_SAVED_INSNS (fndecl) = cfun;\n   cfun->decl = fndecl;\n \n-  current_function_name = (*lang_hooks.decl_printable_name) (fndecl, 2);\n-\n   result = DECL_RESULT (fndecl);\n   if (aggregate_value_p (result, fndecl))\n     {\n@@ -8070,4 +8068,11 @@ init_function_once (void)\n   VARRAY_INT_INIT (sibcall_epilogue, 0, \"sibcall_epilogue\");\n }\n \n+/* Returns the name of the current function.  */\n+const char *\n+current_function_name (void)\n+{\n+  return (*lang_hooks.decl_printable_name) (cfun->decl, 2);\n+}\n+\n #include \"gt-function.h\""}, {"sha": "088fbbb53205e90d651b6f0a3830e72f2b49f1e8", "filename": "gcc/function.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "patch": "@@ -183,9 +183,6 @@ struct function GTY(())\n \n   /* For function.c.  */\n \n-  /* Name of this function.  */\n-  const char *name;\n-\n   /* Points to the FUNCTION_DECL of this function.  */\n   tree decl;\n \n@@ -534,7 +531,6 @@ extern int virtuals_instantiated;\n extern int trampolines_created;\n \n /* For backward compatibility... eventually these should all go away.  */\n-#define current_function_name (cfun->name)\n #define current_function_pops_args (cfun->pops_args)\n #define current_function_returns_struct (cfun->returns_struct)\n #define current_function_returns_pcc_struct (cfun->returns_pcc_struct)\n@@ -638,6 +634,9 @@ extern rtx get_arg_pointer_save_area (struct function *);\n \n extern void init_virtual_regs (struct emit_status *);\n \n+/* Returns the name of the current function.  */\n+extern const char *current_function_name (void);\n+\n /* Called once, at initialization, to initialize function.c.  */\n extern void init_function_once (void);\n "}, {"sha": "f3656c19d47c853e9e9861d1991593fc9dc26c53", "filename": "gcc/gcse.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "patch": "@@ -855,7 +855,7 @@ gcse_main (rtx f, FILE *file)\n   if (file)\n     {\n       fprintf (file, \"GCSE of %s: %d basic blocks, \",\n-\t       current_function_name, n_basic_blocks);\n+\t       current_function_name (), n_basic_blocks);\n       fprintf (file, \"%d pass%s, %d bytes\\n\\n\",\n \t       pass, pass > 1 ? \"es\" : \"\", max_pass_bytes);\n     }\n@@ -3614,7 +3614,7 @@ one_classic_gcse_pass (int pass)\n     {\n       fprintf (gcse_file, \"\\n\");\n       fprintf (gcse_file, \"GCSE of %s, pass %d: %d bytes needed, %d substs,\",\n-\t       current_function_name, pass, bytes_used, gcse_subst_count);\n+\t       current_function_name (), pass, bytes_used, gcse_subst_count);\n       fprintf (gcse_file, \"%d insns created\\n\", gcse_create_count);\n     }\n \n@@ -4686,7 +4686,7 @@ one_cprop_pass (int pass, int cprop_jumps, int bypass_jumps)\n   if (gcse_file)\n     {\n       fprintf (gcse_file, \"CPROP of %s, pass %d: %d bytes needed, \",\n-\t       current_function_name, pass, bytes_used);\n+\t       current_function_name (), pass, bytes_used);\n       fprintf (gcse_file, \"%d const props, %d copy props\\n\\n\",\n \t       const_prop_count, copy_prop_count);\n     }\n@@ -5788,7 +5788,7 @@ one_pre_gcse_pass (int pass)\n   if (gcse_file)\n     {\n       fprintf (gcse_file, \"\\nPRE GCSE of %s, pass %d: %d bytes needed, \",\n-\t       current_function_name, pass, bytes_used);\n+\t       current_function_name (), pass, bytes_used);\n       fprintf (gcse_file, \"%d substs, %d insns created\\n\",\n \t       gcse_subst_count, gcse_create_count);\n     }\n@@ -8017,7 +8017,7 @@ bypass_jumps (FILE *file)\n   if (file)\n     {\n       fprintf (file, \"BYPASS of %s: %d basic blocks, \",\n-\t       current_function_name, n_basic_blocks);\n+\t       current_function_name (), n_basic_blocks);\n       fprintf (file, \"%d bytes\\n\\n\", bytes_used);\n     }\n "}, {"sha": "26c866d8291a953041abedc90fd00dfab3b0c86c", "filename": "gcc/graph.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faed5cc356c09c41cdbc7de97ef2520c7f5a805d/gcc%2Fgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraph.c?ref=faed5cc356c09c41cdbc7de97ef2520c7f5a805d", "patch": "@@ -55,7 +55,7 @@ start_fct (FILE *fp)\n     case vcg:\n       fprintf (fp, \"\\\n graph: { title: \\\"%s\\\"\\nfolding: 1\\nhidden: 2\\nnode: { title: \\\"%s.0\\\" }\\n\",\n-\t       current_function_name, current_function_name);\n+\t       current_function_name (), current_function_name ());\n       break;\n     case no_graph:\n       break;\n@@ -71,7 +71,7 @@ start_bb (FILE *fp, int bb)\n       fprintf (fp, \"\\\n graph: {\\ntitle: \\\"%s.BB%d\\\"\\nfolding: 1\\ncolor: lightblue\\n\\\n label: \\\"basic block %d\",\n-\t       current_function_name, bb, bb);\n+\t       current_function_name (), bb, bb);\n       break;\n     case no_graph:\n       break;\n@@ -113,8 +113,8 @@ node_data (FILE *fp, rtx tmp_rtx)\n \tcase vcg:\n \t  fprintf (fp, \"\\\n edge: { sourcename: \\\"%s.0\\\" targetname: \\\"%s.%d\\\" }\\n\",\n-\t\t   current_function_name,\n-\t\t   current_function_name, XINT (tmp_rtx, 0));\n+\t\t   current_function_name (),\n+\t\t   current_function_name (), XINT (tmp_rtx, 0));\n \t  break;\n \tcase no_graph:\n \t  break;\n@@ -126,7 +126,7 @@ edge: { sourcename: \\\"%s.0\\\" targetname: \\\"%s.%d\\\" }\\n\",\n     case vcg:\n       fprintf (fp, \"node: {\\n  title: \\\"%s.%d\\\"\\n  color: %s\\n  \\\n label: \\\"%s %d\\n\",\n-\t       current_function_name, XINT (tmp_rtx, 0),\n+\t       current_function_name (), XINT (tmp_rtx, 0),\n \t       GET_CODE (tmp_rtx) == NOTE ? \"lightgrey\"\n \t       : GET_CODE (tmp_rtx) == INSN ? \"green\"\n \t       : GET_CODE (tmp_rtx) == JUMP_INSN ? \"darkgreen\"\n@@ -178,8 +178,8 @@ draw_edge (FILE *fp, int from, int to, int bb_edge, int class)\n \tcolor = \"color: green \";\n       fprintf (fp,\n \t       \"edge: { sourcename: \\\"%s.%d\\\" targetname: \\\"%s.%d\\\" %s\",\n-\t       current_function_name, from,\n-\t       current_function_name, to, color);\n+\t       current_function_name (), from,\n+\t       current_function_name (), to, color);\n       if (class)\n \tfprintf (fp, \"class: %d \", class);\n       fputs (\"}\\n\", fp);\n@@ -209,7 +209,7 @@ end_fct (FILE *fp)\n     {\n     case vcg:\n       fprintf (fp, \"node: { title: \\\"%s.999999\\\" label: \\\"END\\\" }\\n}\\n\",\n-\t       current_function_name);\n+\t       current_function_name ());\n       break;\n     case no_graph:\n       break;"}]}