{"sha": "a04739cb173e53b73d3b451d336d63bcb33f1566", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA0NzM5Y2IxNzNlNTNiNzNkM2I0NTFkMzM2ZDYzYmNiMzNmMTU2Ng==", "commit": {"author": {"name": "Roland McGrath", "email": "mcgrathr@google.com", "date": "2012-06-11T20:42:20Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-06-11T20:42:20Z"}, "message": "Roland McGrath  <mcgrathr@google.com>\n\n\t* dwarf2out.c (const_ok_for_output_1): Detect a TLS UNSPEC using\n\tSYMBOL_REF_TLS_MODEL rather than DECL_THREAD_LOCAL_P, in case it's\n\tnot a VAR_DECL.  Also don't limit it to UNSPECs with exactly one\n\toperand.\n\nFrom-SVN: r188398", "tree": {"sha": "c7ebdf0a44ddb7c9615aecb8bb202ff64ccf4157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7ebdf0a44ddb7c9615aecb8bb202ff64ccf4157"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a04739cb173e53b73d3b451d336d63bcb33f1566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04739cb173e53b73d3b451d336d63bcb33f1566", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a04739cb173e53b73d3b451d336d63bcb33f1566", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04739cb173e53b73d3b451d336d63bcb33f1566/comments", "author": {"login": "frobtech", "id": 972096, "node_id": "MDQ6VXNlcjk3MjA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/972096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frobtech", "html_url": "https://github.com/frobtech", "followers_url": "https://api.github.com/users/frobtech/followers", "following_url": "https://api.github.com/users/frobtech/following{/other_user}", "gists_url": "https://api.github.com/users/frobtech/gists{/gist_id}", "starred_url": "https://api.github.com/users/frobtech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frobtech/subscriptions", "organizations_url": "https://api.github.com/users/frobtech/orgs", "repos_url": "https://api.github.com/users/frobtech/repos", "events_url": "https://api.github.com/users/frobtech/events{/privacy}", "received_events_url": "https://api.github.com/users/frobtech/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f9f472bd6a3080e0be5aed7c05f05c65abbf2fb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f472bd6a3080e0be5aed7c05f05c65abbf2fb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9f472bd6a3080e0be5aed7c05f05c65abbf2fb2"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "bf972d0614c8ac167fd49e4603c1d4f20f5a251b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04739cb173e53b73d3b451d336d63bcb33f1566/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04739cb173e53b73d3b451d336d63bcb33f1566/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a04739cb173e53b73d3b451d336d63bcb33f1566", "patch": "@@ -1,3 +1,10 @@\n+2012-06-11  Roland McGrath  <mcgrathr@google.com>\n+\n+\t* dwarf2out.c (const_ok_for_output_1): Detect a TLS UNSPEC using\n+\tSYMBOL_REF_TLS_MODEL rather than DECL_THREAD_LOCAL_P, in case it's\n+\tnot a VAR_DECL.  Also don't limit it to UNSPECs with exactly one\n+\toperand.\n+\n 2012-06-11  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/53511"}, {"sha": "3fd51fdb3b82f5cacafefc2270eda9e2c7c6d387", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a04739cb173e53b73d3b451d336d63bcb33f1566/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a04739cb173e53b73d3b451d336d63bcb33f1566/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a04739cb173e53b73d3b451d336d63bcb33f1566", "patch": "@@ -10129,12 +10129,12 @@ const_ok_for_output_1 (rtx *rtlp, void *data ATTRIBUTE_UNUSED)\n \t we can't express it in the debug info.  */\n #ifdef ENABLE_CHECKING\n       /* Don't complain about TLS UNSPECs, those are just too hard to\n-\t delegitimize.  */\n-      if (XVECLEN (rtl, 0) != 1\n+\t delegitimize.  Note this could be a non-decl SYMBOL_REF such as\n+\t one in a constant pool entry, so testing SYMBOL_REF_TLS_MODEL\n+\t rather than DECL_THREAD_LOCAL_P is not just an optimization.  */\n+      if (XVECLEN (rtl, 0) == 0\n \t  || GET_CODE (XVECEXP (rtl, 0, 0)) != SYMBOL_REF\n-\t  || SYMBOL_REF_DECL (XVECEXP (rtl, 0, 0)) == NULL\n-\t  || TREE_CODE (SYMBOL_REF_DECL (XVECEXP (rtl, 0, 0))) != VAR_DECL\n-\t  || !DECL_THREAD_LOCAL_P (SYMBOL_REF_DECL (XVECEXP (rtl, 0, 0))))\n+\t  || SYMBOL_REF_TLS_MODEL (XVECEXP (rtl, 0, 0)) == TLS_MODEL_NONE)\n \tinform (current_function_decl\n \t\t? DECL_SOURCE_LOCATION (current_function_decl)\n \t\t: UNKNOWN_LOCATION,"}]}