{"sha": "642746839c4e86df01d0a6b34dd945ae10db7bc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQyNzQ2ODM5YzRlODZkZjAxZDBhNmIzNGRkOTQ1YWUxMGRiN2JjNw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-11-08T20:44:56Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-11-08T20:44:56Z"}, "message": "df-problems.c: Fix documentation for forward simulation of LR.\n\n2009-11-08  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* df-problems.c: Fix documentation for forward simulation of LR.\n\t(df_simulate_one_insn_forwards): Use df_simulate_find_defs.\n\t(df_simulate_finalize_forwards): Remove.\n\t* df.h (df_simulate_finalize_forwards): Remove.\n\nFrom-SVN: r154012", "tree": {"sha": "edcc85fbcd88b528cb2ca100cd3cd7cab5d4e1bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edcc85fbcd88b528cb2ca100cd3cd7cab5d4e1bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/642746839c4e86df01d0a6b34dd945ae10db7bc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/642746839c4e86df01d0a6b34dd945ae10db7bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/642746839c4e86df01d0a6b34dd945ae10db7bc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/642746839c4e86df01d0a6b34dd945ae10db7bc7/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "379c6f48323d84640401189d7a3de619520bee1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/379c6f48323d84640401189d7a3de619520bee1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/379c6f48323d84640401189d7a3de619520bee1f"}], "stats": {"total": 60, "additions": 29, "deletions": 31}, "files": [{"sha": "845e28250b220210de5cd9e009abef1667b3a49e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/642746839c4e86df01d0a6b34dd945ae10db7bc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/642746839c4e86df01d0a6b34dd945ae10db7bc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=642746839c4e86df01d0a6b34dd945ae10db7bc7", "patch": "@@ -1,3 +1,10 @@\n+2009-11-08  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* df-problems.c: Fix documentation for forward simulation of LR.\n+\t(df_simulate_one_insn_forwards): Use df_simulate_find_defs.\n+\t(df_simulate_finalize_forwards): Remove.\n+\t* df.h (df_simulate_finalize_forwards): Remove.\n+\n 2009-11-08  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (build_succ_graph): Properly make"}, {"sha": "5aad97afeaf1086272ec4ee9516308f4a662830a", "filename": "gcc/df-problems.c", "status": "modified", "additions": 22, "deletions": 30, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/642746839c4e86df01d0a6b34dd945ae10db7bc7/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/642746839c4e86df01d0a6b34dd945ae10db7bc7/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=642746839c4e86df01d0a6b34dd945ae10db7bc7", "patch": "@@ -3722,9 +3722,11 @@ df_note_add_problem (void)\n \n    You can either simulate in the forwards direction, starting from\n    the top of a block or the backwards direction from the end of the\n-   block.  The main difference is that if you go forwards, the uses\n-   are examined first then the defs, and if you go backwards, the defs\n-   are examined first then the uses.\n+   block.  If you go backwards, defs are examined first to clear bits,\n+   then uses are examined to set bits.  If you go forwards, defs are\n+   examined first to set bits, then REG_DEAD and REG_UNUSED notes\n+   are examined to clear bits.  In either case, the result of examining\n+   a def can be undone (respectively by a use or a REG_UNUSED note).\n \n    If you start at the top of the block, use one of DF_LIVE_IN or\n    DF_LR_IN.  If you start at the bottom of the block use one of\n@@ -3814,7 +3816,7 @@ df_simulate_fixup_sets (basic_block bb, bitmap live)\n    df_simulate_initialize_backwards should be called first with a\n    bitvector copyied from the DF_LIVE_OUT or DF_LR_OUT.  Then\n    df_simulate_one_insn_backwards should be called for each insn in\n-   the block, starting with the last on.  Finally,\n+   the block, starting with the last one.  Finally,\n    df_simulate_finalize_backwards can be called to get a new value\n    of the sets at the top of the block (this is rarely used).\n    ----------------------------------------------------------------------------*/\n@@ -3896,13 +3898,16 @@ df_simulate_finalize_backwards (basic_block bb, bitmap live)\n    df_simulate_initialize_forwards should be called first with a\n    bitvector copyied from the DF_LIVE_IN or DF_LR_IN.  Then\n    df_simulate_one_insn_forwards should be called for each insn in\n-   the block, starting with the last on.  Finally,\n-   df_simulate_finalize_forwards can be called to get a new value\n-   of the sets at the bottom of the block (this is rarely used).\n+   the block, starting with the first one.\n    ----------------------------------------------------------------------------*/\n \n-/* Apply the artificial uses and defs at the top of BB in a backwards\n-   direction.  */\n+/* Apply the artificial uses and defs at the top of BB in a forwards\n+   direction.  ??? This is wrong; defs mark the point where a pseudo\n+   becomes live when scanning forwards (unless a def is unused).  Since\n+   there are no REG_UNUSED notes for artificial defs, passes that\n+   require artificial defs probably should not call this function\n+   unless (as is the case for fwprop) they are correct when liveness\n+   bitmaps are *under*estimated.  */\n \n void \n df_simulate_initialize_forwards (basic_block bb, bitmap live)\n@@ -3918,7 +3923,7 @@ df_simulate_initialize_forwards (basic_block bb, bitmap live)\n     }\n }\n \n-/* Simulate the backwards effects of INSN on the bitmap LIVE.  */\n+/* Simulate the forwards effects of INSN on the bitmap LIVE.  */\n \n void \n df_simulate_one_insn_forwards (basic_block bb, rtx insn, bitmap live)\n@@ -3927,10 +3932,15 @@ df_simulate_one_insn_forwards (basic_block bb, rtx insn, bitmap live)\n   if (! INSN_P (insn))\n     return;\t\n \n-  /* Make sure that the DF_NOTES really is an active df problem.  */ \n+  /* Make sure that DF_NOTE really is an active df problem.  */ \n   gcc_assert (df_note);\n \n-  df_simulate_defs (insn, live);\n+  /* Note that this is the opposite as how the problem is defined, because\n+     in the LR problem defs _kill_ liveness.  However, they do so backwards,\n+     while here the scan is performed forwards!  So, first assume that the\n+     def is live, and if this is not true REG_UNUSED notes will rectify the\n+     situation.  */\n+  df_simulate_find_defs (insn, live);\n \n   /* Clear all of the registers that go dead.  */\n   for (link = REG_NOTES (insn); link; link = XEXP (link, 1))\n@@ -3960,24 +3970,6 @@ df_simulate_one_insn_forwards (basic_block bb, rtx insn, bitmap live)\n }\n \n \n-/* Apply the artificial uses and defs at the end of BB in a backwards\n-   direction.  */\n-\n-void \n-df_simulate_finalize_forwards (basic_block bb, bitmap live)\n-{\n-  df_ref *def_rec;\n-  int bb_index = bb->index;\n-  \n-  for (def_rec = df_get_artificial_defs (bb_index); *def_rec; def_rec++)\n-    {\n-      df_ref def = *def_rec;\n-      if ((DF_REF_FLAGS (def) & DF_REF_AT_TOP) == 0)\n-\tbitmap_clear_bit (live, DF_REF_REGNO (def));\n-    }\n-}\n-\n-\n \f\n /*----------------------------------------------------------------------------\n    MULTIPLE DEFINITIONS"}, {"sha": "0614983bc7dbf512822a06f016ac981258715530", "filename": "gcc/df.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/642746839c4e86df01d0a6b34dd945ae10db7bc7/gcc%2Fdf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/642746839c4e86df01d0a6b34dd945ae10db7bc7/gcc%2Fdf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.h?ref=642746839c4e86df01d0a6b34dd945ae10db7bc7", "patch": "@@ -985,7 +985,6 @@ extern void df_simulate_one_insn_backwards (basic_block, rtx, bitmap);\n extern void df_simulate_finalize_backwards (basic_block, bitmap);\n extern void df_simulate_initialize_forwards (basic_block, bitmap);\n extern void df_simulate_one_insn_forwards (basic_block, rtx, bitmap);\n-extern void df_simulate_finalize_forwards (basic_block, bitmap);\n \n /* Functions defined in df-scan.c.  */\n "}]}