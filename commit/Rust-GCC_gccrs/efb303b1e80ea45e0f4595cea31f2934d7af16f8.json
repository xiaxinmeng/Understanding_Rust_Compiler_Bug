{"sha": "efb303b1e80ea45e0f4595cea31f2934d7af16f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZiMzAzYjFlODBlYTQ1ZTBmNDU5NWNlYTMxZjI5MzRkN2FmMTZmOA==", "commit": {"author": {"name": "Olatunji Ruwase", "email": "tjruwase@google.com", "date": "2009-06-26T18:10:03Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-06-26T18:10:03Z"}, "message": "builtins.c (expand_builtin_alloca): Handle builtin alloca that is marked not to be inlined.\n\n\t* builtins.c (expand_builtin_alloca): Handle builtin alloca\n\tthat is marked not to be inlined. Remove flag_mudflap use.\n\t* tree-mudflap.c: Rename mf_xform_derefs to mf_xfrom_statements.\n\t(mf_xform_statements): Mark builtin alloca calls as un-inlineable.\n\nFrom-SVN: r148980", "tree": {"sha": "c678b61dfc527900843787a7f2b7ab998a25fa29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c678b61dfc527900843787a7f2b7ab998a25fa29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efb303b1e80ea45e0f4595cea31f2934d7af16f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb303b1e80ea45e0f4595cea31f2934d7af16f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efb303b1e80ea45e0f4595cea31f2934d7af16f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efb303b1e80ea45e0f4595cea31f2934d7af16f8/comments", "author": null, "committer": null, "parents": [{"sha": "947e21c1fb25286b3c5e63fc3cd19c4318ee3672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/947e21c1fb25286b3c5e63fc3cd19c4318ee3672", "html_url": "https://github.com/Rust-GCC/gccrs/commit/947e21c1fb25286b3c5e63fc3cd19c4318ee3672"}], "stats": {"total": 48, "additions": 35, "deletions": 13}, "files": [{"sha": "744aaf7ce0ea7c926bb840a73bec03424c0303ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb303b1e80ea45e0f4595cea31f2934d7af16f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb303b1e80ea45e0f4595cea31f2934d7af16f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efb303b1e80ea45e0f4595cea31f2934d7af16f8", "patch": "@@ -1,3 +1,10 @@\n+2009-06-26  Olatunji Ruwase  <tjruwase@google.com>\n+\n+\t* builtins.c (expand_builtin_alloca): Handle builtin alloca\n+\tthat is marked not to be inlined. Remove flag_mudflap use.\n+\t* tree-mudflap.c: Rename mf_xform_derefs to mf_xfrom_statements.\n+\t(mf_xform_statements): Mark builtin alloca calls as un-inlineable.\n+\n 2009-06-26  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR bootstrap/40338"}, {"sha": "7fdb4f034280a32ecf3bd7934b94fd8a17412a83", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb303b1e80ea45e0f4595cea31f2934d7af16f8/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb303b1e80ea45e0f4595cea31f2934d7af16f8/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=efb303b1e80ea45e0f4595cea31f2934d7af16f8", "patch": "@@ -5182,10 +5182,8 @@ expand_builtin_alloca (tree exp, rtx target)\n   rtx op0;\n   rtx result;\n \n-  /* In -fmudflap-instrumented code, alloca() and __builtin_alloca()\n-     should always expand to function calls.  These can be intercepted\n-     in libmudflap.  */\n-  if (flag_mudflap)\n+  /* Emit normal call if marked not-inlineable.  */\n+  if (CALL_CANNOT_INLINE_P (exp)) \n     return NULL_RTX;\n \n   if (!validate_arglist (exp, INTEGER_TYPE, VOID_TYPE))"}, {"sha": "8fcafca4b8fbfb09ba5b7bd96e8638c782f987d9", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efb303b1e80ea45e0f4595cea31f2934d7af16f8/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efb303b1e80ea45e0f4595cea31f2934d7af16f8/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=efb303b1e80ea45e0f4595cea31f2934d7af16f8", "patch": "@@ -62,7 +62,7 @@ static tree mf_file_function_line_tree (location_t);\n /* Indirection-related instrumentation.  */\n static void mf_decl_cache_locals (void);\n static void mf_decl_clear_locals (void);\n-static void mf_xform_derefs (void);\n+static void mf_xform_statements (void);\n static unsigned int execute_mudflap_function_ops (void);\n \n /* Addressable variables instrumentation.  */\n@@ -416,13 +416,19 @@ mudflap_init (void)\n \n \n /* ------------------------------------------------------------------------ */\n-/* Memory reference transforms. Perform the mudflap indirection-related\n-   tree transforms on the current function.\n-\n-   This is the second part of the mudflap instrumentation.  It works on\n+/* This is the second part of the mudflap instrumentation.  It works on\n    low-level GIMPLE using the CFG, because we want to run this pass after\n    tree optimizations have been performed, but we have to preserve the CFG\n-   for expansion from trees to RTL.  */\n+   for expansion from trees to RTL. \n+   Below is the list of transformations performed on statements in the \n+   current function.\n+\n+ 1)  Memory reference transforms: Perform the mudflap indirection-related\n+    tree transforms on memory references.\n+\n+ 2) Mark BUILTIN_ALLOCA calls not inlineable.\n+\n+ */\n \n static unsigned int\n execute_mudflap_function_ops (void)\n@@ -441,7 +447,7 @@ execute_mudflap_function_ops (void)\n   if (! flag_mudflap_threads)\n     mf_decl_cache_locals ();\n \n-  mf_xform_derefs ();\n+  mf_xform_statements ();\n \n   if (! flag_mudflap_threads)\n     mf_decl_clear_locals ();\n@@ -934,9 +940,12 @@ mf_xform_derefs_1 (gimple_stmt_iterator *iter, tree *tp,\n \n   mf_build_check_statement_for (base, limit, iter, location, dirflag);\n }\n-\n+/* Transform \n+   1) Memory references. \n+   2) BUILTIN_ALLOCA calls. \n+*/\n static void\n-mf_xform_derefs (void)\n+mf_xform_statements (void)\n {\n   basic_block bb, next;\n   gimple_stmt_iterator i;\n@@ -974,6 +983,14 @@ mf_xform_derefs (void)\n                 }\n               break;\n \n+            case GIMPLE_CALL:\n+              {\n+                tree fndecl = gimple_call_fndecl (s);\n+                if (fndecl && (DECL_FUNCTION_CODE (fndecl) == BUILT_IN_ALLOCA)) \n+                  gimple_call_set_cannot_inline (s, true);\n+              }\n+              break;\n+              \n             default:\n               ;\n             }"}]}