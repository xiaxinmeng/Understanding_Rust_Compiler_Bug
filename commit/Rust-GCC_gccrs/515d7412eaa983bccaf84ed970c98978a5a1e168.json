{"sha": "515d7412eaa983bccaf84ed970c98978a5a1e168", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE1ZDc0MTJlYWE5ODNiY2NhZjg0ZWQ5NzBjOTg5NzhhNWExZTE2OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-05-12T08:32:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-05-12T08:32:31Z"}, "message": "sse.md (*vec_setv4sf_sse4_1, [...]): Use v constraint instead of x in avx alternatives.\n\n\t* config/i386/sse.md (*vec_setv4sf_sse4_1, sse4_1_insertps): Use v\n\tconstraint instead of x in avx alternatives.  Use maybe_evex instead\n\tof vex prefix.\n\n\t* gcc.target/i386/avx512vl-vinsertps-1.c: New test.\n\nFrom-SVN: r236162", "tree": {"sha": "9894ce1badf53b58a1d3d9c2ad68f6a31e069726", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9894ce1badf53b58a1d3d9c2ad68f6a31e069726"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/515d7412eaa983bccaf84ed970c98978a5a1e168", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515d7412eaa983bccaf84ed970c98978a5a1e168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/515d7412eaa983bccaf84ed970c98978a5a1e168", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/515d7412eaa983bccaf84ed970c98978a5a1e168/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40bd4bf95e68e252afdf863f1c3d5f22e30f819e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40bd4bf95e68e252afdf863f1c3d5f22e30f819e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40bd4bf95e68e252afdf863f1c3d5f22e30f819e"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "caae23a5ab593768b1759bb4c2935d32701b996a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515d7412eaa983bccaf84ed970c98978a5a1e168/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515d7412eaa983bccaf84ed970c98978a5a1e168/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=515d7412eaa983bccaf84ed970c98978a5a1e168", "patch": "@@ -1,5 +1,9 @@\n 2016-05-12  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/sse.md (*vec_setv4sf_sse4_1, sse4_1_insertps): Use v\n+\tconstraint instead of x in avx alternatives.  Use maybe_evex instead\n+\tof vex prefix.\n+\n \t* config/i386/constraints.md (Yv): New constraint.\n \t* config/i386/i386.h (VALID_AVX512VL_128_REG_MODE): Allow\n \tTFmode and V1TImode in xmm16+ registers for TARGET_AVX512VL."}, {"sha": "c2c7c8da4e82f9b7c321fa2d78aac5a2f7a09b9b", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515d7412eaa983bccaf84ed970c98978a5a1e168/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515d7412eaa983bccaf84ed970c98978a5a1e168/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=515d7412eaa983bccaf84ed970c98978a5a1e168", "patch": "@@ -6657,11 +6657,11 @@\n \n ;; A subset is vec_setv4sf.\n (define_insn \"*vec_setv4sf_sse4_1\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=Yr,*x,x\")\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=Yr,*x,v\")\n \t(vec_merge:V4SF\n \t  (vec_duplicate:V4SF\n-\t    (match_operand:SF 2 \"nonimmediate_operand\" \"Yrm,*xm,xm\"))\n-\t  (match_operand:V4SF 1 \"register_operand\" \"0,0,x\")\n+\t    (match_operand:SF 2 \"nonimmediate_operand\" \"Yrm,*xm,vm\"))\n+\t  (match_operand:V4SF 1 \"register_operand\" \"0,0,v\")\n \t  (match_operand:SI 3 \"const_int_operand\")))]\n   \"TARGET_SSE4_1\n    && ((unsigned) exact_log2 (INTVAL (operands[3]))\n@@ -6684,13 +6684,13 @@\n    (set_attr \"prefix_data16\" \"1,1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"orig,orig,vex\")\n+   (set_attr \"prefix\" \"orig,orig,maybe_evex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n (define_insn \"sse4_1_insertps\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=Yr,*x,x\")\n-\t(unspec:V4SF [(match_operand:V4SF 2 \"nonimmediate_operand\" \"Yrm,*xm,xm\")\n-\t\t      (match_operand:V4SF 1 \"register_operand\" \"0,0,x\")\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=Yr,*x,v\")\n+\t(unspec:V4SF [(match_operand:V4SF 2 \"nonimmediate_operand\" \"Yrm,*xm,vm\")\n+\t\t      (match_operand:V4SF 1 \"register_operand\" \"0,0,v\")\n \t\t      (match_operand:SI 3 \"const_0_to_255_operand\" \"n,n,n\")]\n \t\t     UNSPEC_INSERTPS))]\n   \"TARGET_SSE4_1\"\n@@ -6718,7 +6718,7 @@\n    (set_attr \"prefix_data16\" \"1,1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"orig,orig,vex\")\n+   (set_attr \"prefix\" \"orig,orig,maybe_evex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n (define_split"}, {"sha": "31f7bc200823d13fd96b12f111e80bb72ed8b8e8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515d7412eaa983bccaf84ed970c98978a5a1e168/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515d7412eaa983bccaf84ed970c98978a5a1e168/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=515d7412eaa983bccaf84ed970c98978a5a1e168", "patch": "@@ -1,5 +1,7 @@\n 2016-05-12  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gcc.target/i386/avx512vl-vinsertps-1.c: New test.\n+\n \t* gcc.target/i386/avx512dq-abs-copysign-1.c: New test.\n \t* gcc.target/i386/avx512vl-abs-copysign-1.c: New test.\n \t* gcc.target/i386/avx512vl-abs-copysign-2.c: New test."}, {"sha": "ccadcc74d12917f1a842f7487aa7222286abc439", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-vinsertps-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/515d7412eaa983bccaf84ed970c98978a5a1e168/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vinsertps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/515d7412eaa983bccaf84ed970c98978a5a1e168/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vinsertps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-vinsertps-1.c?ref=515d7412eaa983bccaf84ed970c98978a5a1e168", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -mavx512vl\" } */\n+\n+#include <x86intrin.h>\n+\n+__m128\n+f1 (__m128 a, __m128 b)\n+{\n+  register __m128 c __asm (\"xmm16\") = a;\n+  asm volatile (\"\" : \"+v\" (c));\n+  c = _mm_insert_ps (c, b, 1);\n+  asm volatile (\"\" : \"+v\" (c));\n+  return c;\n+}\n+\n+/* { dg-final { scan-assembler \"vinsertps\\[^\\n\\r\\]*xmm16\" } } */\n+\n+__v4sf\n+f2 (__v4sf a, float b)\n+{\n+  register __v4sf c __asm (\"xmm17\") = a;\n+  asm volatile (\"\" : \"+v\" (c));\n+  c[1] = b;\n+  asm volatile (\"\" : \"+v\" (c));\n+  return c;\n+}\n+\n+/* { dg-final { scan-assembler \"vinsertps\\[^\\n\\r\\]*xmm17\" } } */\n+\n+__v4sf\n+f3 (__v4sf a, float b)\n+{\n+  register float c __asm (\"xmm18\") = b;\n+  asm volatile (\"\" : \"+v\" (c));\n+  a[1] = c;\n+  return a;\n+}\n+\n+/* { dg-final { scan-assembler \"vinsertps\\[^\\n\\r\\]*xmm18\" } } */"}]}