{"sha": "437bcafa1adcc9693a6437b410c98e17b1f78dbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM3YmNhZmExYWRjYzk2OTNhNjQzN2I0MTBjOThlMTdiMWY3OGRiZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-10-04T07:40:07Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-10-04T07:40:07Z"}, "message": "* config/sparc/sparc.c (sparc_fold_builtin): Use a sequence of tests.\n\nFrom-SVN: r179493", "tree": {"sha": "f7529d05f44cb01bd818dc18ad82197b474634ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7529d05f44cb01bd818dc18ad82197b474634ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/437bcafa1adcc9693a6437b410c98e17b1f78dbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437bcafa1adcc9693a6437b410c98e17b1f78dbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/437bcafa1adcc9693a6437b410c98e17b1f78dbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437bcafa1adcc9693a6437b410c98e17b1f78dbe/comments", "author": null, "committer": null, "parents": [{"sha": "aecb6197237d88797df2334cd20c89697a54c438", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aecb6197237d88797df2334cd20c89697a54c438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aecb6197237d88797df2334cd20c89697a54c438"}], "stats": {"total": 39, "additions": 21, "deletions": 18}, "files": [{"sha": "886d22743c60b7c7fff7c49ebe8ccb8b89eec309", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437bcafa1adcc9693a6437b410c98e17b1f78dbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437bcafa1adcc9693a6437b410c98e17b1f78dbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=437bcafa1adcc9693a6437b410c98e17b1f78dbe", "patch": "@@ -1,3 +1,7 @@\n+2011-10-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/sparc.c (sparc_fold_builtin): Use a sequence of tests.\n+\n 2011-10-04  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* longlong.h (smul_ppmm, sdiv_qrnnd): Add underscores to the local"}, {"sha": "5e67b4c0093713f3b9e6496219af61eb072cfc6b", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437bcafa1adcc9693a6437b410c98e17b1f78dbe/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437bcafa1adcc9693a6437b410c98e17b1f78dbe/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=437bcafa1adcc9693a6437b410c98e17b1f78dbe", "patch": "@@ -9716,24 +9716,23 @@ sparc_fold_builtin (tree fndecl, int n_args ATTRIBUTE_UNUSED,\n \n   if (ignore)\n     {\n-      switch (icode)\n-\t{\n-\tcase CODE_FOR_alignaddrsi_vis:\n-\tcase CODE_FOR_alignaddrdi_vis:\n-\tcase CODE_FOR_wrgsr_vis:\n-\tcase CODE_FOR_bmasksi_vis:\n-\tcase CODE_FOR_bmaskdi_vis:\n-\tcase CODE_FOR_cmask8si_vis:\n-\tcase CODE_FOR_cmask8di_vis:\n-\tcase CODE_FOR_cmask16si_vis:\n-\tcase CODE_FOR_cmask16di_vis:\n-\tcase CODE_FOR_cmask32si_vis:\n-\tcase CODE_FOR_cmask32di_vis:\n-\t  break;\n-\n-\tdefault:\n-\t  return build_zero_cst (rtype);\n-\t}\n+      /* Note that a switch statement instead of the sequence of tests would\n+\t be incorrect as many of the CODE_FOR values could be CODE_FOR_nothing\n+\t and that would yield multiple alternatives with identical values.  */\n+      if (icode == CODE_FOR_alignaddrsi_vis\n+\t  || icode == CODE_FOR_alignaddrdi_vis\n+\t  || icode == CODE_FOR_wrgsr_vis\n+\t  || icode == CODE_FOR_bmasksi_vis\n+\t  || icode == CODE_FOR_bmaskdi_vis\n+\t  || icode == CODE_FOR_cmask8si_vis\n+\t  || icode == CODE_FOR_cmask8di_vis\n+\t  || icode == CODE_FOR_cmask16si_vis\n+\t  || icode == CODE_FOR_cmask16di_vis\n+\t  || icode == CODE_FOR_cmask32si_vis\n+\t  || icode == CODE_FOR_cmask32di_vis)\n+\t;\n+      else\n+\treturn build_zero_cst (rtype);\n     }\n \n   switch (icode)"}]}