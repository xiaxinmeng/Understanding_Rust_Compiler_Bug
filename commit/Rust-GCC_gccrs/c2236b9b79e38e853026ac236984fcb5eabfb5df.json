{"sha": "c2236b9b79e38e853026ac236984fcb5eabfb5df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIyMzZiOWI3OWUzOGU4NTMwMjZhYzIzNjk4NGZjYjVlYWJmYjVkZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-02-26T21:52:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-02-26T21:52:39Z"}, "message": "re PR c++/84558 (ICE with invalid constexpr constructor)\n\n\tPR c++/84558\n\t* constexpr.c (cxx_eval_vec_init_1): For reuse, treat NULL eltinit like\n\ta valid constant initializer.  Formatting fixes.\n\n\t* g++.dg/cpp1y/pr84558.C: New test.\n\nFrom-SVN: r258014", "tree": {"sha": "119c4df75604d487674a25a4ec3cb8e8ab870250", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/119c4df75604d487674a25a4ec3cb8e8ab870250"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2236b9b79e38e853026ac236984fcb5eabfb5df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2236b9b79e38e853026ac236984fcb5eabfb5df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2236b9b79e38e853026ac236984fcb5eabfb5df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2236b9b79e38e853026ac236984fcb5eabfb5df/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08735f538cd94d5be5fa1b8ee79bfabc7f530a8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08735f538cd94d5be5fa1b8ee79bfabc7f530a8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08735f538cd94d5be5fa1b8ee79bfabc7f530a8a"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "14f899c1881b8ed7b325df9702c374becd0c69a8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2236b9b79e38e853026ac236984fcb5eabfb5df/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2236b9b79e38e853026ac236984fcb5eabfb5df/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c2236b9b79e38e853026ac236984fcb5eabfb5df", "patch": "@@ -1,3 +1,9 @@\n+2018-02-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/84558\n+\t* constexpr.c (cxx_eval_vec_init_1): For reuse, treat NULL eltinit like\n+\ta valid constant initializer.  Formatting fixes.\n+\n 2018-02-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/84540"}, {"sha": "b3de62a5beaaeeb4059868214c1659620a4593b0", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2236b9b79e38e853026ac236984fcb5eabfb5df/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2236b9b79e38e853026ac236984fcb5eabfb5df/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=c2236b9b79e38e853026ac236984fcb5eabfb5df", "patch": "@@ -2959,9 +2959,8 @@ cxx_eval_vec_init_1 (const constexpr_ctx *ctx, tree atype, tree init,\n \t  if (!lvalue_p (init))\n \t    eltinit = move (eltinit);\n \t  eltinit = force_rvalue (eltinit, tf_warning_or_error);\n-\t  eltinit = (cxx_eval_constant_expression\n-\t\t     (&new_ctx, eltinit, lval,\n-\t\t      non_constant_p, overflow_p));\n+\t  eltinit = cxx_eval_constant_expression (&new_ctx, eltinit, lval,\n+\t\t\t\t\t\t  non_constant_p, overflow_p);\n \t}\n       if (*non_constant_p && !ctx->quiet)\n \tbreak;\n@@ -2974,12 +2973,13 @@ cxx_eval_vec_init_1 (const constexpr_ctx *ctx, tree atype, tree init,\n       else\n \tCONSTRUCTOR_APPEND_ELT (*p, idx, eltinit);\n       /* Reuse the result of cxx_eval_constant_expression call\n-\t  from the first iteration to all others if it is a constant\n-\t  initializer that doesn't require relocations.  */\n+\t from the first iteration to all others if it is a constant\n+\t initializer that doesn't require relocations.  */\n       if (reuse\n \t  && max > 1\n-\t  && (initializer_constant_valid_p (eltinit, TREE_TYPE (eltinit))\n-\t      == null_pointer_node))\n+\t  && (eltinit == NULL_TREE\n+\t      || (initializer_constant_valid_p (eltinit, TREE_TYPE (eltinit))\n+\t\t  == null_pointer_node)))\n \t{\n \t  if (new_ctx.ctor != ctx->ctor)\n \t    eltinit = new_ctx.ctor;"}, {"sha": "11d79943b9c20eba9861f2f09fa9e388e12224d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2236b9b79e38e853026ac236984fcb5eabfb5df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2236b9b79e38e853026ac236984fcb5eabfb5df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c2236b9b79e38e853026ac236984fcb5eabfb5df", "patch": "@@ -1,3 +1,8 @@\n+2018-02-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/84558\n+\t* g++.dg/cpp1y/pr84558.C: New test.\n+\n 2018-02-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/84540"}, {"sha": "40d7ef6856196f2bb9acd9a38a35245be9bb46ef", "filename": "gcc/testsuite/g++.dg/cpp1y/pr84558.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2236b9b79e38e853026ac236984fcb5eabfb5df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr84558.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2236b9b79e38e853026ac236984fcb5eabfb5df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr84558.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr84558.C?ref=c2236b9b79e38e853026ac236984fcb5eabfb5df", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/84558\n+// { dg-do compile { target c++14 } }\n+\n+struct A { static int i; constexpr A () { i = 0; } };\n+struct B { A a[2][3][4]; };\n+B b;"}]}