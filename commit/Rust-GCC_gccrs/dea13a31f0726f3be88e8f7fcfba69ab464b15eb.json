{"sha": "dea13a31f0726f3be88e8f7fcfba69ab464b15eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVhMTNhMzFmMDcyNmYzYmU4OGU4ZjdmY2ZiYTY5YWI0NjRiMTVlYg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1997-07-15T19:22:58Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1997-07-15T19:22:58Z"}, "message": "Declare replace_regs\n\nFrom-SVN: r14447", "tree": {"sha": "a0d7d6c6b1e5c021893bd54754f8eab3fab68399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0d7d6c6b1e5c021893bd54754f8eab3fab68399"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dea13a31f0726f3be88e8f7fcfba69ab464b15eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea13a31f0726f3be88e8f7fcfba69ab464b15eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dea13a31f0726f3be88e8f7fcfba69ab464b15eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea13a31f0726f3be88e8f7fcfba69ab464b15eb/comments", "author": null, "committer": null, "parents": [{"sha": "3e8d8d4bc73b803e0db6b6169d98981020ac4d30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e8d8d4bc73b803e0db6b6169d98981020ac4d30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e8d8d4bc73b803e0db6b6169d98981020ac4d30"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "d27b4e5b8337878354c73b10c70ee1dc0b2a9963", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dea13a31f0726f3be88e8f7fcfba69ab464b15eb/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dea13a31f0726f3be88e8f7fcfba69ab464b15eb/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=dea13a31f0726f3be88e8f7fcfba69ab464b15eb", "patch": "@@ -817,6 +817,7 @@ extern enum reg_class reg_preferred_class PROTO((int));\n extern enum reg_class reg_alternate_class PROTO((int));\n \n extern rtx get_first_nonparm_insn\tPROTO((void));\n+extern rtx replace_regs\t\t\tPROTO((rtx, rtx *, int, int));\n \n /* Standard pieces of rtx, to be substituted directly into things.  */\n extern rtx pc_rtx;"}]}