{"sha": "3522a91b8029058d4b7a06d8f5b4932f6a35dfc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUyMmE5MWI4MDI5MDU4ZDRiN2EwNmQ4ZjViNDkzMmY2YTM1ZGZjNA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2002-06-07T22:06:38Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2002-06-07T22:06:38Z"}, "message": "locale-inst.cc (__codecvt_abstract_base): Put inside _GLIBCPP_USE_WCHAR_T ifdef.\n\n\t* src/locale-inst.cc (__codecvt_abstract_base):\n\tPut inside _GLIBCPP_USE_WCHAR_T ifdef.\n\t* include/bits/istream.tcc (basic_istream): Ditto.\n\t(ws) Ditto.\n\t(operator>>) Ditto.\n\t* include/bits/ostream.tcc (basic_ostream): Ditto.\n\t(endl): Ditto.\n\t(ends): Ditto.\n\t(flush): Ditto.\n\t(operator<<): Ditto.\n\nFrom-SVN: r54351", "tree": {"sha": "37358a5f163f6ea223171f6b1d61826d51578b29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37358a5f163f6ea223171f6b1d61826d51578b29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4/comments", "author": null, "committer": null, "parents": [{"sha": "6e683090d100409a80657cbeb7f741f4f94bfab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e683090d100409a80657cbeb7f741f4f94bfab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e683090d100409a80657cbeb7f741f4f94bfab7"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "960b335711b694bf6a900ec4d3b26288db722d77", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3522a91b8029058d4b7a06d8f5b4932f6a35dfc4", "patch": "@@ -1,3 +1,16 @@\n+2002-06-07  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* src/locale-inst.cc (__codecvt_abstract_base):\n+\tPut inside _GLIBCPP_USE_WCHAR_T ifdef.\n+\t* include/bits/istream.tcc (basic_istream): Ditto.\n+\t(ws) Ditto.\n+\t(operator>>) Ditto.\n+\t* include/bits/ostream.tcc (basic_ostream): Ditto. \n+\t(endl): Ditto.\n+\t(ends): Ditto.\n+\t(flush): Ditto.\n+\t(operator<<): Ditto.\n+\n 2002-06-07  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* mkcheck.in:  Link against local testsuite library."}, {"sha": "2658866ec5784c94d993b4d9b2182314d1980b0e", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=3522a91b8029058d4b7a06d8f5b4932f6a35dfc4", "patch": "@@ -1221,8 +1221,10 @@ namespace std\n   extern template istream& operator>>(istream&, unsigned char*);\n   extern template istream& operator>>(istream&, signed char*);\n \n+#ifdef _GLIBCPP_USE_WCHAR_T\n   extern template class basic_istream<wchar_t>;\n   extern template wistream& ws(wistream&);\n   extern template wistream& operator>>(wistream&, wchar_t&);\n   extern template wistream& operator>>(wistream&, wchar_t*);\n+#endif\n } // namespace std"}, {"sha": "ce90dafa20972ac541e3e86bbd12b247679e67d2", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=3522a91b8029058d4b7a06d8f5b4932f6a35dfc4", "patch": "@@ -694,6 +694,7 @@ namespace std\n   extern template ostream& operator<<(ostream&, const unsigned char*);\n   extern template ostream& operator<<(ostream&, const signed char*);\n \n+#ifdef _GLIBCPP_USE_WCHAR_T\n   extern template class basic_ostream<wchar_t>;\n   extern template wostream& endl(wostream&);\n   extern template wostream& ends(wostream&);\n@@ -702,4 +703,5 @@ namespace std\n   extern template wostream& operator<<(wostream&, char);\n   extern template wostream& operator<<(wostream&, const wchar_t*);\n   extern template wostream& operator<<(wostream&, const char*);\n+#endif\n } // namespace std"}, {"sha": "10f45eca0a0709efde5016b397e68408d1e9afb1", "filename": "libstdc++-v3/src/locale-inst.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3522a91b8029058d4b7a06d8f5b4932f6a35dfc4/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc?ref=3522a91b8029058d4b7a06d8f5b4932f6a35dfc4", "patch": "@@ -181,9 +181,9 @@ namespace std\n   \n   // codecvt\n   inline template class __codecvt_abstract_base<char, char, mbstate_t>;\n-  inline template class __codecvt_abstract_base<wchar_t, char, mbstate_t>;\n   template class codecvt_byname<char, char, mbstate_t>;\n #ifdef _GLIBCPP_USE_WCHAR_T\n+  inline template class __codecvt_abstract_base<wchar_t, char, mbstate_t>;\n   template class codecvt_byname<wchar_t, char, mbstate_t>;\n #endif\n "}]}