{"sha": "5042f726c5a4e41d6e52c7dcb21e31259342d311", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA0MmY3MjZjNWE0ZTQxZDZlNTJjN2RjYjIxZTMxMjU5MzQyZDMxMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T10:07:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T10:07:52Z"}, "message": "[multiple changes]\n\n2010-09-09  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch3.adb (Is_Progenitor): Relocated to sem_type.\n\t(Replace_Type): Code cleanup.\n\t* sem_type.ads, sem_type.adb (Is_Progenitor): Relocated from sem_ch3\n\n2010-09-09  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch8.adb: Minor reformatting.\n\n2010-09-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch9.adb, einfo.adb, einfo.ads: New attribute\n\tCorresponding_Protected_Entry.\n\nFrom-SVN: r164065", "tree": {"sha": "245afd36b7185db2fe04ff1a0b76ba89f389dffe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/245afd36b7185db2fe04ff1a0b76ba89f389dffe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5042f726c5a4e41d6e52c7dcb21e31259342d311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5042f726c5a4e41d6e52c7dcb21e31259342d311", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5042f726c5a4e41d6e52c7dcb21e31259342d311", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5042f726c5a4e41d6e52c7dcb21e31259342d311/comments", "author": null, "committer": null, "parents": [{"sha": "3a89c57d9eceff3a49b1500a34d0c7fec32be089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a89c57d9eceff3a49b1500a34d0c7fec32be089", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a89c57d9eceff3a49b1500a34d0c7fec32be089"}], "stats": {"total": 118, "additions": 75, "deletions": 43}, "files": [{"sha": "97aa882158559425aa43e6b0dba5bd059c8471f5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5042f726c5a4e41d6e52c7dcb21e31259342d311", "patch": "@@ -1,3 +1,18 @@\n+2010-09-09  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch3.adb (Is_Progenitor): Relocated to sem_type.\n+\t(Replace_Type): Code cleanup.\n+\t* sem_type.ads, sem_type.adb (Is_Progenitor): Relocated from sem_ch3\n+\n+2010-09-09  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch8.adb: Minor reformatting.\n+\n+2010-09-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch9.adb, einfo.adb, einfo.ads: New attribute\n+\tCorresponding_Protected_Entry.\n+\n 2010-09-09  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch3.adb (Build_Untagged_Equality): Do not set alias of implicit"}, {"sha": "95dc331996e3f8d072dd3f16cffb670dd46a88a3", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=5042f726c5a4e41d6e52c7dcb21e31259342d311", "patch": "@@ -149,6 +149,7 @@ package body Einfo is\n \n    --    Alias                           Node18\n    --    Corresponding_Concurrent_Type   Node18\n+   --    Corresponding_Protected_Entry   Node18\n    --    Corresponding_Record_Type       Node18\n    --    Delta_Value                     Ureal18\n    --    Enclosing_Scope                 Node18\n@@ -723,6 +724,11 @@ package body Einfo is\n       return Node13 (Id);\n    end Corresponding_Equality;\n \n+   function Corresponding_Protected_Entry (Id : E) return E is\n+   begin\n+      return Node18 (Id);\n+   end Corresponding_Protected_Entry;\n+\n    function Corresponding_Record_Type (Id : E) return E is\n    begin\n       pragma Assert (Is_Concurrent_Type (Id));\n@@ -3109,6 +3115,11 @@ package body Einfo is\n       Set_Node13 (Id, V);\n    end Set_Corresponding_Equality;\n \n+   procedure Set_Corresponding_Protected_Entry (Id : E; V : E) is\n+   begin\n+      Set_Node18 (Id, V);\n+   end Set_Corresponding_Protected_Entry;\n+\n    procedure Set_Corresponding_Record_Type (Id : E; V : E) is\n    begin\n       pragma Assert (Is_Concurrent_Type (Id));\n@@ -7648,6 +7659,9 @@ package body Einfo is\n          when E_Record_Type                                =>\n             Write_Str (\"Corresponding_Concurrent_Type\");\n \n+         when E_Subprogram_Body                            =>\n+            Write_Str (\"Corresponding_Protected_Entry\");\n+\n          when E_Entry_Index_Parameter                      =>\n             Write_Str (\"Entry_Index_Constant\");\n "}, {"sha": "db19b39bc42d4e58332e1d87eb0446a8dbb4fffe", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5042f726c5a4e41d6e52c7dcb21e31259342d311", "patch": "@@ -631,6 +631,10 @@ package Einfo is\n --       other function entities, only in implicit inequality routines,\n --       where Comes_From_Source is always False.\n \n+--    Corresponding_Protected_Entry (Node18)\n+--       Present in subrogram bodies that implement entries of protected\n+--       types.\n+\n --    Corresponding_Record_Type (Node18)\n --       Present in protected and task types and subtypes. References the\n --       entity for the corresponding record type constructed by the expander\n@@ -5765,6 +5769,7 @@ package Einfo is\n    function Corresponding_Concurrent_Type       (Id : E) return E;\n    function Corresponding_Discriminant          (Id : E) return E;\n    function Corresponding_Equality              (Id : E) return E;\n+   function Corresponding_Protected_Entry       (Id : E) return E;\n    function Corresponding_Record_Type           (Id : E) return E;\n    function Corresponding_Remote_Type           (Id : E) return E;\n    function Current_Use_Clause                  (Id : E) return E;\n@@ -6326,6 +6331,7 @@ package Einfo is\n    procedure Set_Corresponding_Concurrent_Type   (Id : E; V : E);\n    procedure Set_Corresponding_Discriminant      (Id : E; V : E);\n    procedure Set_Corresponding_Equality          (Id : E; V : E);\n+   procedure Set_Corresponding_Protected_Entry   (Id : E; V : E);\n    procedure Set_Corresponding_Record_Type       (Id : E; V : E);\n    procedure Set_Corresponding_Remote_Type       (Id : E; V : E);\n    procedure Set_Current_Use_Clause              (Id : E; V : E);\n@@ -6982,6 +6988,7 @@ package Einfo is\n    pragma Inline (Corresponding_Concurrent_Type);\n    pragma Inline (Corresponding_Discriminant);\n    pragma Inline (Corresponding_Equality);\n+   pragma Inline (Corresponding_Protected_Entry);\n    pragma Inline (Corresponding_Record_Type);\n    pragma Inline (Corresponding_Remote_Type);\n    pragma Inline (Current_Use_Clause);\n@@ -7413,6 +7420,7 @@ package Einfo is\n    pragma Inline (Set_Corresponding_Concurrent_Type);\n    pragma Inline (Set_Corresponding_Discriminant);\n    pragma Inline (Set_Corresponding_Equality);\n+   pragma Inline (Set_Corresponding_Protected_Entry);\n    pragma Inline (Set_Corresponding_Record_Type);\n    pragma Inline (Set_Corresponding_Remote_Type);\n    pragma Inline (Set_Current_Use_Clause);"}, {"sha": "39c0fc656eb062b007535c3886cc01ec4ecb8031", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=5042f726c5a4e41d6e52c7dcb21e31259342d311", "patch": "@@ -358,7 +358,7 @@ package body Exp_Ch8 is\n       end if;\n \n       --  Check whether this is a renaming of a predefined equality on an\n-      --  untagged record type  (AI05-0123).\n+      --  untagged record type (AI05-0123).\n \n       if Is_Entity_Name (Nam)\n         and then Chars (Entity (Nam)) = Name_Op_Eq\n@@ -370,9 +370,9 @@ package body Exp_Ch8 is\n             Id  : constant Entity_Id  := Defining_Entity (N);\n             Typ : constant Entity_Id  := Etype (First_Formal (Id));\n \n-            Decl : Node_Id;\n-            Body_Id : constant Entity_Id\n-              := Make_Defining_Identifier (Sloc (N), Chars (Id));\n+            Decl    : Node_Id;\n+            Body_Id : constant Entity_Id :=\n+                        Make_Defining_Identifier (Sloc (N), Chars (Id));\n \n          begin\n             if Is_Record_Type (Typ)\n@@ -394,14 +394,15 @@ package body Exp_Ch8 is\n                Set_Has_Delayed_Freeze (Id);\n \n                Decl := Make_Subprogram_Body (Loc,\n-                 Specification =>\n-                   Make_Function_Specification (Loc,\n-                     Defining_Unit_Name => Body_Id,\n-                     Parameter_Specifications => Copy_Parameter_List (Id),\n-                     Result_Definition =>\n-                       New_Occurrence_Of (Standard_Boolean, Loc)),\n-                 Declarations => Empty_List,\n-                 Handled_Statement_Sequence => Empty);\n+                         Specification              =>\n+                           Make_Function_Specification (Loc,\n+                             Defining_Unit_Name       => Body_Id,\n+                             Parameter_Specifications =>\n+                               Copy_Parameter_List (Id),\n+                             Result_Definition        =>\n+                               New_Occurrence_Of (Standard_Boolean, Loc)),\n+                         Declarations               => Empty_List,\n+                         Handled_Statement_Sequence => Empty);\n \n                Set_Handled_Statement_Sequence (Decl,\n                  Make_Handled_Sequence_Of_Statements (Loc,"}, {"sha": "7d6b0f983a82972f180a7b2209582593d0e36ecb", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=5042f726c5a4e41d6e52c7dcb21e31259342d311", "patch": "@@ -2720,6 +2720,10 @@ package body Exp_Ch9 is\n                raise Program_Error;\n          end case;\n \n+         --  Establish link between subprogram body entity and source entry.\n+\n+         Set_Corresponding_Protected_Entry (Edef, Ent);\n+\n          --  Create body of entry procedure. The renaming declarations are\n          --  placed ahead of the block that contains the actual entry body.\n "}, {"sha": "7708b8b37c815e77e64c43c5adc359f7ddaa6ad8", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=5042f726c5a4e41d6e52c7dcb21e31259342d311", "patch": "@@ -574,14 +574,6 @@ package body Sem_Ch3 is\n    --  copying the record declaration for the derived base. In the tagged case\n    --  the value returned is irrelevant.\n \n-   function Is_Progenitor\n-     (Iface : Entity_Id;\n-      Typ   : Entity_Id) return Boolean;\n-   --  Determine whether the interface Iface is implemented by Typ. It requires\n-   --  traversing the list of abstract interfaces of the type, as well as that\n-   --  of the ancestor types. The predicate is used to determine when a formal\n-   --  in the signature of an inherited operation must carry the derived type.\n-\n    function Is_Valid_Constraint_Kind\n      (T_Kind          : Type_Kind;\n       Constraint_Kind : Node_Kind) return Boolean;\n@@ -12263,15 +12255,6 @@ package body Sem_Ch3 is\n                Set_Etype (New_Id, Base_Type (Derived_Type));\n             end if;\n \n-         --  Ada 2005 (AI-251): Handle derivations of abstract interface\n-         --  primitives.\n-\n-         elsif Is_Interface (Etype (Id))\n-           and then not Is_Class_Wide_Type (Etype (Id))\n-           and then Is_Progenitor (Etype (Id), Derived_Type)\n-         then\n-            Set_Etype (New_Id, Derived_Type);\n-\n          else\n             Set_Etype (New_Id, Etype (Id));\n          end if;\n@@ -14951,19 +14934,6 @@ package body Sem_Ch3 is\n       end if;\n    end Is_Null_Extension;\n \n-   --------------------\n-   --  Is_Progenitor --\n-   --------------------\n-\n-   function Is_Progenitor\n-     (Iface : Entity_Id;\n-      Typ   : Entity_Id) return Boolean\n-   is\n-   begin\n-      return Implements_Interface (Typ, Iface,\n-               Exclude_Parents => True);\n-   end Is_Progenitor;\n-\n    ------------------------------\n    -- Is_Valid_Constraint_Kind --\n    ------------------------------"}, {"sha": "3f253faf4e0435420ff3cdfa2936f22b2713231e", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=5042f726c5a4e41d6e52c7dcb21e31259342d311", "patch": "@@ -2669,6 +2669,18 @@ package body Sem_Type is\n       end if;\n    end Is_Invisible_Operator;\n \n+   --------------------\n+   --  Is_Progenitor --\n+   --------------------\n+\n+   function Is_Progenitor\n+     (Iface : Entity_Id;\n+      Typ   : Entity_Id) return Boolean\n+   is\n+   begin\n+      return Implements_Interface (Typ, Iface, Exclude_Parents => True);\n+   end Is_Progenitor;\n+\n    -------------------\n    -- Is_Subtype_Of --\n    -------------------"}, {"sha": "83d4bb98e3285d94f3f5b43d06fee0f16a749f66", "filename": "gcc/ada/sem_type.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Fsem_type.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5042f726c5a4e41d6e52c7dcb21e31259342d311/gcc%2Fada%2Fsem_type.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.ads?ref=5042f726c5a4e41d6e52c7dcb21e31259342d311", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -221,6 +221,14 @@ package Sem_Type is\n    --  T1 is a tagged type (not class-wide). Verify that it is one of the\n    --  ancestors of type T2 (which may or not be class-wide).\n \n+   function Is_Progenitor\n+     (Iface : Entity_Id;\n+      Typ   : Entity_Id) return Boolean;\n+   --  Determine whether the interface Iface is implemented by Typ. It requires\n+   --  traversing the list of abstract interfaces of the type, as well as that\n+   --  of the ancestor types. The predicate is used to determine when a formal\n+   --  in the signature of an inherited operation must carry the derived type.\n+\n    function Is_Subtype_Of (T1 : Entity_Id; T2 : Entity_Id) return Boolean;\n    --  Checks whether T1 is any subtype of T2 directly or indirectly. Applies\n    --  only to scalar subtypes???"}]}