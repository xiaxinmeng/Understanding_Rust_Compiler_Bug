{"sha": "61ee25b9e7d84fbb18218887d1fecfb10f72993a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFlZTI1YjllN2Q4NGZiYjE4MjE4ODg3ZDFmZWNmYjEwZjcyOTkzYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-08-07T19:12:15Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-08-07T19:12:15Z"}, "message": "[AArch64] Prefer FPRs over GPRs for INSR\n\nINSR of GPRs involves a cross-file move while INSR of FPRs doesn't.\nWe should therefore disparage the GPR version relative to the FPR\nversion.\n\nThe patch also adds MOVPRFX handling, but this is only tested\nproperly by the ACLE.\n\n2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64-sve.md (vec_shl_insert_<mode>): Add\n\tMOVPRFX alternatives.  Make the GPR alternatives more expensive\n\tthan the FPR ones.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/init_12.c: Expect w1 to be moved into\n\ta temporary FPR.\n\nFrom-SVN: r274192", "tree": {"sha": "80e718d102cb04989f0317a84ffe5e3ebc331b2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80e718d102cb04989f0317a84ffe5e3ebc331b2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61ee25b9e7d84fbb18218887d1fecfb10f72993a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61ee25b9e7d84fbb18218887d1fecfb10f72993a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61ee25b9e7d84fbb18218887d1fecfb10f72993a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61ee25b9e7d84fbb18218887d1fecfb10f72993a/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "801790b37ca817089ecbae214340162e6d94ea6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/801790b37ca817089ecbae214340162e6d94ea6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/801790b37ca817089ecbae214340162e6d94ea6a"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "ef6c201e29fe0a5021fc799b5c58b511d279a9f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61ee25b9e7d84fbb18218887d1fecfb10f72993a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61ee25b9e7d84fbb18218887d1fecfb10f72993a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61ee25b9e7d84fbb18218887d1fecfb10f72993a", "patch": "@@ -1,3 +1,9 @@\n+2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64-sve.md (vec_shl_insert_<mode>): Add\n+\tMOVPRFX alternatives.  Make the GPR alternatives more expensive\n+\tthan the FPR ones.\n+\n 2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/aarch64-sve.md (fold_extract_last_<mode>):"}, {"sha": "baba7318f20f9324f3d0774088a617e8ead9bfbc", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61ee25b9e7d84fbb18218887d1fecfb10f72993a/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61ee25b9e7d84fbb18218887d1fecfb10f72993a/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=61ee25b9e7d84fbb18218887d1fecfb10f72993a", "patch": "@@ -835,15 +835,18 @@\n \n ;; Shift an SVE vector left and insert a scalar into element 0.\n (define_insn \"vec_shl_insert_<mode>\"\n-  [(set (match_operand:SVE_ALL 0 \"register_operand\" \"=w, w\")\n+  [(set (match_operand:SVE_ALL 0 \"register_operand\" \"=?w, w, ??&w, ?&w\")\n \t(unspec:SVE_ALL\n-\t  [(match_operand:SVE_ALL 1 \"register_operand\" \"0, 0\")\n-\t   (match_operand:<VEL> 2 \"register_operand\" \"rZ, w\")]\n+\t  [(match_operand:SVE_ALL 1 \"register_operand\" \"0, 0, w, w\")\n+\t   (match_operand:<VEL> 2 \"aarch64_reg_or_zero\" \"rZ, w, rZ, w\")]\n \t  UNSPEC_INSR))]\n   \"TARGET_SVE\"\n   \"@\n    insr\\t%0.<Vetype>, %<vwcore>2\n-   insr\\t%0.<Vetype>, %<Vetype>2\"\n+   insr\\t%0.<Vetype>, %<Vetype>2\n+   movprfx\\t%0, %1\\;insr\\t%0.<Vetype>, %<vwcore>2\n+   movprfx\\t%0, %1\\;insr\\t%0.<Vetype>, %<Vetype>2\"\n+  [(set_attr \"movprfx\" \"*,*,yes,yes\")]\n )\n \n ;; -------------------------------------------------------------------------"}, {"sha": "22cf0e97c125ef58cfce69b212238dd47b18db94", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61ee25b9e7d84fbb18218887d1fecfb10f72993a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61ee25b9e7d84fbb18218887d1fecfb10f72993a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61ee25b9e7d84fbb18218887d1fecfb10f72993a", "patch": "@@ -1,3 +1,8 @@\n+2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/init_12.c: Expect w1 to be moved into\n+\ta temporary FPR.\n+\n 2019-08-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/sve/clastb_8.c: New test."}, {"sha": "bc698ddd38d5efb949ec808a3c0b3b89c23f75db", "filename": "gcc/testsuite/gcc.target/aarch64/sve/init_12.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61ee25b9e7d84fbb18218887d1fecfb10f72993a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61ee25b9e7d84fbb18218887d1fecfb10f72993a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Finit_12.c?ref=61ee25b9e7d84fbb18218887d1fecfb10f72993a", "patch": "@@ -10,12 +10,13 @@ typedef int32_t vnx4si __attribute__((vector_size (32)));\n \n /*\n ** foo:\n+**\tfmov\t(s[0-9]+), w1\n **\tmov\t(z[0-9]+\\.s), w2\n **\tmov\t(z[0-9]+\\.s), w0\n-**\tinsr\t\\2, w1\n-**\tinsr\t\\2, w1\n-**\tinsr\t\\2, w1\n-**\tzip1\t\\2, \\2, \\1\n+**\tinsr\t\\3, \\1\n+**\tinsr\t\\3, \\1\n+**\tinsr\t\\3, \\1\n+**\tzip1\t\\3, \\3, \\2\n **\t...\n */\n __attribute__((noipa))"}]}