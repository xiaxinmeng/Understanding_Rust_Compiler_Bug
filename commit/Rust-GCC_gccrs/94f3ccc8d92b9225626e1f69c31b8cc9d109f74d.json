{"sha": "94f3ccc8d92b9225626e1f69c31b8cc9d109f74d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRmM2NjYzhkOTJiOTIyNTYyNmUxZjY5YzMxYjhjYzlkMTA5Zjc0ZA==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2013-03-24T00:23:10Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2013-03-24T00:23:10Z"}, "message": "Avoid non constant memory model uses in libatomic\n\nx86 ends up using non constant memory models for some of the libatomic\nfunctions. These all end up as __ATOMIC_SEQ_CST. Just use this\ndirectly. This avoids a new warning for non constant memory\nmodels, which broke the bootstrap with -Werror\n\nPassed bootstrap and test on x86_64-linux.\n\nlibatomic/:\n\n2013-03-23  Andi Kleen  <ak@linux.intel.com>\n\n\t* gcas.c: (EXACT_INLINE): Use __ATOMIC_SEQ_CST.\n\t* gexch.c: (EXACT_INLINE): Use __ATOMIC_SEQ_CST.\n\t* gload.c: (EXACT_INLINE): Use __ATOMIC_SEQ_CST.\n\t* gstore.c: (EXACT_INLINE): Use __ATOMIC_SEQ_CST.\n\ndiff --git a/libatomic/gcas.c b/libatomic/gcas.c\nindex edbf611..e3d77f3 100644\n--- a/libatomic/gcas.c\n+++ b/libatomic/gcas.c\n@@ -32,7 +32,7 @@\n # define EXACT_INLINE(N)\t\t\t\t\t\\\n   if (C2(HAVE_ATOMIC_CAS_,N))\t\t\t\t\t\\\n     return __atomic_compare_exchange_n\t\t\t\t\\\n-      (PTR(N,mptr), PTR(N,eptr), *PTR(N,dptr), false, smodel, fmodel)\n+      (PTR(N,mptr), PTR(N,eptr), *PTR(N,dptr), false, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST)\n #else\n # define EXACT_INLINE(N)\n #endif\ndiff --git a/libatomic/gexch.c b/libatomic/gexch.c\nindex 1999067..c8c8658 100644\n--- a/libatomic/gexch.c\n+++ b/libatomic/gexch.c\n@@ -33,7 +33,7 @@\n   if (C2(HAVE_ATOMIC_EXCHANGE_,N))\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       *PTR(N,rptr) = __atomic_exchange_n\t\t\t\\\n-\t(PTR(N,mptr), *PTR(N,vptr), smodel);\t\t\t\\\n+\t(PTR(N,mptr), *PTR(N,vptr), __ATOMIC_SEQ_CST);\t\t\\\n       return;\t\t\t\t\t\t\t\\\n     }\n #else\ndiff --git a/libatomic/gload.c b/libatomic/gload.c\nindex df318d5..85865bd 100644\n--- a/libatomic/gload.c\n+++ b/libatomic/gload.c\n@@ -32,7 +32,7 @@\n # define EXACT_INLINE(N, DEST, SRC, DONE)\t\t\t\\\n   if (C2(HAVE_ATOMIC_LDST_,N))\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      DEST = __atomic_load_n (SRC, smodel);\t\t\t\\\n+      DEST = __atomic_load_n (SRC, __ATOMIC_SEQ_CST);\t\t\\\n       DONE;\t\t\t\t\t\t\t\\\n     }\n #else\ndiff --git a/libatomic/gstore.c b/libatomic/gstore.c\nindex d571e58..84f9a8d 100644\n--- a/libatomic/gstore.c\n+++ b/libatomic/gstore.c\n@@ -32,7 +32,7 @@\n # define EXACT_INLINE(N)\t\t\t\t\t\\\n   if (C2(HAVE_ATOMIC_LDST_,N))\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      __atomic_store_n (PTR(N,mptr), *PTR(N,vptr), smodel);\t\\\n+      __atomic_store_n (PTR(N,mptr), *PTR(N,vptr), __ATOMIC_SEQ_CST);\t\\\n       return;\t\t\t\t\t\t\t\\\n     }\n #else\n\nFrom-SVN: r197017", "tree": {"sha": "269d27bfd77024794cb584070ad5cfd266a0dd75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/269d27bfd77024794cb584070ad5cfd266a0dd75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d/comments", "author": null, "committer": null, "parents": [{"sha": "0b8799fbf3272f81b9932a04774f99a6addab430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8799fbf3272f81b9932a04774f99a6addab430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b8799fbf3272f81b9932a04774f99a6addab430"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e3d77f3f558b0fb53c90699d2a542a67b6892128", "filename": "libatomic/gcas.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d/libatomic%2Fgcas.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d/libatomic%2Fgcas.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fgcas.c?ref=94f3ccc8d92b9225626e1f69c31b8cc9d109f74d", "patch": "@@ -32,7 +32,7 @@\n # define EXACT_INLINE(N)\t\t\t\t\t\\\n   if (C2(HAVE_ATOMIC_CAS_,N))\t\t\t\t\t\\\n     return __atomic_compare_exchange_n\t\t\t\t\\\n-      (PTR(N,mptr), PTR(N,eptr), *PTR(N,dptr), false, smodel, fmodel)\n+      (PTR(N,mptr), PTR(N,eptr), *PTR(N,dptr), false, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST)\n #else\n # define EXACT_INLINE(N)\n #endif"}, {"sha": "c8c86587bc21cfdda394a15463f9920d889e31fe", "filename": "libatomic/gexch.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d/libatomic%2Fgexch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d/libatomic%2Fgexch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fgexch.c?ref=94f3ccc8d92b9225626e1f69c31b8cc9d109f74d", "patch": "@@ -33,7 +33,7 @@\n   if (C2(HAVE_ATOMIC_EXCHANGE_,N))\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       *PTR(N,rptr) = __atomic_exchange_n\t\t\t\\\n-\t(PTR(N,mptr), *PTR(N,vptr), smodel);\t\t\t\\\n+\t(PTR(N,mptr), *PTR(N,vptr), __ATOMIC_SEQ_CST);\t\t\\\n       return;\t\t\t\t\t\t\t\\\n     }\n #else"}, {"sha": "85865bda535ea5a8303895888e8c3623539803c1", "filename": "libatomic/gload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d/libatomic%2Fgload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d/libatomic%2Fgload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fgload.c?ref=94f3ccc8d92b9225626e1f69c31b8cc9d109f74d", "patch": "@@ -32,7 +32,7 @@\n # define EXACT_INLINE(N, DEST, SRC, DONE)\t\t\t\\\n   if (C2(HAVE_ATOMIC_LDST_,N))\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      DEST = __atomic_load_n (SRC, smodel);\t\t\t\\\n+      DEST = __atomic_load_n (SRC, __ATOMIC_SEQ_CST);\t\t\\\n       DONE;\t\t\t\t\t\t\t\\\n     }\n #else"}, {"sha": "84f9a8d5474e081df073942eab3a287e5d6f92d5", "filename": "libatomic/gstore.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d/libatomic%2Fgstore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94f3ccc8d92b9225626e1f69c31b8cc9d109f74d/libatomic%2Fgstore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2Fgstore.c?ref=94f3ccc8d92b9225626e1f69c31b8cc9d109f74d", "patch": "@@ -32,7 +32,7 @@\n # define EXACT_INLINE(N)\t\t\t\t\t\\\n   if (C2(HAVE_ATOMIC_LDST_,N))\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      __atomic_store_n (PTR(N,mptr), *PTR(N,vptr), smodel);\t\\\n+      __atomic_store_n (PTR(N,mptr), *PTR(N,vptr), __ATOMIC_SEQ_CST);\t\\\n       return;\t\t\t\t\t\t\t\\\n     }\n #else"}]}