{"sha": "215826720508c828b6a5eaca7f0a7396d78ab36b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE1ODI2NzIwNTA4YzgyOGI2YTVlYWNhN2YwYTczOTZkNzhhYjM2Yg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-05-20T18:23:06Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-05-20T18:23:06Z"}, "message": "* g++.dg/ext/utf8-2.C: Accept both \"char\" and \"char8_t\" in aka.\n\nFrom-SVN: r271430", "tree": {"sha": "96ecb014d6023d05046fe72978811eb5324b42f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96ecb014d6023d05046fe72978811eb5324b42f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/215826720508c828b6a5eaca7f0a7396d78ab36b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/215826720508c828b6a5eaca7f0a7396d78ab36b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/215826720508c828b6a5eaca7f0a7396d78ab36b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/215826720508c828b6a5eaca7f0a7396d78ab36b/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e85b4dce346b456e5956d9e008136f8fc1ad86b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e85b4dce346b456e5956d9e008136f8fc1ad86b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e85b4dce346b456e5956d9e008136f8fc1ad86b"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "3fefc0ebd5f56f1665d3bb874000b7ad0194c938", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/215826720508c828b6a5eaca7f0a7396d78ab36b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/215826720508c828b6a5eaca7f0a7396d78ab36b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=215826720508c828b6a5eaca7f0a7396d78ab36b", "patch": "@@ -1,3 +1,7 @@\n+2019-05-20  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/ext/utf8-2.C: Accept both \"char\" and \"char8_t\" in aka.\n+\n 2019-05-20  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/Wtype-limits-Wextra.c: Adjust expected output after"}, {"sha": "5ce13fbe6bec6483bce6f7f3c82da6af938ed809", "filename": "gcc/testsuite/g++.dg/ext/utf8-2.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/215826720508c828b6a5eaca7f0a7396d78ab36b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf8-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/215826720508c828b6a5eaca7f0a7396d78ab36b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf8-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Futf8-2.C?ref=215826720508c828b6a5eaca7f0a7396d78ab36b", "patch": "@@ -12,16 +12,16 @@ const char16_t\ts1[]\t= u8\"ab\";\t// { dg-error \"from a string literal with type arr\n const char32_t  s2[]    = u8\"ab\";\t// { dg-error \"from a string literal with type array of .char.\" }\n const wchar_t   s3[]    = u8\"ab\";\t// { dg-error \"from a string literal with type array of .char.\" }\n \n-const u8_char_t      t0[0]   = u8\"ab\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[0]' {aka 'const char \\\\\\[0]'} is too long\" }\n-const u8_char_t      t1[1]   = u8\"ab\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[1]' {aka 'const char \\\\\\[1]'} is too long\" }\n-const u8_char_t      t2[2]   = u8\"ab\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[2]' {aka 'const char \\\\\\[2]'} is too long\" }\n+const u8_char_t      t0[0]   = u8\"ab\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[0]' {aka 'const \\(char|char8_t\\) \\\\\\[0]'} is too long\" }\n+const u8_char_t      t1[1]   = u8\"ab\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[1]' {aka 'const \\(char|char8_t\\) \\\\\\[1]'} is too long\" }\n+const u8_char_t      t2[2]   = u8\"ab\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[2]' {aka 'const \\(char|char8_t\\) \\\\\\[2]'} is too long\" }\n const u8_char_t      t3[3]   = u8\"ab\";\n const u8_char_t      t4[4]   = u8\"ab\";\n \n-const u8_char_t      u0[0]   = u8\"\\u2160.\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[0]' {aka 'const char \\\\\\[0]'} is too long\" }\n-const u8_char_t      u1[1]   = u8\"\\u2160.\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[1]' {aka 'const char \\\\\\[1]'} is too long\" }\n-const u8_char_t      u2[2]   = u8\"\\u2160.\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[2]' {aka 'const char \\\\\\[2]'} is too long\" }\n-const u8_char_t      u3[3]   = u8\"\\u2160.\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[3]' {aka 'const char \\\\\\[3]'} is too long\" }\n-const u8_char_t      u4[4]   = u8\"\\u2160.\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[4]' {aka 'const char \\\\\\[4]'} is too long\" }\n+const u8_char_t      u0[0]   = u8\"\\u2160.\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[0]' {aka 'const \\(char|char8_t\\) \\\\\\[0]'} is too long\" }\n+const u8_char_t      u1[1]   = u8\"\\u2160.\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[1]' {aka 'const \\(char|char8_t\\) \\\\\\[1]'} is too long\" }\n+const u8_char_t      u2[2]   = u8\"\\u2160.\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[2]' {aka 'const \\(char|char8_t\\) \\\\\\[2]'} is too long\" }\n+const u8_char_t      u3[3]   = u8\"\\u2160.\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[3]' {aka 'const \\(char|char8_t\\) \\\\\\[3]'} is too long\" }\n+const u8_char_t      u4[4]   = u8\"\\u2160.\";\t// { dg-error \"initializer-string for 'const u8_char_t \\\\\\[4]' {aka 'const \\(char|char8_t\\) \\\\\\[4]'} is too long\" }\n const u8_char_t      u5[5]   = u8\"\\u2160.\";\n const u8_char_t      u6[6]   = u8\"\\u2160.\";"}]}