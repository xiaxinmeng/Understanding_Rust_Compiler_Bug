{"sha": "085e33aa0ad674c2680e6216b7d84737b935351c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg1ZTMzYWEwYWQ2NzRjMjY4MGU2MjE2YjdkODQ3MzdiOTM1MzUxYw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-09-24T17:22:20Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-09-24T17:22:20Z"}, "message": "re PR c/17188 (struct Foo { } redefinition)\n\n\tPR c/17188\n\t* c-decl.c (diagnose_mismatched_decls): Check for duplicate\n\tdeclarations of enumerators.\n\t(start_struct): Check TYPE_SIZE rather than TYPE_FIELDS to check\n\tfor redefinition.  Check for nested redefinition.\n\t(finish_struct): Don't check for nested redefinition.\n\t(start_enum): Check for nested redefinition.\n\ntestsuite:\n\t* gcc.dg/nested-redef-1.c, gcc.dg/pr17188-1.c: New tests.\n\t* gcc.dg/decl-3.c: Adjust expected message.\n\nFrom-SVN: r88063", "tree": {"sha": "0df83d2241d0c2e8cf4abfc9975db885362bef6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0df83d2241d0c2e8cf4abfc9975db885362bef6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/085e33aa0ad674c2680e6216b7d84737b935351c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/085e33aa0ad674c2680e6216b7d84737b935351c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/085e33aa0ad674c2680e6216b7d84737b935351c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/085e33aa0ad674c2680e6216b7d84737b935351c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2159c4c35aa1759292e9cce4ae97bbf04c5861e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2159c4c35aa1759292e9cce4ae97bbf04c5861e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2159c4c35aa1759292e9cce4ae97bbf04c5861e"}], "stats": {"total": 121, "additions": 114, "deletions": 7}, "files": [{"sha": "e522714f97b341664311bc24b33dabb99013609e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=085e33aa0ad674c2680e6216b7d84737b935351c", "patch": "@@ -1,3 +1,13 @@\n+2004-09-24  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\tPR c/17188\n+\t* c-decl.c (diagnose_mismatched_decls): Check for duplicate\n+\tdeclarations of enumerators.\n+\t(start_struct): Check TYPE_SIZE rather than TYPE_FIELDS to check\n+\tfor redefinition.  Check for nested redefinition.\n+\t(finish_struct): Don't check for nested redefinition.\n+\t(start_enum): Check for nested redefinition.\n+\n 2004-09-24  Devang Patel  <dpatel@apple.com>\n \n \t* tree-if-conv.c (tree_if_convert_cond_expr0: Create temp. variable"}, {"sha": "3a2f5763b137ff0696b7ff70b83a90d488844965", "filename": "gcc/c-decl.c", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=085e33aa0ad674c2680e6216b7d84737b935351c", "patch": "@@ -1145,6 +1145,15 @@ diagnose_mismatched_decls (tree newdecl, tree olddecl,\n       return false;\n     }\n \n+  /* Enumerators have no linkage, so may only be declared once in a\n+     given scope.  */\n+  if (TREE_CODE (olddecl) == CONST_DECL)\n+    {\n+      error (\"%Jredeclaration of enumerator %qD\", newdecl, newdecl);\n+      locate_old_decl (olddecl, error);\n+      return false;\n+    }\n+\n   if (!comptypes (oldtype, newtype))\n     {\n       if (TREE_CODE (olddecl) == FUNCTION_DECL\n@@ -4910,13 +4919,22 @@ start_struct (enum tree_code code, tree name)\n     ref = lookup_tag (code, name, 1);\n   if (ref && TREE_CODE (ref) == code)\n     {\n-      if (TYPE_FIELDS (ref))\n+      if (TYPE_SIZE (ref))\n         {\n \t  if (code == UNION_TYPE)\n \t    error (\"redefinition of %<union %s%>\", IDENTIFIER_POINTER (name));\n           else\n \t    error (\"redefinition of %<struct %s%>\", IDENTIFIER_POINTER (name));\n \t}\n+      else if (C_TYPE_BEING_DEFINED (ref))\n+\t{\n+\t  if (code == UNION_TYPE)\n+\t    error (\"nested redefinition of %<union %s%>\",\n+\t\t   IDENTIFIER_POINTER (name));\n+          else\n+\t    error (\"nested redefinition of %<struct %s%>\",\n+\t\t   IDENTIFIER_POINTER (name));\n+\t}\n     }\n   else\n     {\n@@ -5123,11 +5141,6 @@ finish_struct (tree t, tree fieldlist, tree attributes)\n       if (C_DECL_VARIABLE_SIZE (x))\n \tC_TYPE_VARIABLE_SIZE (t) = 1;\n \n-      /* Detect invalid nested redefinition.  */\n-      if (TREE_TYPE (x) == t)\n-\terror (\"nested redefinition of %qs\",\n-\t       IDENTIFIER_POINTER (TYPE_NAME (t)));\n-\n       if (DECL_INITIAL (x))\n \t{\n \t  unsigned HOST_WIDE_INT width = tree_low_cst (DECL_INITIAL (x), 1);\n@@ -5330,6 +5343,9 @@ start_enum (tree name)\n       pushtag (name, enumtype);\n     }\n \n+  if (C_TYPE_BEING_DEFINED (enumtype))\n+    error (\"nested redefinition of %<enum %s%>\", IDENTIFIER_POINTER (name));\n+\n   C_TYPE_BEING_DEFINED (enumtype) = 1;\n \n   if (TYPE_VALUES (enumtype) != 0)"}, {"sha": "9787c4d2c61762cf132e9e920398a11955659ae1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=085e33aa0ad674c2680e6216b7d84737b935351c", "patch": "@@ -1,3 +1,9 @@\n+2004-09-24  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\tPR c/17188\n+\t* gcc.dg/nested-redef-1.c, gcc.dg/pr17188-1.c: New tests.\n+\t* gcc.dg/decl-3.c: Adjust expected message.\n+\n 2004-09-24  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/17615"}, {"sha": "5bbe19cd2248b56508a698b844c41b90ba27651f", "filename": "gcc/testsuite/gcc.dg/decl-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdecl-3.c?ref=085e33aa0ad674c2680e6216b7d84737b935351c", "patch": "@@ -2,4 +2,4 @@\n /* { dg-do compile } */\n \n enum { CODES }; /* { dg-error \"previous definition\" } */\n-enum { CODES }; /* { dg-error \"conflicting types\" } */\n+enum { CODES }; /* { dg-error \"conflicting types|redeclaration of enumerator\" } */"}, {"sha": "34b92d8f571df29cf58c798eb7303375c07a4623", "filename": "gcc/testsuite/gcc.dg/nested-redef-1.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-redef-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-redef-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-redef-1.c?ref=085e33aa0ad674c2680e6216b7d84737b935351c", "patch": "@@ -0,0 +1,44 @@\n+/* Test diagnosis of nested tag redefinitions.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct s0 {\n+  struct s0 { int a; } x; /* { dg-error \"error: nested redefinition of 'struct s0'\" } */\n+};\n+\n+struct s1 {\n+  const struct s1 { int b; } x; /* { dg-error \"error: nested redefinition of 'struct s1'\" } */\n+};\n+\n+struct s2 {\n+  struct s2 { int c; } *x; /* { dg-error \"error: nested redefinition of 'struct s2'\" } */\n+};\n+\n+struct s3 {\n+  struct s4 {\n+    struct s5 {\n+      struct s3 { int a; } **x; /* { dg-error \"error: nested redefinition of 'struct s3'\" } */\n+    } y;\n+  } z;\n+};\n+\n+struct s6;\n+struct s6 { struct s6 *p; };\n+\n+union u0 {\n+  union u0 { int c; } *x; /* { dg-error \"error: nested redefinition of 'union u0'\" } */\n+};\n+\n+enum e0 {\n+  E0 = sizeof(enum e0 { E1 }) /* { dg-error \"error: nested redefinition of 'enum e0'\" } */\n+};\n+\n+enum e1 {\n+  E2 = sizeof(enum e2 { E2 }), /* { dg-error \"error: redeclaration of enumerator 'E2'\" } */\n+  /* { dg-error \"previous definition\" \"previous E2\" { target *-*-* } 38 } */\n+  E3\n+};\n+\n+enum e3;\n+enum e3 { E4 = 0 };"}, {"sha": "634e60c036307cda89ebcbf76869aef8568db6af", "filename": "gcc/testsuite/gcc.dg/pr17188-1.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17188-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/085e33aa0ad674c2680e6216b7d84737b935351c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17188-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17188-1.c?ref=085e33aa0ad674c2680e6216b7d84737b935351c", "patch": "@@ -0,0 +1,31 @@\n+/* A redefinition of an empty struct should be diagnosed the same as a\n+   redefinition of any other tag, but formerly only s2 and s4 were\n+   diagnosed.  Bug 17188.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+struct s0 { };\n+struct s0;\n+struct s0 { }; /* { dg-error \"error: redefinition of 'struct s0'\" } */\n+\n+struct s1 { };\n+struct s1 { }; /* { dg-error \"error: redefinition of 'struct s1'\" } */\n+\n+struct s2 { int a : 1; };\n+struct s2 { int a : 1; }; /* { dg-error \"error: redefinition of 'struct s2'\" } */\n+\n+struct s3 { };\n+struct s3 { int a : 1; }; /* { dg-error \"error: redefinition of 'struct s3'\" } */\n+\n+struct s4 { int a : 1; };\n+struct s4 { }; /* { dg-error \"error: redefinition of 'struct s4'\" } */\n+\n+struct s5 { int a : 1; };\n+struct s5;\n+\n+struct s6;\n+struct s6 { int a : 1; };\n+\n+struct s7;\n+struct s7 { };"}]}