{"sha": "376397285d1564cb838083028fa24286cd101ca6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc2Mzk3Mjg1ZDE1NjRjYjgzODA4MzAyOGZhMjQyODZjZDEwMWNhNg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-07-08T20:57:07Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-07-08T20:57:07Z"}, "message": "re PR fortran/32669 (\"Actual argument contains too few elements for dummy argument\" is triggered for valid code)\n\n2007-07-08  Tobias Burnus  <burnus@net-b.de>\n\n\tPR fortran/32669\n\t* interface.c (get_expr_storage_size): Properly obtain lower bound.\n\t(compare_actual_formal): Add space before parenthesis.\n\n2007-07-08  Tobias Burnus  <burnus@net-b.de>\n\n\tPR fortran/32669\n\t* gfortran.dg/argument_checking_6.f90: New.\n\nFrom-SVN: r126467", "tree": {"sha": "0e1ed7a049e8faab2faa803ed51ef349d0884bb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e1ed7a049e8faab2faa803ed51ef349d0884bb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/376397285d1564cb838083028fa24286cd101ca6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/376397285d1564cb838083028fa24286cd101ca6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/376397285d1564cb838083028fa24286cd101ca6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/376397285d1564cb838083028fa24286cd101ca6/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83b2e4e821557b90ed8a6cd4fa1cf3ec6e69e28a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83b2e4e821557b90ed8a6cd4fa1cf3ec6e69e28a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83b2e4e821557b90ed8a6cd4fa1cf3ec6e69e28a"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "78d50f1ff80393c17115882581ac64dd5b6e6508", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/376397285d1564cb838083028fa24286cd101ca6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/376397285d1564cb838083028fa24286cd101ca6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=376397285d1564cb838083028fa24286cd101ca6", "patch": "@@ -1,3 +1,9 @@\n+2007-07-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32669\n+\t* interface.c (get_expr_storage_size): Properly obtain lower bound.\n+\t(compare_actual_formal): Add space before parenthesis.\n+\n 2007-07-08  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/25094"}, {"sha": "85911828d1942a80bce0f304a28b2d40ef7a4020", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/376397285d1564cb838083028fa24286cd101ca6/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/376397285d1564cb838083028fa24286cd101ca6/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=376397285d1564cb838083028fa24286cd101ca6", "patch": "@@ -1374,7 +1374,7 @@ get_expr_storage_size (gfc_expr *e)\n \t  {\n \t    long int start, end, stride;\n \t    stride = 1;\n-\t    start = 1;\n+\n \t    if (ref->u.ar.stride[i])\n \t      {\n \t\tif (ref->u.ar.stride[i]->expr_type == EXPR_CONSTANT)\n@@ -1390,6 +1390,11 @@ get_expr_storage_size (gfc_expr *e)\n \t\telse\n \t\t  return 0;\n \t      }\n+\t    else if (ref->u.ar.as->lower[i]\n+\t\t     && ref->u.ar.as->lower[i]->expr_type == EXPR_CONSTANT)\n+\t      start = mpz_get_si (ref->u.ar.as->lower[i]->value.integer);\n+\t    else\n+\t      return 0;\n \n \t    if (ref->u.ar.end[i])\n \t      {\n@@ -1595,8 +1600,8 @@ compare_actual_formal (gfc_actual_arglist **ap, gfc_formal_arglist *formal,\n \t     }\n \t }\n \n-      actual_size = get_expr_storage_size(a->expr);\n-      formal_size = get_sym_storage_size(f->sym);\n+      actual_size = get_expr_storage_size (a->expr);\n+      formal_size = get_sym_storage_size (f->sym);\n       if (actual_size != 0 && actual_size < formal_size)\n \t{\n \t  if (a->expr->ts.type == BT_CHARACTER && !f->sym->as && where)"}, {"sha": "2c325a0950c3a7532f28f2c99b35834b0ed19552", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/376397285d1564cb838083028fa24286cd101ca6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/376397285d1564cb838083028fa24286cd101ca6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=376397285d1564cb838083028fa24286cd101ca6", "patch": "@@ -1,3 +1,8 @@\n+2007-07-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32669\n+\t* gfortran.dg/argument_checking_6.f90: New.\n+\n 2007-07-08  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/25094"}, {"sha": "3742ab6e1e985b0611d89941284f520c56b1ccde", "filename": "gcc/testsuite/gfortran.dg/argument_checking_6.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/376397285d1564cb838083028fa24286cd101ca6/gcc%2Ftestsuite%2Fgfortran.dg%2Fargument_checking_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/376397285d1564cb838083028fa24286cd101ca6/gcc%2Ftestsuite%2Fgfortran.dg%2Fargument_checking_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fargument_checking_6.f90?ref=376397285d1564cb838083028fa24286cd101ca6", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+! PR fortran/32669\n+!\n+! Contributed by Janus Weil <jaydub66@gmail.com>\n+!\n+program tfe\n+implicit none\n+\n+real,dimension(-1:1) ::  w\n+real,dimension(1:4) ::  x\n+real,dimension(0:3) ::  y\n+real,dimension(-1:2) ::  z\n+\n+call sub(x(:))\n+call sub(y(:))\n+call sub(z(:))\n+call sub(w(:)) ! { dg-error \"too few elements\" }\n+\n+contains\n+  subroutine sub(a)\n+    implicit none\n+    real,dimension(1:4) :: a\n+  end subroutine sub\n+end program tfe"}]}