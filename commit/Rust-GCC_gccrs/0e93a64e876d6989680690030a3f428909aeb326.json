{"sha": "0e93a64e876d6989680690030a3f428909aeb326", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU5M2E2NGU4NzZkNjk4OTY4MDY5MDAzMGEzZjQyODkwOWFlYjMyNg==", "commit": {"author": {"name": "Ira Rosen", "email": "ira.rosen@linaro.org", "date": "2011-09-18T11:36:15Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2011-09-18T11:36:15Z"}, "message": "re PR tree-optimization/50414 (gfortran -Ofast SIGSEGV in store_constructor)\n\n\n        PR tree-optimization/50414\n        * tree-vect-slp.c (vect_get_constant_vectors): Handle MAX_EXPR\n        and MIN_EXPR.\n\nFrom-SVN: r178941", "tree": {"sha": "43bcba88f08bf56542988b0a854a82caa5a57df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43bcba88f08bf56542988b0a854a82caa5a57df0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e93a64e876d6989680690030a3f428909aeb326", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e93a64e876d6989680690030a3f428909aeb326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e93a64e876d6989680690030a3f428909aeb326", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e93a64e876d6989680690030a3f428909aeb326/comments", "author": null, "committer": null, "parents": [{"sha": "deaf836ccfe15c19c38dc85c2e6718980b5f0803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deaf836ccfe15c19c38dc85c2e6718980b5f0803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deaf836ccfe15c19c38dc85c2e6718980b5f0803"}], "stats": {"total": 88, "additions": 85, "deletions": 3}, "files": [{"sha": "aea0e3127bfcc572699e52bfe292ee3b7248a063", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e93a64e876d6989680690030a3f428909aeb326/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e93a64e876d6989680690030a3f428909aeb326/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e93a64e876d6989680690030a3f428909aeb326", "patch": "@@ -1,3 +1,9 @@\n+2011-09-18  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/50414\n+\t* tree-vect-slp.c (vect_get_constant_vectors): Handle MAX_EXPR and\n+\tMIN_EXPR.\n+\n 2011-09-18  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/50412"}, {"sha": "0a6fa97a3f833dc95a3288b13a8e79472a224817", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e93a64e876d6989680690030a3f428909aeb326/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e93a64e876d6989680690030a3f428909aeb326/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0e93a64e876d6989680690030a3f428909aeb326", "patch": "@@ -1,3 +1,10 @@\n+2011-09-18  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/50414\n+\t* gfortran.dg/vect/Ofast-pr50414.f90: New.\n+\t* gfortran.dg/vect/vect.exp: Run Ofast-* tests with -Ofast.\n+\t* gcc.dg/vect/no-scevccp-noreassoc-slp-reduc-7.c: New.\n+\n 2011-09-18  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR tree-optimization/50412"}, {"sha": "c268af7fb4c7eb613ae78cfd88535dd50381faaa", "filename": "gcc/testsuite/gcc.dg/vect/no-scevccp-noreassoc-slp-reduc-7.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e93a64e876d6989680690030a3f428909aeb326/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-scevccp-noreassoc-slp-reduc-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e93a64e876d6989680690030a3f428909aeb326/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-scevccp-noreassoc-slp-reduc-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fno-scevccp-noreassoc-slp-reduc-7.c?ref=0e93a64e876d6989680690030a3f428909aeb326", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+#define N 16\n+#define MAX 121\n+\n+unsigned int ub[N] = {0,3,6,9,12,15,18,121,24,27,113,33,36,39,42,45};\n+\n+/* Vectorization of reduction using loop-aware SLP (with unrolling).  */\n+\n+__attribute__ ((noinline))\n+int main1 (int n)\n+{\n+  int i;\n+  unsigned int max = 50;\n+\n+  for (i = 0; i < n; i++) {\n+    max = max < ub[2*i] ? ub[2*i] : max;\n+    max = max < ub[2*i + 1] ? ub[2*i + 1] : max;\n+  }\n+\n+  /* Check results:  */\n+  if (max != MAX)\n+    abort ();\n+\n+  return 0;\n+}\n+\n+int main (void)\n+{\n+  check_vect ();\n+\n+  main1 (N/2);\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail vect_no_int_max } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorizing stmts using SLP\" 1 \"vect\" { xfail vect_no_int_max } } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */\n+"}, {"sha": "c4a36dbb2221b8263c2a690bfdcd0aa812e201cb", "filename": "gcc/testsuite/gfortran.dg/vect/Ofast-pr50414.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e93a64e876d6989680690030a3f428909aeb326/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2FOfast-pr50414.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e93a64e876d6989680690030a3f428909aeb326/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2FOfast-pr50414.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2FOfast-pr50414.f90?ref=0e93a64e876d6989680690030a3f428909aeb326", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+\n+      SUBROUTINE  SUB  (A,L,YMAX)\n+      DIMENSION A(L)\n+      YMA=A(1)\n+      DO 2 I=1,L,2\n+    2 YMA=MAX(YMA,A(I),A(I+1))\n+      CALL PROUND(YMA)\n+      END\n+\n+! { dg-final { cleanup-tree-dump \"vect\" } }"}, {"sha": "048e57d3bf1fb6316235f3dd29d0089626773b18", "filename": "gcc/testsuite/gfortran.dg/vect/vect.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e93a64e876d6989680690030a3f428909aeb326/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e93a64e876d6989680690030a3f428909aeb326/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect.exp?ref=0e93a64e876d6989680690030a3f428909aeb326", "patch": "@@ -84,6 +84,12 @@ lappend DEFAULT_VECTCFLAGS \"-O3\"\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/O3-*.\\[fF\\]{,90,95,03,08} ]]  \\\n         \"\" $DEFAULT_VECTCFLAGS\n \n+# With -Ofast\n+set DEFAULT_VECTCFLAGS $SAVED_DEFAULT_VECTCFLAGS\n+lappend DEFAULT_VECTCFLAGS \"-Ofast\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/Ofast-*.\\[fF\\]{,90,95,03,08} ]]  \\\n+        \"\" $DEFAULT_VECTCFLAGS\n+\n # Clean up.\n set dg-do-what-default ${save-dg-do-what-default}\n "}, {"sha": "669b2bb203c102b2df742764673ef775b651cbfb", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e93a64e876d6989680690030a3f428909aeb326/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e93a64e876d6989680690030a3f428909aeb326/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=0e93a64e876d6989680690030a3f428909aeb326", "patch": "@@ -1902,6 +1902,8 @@ vect_get_constant_vectors (tree op, slp_tree slp_node,\n   bool constant_p, is_store;\n   tree neutral_op = NULL;\n   enum tree_code code = gimple_assign_rhs_code (stmt);\n+  gimple def_stmt;\n+  struct loop *loop;\n \n   if (STMT_VINFO_DEF_TYPE (stmt_vinfo) == vect_reduction_def)\n     {\n@@ -1943,8 +1945,16 @@ vect_get_constant_vectors (tree op, slp_tree slp_node,\n             neutral_op = build_int_cst (TREE_TYPE (op), -1);\n             break;\n \n+          case MAX_EXPR:\n+          case MIN_EXPR:\n+            def_stmt = SSA_NAME_DEF_STMT (op);\n+            loop = (gimple_bb (stmt))->loop_father;\n+            neutral_op = PHI_ARG_DEF_FROM_EDGE (def_stmt,\n+                                                loop_preheader_edge (loop));\n+            break;\n+\n           default:\n-             neutral_op = NULL;\n+            neutral_op = NULL;\n         }\n     }\n \n@@ -1997,8 +2007,8 @@ vect_get_constant_vectors (tree op, slp_tree slp_node,\n \n           if (reduc_index != -1)\n             {\n-              struct loop *loop = (gimple_bb (stmt))->loop_father;\n-              gimple def_stmt = SSA_NAME_DEF_STMT (op);\n+              loop = (gimple_bb (stmt))->loop_father;\n+              def_stmt = SSA_NAME_DEF_STMT (op);\n \n               gcc_assert (loop);\n "}]}