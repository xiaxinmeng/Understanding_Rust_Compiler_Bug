{"sha": "6e290f11559f1bebdb91b7ff556ef160ee241d1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUyOTBmMTE1NTlmMWJlYmRiOTFiN2ZmNTU2ZWYxNjBlZTI0MWQxZQ==", "commit": {"author": {"name": "Fariborz Jahanian", "email": "fjahanian@gcc.gnu.org", "date": "2004-01-26T17:43:46Z"}, "committer": {"name": "Fariborz Jahanian", "email": "fjahanian@gcc.gnu.org", "date": "2004-01-26T17:43:46Z"}, "message": "Do not assign long long argument to memory in prologue if loaded in register.\n\nOKed by Richard Henderson.\n\nFrom-SVN: r76648", "tree": {"sha": "0b1f4889297dff7a3acfcce24f16988159d49a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b1f4889297dff7a3acfcce24f16988159d49a62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e290f11559f1bebdb91b7ff556ef160ee241d1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e290f11559f1bebdb91b7ff556ef160ee241d1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e290f11559f1bebdb91b7ff556ef160ee241d1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e290f11559f1bebdb91b7ff556ef160ee241d1e/comments", "author": null, "committer": null, "parents": [{"sha": "c353b8e3fbee8bb8f72a2e9d45b935fb1bb5554f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c353b8e3fbee8bb8f72a2e9d45b935fb1bb5554f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c353b8e3fbee8bb8f72a2e9d45b935fb1bb5554f"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "5af0a901cde9d85f62c19e7e957d1e3f4b9012a9", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e290f11559f1bebdb91b7ff556ef160ee241d1e/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e290f11559f1bebdb91b7ff556ef160ee241d1e/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=6e290f11559f1bebdb91b7ff556ef160ee241d1e", "patch": "@@ -4374,6 +4374,7 @@ assign_parms (tree fndecl)\n       int in_regs;\n       int partial = 0;\n       int pretend_bytes = 0;\n+      int loaded_in_reg = 0;\n \n       /* Set LAST_NAMED if this is last named arg before last\n \t anonymous args.  */\n@@ -4745,6 +4746,7 @@ assign_parms (tree fndecl)\n \t      emit_group_store (parmreg, entry_parm, TREE_TYPE (parm),\n \t\t\t\tint_size_in_bytes (TREE_TYPE (parm)));\n \t      SET_DECL_RTL (parm, parmreg);\n+\t      loaded_in_reg = 1;\n \n \t      if (regno >= max_parm_reg)\n \t\t{\n@@ -4776,7 +4778,8 @@ assign_parms (tree fndecl)\n \t     Handle calls that pass values in multiple non-contiguous\n \t     locations.  The Irix 6 ABI has examples of this.  */\n \t  if (GET_CODE (entry_parm) == REG\n-\t      || GET_CODE (entry_parm) == PARALLEL)\n+\t      || (GET_CODE (entry_parm) == PARALLEL\n+\t\t && (!loaded_in_reg || !optimize)))\n \t    {\n \t      int size = int_size_in_bytes (TREE_TYPE (parm));\n \t      int size_stored = CEIL_ROUND (size, UNITS_PER_WORD);"}]}