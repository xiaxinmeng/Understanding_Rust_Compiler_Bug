{"sha": "89d83fd0e81825eeec4070d94851b8efc8e8c117", "node_id": "C_kwDOANBUbNoAKDg5ZDgzZmQwZTgxODI1ZWVlYzQwNzBkOTQ4NTFiOGVmYzhlOGMxMTc", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-03-29T15:14:04Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-03-30T08:40:17Z"}, "message": "gccrs: fix ICE when closure body is not a block\n\nFixes: #2052\n\ngcc/rust/ChangeLog:\n\n\t* backend/rust-compile-expr.cc (CompileExpr::generate_closure_function):\n\twhen its not a block we dont have any ribs to generate locals from\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/execute/torture/issue-2052.rs: New test.\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>", "tree": {"sha": "caca6713c1cded3861adb5abb4cbdfd4548a6f31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caca6713c1cded3861adb5abb4cbdfd4548a6f31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89d83fd0e81825eeec4070d94851b8efc8e8c117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d83fd0e81825eeec4070d94851b8efc8e8c117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d83fd0e81825eeec4070d94851b8efc8e8c117", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d83fd0e81825eeec4070d94851b8efc8e8c117/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ddec9f44d6ce81eec7aa62c2d9b13c9094e7857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ddec9f44d6ce81eec7aa62c2d9b13c9094e7857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ddec9f44d6ce81eec7aa62c2d9b13c9094e7857"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "904c47b86be49288ae0cb3ef93d77d33517c37b8", "filename": "gcc/rust/backend/rust-compile-expr.cc", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d83fd0e81825eeec4070d94851b8efc8e8c117/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d83fd0e81825eeec4070d94851b8efc8e8c117/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc?ref=89d83fd0e81825eeec4070d94851b8efc8e8c117", "patch": "@@ -2880,20 +2880,25 @@ CompileExpr::generate_closure_function (HIR::ClosureExpr &expr,\n \n   // lookup locals\n   HIR::Expr *function_body = expr.get_expr ().get ();\n-  auto body_mappings = function_body->get_mappings ();\n-  Resolver::Rib *rib = nullptr;\n-  bool ok\n-    = ctx->get_resolver ()->find_name_rib (body_mappings.get_nodeid (), &rib);\n-  rust_assert (ok);\n+  bool is_block_expr\n+    = function_body->get_expression_type () == HIR::Expr::ExprType::Block;\n+\n+  std::vector<Bvariable *> locals = {};\n+  if (is_block_expr)\n+    {\n+      auto body_mappings = function_body->get_mappings ();\n+      Resolver::Rib *rib = nullptr;\n+      bool ok\n+\t= ctx->get_resolver ()->find_name_rib (body_mappings.get_nodeid (),\n+\t\t\t\t\t       &rib);\n+      rust_assert (ok);\n \n-  std::vector<Bvariable *> locals\n-    = compile_locals_for_block (ctx, *rib, fndecl);\n+      locals = compile_locals_for_block (ctx, *rib, fndecl);\n+    }\n \n   tree enclosing_scope = NULL_TREE;\n   Location start_location = function_body->get_locus ();\n   Location end_location = function_body->get_locus ();\n-  bool is_block_expr\n-    = function_body->get_expression_type () == HIR::Expr::ExprType::Block;\n   if (is_block_expr)\n     {\n       HIR::BlockExpr *body = static_cast<HIR::BlockExpr *> (function_body);"}, {"sha": "6c15eb3a470ac25def6e068ebc661684735d9a20", "filename": "gcc/testsuite/rust/execute/torture/issue-2052.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d83fd0e81825eeec4070d94851b8efc8e8c117/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fissue-2052.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d83fd0e81825eeec4070d94851b8efc8e8c117/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fissue-2052.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fissue-2052.rs?ref=89d83fd0e81825eeec4070d94851b8efc8e8c117", "patch": "@@ -0,0 +1,15 @@\n+#[lang = \"fn_once\"]\n+pub trait FnOnce<Args> {\n+    #[lang = \"fn_once_output\"]\n+    type Output;\n+\n+    extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output;\n+}\n+\n+pub fn f() -> i32 {\n+    (|| 42)()\n+}\n+\n+pub fn main() -> i32 {\n+    f() - 42\n+}"}]}