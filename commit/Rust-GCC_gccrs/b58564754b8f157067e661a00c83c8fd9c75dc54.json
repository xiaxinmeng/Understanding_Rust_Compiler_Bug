{"sha": "b58564754b8f157067e661a00c83c8fd9c75dc54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU4NTY0NzU0YjhmMTU3MDY3ZTY2MWEwMGM4M2M4ZmQ5Yzc1ZGM1NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-01-22T14:42:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-01-22T14:42:09Z"}, "message": "parse.y (function_body): Suppress the block for the outermost curly braces.\n\n        * parse.y (function_body): Suppress the block for the outermost\n        curly braces.\n        * decl.c (pushdecl): Don't try to skip it.\n        (begin_function_body): Keep the block we create, not the next one.\n        * init.c (emit_base_init): Don't mess with keep_next_level.\n\nFrom-SVN: r49076", "tree": {"sha": "3d7cb8c1f3c21239a3a8a7046c8a953c2a4a34a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d7cb8c1f3c21239a3a8a7046c8a953c2a4a34a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b58564754b8f157067e661a00c83c8fd9c75dc54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b58564754b8f157067e661a00c83c8fd9c75dc54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b58564754b8f157067e661a00c83c8fd9c75dc54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b58564754b8f157067e661a00c83c8fd9c75dc54/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6bc34b14ef3f254de4bf8570d1282d1cfd89c134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bc34b14ef3f254de4bf8570d1282d1cfd89c134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bc34b14ef3f254de4bf8570d1282d1cfd89c134"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "7c88cace7fd89aaca893760d64ffb434d5c87d48", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b58564754b8f157067e661a00c83c8fd9c75dc54/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b58564754b8f157067e661a00c83c8fd9c75dc54/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b58564754b8f157067e661a00c83c8fd9c75dc54", "patch": "@@ -1,5 +1,11 @@\n 2002-01-22  Jason Merrill  <jason@redhat.com>\n \n+\t* parse.y (function_body): Suppress the block for the outermost\n+\tcurly braces.\n+\t* decl.c (pushdecl): Don't try to skip it.\n+\t(begin_function_body): Keep the block we create, not the next one.\n+\t* init.c (emit_base_init): Don't mess with keep_next_level.\n+\n \t* class.c (build_base_path): Tweak formatting.\n \n 2002-01-19  Nathan Sidwell  <nathan@codesourcery.com>"}, {"sha": "fe3e24d0b64cd33fba63b75e21d0166b6eda0df7", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b58564754b8f157067e661a00c83c8fd9c75dc54/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b58564754b8f157067e661a00c83c8fd9c75dc54/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b58564754b8f157067e661a00c83c8fd9c75dc54", "patch": "@@ -4207,9 +4207,6 @@ pushdecl (x)\n \t\t     them there.  */\n \t\t  struct binding_level *b = current_binding_level->level_chain;\n \n-\t\t  /* Skip the ctor/dtor cleanup level.  */\n-\t\t  b = b->level_chain;\n-\n \t\t  /* ARM $8.3 */\n \t\t  if (b->parm_flag == 1)\n \t\t    {\n@@ -14054,6 +14051,14 @@ begin_function_body ()\n {\n   tree stmt;\n \n+  if (processing_template_decl)\n+    /* Do nothing now.  */;\n+  else\n+    /* Always keep the BLOCK node associated with the outermost pair of\n+       curly braces of a function.  These are needed for correct\n+       operation of dwarfout.c.  */\n+    keep_next_level (1);\n+\n   stmt = begin_compound_stmt (0);\n   COMPOUND_STMT_BODY_BLOCK (stmt) = 1;\n \n@@ -14064,11 +14069,6 @@ begin_function_body ()\n   else if (DECL_DESTRUCTOR_P (current_function_decl))\n     begin_destructor_body ();\n \n-  /* Always keep the BLOCK node associated with the outermost pair of\n-     curly braces of a function.  These are needed for correct\n-     operation of dwarfout.c.  */\n-  keep_next_level (1);\n-\n   return stmt;\n }\n "}, {"sha": "f159f446e36519678e02bf939d22841f510d59b5", "filename": "gcc/cp/init.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b58564754b8f157067e661a00c83c8fd9c75dc54/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b58564754b8f157067e661a00c83c8fd9c75dc54/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=b58564754b8f157067e661a00c83c8fd9c75dc54", "patch": "@@ -668,11 +668,6 @@ emit_base_init (mem_init_list, base_init_list)\n   int i;\n   int n_baseclasses = BINFO_N_BASETYPES (t_binfo);\n \n-  /* We did a keep_next_level (1) in begin_function_body.  We don't want\n-     that to apply to any blocks generated for member initializers, so\n-     clear it out.  */\n-  keep_next_level (0);\n-  \n   mem_init_list = sort_member_init (t, mem_init_list);\n   sort_base_init (t, base_init_list, &rbase_init_list, &vbase_init_list);\n \n@@ -753,9 +748,6 @@ emit_base_init (mem_init_list, base_init_list)\n       perform_member_init (member, init, from_init_list);\n       mem_init_list = TREE_CHAIN (mem_init_list);\n     }\n-\n-  /* And restore it.  */\n-  keep_next_level (1);\n }\n \n /* Returns the address of the vtable (i.e., the value that should be"}, {"sha": "f6dba7ec4ceedcae53d159279ae5c9c03fc16f30", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b58564754b8f157067e661a00c83c8fd9c75dc54/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b58564754b8f157067e661a00c83c8fd9c75dc54/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=b58564754b8f157067e661a00c83c8fd9c75dc54", "patch": "@@ -758,9 +758,16 @@ eat_saved_input:\n \t| END_OF_SAVED_INPUT\n \t;\n \n+/* The outermost block of a function really begins before the\n+   mem-initializer-list, so we open one there and suppress the one that\n+   actually corresponds to the curly braces.  */\n function_body:\n-\t  .begin_function_body ctor_initializer_opt compstmt\n-\t\t{\n+\t  .begin_function_body ctor_initializer_opt save_lineno '{'\n+\t\t{ $<ttype>$ = begin_compound_stmt (/*has_no_scope=*/1); }\n+\t  compstmtend \n+                {\n+\t\t  STMT_LINENO ($<ttype>5) = $3;\n+\t\t  finish_compound_stmt (/*has_no_scope=*/1, $<ttype>5);\n \t\t  finish_function_body ($1);\n \t\t}\n \t;"}]}