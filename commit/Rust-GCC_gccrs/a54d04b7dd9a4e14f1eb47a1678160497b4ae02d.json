{"sha": "a54d04b7dd9a4e14f1eb47a1678160497b4ae02d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU0ZDA0YjdkZDlhNGUxNGYxZWI0N2ExNjc4MTYwNDk3YjRhZTAyZA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-25T20:33:51Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-01-25T20:33:51Z"}, "message": "Fix bugs in last changes\n\nFrom-SVN: r11103", "tree": {"sha": "3bf8a5c06a29a473727c4974eccb3803c17c3d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bf8a5c06a29a473727c4974eccb3803c17c3d34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a54d04b7dd9a4e14f1eb47a1678160497b4ae02d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a54d04b7dd9a4e14f1eb47a1678160497b4ae02d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a54d04b7dd9a4e14f1eb47a1678160497b4ae02d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a54d04b7dd9a4e14f1eb47a1678160497b4ae02d/comments", "author": null, "committer": null, "parents": [{"sha": "154079fee5ff53e621ad5bfb566af20856dead24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/154079fee5ff53e621ad5bfb566af20856dead24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/154079fee5ff53e621ad5bfb566af20856dead24"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "86cdc255a3ece5ddc9c8cb9bcb2cb8d59900c876", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a54d04b7dd9a4e14f1eb47a1678160497b4ae02d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a54d04b7dd9a4e14f1eb47a1678160497b4ae02d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a54d04b7dd9a4e14f1eb47a1678160497b4ae02d", "patch": "@@ -857,6 +857,11 @@ small_data_operand (op, mode)\n {\n   rtx sym_ref, const_part;\n \n+#ifdef TARGET_SDATA\n+  if (!TARGET_SDATA)\n+    return 0;\n+#endif\n+\n   if (DEFAULT_ABI != ABI_V4)\n     return 0;\n \n@@ -2086,9 +2091,11 @@ print_operand (file, x, code)\n \t     we have already done it, we can just use an offset of four.  */\n \t  if (GET_CODE (XEXP (x, 0)) == PRE_INC\n \t      || GET_CODE (XEXP (x, 0)) == PRE_DEC)\n-\t    print_operand_address (file, plus_constant (XEXP (XEXP (x, 0), 0), 4));\n+\t    output_address (plus_constant (XEXP (XEXP (x, 0), 0), 4));\n \t  else\n-\t    print_operand_address (file, plus_constant (XEXP (x, 0), 4));\n+\t    output_address (plus_constant (XEXP (x, 0), 4));\n+\t  if (DEFAULT_ABI == ABI_V4 && small_data_operand (x, GET_MODE (x)))\n+\t    fprintf (file, \"@sda21(%s)\", reg_names[0]);\n \t}\n       return;\n \t\t\t    \n@@ -2296,9 +2303,11 @@ print_operand (file, x, code)\n \t{\n \t  if (GET_CODE (XEXP (x, 0)) == PRE_INC\n \t      || GET_CODE (XEXP (x, 0)) == PRE_DEC)\n-\t    print_operand_address (file, plus_constant (XEXP (XEXP (x, 0), 0), 8));\n+\t    output_address (plus_constant (XEXP (XEXP (x, 0), 0), 8));\n \t  else\n-\t    print_operand_address (file, plus_constant (XEXP (x, 0), 8));\n+\t    output_address (plus_constant (XEXP (x, 0), 8));\n+\t  if (DEFAULT_ABI == ABI_V4 && small_data_operand (x, GET_MODE (x)))\n+\t    fprintf (file, \"@sda21(%s)\", reg_names[0]);\n \t}\n       return;\n \t\t\t    \n@@ -2342,9 +2351,11 @@ print_operand (file, x, code)\n \t{\n \t  if (GET_CODE (XEXP (x, 0)) == PRE_INC\n \t      || GET_CODE (XEXP (x, 0)) == PRE_DEC)\n-\t    print_operand_address (file, plus_constant (XEXP (XEXP (x, 0), 0), 12));\n+\t    output_address (plus_constant (XEXP (XEXP (x, 0), 0), 12));\n \t  else\n-\t    print_operand_address (file, plus_constant (XEXP (x, 0), 12));\n+\t    output_address (plus_constant (XEXP (x, 0), 12));\n+\t  if (DEFAULT_ABI == ABI_V4 && small_data_operand (x, GET_MODE (x)))\n+\t    fprintf (file, \"@sda21(%s)\", reg_names[0]);\n \t}\n       return;\n \t\t\t    \n@@ -2362,10 +2373,10 @@ print_operand (file, x, code)\n \t    fprintf (file, \"%d(%d)\", - GET_MODE_SIZE (GET_MODE (x)),\n \t\t     REGNO (XEXP (XEXP (x, 0), 0)));\n \t  else\n-\t    print_operand_address (file, XEXP (x, 0));\n+\t    output_address (XEXP (x, 0));\n \t}\n       else\n-\tprint_operand_address (file, x);\n+\toutput_addr_const (file, x);\n       return;\n \n     default:"}, {"sha": "0fed0116304949df287ac7a59e226b4e12c03f2f", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a54d04b7dd9a4e14f1eb47a1678160497b4ae02d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a54d04b7dd9a4e14f1eb47a1678160497b4ae02d/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=a54d04b7dd9a4e14f1eb47a1678160497b4ae02d", "patch": "@@ -4733,7 +4733,7 @@\n \n   /* Use default pattern for address of ELF small data */\n   if (TARGET_ELF\n-      && TARGET_SDATA\n+      && DEFAULT_ABI == ABI_V4\n       && (GET_CODE (operands[1]) == SYMBOL_REF || GET_CODE (operands[1]) == CONST)\n       && !small_data_operand (operands[1], SImode))\n     {"}]}