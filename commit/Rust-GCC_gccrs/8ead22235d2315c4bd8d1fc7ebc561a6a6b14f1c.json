{"sha": "8ead22235d2315c4bd8d1fc7ebc561a6a6b14f1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVhZDIyMjM1ZDIzMTVjNGJkOGQxZmM3ZWJjNTYxYTZhNmIxNGYxYw==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2011-02-10T08:57:24Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2011-02-10T08:57:24Z"}, "message": "re PR lto/47241 (lto not work on mingw32, reporting 'ld.exe: could not unlink output file')\n\n2011-02-10  Kai Tietz  <kai.tietz@onevision.com>\n\n        PR lto/47241\n        * lto.c (lto_read_section_data): Free\n        fd_name in failure case.\n        For mingw targets don't hash file-descriptor.\n        (read_cgraph_and_symbols): Close current_lto_file\n        in failure case.\n\nFrom-SVN: r169999", "tree": {"sha": "28e70f3d59791ff900a79fbdc861abc4231498b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28e70f3d59791ff900a79fbdc861abc4231498b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ead22235d2315c4bd8d1fc7ebc561a6a6b14f1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ead22235d2315c4bd8d1fc7ebc561a6a6b14f1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ead22235d2315c4bd8d1fc7ebc561a6a6b14f1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ead22235d2315c4bd8d1fc7ebc561a6a6b14f1c/comments", "author": null, "committer": null, "parents": [{"sha": "06c969bd2687012065ba4555e947b6124358f8fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06c969bd2687012065ba4555e947b6124358f8fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06c969bd2687012065ba4555e947b6124358f8fe"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "3872a3584b52a1060feed18e6e1e2dc060ffbdc5", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ead22235d2315c4bd8d1fc7ebc561a6a6b14f1c/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ead22235d2315c4bd8d1fc7ebc561a6a6b14f1c/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=8ead22235d2315c4bd8d1fc7ebc561a6a6b14f1c", "patch": "@@ -1,3 +1,12 @@\n+2011-02-10  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\tPR lto/47241\n+\t* lto.c (lto_read_section_data): Free\n+\tfd_name in failure case.\n+\tFor mingw targets don't hash file-descriptor.\n+\t(read_cgraph_and_symbols): Close current_lto_file\n+\tin failure case.\n+\n 2011-01-11  Jan Hubicka  <jh@suse.cz>\n \n \tPR lto/45721"}, {"sha": "71c8cdb96588ab20ecd3a26d200f939518776dfd", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ead22235d2315c4bd8d1fc7ebc561a6a6b14f1c/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ead22235d2315c4bd8d1fc7ebc561a6a6b14f1c/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=8ead22235d2315c4bd8d1fc7ebc561a6a6b14f1c", "patch": "@@ -590,10 +590,10 @@ lto_read_section_data (struct lto_file_decl_data *file_data,\n     }\n   if (fd == -1)\n     {\n-      fd_name = xstrdup (file_data->file_name);\n       fd = open (file_data->file_name, O_RDONLY|O_BINARY);\n       if (fd == -1)\n \treturn NULL;\n+      fd_name = xstrdup (file_data->file_name);\n     }\n \n #if LTO_MMAP_IO\n@@ -619,9 +619,17 @@ lto_read_section_data (struct lto_file_decl_data *file_data,\n       || read (fd, result, len) != (ssize_t) len)\n     {\n       free (result);\n-      return NULL;\n+      result = NULL;\n     }\n-\n+#ifdef __MINGW32__\n+  /* Native windows doesn't supports delayed unlink on opened file. So\n+     we close file here again. This produces higher I/O load, but at least\n+     it prevents to have dangling file handles preventing unlink.  */\n+  free (fd_name);\n+  fd_name = NULL;\n+  close (fd);\n+  fd = -1;\n+#endif\n   return result;\n #endif\n }    \n@@ -2147,7 +2155,11 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n \n       file_data = lto_file_read (current_lto_file, resolution, &count);\n       if (!file_data)\n-\tbreak;\n+\t{\n+\t  lto_obj_file_close (current_lto_file);\n+\t  current_lto_file = NULL;\n+\t  break;\n+\t}\n \n       decl_data[last_file_ix++] = file_data;\n "}]}