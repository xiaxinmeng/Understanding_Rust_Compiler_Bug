{"sha": "d9cc481a359c713f473a136730e4019124368d6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDljYzQ4MWEzNTljNzEzZjQ3M2ExMzY3MzBlNDAxOTEyNDM2OGQ2Yg==", "commit": {"author": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2008-10-21T17:46:53Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2008-10-21T17:46:53Z"}, "message": "re PR middle-end/37669 (ice for legal code with -O2)\n\n\tPR middle-end/37669\n\t* tree-ssa-ccp.c (ccp_fold_builtin): Only allow one argument to be\n\tprocessed by get_maxval_strlen.\n\ntestsuite/\n\tPR middle-end/37669\n\t* gcc.c-torture/compile/pr37669-2.c: New test.\n\nFrom-SVN: r141270", "tree": {"sha": "d4bce270480b6099fbe304abed7acfee99502ad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4bce270480b6099fbe304abed7acfee99502ad2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9cc481a359c713f473a136730e4019124368d6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9cc481a359c713f473a136730e4019124368d6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9cc481a359c713f473a136730e4019124368d6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9cc481a359c713f473a136730e4019124368d6b/comments", "author": null, "committer": null, "parents": [{"sha": "3b8031bb3103422ccfebb62991dfc64054cd9eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b8031bb3103422ccfebb62991dfc64054cd9eac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b8031bb3103422ccfebb62991dfc64054cd9eac"}], "stats": {"total": 51, "additions": 35, "deletions": 16}, "files": [{"sha": "2400d9966b936edb8458ee587b9d697a33b8344e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9cc481a359c713f473a136730e4019124368d6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9cc481a359c713f473a136730e4019124368d6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9cc481a359c713f473a136730e4019124368d6b", "patch": "@@ -1,3 +1,9 @@\n+2008-10-21  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\tPR middle-end/37669\n+\t* tree-ssa-ccp.c (ccp_fold_builtin): Only allow one argument to be\n+\tprocessed by get_maxval_strlen.\n+\n 2008-10-21  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR target/35485"}, {"sha": "ddabb98422397ec6b402f6a8617ac46075905927", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9cc481a359c713f473a136730e4019124368d6b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9cc481a359c713f473a136730e4019124368d6b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d9cc481a359c713f473a136730e4019124368d6b", "patch": "@@ -1,3 +1,8 @@\n+2008-10-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/37669\n+\t* gcc.c-torture/compile/pr37669-2.c: New test.\n+\n 2008-10-21  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/alias-19.c: New testcase."}, {"sha": "abeae7a2f32fccb7ebcd3ba9d663ae61f22aa0d0", "filename": "gcc/testsuite/gcc.c-torture/compile/pr37669-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9cc481a359c713f473a136730e4019124368d6b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37669-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9cc481a359c713f473a136730e4019124368d6b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37669-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr37669-2.c?ref=d9cc481a359c713f473a136730e4019124368d6b", "patch": "@@ -0,0 +1,14 @@\n+/* PR middle-end/37669 */\n+\n+#define FMT10 \"%d%d%d%d%d%d%d%d%d%d\"\n+#define FMT100 FMT10 FMT10 FMT10 FMT10 FMT10 FMT10 FMT10 FMT10 FMT10 FMT10\n+#define FMT1000 FMT100 FMT100 FMT100 FMT100 FMT100 \\\n+\t\tFMT100 FMT100 FMT100 FMT100 FMT100\n+#define ARG10 , i, i, i, i, i, i, i, i, i, i\n+#define ARG100 ARG10 ARG10 ARG10 ARG10 ARG10 ARG10 ARG10 ARG10 ARG10 ARG10\n+#define ARG1000 ARG100 ARG100 ARG100 ARG100 ARG100 \\\n+\t\tARG100 ARG100 ARG100 ARG100 ARG100\n+void foo (char *s, int i, int j)\n+{\n+  __builtin___snprintf_chk (s, i, 1, j, FMT1000 ARG1000);\n+}"}, {"sha": "0365697fc85e4d2dd596f5b65132666d91db7353", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9cc481a359c713f473a136730e4019124368d6b/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9cc481a359c713f473a136730e4019124368d6b/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=d9cc481a359c713f473a136730e4019124368d6b", "patch": "@@ -2430,7 +2430,7 @@ ccp_fold_builtin (gimple stmt)\n {\n   tree result, val[3];\n   tree callee, a;\n-  int arg_mask, i, type;\n+  int arg_idx, type;\n   bitmap visited;\n   bool ignore;\n   int nargs;\n@@ -2466,30 +2466,30 @@ ccp_fold_builtin (gimple stmt)\n     case BUILT_IN_STRLEN:\n     case BUILT_IN_FPUTS:\n     case BUILT_IN_FPUTS_UNLOCKED:\n-      arg_mask = 1;\n+      arg_idx = 0;\n       type = 0;\n       break;\n     case BUILT_IN_STRCPY:\n     case BUILT_IN_STRNCPY:\n-      arg_mask = 2;\n+      arg_idx = 1;\n       type = 0;\n       break;\n     case BUILT_IN_MEMCPY_CHK:\n     case BUILT_IN_MEMPCPY_CHK:\n     case BUILT_IN_MEMMOVE_CHK:\n     case BUILT_IN_MEMSET_CHK:\n     case BUILT_IN_STRNCPY_CHK:\n-      arg_mask = 4;\n+      arg_idx = 2;\n       type = 2;\n       break;\n     case BUILT_IN_STRCPY_CHK:\n     case BUILT_IN_STPCPY_CHK:\n-      arg_mask = 2;\n+      arg_idx = 1;\n       type = 1;\n       break;\n     case BUILT_IN_SNPRINTF_CHK:\n     case BUILT_IN_VSNPRINTF_CHK:\n-      arg_mask = 2;\n+      arg_idx = 1;\n       type = 2;\n       break;\n     default:\n@@ -2498,18 +2498,12 @@ ccp_fold_builtin (gimple stmt)\n \n   /* Try to use the dataflow information gathered by the CCP process.  */\n   visited = BITMAP_ALLOC (NULL);\n+  bitmap_clear (visited);\n \n   memset (val, 0, sizeof (val));\n-  for (i = 0; i < nargs; i++)\n-    {\n-      if ((arg_mask >> i) & 1)\n-        {\n-          a = gimple_call_arg (stmt, i);\n-          bitmap_clear (visited);\n-          if (!get_maxval_strlen (a, &val[i], visited, type))\n-            val[i] = NULL_TREE;\n-        }\n-    }\n+  a = gimple_call_arg (stmt, arg_idx);\n+  if (!get_maxval_strlen (a, &val[arg_idx], visited, type))\n+    val[arg_idx] = NULL_TREE;\n \n   BITMAP_FREE (visited);\n "}]}