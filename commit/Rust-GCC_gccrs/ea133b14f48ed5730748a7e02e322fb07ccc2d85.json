{"sha": "ea133b14f48ed5730748a7e02e322fb07ccc2d85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWExMzNiMTRmNDhlZDU3MzA3NDhhN2UwMmUzMjJmYjA3Y2NjMmQ4NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-10-25T08:08:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-10-25T08:08:44Z"}, "message": "tree-vect-loop.c (vectorizable_reduction): Verify STMT_VINFO_REDUC_IDX on the to be vectorized stmts is set up correctly.\n\n2019-10-25  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-loop.c (vectorizable_reduction): Verify\n\tSTMT_VINFO_REDUC_IDX on the to be vectorized stmts is set up\n\tcorrectly.\n\t* tree-vect-patterns.c (vect_mark_pattern_stmts): Transfer\n\tSTMT_VINFO_REDUC_IDX from the original stmts to the pattern\n\tstmts.\n\nFrom-SVN: r277437", "tree": {"sha": "c5952a91138d366ad57f8295ba59f1dd378ed1ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5952a91138d366ad57f8295ba59f1dd378ed1ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea133b14f48ed5730748a7e02e322fb07ccc2d85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea133b14f48ed5730748a7e02e322fb07ccc2d85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea133b14f48ed5730748a7e02e322fb07ccc2d85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea133b14f48ed5730748a7e02e322fb07ccc2d85/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0f9baa2952727d22ed55fdd8c6eb3c75a0864e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f9baa2952727d22ed55fdd8c6eb3c75a0864e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0f9baa2952727d22ed55fdd8c6eb3c75a0864e0"}], "stats": {"total": 75, "additions": 74, "deletions": 1}, "files": [{"sha": "bb64e932ae8c76ccbc033a722546c41a939b4807", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea133b14f48ed5730748a7e02e322fb07ccc2d85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea133b14f48ed5730748a7e02e322fb07ccc2d85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea133b14f48ed5730748a7e02e322fb07ccc2d85", "patch": "@@ -1,3 +1,12 @@\n+2019-10-25  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-loop.c (vectorizable_reduction): Verify\n+\tSTMT_VINFO_REDUC_IDX on the to be vectorized stmts is set up\n+\tcorrectly.\n+\t* tree-vect-patterns.c (vect_mark_pattern_stmts): Transfer\n+\tSTMT_VINFO_REDUC_IDX from the original stmts to the pattern\n+\tstmts.\n+\n 2019-10-24  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gimplify.h (omp_construct_selector_matches): Declare."}, {"sha": "d0fd7bdbf803583407617644b7190f8e95c9670b", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea133b14f48ed5730748a7e02e322fb07ccc2d85/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea133b14f48ed5730748a7e02e322fb07ccc2d85/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=ea133b14f48ed5730748a7e02e322fb07ccc2d85", "patch": "@@ -5719,7 +5719,19 @@ vectorizable_reduction (stmt_vec_info stmt_info, slp_tree slp_node,\n   /* PHIs should not participate in patterns.  */\n   gcc_assert (!STMT_VINFO_RELATED_STMT (phi_info));\n   gphi *reduc_def_phi = as_a <gphi *> (phi_info->stmt);\n-  tree reduc_def = PHI_RESULT (reduc_def_phi);\n+\n+  /* Verify following REDUC_IDX from the latch def leads us back to the PHI.  */\n+  tree reduc_def = PHI_ARG_DEF_FROM_EDGE (reduc_def_phi,\n+\t\t\t\t\t  loop_latch_edge (loop));\n+  while (reduc_def != PHI_RESULT (reduc_def_phi))\n+    {\n+      stmt_vec_info def = loop_vinfo->lookup_def (reduc_def);\n+      def = vect_stmt_to_vectorize (def);\n+      gcc_assert (STMT_VINFO_REDUC_IDX (def) != -1);\n+      reduc_def = gimple_op (def->stmt, 1 + STMT_VINFO_REDUC_IDX (def));\n+    }\n+\n+  reduc_def = PHI_RESULT (reduc_def_phi);\n   int reduc_index = -1;\n   for (i = 0; i < op_type; i++)\n     {"}, {"sha": "31e9e2a0859b5eaffb83f1932bd770a5e9038fe3", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea133b14f48ed5730748a7e02e322fb07ccc2d85/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea133b14f48ed5730748a7e02e322fb07ccc2d85/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=ea133b14f48ed5730748a7e02e322fb07ccc2d85", "patch": "@@ -5075,6 +5075,7 @@ static inline void\n vect_mark_pattern_stmts (stmt_vec_info orig_stmt_info, gimple *pattern_stmt,\n                          tree pattern_vectype)\n {\n+  stmt_vec_info orig_stmt_info_saved = orig_stmt_info;\n   gimple *def_seq = STMT_VINFO_PATTERN_DEF_SEQ (orig_stmt_info);\n \n   gimple *orig_pattern_stmt = NULL;\n@@ -5134,6 +5135,57 @@ vect_mark_pattern_stmts (stmt_vec_info orig_stmt_info, gimple *pattern_stmt,\n     }\n   else\n     vect_set_pattern_stmt (pattern_stmt, orig_stmt_info, pattern_vectype);\n+\n+  /* Transfer reduction path info to the pattern.  */\n+  if (STMT_VINFO_REDUC_IDX (orig_stmt_info_saved) != -1)\n+    {\n+      vec_info *vinfo = orig_stmt_info_saved->vinfo;\n+      tree lookfor = gimple_op (orig_stmt_info_saved->stmt,\n+\t\t\t\t1 + STMT_VINFO_REDUC_IDX (orig_stmt_info));\n+      /* Search the pattern def sequence and the main pattern stmt.  Note\n+         we may have inserted all into a containing pattern def sequence\n+\t so the following is a bit awkward.  */\n+      gimple_stmt_iterator si;\n+      gimple *s;\n+      if (def_seq)\n+\t{\n+\t  si = gsi_start (def_seq);\n+\t  s = gsi_stmt (si);\n+\t  gsi_next (&si);\n+\t}\n+      else\n+\t{\n+\t  si = gsi_none ();\n+\t  s = pattern_stmt;\n+\t}\n+      do\n+\t{\n+\t  bool found = false;\n+\t  for (unsigned i = 1; i < gimple_num_ops (s); ++i)\n+\t    if (gimple_op (s, i) == lookfor)\n+\t      {\n+\t\tSTMT_VINFO_REDUC_IDX (vinfo->lookup_stmt (s)) = i - 1;\n+\t\tlookfor = gimple_get_lhs (s);\n+\t\tfound = true;\n+\t\tbreak;\n+\t      }\n+\t  if (found && s == pattern_stmt)\n+\t    break;\n+\t  if (s == pattern_stmt)\n+\t    gcc_unreachable ();\n+\t  if (gsi_end_p (si))\n+\t    s = pattern_stmt;\n+\t  else\n+\t    {\n+\t      s = gsi_stmt (si);\n+\t      if (s == pattern_stmt)\n+\t\t/* Found the end inside a bigger pattern def seq.  */\n+\t\tsi = gsi_none ();\n+\t      else\n+\t\tgsi_next (&si);\n+\t    }\n+\t} while (1);\n+    }\n }\n \n /* Function vect_pattern_recog_1"}]}