{"sha": "2bafad93f704c2909c8b5988a0b0e98b57993617", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJhZmFkOTNmNzA0YzI5MDljOGI1OTg4YTBiMGU5OGI1Nzk5MzYxNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-01-29T23:21:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-01-29T23:21:24Z"}, "message": "re PR middle-end/34969 (ICE with -fipa-cp -ffast-math)\n\n\tPR middle-end/34969\n\t* cgraph.h (cgraph_update_edges_for_call_stmt): New prototype.\n\t* cgraph.c (cgraph_update_edges_for_call_stmt): New function.\n\t* tree-inline.c (fold_marked_statements): Call\n\tcgraph_update_edges_for_call_stmt if folding a call statement.\n\t* cgraphunit.c (verify_cgraph_node): Set cfun to this_cfun for\n\tdebug_generic_stmt calls, reset it back afterwards.\n\n\t* gcc.dg/pr34969.c: New test.\n\nFrom-SVN: r131946", "tree": {"sha": "e67112931bc0870ff4c9d06efcb44ad08a4da4f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e67112931bc0870ff4c9d06efcb44ad08a4da4f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bafad93f704c2909c8b5988a0b0e98b57993617", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bafad93f704c2909c8b5988a0b0e98b57993617", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bafad93f704c2909c8b5988a0b0e98b57993617", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bafad93f704c2909c8b5988a0b0e98b57993617/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1033ffa8b312170efeeef1f3e4f58ced8075eaea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1033ffa8b312170efeeef1f3e4f58ced8075eaea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1033ffa8b312170efeeef1f3e4f58ced8075eaea"}], "stats": {"total": 92, "additions": 88, "deletions": 4}, "files": [{"sha": "450214646c1ab84fa46eda5111f30307b3180ea5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2bafad93f704c2909c8b5988a0b0e98b57993617", "patch": "@@ -1,5 +1,13 @@\n 2008-01-30  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/34969\n+\t* cgraph.h (cgraph_update_edges_for_call_stmt): New prototype.\n+\t* cgraph.c (cgraph_update_edges_for_call_stmt): New function.\n+\t* tree-inline.c (fold_marked_statements): Call\n+\tcgraph_update_edges_for_call_stmt if folding a call statement.\n+\t* cgraphunit.c (verify_cgraph_node): Set cfun to this_cfun for\n+\tdebug_generic_stmt calls, reset it back afterwards.\n+\n \tPR c/35017\n \t* c-decl.c (start_decl): Don't pedwarn about TREE_READONLY\n \tstatic decls."}, {"sha": "649915e46181d1e3df72e55b7dea752a4597e202", "filename": "gcc/cgraph.c", "status": "modified", "additions": 47, "deletions": 1, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=2bafad93f704c2909c8b5988a0b0e98b57993617", "patch": "@@ -1,5 +1,6 @@\n /* Callgraph handling code.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008\n+   Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n This file is part of GCC.\n@@ -440,6 +441,51 @@ cgraph_redirect_edge_callee (struct cgraph_edge *e, struct cgraph_node *n)\n   e->callee = n;\n }\n \n+/* Update or remove corresponding cgraph edge if a call OLD_CALL\n+   in OLD_STMT changed into NEW_STMT.  */\n+\n+void\n+cgraph_update_edges_for_call_stmt (tree old_stmt, tree old_call,\n+\t\t\t\t   tree new_stmt)\n+{\n+  tree new_call = get_call_expr_in (new_stmt);\n+  struct cgraph_node *node = cgraph_node (cfun->decl);\n+\n+  if (old_call != new_call)\n+    {\n+      struct cgraph_edge *e = cgraph_edge (node, old_stmt);\n+      struct cgraph_edge *ne = NULL;\n+      tree new_decl;\n+\n+      if (e)\n+\t{\n+\t  gcov_type count = e->count;\n+\t  int frequency = e->frequency;\n+\t  int loop_nest = e->loop_nest;\n+\n+\t  cgraph_remove_edge (e);\n+\t  if (new_call)\n+\t    {\n+\t      new_decl = get_callee_fndecl (new_call);\n+\t      if (new_decl)\n+\t\t{\n+\t\t  ne = cgraph_create_edge (node, cgraph_node (new_decl),\n+\t\t\t\t\t   new_stmt, count, frequency,\n+\t\t\t\t\t   loop_nest);\n+\t\t  gcc_assert (ne->inline_failed);\n+\t\t}\n+\t    }\n+\t}\n+    }\n+  else if (old_stmt != new_stmt)\n+    {\n+      struct cgraph_edge *e = cgraph_edge (node, old_stmt);\n+\n+      if (e)\n+\tcgraph_set_call_stmt (e, new_stmt);\n+    }\n+}\n+\n /* Remove all callees from the node.  */\n \n void"}, {"sha": "89ffeb6c45c0baf423914732cab8ae82af9b7036", "filename": "gcc/cgraph.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=2bafad93f704c2909c8b5988a0b0e98b57993617", "patch": "@@ -1,5 +1,6 @@\n /* Callgraph handling code.\n-   Copyright (C) 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008\n+   Free Software Foundation, Inc.\n    Contributed by Jan Hubicka\n \n This file is part of GCC.\n@@ -303,6 +304,7 @@ struct cgraph_node *cgraph_node (tree);\n struct cgraph_node *cgraph_node_for_asm (tree asmname);\n struct cgraph_edge *cgraph_edge (struct cgraph_node *, tree);\n void cgraph_set_call_stmt (struct cgraph_edge *, tree);\n+void cgraph_update_edges_for_call_stmt (tree, tree, tree);\n struct cgraph_local_info *cgraph_local_info (tree);\n struct cgraph_global_info *cgraph_global_info (tree);\n struct cgraph_rtl_info *cgraph_rtl_info (tree);"}, {"sha": "0d6a9fed9fcd5424ff6dc9a997d8392b52b1fa2c", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=2bafad93f704c2909c8b5988a0b0e98b57993617", "patch": "@@ -658,6 +658,7 @@ verify_cgraph_node (struct cgraph_node *node)\n   struct cgraph_edge *e;\n   struct cgraph_node *main_clone;\n   struct function *this_cfun = DECL_STRUCT_FUNCTION (node->decl);\n+  struct function *saved_cfun = cfun;\n   basic_block this_block;\n   block_stmt_iterator bsi;\n   bool error_found = false;\n@@ -666,6 +667,8 @@ verify_cgraph_node (struct cgraph_node *node)\n     return;\n \n   timevar_push (TV_CGRAPH_VERIFY);\n+  /* debug_generic_stmt needs correct cfun */\n+  set_cfun (this_cfun);\n   for (e = node->callees; e; e = e->next_callee)\n     if (e->aux)\n       {\n@@ -808,6 +811,7 @@ verify_cgraph_node (struct cgraph_node *node)\n       dump_cgraph_node (stderr, node);\n       internal_error (\"verify_cgraph_node failed\");\n     }\n+  set_cfun (saved_cfun);\n   timevar_pop (TV_CGRAPH_VERIFY);\n }\n "}, {"sha": "5369f58ec08cedadfb65b1cb23003198da6d7d77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2bafad93f704c2909c8b5988a0b0e98b57993617", "patch": "@@ -1,5 +1,8 @@\n 2008-01-30  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/34969\n+\t* gcc.dg/pr34969.c: New test.\n+\n \tPR c/35017\n \t* gcc.dg/inline-25.c: New test.\n \t* gcc.dg/inline-26.c: New test."}, {"sha": "02f7dd1aaac2ce1512f36d9d98fc39fc057c4129", "filename": "gcc/testsuite/gcc.dg/pr34969.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34969.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34969.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34969.c?ref=2bafad93f704c2909c8b5988a0b0e98b57993617", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/34969 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fipa-cp -ffast-math\" } */\n+\n+double\n+foo (double x)\n+{\n+  return x * x;\n+}\n+\n+double\n+bar (void)\n+{\n+  return foo (0);\n+}"}, {"sha": "b683f20a70ea99b858b7107400d409c4ea4bac39", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bafad93f704c2909c8b5988a0b0e98b57993617/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=2bafad93f704c2909c8b5988a0b0e98b57993617", "patch": "@@ -2942,11 +2942,17 @@ fold_marked_statements (int first, struct pointer_set_t *statements)\n \t  if (pointer_set_contains (statements, bsi_stmt (bsi)))\n \t    {\n \t      tree old_stmt = bsi_stmt (bsi);\n+\t      tree old_call = get_call_expr_in (old_stmt);\n+\n \t      if (fold_stmt (bsi_stmt_ptr (bsi)))\n \t\t{\n \t\t  update_stmt (bsi_stmt (bsi));\n-\t\t  if (maybe_clean_or_replace_eh_stmt (old_stmt, bsi_stmt (bsi)))\n-\t\t     tree_purge_dead_eh_edges (BASIC_BLOCK (first));\n+\t\t  if (old_call)\n+\t\t    cgraph_update_edges_for_call_stmt (old_stmt, old_call,\n+\t\t\t\t\t\t       bsi_stmt (bsi));\n+\t\t  if (maybe_clean_or_replace_eh_stmt (old_stmt,\n+\t\t\t\t\t\t      bsi_stmt (bsi)))\n+\t\t    tree_purge_dead_eh_edges (BASIC_BLOCK (first));\n \t\t}\n \t    }\n       }"}]}