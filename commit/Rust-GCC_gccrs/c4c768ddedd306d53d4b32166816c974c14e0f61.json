{"sha": "c4c768ddedd306d53d4b32166816c974c14e0f61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRjNzY4ZGRlZGQzMDZkNTNkNGIzMjE2NjgxNmM5NzRjMTRlMGY2MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-05-15T09:34:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-05-15T09:34:10Z"}, "message": "[multiple changes]\n\n2012-05-15  Geert Bosch  <bosch@adacore.com>\n\n\t* sem_ch9.adb (Allows_Lock_Free_Implementation): out or in out\n\tparameters can be access types as well, not just scalar types,\n\tso relax the test to Is_Elementary_Type.\n\n2012-05-15  Bob Duff  <duff@adacore.com>\n\n\t* s-atacco.ads s-atacco.adb: Replace pragma Elaborate_Body\n\twith pragma No_Body.\n\t(Xyz): Remove Xyz, which is apparently unnecessary.\n\n2012-05-15  Tristan Gingold  <gingold@adacore.com>\n\n\t* a-calend-vms.adb: Complete previous change.\n\n2012-05-15  Bob Duff  <duff@adacore.com>\n\n\t* s-win32.ads: Minor comment fix.\n\t* s-osprim-mingw.adb: Minor editing.\n\nFrom-SVN: r187508", "tree": {"sha": "d0e76e1552775f7c169379d42fd863fc6f730459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0e76e1552775f7c169379d42fd863fc6f730459"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4c768ddedd306d53d4b32166816c974c14e0f61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4c768ddedd306d53d4b32166816c974c14e0f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4c768ddedd306d53d4b32166816c974c14e0f61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4c768ddedd306d53d4b32166816c974c14e0f61/comments", "author": null, "committer": null, "parents": [{"sha": "33960e2e8ad75ac54052c24ce8ba8dbd447ef300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33960e2e8ad75ac54052c24ce8ba8dbd447ef300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33960e2e8ad75ac54052c24ce8ba8dbd447ef300"}], "stats": {"total": 84, "additions": 50, "deletions": 34}, "files": [{"sha": "33d66c63018cee1c78cf7e592de058cb5ab58623", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c4c768ddedd306d53d4b32166816c974c14e0f61", "patch": "@@ -1,3 +1,24 @@\n+2012-05-15  Geert Bosch  <bosch@adacore.com>\n+\n+\t* sem_ch9.adb (Allows_Lock_Free_Implementation): out or in out\n+\tparameters can be access types as well, not just scalar types,\n+\tso relax the test to Is_Elementary_Type.\n+\n+2012-05-15  Bob Duff  <duff@adacore.com>\n+\n+\t* s-atacco.ads s-atacco.adb: Replace pragma Elaborate_Body\n+\twith pragma No_Body.\n+\t(Xyz): Remove Xyz, which is apparently unnecessary.\n+\n+2012-05-15  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* a-calend-vms.adb: Complete previous change.\n+\n+2012-05-15  Bob Duff  <duff@adacore.com>\n+\n+\t* s-win32.ads: Minor comment fix.\n+\t* s-osprim-mingw.adb: Minor editing.\n+\n 2012-05-15  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch9.adb, sem_ch9.adb, sem_ch13.adb: Minor reformatting."}, {"sha": "dc7c23e75328fb2d5504276a07bd7e87daff0319", "filename": "gcc/ada/a-calend-vms.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fa-calend-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fa-calend-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend-vms.adb?ref=c4c768ddedd306d53d4b32166816c974c14e0f61", "patch": "@@ -915,8 +915,19 @@ package body Ada.Calendar is\n          --  Step 1: Split the input time\n \n          Formatting_Operations.Split\n-           (T, Year, Month, tm_day, Day_Secs,\n-            tm_hour, tm_min, Second, Sub_Sec, Leap_Sec, True, 0);\n+           (Date        => T,\n+            Year        => Year,\n+            Month       => Month,\n+            Day         => tm_day,\n+            Day_Secs    => Day_Secs,\n+            Hour        => tm_hour,\n+            Minute      => tm_min,\n+            Second      => Second,\n+            Sub_Sec     => Sub_Sec,\n+            Leap_Sec    => Leap_Sec,\n+            Use_TZ      => True,\n+            Is_Historic => False,\n+            Time_Zone   => 0);\n \n          --  Step 2: Correct the year and month\n "}, {"sha": "f1998fa71f83cd1615f3f3e54ebf59f7a1ec980c", "filename": "gcc/ada/s-atacco.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fs-atacco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fs-atacco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atacco.adb?ref=c4c768ddedd306d53d4b32166816c974c14e0f61", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,10 +29,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a dummy version of this package that is needed to solve bootstrap\n---  problems when compiling a library that doesn't require s-atacco.adb from\n---  a compiler that contains one.\n+--  This package does not require a body, since it is a package renaming. We\n+--  provide a dummy file containing a No_Body pragma so that previous versions\n+--  of the body (which did exist) will not interfere.\n \n-package body System.Address_To_Access_Conversions is\n-\n-end System.Address_To_Access_Conversions;\n+pragma No_Body;"}, {"sha": "fb6232d14ae44e6425734e114721694917bfd91e", "filename": "gcc/ada/s-atacco.ads", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fs-atacco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fs-atacco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atacco.ads?ref=c4c768ddedd306d53d4b32166816c974c14e0f61", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -38,24 +38,12 @@ generic\n \n package System.Address_To_Access_Conversions is\n    pragma Preelaborate;\n-   pragma Elaborate_Body;\n-   --  This pragma Elaborate_Body is there to ensure the requirement of what is\n-   --  at the moment a dummy null body. The reason this null body is there is\n-   --  that we used to have a real body, and it causes bootstrap problems with\n-   --  old compilers if we try to remove the corresponding file.\n \n    pragma Compile_Time_Warning\n      (Object'Unconstrained_Array,\n       \"Object is unconstrained array type\" & ASCII.LF &\n       \"To_Pointer results may not have bounds\");\n \n-   --  Capture constrained status, suppressing warnings, since this is\n-   --  an obsolescent feature to use Constrained in this way (RM J.4).\n-\n-   pragma Warnings (Off);\n-   Xyz : Boolean := Object'Constrained;\n-   pragma Warnings (On);\n-\n    type Object_Pointer is access all Object;\n    for Object_Pointer'Size use Standard'Address_Size;\n "}, {"sha": "a658f71f318c39eedff76925071de22bbd759bca", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=c4c768ddedd306d53d4b32166816c974c14e0f61", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -50,9 +50,6 @@ package body System.OS_Primitives is\n    --  libgnarl.dll. The indirection level introduced here has no measurable\n    --  penalties.\n \n-   --  Note that access variables below must not be declared as constant\n-   --  otherwise the compiler optimization will remove this indirect access.\n-\n    type DA is access all Duration;\n    --  Use to have indirect access to multi-word variables\n \n@@ -129,9 +126,9 @@ package body System.OS_Primitives is\n                   Long_Long_Float (TFA.all));\n \n       --  If we have a shift of more than Max_Shift seconds we resynchronize\n-      --  the Clock. This is probably due to a manual Clock adjustment, an\n-      --  DST adjustment or an NTP synchronisation. And we want to adjust the\n-      --  time for this system (non-monotonic) clock.\n+      --  the Clock. This is probably due to a manual Clock adjustment, a DST\n+      --  adjustment or an NTP synchronisation. And we want to adjust the time\n+      --  for this system (non-monotonic) clock.\n \n       if abs (Elap_Secs_Sys - Elap_Secs_Tick) > Max_Shift then\n          Get_Base_Time;\n@@ -179,7 +176,7 @@ package body System.OS_Primitives is\n       --  a performance counter which has a better precision than the Win32\n       --  time API.\n \n-      --  Try at most 10th times to reach the best synchronisation (below 1\n+      --  Try at most 10 times to reach the best synchronisation (below 1\n       --  millisecond) otherwise the runtime will use the best value reached\n       --  during the runs.\n \n@@ -239,6 +236,7 @@ package body System.OS_Primitives is\n    function Monotonic_Clock return Duration is\n       Current_Ticks  : aliased LARGE_INTEGER;\n       Elap_Secs_Tick : Duration;\n+\n    begin\n       if QueryPerformanceCounter (Current_Ticks'Access) = Win32.FALSE then\n          return 0.0;"}, {"sha": "d3343252f16f809dbf1995b43dc12387528f705b", "filename": "gcc/ada/s-win32.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fs-win32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fs-win32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-win32.ads?ref=c4c768ddedd306d53d4b32166816c974c14e0f61", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---         Copyright (C) 2008-2009, Free Software Foundation, Inc.          --\n+--         Copyright (C) 2008-2012, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,7 +46,7 @@ package System.Win32 is\n    --  The LARGE_INTEGER type is actually a fixed point type\n    --  that only can represent integers. The reason for this is\n    --  easier conversion to Duration or other fixed point types.\n-   --  (See Operations.Clock)\n+   --  (See System.OS_Primitives.Clock, mingw and rtx versions.)\n \n    type LARGE_INTEGER is delta 1.0 range -2.0**63 .. 2.0**63 - 1.0;\n "}, {"sha": "76db08c5e4fbfecf97351275612afcecfe739776", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4c768ddedd306d53d4b32166816c974c14e0f61/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=c4c768ddedd306d53d4b32166816c974c14e0f61", "patch": "@@ -82,7 +82,7 @@ package body Sem_Ch9 is\n    --            May reference only one protected component\n    --            May not reference non-constant entities outside the protected\n    --              subprogram scope.\n-   --            May not reference non-scalar out parameters\n+   --            May not reference non-elementary out parameters\n    --            May not contain loop statements or procedure calls\n    --            Function calls and attribute references must be static\n    --\n@@ -306,7 +306,7 @@ package body Sem_Ch9 is\n \n                         elsif Ekind_In (Id, E_Out_Parameter,\n                                             E_In_Out_Parameter)\n-                          and then not Is_Scalar_Type (Etype (Id))\n+                          and then not Is_Elementary_Type (Etype (Id))\n                           and then Scope_Within_Or_Same (Scope (Id), Sub_Id)\n                         then\n                            return Abandon;"}]}