{"sha": "baf7a0d33c7820b048fffe2da276748d5ecbcce9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFmN2EwZDMzYzc4MjBiMDQ4ZmZmZTJkYTI3Njc0OGQ1ZWNiY2NlOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2005-07-31T20:55:41Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2005-07-31T20:55:41Z"}, "message": "pretty-print.h (pp_widest_integer): New macro.\n\n\t* pretty-print.h (pp_widest_integer): New macro.\n\t* tree-pretty-print.c (dump_bb_header): Print BB frequencies and\n\tcounts.\n\nFrom-SVN: r102608", "tree": {"sha": "01adf335c9a46cf27322677a09661de28c5417e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01adf335c9a46cf27322677a09661de28c5417e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/baf7a0d33c7820b048fffe2da276748d5ecbcce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf7a0d33c7820b048fffe2da276748d5ecbcce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baf7a0d33c7820b048fffe2da276748d5ecbcce9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf7a0d33c7820b048fffe2da276748d5ecbcce9/comments", "author": null, "committer": null, "parents": [{"sha": "75d2cf695f0ad555d6e37a95bbb4d186c78c58d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d2cf695f0ad555d6e37a95bbb4d186c78c58d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75d2cf695f0ad555d6e37a95bbb4d186c78c58d6"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "45c082fee6b4e59162d72418d024b8cc2b5fffa8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf7a0d33c7820b048fffe2da276748d5ecbcce9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf7a0d33c7820b048fffe2da276748d5ecbcce9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=baf7a0d33c7820b048fffe2da276748d5ecbcce9", "patch": "@@ -1,3 +1,9 @@\n+2005-07-31  Jan Hubicka  <jh@suse.cz>\n+\n+\t* pretty-print.h (pp_widest_integer): New macro.\n+\t* tree-pretty-print.c (dump_bb_header): Print BB frequencies and\n+\tcounts.\n+\n 2005-07-31  Jan Hubicka  <jh@suse.cz>\n \n \t* output.h (enum section_category): Export from varasm.c"}, {"sha": "b2c6772b7c04f0d7ddb69bfa4acc6ae86813587f", "filename": "gcc/pretty-print.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf7a0d33c7820b048fffe2da276748d5ecbcce9/gcc%2Fpretty-print.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf7a0d33c7820b048fffe2da276748d5ecbcce9/gcc%2Fpretty-print.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.h?ref=baf7a0d33c7820b048fffe2da276748d5ecbcce9", "patch": "@@ -269,6 +269,8 @@ struct pretty_print_info\n #define pp_decimal_int(PP, I)  pp_scalar (PP, \"%d\", I)\n #define pp_wide_integer(PP, I) \\\n    pp_scalar (PP, HOST_WIDE_INT_PRINT_DEC, (HOST_WIDE_INT) I)\n+#define pp_widest_integer(PP, I) \\\n+   pp_scalar (PP, HOST_WIDEST_INT_PRINT_DEC, (HOST_WIDEST_INT) I)\n #define pp_pointer(PP, P)      pp_scalar (PP, \"%p\", P)\n \n #define pp_identifier(PP, ID)  pp_string (PP, ID)"}, {"sha": "6fa0326d429c75e46804f42a2c13785b7947f8df", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf7a0d33c7820b048fffe2da276748d5ecbcce9/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf7a0d33c7820b048fffe2da276748d5ecbcce9/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=baf7a0d33c7820b048fffe2da276748d5ecbcce9", "patch": "@@ -2247,6 +2247,16 @@ dump_bb_header (pretty_printer *buffer, basic_block bb, int indent, int flags)\n       INDENT (indent);\n       pp_string (buffer, \"# BLOCK \");\n       pp_decimal_int (buffer, bb->index);\n+      if (bb->frequency)\n+\t{\n+          pp_string (buffer, \" freq:\");\n+          pp_decimal_int (buffer, bb->frequency);\n+\t}\n+      if (bb->count)\n+\t{\n+          pp_string (buffer, \" count:\");\n+          pp_widest_integer (buffer, bb->count);\n+\t}\n \n       if (flags & TDF_LINENO)\n \t{"}]}