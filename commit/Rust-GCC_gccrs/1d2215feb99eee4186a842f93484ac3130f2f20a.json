{"sha": "1d2215feb99eee4186a842f93484ac3130f2f20a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQyMjE1ZmViOTllZWU0MTg2YTg0MmY5MzQ4NGFjMzEzMGYyZjIwYQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-01-01T00:43:16Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-01-01T00:43:16Z"}, "message": "resource.c (mark_referenced_resources): Abort() before attempting to mark a pseudo register.\n\n* resource.c (mark_referenced_resources): Abort() before\nattempting to mark a pseudo register.\n(mark_set_resources): Likewise.\n\nFrom-SVN: r38581", "tree": {"sha": "d4fc182665387c2a3682d06ffa7ed405877477f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4fc182665387c2a3682d06ffa7ed405877477f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d2215feb99eee4186a842f93484ac3130f2f20a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d2215feb99eee4186a842f93484ac3130f2f20a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d2215feb99eee4186a842f93484ac3130f2f20a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d2215feb99eee4186a842f93484ac3130f2f20a/comments", "author": null, "committer": null, "parents": [{"sha": "8b634749abb593dd61bbb3b4c0c8eb6861b92c65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b634749abb593dd61bbb3b4c0c8eb6861b92c65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b634749abb593dd61bbb3b4c0c8eb6861b92c65"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "071513750fc7d1ba609c2668275bb98e6e97c1c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d2215feb99eee4186a842f93484ac3130f2f20a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d2215feb99eee4186a842f93484ac3130f2f20a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d2215feb99eee4186a842f93484ac3130f2f20a", "patch": "@@ -1,3 +1,9 @@\n+2000-12-31  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* resource.c (mark_referenced_resources): Abort() before\n+\tattempting to mark a pseudo register.\n+\t(mark_set_resources): Likewise.\n+\n 2001-01-01  Michael Hayes  <mhayes@redhat.com>\n \n \t* loop.h (REG_IV_CLASS): New accessor macro."}, {"sha": "fa7e95730612cd55e6231138ed40aa32fee29dff", "filename": "gcc/resource.c", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d2215feb99eee4186a842f93484ac3130f2f20a/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d2215feb99eee4186a842f93484ac3130f2f20a/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=1d2215feb99eee4186a842f93484ac3130f2f20a", "patch": "@@ -212,14 +212,24 @@ mark_referenced_resources (x, res, include_delayed_effects)\n \t  unsigned int last_regno\n \t    = regno + HARD_REGNO_NREGS (regno, GET_MODE (x));\n \n+\t  if (last_regno > FIRST_PSEUDO_REGISTER)\n+\t    abort ();\n \t  for (r = regno; r < last_regno; r++)\n \t    SET_HARD_REG_BIT (res->regs, r);\n \t}\n       return;\n \n     case REG:\n-      for (r = 0; r < HARD_REGNO_NREGS (REGNO (x), GET_MODE (x)); r++)\n-\tSET_HARD_REG_BIT (res->regs, REGNO (x) + r);\n+\t{\n+\t  unsigned int regno = REGNO (x);\n+\t  unsigned int last_regno\n+\t    = regno + HARD_REGNO_NREGS (regno, GET_MODE (x));\n+\n+\t  if (last_regno > FIRST_PSEUDO_REGISTER)\n+\t    abort ();\n+\t  for (r = regno; r < last_regno; r++)\n+\t    SET_HARD_REG_BIT (res->regs, r);\n+\t}\n       return;\n \n     case MEM:\n@@ -760,6 +770,8 @@ mark_set_resources (x, res, in_dest, mark_type)\n \t      unsigned int last_regno\n \t\t= regno + HARD_REGNO_NREGS (regno, GET_MODE (x));\n \n+\t      if (last_regno > FIRST_PSEUDO_REGISTER)\n+\t\tabort ();\n \t      for (r = regno; r < last_regno; r++)\n \t\tSET_HARD_REG_BIT (res->regs, r);\n \t    }\n@@ -768,8 +780,16 @@ mark_set_resources (x, res, in_dest, mark_type)\n \n     case REG:\n       if (in_dest)\n-        for (r = 0; r < HARD_REGNO_NREGS (REGNO (x), GET_MODE (x)); r++)\n-\t  SET_HARD_REG_BIT (res->regs, REGNO (x) + r);\n+\t{\n+\t  unsigned int regno = REGNO (x);\n+\t  unsigned int last_regno\n+\t    = regno + HARD_REGNO_NREGS (regno, GET_MODE (x));\n+\n+\t  if (last_regno > FIRST_PSEUDO_REGISTER)\n+\t    abort ();\n+\t  for (r = regno; r < last_regno; r++)\n+\t    SET_HARD_REG_BIT (res->regs, r);\n+\t}\n       return;\n \n     case STRICT_LOW_PART:"}]}