{"sha": "6bde3eb52c0e21aca8d40442d6832589dccebcc6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJkZTNlYjUyYzBlMjFhY2E4ZDQwNDQyZDY4MzI1ODlkY2NlYmNjNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T08:20:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-05-06T08:20:13Z"}, "message": "[multiple changes]\n\n2009-05-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Record_Aggregate): If a defaulted component of\n\tan aggregate with box default is of a discriminated private type, do\n\tnot build a subaggregate for it.\n\tA proper call to the initialization procedure is generated for it.\n\n2009-05-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* rtsfind.adb, rtsfind.ads, exp_dist.adb, exp_dist.ads\n\t(Exp_Dist.Build_TC_Call, Build_From_Any_Call, Build_To_Any_Call):\n\tUse PolyORB strings to represent Ada.Strings.Unbounded_String value;\n\tuse standard array code for Standard.String.\n\t(Exp_Dist): Bump PolyORB s-parint API version to 3.\n\t(Rtsfind): New entities TA_Std_String, Unbounded_String.\n\n2009-05-06  Robert Dewar  <dewar@adacore.com>\n\n\t* g-comlin.ads: Minor reformatting\n\n\t* xoscons.adb: Minor reformatting\n\nFrom-SVN: r147149", "tree": {"sha": "68816ebed1f63a3a00cbb546a6855dff039baed7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68816ebed1f63a3a00cbb546a6855dff039baed7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bde3eb52c0e21aca8d40442d6832589dccebcc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bde3eb52c0e21aca8d40442d6832589dccebcc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bde3eb52c0e21aca8d40442d6832589dccebcc6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bde3eb52c0e21aca8d40442d6832589dccebcc6/comments", "author": null, "committer": null, "parents": [{"sha": "3743d5bde63e99c32d5cdc930485b279d111bca2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3743d5bde63e99c32d5cdc930485b279d111bca2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3743d5bde63e99c32d5cdc930485b279d111bca2"}], "stats": {"total": 96, "additions": 79, "deletions": 17}, "files": [{"sha": "cb672611b3dd6af727cbb728d6f504ba7bdf8e68", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6bde3eb52c0e21aca8d40442d6832589dccebcc6", "patch": "@@ -1,3 +1,25 @@\n+2009-05-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Record_Aggregate): If a defaulted component of\n+\tan aggregate with box default is of a discriminated private type, do\n+\tnot build a subaggregate for it.\n+\tA proper call to the initialization procedure is generated for it.\n+\n+2009-05-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* rtsfind.adb, rtsfind.ads, exp_dist.adb, exp_dist.ads\n+\t(Exp_Dist.Build_TC_Call, Build_From_Any_Call, Build_To_Any_Call):\n+\tUse PolyORB strings to represent Ada.Strings.Unbounded_String value;\n+\tuse standard array code for Standard.String.\n+\t(Exp_Dist): Bump PolyORB s-parint API version to 3.\n+\t(Rtsfind): New entities TA_Std_String, Unbounded_String.\n+\n+2009-05-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-comlin.ads: Minor reformatting\n+\n+\t* xoscons.adb: Minor reformatting\n+\n 2009-05-06  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_aggr.adb (Resolve_Record_Aggregate): In step 5, get the"}, {"sha": "75b400d26442cb8f862a0e320f962fd02c4e25ed", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=6bde3eb52c0e21aca8d40442d6832589dccebcc6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -6630,13 +6630,13 @@ package body Exp_Dist is\n                                  Make_Function_Call (Loc,\n                                    Name =>\n                                      New_Occurrence_Of\n-                                       (RTE (RE_TA_String), Loc),\n+                                       (RTE (RE_TA_Std_String), Loc),\n                                    Parameter_Associations => New_List (\n                                      Make_String_Literal (Loc, Name_String))),\n                                  Make_Function_Call (Loc,\n                                    Name =>\n                                      New_Occurrence_Of\n-                                       (RTE (RE_TA_String), Loc),\n+                                       (RTE (RE_TA_Std_String), Loc),\n                                    Parameter_Associations => New_List (\n                                      Make_String_Literal (Loc,\n                                        Strval => Repo_Id_String))))))))))));\n@@ -8465,7 +8465,7 @@ package body Exp_Dist is\n             elsif U_Type = RTE (RE_Long_Long_Unsigned) then\n                Lib_RE := RE_FA_LLU;\n \n-            elsif U_Type = Standard_String then\n+            elsif Is_RTE (U_Type, RE_Unbounded_String) then\n                Lib_RE := RE_FA_String;\n \n             --  Special DSA types\n@@ -8970,7 +8970,11 @@ package body Exp_Dist is\n                         for J in 1 .. Ndim loop\n                            Lnam := New_External_Name ('L', J);\n                            Hnam := New_External_Name ('H', J);\n-                           Indt := Etype (Indx);\n+\n+                           --  Note, for empty arrays bounds may be out of\n+                           --  the range of Etype (Indx).\n+\n+                           Indt := Base_Type (Etype (Indx));\n \n                            Append_To (Decls,\n                              Make_Object_Declaration (Loc,\n@@ -9288,6 +9292,7 @@ package body Exp_Dist is\n \n             Typ     : Entity_Id := Etype (N);\n             U_Type  : Entity_Id;\n+            C_Type  : Entity_Id;\n             Fnam    : Entity_Id := Empty;\n             Lib_RE  : RE_Id := RE_Null;\n \n@@ -9383,7 +9388,7 @@ package body Exp_Dist is\n             elsif U_Type = RTE (RE_Long_Long_Unsigned) then\n                Lib_RE := RE_TA_LLU;\n \n-            elsif U_Type = Standard_String then\n+            elsif Is_RTE (U_Type, RE_Unbounded_String) then\n                Lib_RE := RE_TA_String;\n \n             --  Special DSA types\n@@ -9416,11 +9421,23 @@ package body Exp_Dist is\n                Fnam := RTE (Lib_RE);\n             end if;\n \n+            --  If Fnam is already analyzed, find the proper expected type,\n+            --  else we have a newly constructed To_Any function and we know\n+            --  that the expected type of its parameter is U_Type.\n+\n+            if Ekind (Fnam) = E_Function\n+                 and then Present (First_Formal (Fnam))\n+            then\n+               C_Type := Etype (First_Formal (Fnam));\n+            else\n+               C_Type := U_Type;\n+            end if;\n+\n             return\n                 Make_Function_Call (Loc,\n                   Name                   => New_Occurrence_Of (Fnam, Loc),\n                   Parameter_Associations =>\n-                    New_List (Unchecked_Convert_To (U_Type, N)));\n+                    New_List (OK_Convert_To (C_Type, N)));\n          end Build_To_Any_Call;\n \n          ---------------------------\n@@ -10153,7 +10170,7 @@ package body Exp_Dist is\n                elsif U_Type = RTE (RE_Long_Long_Unsigned) then\n                   Lib_RE := RE_TC_LLU;\n \n-               elsif U_Type = Standard_String then\n+               elsif Is_RTE (U_Type, RE_Unbounded_String) then\n                   Lib_RE := RE_TC_String;\n \n                --  Special DSA types\n@@ -10253,7 +10270,7 @@ package body Exp_Dist is\n             begin\n                Append_To (Parameter_List,\n                  Make_Function_Call (Loc,\n-                   Name => New_Occurrence_Of (RTE (RE_TA_String), Loc),\n+                   Name => New_Occurrence_Of (RTE (RE_TA_Std_String), Loc),\n                    Parameter_Associations => New_List (\n                      Make_String_Literal (Loc, S))));\n             end Add_String_Parameter;"}, {"sha": "d6fc1bb8ead1cf5bd649eb716cb010f70b7c3362", "filename": "gcc/ada/exp_dist.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Fexp_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Fexp_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.ads?ref=6bde3eb52c0e21aca8d40442d6832589dccebcc6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,7 +35,7 @@ package Exp_Dist is\n    PCS_Version_Number : constant array (PCS_Names) of Int :=\n                           (Name_No_DSA      => 1,\n                            Name_GARLIC_DSA  => 1,\n-                           Name_PolyORB_DSA => 2);\n+                           Name_PolyORB_DSA => 3);\n    --  PCS interface version. This is used to check for consistency between the\n    --  compiler used to generate distribution stubs and the PCS implementation.\n    --  It must be incremented whenever a change is made to the generated code"}, {"sha": "57a68c2ab2f97d7dc6785f17b2fcbae8201651b3", "filename": "gcc/ada/g-comlin.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.ads?ref=6bde3eb52c0e21aca8d40442d6832589dccebcc6", "patch": "@@ -112,6 +112,7 @@\n --  contexts, either because your system does not support Ada.Command_Line, or\n --  because you are manipulating other tools and creating their command line by\n --  hand, or for any other reason.\n+\n --  To create the list of strings, it is recommended to use\n --  GNAT.OS_Lib.Argument_String_To_List.\n "}, {"sha": "41dae0f59c98b793c6101b76d0ac1d0170b88ee7", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=6bde3eb52c0e21aca8d40442d6832589dccebcc6", "patch": "@@ -305,6 +305,9 @@ package body Rtsfind is\n          elsif U_Id in Ada_Streams_Child then\n             Name_Buffer (12) := '.';\n \n+         elsif U_Id in Ada_Strings_Child then\n+            Name_Buffer (12) := '.';\n+\n          elsif U_Id in Ada_Text_IO_Child then\n             Name_Buffer (12) := '.';\n "}, {"sha": "59c9835088c30d84eca9aa7e215be0a186e9e6d4", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=6bde3eb52c0e21aca8d40442d6832589dccebcc6", "patch": "@@ -61,6 +61,9 @@ package Rtsfind is\n    --    Names of the form Ada_Streams_xxx are second level children\n    --    of Ada.Streams.\n \n+   --    Names of the form Ada_Strings_xxx are second level children\n+   --    of Ada.Strings.\n+\n    --    Names of the form Ada_Text_IO_xxx are second level children of\n    --    Ada.Text_IO.\n \n@@ -120,6 +123,7 @@ package Rtsfind is\n       Ada_Interrupts,\n       Ada_Real_Time,\n       Ada_Streams,\n+      Ada_Strings,\n       Ada_Tags,\n       Ada_Task_Identification,\n       Ada_Task_Termination,\n@@ -149,6 +153,10 @@ package Rtsfind is\n \n       Ada_Streams_Stream_IO,\n \n+      --  Children of Ada.Strings\n+\n+      Ada_Strings_Unbounded,\n+\n       --  Children of Ada.Text_IO (for Text_IO_Kludge)\n \n       Ada_Text_IO_Decimal_IO,\n@@ -404,6 +412,11 @@ package Rtsfind is\n \n    subtype Ada_Streams_Child is Ada_Child\n      range Ada_Streams_Stream_IO .. Ada_Streams_Stream_IO;\n+   --  Range of values for children of Ada.Streams\n+\n+   subtype Ada_Strings_Child is Ada_Child\n+     range Ada_Strings_Unbounded .. Ada_Strings_Unbounded;\n+   --  Range of values for children of Ada.Strings\n \n    subtype Ada_Text_IO_Child is Ada_Child\n      range Ada_Text_IO_Decimal_IO .. Ada_Text_IO_Modular_IO;\n@@ -530,6 +543,8 @@ package Rtsfind is\n \n      RE_Stream_Access,                   -- Ada.Streams.Stream_IO\n \n+     RE_Unbounded_String,                -- Ada.Strings.Unbounded\n+\n      RE_Access_Level,                    -- Ada.Tags\n      RE_Address_Array,                   -- Ada.Tags\n      RE_Addr_Ptr,                        -- Ada.Tags\n@@ -1226,6 +1241,7 @@ package Rtsfind is\n      RE_TA_WWC,                          -- System.Partition_Interface\n      RE_TA_String,                       -- System.Partition_Interface\n      RE_TA_ObjRef,                       -- System.Partition_Interface\n+     RE_TA_Std_String,                   -- System.Partition_Interface\n      RE_TA_TC,                           -- System.Partition_Interface\n \n      RE_TC_Alias,                        -- System.Partition_Interface\n@@ -1693,6 +1709,8 @@ package Rtsfind is\n \n      RE_Stream_Access                    => Ada_Streams_Stream_IO,\n \n+     RE_Unbounded_String                 => Ada_Strings_Unbounded,\n+\n      RE_Access_Level                     => Ada_Tags,\n      RE_Address_Array                    => Ada_Tags,\n      RE_Addr_Ptr                         => Ada_Tags,\n@@ -2380,6 +2398,7 @@ package Rtsfind is\n      RE_TA_WWC                           => System_Partition_Interface,\n      RE_TA_String                        => System_Partition_Interface,\n      RE_TA_ObjRef                        => System_Partition_Interface,\n+     RE_TA_Std_String                    => System_Partition_Interface,\n      RE_TA_TC                            => System_Partition_Interface,\n \n      RE_TC_Alias                         => System_Partition_Interface,"}, {"sha": "974e01fe0513a6886b6fe43f7bec48f59dbf0c37", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=6bde3eb52c0e21aca8d40442d6832589dccebcc6", "patch": "@@ -3156,11 +3156,7 @@ package body Sem_Aggr is\n             end loop;\n \n          else\n-            --  We take the underlying type to account for private types when\n-            --  the original association had a box default.\n-\n-            Record_Def :=\n-              Type_Definition (Parent (Underlying_Type (Base_Type (Typ))));\n+            Record_Def := Type_Definition (Parent (Base_Type (Typ)));\n \n             if Null_Present (Record_Def) then\n                null;\n@@ -3317,6 +3313,7 @@ package body Sem_Aggr is\n                then\n                   if Is_Record_Type (Ctyp)\n                     and then Has_Discriminants (Ctyp)\n+                    and then not Is_Private_Type (Ctyp)\n                   then\n                      --  We build a partially initialized aggregate with the\n                      --  values of the discriminants and box initialization\n@@ -3325,6 +3322,9 @@ package body Sem_Aggr is\n                      --  the component. The capture of discriminants must\n                      --  be recursive because subcomponents may be contrained\n                      --  (transitively) by discriminants of enclosing types.\n+                     --  For a private type with discriminants, a call to the\n+                     --  initialization procedure will be generated, and no\n+                     --  subaggregate is needed.\n \n                      Capture_Discriminants : declare\n                         Loc        : constant Source_Ptr := Sloc (N);"}, {"sha": "83b726b6b9bfc71ebf6dba64290587b8e99dd160", "filename": "gcc/ada/xoscons.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bde3eb52c0e21aca8d40442d6832589dccebcc6/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=6bde3eb52c0e21aca8d40442d6832589dccebcc6", "patch": "@@ -30,7 +30,7 @@\n --    - the preprocessed C file: s-oscons-tmplt.i\n --    - the generated assembly file: s-oscons-tmplt.s\n \n---  The contents of s-oscons.ads is written on standard output.\n+--  The contents of s-oscons.ads is written on standard output\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n with Ada.Exceptions;          use Ada.Exceptions;"}]}