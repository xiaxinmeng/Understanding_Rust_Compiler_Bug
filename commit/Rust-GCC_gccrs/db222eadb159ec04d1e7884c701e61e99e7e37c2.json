{"sha": "db222eadb159ec04d1e7884c701e61e99e7e37c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIyMjJlYWRiMTU5ZWMwNGQxZTc4ODRjNzAxZTYxZTk5ZTdlMzdjMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T10:53:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T10:53:29Z"}, "message": "[multiple changes]\n\n2015-05-22  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch8.adb (Analyze_Object_Renaming): Check for renaming\n\tcomponent of an object to which Volatile_Full_Access applies.\n\n2015-05-22  Jerome Guitton  <guitton@adacore.com>\n\n\t* exp_dbug.ads: Add note about non bit-packed arrays.\n\n2015-05-22  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_prag.adb: Fix typo.\n\t* einfo.ads: Grammar fixes in comments.\n\n2015-05-22  Bob Duff  <duff@adacore.com>\n\n\t* a-cborma.ads, a-cidlli.ads, a-cimutr.ads, a-ciormu.ads,\n\t* a-cihase.ads, a-cohama.ads, a-coorse.ads, a-cbhama.ads,\n\t* a-cborse.ads, a-comutr.ads, a-ciorma.ads, a-cobove.ads,\n\t* a-coormu.ads, a-convec.ads, a-cohase.ads, a-coinho.ads,\n\t* a-cbdlli.ads, a-cbmutr.ads, a-cbhase.ads, a-cdlili.ads,\n\t* a-cihama.ads, a-coinve.ads, a-ciorse.ads, a-coorma.ads,\n\t* a-coinho-shared.ads (Constant_Reference_Type, Reference_Type):\n\tAdd an initialization expression \"raise Program_Error\". See,\n\tfor example, RM-A.18.2(148.4).\n\nFrom-SVN: r223548", "tree": {"sha": "a3702aa892b5542204a4faac178e2222cf39d084", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3702aa892b5542204a4faac178e2222cf39d084"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db222eadb159ec04d1e7884c701e61e99e7e37c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db222eadb159ec04d1e7884c701e61e99e7e37c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db222eadb159ec04d1e7884c701e61e99e7e37c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db222eadb159ec04d1e7884c701e61e99e7e37c2/comments", "author": null, "committer": null, "parents": [{"sha": "a2f45fe669c9e45901114e88b27327f06a138c32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f45fe669c9e45901114e88b27327f06a138c32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2f45fe669c9e45901114e88b27327f06a138c32"}], "stats": {"total": 434, "additions": 327, "deletions": 107}, "files": [{"sha": "161d0cf4c963ae87acafb056183ca6cca4b34798", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -1,3 +1,29 @@\n+2015-05-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Object_Renaming): Check for renaming\n+\tcomponent of an object to which Volatile_Full_Access applies.\n+\n+2015-05-22  Jerome Guitton  <guitton@adacore.com>\n+\n+\t* exp_dbug.ads: Add note about non bit-packed arrays.\n+\n+2015-05-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_prag.adb: Fix typo.\n+\t* einfo.ads: Grammar fixes in comments.\n+\n+2015-05-22  Bob Duff  <duff@adacore.com>\n+\n+\t* a-cborma.ads, a-cidlli.ads, a-cimutr.ads, a-ciormu.ads,\n+\t* a-cihase.ads, a-cohama.ads, a-coorse.ads, a-cbhama.ads,\n+\t* a-cborse.ads, a-comutr.ads, a-ciorma.ads, a-cobove.ads,\n+\t* a-coormu.ads, a-convec.ads, a-cohase.ads, a-coinho.ads,\n+\t* a-cbdlli.ads, a-cbmutr.ads, a-cbhase.ads, a-cdlili.ads,\n+\t* a-cihama.ads, a-coinve.ads, a-ciorse.ads, a-coorma.ads,\n+\t* a-coinho-shared.ads (Constant_Reference_Type, Reference_Type):\n+\tAdd an initialization expression \"raise Program_Error\". See,\n+\tfor example, RM-A.18.2(148.4).\n+\n 2015-05-22  Robert Dewar  <dewar@adacore.com>\n \n \t* debug.adb: Update documentation."}, {"sha": "603cb35b7a0f2e100f765215d60b316cc7f4c49c", "filename": "gcc/ada/a-cbdlli.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cbdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cbdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbdlli.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -313,9 +313,13 @@ private\n \n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is\n-   record\n-      Control : Reference_Control_Type;\n-   end record;\n+      record\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n+      end record;\n \n    procedure Read\n      (Stream : not null access Root_Stream_Type'Class;\n@@ -330,7 +334,11 @@ private\n    for Constant_Reference_Type'Write use Write;\n \n    type Reference_Type (Element : not null access Element_Type) is record\n-      Control : Reference_Control_Type;\n+      Control : Reference_Control_Type :=\n+        raise Program_Error with \"uninitialized reference\";\n+      --  The RM says, \"The default initialization of an object of\n+      --  type Constant_Reference_Type or Reference_Type propagates\n+      --  Program_Error.\"\n    end record;\n \n    procedure Write"}, {"sha": "a03bfe6ab07555e1b05dd15b8df39add4fcd0916", "filename": "gcc/ada/a-cbhama.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cbhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cbhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhama.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -392,9 +392,13 @@ private\n \n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is\n-   record\n-      Control : Reference_Control_Type;\n-   end record;\n+      record\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n+      end record;\n \n    procedure Write\n      (Stream : not null access Root_Stream_Type'Class;\n@@ -409,7 +413,11 @@ private\n    for Constant_Reference_Type'Read use Read;\n \n    type Reference_Type (Element : not null access Element_Type) is record\n-      Control : Reference_Control_Type;\n+      Control : Reference_Control_Type :=\n+        raise Program_Error with \"uninitialized reference\";\n+      --  The RM says, \"The default initialization of an object of\n+      --  type Constant_Reference_Type or Reference_Type propagates\n+      --  Program_Error.\"\n    end record;\n \n    procedure Write"}, {"sha": "c24fa8a1cf05b255b3480f125e04295e4cd82449", "filename": "gcc/ada/a-cbhase.ads", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cbhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cbhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhase.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -549,9 +549,13 @@ private\n \n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is\n-   record\n-      Control : Reference_Control_Type;\n-   end record;\n+      record\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n+      end record;\n \n    procedure Read\n      (Stream : not null access Root_Stream_Type'Class;"}, {"sha": "127b179d43cab4a145319de90553b0304e48277c", "filename": "gcc/ada/a-cbmutr.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cbmutr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cbmutr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbmutr.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2014, Free Software Foundation, Inc.           --\n+--           Copyright (C) 2014-2015, Free Software Foundation, Inc.        --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -346,7 +346,11 @@ private\n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write\n@@ -362,7 +366,11 @@ private\n    type Reference_Type\n      (Element : not null access Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write"}, {"sha": "df1a2a2076fe5eac055baa23bd6419b7be24ab9d", "filename": "gcc/ada/a-cborma.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cborma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cborma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborma.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -295,9 +295,13 @@ private\n \n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is\n-   record\n-      Control : Reference_Control_Type;\n-   end record;\n+      record\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n+      end record;\n \n    procedure Read\n      (Stream : not null access Root_Stream_Type'Class;\n@@ -312,7 +316,11 @@ private\n    for Constant_Reference_Type'Write use Write;\n \n    type Reference_Type (Element : not null access Element_Type) is record\n-      Control : Reference_Control_Type;\n+      Control : Reference_Control_Type :=\n+        raise Program_Error with \"uninitialized reference\";\n+      --  The RM says, \"The default initialization of an object of\n+      --  type Constant_Reference_Type or Reference_Type propagates\n+      --  Program_Error.\"\n    end record;\n \n    procedure Read"}, {"sha": "9b474a663530e019fd4c7a39b033a1e110b66f10", "filename": "gcc/ada/a-cborse.ads", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cborse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cborse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cborse.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -388,10 +388,14 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n-   record\n-      Control : Reference_Control_Type;\n-   end record;\n+     (Element : not null access constant Element_Type) is\n+      record\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n+      end record;\n \n    procedure Read\n      (Stream : not null access Root_Stream_Type'Class;"}, {"sha": "7740566af6d4e252095ac231e2b6306cdc3918b3", "filename": "gcc/ada/a-cdlili.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cdlili.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cdlili.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -319,9 +319,13 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n+     (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write\n@@ -337,9 +341,13 @@ private\n    for Constant_Reference_Type'Read use Read;\n \n    type Reference_Type\n-      (Element : not null access Element_Type) is\n+     (Element : not null access Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write"}, {"sha": "932fecbf326ddf9c98ae64dd88070d5c44509882", "filename": "gcc/ada/a-cidlli.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cidlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cidlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -313,9 +313,13 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n+     (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write\n@@ -331,9 +335,13 @@ private\n    for Constant_Reference_Type'Read use Read;\n \n    type Reference_Type\n-      (Element : not null access Element_Type) is\n+     (Element : not null access Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write"}, {"sha": "a224b3c545427dd594cb8b0cdd04bd4a57b8a279", "filename": "gcc/ada/a-cihama.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cihama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cihama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -379,9 +379,13 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n+     (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write\n@@ -397,9 +401,13 @@ private\n    for Constant_Reference_Type'Read use Read;\n \n    type Reference_Type\n-      (Element : not null access Element_Type) is\n+     (Element : not null access Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write"}, {"sha": "f9ae2ac62202ec4b892c875afcba3694227cb2ad", "filename": "gcc/ada/a-cihase.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cihase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cihase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihase.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -449,7 +449,11 @@ package Ada.Containers.Indefinite_Hashed_Sets is\n       pragma Inline (Finalize);\n \n       type Reference_Type (Element : not null access Element_Type) is record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n       use Ada.Streams;\n@@ -541,7 +545,11 @@ private\n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Read"}, {"sha": "48d2d5fabd402ffd0f13a7a03fc0357a2b30c02f", "filename": "gcc/ada/a-cimutr.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cimutr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cimutr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cimutr.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -394,7 +394,11 @@ private\n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Read\n@@ -412,7 +416,11 @@ private\n    type Reference_Type\n      (Element : not null access Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Read"}, {"sha": "2882a084bd2b8e75bbecc61056aee23aff11d42a", "filename": "gcc/ada/a-ciorma.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-ciorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-ciorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -308,9 +308,13 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n+     (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Read\n@@ -326,9 +330,13 @@ private\n    for Constant_Reference_Type'Write use Write;\n \n    type Reference_Type\n-      (Element : not null access Element_Type) is\n+     (Element : not null access Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Read"}, {"sha": "7524cf7be3c8358ce8e2b2d1fd875d4825812cb9", "filename": "gcc/ada/a-ciormu.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-ciormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-ciormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciormu.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -489,7 +489,11 @@ private\n \n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is record\n-      Control : Reference_Control_Type;\n+      Control : Reference_Control_Type :=\n+        raise Program_Error with \"uninitialized reference\";\n+      --  The RM says, \"The default initialization of an object of\n+      --  type Constant_Reference_Type or Reference_Type propagates\n+      --  Program_Error.\"\n    end record;\n \n    type Cursor is record"}, {"sha": "c885b80478ee738fd6276fb23b96d0a410865e97", "filename": "gcc/ada/a-ciorse.ads", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-ciorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-ciorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorse.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -409,9 +409,13 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n+     (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Read"}, {"sha": "3bd1843d7b3214945df40da52278d8fc6939b1be", "filename": "gcc/ada/a-cobove.ads", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cobove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cobove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cobove.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -420,10 +420,14 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n-   record\n-      Control : Reference_Control_Type;\n-   end record;\n+     (Element : not null access constant Element_Type) is\n+      record\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n+      end record;\n \n    procedure Read\n      (Stream : not null access Root_Stream_Type'Class;\n@@ -438,7 +442,11 @@ private\n    for Constant_Reference_Type'Write use Write;\n \n    type Reference_Type (Element : not null access Element_Type) is record\n-      Control : Reference_Control_Type;\n+      Control : Reference_Control_Type :=\n+        raise Program_Error with \"uninitialized reference\";\n+      --  The RM says, \"The default initialization of an object of\n+      --  type Constant_Reference_Type or Reference_Type propagates\n+      --  Program_Error.\"\n    end record;\n \n    procedure Read"}, {"sha": "049ec448c10a1b53b89664e29b061351ab98f644", "filename": "gcc/ada/a-cohama.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cohama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cohama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -385,9 +385,13 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n+     (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write\n@@ -403,9 +407,13 @@ private\n    for Constant_Reference_Type'Read use Read;\n \n    type Reference_Type\n-      (Element : not null access Element_Type) is\n+     (Element : not null access Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write"}, {"sha": "b80907802a375c9e45331c5f39687378d62d20bf", "filename": "gcc/ada/a-cohase.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cohase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-cohase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -554,7 +554,11 @@ private\n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Read"}, {"sha": "49b91fd6ae36f8fcc4368322698cd2171f72fd15", "filename": "gcc/ada/a-coinho-shared.ads", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coinho-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coinho-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho-shared.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2013-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2013-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -145,10 +145,14 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n-   record\n-      Control : Reference_Control_Type;\n-   end record;\n+     (Element : not null access constant Element_Type) is\n+      record\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n+      end record;\n \n    procedure Write\n      (Stream : not null access Root_Stream_Type'Class;\n@@ -163,7 +167,11 @@ private\n    for Constant_Reference_Type'Read use Read;\n \n    type Reference_Type (Element : not null access Element_Type) is record\n-      Control : Reference_Control_Type;\n+      Control : Reference_Control_Type :=\n+        raise Program_Error with \"uninitialized reference\";\n+      --  The RM says, \"The default initialization of an object of\n+      --  type Constant_Reference_Type or Reference_Type propagates\n+      --  Program_Error.\"\n    end record;\n \n    procedure Write"}, {"sha": "271d4ea0d6328e2e6761d3b422c04f8dec77e14a", "filename": "gcc/ada/a-coinho.ads", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coinho.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coinho.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2011-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -131,10 +131,14 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n-   record\n-      Control : Reference_Control_Type;\n-   end record;\n+     (Element : not null access constant Element_Type) is\n+      record\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n+      end record;\n \n    procedure Write\n      (Stream : not null access Root_Stream_Type'Class;\n@@ -149,7 +153,11 @@ private\n    for Constant_Reference_Type'Read use Read;\n \n    type Reference_Type (Element : not null access Element_Type) is record\n-      Control : Reference_Control_Type;\n+      Control : Reference_Control_Type :=\n+        raise Program_Error with \"uninitialized reference\";\n+      --  The RM says, \"The default initialization of an object of\n+      --  type Constant_Reference_Type or Reference_Type propagates\n+      --  Program_Error.\"\n    end record;\n \n    procedure Write"}, {"sha": "d2f7252e5603a263cdec46012cdd4456a7e72a53", "filename": "gcc/ada/a-coinve.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -426,7 +426,11 @@ private\n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write\n@@ -444,7 +448,11 @@ private\n    type Reference_Type\n      (Element : not null access Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write"}, {"sha": "3ea29452929d8459de0d208fa4f71039546c87ac", "filename": "gcc/ada/a-comutr.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-comutr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-comutr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comutr.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -443,7 +443,11 @@ private\n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Read\n@@ -461,7 +465,11 @@ private\n    type Reference_Type\n      (Element : not null access Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Read"}, {"sha": "00dfda2adeb4c37e03172ad9ec1dedfb6f475668", "filename": "gcc/ada/a-convec.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-convec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-convec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -432,9 +432,13 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n+     (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write\n@@ -450,9 +454,13 @@ private\n    for Constant_Reference_Type'Read use Read;\n \n    type Reference_Type\n-      (Element : not null access Element_Type) is\n+     (Element : not null access Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write"}, {"sha": "c30520f33da1388eeca01325a12096b1cd5de7f0", "filename": "gcc/ada/a-coorma.ads", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -309,9 +309,13 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n+     (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Read\n@@ -327,9 +331,13 @@ private\n    for Constant_Reference_Type'Write use Write;\n \n    type Reference_Type\n-      (Element : not null access Element_Type) is\n+     (Element : not null access Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Read"}, {"sha": "51785820b50379afddeadba8bf8ea5f2f3b43945", "filename": "gcc/ada/a-coormu.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -493,7 +493,11 @@ private\n \n    type Constant_Reference_Type\n      (Element : not null access constant Element_Type) is record\n-      Control : Reference_Control_Type;\n+      Control : Reference_Control_Type :=\n+        raise Program_Error with \"uninitialized reference\";\n+      --  The RM says, \"The default initialization of an object of\n+      --  type Constant_Reference_Type or Reference_Type propagates\n+      --  Program_Error.\"\n    end record;\n \n    type Cursor is record"}, {"sha": "3e16c944fb076559b1fdd89d8aaa497052f042e9", "filename": "gcc/ada/a-coorse.ads", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fa-coorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -392,9 +392,13 @@ private\n    pragma Inline (Finalize);\n \n    type Constant_Reference_Type\n-      (Element : not null access constant Element_Type) is\n+     (Element : not null access constant Element_Type) is\n       record\n-         Control : Reference_Control_Type;\n+         Control : Reference_Control_Type :=\n+           raise Program_Error with \"uninitialized reference\";\n+         --  The RM says, \"The default initialization of an object of\n+         --  type Constant_Reference_Type or Reference_Type propagates\n+         --  Program_Error.\"\n       end record;\n \n    procedure Write"}, {"sha": "58f35215ef1f0fa4483a58f79ea57561ffa43727", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -166,7 +166,7 @@ package Einfo is\n --    the Value_Size values differ generate a warning, and are potentially\n --    target dependent).\n \n---    The default rule for the value of Value_Size are as follows:\n+--    The default rules for the value of Value_Size are as follows:\n \n --       The Value_Size for a base subtype is the minimum number of bits\n --       required to store all values of the type (including the sign bit\n@@ -180,9 +180,9 @@ package Einfo is\n --       All other subtypes have a Value_Size corresponding to the minimum\n --       number of bits required to store all values of the subtype. For\n --       dynamic bounds, it is assumed that the value can range down or up\n---       to the corresponding bound of the ancestor\n+--       to the corresponding bound of the ancestor.\n \n---    The RM defined attribute Size corresponds to the Value_Size attribute\n+--    The RM defined attribute Size corresponds to the Value_Size attribute.\n \n --    The Size attribute may be defined for a first-named subtype. This sets\n --    the Value_Size of the first-named subtype to the given value, and the"}, {"sha": "352e57ff21511872e396deb7204e012e0251ffaf", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1061,6 +1061,9 @@ package Exp_Dbug is\n    --    ttt is the name of the original declared array\n    --    nnn is the component size in bits (1-31)\n \n+   --  Note that if the packed array is not bit-packed, the name will simply\n+   --  be tttP.\n+\n    --  When the debugger sees that an object is of a type that is encoded in\n    --  this manner, it can use the original type to determine the bounds and\n    --  the component type, and the component size to determine the packing"}, {"sha": "20ec73aeb8071f603e2071bc819b033080040cd0", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -912,6 +912,25 @@ package body Sem_Ch8 is\n               (\"renaming of conversion only allowed for tagged types\", Nam);\n          end if;\n \n+         --  Reject renaming of component of Volatile_Full_Access object\n+\n+         if Nkind_In (Nam, N_Selected_Component, N_Indexed_Component) then\n+            declare\n+               P : constant Node_Id := Prefix (Nam);\n+            begin\n+               if Is_Entity_Name (P) then\n+                  if Has_Volatile_Full_Access (Entity (P))\n+                       or else\n+                     Has_Volatile_Full_Access (Etype (P))\n+                  then\n+                     Error_Msg_N\n+                       (\"cannot rename component of Volatile_Full_Access \"\n+                        & \"object\", Nam);\n+                  end if;\n+               end if;\n+            end;\n+         end if;\n+\n          Resolve (Nam, T);\n \n          --  If the renamed object is a function call of a limited type,"}, {"sha": "d3babe8cc47c3d12522c20daa9f2e858ffb53bf1", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db222eadb159ec04d1e7884c701e61e99e7e37c2/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=db222eadb159ec04d1e7884c701e61e99e7e37c2", "patch": "@@ -5898,7 +5898,7 @@ package body Sem_Prag is\n               (\"cannot have Volatile_Full_Access and Atomic for same entity\");\n          end if;\n \n-         --  Check for applying VFA to an entity which has volatile component\n+         --  Check for applying VFA to an entity which has aliased component\n \n          if Prag_Id = Pragma_Volatile_Full_Access then\n             declare"}]}