{"sha": "68a230443864dcefe9e368997d65e1d1777d6fc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhhMjMwNDQzODY0ZGNlZmU5ZTM2ODk5N2Q2NWUxZDE3NzdkNmZjOA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-03-15T10:53:04Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-03-15T10:53:04Z"}, "message": "re PR fortran/55207 ([F08] Variables declared in the main program should implicitly get the SAVE attribute)\n\n2014-03-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/55207\n\t* decl.c (match_attr_spec): Variables in the main program implicitly\n\tget the SAVE attribute in Fortran 2008.\n\n\n2014-03-15  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/55207\n\t* gfortran.dg/assumed_rank_7.f90: Explicitly deallocate variables.\n\t* gfortran.dg/c_ptr_tests_16.f90: Put into subroutine.\n\t* gfortran.dg/inline_sum_bounds_check_1.f90: Add\n\t-Wno-aggressive-loop-optimizations and remove an unused variable.\n\t* gfortran.dg/intent_optimize_1.f90: Put into subroutine.\n\t* gfortran.dg/pointer_init_9.f90: New.\n\t* gfortran.dg/volatile4.f90: Put into subroutine.\n\t* gfortran.dg/volatile6.f90: Ditto.\n\nFrom-SVN: r208590", "tree": {"sha": "0ce2dd6ab88df97b2dc29e5e4fbeaba86bff6196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ce2dd6ab88df97b2dc29e5e4fbeaba86bff6196"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68a230443864dcefe9e368997d65e1d1777d6fc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a230443864dcefe9e368997d65e1d1777d6fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a230443864dcefe9e368997d65e1d1777d6fc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a230443864dcefe9e368997d65e1d1777d6fc8/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfce90ac4ae6b35764990e0c306be61e45b97dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfce90ac4ae6b35764990e0c306be61e45b97dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfce90ac4ae6b35764990e0c306be61e45b97dbd"}], "stats": {"total": 59, "additions": 51, "deletions": 8}, "files": [{"sha": "ce4063edd0684db1927fedd5d2a840808213f0be", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=68a230443864dcefe9e368997d65e1d1777d6fc8", "patch": "@@ -1,3 +1,9 @@\n+2014-03-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55207\n+\t* decl.c (match_attr_spec): Variables in the main program implicitly\n+\tget the SAVE attribute in Fortran 2008.\n+\n 2014-03-14  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/60392"}, {"sha": "c7f5eed36824eba5673f6013d4b392a40113368d", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=68a230443864dcefe9e368997d65e1d1777d6fc8", "patch": "@@ -3827,9 +3827,11 @@ match_attr_spec (void)\n \t}\n     }\n \n-  /* Since Fortran 2008 module variables implicitly have the SAVE attribute.  */\n-  if (gfc_current_state () == COMP_MODULE && !current_attr.save\n-      && (gfc_option.allow_std & GFC_STD_F2008) != 0)\n+  /* Since Fortran 2008, variables declared in a MODULE or PROGRAM\n+     implicitly have the SAVE attribute.  */\n+  if ((gfc_current_state () == COMP_MODULE\n+       || gfc_current_state () == COMP_PROGRAM)\n+      && !current_attr.save && (gfc_option.allow_std & GFC_STD_F2008) != 0)\n     current_attr.save = SAVE_IMPLICIT;\n \n   colon_seen = 1;"}, {"sha": "d444e4288cc4ff09e0183758b46ffefced8bb3ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=68a230443864dcefe9e368997d65e1d1777d6fc8", "patch": "@@ -1,3 +1,15 @@\n+2014-03-15  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/55207\n+\t* gfortran.dg/assumed_rank_7.f90: Explicitly deallocate variables.\n+\t* gfortran.dg/c_ptr_tests_16.f90: Put into subroutine.\n+\t* gfortran.dg/inline_sum_bounds_check_1.f90: Add\n+\t-Wno-aggressive-loop-optimizations and remove an unused variable.\n+\t* gfortran.dg/intent_optimize_1.f90: Put into subroutine.\n+\t* gfortran.dg/pointer_init_9.f90: New.\n+\t* gfortran.dg/volatile4.f90: Put into subroutine.\n+\t* gfortran.dg/volatile6.f90: Ditto.\n+\n 2014-03-14  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/60392"}, {"sha": "a5dc8157a4fef2bc8a91b092b4ad175e56ff690b", "filename": "gcc/testsuite/gfortran.dg/assumed_rank_7.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_7.f90?ref=68a230443864dcefe9e368997d65e1d1777d6fc8", "patch": "@@ -24,6 +24,8 @@\n call bar(at)\n if (i /= 12) call abort()\n \n+deallocate(ac,at)\n+\n contains\n   subroutine bar(x)\n     type(t) :: x(..)"}, {"sha": "3602428a0ac14adfe863e4ee941992d36ff76f6a", "filename": "gcc/testsuite/gfortran.dg/c_ptr_tests_16.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_ptr_tests_16.f90?ref=68a230443864dcefe9e368997d65e1d1777d6fc8", "patch": "@@ -3,7 +3,7 @@\n !\n ! PR fortran/46974\n \n-program test\n+subroutine test\n   use ISO_C_BINDING\n   implicit none\n   type(c_ptr) :: m\n@@ -15,7 +15,7 @@ program test\n      .and. int(z'41424345') /= a  &\n      .and. int(z'4142434500000000',kind=8) /= a) &\n     call i_do_not_exist()\n-end program test\n+end subroutine\n \n ! Examples contributed by Steve Kargl and James Van Buskirk\n "}, {"sha": "579e936624da9cef8550c2260f4c4ea968ab2c4a", "filename": "gcc/testsuite/gfortran.dg/inline_sum_bounds_check_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_sum_bounds_check_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_sum_bounds_check_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finline_sum_bounds_check_1.f90?ref=68a230443864dcefe9e368997d65e1d1777d6fc8", "patch": "@@ -1,9 +1,9 @@\n ! { dg-do run }\n-! { dg-options \"-fbounds-check\" }\n+! { dg-options \"-fbounds-check -Wno-aggressive-loop-optimizations\" }\n \n       integer, parameter :: nx = 3, ny = 4\n \n-      integer :: i, j, too_big\n+      integer :: i, too_big\n \n       integer, parameter, dimension(nx,ny) :: p = &\n         reshape((/ (i*i, i=1,size(p)) /), shape(p))"}, {"sha": "580db4284f93e9b291d2c851bd111783c75d8db1", "filename": "gcc/testsuite/gfortran.dg/intent_optimize_1.f90", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fintent_optimize_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fintent_optimize_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fintent_optimize_1.f90?ref=68a230443864dcefe9e368997d65e1d1777d6fc8", "patch": "@@ -6,7 +6,10 @@\n ! honoured.\n !\n ! PR fortran/43665\n-!\n+\n+\n+subroutine test\n+\n interface\n   subroutine foo(x)\n     integer, intent(in) :: x"}, {"sha": "1b47135f627e69bd57881e9e82d3f2def6cdc969", "filename": "gcc/testsuite/gfortran.dg/pointer_init_9.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_init_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_init_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_init_9.f90?ref=68a230443864dcefe9e368997d65e1d1777d6fc8", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do run }\n+!\n+! PR 55207: [F08] Variables declared in the main program should implicitly get the SAVE attribute\n+!\n+! Contributed by Tobias Burnus <burnus@gcc.gnu.org>\n+\n+  type :: c\n+  end type c\n+\n+  type(c), target :: x\n+  class(c), pointer :: px => x\n+\n+  if (.not. associated(px)) call abort()\n+end"}, {"sha": "4ad09dcb5d7017740cbbdff3b8c3e1458b01888f", "filename": "gcc/testsuite/gfortran.dg/volatile4.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fvolatile4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fvolatile4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvolatile4.f90?ref=68a230443864dcefe9e368997d65e1d1777d6fc8", "patch": "@@ -2,6 +2,8 @@\n ! { dg-options \"-O2 -fdump-tree-optimized\" }\n ! Tests whether volatile really works\n ! PR fortran/29601\n+\n+subroutine sub\n logical, volatile :: t1\n logical :: t2\n integer :: i"}, {"sha": "439183a1794a96dd6e4db1b73f262b84c65209bc", "filename": "gcc/testsuite/gfortran.dg/volatile6.f90", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fvolatile6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a230443864dcefe9e368997d65e1d1777d6fc8/gcc%2Ftestsuite%2Fgfortran.dg%2Fvolatile6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvolatile6.f90?ref=68a230443864dcefe9e368997d65e1d1777d6fc8", "patch": "@@ -2,6 +2,8 @@\n ! { dg-options \"-O2 -fdump-tree-optimized\" }\n ! Tests whether volatile really works for arrays\n ! PR fortran/29601\n+\n+subroutine sub\n logical, allocatable, volatile :: t1(:)\n logical, allocatable :: t2(:)\n integer :: i"}]}