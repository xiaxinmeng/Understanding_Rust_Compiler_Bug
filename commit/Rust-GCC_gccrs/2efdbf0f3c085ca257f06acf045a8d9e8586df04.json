{"sha": "2efdbf0f3c085ca257f06acf045a8d9e8586df04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVmZGJmMGYzYzA4NWNhMjU3ZjA2YWNmMDQ1YThkOWU4NTg2ZGYwNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-08-13T15:52:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-08-13T15:52:26Z"}, "message": "trans.c (can_equal_min_or_max_val_p): Be prepared for values outside of the range of the type.\n\n\t* gcc-interface/trans.c (can_equal_min_or_max_val_p): Be prepared for\n\tvalues outside of the range of the type.\n\nFrom-SVN: r201692", "tree": {"sha": "69698594f1d05668a52f209986e0400e4a090892", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69698594f1d05668a52f209986e0400e4a090892"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2efdbf0f3c085ca257f06acf045a8d9e8586df04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2efdbf0f3c085ca257f06acf045a8d9e8586df04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2efdbf0f3c085ca257f06acf045a8d9e8586df04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2efdbf0f3c085ca257f06acf045a8d9e8586df04/comments", "author": null, "committer": null, "parents": [{"sha": "b5f8f063a79bbaba332a255da3c59cfb50522641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f8f063a79bbaba332a255da3c59cfb50522641", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5f8f063a79bbaba332a255da3c59cfb50522641"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "e1f7363a3305af20590cda28ea8ac2c4e003011e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2efdbf0f3c085ca257f06acf045a8d9e8586df04", "patch": "@@ -1,3 +1,8 @@\n+2013-08-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (can_equal_min_or_max_val_p): Be prepared for\n+\tvalues outside of the range of the type.\n+\n 2013-08-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils2.c (build_atomic_load): Do a mere view-conversion"}, {"sha": "fdd59a80185817c2c523a1b1b0a6ac9c18799698", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=2efdbf0f3c085ca257f06acf045a8d9e8586df04", "patch": "@@ -2391,7 +2391,10 @@ can_equal_min_or_max_val_p (tree val, tree type, bool max)\n   if (TREE_CODE (val) != INTEGER_CST)\n     return true;\n \n-  return tree_int_cst_equal (val, min_or_max_val) == 1;\n+  if (max)\n+    return tree_int_cst_lt (val, min_or_max_val) == 0;\n+  else\n+    return tree_int_cst_lt (min_or_max_val, val) == 0;\n }\n \n /* Return true if VAL (of type TYPE) can equal the minimum value of TYPE."}, {"sha": "c264264592a3acaa8f526231b10a43a1048d93b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2efdbf0f3c085ca257f06acf045a8d9e8586df04", "patch": "@@ -1,3 +1,8 @@\n+2013-08-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/loop_optimization16.adb: New test.\n+\t* gnat.dg/loop_optimization16_pkg.ad[sb]: New helper.\n+\n 2013-08-13  Marek Polacek  <polacek@redhat.com>\n \n \t* gcc.dg/pr57980.c: Use vector of two elements, not just one."}, {"sha": "b9f2b70bb45319e9362555c0c8f5acef12a3fd2b", "filename": "gcc/testsuite/gnat.dg/loop_optimization16.adb", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization16.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization16.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization16.adb?ref=2efdbf0f3c085ca257f06acf045a8d9e8586df04", "patch": "@@ -0,0 +1,24 @@\n+-- { dg-do run }\n+\n+with Loop_Optimization16_Pkg; use Loop_Optimization16_Pkg;\n+\n+procedure Loop_Optimization16 is\n+\n+   Counter : Natural := 0;\n+\n+   C : constant Natural := F;\n+\n+   subtype Index_T is Index_Base range 1 .. Index_Base (C);\n+\n+begin\n+\n+   for I in Index_T'First .. Index_T'Last loop\n+      Counter := Counter + 1;\n+      exit when Counter > 200;\n+   end loop;\n+\n+   if Counter > 200 then\n+      raise Program_Error;\n+   end if;\n+\n+end Loop_Optimization16;"}, {"sha": "e4142f6e6a1be26e4d375a45735a26ac1f9ea0f8", "filename": "gcc/testsuite/gnat.dg/loop_optimization16_pkg.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization16_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization16_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization16_pkg.adb?ref=2efdbf0f3c085ca257f06acf045a8d9e8586df04", "patch": "@@ -0,0 +1,8 @@\n+package body Loop_Optimization16_Pkg is\n+\n+  function F return Natural is\n+  begin\n+    return Natural (Index_Base'Last);\n+  end;\n+\n+end Loop_Optimization16_Pkg;"}, {"sha": "abeecfb646f1b1634a539709980e8325c2b1f3a1", "filename": "gcc/testsuite/gnat.dg/loop_optimization16_pkg.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization16_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2efdbf0f3c085ca257f06acf045a8d9e8586df04/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization16_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_optimization16_pkg.ads?ref=2efdbf0f3c085ca257f06acf045a8d9e8586df04", "patch": "@@ -0,0 +1,7 @@\n+package Loop_Optimization16_Pkg is\n+\n+  type Index_Base is range 0 .. 127;\n+\n+  function F return Natural;\n+\n+end Loop_Optimization16_Pkg;"}]}