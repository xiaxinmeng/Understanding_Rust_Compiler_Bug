{"sha": "a19dd5e644ae8725f17bf52c54354b61f771d2c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE5ZGQ1ZTY0NGFlODcyNWYxN2JmNTJjNTQzNTRiNjFmNzcxZDJjNA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-05T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-05T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "f419e36a336a308f7fec1fbadf4abc7e6360ea19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f419e36a336a308f7fec1fbadf4abc7e6360ea19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a19dd5e644ae8725f17bf52c54354b61f771d2c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a19dd5e644ae8725f17bf52c54354b61f771d2c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a19dd5e644ae8725f17bf52c54354b61f771d2c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a19dd5e644ae8725f17bf52c54354b61f771d2c4/comments", "author": null, "committer": null, "parents": [{"sha": "b2d84e9f9cccbe4ee662f7002b83105629d09939", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2d84e9f9cccbe4ee662f7002b83105629d09939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2d84e9f9cccbe4ee662f7002b83105629d09939"}], "stats": {"total": 265, "additions": 264, "deletions": 1}, "files": [{"sha": "861beeb0aa491bb447af9ef363f714336d80e0f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a19dd5e644ae8725f17bf52c54354b61f771d2c4", "patch": "@@ -1,3 +1,56 @@\n+2021-02-04  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/97932\n+\t* diagnostic-show-locus.c (compatible_locations_p): Require\n+\tlocations in the same macro map to be either both from the\n+\tmacro definition, or both from the macro arguments.\n+\n+2021-02-04  Jonathan Wright  <jonathan.wright@arm.com>\n+\n+\t* config/aarch64/aarch64-simd-builtins.def: Add\n+\t[su]mull_hi_lane[q] builtin generator macros.\n+\t* config/aarch64/aarch64-simd.md\n+\t(aarch64_<su>mull_hi_lane<mode>_insn): Define.\n+\t(aarch64_<su>mull_hi_lane<mode>): Define.\n+\t(aarch64_<su>mull_hi_laneq<mode>_insn): Define.\n+\t(aarch64_<su>mull_hi_laneq<mode>): Define.\n+\t* config/aarch64/arm_neon.h (vmull_high_lane_s16): Use RTL\n+\tbuiltin instead of inline asm.\n+\t(vmull_high_lane_s32): Likewise.\n+\t(vmull_high_lane_u16): Likewise.\n+\t(vmull_high_lane_u32): Likewise.\n+\t(vmull_high_laneq_s16): Likewise.\n+\t(vmull_high_laneq_s32): Likewise.\n+\t(vmull_high_laneq_u16): Likewise.\n+\t(vmull_high_laneq_u32): Liekwise.\n+\n+2021-02-04  Jonathan Wright  <jonathan.wright@arm.com>\n+\n+\t* config/aarch64/aarch64-simd-builtins.def: Add [su]mull_hi_n\n+\tbuiltin generator macros.\n+\t* config/aarch64/aarch64-simd.md\n+\t(aarch64_<su>mull_hi_n<mode>_insn): Define.\n+\t(aarch64_<su>mull_hi_n<mode>): Define.\n+\t* config/aarch64/arm_neon.h (vmull_high_n_s16): Use RTL builtin\n+\tinstead of inline asm.\n+\t(vmull_high_n_s32): Likewise.\n+\t(vmull_high_n_u16): Likewise.\n+\t(vmull_high_n_u32): Likewise.\n+\n+2021-02-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98855\n+\t* tree-vect-loop.c (vectorizable_phi): Do not cost\n+\tsingle-argument PHIs.\n+\t* tree-vect-slp.c (vect_bb_slp_scalar_cost): Likewise.\n+\t* tree-vect-stmts.c (vectorizable_bswap): Also perform\n+\tcosting for SLP operation.\n+\n+2021-02-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/extend.texi: Mention -mprefer-vector-width in target\n+\tattributes.\n+\n 2021-02-03  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/98937"}, {"sha": "b5d696c3ab6eb2d67211da0753980ac91a529fc2", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=a19dd5e644ae8725f17bf52c54354b61f771d2c4", "patch": "@@ -1 +1 @@\n-20210204\n+20210205"}, {"sha": "86005a3cc793f5cd4a2f5f8632b480a1bf37d10f", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=a19dd5e644ae8725f17bf52c54354b61f771d2c4", "patch": "@@ -1,3 +1,7 @@\n+2021-02-04  emsr  <3dw4rd@verizon.net>\n+\n+\t* c-cppbuiltin.c (c_cpp_builtins): __cpp_size_t_suffix=202011L.\n+\n 2021-02-03  Ed Smith-Rowland  <3dw4rd@verizon.net>\n \n \t* c-cppbuiltin.c (c_cpp_builtins): Define __cpp_size_t_suffix."}, {"sha": "b306491dba8f6b1c5880d2c37961b4fa7bd67529", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=a19dd5e644ae8725f17bf52c54354b61f771d2c4", "patch": "@@ -1,3 +1,12 @@\n+2021-02-04  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/97882\n+\t* c-decl.c (locate_old_decl): Add type to diagnostic output.\n+\t(diagnose_mismatched_decls): Same.\n+\t(start_function): Introduce temporaries for better readability.\n+\t* c-typeck.c (comptypes_internal): Only consider complete enum\n+\ttypes in comparisons with integers.\n+\n 2021-02-01  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/97172"}, {"sha": "1a1ffeba94305754fb67586bed1fa59240635782", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a19dd5e644ae8725f17bf52c54354b61f771d2c4", "patch": "@@ -1,3 +1,36 @@\n+2021-02-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/98717\n+\t* constraint.cc (build_concept_check_arguments): Remove assert.\n+\t(build_concept_check): Allow empty args.\n+\n+2021-02-04  Tom Greenslade (thomgree)  <thomgree@cisco.com>\n+\n+\tPR c++/90926\n+\t* call.c (can_convert_array): Extend to handle all valid aggregate\n+\tinitializers of an array; including by string literals, not just by\n+\tbrace-init-list.\n+\t(build_aggr_conv): Call can_convert_array more often, not just in\n+\tbrace-init-list case.\n+\t* typeck2.c (array_string_literal_compatible_p): New function.\n+\t(digest_init_r): call array_string_literal_compatible_p\n+\t* cp-tree.h: (array_string_literal_compatible_p): Declare.\n+\n+2021-02-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/98802\n+\t* pt.c (do_class_deduction): No aggregate guide if any_dguides_p.\n+\n+2021-02-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/95192\n+\t* pt.c (tsubst_attribute): Handle error.\n+\t(apply_late_template_attributes): Return false on error.\n+\t(tsubst_function_decl): Check its return value.\n+\t(tsubst_decl): Likewise.\n+\t(push_template_decl): Assert current_template_parms.\n+\t(tsubst_template_decl): Set current_template_parms.\n+\n 2021-02-03  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/98951"}, {"sha": "a51ecdb049107541fd82a6a52a4f0570fe161b23", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=a19dd5e644ae8725f17bf52c54354b61f771d2c4", "patch": "@@ -1,3 +1,38 @@\n+2021-02-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dmd/MERGE: Merge upstream dmd 46133f761.\n+\t* d-builtins.cc (d_build_builtins_module): Set builtins as BUILTINgcc.\n+\t(maybe_set_builtin_1): Likewise.\n+\t* d-frontend.cc (eval_builtin): Adjust condition for early return.\n+\t* intrinsics.cc (maybe_set_intrinsic): Set intrinsics as BUILTINgcc.\n+\t(maybe_expand_intrinsic): Add case for INTRINSIC_BSWAP16.\n+\t* intrinsics.def (INTRINSIC_BT): Update signature.\n+\t(INTRINSIC_BT64): Likewise.\n+\t(INTRINSIC_BSWAP16): New intrinsic.\n+\t(INTRINSIC_VLOAD8): Update module.\n+\t(INTRINSIC_VLOAD16): Likewise.\n+\t(INTRINSIC_VLOAD32): Likewise.\n+\t(INTRINSIC_VLOAD64): Likewise.\n+\t(INTRINSIC_VSTORE8): Likewise.\n+\t(INTRINSIC_VSTORE16): Likewise.\n+\t(INTRINSIC_VSTORE32): Likewise.\n+\t(INTRINSIC_VSTORE64): Likewise.\n+\t(INTRINSIC_ADDS): Update signature.\n+\t(INTRINSIC_ADDSL): Likewise.\n+\t(INTRINSIC_ADDU): Likewise.\n+\t(INTRINSIC_ADDUL): Likewise.\n+\t(INTRINSIC_SUBS): Likewise.\n+\t(INTRINSIC_SUBSL): Likewise.\n+\t(INTRINSIC_SUBU): Likewise.\n+\t(INTRINSIC_SUBUL): Likewise.\n+\t(INTRINSIC_MULS): Likewise.\n+\t(INTRINSIC_MULSL): Likewise.\n+\t(INTRINSIC_MULU): Likewise.\n+\t(INTRINSIC_MULUI): Likewise.\n+\t(INTRINSIC_MULUL): Likewise.\n+\t(INTRINSIC_NEGS): Likewise.\n+\t(INTRINSIC_NEGSL): Likewise.\n+\n 2021-02-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/98921"}, {"sha": "4d433a1ebccb26987d4860b3463481a88a96ad28", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a19dd5e644ae8725f17bf52c54354b61f771d2c4", "patch": "@@ -1,3 +1,23 @@\n+2021-02-04  Julian Brown  <julian@codesourcery.com>\n+\n+\t* openmp.c (resolve_omp_clauses): Omit OpenACC update in\n+\tcontiguity check and stride-specified error.\n+\n+2021-02-04  Julian Brown  <julian@codesourcery.com>\n+\n+\t* trans-openmp.c (gfc_trans_omp_clauses): Use class_pointer attribute\n+\tfor BT_CLASS.\n+\n+2021-02-04  Julian Brown  <julian@codesourcery.com>\n+\n+\t* trans-openmp.c (gfc_trans_omp_clauses): Fix dereferencing for\n+\tBT_DERIVED members.\n+\n+2021-02-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* openmp.c (resolve_omp_clauses): Explicitly diagnose\n+\tsubstrings as not permitted.\n+\n 2021-02-03  Jeff Law  <law@redhat.com>\n \n \t* intrinsic.texi (ANINT): Fix typo."}, {"sha": "e2931e39ce9ac21e1662283acb0586383c473adf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19dd5e644ae8725f17bf52c54354b61f771d2c4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a19dd5e644ae8725f17bf52c54354b61f771d2c4", "patch": "@@ -1,3 +1,95 @@\n+2021-02-04  Julian Brown  <julian@codesourcery.com>\n+\n+\t* gfortran.dg/goacc/derived-chartypes-1.f90: New test.\n+\t* gfortran.dg/goacc/derived-chartypes-2.f90: Likewise.\n+\t* gfortran.dg/goacc/derived-chartypes-3.f90: Likewise.\n+\t* gfortran.dg/goacc/derived-chartypes-4.f90: Likewise.\n+\n+2021-02-04  Julian Brown  <julian@codesourcery.com>\n+\n+\t* gfortran.dg/goacc/array-with-dt-2.f90: New test.\n+\n+2021-02-04  Julian Brown  <julian@codesourcery.com>\n+\n+\t* gfortran.dg/goacc/derived-classtypes-1.f95: New test.\n+\n+2021-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR testsuite/98325\n+\t* lib/scanasm.exp (dg-scan-symbol-section): For powerpc*-*-* targets if\n+\t$section is .opd, look at .L.$symbol_name's section.\n+\t(parse_section_section_of_symbols): Handle .previous directive.\n+\t* gcc.dg/array-quals-1.c: Allow .sdata section.\n+\n+2021-02-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* gdc.dg/intrinsics.d: Update test.\n+\n+2021-02-04  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/97882\n+\t* gcc.dg/decl-8.c: Adjust text of expected diagnostic.\n+\t* gcc.dg/label-decl-4.c: Same.\n+\t* gcc.dg/mismatch-decl-1.c: Same.\n+\t* gcc.dg/old-style-then-proto-1.c: Same.\n+\t* gcc.dg/parm-mismatch-1.c: Same.\n+\t* gcc.dg/pr35445.c: Same.\n+\t* gcc.dg/redecl-11.c: Same.\n+\t* gcc.dg/redecl-12.c: Same.\n+\t* gcc.dg/redecl-13.c: Same.\n+\t* gcc.dg/redecl-15.c: Same.\n+\t* gcc.dg/tls/thr-init-1.c: Same.\n+\t* objc.dg/id-1.m: Same.\n+\t* objc.dg/tls/diag-3.m: Same.\n+\t* gcc.dg/pr97882.c: New test.\n+\t* gcc.dg/qual-return-7.c: New test.\n+\t* gcc.dg/qual-return-8.c: New test.\n+\n+2021-02-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/98717\n+\t* g++.dg/cpp2a/concepts-variadic3.C: New test.\n+\n+2021-02-04  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/97932\n+\t* gcc.dg/pr97932.c: New test.\n+\n+2021-02-04  emsr  <3dw4rd@verizon.net>\n+\n+\t* g++.dg/cpp23/feat-cxx2b.C: __cpp_size_t_suffix == 202011.\n+\n+2021-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/warn/Wsize_t-literals.C: Expect make_signed_t<size_t> instead\n+\tof make_signed<size_t>::type in the diagnostics.\n+\n+2021-02-04  Tom Greenslade (thomgree)  <thomgree@cisco.com>\n+\n+\tPR c++/90926\n+\t* g++.dg/cpp1y/nsdmi-aggr12.C: New test.\n+\n+2021-02-04  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/goacc/substring.f90: New test.\n+\t* gfortran.dg/gomp/substring.f90: New test.\n+\n+2021-02-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.target/i386/prefer-vector-width-attr.c: New test.\n+\n+2021-02-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/98802\n+\t* g++.dg/cpp1z/class-deduction78.C: New test.\n+\n+2021-02-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/95192\n+\t* g++.dg/cpp0x/pr84630.C: Call b().\n+\t* g++.dg/cpp2a/lambda-uneval13.C: New test.\n+\t* g++.dg/ext/attr-expr1.C: New test.\n+\n 2021-02-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR preprocessor/98882"}, {"sha": "bee9b871cd2cfd2560ad5b708b02e9f18018a369", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19dd5e644ae8725f17bf52c54354b61f771d2c4/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19dd5e644ae8725f17bf52c54354b61f771d2c4/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=a19dd5e644ae8725f17bf52c54354b61f771d2c4", "patch": "@@ -1,3 +1,8 @@\n+2021-02-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* expr.c (cpp_classify_number): Use make_signed_t<size_t> instead of\n+\tmake_signed<size_t>::type in the diagnostics.\n+\n 2021-02-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR preprocessor/98882"}, {"sha": "4fed508b8017be3c94ac0391cfda59e1b471f887", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19dd5e644ae8725f17bf52c54354b61f771d2c4/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19dd5e644ae8725f17bf52c54354b61f771d2c4/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a19dd5e644ae8725f17bf52c54354b61f771d2c4", "patch": "@@ -1,3 +1,7 @@\n+2021-02-04  Julian Brown  <julian@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/array-stride-dt-1.f90: New test.\n+\n 2021-02-03  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* plugin/plugin-gcn.c (EF_AMDGPU_MACH): Add"}, {"sha": "235af5b2fd3ad0d03e5c536905e8a6acebb4d47e", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a19dd5e644ae8725f17bf52c54354b61f771d2c4/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a19dd5e644ae8725f17bf52c54354b61f771d2c4/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=a19dd5e644ae8725f17bf52c54354b61f771d2c4", "patch": "@@ -1,3 +1,11 @@\n+2021-02-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/98910\n+\t* libdruntime/MERGE: Merge upstream druntime 0fd4364c.\n+\t* libdruntime/Makefile.am (DRUNTIME_DSOURCES): Add core/volatile.d.\n+\t* libdruntime/Makefile.in: Regenerate.\n+\t* testsuite/libphobos.allocations/tls_gc_integration.d: Update test.\n+\n 2021-02-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/98910"}]}