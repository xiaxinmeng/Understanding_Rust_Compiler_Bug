{"sha": "e4f0733af41d5fa2035f6eceb24a74ccba13afcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRmMDczM2FmNDFkNWZhMjAzNWY2ZWNlYjI0YTc0Y2NiYTEzYWZjZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-08-02T07:28:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-08-02T07:28:21Z"}, "message": "re PR c++/81640 (ICE in lookup_fnfields_slot_nolazy w/ -Wshadow=compatible-local)\n\n\tPR c++/81640\n\t* call.c (build_user_type_conversion_1): Only call\n\tlookup_fnfields_slot if totype is CLASS_TYPE_P.\n\n\t* g++.dg/warn/Wshadow-compatible-local-2.C: New test.\n\nFrom-SVN: r250816", "tree": {"sha": "f01a1db155b779b4ad8d878c8fe5bbfb4771c573", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f01a1db155b779b4ad8d878c8fe5bbfb4771c573"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4f0733af41d5fa2035f6eceb24a74ccba13afcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4f0733af41d5fa2035f6eceb24a74ccba13afcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4f0733af41d5fa2035f6eceb24a74ccba13afcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4f0733af41d5fa2035f6eceb24a74ccba13afcf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "349721b7de62e4b30a7ecfd7cb157bfcb73e738d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349721b7de62e4b30a7ecfd7cb157bfcb73e738d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/349721b7de62e4b30a7ecfd7cb157bfcb73e738d"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "8be42940bd8d998b989e61a857b385542ef45a56", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4f0733af41d5fa2035f6eceb24a74ccba13afcf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4f0733af41d5fa2035f6eceb24a74ccba13afcf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e4f0733af41d5fa2035f6eceb24a74ccba13afcf", "patch": "@@ -1,3 +1,9 @@\n+2017-08-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/81640\n+\t* call.c (build_user_type_conversion_1): Only call\n+\tlookup_fnfields_slot if totype is CLASS_TYPE_P.\n+\n 2017-07-31  Jason Merrill  <jason@redhat.com>\n \n \t* decl.c (declare_global_var): Set DECL_CONTEXT."}, {"sha": "f633fa5ad91f48b79b34bf2e8453b98305629287", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4f0733af41d5fa2035f6eceb24a74ccba13afcf/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4f0733af41d5fa2035f6eceb24a74ccba13afcf/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=e4f0733af41d5fa2035f6eceb24a74ccba13afcf", "patch": "@@ -3735,7 +3735,7 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags,\n   gcc_assert (!MAYBE_CLASS_TYPE_P (fromtype) || !MAYBE_CLASS_TYPE_P (totype)\n \t      || !DERIVED_FROM_P (totype, fromtype));\n \n-  if (MAYBE_CLASS_TYPE_P (totype))\n+  if (CLASS_TYPE_P (totype))\n     /* Use lookup_fnfields_slot instead of lookup_fnfields to avoid\n        creating a garbage BASELINK; constructors can't be inherited.  */\n     ctors = lookup_fnfields_slot (totype, complete_ctor_identifier);"}, {"sha": "142e4de0e735681289d3deec94fd87581fdc50a6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4f0733af41d5fa2035f6eceb24a74ccba13afcf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4f0733af41d5fa2035f6eceb24a74ccba13afcf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4f0733af41d5fa2035f6eceb24a74ccba13afcf", "patch": "@@ -1,5 +1,8 @@\n 2017-08-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/81640\n+\t* g++.dg/warn/Wshadow-compatible-local-2.C: New test.\n+\n \tPR middle-end/79499\n \t* gcc.dg/pr79499.c: New test.\n "}, {"sha": "da8f43bd67d2784ae7e3726a20edb7037f230ee6", "filename": "gcc/testsuite/g++.dg/warn/Wshadow-compatible-local-2.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4f0733af41d5fa2035f6eceb24a74ccba13afcf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-compatible-local-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4f0733af41d5fa2035f6eceb24a74ccba13afcf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-compatible-local-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWshadow-compatible-local-2.C?ref=e4f0733af41d5fa2035f6eceb24a74ccba13afcf", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/81640\n+// { dg-do compile }\n+// { dg-options \"-Wshadow=compatible-local\" }\n+\n+struct A {};\n+struct B { operator bool () const { return true; } };\n+\n+template <typename T>\n+void\n+foo ()\n+{\n+  T d, e;\n+  if (e)\n+    A d;\n+}\n+\n+void\n+bar ()\n+{\n+  foo <B> ();\n+}"}]}