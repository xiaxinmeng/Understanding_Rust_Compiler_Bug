{"sha": "4c2ecab0e4978f3a4a5b40fe595729b30375386a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMyZWNhYjBlNDk3OGYzYTRhNWI0MGZlNTk1NzI5YjMwMzc1Mzg2YQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2013-12-03T02:47:13Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2013-12-03T02:47:13Z"}, "message": "re PR c/58235 (Missing diagnostic on assignment to array in c89)\n\n\tPR c/58235\nc:\n\t* c-typeck.c (build_modify_expr): Diagnose assignment to\n\texpression with array type.\n\ntestsuite:\n\t* gcc.dg/c90-array-lval-8.c: New test.\n\nFrom-SVN: r205615", "tree": {"sha": "eb299deee08e7335f846ed167c65364ef8d62b64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb299deee08e7335f846ed167c65364ef8d62b64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c2ecab0e4978f3a4a5b40fe595729b30375386a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c2ecab0e4978f3a4a5b40fe595729b30375386a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c2ecab0e4978f3a4a5b40fe595729b30375386a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c2ecab0e4978f3a4a5b40fe595729b30375386a/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9153cba636597ca403e56a2302f05233c4e85a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9153cba636597ca403e56a2302f05233c4e85a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9153cba636597ca403e56a2302f05233c4e85a7"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "42b0bb7db8e18d67c3978c1ccf105aee73ceac72", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c2ecab0e4978f3a4a5b40fe595729b30375386a/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c2ecab0e4978f3a4a5b40fe595729b30375386a/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=4c2ecab0e4978f3a4a5b40fe595729b30375386a", "patch": "@@ -1,3 +1,9 @@\n+2013-12-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/58235\n+\t* c-typeck.c (build_modify_expr): Diagnose assignment to\n+\texpression with array type.\n+\n 2013-11-29  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/42262"}, {"sha": "672a564d2ce9450096613dbd94acf494297ad24b", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c2ecab0e4978f3a4a5b40fe595729b30375386a/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c2ecab0e4978f3a4a5b40fe595729b30375386a/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=4c2ecab0e4978f3a4a5b40fe595729b30375386a", "patch": "@@ -5205,6 +5205,14 @@ build_modify_expr (location_t location, tree lhs, tree lhs_origtype,\n   if (TREE_CODE (lhs) == ERROR_MARK || TREE_CODE (rhs) == ERROR_MARK)\n     return error_mark_node;\n \n+  /* Ensure an error for assigning a non-lvalue array to an array in\n+     C90.  */\n+  if (TREE_CODE (lhstype) == ARRAY_TYPE)\n+    {\n+      error_at (location, \"assignment to expression with array type\");\n+      return error_mark_node;\n+    }\n+\n   /* For ObjC properties, defer this check.  */\n   if (!objc_is_property_ref (lhs) && !lvalue_or_else (location, lhs, lv_assign))\n     return error_mark_node;"}, {"sha": "f4443d2515ad05562243b6ba5dcd99cd42a4f1b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c2ecab0e4978f3a4a5b40fe595729b30375386a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c2ecab0e4978f3a4a5b40fe595729b30375386a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c2ecab0e4978f3a4a5b40fe595729b30375386a", "patch": "@@ -1,3 +1,8 @@\n+2013-12-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\tPR c/58235\n+\t* gcc.dg/c90-array-lval-8.c: New test.\n+\n 2013-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/59358"}, {"sha": "bc5b7b21b8a559cccfae6149c99ef567729eca6f", "filename": "gcc/testsuite/gcc.dg/c90-array-lval-8.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c2ecab0e4978f3a4a5b40fe595729b30375386a/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-array-lval-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c2ecab0e4978f3a4a5b40fe595729b30375386a/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-array-lval-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-array-lval-8.c?ref=4c2ecab0e4978f3a4a5b40fe595729b30375386a", "patch": "@@ -0,0 +1,20 @@\n+/* Test for non-lvalue arrays: test that they cannot be assigned to\n+   array variables.  PR 58235.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1990 -pedantic-errors\" } */\n+\n+struct s { char c[1]; } x;\n+struct s f (void) { return x; }\n+\n+void\n+g (void)\n+{\n+  char c[1];\n+  c = f ().c; /* { dg-error \"array\" } */\n+}\n+\n+void\n+h (void)\n+{\n+  char c[1] = f ().c; /* { dg-error \"array\" } */\n+}"}]}