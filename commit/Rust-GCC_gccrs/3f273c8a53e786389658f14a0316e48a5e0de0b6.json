{"sha": "3f273c8a53e786389658f14a0316e48a5e0de0b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YyNzNjOGE1M2U3ODYzODk2NThmMTRhMDMxNmU0OGE1ZTBkZTBiNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-10-17T11:05:35Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-10-17T11:05:35Z"}, "message": "utils2.c (build_binary_op): Make sure the element type is consistent.\n\n\t* gcc-interface/utils2.c (build_binary_op) <ARRAY_RANGE_REF>: Make\n\tsure the element type is consistent.\n\nFrom-SVN: r152934", "tree": {"sha": "fd8d2040380c07dc46f6c8584fa8fb12829b0e61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd8d2040380c07dc46f6c8584fa8fb12829b0e61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f273c8a53e786389658f14a0316e48a5e0de0b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f273c8a53e786389658f14a0316e48a5e0de0b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f273c8a53e786389658f14a0316e48a5e0de0b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f273c8a53e786389658f14a0316e48a5e0de0b6/comments", "author": null, "committer": null, "parents": [{"sha": "7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fc6a96bed6d0b2511f56e246c5ca0c3058616aa"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "80103fb053a0757cf09cf31539fc902c0b0a8bdf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3f273c8a53e786389658f14a0316e48a5e0de0b6", "patch": "@@ -1,3 +1,8 @@\n+2009-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils2.c (build_binary_op) <ARRAY_RANGE_REF>: Mak\n+\tsure the element type is consistent.\n+\n 2009-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (addressable_p): Handle bitwise operations."}, {"sha": "7176740f453d625f3d55cca89d9e88eba144eb59", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=3f273c8a53e786389658f14a0316e48a5e0de0b6", "patch": "@@ -755,6 +755,12 @@ build_binary_op (enum tree_code op_code, tree result_type,\n \t  left_type = TREE_TYPE (left_operand);\n \t}\n \n+      /* For a range, make sure the element type is consistent.  */\n+      if (op_code == ARRAY_RANGE_REF\n+\t  && TREE_TYPE (operation_type) != TREE_TYPE (left_type))\n+\toperation_type = build_array_type (TREE_TYPE (left_type),\n+\t\t\t\t\t   TYPE_DOMAIN (operation_type));\n+\n       /* Then convert the right operand to its base type.  This will prevent\n \t unneeded sign conversions when sizetype is wider than integer.  */\n       right_operand = convert (right_base_type, right_operand);"}, {"sha": "acbbe3619151ddd208cdc2f81befc37545d9f230", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f273c8a53e786389658f14a0316e48a5e0de0b6", "patch": "@@ -1,3 +1,10 @@\n+2009-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/slice8.adb: New test.\n+\t* gnat.dg/slice8_pkg1.ads: New helper.\n+\t* gnat.dg/slice8_pkg2.ads: Likewise.\n+\t* gnat.dg/slice8_pkg3.ad[sb]: Likewise.\n+\n 2009-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/unchecked_convert4.adb: New test."}, {"sha": "b05829d0f7be05b667cf61f16dce6ebbf60b54f4", "filename": "gcc/testsuite/gnat.dg/slice8.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8.adb?ref=3f273c8a53e786389658f14a0316e48a5e0de0b6", "patch": "@@ -0,0 +1,13 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+with Slice8_Pkg1;\n+with Slice8_Pkg3;\n+\n+procedure Slice8 is\n+\n+   package Bp is new Slice8_Pkg3 (Slice8_Pkg1);\n+\n+begin\n+   null;\n+end;"}, {"sha": "3f433fdfb26294666603e5c57fc525537e7c737f", "filename": "gcc/testsuite/gnat.dg/slice8_pkg1.ads", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg1.ads?ref=3f273c8a53e786389658f14a0316e48a5e0de0b6", "patch": "@@ -0,0 +1,3 @@\n+with Slice8_Pkg2;\n+\n+package Slice8_Pkg1 is new Slice8_Pkg2 (Line_Length => 132, Max_Lines => 1000);"}, {"sha": "a6eafc6aa18cfaea096e863e390cf65c7cccadb9", "filename": "gcc/testsuite/gnat.dg/slice8_pkg2.ads", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg2.ads?ref=3f273c8a53e786389658f14a0316e48a5e0de0b6", "patch": "@@ -0,0 +1,23 @@\n+generic\n+\n+   Line_Length : Natural;\n+   Max_Lines   : Natural;\n+\n+package Slice8_Pkg2 is\n+\n+   Subtype Index      is Natural Range 0..Line_length;\n+   Subtype Line_Count is Natural Range 0..Max_Lines;\n+\n+   Type Line (Size : Index := 0) is\n+   Record\n+      Data : String (1..Size);\n+   End Record;\n+\n+   Type Lines is Array (Line_Count Range <>) of Line;\n+\n+   Type Paragraph (Size : Line_Count) is\n+   Record\n+      Data : Lines (1..Size);\n+   End Record;\n+\n+end Slice8_Pkg2;"}, {"sha": "3524de1f0f580858ff48fcfb7d1f2158492809b6", "filename": "gcc/testsuite/gnat.dg/slice8_pkg3.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg3.adb?ref=3f273c8a53e786389658f14a0316e48a5e0de0b6", "patch": "@@ -0,0 +1,17 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws\" }\n+\n+package body Slice8_Pkg3 is\n+\n+   Current : Str.Lines (Str.Line_Count);\n+   Last    : Natural := 0;\n+\n+   function Get return Str.Paragraph is\n+      Result : constant Str.Paragraph := (Size => Last,\n+                                          Data => Current (1..Last));\n+   begin\n+      Last := 0;\n+      return Result;\n+   end Get;\n+\n+end Slice8_Pkg3;"}, {"sha": "a802cb72d9bd4547a8face82ef0e553b68fdc762", "filename": "gcc/testsuite/gnat.dg/slice8_pkg3.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f273c8a53e786389658f14a0316e48a5e0de0b6/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fslice8_pkg3.ads?ref=3f273c8a53e786389658f14a0316e48a5e0de0b6", "patch": "@@ -0,0 +1,11 @@\n+with Slice8_Pkg2;\n+\n+generic\n+\n+   with package Str is new Slice8_Pkg2 (<>);\n+\n+package Slice8_Pkg3 is\n+\n+   function Get return Str.Paragraph;\n+\n+end Slice8_Pkg3;"}]}