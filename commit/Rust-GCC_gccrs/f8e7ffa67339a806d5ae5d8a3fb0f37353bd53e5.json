{"sha": "f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhlN2ZmYTY3MzM5YTgwNmQ1YWU1ZDhhM2ZiMGYzNzM1M2JkNTNlNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-12-01T15:46:58Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-12-01T15:46:58Z"}, "message": "1.cc: New.\n\n2004-12-01  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/27_io/basic_istream/get/wchar_t/1.cc: New.\n\t* testsuite/27_io/basic_istream/get/wchar_t/2.cc: Likewise.\n\t* testsuite/27_io/basic_istream/get/wchar_t/3.cc: Likewise.\n\t* testsuite/27_io/basic_istream/ignore/wchar_t/1.cc: Likewise.\n\t* testsuite/27_io/basic_istream/ignore/wchar_t/2.cc: Likewise.\n\t* testsuite/27_io/basic_istream/ignore/wchar_t/3.cc: Likewise.\n\t* testsuite/27_io/basic_istream/ignore/wchar_t/6360.cc: Likewise.\n\t* testsuite/27_io/basic_istream/ignore/wchar_t/7220.cc: Likewise.\n\nFrom-SVN: r91565", "tree": {"sha": "9d2b3fbbb97a8002f3adfa7a87c3323954e8fb0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d2b3fbbb97a8002f3adfa7a87c3323954e8fb0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/comments", "author": null, "committer": null, "parents": [{"sha": "386489e361a1299e34dd6f755dad1f4023ce08e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/386489e361a1299e34dd6f755dad1f4023ce08e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/386489e361a1299e34dd6f755dad1f4023ce08e3"}], "stats": {"total": 615, "additions": 615, "deletions": 0}, "files": [{"sha": "77681636944c8ab1f38707caefd75fa29ef4fefe", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "patch": "@@ -1,3 +1,14 @@\n+2004-12-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/27_io/basic_istream/get/wchar_t/1.cc: New.\n+\t* testsuite/27_io/basic_istream/get/wchar_t/2.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/get/wchar_t/3.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/ignore/wchar_t/1.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/ignore/wchar_t/2.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/ignore/wchar_t/3.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/ignore/wchar_t/6360.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/ignore/wchar_t/7220.cc: Likewise.\n+\n 2004-11-29  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/21_strings/basic_string/capacity/char/18654.cc: Use"}, {"sha": "a730e518067c59fec5ffa42d2d92b0fecf73e5a3", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/get/wchar_t/1.cc", "status": "added", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fget%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fget%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fget%2Fwchar_t%2F1.cc?ref=f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "patch": "@@ -0,0 +1,121 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void\n+test03()\n+{\n+  typedef std::char_traits<wchar_t>\ttraits_type;\n+\n+  bool test __attribute__((unused)) = true;\n+  const wchar_t str_lit01[] = \n+  L\"   sun*ra \\n\\t\\t\\t   & his arkestra, featuring john gilmore: \\n\"\n+  L\"                         \"\n+    L\"jazz in silhouette: images and forecasts of tomorrow\";\n+\n+  std::wstring str01(str_lit01);\n+  std::wstring strtmp;\n+\n+  std::wstringbuf sbuf_03;\n+  std::wstringbuf sbuf_04(str01, std::ios_base::in);\n+  std::wstringbuf sbuf_05(str01, std::ios_base::in);\n+\n+  std::wistream is_00(NULL);\n+  std::wistream is_04(&sbuf_04);\n+  std::wistream is_05(&sbuf_05);\n+  std::ios_base::iostate statefail, stateeof;\n+  statefail = std::ios_base::failbit;\n+  stateeof = std::ios_base::eofbit;\n+  wchar_t carray1[400] = L\"\";\n+\n+  // int_type get()\n+  // istream& get(wchar_t*, streamsize, wchar_t delim)\n+  // istream& get(wchar_t*, streamsize)\n+  // istream& get(streambuf&, wchar_t delim)\n+  // istream& get(streambuf&)\n+  is_00.get(carray1, 2);\n+  VERIFY( static_cast<bool>(is_00.rdstate() & statefail) ); \n+  VERIFY( is_00.gcount() == 0 );\n+\n+  is_04.get(carray1, 4);\n+  VERIFY( !(is_04.rdstate() & statefail) );\n+  VERIFY( !traits_type::compare(carray1, L\"   \", 4) );\n+  VERIFY( is_04.gcount() == 3 );\n+\n+  is_04.clear();\n+  is_04.get(carray1 + 3, 200);\n+  VERIFY( !(is_04.rdstate() & statefail) );\n+  VERIFY( !(is_04.rdstate() & stateeof) );\n+  VERIFY( !traits_type::compare(carray1, str_lit01, 10) );\n+  VERIFY( is_04.gcount() == 7 );\n+\n+  is_04.clear();\n+  is_04.get(carray1, 200);\n+  VERIFY( !(is_04.rdstate() & stateeof) );\n+  VERIFY( static_cast<bool>(is_04.rdstate() & statefail) ); // delimiter\n+  VERIFY( is_04.gcount() == 0 );\n+  is_04.clear();\n+  is_04.get(carray1, 200, L'[');\n+  VERIFY( static_cast<bool>(is_04.rdstate() & stateeof) );\n+  VERIFY( !(is_04.rdstate() & statefail) );\n+  VERIFY( is_04.gcount() == 125 );\n+  is_04.clear();  \n+  is_04.get(carray1, 200);\n+  VERIFY( static_cast<bool>(is_04.rdstate() & stateeof) );\n+  VERIFY( static_cast<bool>(is_04.rdstate() & statefail) ); \n+  VERIFY( is_04.gcount() == 0 );\n+\n+  std::wstringbuf sbuf_02(std::ios_base::in);\n+  is_05.clear();\n+  is_05.get(sbuf_02);\n+  VERIFY( is_05.gcount() == 0 );\n+  VERIFY( static_cast<bool>(is_05.rdstate() & statefail) ); \n+  VERIFY( !(is_05.rdstate() & stateeof) ); \n+\n+  is_05.clear();\n+  is_05.get(sbuf_03);\n+  VERIFY( is_05.gcount() == 10 );\n+  VERIFY( sbuf_03.str() == L\"   sun*ra \" );\n+  VERIFY( !(is_05.rdstate() & statefail) ); \n+  VERIFY( !(is_05.rdstate() & stateeof) ); \n+\n+  is_05.clear();\n+  is_05.get(sbuf_03, L'|');\n+  VERIFY( is_05.gcount() == 125 );\n+  VERIFY( sbuf_03.str() == str_lit01 );\n+  VERIFY( !(is_05.rdstate() & statefail) ); \n+  VERIFY( static_cast<bool>(is_05.rdstate() & stateeof) ); \n+\n+  is_05.clear();\n+  is_05.get(sbuf_03, L'|');\n+  VERIFY( is_05.gcount() == 0 );\n+  VERIFY( static_cast<bool>(is_05.rdstate() & stateeof) ); \n+  VERIFY( static_cast<bool>(is_05.rdstate() & statefail) ); \n+}\n+\n+int \n+main()\n+{\n+  test03();\n+  return 0;\n+}"}, {"sha": "b150d89e4b50062324c444ba446ca7721292154f", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/get/wchar_t/2.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fget%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fget%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fget%2Fwchar_t%2F2.cc?ref=f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "patch": "@@ -0,0 +1,56 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n+\n+#include <istream>\n+#include <sstream>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+//libstdc++/92: Bug in istream::get(basic_streambuf*)\n+// bug reported by bgarcia@laurelnetworks.com\n+// http://gcc.gnu.org/ml/libstdc++-prs/2000-q3/msg00041.html\n+void\n+test07()\n+{\n+  bool test __attribute__((unused)) = true;\n+  const char* tfn = \"istream_unformatted-1.txt\";\n+  std::wifstream infile;\n+  infile.open(tfn);\n+  VERIFY( !(!infile) );\n+  while (infile)\n+    {\n+      std::wstring line;\n+      std::wostringstream line_ss;\n+      while (infile.peek() == L'\\n')\n+\tinfile.get();\n+      infile.get(*(line_ss.rdbuf()));\n+      line = line_ss.str();\n+      VERIFY( line == L\"1234567890\" || line == L\"\" );\n+    }\n+}\n+\n+int \n+main()\n+{\n+  test07();\n+  return 0;\n+}"}, {"sha": "941afde7dcc761686faa22929ac832e1e8e2ad39", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/get/wchar_t/3.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fget%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fget%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fget%2Fwchar_t%2F3.cc?ref=f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "patch": "@@ -0,0 +1,56 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// DR 243. get and getline when sentry reports failure.\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  wstringbuf strbuf01;\n+  wstringbuf strbuf02;\n+  wistream istr01(&strbuf01);\n+  wistream istr02(&strbuf02);\n+  wchar_t buf02[2] = L\"*\" ;\n+ \n+  istr01.peek();\n+  VERIFY( istr01.eof() );\n+\n+  istr01.get(0, 0);\n+  VERIFY( istr01.gcount() == 0 );\n+  VERIFY( istr01.fail() );\n+\n+  istr02.peek();\n+  VERIFY( istr02.eof() );\n+\n+  istr02.get(buf02, 1);\n+  VERIFY( istr02.gcount() == 0 );\n+  VERIFY( istr02.fail() );\n+  VERIFY( buf02[0] == wchar_t() );  \n+}\n+\n+int main() \n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "fc88884e3592b9598beedd677331924a978d281d", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ignore/wchar_t/1.cc", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F1.cc?ref=f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "patch": "@@ -0,0 +1,78 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  typedef std::ios::traits_type traits_type;\n+\n+  bool test __attribute__((unused)) = true;\n+  const std::wstring str_01;\n+  const std::wstring str_02(L\"soul eyes: john coltrane quartet\");\n+  std::wstring strtmp;\n+\n+  std::wstringbuf isbuf_03(str_02, std::ios_base::in);\n+  std::wstringbuf isbuf_04(str_02, std::ios_base::in);\n+\n+  std::wistream is_00(NULL);\n+  std::wistream is_03(&isbuf_03);\n+  std::wistream is_04(&isbuf_04);\n+  std::ios_base::iostate state1, state2, statefail, stateeof;\n+  statefail = std::ios_base::failbit;\n+  stateeof = std::ios_base::eofbit;\n+\n+  // istream& read(char_type* s, streamsize n)\n+  wchar_t carray[60] = L\"\";\n+  is_04.read(carray, 9);\n+  VERIFY( is_04.peek() == L':' );\n+\n+  // istream& ignore(streamsize n = 1, int_type delim = traits::eof())\n+  state1 = is_04.rdstate();\n+  is_04.ignore();\n+  VERIFY( is_04.gcount() == 1 );\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( is_04.peek() == L' ' );\n+\n+  state1 = is_04.rdstate();\n+  is_04.ignore(0);\n+  VERIFY( is_04.gcount() == 0 );\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( is_04.peek() == L' ' );\n+\n+  state1 = is_04.rdstate();\n+  is_04.ignore(5, traits_type::to_int_type(' '));\n+  VERIFY( is_04.gcount() == 1 );\n+  state2 = is_04.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( is_04.peek() == L'j' );\n+}\n+\n+int \n+main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "50f5c30d4c3de157ca8a03239693b90db5b02f49", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ignore/wchar_t/2.cc", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F2.cc?ref=f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "patch": "@@ -0,0 +1,86 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <string>\n+#include <fstream>\n+#include <limits>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+wstring\n+prepare(wstring::size_type len, unsigned nchunks, wchar_t delim)\n+{\n+  wstring ret;\n+  for (unsigned i = 0; i < nchunks; ++i)\n+    {\n+      for (wstring::size_type j = 0; j < len; ++j)\n+\tret.push_back(L'a' + rand() % 26);\n+      len *= 2;\n+      ret.push_back(delim);\n+    }\n+  return ret;\n+}\n+\n+void\n+check(wistream& stream, const wstring& str, unsigned nchunks, wchar_t delim)\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  wstring::size_type index = 0, index_new = 0;\n+  unsigned n = 0;\n+\n+  while (stream.ignore(numeric_limits<streamsize>::max(), delim).good())\n+    {\n+      index_new = str.find(delim, index);\n+      VERIFY( stream.gcount() == index_new - index + 1 );\n+      index = index_new + 1;\n+      ++n;\n+    }\n+  VERIFY( stream.gcount() == 0 );\n+  VERIFY( !stream.fail() );\n+  VERIFY( n == nchunks );\n+}\n+\n+void test01()\n+{\n+  const char filename[] = \"wistream_ignore.txt\";\n+\n+  const wchar_t delim = L'|';\n+  const unsigned nchunks = 10;\n+  const wstring data = prepare(555, nchunks, delim);\n+\n+  wofstream ofstrm;\n+  ofstrm.open(filename);\n+  ofstrm.write(data.data(), data.size());\n+  ofstrm.close();\n+\n+  wifstream ifstrm;\n+  ifstrm.open(filename);\n+  check(ifstrm, data, nchunks, delim);\n+  ifstrm.close();\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "7d085f3135f462eab6ee98bb4fbe316070051ce7", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ignore/wchar_t/3.cc", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F3.cc?ref=f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "patch": "@@ -0,0 +1,95 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+// @require@ %-*.tst %-*.txt\n+// @diff@ %-*.tst %-*.txt\n+\n+#include <istream>\n+#include <fstream>\n+#include <limits>\n+#include <testsuite_hooks.h>\n+\n+// istream& ignore(streamsize n)\n+void\n+test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  const char filename[] =\"istream_unformatted-1.txt\";\n+  ios_base::iostate state1, state2;\n+\n+  wifstream ifstrm;\n+  ifstrm.open(filename);  \n+\n+  state1 = ifstrm.rdstate();\n+  VERIFY( state1 == ios_base::goodbit );\n+  VERIFY( ifstrm.peek() == L'1' );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+\n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(1);\n+  VERIFY( ifstrm.gcount() == 1 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( ifstrm.peek() == L'2' );\n+\n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(10);\n+  VERIFY( ifstrm.gcount() == 10 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( ifstrm.peek() == L'1' );\n+\n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(100);\n+  VERIFY( ifstrm.gcount() == 100 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( ifstrm.peek() == L'2' );\n+  \n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(1000);\n+  VERIFY( ifstrm.gcount() == 1000 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( ifstrm.peek() == L'1' );\n+  \n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(10000);\n+  VERIFY( ifstrm.gcount() == 10000 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( ifstrm.peek() == L'2' );\n+\n+  state1 = ifstrm.rdstate();\n+  ifstrm.ignore(numeric_limits<streamsize>::max());\n+  VERIFY( ifstrm.gcount() == 5389 );\n+  state2 = ifstrm.rdstate();\n+  VERIFY( state1 != state2 );\n+  VERIFY( state2 == ios_base::eofbit );\n+}\n+\n+int \n+main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "6dee04cad05d0f08f31a18d64cd15e8c88ff1de3", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ignore/wchar_t/6360.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F6360.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F6360.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F6360.cc?ref=f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "patch": "@@ -0,0 +1,46 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// 2002-04-19 PR libstdc++ 6360\n+void\n+test08()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  wstringstream ss(L\"abcd\" L\"\\xFF\" L\"1234ina donna coolbrith\");  \n+  wchar_t c;\n+  ss >> c;\n+  VERIFY( c == L'a' );\n+  ss.ignore(8);\n+  ss >> c;\n+  VERIFY( c == L'i' );\n+}\n+\n+int \n+main()\n+{\n+  test08();\n+  return 0;\n+}"}, {"sha": "7e8402a1a2f2bb337f89912f609f0b565f4070e3", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/ignore/wchar_t/7220.cc", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F7220.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F7220.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fignore%2Fwchar_t%2F7220.cc?ref=f8e7ffa67339a806d5ae5d8a3fb0f37353bd53e5", "patch": "@@ -0,0 +1,66 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/70220\n+void\n+test10()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  typedef wstring string_type;\n+  typedef wstringbuf stringbuf_type;\n+  typedef wistream istream_type;\n+\n+  streamsize n;\n+  string_type  input(L\"abcdefg\\n\");\n+  stringbuf_type sbuf(input);\n+  istream_type  istr(&sbuf);\n+  \n+  istr.ignore(0);\n+  if (istr.gcount() != 0) \n+    test = false;\n+  VERIFY( test );\n+  \n+  istr.ignore(0, L'b');\n+  if (istr.gcount() != 0) \n+    test = false;\n+  VERIFY( test );\n+  \n+  istr.ignore();\t// Advance to next position.\n+  istr.ignore(0, L'b');\n+  if ((n=istr.gcount()) != 0) \n+    test = false;\n+  VERIFY( test );\n+  \n+  if (istr.peek() != L'b')\n+    test = false;\n+  VERIFY( test );\n+}\n+\n+int \n+main()\n+{\n+  test10();\n+  return 0;\n+}"}]}