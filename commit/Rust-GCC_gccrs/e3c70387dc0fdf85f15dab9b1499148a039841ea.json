{"sha": "e3c70387dc0fdf85f15dab9b1499148a039841ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNjNzAzODdkYzBmZGY4NWYxNWRhYjliMTQ5OTE0OGEwMzk4NDFlYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-02-03T13:03:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-02-03T13:03:39Z"}, "message": "re PR tree-optimization/42944 (errno misoptimization around malloc call)\n\n2010-02-03  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42944\n\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Handle\n\tcalloc.\n\t(call_may_clobber_ref_p_1): Likewise.  Properly handle\n\tmalloc and calloc clobbering errno.\n\n\t* gcc.dg/errno-1.c: New testcase.\n\nFrom-SVN: r156467", "tree": {"sha": "cc0411dbf0232937e66a437fe07b60b01e85621a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc0411dbf0232937e66a437fe07b60b01e85621a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3c70387dc0fdf85f15dab9b1499148a039841ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3c70387dc0fdf85f15dab9b1499148a039841ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3c70387dc0fdf85f15dab9b1499148a039841ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3c70387dc0fdf85f15dab9b1499148a039841ea/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4cad6dba074f9325e3bc0c4fa80e7646cb50088a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cad6dba074f9325e3bc0c4fa80e7646cb50088a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cad6dba074f9325e3bc0c4fa80e7646cb50088a"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "34437bd5a50923af0e0678bc4093388386e416dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3c70387dc0fdf85f15dab9b1499148a039841ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3c70387dc0fdf85f15dab9b1499148a039841ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3c70387dc0fdf85f15dab9b1499148a039841ea", "patch": "@@ -1,3 +1,11 @@\n+2010-02-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42944\n+\t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Handle\n+\tcalloc.\n+\t(call_may_clobber_ref_p_1): Likewise.  Properly handle\n+\tmalloc and calloc clobbering errno.\n+\n 2010-02-03  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* doc/invoke.texi: Fix name of sched1 dump."}, {"sha": "279793589615db70f864aa88169b7437f68413d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3c70387dc0fdf85f15dab9b1499148a039841ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3c70387dc0fdf85f15dab9b1499148a039841ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3c70387dc0fdf85f15dab9b1499148a039841ea", "patch": "@@ -1,3 +1,8 @@\n+2010-02-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42944\n+\t* gcc.dg/errno-1.c: New testcase.\n+\n 2010-02-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/42927"}, {"sha": "d0365bed45b066681a13180f097707df96bbc570", "filename": "gcc/testsuite/gcc.dg/errno-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3c70387dc0fdf85f15dab9b1499148a039841ea/gcc%2Ftestsuite%2Fgcc.dg%2Ferrno-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3c70387dc0fdf85f15dab9b1499148a039841ea/gcc%2Ftestsuite%2Fgcc.dg%2Ferrno-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ferrno-1.c?ref=e3c70387dc0fdf85f15dab9b1499148a039841ea", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <errno.h>\n+#include <stdlib.h>\n+\n+int main()\n+{\n+  void *p;\n+  errno = 0;\n+  p = malloc (-1);\n+  if (errno != 0)\n+    do_not_optimize_away ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler \"do_not_optimize_away\" } } */"}, {"sha": "16abb4c5222b7a1604bced127165c9860a352999", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3c70387dc0fdf85f15dab9b1499148a039841ea/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3c70387dc0fdf85f15dab9b1499148a039841ea/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=e3c70387dc0fdf85f15dab9b1499148a039841ea", "patch": "@@ -963,6 +963,7 @@ ref_maybe_used_by_call_p_1 (gimple call, ao_ref *ref)\n \t/* The following builtins do not read from memory.  */\n \tcase BUILT_IN_FREE:\n \tcase BUILT_IN_MALLOC:\n+\tcase BUILT_IN_CALLOC:\n \tcase BUILT_IN_MEMSET:\n \tcase BUILT_IN_FREXP:\n \tcase BUILT_IN_FREXPF:\n@@ -1190,6 +1191,21 @@ call_may_clobber_ref_p_1 (gimple call, ao_ref *ref)\n \t/* Allocating memory does not have any side-effects apart from\n \t   being the definition point for the pointer.  */\n \tcase BUILT_IN_MALLOC:\n+\tcase BUILT_IN_CALLOC:\n+\t  /* Unix98 specifies that errno is set on allocation failure.\n+\t     Until we properly can track the errno location assume it\n+\t     is not a plain decl but anonymous storage in a different\n+\t     translation unit.  */\n+\t  if (flag_errno_math)\n+\t    {\n+\t      struct ptr_info_def *pi;\n+\t      if (DECL_P (base))\n+\t\treturn false;\n+\t      if (INDIRECT_REF_P (base)\n+\t\t  && TREE_CODE (TREE_OPERAND (base, 0)) == SSA_NAME\n+\t\t  && (pi = SSA_NAME_PTR_INFO (TREE_OPERAND (base, 0))))\n+\t\treturn pi->pt.anything || pi->pt.nonlocal;\n+\t    }\n \t  return false;\n \t/* Freeing memory kills the pointed-to memory.  More importantly\n \t   the call has to serve as a barrier for moving loads and stores"}]}