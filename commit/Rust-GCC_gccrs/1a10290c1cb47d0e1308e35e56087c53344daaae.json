{"sha": "1a10290c1cb47d0e1308e35e56087c53344daaae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWExMDI5MGMxY2I0N2QwZTEzMDhlMzVlNTYwODdjNTMzNDRkYWFhZQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-08-17T20:56:25Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-08-17T20:56:25Z"}, "message": "re PR c++/15871 (g++ does not honour -fkeep-inline-functions)\n\n\tPR c++/15871\n\t* semantics.c (expand_or_defer_fn): Honor -fkeep-inline-functions.\n\n\tPR c++/15871\n\t* doc/invoke.texi (-fkeep-inline-functions): Update documentation.\n\n\tPR c++/15871\n\t* g++.dg/opt/inline8.C: New test.\n\nFrom-SVN: r86144", "tree": {"sha": "86b49bd3e86a3d584337acf5c4f1dd44507ccccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86b49bd3e86a3d584337acf5c4f1dd44507ccccc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a10290c1cb47d0e1308e35e56087c53344daaae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a10290c1cb47d0e1308e35e56087c53344daaae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a10290c1cb47d0e1308e35e56087c53344daaae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a10290c1cb47d0e1308e35e56087c53344daaae/comments", "author": null, "committer": null, "parents": [{"sha": "1bc7e46697762ab61229dbc459c851a4e9d0df1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bc7e46697762ab61229dbc459c851a4e9d0df1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bc7e46697762ab61229dbc459c851a4e9d0df1c"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "407ee87b94d3092a5a4bc3c6f413ad9c1f55b42c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a10290c1cb47d0e1308e35e56087c53344daaae", "patch": "@@ -1,3 +1,8 @@\n+2004-08-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/15871\n+\t* doc/invoke.texi (-fkeep-inline-functions): Update documentation.\n+\n 2004-08-17  Robert Bowdidge  <bowdidge@apple.com>\n   \n         * config/rs6000/x-darwin: Add -mdynamic-no-pic to gcc build flags."}, {"sha": "92e5751840cd1291939d5bbd3ad0f404755e21ad", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1a10290c1cb47d0e1308e35e56087c53344daaae", "patch": "@@ -1,5 +1,8 @@\n 2004-08-17  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/15871\n+\t* semantics.c (expand_or_defer_fn): Honor -fkeep-inline-functions.\n+\n \tPR c++/16965\n \t* cp-tree.h (qualified_name_lookup_error): Add parameter.\n \t* name-lookup.c (do_class_using_decl): Restrict set of entities"}, {"sha": "302d00ecc779b3367e60becc8e170942ab982e8c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=1a10290c1cb47d0e1308e35e56087c53344daaae", "patch": "@@ -2959,7 +2959,7 @@ expand_or_defer_fn (tree fn)\n   /* We make a decision about linkage for these functions at the end\n      of the compilation.  Until that point, we do not want the back\n      end to output them -- but we do want it to see the bodies of\n-     these fucntions so that it can inline them as appropriate.  */\n+     these functions so that it can inline them as appropriate.  */\n   if (DECL_DECLARED_INLINE_P (fn) || DECL_IMPLICIT_INSTANTIATION (fn))\n     {\n       if (!at_eof)\n@@ -2970,6 +2970,12 @@ expand_or_defer_fn (tree fn)\n \t}\n       else\n \timport_export_decl (fn);\n+\n+      /* If the user wants us to keep all inline functions, then mark\n+\t this function as needed so that finish_file will make sure to\n+\t output it later.  */\n+      if (flag_keep_inline_functions && DECL_DECLARED_INLINE_P (fn))\n+\tmark_needed (fn);\n     }\n \n   /* There's no reason to do any of the work here if we're only doing"}, {"sha": "0cf590c231932debd92e11686f8fd00f88f62180", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1a10290c1cb47d0e1308e35e56087c53344daaae", "patch": "@@ -4055,10 +4055,11 @@ release to an another.\n \n @item -fkeep-inline-functions\n @opindex fkeep-inline-functions\n-Even if all calls to a given function are integrated, and the function\n-is declared @code{static}, nevertheless output a separate run-time\n-callable version of the function.  This switch does not affect\n-@code{extern inline} functions.\n+In C, emit @code{static} functions that are declared @code{inline}\n+into the object file, even if the function has been inlined into all\n+of its callers.  This switch does not affect functions using the\n+@code{extern inline} extension in GNU C.  In C++, emit any and all\n+inline functions into the object file.\n \n @item -fkeep-static-consts\n @opindex fkeep-static-consts"}, {"sha": "621d0cf2969a9b2be56d009e37ef8c87fa9848f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a10290c1cb47d0e1308e35e56087c53344daaae", "patch": "@@ -1,5 +1,8 @@\n 2004-08-17  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/15871\n+\t* g++.dg/opt/inline8.C: New test.\n+\n \tPR c++/16965\n \t* g++.dg/parse/error17.C: New test.\n \t"}, {"sha": "b2ca021b03935135749a4a75b056d5ea464e34df", "filename": "gcc/testsuite/g++.dg/opt/inline8.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a10290c1cb47d0e1308e35e56087c53344daaae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline8.C?ref=1a10290c1cb47d0e1308e35e56087c53344daaae", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/15871\n+// { dg-options \"-O2 -fkeep-inline-functions\" }\n+// { dg-final { scan-assembler \"foo\" } }\n+\n+inline void foo(void) { }"}]}