{"sha": "dc5b05a07544bbab9e309a45ebcb350a37b69103", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM1YjA1YTA3NTQ0YmJhYjllMzA5YTQ1ZWJjYjM1MGEzN2I2OTEwMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-12-18T18:41:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-12-18T18:41:26Z"}, "message": "re PR tree-optimization/88464 (AVX-512 vectorization of masked scatter failing with \"not suitable for scatter store\")\n\n\tPR target/88464\n\t* config/i386/i386-builtin-types.def\n\t(VOID_FTYPE_PDOUBLE_QI_V8SI_V4DF_INT,\n\tVOID_FTYPE_PFLOAT_QI_V4DI_V8SF_INT,\n\tVOID_FTYPE_PLONGLONG_QI_V8SI_V4DI_INT,\n\tVOID_FTYPE_PINT_QI_V4DI_V8SI_INT,\n\tVOID_FTYPE_PDOUBLE_QI_V4SI_V2DF_INT,\n\tVOID_FTYPE_PFLOAT_QI_V2DI_V4SF_INT,\n\tVOID_FTYPE_PLONGLONG_QI_V4SI_V2DI_INT,\n\tVOID_FTYPE_PINT_QI_V2DI_V4SI_INT): New builtin types.\n\t* config/i386/i386.c (enum ix86_builtins): Add\n\tIX86_BUILTIN_SCATTERALTSIV4DF, IX86_BUILTIN_SCATTERALTDIV8SF,\n\tIX86_BUILTIN_SCATTERALTSIV4DI, IX86_BUILTIN_SCATTERALTDIV8SI,\n\tIX86_BUILTIN_SCATTERALTSIV2DF, IX86_BUILTIN_SCATTERALTDIV4SF,\n\tIX86_BUILTIN_SCATTERALTSIV2DI and IX86_BUILTIN_SCATTERALTDIV4SI.\n\t(ix86_init_mmx_sse_builtins): Fix up names of IX86_BUILTIN_GATHERALT*,\n\tIX86_BUILTIN_GATHER3ALT* and IX86_BUILTIN_SCATTERALT* builtins to\n\tmatch the IX86_BUILTIN codes.  Build \tIX86_BUILTIN_SCATTERALTSIV4DF,\n\tIX86_BUILTIN_SCATTERALTDIV8SF, IX86_BUILTIN_SCATTERALTSIV4DI,\n\tIX86_BUILTIN_SCATTERALTDIV8SI, IX86_BUILTIN_SCATTERALTSIV2DF,\n\tIX86_BUILTIN_SCATTERALTDIV4SF, IX86_BUILTIN_SCATTERALTSIV2DI and\n\tIX86_BUILTIN_SCATTERALTDIV4SI decls.\n\t(ix86_vectorize_builtin_scatter): Expand those new builtins.\n\n\t* gcc.target/i386/avx512f-pr88464-5.c: New test.\n\t* gcc.target/i386/avx512f-pr88464-6.c: New test.\n\t* gcc.target/i386/avx512f-pr88464-7.c: New test.\n\t* gcc.target/i386/avx512f-pr88464-8.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-5.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-6.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-7.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-8.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-9.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-10.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-11.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-12.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-13.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-14.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-15.c: New test.\n\t* gcc.target/i386/avx512vl-pr88464-16.c: New test.\n\nFrom-SVN: r267239", "tree": {"sha": "cbe8e6687ad716c56bd6fb8e972324ae16755d83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbe8e6687ad716c56bd6fb8e972324ae16755d83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc5b05a07544bbab9e309a45ebcb350a37b69103", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5b05a07544bbab9e309a45ebcb350a37b69103", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc5b05a07544bbab9e309a45ebcb350a37b69103", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5b05a07544bbab9e309a45ebcb350a37b69103/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4894e316a8feaf1d38e64e867358107445b7dc31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4894e316a8feaf1d38e64e867358107445b7dc31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4894e316a8feaf1d38e64e867358107445b7dc31"}], "stats": {"total": 588, "additions": 579, "deletions": 9}, "files": [{"sha": "a4051f7acd207f94292761af85453f61fd4bac3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -1,3 +1,29 @@\n+2018-12-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/88464\n+\t* config/i386/i386-builtin-types.def\n+\t(VOID_FTYPE_PDOUBLE_QI_V8SI_V4DF_INT,\n+\tVOID_FTYPE_PFLOAT_QI_V4DI_V8SF_INT,\n+\tVOID_FTYPE_PLONGLONG_QI_V8SI_V4DI_INT,\n+\tVOID_FTYPE_PINT_QI_V4DI_V8SI_INT,\n+\tVOID_FTYPE_PDOUBLE_QI_V4SI_V2DF_INT,\n+\tVOID_FTYPE_PFLOAT_QI_V2DI_V4SF_INT,\n+\tVOID_FTYPE_PLONGLONG_QI_V4SI_V2DI_INT,\n+\tVOID_FTYPE_PINT_QI_V2DI_V4SI_INT): New builtin types.\n+\t* config/i386/i386.c (enum ix86_builtins): Add\n+\tIX86_BUILTIN_SCATTERALTSIV4DF, IX86_BUILTIN_SCATTERALTDIV8SF,\n+\tIX86_BUILTIN_SCATTERALTSIV4DI, IX86_BUILTIN_SCATTERALTDIV8SI,\n+\tIX86_BUILTIN_SCATTERALTSIV2DF, IX86_BUILTIN_SCATTERALTDIV4SF,\n+\tIX86_BUILTIN_SCATTERALTSIV2DI and IX86_BUILTIN_SCATTERALTDIV4SI.\n+\t(ix86_init_mmx_sse_builtins): Fix up names of IX86_BUILTIN_GATHERALT*,\n+\tIX86_BUILTIN_GATHER3ALT* and IX86_BUILTIN_SCATTERALT* builtins to\n+\tmatch the IX86_BUILTIN codes.  Build \tIX86_BUILTIN_SCATTERALTSIV4DF,\n+\tIX86_BUILTIN_SCATTERALTDIV8SF, IX86_BUILTIN_SCATTERALTSIV4DI,\n+\tIX86_BUILTIN_SCATTERALTDIV8SI, IX86_BUILTIN_SCATTERALTSIV2DF,\n+\tIX86_BUILTIN_SCATTERALTDIV4SF, IX86_BUILTIN_SCATTERALTSIV2DI and\n+\tIX86_BUILTIN_SCATTERALTDIV4SI decls.\n+\t(ix86_vectorize_builtin_scatter): Expand those new builtins.\n+\n 2018-12-18  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n \t* doc/extend.texi (PowerPC Altivec/VSX Built-in Functions):"}, {"sha": "61c9e6e11f05ce4e14f432b17ac2b35883485288", "filename": "gcc/config/i386/i386-builtin-types.def", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -1068,7 +1068,14 @@ DEF_FUNCTION_TYPE (VOID, PFLOAT, HI, V8DI, V16SF, INT)\n DEF_FUNCTION_TYPE (VOID, PDOUBLE, QI, V16SI, V8DF, INT)\n DEF_FUNCTION_TYPE (VOID, PINT, HI, V8DI, V16SI, INT)\n DEF_FUNCTION_TYPE (VOID, PLONGLONG, QI, V16SI, V8DI, INT)\n-\n+DEF_FUNCTION_TYPE (VOID, PFLOAT, QI, V4DI, V8SF, INT)\n+DEF_FUNCTION_TYPE (VOID, PDOUBLE, QI, V8SI, V4DF, INT)\n+DEF_FUNCTION_TYPE (VOID, PINT, QI, V4DI, V8SI, INT)\n+DEF_FUNCTION_TYPE (VOID, PLONGLONG, QI, V8SI, V4DI, INT)\n+DEF_FUNCTION_TYPE (VOID, PFLOAT, QI, V2DI, V4SF, INT)\n+DEF_FUNCTION_TYPE (VOID, PDOUBLE, QI, V4SI, V2DF, INT)\n+DEF_FUNCTION_TYPE (VOID, PINT, QI, V2DI, V4SI, INT)\n+DEF_FUNCTION_TYPE (VOID, PLONGLONG, QI, V4SI, V2DI, INT)\n \n DEF_FUNCTION_TYPE (V16SF, V16SF, PCVOID, V16SI, HI, INT)\n DEF_FUNCTION_TYPE (V8DF, V8DF, PCVOID, V8SI, QI, INT)"}, {"sha": "b3c86761e25c20a4713f9e6f1f812685ce4a2f03", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 151, "deletions": 8, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -30072,6 +30072,14 @@ enum ix86_builtins\n   IX86_BUILTIN_SCATTERALTDIV16SF,\n   IX86_BUILTIN_SCATTERALTSIV8DI,\n   IX86_BUILTIN_SCATTERALTDIV16SI,\n+  IX86_BUILTIN_SCATTERALTSIV4DF,\n+  IX86_BUILTIN_SCATTERALTDIV8SF,\n+  IX86_BUILTIN_SCATTERALTSIV4DI,\n+  IX86_BUILTIN_SCATTERALTDIV8SI,\n+  IX86_BUILTIN_SCATTERALTSIV2DF,\n+  IX86_BUILTIN_SCATTERALTDIV4SF,\n+  IX86_BUILTIN_SCATTERALTSIV2DI,\n+  IX86_BUILTIN_SCATTERALTDIV4SI,\n   IX86_BUILTIN_SCATTERDIV16SF,\n   IX86_BUILTIN_SCATTERDIV16SI,\n   IX86_BUILTIN_SCATTERDIV8DF,\n@@ -30879,15 +30887,15 @@ ix86_init_mmx_sse_builtins (void)\n \t\t    V4DF_FTYPE_V4DF_PCDOUBLE_V8SI_V4DF_INT,\n \t\t    IX86_BUILTIN_GATHERALTSIV4DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatheraltdiv4sf256 \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatheraltdiv8sf \",\n \t\t    V8SF_FTYPE_V8SF_PCFLOAT_V4DI_V8SF_INT,\n \t\t    IX86_BUILTIN_GATHERALTDIV8SF);\n \n   def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatheraltsiv4di \",\n \t\t    V4DI_FTYPE_V4DI_PCINT64_V8SI_V4DI_INT,\n \t\t    IX86_BUILTIN_GATHERALTSIV4DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatheraltdiv4si256 \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX2, \"__builtin_ia32_gatheraltdiv8si \",\n \t\t    V8SI_FTYPE_V8SI_PCINT_V4DI_V8SI_INT,\n \t\t    IX86_BUILTIN_GATHERALTDIV8SI);\n \n@@ -30924,19 +30932,19 @@ ix86_init_mmx_sse_builtins (void)\n \t\t    V8DI_FTYPE_V8DI_PCVOID_V8DI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3DIV8DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gatheraltsiv8df \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gather3altsiv8df \",\n \t\t    V8DF_FTYPE_V8DF_PCDOUBLE_V16SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTSIV8DF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gatheraltdiv8sf \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gather3altdiv16sf \",\n \t\t    V16SF_FTYPE_V16SF_PCFLOAT_V8DI_HI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTDIV16SF);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gatheraltsiv8di \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gather3altsiv8di \",\n \t\t    V8DI_FTYPE_V8DI_PCINT64_V16SI_QI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTSIV8DI);\n \n-  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gatheraltdiv8si \",\n+  def_builtin_pure (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_gather3altdiv16si \",\n \t\t    V16SI_FTYPE_V16SI_PCINT_V8DI_HI_INT,\n \t\t    IX86_BUILTIN_GATHER3ALTDIV16SI);\n \n@@ -31116,22 +31124,55 @@ ix86_init_mmx_sse_builtins (void)\n   def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatterdiv2di\",\n \t       VOID_FTYPE_PVOID_QI_V2DI_V2DI_INT,\n \t       IX86_BUILTIN_SCATTERDIV2DI);\n+\n   def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatteraltsiv8df \",\n \t       VOID_FTYPE_PDOUBLE_QI_V16SI_V8DF_INT,\n \t       IX86_BUILTIN_SCATTERALTSIV8DF);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatteraltdiv8sf \",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatteraltdiv16sf \",\n \t       VOID_FTYPE_PFLOAT_HI_V8DI_V16SF_INT,\n \t       IX86_BUILTIN_SCATTERALTDIV16SF);\n \n   def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatteraltsiv8di \",\n \t       VOID_FTYPE_PLONGLONG_QI_V16SI_V8DI_INT,\n \t       IX86_BUILTIN_SCATTERALTSIV8DI);\n \n-  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatteraltdiv8si \",\n+  def_builtin (OPTION_MASK_ISA_AVX512F, \"__builtin_ia32_scatteraltdiv16si \",\n \t       VOID_FTYPE_PINT_HI_V8DI_V16SI_INT,\n \t       IX86_BUILTIN_SCATTERALTDIV16SI);\n \n+  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltsiv4df \",\n+\t       VOID_FTYPE_PDOUBLE_QI_V8SI_V4DF_INT,\n+\t       IX86_BUILTIN_SCATTERALTSIV4DF);\n+\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltdiv8sf \",\n+\t       VOID_FTYPE_PFLOAT_QI_V4DI_V8SF_INT,\n+\t       IX86_BUILTIN_SCATTERALTDIV8SF);\n+\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltsiv4di \",\n+\t       VOID_FTYPE_PLONGLONG_QI_V8SI_V4DI_INT,\n+\t       IX86_BUILTIN_SCATTERALTSIV4DI);\n+\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltdiv8si \",\n+\t       VOID_FTYPE_PINT_QI_V4DI_V8SI_INT,\n+\t       IX86_BUILTIN_SCATTERALTDIV8SI);\n+\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltsiv2df \",\n+\t       VOID_FTYPE_PDOUBLE_QI_V4SI_V2DF_INT,\n+\t       IX86_BUILTIN_SCATTERALTSIV2DF);\n+\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltdiv4sf \",\n+\t       VOID_FTYPE_PFLOAT_QI_V2DI_V4SF_INT,\n+\t       IX86_BUILTIN_SCATTERALTDIV4SF);\n+\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltsiv2di \",\n+\t       VOID_FTYPE_PLONGLONG_QI_V4SI_V2DI_INT,\n+\t       IX86_BUILTIN_SCATTERALTSIV2DI);\n+\n+  def_builtin (OPTION_MASK_ISA_AVX512VL, \"__builtin_ia32_scatteraltdiv4si \",\n+\t       VOID_FTYPE_PINT_QI_V2DI_V4SI_INT,\n+\t       IX86_BUILTIN_SCATTERALTDIV4SI);\n+\n   /* AVX512PF */\n   def_builtin (OPTION_MASK_ISA_AVX512PF, \"__builtin_ia32_gatherpfdpd\",\n \t       VOID_FTYPE_QI_V8SI_PCVOID_INT_INT,\n@@ -37529,6 +37570,30 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n     case IX86_BUILTIN_SCATTERALTDIV16SI:\n       icode = CODE_FOR_avx512f_scatterdiv16si;\n       goto scatter_gen;\n+    case IX86_BUILTIN_SCATTERALTSIV4DF:\n+      icode = CODE_FOR_avx512vl_scattersiv4df;\n+      goto scatter_gen;\n+    case IX86_BUILTIN_SCATTERALTDIV8SF:\n+      icode = CODE_FOR_avx512vl_scatterdiv8sf;\n+      goto scatter_gen;\n+    case IX86_BUILTIN_SCATTERALTSIV4DI:\n+      icode = CODE_FOR_avx512vl_scattersiv4di;\n+      goto scatter_gen;\n+    case IX86_BUILTIN_SCATTERALTDIV8SI:\n+      icode = CODE_FOR_avx512vl_scatterdiv8si;\n+      goto scatter_gen;\n+    case IX86_BUILTIN_SCATTERALTSIV2DF:\n+      icode = CODE_FOR_avx512vl_scattersiv2df;\n+      goto scatter_gen;\n+    case IX86_BUILTIN_SCATTERALTDIV4SF:\n+      icode = CODE_FOR_avx512vl_scatterdiv4sf;\n+      goto scatter_gen;\n+    case IX86_BUILTIN_SCATTERALTSIV2DI:\n+      icode = CODE_FOR_avx512vl_scattersiv2di;\n+      goto scatter_gen;\n+    case IX86_BUILTIN_SCATTERALTDIV4SI:\n+      icode = CODE_FOR_avx512vl_scatterdiv4si;\n+      goto scatter_gen;\n     case IX86_BUILTIN_GATHERPFDPS:\n       icode = CODE_FOR_avx512pf_gatherpfv16sisf;\n       goto vec_prefetch_gen;\n@@ -37813,6 +37878,36 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \t  emit_insn (gen (half, op3));\n \t  op3 = half;\n \t  break;\n+\tcase IX86_BUILTIN_SCATTERALTSIV4DF:\n+\tcase IX86_BUILTIN_SCATTERALTSIV4DI:\n+\t  half = gen_reg_rtx (V4SImode);\n+\t  if (!nonimmediate_operand (op2, V8SImode))\n+\t    op2 = copy_to_mode_reg (V8SImode, op2);\n+\t  emit_insn (gen_vec_extract_lo_v8si (half, op2));\n+\t  op2 = half;\n+\t  break;\n+\tcase IX86_BUILTIN_SCATTERALTDIV8SF:\n+\tcase IX86_BUILTIN_SCATTERALTDIV8SI:\n+\t  half = gen_reg_rtx (mode3);\n+\t  if (mode3 == V4SFmode)\n+\t    gen = gen_vec_extract_lo_v8sf;\n+\t  else\n+\t    gen = gen_vec_extract_lo_v8si;\n+\t  if (!nonimmediate_operand (op3, GET_MODE (op3)))\n+\t    op3 = copy_to_mode_reg (GET_MODE (op3), op3);\n+\t  emit_insn (gen (half, op3));\n+\t  op3 = half;\n+\t  break;\n+\tcase IX86_BUILTIN_SCATTERALTSIV2DF:\n+\tcase IX86_BUILTIN_SCATTERALTSIV2DI:\n+\t  if (!nonimmediate_operand (op2, V4SImode))\n+\t    op2 = copy_to_mode_reg (V4SImode, op2);\n+\t  break;\n+\tcase IX86_BUILTIN_SCATTERALTDIV4SF:\n+\tcase IX86_BUILTIN_SCATTERALTDIV4SI:\n+\t  if (!nonimmediate_operand (op3, GET_MODE (op3)))\n+\t    op3 = copy_to_mode_reg (GET_MODE (op3), op3);\n+\t  break;\n \tdefault:\n \t  break;\n \t}\n@@ -38928,6 +39023,54 @@ ix86_vectorize_builtin_scatter (const_tree vectype,\n     case E_V16SImode:\n       code = si ? IX86_BUILTIN_SCATTERSIV16SI : IX86_BUILTIN_SCATTERALTDIV16SI;\n       break;\n+    case E_V4DFmode:\n+      if (TARGET_AVX512VL)\n+\tcode = si ? IX86_BUILTIN_SCATTERALTSIV4DF : IX86_BUILTIN_SCATTERDIV4DF;\n+      else\n+\treturn NULL_TREE;\n+      break;\n+    case E_V4DImode:\n+      if (TARGET_AVX512VL)\n+\tcode = si ? IX86_BUILTIN_SCATTERALTSIV4DI : IX86_BUILTIN_SCATTERDIV4DI;\n+      else\n+\treturn NULL_TREE;\n+      break;\n+    case E_V8SFmode:\n+      if (TARGET_AVX512VL)\n+\tcode = si ? IX86_BUILTIN_SCATTERSIV8SF : IX86_BUILTIN_SCATTERALTDIV8SF;\n+      else\n+\treturn NULL_TREE;\n+      break;\n+    case E_V8SImode:\n+      if (TARGET_AVX512VL)\n+\tcode = si ? IX86_BUILTIN_SCATTERSIV8SI : IX86_BUILTIN_SCATTERALTDIV8SI;\n+      else\n+\treturn NULL_TREE;\n+      break;\n+    case E_V2DFmode:\n+      if (TARGET_AVX512VL)\n+\tcode = si ? IX86_BUILTIN_SCATTERALTSIV2DF : IX86_BUILTIN_SCATTERDIV2DF;\n+      else\n+\treturn NULL_TREE;\n+      break;\n+    case E_V2DImode:\n+      if (TARGET_AVX512VL)\n+\tcode = si ? IX86_BUILTIN_SCATTERALTSIV2DI : IX86_BUILTIN_SCATTERDIV2DI;\n+      else\n+\treturn NULL_TREE;\n+      break;\n+    case E_V4SFmode:\n+      if (TARGET_AVX512VL)\n+\tcode = si ? IX86_BUILTIN_SCATTERSIV4SF : IX86_BUILTIN_SCATTERALTDIV4SF;\n+      else\n+\treturn NULL_TREE;\n+      break;\n+    case E_V4SImode:\n+      if (TARGET_AVX512VL)\n+\tcode = si ? IX86_BUILTIN_SCATTERSIV4SI : IX86_BUILTIN_SCATTERALTDIV4SI;\n+      else\n+\treturn NULL_TREE;\n+      break;\n     default:\n       return NULL_TREE;\n     }"}, {"sha": "e8a5868892778b5a47ab9fb1312582b7c0d2c791", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -1,3 +1,23 @@\n+2018-12-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/88464\n+\t* gcc.target/i386/avx512f-pr88464-5.c: New test.\n+\t* gcc.target/i386/avx512f-pr88464-6.c: New test.\n+\t* gcc.target/i386/avx512f-pr88464-7.c: New test.\n+\t* gcc.target/i386/avx512f-pr88464-8.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-5.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-6.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-7.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-8.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-9.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-10.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-11.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-12.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-13.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-14.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-15.c: New test.\n+\t* gcc.target/i386/avx512vl-pr88464-16.c: New test.\n+\n 2018-12-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* lib/target-supports.exp (check_effective_target_vect_usad_char):"}, {"sha": "462e951fdc17754b406477ac93aa7b1f38ec3616", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr88464-5.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-5.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,45 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512f -mprefer-vector-width=512 -mtune=skylake-avx512 -fdump-tree-vect-details\" } */\n+/* { dg-final { scan-tree-dump-times \"loop vectorized using 64 byte vectors\" 4 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 4 \"vect\" } } */\n+\n+__attribute__((noipa)) void\n+f1 (long long * __restrict__ a, const long long * __restrict__ b, const int * __restrict__ c, int n)\n+{\n+  int i;\n+#pragma GCC ivdep\n+  for (i = 0; i < n; ++i)\n+    if (a[i] > 10)\n+      a[i] = b[c[i]];\n+}\n+\n+__attribute__((noipa)) void\n+f2 (long long * __restrict__ a, const long long * __restrict__ b, const long * __restrict__ c, int n)\n+{\n+  int i;\n+#pragma GCC ivdep\n+  for (i = 0; i < n; ++i)\n+    if (a[i] > 10)\n+      a[i] = b[c[i]];\n+}\n+\n+__attribute__((noipa)) void\n+f3 (int * __restrict__ a, const int * __restrict__ b, const int * __restrict__ c, int n)\n+{\n+  int i;\n+#pragma GCC ivdep\n+  for (i = 0; i < n; ++i)\n+    if (a[i] > 10)\n+      a[i] = b[c[i]];\n+}\n+\n+__attribute__((noipa)) void\n+f4 (int * __restrict__ a, const int * __restrict__ b, const long * __restrict__ c, int n)\n+{\n+  int i;\n+#pragma GCC ivdep\n+  for (i = 0; i < n; ++i)\n+    if (a[i] > 10)\n+      a[i] = b[c[i]];\n+}"}, {"sha": "9ebb72a5bae8bf4072320d9bfaae5d3753a9ce1c", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr88464-6.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-6.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,61 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do run { target { avx512f } } } */\n+/* { dg-options \"-O3 -mavx512f -mprefer-vector-width=512 -mtune=skylake-avx512\" } */\n+\n+#include \"avx512f-check.h\"\n+\n+#include \"avx512f-pr88464-5.c\"\n+\n+static void\n+avx512f_test (void)\n+{\n+  long long a[1024], b[1024];\n+  int c[1024], f[1024];\n+  int d[1024];\n+  long e[1024];\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    {\n+      asm volatile (\"\" : \"+g\" (i));\n+      a[i] = (i % 3) != 0 ? 15 : -5;\n+      b[i] = 2 * i;\n+      d[i] = (i % 3) ? 1023 - i : __INT_MAX__;\n+    }\n+  f1 (a, b, d, 1024);\n+  for (i = 0; i < 1024; i++)\n+    {\n+      asm volatile (\"\" : \"+g\" (i));\n+      if (a[i] != ((i % 3) != 0 ? (1023 - i) * 2 : -5))\n+\tabort ();\n+      a[i] = (i % 3) != 1 ? 15 : -5;\n+      b[i] = 3 * i;\n+      e[i] = (i % 3) != 1 ? 1023 - i : __LONG_MAX__;\n+    }\n+  f2 (a, b, e, 1024);\n+  for (i = 0; i < 1024; i++)\n+    {\n+      asm volatile (\"\" : \"+g\" (i));\n+      if (a[i] != ((i % 3) != 1 ? (1023 - i) * 3 : -5))\n+\tabort ();\n+      c[i] = (i % 3) != 2 ? 15 : -5;\n+      d[i] = (i % 3) != 2 ? 1023 - i : __INT_MAX__;\n+      f[i] = 4 * i;\n+    }\n+  f3 (c, f, d, 1024);\n+  for (i = 0; i < 1024; i++)\n+    {\n+      asm volatile (\"\" : \"+g\" (i));\n+      if (c[i] != ((i % 3) != 2 ? (1023 - i) * 4: -5))\n+\tabort ();\n+      c[i] = (i % 3) != 0 ? 15 : -5;\n+      e[i] = (i % 3) != 0 ? 1023 - i : __INT_MAX__;\n+      f[i] = 5 * i;\n+    }\n+  f4 (c, f, e, 1024);\n+  for (i = 0; i < 1024; i++)\n+    {\n+      asm volatile (\"\" : \"+g\" (i));\n+      if (c[i] != ((i % 3) != 0 ? (1023 - i) * 5 : -5))\n+\tabort ();\n+    }\n+}"}, {"sha": "738640c2bf5ac227481ba41f89b34327bebca9ce", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr88464-7.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-7.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,45 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512f -mprefer-vector-width=512 -mtune=skylake-avx512 -fdump-tree-vect-details\" } */\n+/* { dg-final { scan-tree-dump-times \"loop vectorized using 64 byte vectors\" 4 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 4 \"vect\" } } */\n+\n+__attribute__((noipa)) void\n+f1 (long long * __restrict__ a, const long long * __restrict__ b, const int * __restrict__ c, int n)\n+{\n+  int i;\n+#pragma GCC ivdep\n+  for (i = 0; i < n; ++i)\n+    if (b[i] > -2)\n+      a[c[i]] = b[i];\n+}\n+\n+__attribute__((noipa)) void\n+f2 (long long * __restrict__ a, const long long * __restrict__ b, const long * __restrict__ c, int n)\n+{\n+  int i;\n+#pragma GCC ivdep\n+  for (i = 0; i < n; ++i)\n+    if (b[i] > -2)\n+      a[c[i]] = b[i];\n+}\n+\n+__attribute__((noipa)) void\n+f3 (int * __restrict__ a, const int * __restrict__ b, const int * __restrict__ c, int n)\n+{\n+  int i;\n+#pragma GCC ivdep\n+  for (i = 0; i < n; ++i)\n+    if (b[i] > -2)\n+      a[c[i]] = b[i];\n+}\n+\n+__attribute__((noipa)) void\n+f4 (int * __restrict__ a, const int * __restrict__ b, const long * __restrict__ c, int n)\n+{\n+  int i;\n+#pragma GCC ivdep\n+  for (i = 0; i < n; ++i)\n+    if (b[i] > -2)\n+      a[c[i]] = b[i];\n+}"}, {"sha": "0e28baf03bee329853cb00ef2b8745e525830b68", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr88464-8.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr88464-8.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,61 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do run { target { avx512f } } } */\n+/* { dg-options \"-O3 -mavx512f -mprefer-vector-width=512 -mtune=skylake-avx512\" } */\n+\n+#include \"avx512f-check.h\"\n+\n+#include \"avx512f-pr88464-7.c\"\n+\n+static void\n+avx512f_test (void)\n+{\n+  long long a[1024], b[1024];\n+  int c[1024], f[1024];\n+  int d[1024];\n+  long e[1024];\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    {\n+      asm volatile (\"\" : \"+g\" (i));\n+      a[i] = -5;\n+      b[i] = (i % 3) != 0 ? 2 * i : -5;\n+      d[i] = (i % 3) != 0 ? 1023 - i : __INT_MAX__;\n+    }\n+  f1 (a, b, d, 1024);\n+  for (i = 0; i < 1024; i++)\n+    {\n+      asm volatile (\"\" : \"+g\" (i));\n+      if (a[i] != ((i % 3) != 0 ? (1023 - i) * 2 : -5))\n+\tabort ();\n+      a[i] = -5;\n+      b[i] = (i % 3) != 1 ? 3 * i : -5;\n+      e[i] = (i % 3) != 1 ? 1023 - i : __LONG_MAX__;\n+    }\n+  f2 (a, b, e, 1024);\n+  for (i = 0; i < 1024; i++)\n+    {\n+      asm volatile (\"\" : \"+g\" (i));\n+      if (a[i] != ((i % 3) != 2 ? (1023 - i) * 3 : -5))\n+\tabort ();\n+      c[i] = -5;\n+      d[i] = (i % 3) != 2 ? 1023 - i : __INT_MAX__;\n+      f[i] = (i % 3) != 2 ? 4 * i : -5;\n+    }\n+  f3 (c, f, d, 1024);\n+  for (i = 0; i < 1024; i++)\n+    {\n+      asm volatile (\"\" : \"+g\" (i));\n+      if (c[i] != ((i % 3) != 1 ? (1023 - i) * 4 : -5))\n+\tabort ();\n+      c[i] = -5;\n+      e[i] = (i % 3) != 0 ? 1023 - i : __INT_MAX__;\n+      f[i] = (i % 3) != 0 ? 5 * i : -5;\n+    }\n+  f4 (c, f, e, 1024);\n+  for (i = 0; i < 1024; i++)\n+    {\n+      asm volatile (\"\" : \"+g\" (i));\n+      if (c[i] != ((i % 3) != 0 ? (1023 - i) * 5 : -5))\n+\tabort ();\n+    }\n+}"}, {"sha": "c5d4e5be123aaf501e2e2d9f30ee33062979de7f", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-10.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-10.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do run { target { avx512vl } } } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=256 -mtune=skylake-avx512\" } */\n+\n+#define AVX512VL\n+#define AVX512F_LEN 512\n+#define AVX512F_LEN_HALF 256\n+\n+#include \"avx512f-pr88464-6.c\"\n+\n+static void\n+test_256 (void)\n+{\n+  avx512f_test ();\n+}\n+\n+static void\n+test_128 (void)\n+{\n+}"}, {"sha": "9696008855da59bcd593555abf7c5603e387019e", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-11.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-11.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,7 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=128 -mtune=skylake-avx512 -fdump-tree-vect-details\" } */\n+/* { dg-final { scan-tree-dump-times \"loop vectorized using 16 byte vectors\" 4 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 4 \"vect\" } } */\n+\n+#include \"avx512f-pr88464-5.c\""}, {"sha": "130eddd8690beb282567a2a062a558f4928b82ec", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-12.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-12.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do run { target { avx512vl } } } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=128 -mtune=skylake-avx512\" } */\n+\n+#define AVX512VL\n+#define AVX512F_LEN 512\n+#define AVX512F_LEN_HALF 256\n+\n+#include \"avx512f-pr88464-6.c\"\n+\n+static void\n+test_256 (void)\n+{\n+  avx512f_test ();\n+}\n+\n+static void\n+test_128 (void)\n+{\n+}"}, {"sha": "50515c4c783ec64bf81c1bb85bedb86728e09e0d", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-13.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-13.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,7 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=256 -mtune=skylake-avx512 -fdump-tree-vect-details\" } */\n+/* { dg-final { scan-tree-dump-times \"loop vectorized using 32 byte vectors\" 4 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 4 \"vect\" } } */\n+\n+#include \"avx512f-pr88464-7.c\""}, {"sha": "1a700247f9b83853c4743dd4636a9a16c5e64851", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-14.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-14.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do run { target { avx512vl } } } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=256 -mtune=skylake-avx512\" } */\n+\n+#define AVX512VL\n+#define AVX512F_LEN 512\n+#define AVX512F_LEN_HALF 256\n+\n+#include \"avx512f-pr88464-8.c\"\n+\n+static void\n+test_256 (void)\n+{\n+  avx512f_test ();\n+}\n+\n+static void\n+test_128 (void)\n+{\n+}"}, {"sha": "914a8c30dc3473237fa490133ee53281ebe3bbe9", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-15.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-15.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,7 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=128 -fno-vect-cost-model -mtune=skylake-avx512 -fdump-tree-vect-details\" } */\n+/* { dg-final { scan-tree-dump-times \"loop vectorized using 16 byte vectors\" 4 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 4 \"vect\" } } */\n+\n+#include \"avx512f-pr88464-7.c\""}, {"sha": "6136fc5b8588530f04dfd5ac789e466b46928640", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-16.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-16.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do run { target { avx512vl } } } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=128 -fno-vect-cost-model -mtune=skylake-avx512\" } */\n+\n+#define AVX512VL\n+#define AVX512F_LEN 512\n+#define AVX512F_LEN_HALF 256\n+\n+#include \"avx512f-pr88464-8.c\"\n+\n+static void\n+test_256 (void)\n+{\n+  avx512f_test ();\n+}\n+\n+static void\n+test_128 (void)\n+{\n+}"}, {"sha": "c7556fee5ae408af5f0261efe41a85bcadfd5702", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-5.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-5.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,7 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=256 -mtune=skylake-avx512 -fdump-tree-vect-details\" } */\n+/* { dg-final { scan-tree-dump-times \"loop vectorized using 32 byte vectors\" 4 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 4 \"vect\" } } */\n+\n+#include \"avx512f-pr88464-3.c\""}, {"sha": "79f9bfe83afcab510c9dd0c8ad2e4b4aa694b7c1", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-6.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-6.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do run { target { avx512vl } } } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=256 -mtune=skylake-avx512\" } */\n+\n+#define AVX512VL\n+#define AVX512F_LEN 512\n+#define AVX512F_LEN_HALF 256\n+\n+#include \"avx512f-pr88464-4.c\"\n+\n+static void\n+test_256 (void)\n+{\n+  avx512f_test ();\n+}\n+\n+static void\n+test_128 (void)\n+{\n+}"}, {"sha": "1fb423eb0f3c64c921395d2f4e0bca4e1effb2fe", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-7.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-7.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,7 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=128 -fno-vect-cost-model -mtune=skylake-avx512 -fdump-tree-vect-details\" } */\n+/* { dg-final { scan-tree-dump-times \"loop vectorized using 16 byte vectors\" 4 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 4 \"vect\" } } */\n+\n+#include \"avx512f-pr88464-3.c\""}, {"sha": "8c670b79b309a22c53c7a91823fddf90c1f588dd", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-8.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-8.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,20 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do run { target { avx512vl } } } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=128 -fno-vect-cost-model -mtune=skylake-avx512\" } */\n+\n+#define AVX512VL\n+#define AVX512F_LEN 512\n+#define AVX512F_LEN_HALF 256\n+\n+#include \"avx512f-pr88464-4.c\"\n+\n+static void\n+test_256 (void)\n+{\n+  avx512f_test ();\n+}\n+\n+static void\n+test_128 (void)\n+{\n+}"}, {"sha": "3af568ab32377e959fb0752691489909d7180b8d", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr88464-9.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5b05a07544bbab9e309a45ebcb350a37b69103/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr88464-9.c?ref=dc5b05a07544bbab9e309a45ebcb350a37b69103", "patch": "@@ -0,0 +1,7 @@\n+/* PR tree-optimization/88464 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx512vl -mprefer-vector-width=256 -mtune=skylake-avx512 -fdump-tree-vect-details\" } */\n+/* { dg-final { scan-tree-dump-times \"loop vectorized using 32 byte vectors\" 4 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 4 \"vect\" } } */\n+\n+#include \"avx512f-pr88464-5.c\""}]}