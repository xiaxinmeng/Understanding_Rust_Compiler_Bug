{"sha": "09e21d09bd4f7673be55fc0f50d6cc676616a9e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDllMjFkMDliZDRmNzY3M2JlNTVmYzBmNTBkNmNjNjc2NjE2YTllNA==", "commit": {"author": {"name": "Roman Zippel", "email": "zippel@linux-m68k.org", "date": "2007-09-18T12:08:00Z"}, "committer": {"name": "Roman Zippel", "email": "zippel@gcc.gnu.org", "date": "2007-09-18T12:08:00Z"}, "message": "m68k.md (beq, [...]): Replace all fbcc with fjcc.\n\n\t* config/m68k/m68k.md (beq, bne, bgt, blt, bge, ble, bordered,\n\tbunordered, buneq, bunge, bungt, bunle, bunlt, bltgt, beq_rev,\n\tbne_rev, bgt_rev, blt_rev, bge_rev, ble_rev, bordered_rev,\n\tbunordered_rev, buneq_rev, bunge_rev, bungt_rev, bunle_rev,\n\tbunlt_rev, bltgt_rev): Replace all fbcc with fjcc.\n\nFrom-SVN: r128575", "tree": {"sha": "8a8c2a3355dc9b635c2965b3c115a9b85d848405", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a8c2a3355dc9b635c2965b3c115a9b85d848405"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09e21d09bd4f7673be55fc0f50d6cc676616a9e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e21d09bd4f7673be55fc0f50d6cc676616a9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09e21d09bd4f7673be55fc0f50d6cc676616a9e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e21d09bd4f7673be55fc0f50d6cc676616a9e4/comments", "author": null, "committer": null, "parents": [{"sha": "8c5c99dc2241ea323cee1b07ec5466387dfb983f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c5c99dc2241ea323cee1b07ec5466387dfb983f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c5c99dc2241ea323cee1b07ec5466387dfb983f"}], "stats": {"total": 112, "additions": 42, "deletions": 70}, "files": [{"sha": "80307a344ac7c1bdf9a1b8ebd101fdbf6dcd9575", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e21d09bd4f7673be55fc0f50d6cc676616a9e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e21d09bd4f7673be55fc0f50d6cc676616a9e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09e21d09bd4f7673be55fc0f50d6cc676616a9e4", "patch": "@@ -1,3 +1,11 @@\n+2007-09-18  Roman Zippel <zippel@linux-m68k.org>\n+\n+\t* config/m68k/m68k.md (beq, bne, bgt, blt, bge, ble, bordered,\n+\tbunordered, buneq, bunge, bungt, bunle, bunlt, bltgt, beq_rev,\n+\tbne_rev, bgt_rev, blt_rev, bge_rev, ble_rev, bordered_rev,\n+\tbunordered_rev, buneq_rev, bunge_rev, bungt_rev, bunle_rev,\n+\tbunlt_rev, bltgt_rev): Replace all fbcc with fjcc.\n+\n 2007-09-18  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* config/m68k/m68k-devices.def (51qe): New device."}, {"sha": "bb0cdd0c1b4b019dc604829a46e6ecac637a160b", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 34, "deletions": 70, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e21d09bd4f7673be55fc0f50d6cc676616a9e4/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e21d09bd4f7673be55fc0f50d6cc676616a9e4/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=09e21d09bd4f7673be55fc0f50d6cc676616a9e4", "patch": "@@ -6484,10 +6484,7 @@\n \t\t      (pc)))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jbeq %l0\", \"fbeq %l0\", \"jbeq %l0\");\n-  else\n-    OUTPUT_JUMP (\"jeq %l0\", \"fjeq %l0\", \"jeq %l0\");\n+  OUTPUT_JUMP (\"jeq %l0\", \"fjeq %l0\", \"jeq %l0\");\n }\n   [(set (attr \"type\") (symbol_ref \"m68k_sched_branch_type (insn)\"))\n    (set_attr \"split\" \"done\")])\n@@ -6500,10 +6497,7 @@\n \t\t      (pc)))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jbne %l0\", \"fbne %l0\", \"jbne %l0\");\n-  else\n-    OUTPUT_JUMP (\"jne %l0\", \"fjne %l0\", \"jne %l0\");\n+  OUTPUT_JUMP (\"jne %l0\", \"fjne %l0\", \"jne %l0\");\n }\n   [(set (attr \"type\") (symbol_ref \"m68k_sched_branch_type (insn)\"))\n    (set_attr \"split\" \"done\")])\n@@ -6516,10 +6510,7 @@\n \t\t      (pc)))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jbgt %l0\", \"fbgt %l0\", 0);\n-  else\n-    OUTPUT_JUMP (\"jgt %l0\", \"fjgt %l0\", 0);\n+  OUTPUT_JUMP (\"jgt %l0\", \"fjgt %l0\", 0);\n }\n   [(set (attr \"type\") (symbol_ref \"m68k_sched_branch_type (insn)\"))\n    (set_attr \"split\" \"done\")])\n@@ -6544,10 +6535,7 @@\n \t\t      (pc)))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jblt %l0\", \"fblt %l0\", \"jbmi %l0\");\n-  else\n-    OUTPUT_JUMP (\"jlt %l0\", \"fjlt %l0\", \"jmi %l0\");\n+  OUTPUT_JUMP (\"jlt %l0\", \"fjlt %l0\", \"jmi %l0\");\n }\n   [(set (attr \"type\") (symbol_ref \"m68k_sched_branch_type (insn)\"))\n    (set_attr \"split\" \"done\")])\n@@ -6572,10 +6560,7 @@\n \t\t      (pc)))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jbge %l0\", \"fbge %l0\", \"jbpl %l0\");\n-  else\n-    OUTPUT_JUMP (\"jge %l0\", \"fjge %l0\", \"jpl %l0\");\n+  OUTPUT_JUMP (\"jge %l0\", \"fjge %l0\", \"jpl %l0\");\n })\n \n (define_insn \"bgeu\"\n@@ -6598,10 +6583,7 @@\n \t\t      (pc)))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jble %l0\", \"fble %l0\", 0);\n-  else\n-    OUTPUT_JUMP (\"jle %l0\", \"fjle %l0\", 0);\n+  OUTPUT_JUMP (\"jle %l0\", \"fjle %l0\", 0);\n }\n   [(set_attr \"type\" \"bcc\")])\n \n@@ -6625,7 +6607,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbor %l0\" : \"fjor %l0\";\n+  return \"fjor %l0\";\n })\n \n (define_insn \"bunordered\"\n@@ -6636,7 +6618,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbun %l0\" : \"fjun %l0\";\n+  return \"fjun %l0\";\n })\n \n (define_insn \"buneq\"\n@@ -6647,7 +6629,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbueq %l0\" : \"fjueq %l0\";\n+  return \"fjueq %l0\";\n })\n \n (define_insn \"bunge\"\n@@ -6658,7 +6640,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbuge %l0\" : \"fjuge %l0\";\n+  return \"fjuge %l0\";\n })\n \n (define_insn \"bungt\"\n@@ -6669,7 +6651,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbugt %l0\" : \"fjugt %l0\";\n+  return \"fjugt %l0\";\n })\n \n (define_insn \"bunle\"\n@@ -6680,7 +6662,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbule %l0\" : \"fjule %l0\";\n+  return \"fjule %l0\";\n })\n \n (define_insn \"bunlt\"\n@@ -6691,7 +6673,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbult %l0\" : \"fjult %l0\";\n+  return \"fjult %l0\";\n })\n \n (define_insn \"bltgt\"\n@@ -6702,53 +6684,44 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbogl %l0\" : \"fjogl %l0\";\n+  return \"fjogl %l0\";\n })\n \f\n ;; Negated conditional jump instructions.\n \n-(define_insn \"*beq2\"\n+(define_insn \"*beq_rev\"\n   [(set (pc)\n \t(if_then_else (eq (cc0)\n \t\t\t  (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jbne %l0\", \"fbne %l0\", \"jbne %l0\");\n-  else\n-    OUTPUT_JUMP (\"jne %l0\", \"fjne %l0\", \"jne %l0\");\n+  OUTPUT_JUMP (\"jne %l0\", \"fjne %l0\", \"jne %l0\");\n }\n   [(set_attr \"type\" \"bcc\")])\n \n-(define_insn \"*bne2\"\n+(define_insn \"*bne_rev\"\n   [(set (pc)\n \t(if_then_else (ne (cc0)\n \t\t\t  (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jbeq %l0\", \"fbeq %l0\", \"jbeq %l0\");\n-  else\n-    OUTPUT_JUMP (\"jeq %l0\", \"fjeq %l0\", \"jeq %l0\");\n+  OUTPUT_JUMP (\"jeq %l0\", \"fjeq %l0\", \"jeq %l0\");\n }\n   [(set_attr \"type\" \"bcc\")])\n \n-(define_insn \"*bgt2\"\n+(define_insn \"*bgt_rev\"\n   [(set (pc)\n \t(if_then_else (gt (cc0)\n \t\t\t  (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jble %l0\", \"fbngt %l0\", 0);\n-  else\n-    OUTPUT_JUMP (\"jle %l0\", \"fjngt %l0\", 0);\n+  OUTPUT_JUMP (\"jle %l0\", \"fjngt %l0\", 0);\n }\n   [(set_attr \"type\" \"bcc\")])\n \n@@ -6764,18 +6737,15 @@\n }\n   [(set_attr \"type\" \"bcc\")])\n \n-(define_insn \"*blt2\"\n+(define_insn \"*blt_rev\"\n   [(set (pc)\n \t(if_then_else (lt (cc0)\n \t\t\t  (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jbge %l0\", \"fbnlt %l0\", \"jbpl %l0\");\n-  else\n-    OUTPUT_JUMP (\"jge %l0\", \"fjnlt %l0\", \"jpl %l0\");\n+  OUTPUT_JUMP (\"jge %l0\", \"fjnlt %l0\", \"jpl %l0\");\n }\n   [(set_attr \"type\" \"bcc\")])\n \n@@ -6791,18 +6761,15 @@\n }\n   [(set_attr \"type\" \"bcc\")])\n \n-(define_insn \"*bge2\"\n+(define_insn \"*bge_rev\"\n   [(set (pc)\n \t(if_then_else (ge (cc0)\n \t\t\t  (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jblt %l0\", \"fbnge %l0\", \"jbmi %l0\");\n-  else\n-    OUTPUT_JUMP (\"jlt %l0\", \"fjnge %l0\", \"jmi %l0\");\n+  OUTPUT_JUMP (\"jlt %l0\", \"fjnge %l0\", \"jmi %l0\");\n }\n   [(set_attr \"type\" \"bcc\")])\n \n@@ -6818,18 +6785,15 @@\n }\n   [(set_attr \"type\" \"bcc\")])\n \n-(define_insn \"*ble2\"\n+(define_insn \"*ble_rev\"\n   [(set (pc)\n \t(if_then_else (le (cc0)\n \t\t\t  (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n {\n-  if (MOTOROLA)\n-    OUTPUT_JUMP (\"jbgt %l0\", \"fbnle %l0\", 0);\n-  else\n-    OUTPUT_JUMP (\"jgt %l0\", \"fjnle %l0\", 0);\n+  OUTPUT_JUMP (\"jgt %l0\", \"fjnle %l0\", 0);\n }\n   [(set_attr \"type\" \"bcc\")])\n \n@@ -6853,7 +6817,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbun %l0\" : \"fjun %l0\";\n+  return \"fjun %l0\";\n })\n \n (define_insn \"*bunordered_rev\"\n@@ -6864,7 +6828,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbor %l0\" : \"fjor %l0\";\n+  return \"fjor %l0\";\n })\n \n (define_insn \"*buneq_rev\"\n@@ -6875,7 +6839,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbogl %l0\" : \"fjogl %l0\";\n+  return \"fjogl %l0\";\n })\n \n (define_insn \"*bunge_rev\"\n@@ -6886,7 +6850,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbolt %l0\" : \"fjolt %l0\";\n+  return \"fjolt %l0\";\n })\n \n (define_insn \"*bungt_rev\"\n@@ -6897,7 +6861,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbole %l0\" : \"fjole %l0\";\n+  return \"fjole %l0\";\n })\n \n (define_insn \"*bunle_rev\"\n@@ -6908,7 +6872,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbogt %l0\" : \"fjogt %l0\";\n+  return \"fjogt %l0\";\n })\n \n (define_insn \"*bunlt_rev\"\n@@ -6919,7 +6883,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fboge %l0\" : \"fjoge %l0\";\n+  return \"fjoge %l0\";\n })\n \n (define_insn \"*bltgt_rev\"\n@@ -6930,7 +6894,7 @@\n   \"TARGET_HARD_FLOAT\"\n {\n   gcc_assert (cc_prev_status.flags & CC_IN_68881);\n-  return MOTOROLA ? \"fbueq %l0\" : \"fjueq %l0\";\n+  return \"fjueq %l0\";\n })\n \f\n ;; Unconditional and other jump instructions"}]}