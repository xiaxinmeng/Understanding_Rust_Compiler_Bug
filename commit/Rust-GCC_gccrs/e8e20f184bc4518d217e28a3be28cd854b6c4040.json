{"sha": "e8e20f184bc4518d217e28a3be28cd854b6c4040", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThlMjBmMTg0YmM0NTE4ZDIxN2UyOGEzYmUyOGNkODU0YjZjNDA0MA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-05-08T23:30:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-05-08T23:30:40Z"}, "message": "ia64.md (extendsfdf2): Split the nop case out of existance.\n\n        * config/ia64/ia64.md (extendsfdf2): Split the nop case out\n        of existance.\n\nFrom-SVN: r33779", "tree": {"sha": "e1c73e0b6a6cab45bebf4999772125b8bf256bff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1c73e0b6a6cab45bebf4999772125b8bf256bff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8e20f184bc4518d217e28a3be28cd854b6c4040", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e20f184bc4518d217e28a3be28cd854b6c4040", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8e20f184bc4518d217e28a3be28cd854b6c4040", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e20f184bc4518d217e28a3be28cd854b6c4040/comments", "author": null, "committer": null, "parents": [{"sha": "111afdb380be06688d0db2554ffa08a18cb3f945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/111afdb380be06688d0db2554ffa08a18cb3f945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/111afdb380be06688d0db2554ffa08a18cb3f945"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "20873e6878f1c9a9576d1791ee3d95b1d281f537", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e20f184bc4518d217e28a3be28cd854b6c4040/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e20f184bc4518d217e28a3be28cd854b6c4040/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8e20f184bc4518d217e28a3be28cd854b6c4040", "patch": "@@ -1,8 +1,15 @@\n+2000-05-08  Richard Henderson  <rth@cygnus.com>\n+\n+\t* config/ia64/ia64.h (predicate_operator): Declare.\n+\n+\t* config/ia64/ia64.md (extendsfdf2): Split the nop case out\n+\tof existance.\n+\n Mon  8 May 22:17:35 2000  Neil Booth  <NeilB@earthling.net>\n \n \t* cpplex.c (spell_token): New function.\n-\t  (TOKEN_LEN): Add 1 for whitespace.\n-\t  (_cpp_lex_file): Update to use spell_token.\n+\t(TOKEN_LEN): Add 1 for whitespace.\n+\t(_cpp_lex_file): Update to use spell_token.\n \t* cpplib.h (E): Remove.\n \t(TTYPE_TABLE): Update CPP_VSPACE entry.\n "}, {"sha": "a83fb3444e82eacd9efde1061e91d97fff1998f6", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e20f184bc4518d217e28a3be28cd854b6c4040/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e20f184bc4518d217e28a3be28cd854b6c4040/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=e8e20f184bc4518d217e28a3be28cd854b6c4040", "patch": "@@ -520,16 +520,20 @@\n \n ;; Convert between floating point types of different sizes.\n \n-;; ??? Optimization opportunity here.\n+;; ??? Optimization opportunity here.  Get rid of the insn altogether\n+;; when we can.  Should probably use a scheme like has been proposed\n+;; for ia32 in dealing with operands that match unary operators.  This\n+;; would let combine merge the thing into adjacent insns.\n \n-(define_insn \"extendsfdf2\"\n+(define_insn_and_split \"extendsfdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(float_extend:DF (match_operand:SF 1 \"register_operand\" \"0,f\")))]\n   \"\"\n-  \"@\n-   nop 0\n-   mov %0 = %1\"\n-  [(set_attr \"type\" \"unknown,F\")])\n+  \"mov %0 = %1\"\n+  \"\"\n+  [(set (match_dup 0) (float_extend:DF (match_dup 1)))]\n+  \"if (true_regnum (operands[0]) == true_regnum (operands[1])) DONE;\"\n+  [(set_attr \"type\" \"F\")])\n \n (define_insn \"truncdfsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")"}]}