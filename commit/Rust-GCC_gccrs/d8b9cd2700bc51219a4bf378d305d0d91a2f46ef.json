{"sha": "d8b9cd2700bc51219a4bf378d305d0d91a2f46ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhiOWNkMjcwMGJjNTEyMTlhNGJmMzc4ZDMwNWQwZDkxYTJmNDZlZg==", "commit": {"author": {"name": "Tony Reix", "email": "tony.reix@atos.net", "date": "2017-06-07T12:35:19Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2017-06-07T12:35:19Z"}, "message": "aix-unwind.h (MD_FALLBACK_FRAME_STATE_FOR): Define unconditionally.\n\n2017-06-07  Tony Reix  <tony.reix@atos.net>\n            Matthieu Sarter  <matthieu.sarter.external@atos.net>\n            David Edelsohn  <dje.gcc@gmail.com>\n\n        * config/rs6000/aix-unwind.h (MD_FALLBACK_FRAME_STATE_FOR): Define\n        unconditionally.\n        (ucontext_for): Add 64-bit AIX 6.1, 7.1, 7.2 support.  Add 32-bit\n        AIX 7.2 support.\n\nCo-Authored-By: David Edelsohn <dje.gcc@gmail.com>\nCo-Authored-By: Matthieu Sarter <matthieu.sarter.external@atos.net>\n\nFrom-SVN: r248968", "tree": {"sha": "174e86acfb61ce4b3d12db3486571ab1cda2803d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/174e86acfb61ce4b3d12db3486571ab1cda2803d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8b9cd2700bc51219a4bf378d305d0d91a2f46ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b9cd2700bc51219a4bf378d305d0d91a2f46ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8b9cd2700bc51219a4bf378d305d0d91a2f46ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8b9cd2700bc51219a4bf378d305d0d91a2f46ef/comments", "author": {"login": "trex58", "id": 5690106, "node_id": "MDQ6VXNlcjU2OTAxMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5690106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trex58", "html_url": "https://github.com/trex58", "followers_url": "https://api.github.com/users/trex58/followers", "following_url": "https://api.github.com/users/trex58/following{/other_user}", "gists_url": "https://api.github.com/users/trex58/gists{/gist_id}", "starred_url": "https://api.github.com/users/trex58/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trex58/subscriptions", "organizations_url": "https://api.github.com/users/trex58/orgs", "repos_url": "https://api.github.com/users/trex58/repos", "events_url": "https://api.github.com/users/trex58/events{/privacy}", "received_events_url": "https://api.github.com/users/trex58/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d82c56288f1d7048a39427a827fe337c773f0f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d82c56288f1d7048a39427a827fe337c773f0f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d82c56288f1d7048a39427a827fe337c773f0f5"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "8560804ed3779157688890d9b804e7b7f839687f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b9cd2700bc51219a4bf378d305d0d91a2f46ef/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b9cd2700bc51219a4bf378d305d0d91a2f46ef/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=d8b9cd2700bc51219a4bf378d305d0d91a2f46ef", "patch": "@@ -1,3 +1,12 @@\n+2017-06-07  Tony Reix  <tony.reix@atos.net>\n+\t    Matthieu Sarter  <matthieu.sarter.external@atos.net>\n+\t    David Edelsohn  <dje.gcc@gmail.com>\n+\n+        * config/rs6000/aix-unwind.h (MD_FALLBACK_FRAME_STATE_FOR): Define\n+        unconditionally.\n+        (ucontext_for): Add 64-bit AIX 6.1, 7.1, 7.2 support.  Add 32-bit\n+        AIX 7.2 support.\n+\n 2017-06-02  Olivier Hainque  <hainque@adacore.com>\n \n \t* config/vxlib.c (__gthread_once): Add missing value to"}, {"sha": "2d8cdae1e5011de24f6c00c93b143ce360de18a4", "filename": "libgcc/config/rs6000/aix-unwind.h", "status": "modified", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8b9cd2700bc51219a4bf378d305d0d91a2f46ef/libgcc%2Fconfig%2Frs6000%2Faix-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8b9cd2700bc51219a4bf378d305d0d91a2f46ef/libgcc%2Fconfig%2Frs6000%2Faix-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Faix-unwind.h?ref=d8b9cd2700bc51219a4bf378d305d0d91a2f46ef", "patch": "@@ -64,7 +64,8 @@\n #endif\n \n /* Now on to MD_FALLBACK_FRAME_STATE_FOR.\n-   32bit AIX 5.2, 5.3 and 7.1 only at this stage.  */\n+   32bit AIX 5.2, 5.3, 6.1, 7.X and\n+   64bit AIX 6.1, 7.X only at this stage.  */\n \n #include <stdlib.h>\n #include <stddef.h>\n@@ -73,18 +74,16 @@\n \n #ifdef __64BIT__\n \n-/* 64bit fallback not implemented yet, so MD_FALLBACK_FRAME_STATE_FOR not\n-   defined.  Arrange just for the code below to compile.  */\n typedef struct __context64 mstate_t;\n \n #else\n \n typedef struct mstsave mstate_t;\n \n-#define MD_FALLBACK_FRAME_STATE_FOR ppc_aix_fallback_frame_state\n-\n #endif\n \n+#define MD_FALLBACK_FRAME_STATE_FOR ppc_aix_fallback_frame_state\n+\n /* If we are compiling on AIX < 5.3, the VMX related datastructs are not\n    defined and we take measures to obtain proper runtime behavior if the\n    compiled code happens to run on a later version with VMX enabled.  */\n@@ -128,10 +127,26 @@ ucontext_for (struct _Unwind_Context *context)\n {\n   const unsigned int * ra = context->ra;\n \n-  /* AIX 5.2, 5.3 and 7.1, threaded or not, share common patterns\n+  /* AIX 5.2, 5.3, 6.1 and 7.X, threaded or not, share common patterns\n      and feature variants depending on the configured kernel (unix_mp\n      or unix_64).  */\n \n+#ifdef __64BIT__\n+  if (*(ra - 5) == 0x4c00012c     /* isync             */\n+      && *(ra - 4) == 0xe8ec0000  /* ld      r7,0(r12) */\n+      && *(ra - 3) == 0xe84c0008  /* ld      r2,8(r12) */\n+      && *(ra - 2) == 0x7ce903a6  /* mtctr   r7        */\n+      && *(ra - 1) == 0x4e800421  /* bctrl             */\n+      && *(ra - 0) == 0x7de27b78) /* mr      r2,r15   <-- context->ra */\n+    {\n+      /* unix_64 */\n+      if (*(ra - 6) == 0x7d000164)  /* mtmsrd  r8 */\n+        {\n+          /* AIX 6.1, 7.1 and 7.2 */\n+          return (ucontext_t *)(context->cfa + 0x70);\n+        }\n+    }\n+#else\n   if (*(ra - 5) == 0x4c00012c     /* isync             */\n       && *(ra - 4) == 0x80ec0000  /* lwz     r7,0(r12) */\n       && *(ra - 3) == 0x804c0004  /* lwz     r2,4(r12) */\n@@ -152,10 +167,14 @@ ucontext_for (struct _Unwind_Context *context)\n \t    case 0x835a0570:  /* lwz r26,1392(r26) */\n \t      return (ucontext_t *)(context->cfa + 0x40);\n \n-\t      /* AIX 7.1 */\n+\t      /* AIX 6.1 and 7.1 */\n \t    case 0x2c1a0000:  /* cmpwi   r26,0 */\n \t      return (ucontext_t *)(context->cfa + 0x40);\n-\t\t\n+\n+\t      /* AIX 7.2 */\n+\t    case 0x3800000a:  /* li   r0,A */\n+\t      return (ucontext_t *)(context->cfa + 0x40);\n+\n \t    default:\n \t      return 0;\n \t    }\n@@ -174,7 +193,7 @@ ucontext_for (struct _Unwind_Context *context)\n \t  return &frame->ucontext;\n \t}\n     }\n-\n+#endif\n   return 0;\n }\n "}]}