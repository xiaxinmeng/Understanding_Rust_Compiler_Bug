{"sha": "b437f1a754649a06bd783fc707b5bff14c9c5eed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQzN2YxYTc1NDY0OWEwNmJkNzgzZmM3MDdiNWJmZjE0YzljNWVlZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-09-15T02:56:02Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-09-15T02:56:02Z"}, "message": "calls.c (precompute_register_parameters): Use COSTS_N_INSNS, not 2.\n\n        * calls.c (precompute_register_parameters): Use COSTS_N_INSNS, not 2.\n        * cse.c (rtx_cost): Likewise.\n        * optabls.c (expand_binop): Likewise.\n        (expand_twoval_binop, prepare_cmp_insn): Likewise.\n        * regclass.c (copy_cost): Likewise.\n        * reload1.c (reload_cse_move2add): Likewise.\n\nFrom-SVN: r36423", "tree": {"sha": "c872b3e523121e9f2a44aa161148aa4ae170889e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c872b3e523121e9f2a44aa161148aa4ae170889e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b437f1a754649a06bd783fc707b5bff14c9c5eed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b437f1a754649a06bd783fc707b5bff14c9c5eed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b437f1a754649a06bd783fc707b5bff14c9c5eed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b437f1a754649a06bd783fc707b5bff14c9c5eed/comments", "author": null, "committer": null, "parents": [{"sha": "d9dbd9b14c46ec13e078e8bdbea29c860d495f1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9dbd9b14c46ec13e078e8bdbea29c860d495f1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9dbd9b14c46ec13e078e8bdbea29c860d495f1e"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "8e6a9d8d016a40e67a4bd44ceeca59aba2085080", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b437f1a754649a06bd783fc707b5bff14c9c5eed", "patch": "@@ -1,3 +1,12 @@\n+2000-09-14  Richard Henderson  <rth@cygnus.com>\n+\n+\t* calls.c (precompute_register_parameters): Use COSTS_N_INSNS, not 2.\n+\t* cse.c (rtx_cost): Likewise.\n+\t* optabls.c (expand_binop): Likewise.\n+\t(expand_twoval_binop, prepare_cmp_insn): Likewise.\n+\t* regclass.c (copy_cost): Likewise.\n+\t* reload1.c (reload_cse_move2add): Likewise.\n+\n 2000-09-14  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-parse.in (reswords): Add _Complex."}, {"sha": "45a7749d71fcf563c72e2552486a6eeda11fcdb6", "filename": "gcc/calls.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=b437f1a754649a06bd783fc707b5bff14c9c5eed", "patch": "@@ -864,7 +864,7 @@ precompute_register_parameters (num_actuals, args, reg_parm_seen)\n \t\t|| (GET_CODE (args[i].value) == SUBREG\n \t\t    && GET_CODE (SUBREG_REG (args[i].value)) == REG)))\n \t    && args[i].mode != BLKmode\n-\t    && rtx_cost (args[i].value, SET) > 2\n+\t    && rtx_cost (args[i].value, SET) > COSTS_N_INSNS (1)\n \t    && ((SMALL_REGISTER_CLASSES && *reg_parm_seen)\n \t\t|| preserve_subexpressions_p ()))\n \t  args[i].value = copy_to_mode_reg (args[i].mode, args[i].value);"}, {"sha": "3f6f3546420f89066c46408e39392341e33f6096", "filename": "gcc/cse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=b437f1a754649a06bd783fc707b5bff14c9c5eed", "patch": "@@ -860,7 +860,7 @@ rtx_cost (x, outer_code)\n       total = 0;\n       break;\n     default:\n-      total = 2;\n+      total = COSTS_N_INSNS (1);\n     }\n \n   switch (code)"}, {"sha": "f35300b04b471821afa76037b36f94335de697cf", "filename": "gcc/optabs.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=b437f1a754649a06bd783fc707b5bff14c9c5eed", "patch": "@@ -635,11 +635,11 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n   /* If we are inside an appropriately-short loop and one operand is an\n      expensive constant, force it into a register.  */\n   if (CONSTANT_P (op0) && preserve_subexpressions_p ()\n-      && rtx_cost (op0, binoptab->code) > 2)\n+      && rtx_cost (op0, binoptab->code) > COSTS_N_INSNS (1))\n     op0 = force_reg (mode, op0);\n \n   if (CONSTANT_P (op1) && preserve_subexpressions_p ()\n-      && ! shift_op && rtx_cost (op1, binoptab->code) > 2)\n+      && ! shift_op && rtx_cost (op1, binoptab->code) > COSTS_N_INSNS (1))\n     op1 = force_reg (mode, op1);\n \n   /* Record where to delete back to if we backtrack.  */\n@@ -1876,11 +1876,11 @@ expand_twoval_binop (binoptab, op0, op1, targ0, targ1, unsignedp)\n   /* If we are inside an appropriately-short loop and one operand is an\n      expensive constant, force it into a register.  */\n   if (CONSTANT_P (op0) && preserve_subexpressions_p ()\n-      && rtx_cost (op0, binoptab->code) > 2)\n+      && rtx_cost (op0, binoptab->code) > COSTS_N_INSNS (1))\n     op0 = force_reg (mode, op0);\n \n   if (CONSTANT_P (op1) && preserve_subexpressions_p ()\n-      && rtx_cost (op1, binoptab->code) > 2)\n+      && rtx_cost (op1, binoptab->code) > COSTS_N_INSNS (1))\n     op1 = force_reg (mode, op1);\n \n   if (targ0)\n@@ -2956,11 +2956,11 @@ prepare_cmp_insn (px, py, pcomparison, size, pmode, punsignedp, align,\n   /* If we are inside an appropriately-short loop and one operand is an\n      expensive constant, force it into a register.  */\n   if (CONSTANT_P (x) && preserve_subexpressions_p ()\n-      && rtx_cost (x, COMPARE) > 2)\n+      && rtx_cost (x, COMPARE) > COSTS_N_INSNS (1))\n     x = force_reg (mode, x);\n \n   if (CONSTANT_P (y) && preserve_subexpressions_p ()\n-      && rtx_cost (y, COMPARE) > 2)\n+      && rtx_cost (y, COMPARE) > COSTS_N_INSNS (1))\n     y = force_reg (mode, y);\n \n #ifdef HAVE_cc0"}, {"sha": "537a34ec5cf23ca297df94d220ca0cbd3da59c8c", "filename": "gcc/regclass.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=b437f1a754649a06bd783fc707b5bff14c9c5eed", "patch": "@@ -1813,7 +1813,7 @@ copy_cost (x, mode, class, to_p)\n \n   else\n     /* If this is a constant, we may eventually want to call rtx_cost here.  */\n-    return 2;\n+    return COSTS_N_INSNS (1);\n }\n \f\n /* Record the pseudo registers we must reload into hard registers"}, {"sha": "3305f9f9109f4eac713bdea69c95eb422a824f04", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b437f1a754649a06bd783fc707b5bff14c9c5eed/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=b437f1a754649a06bd783fc707b5bff14c9c5eed", "patch": "@@ -8941,7 +8941,7 @@ reload_cse_move2add (first)\n \t\t\tsuccess\n \t\t\t  = validate_change (next, &SET_SRC (set), reg, 0);\n \t\t      else if ((rtx_cost (new_src, PLUS)\n-\t\t\t\t< 2 + rtx_cost (src3, SET))\n+\t\t\t\t< COSTS_N_INSNS (1) + rtx_cost (src3, SET))\n \t\t\t       && have_add2_insn (GET_MODE (reg)))\n \t\t\tsuccess\n \t\t\t  = validate_change (next, &PATTERN (next),"}]}