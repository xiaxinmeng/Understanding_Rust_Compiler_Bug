{"sha": "c5d9672394dcf9cb8314d1c1fa85dba05c9c1128", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVkOTY3MjM5NGRjZjljYjgzMTRkMWMxZmE4NWRiYTA1YzljMTEyOA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2009-04-29T12:44:00Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2009-04-29T12:44:00Z"}, "message": "bfin.c (bfin_register_move_cost): Test for subsets of DREGS rather than comparing directly.\n\n\t* config/bfin/bfin.c (bfin_register_move_cost): Test for subsets of\n\tDREGS rather than comparing directly.  Remove code that tries to\n\taccount for latencies.\n\nFrom-SVN: r146956", "tree": {"sha": "7be99fab29deb7b16876cc0a6e4cec45bdb3a80c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7be99fab29deb7b16876cc0a6e4cec45bdb3a80c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5d9672394dcf9cb8314d1c1fa85dba05c9c1128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5d9672394dcf9cb8314d1c1fa85dba05c9c1128", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5d9672394dcf9cb8314d1c1fa85dba05c9c1128", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5d9672394dcf9cb8314d1c1fa85dba05c9c1128/comments", "author": null, "committer": null, "parents": [{"sha": "bd0a4cabe3f07ec4751ac3cecd4e35bfa2ca0906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd0a4cabe3f07ec4751ac3cecd4e35bfa2ca0906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd0a4cabe3f07ec4751ac3cecd4e35bfa2ca0906"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "883f1b84f6f297a8659efc3747a114938fe91780", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5d9672394dcf9cb8314d1c1fa85dba05c9c1128/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5d9672394dcf9cb8314d1c1fa85dba05c9c1128/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5d9672394dcf9cb8314d1c1fa85dba05c9c1128", "patch": "@@ -5,6 +5,10 @@\n \tRemove special case testing for last insn of inner loops. Don't fail if\n \tthe loop ends with a jump, emit an extra nop instead.\n \n+\t* config/bfin/bfin.c (bfin_register_move_cost): Test for subsets of\n+\tDREGS rather than comparing directly.  Remove code that tries to\n+\taccount for latencies.\n+\n 2009-04-29  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/39941"}, {"sha": "6a77c57b092e6b6a0de2a050b7246fb37c3746b7", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5d9672394dcf9cb8314d1c1fa85dba05c9c1128/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5d9672394dcf9cb8314d1c1fa85dba05c9c1128/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=c5d9672394dcf9cb8314d1c1fa85dba05c9c1128", "patch": "@@ -2331,20 +2331,14 @@ bfin_register_move_cost (enum machine_mode mode,\n \t\t\t enum reg_class class1, enum reg_class class2)\n {\n   /* These need secondary reloads, so they're more expensive.  */\n-  if ((class1 == CCREGS && class2 != DREGS)\n-      || (class1 != DREGS && class2 == CCREGS))\n+  if ((class1 == CCREGS && !reg_class_subset_p (class2, DREGS))\n+      || (class2 == CCREGS && !reg_class_subset_p (class1, DREGS)))\n     return 4;\n \n   /* If optimizing for size, always prefer reg-reg over reg-memory moves.  */\n   if (optimize_size)\n     return 2;\n \n-  /* There are some stalls involved when moving from a DREG to a different\n-     class reg, and using the value in one of the following instructions.\n-     Attempt to model this by slightly discouraging such moves.  */\n-  if (class1 == DREGS && class2 != DREGS)\n-    return 2 * 2;\n-\n   if (GET_MODE_CLASS (mode) == MODE_INT)\n     {\n       /* Discourage trying to use the accumulators.  */"}]}