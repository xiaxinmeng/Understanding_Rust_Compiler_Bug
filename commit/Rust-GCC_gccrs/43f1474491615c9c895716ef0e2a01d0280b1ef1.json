{"sha": "43f1474491615c9c895716ef0e2a01d0280b1ef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNmMTQ3NDQ5MTYxNWM5Yzg5NTcxNmVmMGUyYTAxZDAyODBiMWVmMQ==", "commit": {"author": {"name": "Pawel Sikora", "email": "pluto@pld-linux.org", "date": "2007-08-20T15:08:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2007-08-20T15:08:24Z"}, "message": "re PR c++/7302 (-Wnon-virtual-dtor should't complain of protected dtor)\n\n        PR c++/7302\n        * cp/class.c (finish_struct_1): Warn when a class has virtual\n        functions and accessible non-virtual destructor.\n\n        * doc/invoke.texi (-Wnon-virtual-dtor): Update documentation.\n\n        * g++.dg/warn/Wnvdtor-2.C: New testcase.\n\nFrom-SVN: r127649", "tree": {"sha": "89dd492f0749e3baf99fc3690e6259c93197aed0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89dd492f0749e3baf99fc3690e6259c93197aed0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43f1474491615c9c895716ef0e2a01d0280b1ef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f1474491615c9c895716ef0e2a01d0280b1ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43f1474491615c9c895716ef0e2a01d0280b1ef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43f1474491615c9c895716ef0e2a01d0280b1ef1/comments", "author": null, "committer": null, "parents": [{"sha": "01a2a2f512b20d95ac7cc229662787fa0babfdf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01a2a2f512b20d95ac7cc229662787fa0babfdf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01a2a2f512b20d95ac7cc229662787fa0babfdf0"}], "stats": {"total": 91, "additions": 81, "deletions": 10}, "files": [{"sha": "8b582c68114488d59039642eba060536a51e35d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43f1474491615c9c895716ef0e2a01d0280b1ef1", "patch": "@@ -1,3 +1,7 @@\n+2007-08-20  Pawel Sikora  <pluto@pld-linux.org>\n+\n+        * doc/invoke.texi (-Wnon-virtual-dtor): Update documentation.\n+\n 2007-08-20  David Edelsohn  <edelsohn@gnu.org>\n \n \t* dwarf2out.c (text_section_used): Move declaration outside ifdef"}, {"sha": "f6ddb5e3a320fd55e4983257ddc2edd343f0c88d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=43f1474491615c9c895716ef0e2a01d0280b1ef1", "patch": "@@ -1,3 +1,9 @@\n+2007-08-20  Pawel Sikora  <pluto@pld-linux.org>\n+\n+\tPR c++/7302\n+\t* class.c (finish_struct_1): Warn when a class has virtual\n+\tfunctions and accessible non-virtual destructor.\n+\n 2007-08-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR c++/22369"}, {"sha": "07dc954514123b53294e129c527c72a860aebdde", "filename": "gcc/cp/class.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=43f1474491615c9c895716ef0e2a01d0280b1ef1", "patch": "@@ -5120,17 +5120,19 @@ finish_struct_1 (tree t)\n       tree dtor;\n \n       dtor = CLASSTYPE_DESTRUCTORS (t);\n-      /* Warn only if the dtor is non-private or the class has\n-\t friends.  */\n       if (/* An implicitly declared destructor is always public.  And,\n \t     if it were virtual, we would have created it by now.  */\n \t  !dtor\n \t  || (!DECL_VINDEX (dtor)\n-\t      && (!TREE_PRIVATE (dtor)\n-\t\t  || CLASSTYPE_FRIEND_CLASSES (t)\n-\t\t  || DECL_FRIENDLIST (TYPE_MAIN_DECL (t)))))\n-\twarning (0, \"%q#T has virtual functions but non-virtual destructor\",\n-\t\t t);\n+\t      && (/* public non-virtual */\n+\t\t  (!TREE_PRIVATE (dtor) && !TREE_PROTECTED (dtor))\n+\t\t   || (/* non-public non-virtual with friends */\n+\t\t       (TREE_PRIVATE (dtor) || TREE_PROTECTED (dtor))\n+\t\t\t&& (CLASSTYPE_FRIEND_CLASSES (t)\n+\t\t\t|| DECL_FRIENDLIST (TYPE_MAIN_DECL (t)))))))\n+\twarning (OPT_Wnon_virtual_dtor,\n+\t\t \"%q#T has virtual functions and accessible\"\n+\t\t \" non-virtual destructor\", t);\n     }\n \n   complete_vars (t);"}, {"sha": "73d4966d9d5aee7e9fbd15b21c8a5d91103cdf21", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=43f1474491615c9c895716ef0e2a01d0280b1ef1", "patch": "@@ -2011,9 +2011,10 @@ public static member functions.\n \n @item -Wnon-virtual-dtor @r{(C++ only)}\n @opindex Wnon-virtual-dtor\n-Warn when a class appears to be polymorphic, thereby requiring a virtual\n-destructor, yet it declares a non-virtual one.  This warning is also\n-enabled if -Weffc++ is specified.\n+Warn when a class has virtual functions and accessible non-virtual\n+destructor, in which case it would be possible but unsafe to delete\n+an instance of a derived class through a pointer to the base class.\n+This warning is also enabled if -Weffc++ is specified.\n \n @item -Wreorder @r{(C++ only)}\n @opindex Wreorder"}, {"sha": "c94e48ba28318fbdd3be73bf4e4f41d19b4e178f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43f1474491615c9c895716ef0e2a01d0280b1ef1", "patch": "@@ -1,3 +1,7 @@\n+2007-03-20  Pawel Sikora  <pluto@pld-linux.org>\n+\n+        * g++.dg/warn/Wnvdtor-2.C: New testcase.\n+\n 2007-08-20  Dorit Nuzman  <dorit@il.ibm.com>\n \n \t* gcc.dg/vect/costmodel/ppc/costmodel-vect-outer-fir.c: Add missing }."}, {"sha": "cd078ac052138863f93131e9f3e8cea5883a1f8d", "filename": "gcc/testsuite/g++.dg/warn/Wnvdtor-2.C", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnvdtor-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43f1474491615c9c895716ef0e2a01d0280b1ef1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnvdtor-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnvdtor-2.C?ref=43f1474491615c9c895716ef0e2a01d0280b1ef1", "patch": "@@ -0,0 +1,54 @@\n+// PR c++/7302\n+// { dg-do compile }\n+// { dg-options \"-Wnon-virtual-dtor\" }\n+\n+// Warn when a class has virtual functions and accessible non-virtual\n+// destructor, in which case it would be possible but unsafe to delete\n+// an instance of a derived class through a pointer to the base class.\n+\n+struct A\n+{ // { dg-bogus \"non-virtual destructor\" }\n+protected:\n+  ~A();\n+public:\n+  virtual void f() = 0;\n+};\n+\n+struct B\n+{ // { dg-bogus \"non-virtual destructor\" }\n+private:\n+  ~B();\n+public:\n+  virtual void f() = 0;\n+};\n+\n+struct C\n+{ // { dg-warning \"non-virtual destructor\" }\n+  virtual void f() = 0;\n+};\n+\n+struct D\n+{ // { dg-warning \"non-virtual destructor\" }\n+  ~D();\n+  virtual void f() = 0;\n+};\n+\n+struct E;\n+\n+struct F\n+{ // { dg-warning \"non-virtual destructor\" }\n+protected:\n+  friend class E;\n+  ~F();\n+public:\n+  virtual void f() = 0;\n+};\n+\n+struct G\n+{ // { dg-warning \"non-virtual destructor\" }\n+private:\n+  friend class E;\n+  ~G();\n+public:\n+  virtual void f() = 0;\n+};"}]}