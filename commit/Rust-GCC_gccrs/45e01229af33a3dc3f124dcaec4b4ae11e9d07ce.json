{"sha": "45e01229af33a3dc3f124dcaec4b4ae11e9d07ce", "node_id": "C_kwDOANBUbNoAKDQ1ZTAxMjI5YWYzM2EzZGMzZjEyNGRjYWVjNGI0YWUxMWU5ZDA3Y2U", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2023-02-06T12:47:28Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2023-02-06T17:14:06Z"}, "message": "amdgcn: Pass -mstack-size through to runtime\n\nBut only for the offload case.\n\ngcc/ChangeLog:\n\n\t* config/gcn/mkoffload.cc (gcn_stack_size): New global variable.\n\t(process_asm): Create a constructor for GCN_STACK_SIZE.\n\t(main): Parse the -mstack-size option.", "tree": {"sha": "45f9c11dc58fb4fbd25f61693629359e8b9e3e5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45f9c11dc58fb4fbd25f61693629359e8b9e3e5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45e01229af33a3dc3f124dcaec4b4ae11e9d07ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45e01229af33a3dc3f124dcaec4b4ae11e9d07ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45e01229af33a3dc3f124dcaec4b4ae11e9d07ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45e01229af33a3dc3f124dcaec4b4ae11e9d07ce/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7433747543195a4b936892d066b10026509512b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7433747543195a4b936892d066b10026509512b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7433747543195a4b936892d066b10026509512b7"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "9493f89fec3d2491abc3e62f50c4cb62d5a7df1f", "filename": "gcc/config/gcn/mkoffload.cc", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45e01229af33a3dc3f124dcaec4b4ae11e9d07ce/gcc%2Fconfig%2Fgcn%2Fmkoffload.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45e01229af33a3dc3f124dcaec4b4ae11e9d07ce/gcc%2Fconfig%2Fgcn%2Fmkoffload.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fmkoffload.cc?ref=45e01229af33a3dc3f124dcaec4b4ae11e9d07ce", "patch": "@@ -117,6 +117,8 @@ uint32_t elf_arch = EF_AMDGPU_MACH_AMDGCN_GFX803;  // Default GPU architecture.\n uint32_t elf_flags =\n     (EF_AMDGPU_FEATURE_XNACK_ANY_V4 | EF_AMDGPU_FEATURE_SRAMECC_ANY_V4);\n \n+static int gcn_stack_size = 0;  /* Zero means use default.  */\n+\n /* Delete tempfiles.  */\n \n void\n@@ -662,6 +664,18 @@ process_asm (FILE *in, FILE *out, FILE *cfile)\n     }\n   fprintf (cfile, \"\\n};\\n\\n\");\n \n+  /* Set the stack size if the user configured a value.  */\n+  if (gcn_stack_size)\n+    fprintf (cfile,\n+\t     \"static __attribute__((constructor))\\n\"\n+\t     \"void configure_stack_size (void)\\n\"\n+\t     \"{\\n\"\n+\t     \"  const char *val = getenv (\\\"GCN_STACK_SIZE\\\");\\n\"\n+\t     \"  if (!val || val[0] == '\\\\0')\\n\"\n+\t     \"    setenv (\\\"GCN_STACK_SIZE\\\", \\\"%d\\\", true);\\n\"\n+\t     \"}\\n\\n\",\n+\t     gcn_stack_size);\n+\n   obstack_free (&fns_os, NULL);\n   for (i = 0; i < dims_count; i++)\n     free (dims[i].name);\n@@ -920,6 +934,10 @@ main (int argc, char **argv)\n \telf_arch = EF_AMDGPU_MACH_AMDGCN_GFX908;\n       else if (strcmp (argv[i], \"-march=gfx90a\") == 0)\n \telf_arch = EF_AMDGPU_MACH_AMDGCN_GFX90a;\n+#define STR \"-mstack-size=\"\n+      else if (startswith (argv[i], STR))\n+\tgcn_stack_size = atoi (argv[i] + strlen (STR));\n+#undef STR\n     }\n \n   if (!(fopenacc ^ fopenmp))"}]}