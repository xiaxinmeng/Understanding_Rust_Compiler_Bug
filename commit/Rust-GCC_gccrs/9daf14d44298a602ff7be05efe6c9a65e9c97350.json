{"sha": "9daf14d44298a602ff7be05efe6c9a65e9c97350", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRhZjE0ZDQ0Mjk4YTYwMmZmN2JlMDVlZmU2YzlhNjVlOWM5NzM1MA==", "commit": {"author": {"name": "Andreas Arnez", "email": "arnez@linux.vnet.ibm.com", "date": "2015-11-26T17:52:01Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2015-11-26T17:52:01Z"}, "message": "cp-gimplify.c (genericize_cp_loop): Change LOOP_EXPR's location to start of loop body instead of start of loop.\n\ngcc/cp/ChangeLog:\n\n2015-11-26  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n\n\t* cp-gimplify.c (genericize_cp_loop): Change LOOP_EXPR's location\n\tto start of loop body instead of start of loop.\n\ngcc/testsuite/ChangeLog:\n\n2015-11-26  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n\n\t* g++.dg/guality/pr67192.C: New test.\n\nFrom-SVN: r230979", "tree": {"sha": "5eae90745f9615cff7702a18c61fa8b4addce20c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eae90745f9615cff7702a18c61fa8b4addce20c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9daf14d44298a602ff7be05efe6c9a65e9c97350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9daf14d44298a602ff7be05efe6c9a65e9c97350", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9daf14d44298a602ff7be05efe6c9a65e9c97350", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9daf14d44298a602ff7be05efe6c9a65e9c97350/comments", "author": null, "committer": null, "parents": [{"sha": "8b95719a65ecb381c194b06700c87d2a015f6fab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b95719a65ecb381c194b06700c87d2a015f6fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b95719a65ecb381c194b06700c87d2a015f6fab"}], "stats": {"total": 95, "additions": 94, "deletions": 1}, "files": [{"sha": "1d6e252ebb10ede94391c244e23c4b554bb29d1c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9daf14d44298a602ff7be05efe6c9a65e9c97350/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9daf14d44298a602ff7be05efe6c9a65e9c97350/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9daf14d44298a602ff7be05efe6c9a65e9c97350", "patch": "@@ -1,3 +1,8 @@\n+2015-11-26  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n+\n+\t* cp-gimplify.c (genericize_cp_loop): Change LOOP_EXPR's location\n+\tto start of loop body instead of start of loop.\n+\n 2015-11-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/68508"}, {"sha": "a9a34cd81cc52a308bb5fbc54816fec1e3a54a75", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9daf14d44298a602ff7be05efe6c9a65e9c97350/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9daf14d44298a602ff7be05efe6c9a65e9c97350/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=9daf14d44298a602ff7be05efe6c9a65e9c97350", "patch": "@@ -263,7 +263,12 @@ genericize_cp_loop (tree *stmt_p, location_t start_locus, tree cond, tree body,\n \tloop = stmt_list;\n     }\n   else\n-    loop = build1_loc (start_locus, LOOP_EXPR, void_type_node, stmt_list);\n+    {\n+      location_t loc = EXPR_LOCATION (expr_first (body));\n+      if (loc == UNKNOWN_LOCATION)\n+\tloc = start_locus;\n+      loop = build1_loc (loc, LOOP_EXPR, void_type_node, stmt_list);\n+    }\n \n   stmt_list = NULL;\n   append_to_statement_list (loop, &stmt_list);"}, {"sha": "7eedf80f38f90a00cff6b30e9cbeb850c0ade46c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9daf14d44298a602ff7be05efe6c9a65e9c97350/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9daf14d44298a602ff7be05efe6c9a65e9c97350/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9daf14d44298a602ff7be05efe6c9a65e9c97350", "patch": "@@ -1,3 +1,7 @@\n+2015-11-26  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n+\n+\t* g++.dg/guality/pr67192.C: New test.\n+\n 2015-11-26  Matthew Wahab  <matthew.wahab@arm.com>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vqrdmlXh_lane.inc: New file,"}, {"sha": "c09ecf8dc817a69e8b7c5252a09bc224367dfd72", "filename": "gcc/testsuite/g++.dg/guality/pr67192.C", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9daf14d44298a602ff7be05efe6c9a65e9c97350/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fpr67192.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9daf14d44298a602ff7be05efe6c9a65e9c97350/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fpr67192.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fguality%2Fpr67192.C?ref=9daf14d44298a602ff7be05efe6c9a65e9c97350", "patch": "@@ -0,0 +1,79 @@\n+/* PR debug/67192 */\n+/* { dg-do run } */\n+/* { dg-options \"-x c++ -g -Wmisleading-indentation\" } */\n+\n+volatile int cnt = 0;\n+\n+__attribute__((noinline, noclone)) static int\n+last (void)\n+{\n+  return ++cnt % 5 == 0;\n+}\n+\n+__attribute__((noinline, noclone)) static void\n+do_it (void)\n+{\n+  asm volatile (\"\" : : \"r\" (&cnt) : \"memory\");\n+}\n+\n+__attribute__((noinline, noclone)) static void\n+f1 (void)\n+{\n+  for (;; do_it())\n+    {\n+      if (last ())\n+\tbreak;\n+    }\n+  do_it (); /* { dg-final { gdb-test 27 \"cnt\" \"5\" } } */\n+}\n+\n+__attribute__((noinline, noclone)) static void\n+f2 (void)\n+{\n+  while (1)\n+    {\n+      if (last ())\n+\tbreak;\n+      do_it ();\n+    }\n+  do_it (); /* { dg-final { gdb-test 39 \"cnt\" \"10\" } } */\n+}\n+\n+__attribute__((noinline, noclone)) static void\n+f3 (void)\n+{\n+  for (;; do_it())\n+    if (last ())\n+      break;\n+  do_it (); /* { dg-final { gdb-test 48 \"cnt\" \"15\" } } */\n+}\n+\n+__attribute__((noinline, noclone)) static void\n+f4 (void)\n+{\n+  while (1) /* { dg-final { gdb-test 54 \"cnt\" \"15\" } } */\n+    if (last ())\n+      break;\n+    else\n+      do_it ();\n+  do_it (); /* { dg-final { gdb-test 59 \"cnt\" \"20\" } } */\n+}\n+\n+void (*volatile fnp1) (void) = f1;\n+void (*volatile fnp2) (void) = f2;\n+void (*volatile fnp3) (void) = f3;\n+void (*volatile fnp4) (void) = f4;\n+\n+int\n+main ()\n+{\n+  asm volatile (\"\" : : \"r\" (&fnp1) : \"memory\");\n+  asm volatile (\"\" : : \"r\" (&fnp2) : \"memory\");\n+  asm volatile (\"\" : : \"r\" (&fnp3) : \"memory\");\n+  asm volatile (\"\" : : \"r\" (&fnp4) : \"memory\");\n+  fnp1 ();\n+  fnp2 ();\n+  fnp3 ();\n+  fnp4 ();\n+  return 0;\n+}"}]}