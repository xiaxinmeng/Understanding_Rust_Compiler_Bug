{"sha": "ac2b960fcf50ac868ecc2f407e67d7085bf069de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMyYjk2MGZjZjUwYWM4NjhlY2MyZjQwN2U2N2Q3MDg1YmYwNjlkZQ==", "commit": {"author": {"name": "Yufeng Zhang", "email": "yufeng.zhang@arm.com", "date": "2012-12-05T10:43:48Z"}, "committer": {"name": "Yufeng Zhang", "email": "yufeng@gcc.gnu.org", "date": "2012-12-05T10:43:48Z"}, "message": "aarch64.c (aarch64_mangle_type): New function.\n\ngcc/\n\n2012-12-05  Yufeng Zhang  <yufeng.zhang@arm.com>\n\n\t* config/aarch64/aarch64.c (aarch64_mangle_type): New function.\n\t(TARGET_MANGLE_TYPE): Define.\n\ngcc/testsuite/\n\n2012-12-05  Yufeng Zhang  <yufeng.zhang@arm.com>\n\n\t* g++.dg/abi/arm_va_list.C: Also test on aarch64*-*-*.\n\nFrom-SVN: r194200", "tree": {"sha": "5891ab7cae5753c8b500b00a96ea82264be3a484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5891ab7cae5753c8b500b00a96ea82264be3a484"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac2b960fcf50ac868ecc2f407e67d7085bf069de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac2b960fcf50ac868ecc2f407e67d7085bf069de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac2b960fcf50ac868ecc2f407e67d7085bf069de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac2b960fcf50ac868ecc2f407e67d7085bf069de/comments", "author": null, "committer": null, "parents": [{"sha": "570104dff64cb067e333f4f05dd3ac5d6cd4eeb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570104dff64cb067e333f4f05dd3ac5d6cd4eeb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570104dff64cb067e333f4f05dd3ac5d6cd4eeb8"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "795a1bdfb86c4a9ea63329d07380a0388fff4528", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac2b960fcf50ac868ecc2f407e67d7085bf069de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac2b960fcf50ac868ecc2f407e67d7085bf069de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac2b960fcf50ac868ecc2f407e67d7085bf069de", "patch": "@@ -1,3 +1,8 @@\n+2012-12-05  Yufeng Zhang  <yufeng.zhang@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_mangle_type): New function.\n+\t(TARGET_MANGLE_TYPE): Define.\n+\n 2012-12-05  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64-builtins.c"}, {"sha": "1cabf7ac6178e260728ccd97e9d10e5017c2d15d", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac2b960fcf50ac868ecc2f407e67d7085bf069de/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac2b960fcf50ac868ecc2f407e67d7085bf069de/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=ac2b960fcf50ac868ecc2f407e67d7085bf069de", "patch": "@@ -5862,6 +5862,20 @@ aarch64_preferred_simd_mode (enum machine_mode mode)\n   return word_mode;\n }\n \n+/* Implement TARGET_MANGLE_TYPE.  */\n+\n+const char *\n+aarch64_mangle_type (const_tree type)\n+{\n+  /* The AArch64 ABI documents say that \"__va_list\" has to be\n+     managled as if it is in the \"std\" namespace.  */\n+  if (lang_hooks.types_compatible_p (CONST_CAST_TREE (type), va_list_type))\n+    return \"St9__va_list\";\n+\n+  /* Use the default mangling.  */\n+  return NULL;\n+}\n+\n /* Return the equivalent letter for size.  */\n static unsigned char\n sizetochar (int size)\n@@ -6815,6 +6829,9 @@ aarch64_c_mode_for_suffix (char suffix)\n #undef TARGET_LIBGCC_CMP_RETURN_MODE\n #define TARGET_LIBGCC_CMP_RETURN_MODE aarch64_libgcc_cmp_return_mode\n \n+#undef TARGET_MANGLE_TYPE\n+#define TARGET_MANGLE_TYPE aarch64_mangle_type\n+\n #undef TARGET_MEMORY_MOVE_COST\n #define TARGET_MEMORY_MOVE_COST aarch64_memory_move_cost\n "}, {"sha": "aa90fd954709ead5f39b20358a519ee0db99fc25", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac2b960fcf50ac868ecc2f407e67d7085bf069de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac2b960fcf50ac868ecc2f407e67d7085bf069de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ac2b960fcf50ac868ecc2f407e67d7085bf069de", "patch": "@@ -1,3 +1,7 @@\n+2012-12-05  Yufeng Zhang  <yufeng.zhang@arm.com>\n+\n+\t* g++.dg/abi/arm_va_list.C: Also test on aarch64*-*-*.\n+\n 2012-12-05  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.dg/vect/vect-rounding-btrunc.c: New test."}, {"sha": "4f6f3a46da41b6ff00e37ac6bb593b81855a183d", "filename": "gcc/testsuite/g++.dg/abi/arm_va_list.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac2b960fcf50ac868ecc2f407e67d7085bf069de/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Farm_va_list.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac2b960fcf50ac868ecc2f407e67d7085bf069de/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Farm_va_list.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Farm_va_list.C?ref=ac2b960fcf50ac868ecc2f407e67d7085bf069de", "patch": "@@ -1,9 +1,10 @@\n-// { dg-do compile }\n+// { dg-do compile { target { aarch64*-*-* arm*-*-* } } }\n // { dg-options \"-Wno-abi\" }\n-// { dg-require-effective-target arm_eabi }\n+// { dg-require-effective-target arm_eabi { target arm*-*-* } }\n \n // AAPCS \\S 7.1.4 requires that va_list be a typedef for \"struct\n // __va_list\".  The mangling is as if it were \"std::__va_list\".\n+// AAPCS64 \\S 7.1.4 has the same requirement for AArch64 targets.\n // #include <stdarg.h>\n typedef __builtin_va_list va_list;\n "}]}