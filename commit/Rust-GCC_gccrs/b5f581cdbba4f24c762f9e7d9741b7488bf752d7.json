{"sha": "b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVmNTgxY2RiYmE0ZjI0Yzc2MmY5ZTdkOTc0MWI3NDg4YmY3NTJkNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2018-11-14T11:42:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-11-14T11:42:16Z"}, "message": "[Ada] More complete information level for -gnatR output\n\nThis adds a 4th information level for the -gnatR output, where relevant\ncompiler-generated types are listed in addition to the information\nalready output by -gnatR3.\n\nFor the following package P:\n\npackage P is\n\n  type Arr0 is array (Positive range <>) of Boolean;\n\n    type Rec (D1 : Positive; D2 : Boolean) is record\n       C1 : Integer;\n       C2 : Arr0 (1 .. D1);\n\n       case D2 is\n          when False =>\n             C3 : Character;\n          when True =>\n             C4 : String (1 .. 3);\n             C5 : Float;\n       end case;\n    end record;\n\n    type Arr1 is array (1 .. 8) of Rec (1, True);\n\nend P;\n\nthe output generated by -gnatR4 must be:\n\nRepresentation information for unit P (spec)\n--------------------------------------------\n\nfor Arr0'Alignment use 1;\nfor Arr0'Component_Size use 8;\n\nfor Rec'Object_Size use 17179869344;\nfor Rec'Value_Size use (if (#2 != 0) then ((((#1 + 15) & -4) + 8) * 8)\nelse ((((#1 + 15) & -4) + 1) * 8) end);\nfor Rec'Alignment use 4;\nfor Rec use record\n   D1 at  0 range  0 .. 31;\n   D2 at  4 range  0 ..  7;\n   C1 at  8 range  0 .. 31;\n   C2 at 12 range  0 .. ((#1 * 8)) - 1;\n   C3 at ((#1 + 15) & -4) range  0 ..  7;\n   C4 at ((#1 + 15) & -4) range  0 .. 23;\n   C5 at (((#1 + 15) & -4) + 4) range  0 .. 31;\nend record;\n\nfor Arr1'Size use 1536;\nfor Arr1'Alignment use 4;\nfor Arr1'Component_Size use 192;\n\nfor Tarr1c'Size use 192;\nfor Tarr1c'Alignment use 4;\nfor Tarr1c use record\n   D1 at  0 range  0 .. 31;\n   D2 at  4 range  0 ..  7;\n   C1 at  8 range  0 .. 31;\n   C2 at 12 range  0 ..  7;\n   C4 at 16 range  0 .. 23;\n   C5 at 20 range  0 .. 31;\nend record;\n\n2018-11-14  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst\n\t(-gnatR): Document new -gnatR4 level.\n\t* gnat_ugn.texi: Regenerate.\n\t* opt.ads (List_Representation_Info): Bump upper bound to 4.\n\t* repinfo.adb: Add with clause for GNAT.HTable.\n\t(Relevant_Entities_Size): New constant.\n\t(Entity_Header_Num): New type.\n\t(Entity_Hash): New function.\n\t(Relevant_Entities): New set implemented with GNAT.HTable.\n\t(List_Entities): Also list compiled-generated entities present\n\tin the Relevant_Entities set. Consider that the Component_Type\n\tof an array type is relevant.\n\t(List_Rep_Info): Reset Relevant_Entities for each unit.\n\t* switch-c.adb (Scan_Front_End_Switches): Add support for -gnatR4.\n\t* switch-m.adb (Normalize_Compiler_Switches): Likewise\n\t* usage.adb (Usage): Likewise.\n\nFrom-SVN: r266131", "tree": {"sha": "5af1525aee24f35942aac5c1bc00d30f8acfe008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5af1525aee24f35942aac5c1bc00d30f8acfe008"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/comments", "author": null, "committer": null, "parents": [{"sha": "4faf522bacd66cd03826c645b30c68f0fd785177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4faf522bacd66cd03826c645b30c68f0fd785177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4faf522bacd66cd03826c645b30c68f0fd785177"}], "stats": {"total": 144, "additions": 108, "deletions": 36}, "files": [{"sha": "1de2a84915c8d26c69f1e3adbee1e8f83d99a7a5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "patch": "@@ -1,3 +1,22 @@\n+2018-11-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst\n+\t(-gnatR): Document new -gnatR4 level.\n+\t* gnat_ugn.texi: Regenerate.\n+\t* opt.ads (List_Representation_Info): Bump upper bound to 4.\n+\t* repinfo.adb: Add with clause for GNAT.HTable.\n+\t(Relevant_Entities_Size): New constant.\n+\t(Entity_Header_Num): New type.\n+\t(Entity_Hash): New function.\n+\t(Relevant_Entities): New set implemented with GNAT.HTable.\n+\t(List_Entities): Also list compiled-generated entities present\n+\tin the Relevant_Entities set. Consider that the Component_Type\n+\tof an array type is relevant.\n+\t(List_Rep_Info): Reset Relevant_Entities for each unit.\n+\t* switch-c.adb (Scan_Front_End_Switches): Add support for -gnatR4.\n+\t* switch-m.adb (Normalize_Compiler_Switches): Likewise\n+\t* usage.adb (Usage): Likewise.\n+\n 2018-11-14  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_disp.adb (Expand_Interface_Thunk): Extend handling of"}, {"sha": "1b69bdd457a82c41c77ae15290bb40bf3064c003", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "patch": "@@ -2081,7 +2081,7 @@ Alphabetical List of All Switches\n \n .. index:: -gnatR  (gcc)\n \n-:switch:`-gnatR[0|1|2|3][e][j][m][s]`\n+:switch:`-gnatR[0|1|2|3|4][e][j][m][s]`\n   Output representation information for declared types, objects and\n   subprograms. Note that this switch is not allowed if a previous\n   :switch:`-gnatD` switch has been given, since these two switches\n@@ -5843,13 +5843,14 @@ Debugging Control\n \n .. index:: -gnatR  (gcc)\n \n-:switch:`-gnatR[0|1|2|3][e][j][m][s]`\n+:switch:`-gnatR[0|1|2|3|4][e][j][m][s]`\n   This switch controls output from the compiler of a listing showing\n   representation information for declared types, objects and subprograms.\n   For :switch:`-gnatR0`, no information is output (equivalent to omitting\n   the :switch:`-gnatR` switch). For :switch:`-gnatR1` (which is the default,\n   so :switch:`-gnatR` with no parameter has the same effect), size and\n   alignment information is listed for declared array and record types.\n+\n   For :switch:`-gnatR2`, size and alignment information is listed for all\n   declared types and objects. The ``Linker_Section`` is also listed for any\n   entity for which the ``Linker_Section`` is set explicitly or implicitly (the\n@@ -5862,9 +5863,13 @@ Debugging Control\n   n'th discriminant. See source files :file:`repinfo.ads/adb` in the\n   GNAT sources for full details on the format of :switch:`-gnatR3` output.\n \n+  For :switch:`-gnatR4`, information for relevant compiler-generated types\n+  is also listed, i.e. when they are structurally part of other declared\n+  types and objects.\n+\n   If the switch is followed by an ``e`` (e.g. :switch:`-gnatR2e`), then\n   extended representation information for record sub-components of records\n-  are included.\n+  is included.\n \n   If the switch is followed by an ``m`` (e.g. :switch:`-gnatRm`), then\n   subprogram conventions and parameter passing mechanisms for all the"}, {"sha": "d28d53dc7fa65e1020a59f92f140d1c4215d5e4d", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , Aug 20, 2018\n+GNAT User's Guide for Native Platforms , Nov 09, 2018\n \n AdaCore\n \n@@ -9977,7 +9977,7 @@ Treat pragma Restrictions as Restriction_Warnings.\n \n @table @asis\n \n-@item @code{-gnatR[0|1|2|3][e][j][m][s]}\n+@item @code{-gnatR[0|1|2|3|4][e][j][m][s]}\n \n Output representation information for declared types, objects and\n subprograms. Note that this switch is not allowed if a previous\n@@ -15092,14 +15092,15 @@ restriction warnings rather than restrictions.\n \n @table @asis\n \n-@item @code{-gnatR[0|1|2|3][e][j][m][s]}\n+@item @code{-gnatR[0|1|2|3|4][e][j][m][s]}\n \n This switch controls output from the compiler of a listing showing\n representation information for declared types, objects and subprograms.\n For @code{-gnatR0}, no information is output (equivalent to omitting\n the @code{-gnatR} switch). For @code{-gnatR1} (which is the default,\n so @code{-gnatR} with no parameter has the same effect), size and\n alignment information is listed for declared array and record types.\n+\n For @code{-gnatR2}, size and alignment information is listed for all\n declared types and objects. The @code{Linker_Section} is also listed for any\n entity for which the @code{Linker_Section} is set explicitly or implicitly (the\n@@ -15112,9 +15113,13 @@ a mostly obvious format with #n being used to represent the value of the\n n'th discriminant. See source files @code{repinfo.ads/adb} in the\n GNAT sources for full details on the format of @code{-gnatR3} output.\n \n+For @code{-gnatR4}, information for relevant compiler-generated types\n+is also listed, i.e. when they are structurally part of other declared\n+types and objects.\n+\n If the switch is followed by an @code{e} (e.g. @code{-gnatR2e}), then\n extended representation information for record sub-components of records\n-are included.\n+is included.\n \n If the switch is followed by an @code{m} (e.g. @code{-gnatRm}), then\n subprogram conventions and parameter passing mechanisms for all the"}, {"sha": "668d41304d80080ad3bf9f6307a87670b072ed4a", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "patch": "@@ -986,26 +986,27 @@ package Opt is\n    --  the list of object dependencies (-M switch). Output depends if -a switch\n    --  is used or not. This list can be used directly in a Makefile.\n \n-   List_Representation_Info : Int range 0 .. 3 := 0;\n+   List_Representation_Info : Int range 0 .. 4 := 0;\n    --  GNAT\n    --  Set non-zero by -gnatR switch to list representation information.\n    --  The settings are as follows:\n    --\n    --    0 = no listing of representation information (default as above)\n-   --    1 = list rep info for user defined record and array types\n-   --    2 = list rep info for all user defined types and objects\n+   --    1 = list rep info for user-defined record and array types\n+   --    2 = list rep info for all user-defined types and objects\n    --    3 = like 2, but variable fields are decoded symbolically\n+   --    4 = like 3, but list rep info for relevant compiler-generated types\n \n    List_Representation_Info_To_File : Boolean := False;\n    --  GNAT\n-   --  Set true by -gnatRs switch. Causes information from -gnatR/1/2/3/m to be\n+   --  Set true by -gnatRs switch. Causes information from -gnatR[1-4]m to be\n    --  written to file.rep (where file is the name of the source file) instead\n    --  of stdout. For example, if file x.adb is compiled using -gnatR2s then\n    --  representation info is written to x.adb.ref.\n \n    List_Representation_Info_To_JSON : Boolean := False;\n    --  GNAT\n-   --  Set true by -gnatRj switch. Causes information from -gnatR/1/2/3/m to be\n+   --  Set true by -gnatRj switch. Causes information from -gnatR[1-4]m to be\n    --  output in the JSON data interchange format.\n \n    List_Representation_Info_Mechanisms : Boolean := False;"}, {"sha": "d0d46fcde4f9adc11236f5e29ce121f0e4161ffb", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 54, "deletions": 4, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "patch": "@@ -50,6 +50,8 @@ with Urealp;  use Urealp;\n \n with Ada.Unchecked_Conversion;\n \n+with GNAT.HTable;\n+\n package body Repinfo is\n \n    SSU : constant := 8;\n@@ -118,6 +120,28 @@ package body Repinfo is\n    --  the current entity. Set True when a new entity is processed, and false\n    --  when the blank line is output.\n \n+   -------------------------------\n+   --  Set of Relevant Entities --\n+   -------------------------------\n+\n+   Relevant_Entities_Size : constant := 4093;\n+   --  Number of headers in hash table\n+\n+   subtype Entity_Header_Num is Integer range 0 .. Relevant_Entities_Size - 1;\n+   --  Range of headers in hash table\n+\n+   function Entity_Hash (Id : Entity_Id) return Entity_Header_Num;\n+   --  Simple hash function for Entity_Ids\n+\n+   package Relevant_Entities is new GNAT.Htable.Simple_HTable\n+     (Header_Num => Entity_Header_Num,\n+      Element    => Boolean,\n+      No_Element => False,\n+      Key        => Entity_Id,\n+      Hash       => Entity_Hash,\n+      Equal      => \"=\");\n+   --  Hash table to record which compiler-generated entities are relevant\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -264,6 +288,15 @@ package body Repinfo is\n       return UI_From_Int (-Rep_Table.Last);\n    end Create_Node;\n \n+   -----------------\n+   -- Entity_Hash --\n+   -----------------\n+\n+   function Entity_Hash (Id : Entity_Id) return Entity_Header_Num is\n+   begin\n+      return Entity_Header_Num (Id mod Relevant_Entities_Size);\n+   end Entity_Hash;\n+\n    ---------------------------\n    -- Get_Dynamic_SO_Entity --\n    ---------------------------\n@@ -403,9 +436,11 @@ package body Repinfo is\n             Need_Blank_Line := True;\n \n             --  We list entities that come from source (excluding private or\n-            --  incomplete types or deferred constants, where we will list the\n-            --  info for the full view). If debug flag A is set, then all\n-            --  entities are listed\n+            --  incomplete types or deferred constants, for which we will list\n+            --  the information for the full view). If requested, we also list\n+            --  relevant entities that have been generated when processing the\n+            --  original entities coming from source. But if debug flag A is\n+            --  set, then all entities are listed.\n \n             if ((Comes_From_Source (E)\n                    or else (Ekind (E) = E_Block\n@@ -416,6 +451,8 @@ package body Repinfo is\n               and then not Is_Incomplete_Or_Private_Type (E)\n               and then not (Ekind (E) = E_Constant\n                               and then Present (Full_View (E))))\n+              or else (List_Representation_Info = 4\n+                         and then Relevant_Entities.Get (E))\n               or else Debug_Flag_AA\n             then\n                if Is_Subprogram (E) then\n@@ -448,6 +485,15 @@ package body Repinfo is\n                      List_Array_Info (E, Bytes_Big_Endian);\n                   end if;\n \n+                  --  The component type is relevant for an array\n+\n+                  if List_Representation_Info = 4\n+                    and then Is_Itype (Component_Type (Base_Type (E)))\n+                  then\n+                     Relevant_Entities.Set\n+                       (Component_Type (Base_Type (E)), True);\n+                  end if;\n+\n                elsif Is_Type (E) then\n                   if List_Representation_Info >= 2 then\n                      Blank_Line;\n@@ -1239,7 +1285,7 @@ package body Repinfo is\n             Write_Str (UI_Image_Buffer (1 .. UI_Image_Length));\n \n          elsif Known_Normalized_Position (Ent)\n-           and then List_Representation_Info = 3\n+           and then List_Representation_Info >= 3\n          then\n             Spaces (Max_Spos_Length - 2);\n \n@@ -1730,6 +1776,10 @@ package body Repinfo is\n             if In_Extended_Main_Source_Unit (Cunit_Entity (U)) then\n                Unit_Casing := Identifier_Casing (Source_Index (U));\n \n+               if List_Representation_Info = 4 then\n+                  Relevant_Entities.Reset;\n+               end if;\n+\n                --  Normal case, list to standard output\n \n                if not List_Representation_Info_To_File then"}, {"sha": "eaeac066cac8f70bda9416c09c1d2dace8173872", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "patch": "@@ -1204,7 +1204,7 @@ package body Switch.C is\n \n                   case C is\n \n-                  when '0' .. '3' =>\n+                  when '0' .. '4' =>\n                      List_Representation_Info :=\n                        Character'Pos (C) - Character'Pos ('0');\n "}, {"sha": "d2983ab7548568fe54b0fa76acf55fed82bd1dc7", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "patch": "@@ -462,37 +462,29 @@ package body Switch.M is\n                      Add_Switch_Component\n                        (Storing (Storing'First .. Last_Stored));\n \n-                  --  -gnatR may be followed by '0', '1', '2' or '3',\n-                  --  then by 's'\n+                  --  -gnatR may be followed by '0', '1', '2', '3' or '4',\n+                  --  then by 'e', 'j', 'm' or 's'.\n \n                   when 'R' =>\n                      Last_Stored := First_Stored;\n                      Storing (Last_Stored) := 'R';\n                      Ptr := Ptr + 1;\n \n-                     if Ptr <= Max\n-                       and then Switch_Chars (Ptr) in '0' .. '9'\n-                     then\n+                     while Ptr <= Max loop\n                         C := Switch_Chars (Ptr);\n \n-                        if C in '4' .. '9' then\n-                           Last := 0;\n-                           return;\n+                        case C is\n \n-                        else\n+                        when '0' .. '4' | 'e' | 'j' | 'm' | 's' =>\n                            Last_Stored := Last_Stored + 1;\n                            Storing (Last_Stored) := C;\n                            Ptr := Ptr + 1;\n \n-                           if Ptr <= Max\n-                             and then Switch_Chars (Ptr) = 's'\n-                           then\n-                              Last_Stored := Last_Stored + 1;\n-                              Storing (Last_Stored) := 's';\n-                              Ptr := Ptr + 1;\n-                           end if;\n-                        end if;\n-                     end if;\n+                        when others =>\n+                           Last := 0;\n+                           return;\n+                        end case;\n+                     end loop;\n \n                      Add_Switch_Component\n                        (Storing (Storing'First .. Last_Stored));"}, {"sha": "2581b02ca336efbc57bdbfa9f8d4d25376bd7037", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5f581cdbba4f24c762f9e7d9741b7488bf752d7/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=b5f581cdbba4f24c762f9e7d9741b7488bf752d7", "patch": "@@ -402,7 +402,7 @@ begin\n \n    Write_Switch_Char (\"R?\");\n    Write_Line\n-     (\"List rep info (?=0/1/2/3/e/m for none/types/all/symbolic/ext/mech)\");\n+     (\"List rep info (?=0/1/2/3/4/e/m for none/types/all/sym/cg/ext/mech)\");\n    Write_Switch_Char (\"R?j\");\n    Write_Line (\"List rep info in the JSON data interchange format\");\n    Write_Switch_Char (\"R?s\");"}]}