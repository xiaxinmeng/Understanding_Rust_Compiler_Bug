{"sha": "058d85217a2d130f17be352e66807aab44609cfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU4ZDg1MjE3YTJkMTMwZjE3YmUzNTJlNjY4MDdhYWI0NDYwOWNmYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-03T07:15:21Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-03T07:15:21Z"}, "message": "(main): Use new loop var J to avoid conflict with I.\n\nFrom-SVN: r2043", "tree": {"sha": "c6d0e4539153edcd9ff8064bb1e24d98b1853442", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6d0e4539153edcd9ff8064bb1e24d98b1853442"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/058d85217a2d130f17be352e66807aab44609cfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/058d85217a2d130f17be352e66807aab44609cfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/058d85217a2d130f17be352e66807aab44609cfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/058d85217a2d130f17be352e66807aab44609cfc/comments", "author": null, "committer": null, "parents": [{"sha": "9233f8ce4800fd62f1bd8f87624c02b2436ffd01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9233f8ce4800fd62f1bd8f87624c02b2436ffd01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9233f8ce4800fd62f1bd8f87624c02b2436ffd01"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "b78990a73f7c7ba324dda58b72835ddfe652d604", "filename": "gcc/gcc.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/058d85217a2d130f17be352e66807aab44609cfc/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/058d85217a2d130f17be352e66807aab44609cfc/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=058d85217a2d130f17be352e66807aab44609cfc", "patch": "@@ -3197,6 +3197,7 @@ main (argc, argv)\n      char **argv;\n {\n   register int i;\n+  int j;\n   int value;\n   int error_count = 0;\n   int linker_was_run = 0;\n@@ -3371,17 +3372,19 @@ main (argc, argv)\n \t    input_suffix = \"\";\n \n \t  len = 0;\n-\t  for (i = 0; i < sizeof cp->spec / sizeof cp->spec[0] && cp->spec[i]; i++)\n-\t    len += strlen (cp->spec[i]);\n+\t  for (j = 0; j < sizeof cp->spec / sizeof cp->spec[0]; j++)\n+\t    if (cp->spec[j])\n+\t      len += strlen (cp->spec[j]);\n \n \t  p = (char *) xmalloc (len + 1);\n \n \t  len = 0;\n-\t  for (i = 0; i < sizeof cp->spec / sizeof cp->spec[0] && cp->spec[i]; i++)\n-\t    {\n-\t      strcpy (p + len, cp->spec[i]);\n-\t      len += strlen (cp->spec[i]);\n-\t    }\n+\t  for (j = 0; j < sizeof cp->spec / sizeof cp->spec[0]; j++)\n+\t    if (cp->spec[j])\n+\t      {\n+\t\tstrcpy (p + len, cp->spec[j]);\n+\t\tlen += strlen (cp->spec[j]);\n+\t      }\n \n \t  value = do_spec (p);\n \t  free (p);"}]}