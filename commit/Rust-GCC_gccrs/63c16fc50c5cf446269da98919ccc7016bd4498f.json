{"sha": "63c16fc50c5cf446269da98919ccc7016bd4498f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNjMTZmYzUwYzVjZjQ0NjI2OWRhOTg5MTljY2M3MDE2YmQ0NDk4Zg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-10-06T06:00:59Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-10-06T06:00:59Z"}, "message": "semantics.c (genrtl_finish_function): Don't init or check can_reach_end; remove noreturn and return value checks.\n\n        * semantics.c (genrtl_finish_function): Don't init or check\n        can_reach_end; remove noreturn and return value checks.\n\nFrom-SVN: r36749", "tree": {"sha": "8f32775fcd5a134d543abc8bcbaccdf83de171d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f32775fcd5a134d543abc8bcbaccdf83de171d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63c16fc50c5cf446269da98919ccc7016bd4498f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63c16fc50c5cf446269da98919ccc7016bd4498f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63c16fc50c5cf446269da98919ccc7016bd4498f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63c16fc50c5cf446269da98919ccc7016bd4498f/comments", "author": null, "committer": null, "parents": [{"sha": "9cc37c9f65a2fb17982afa839ba7e636d720d421", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cc37c9f65a2fb17982afa839ba7e636d720d421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cc37c9f65a2fb17982afa839ba7e636d720d421"}], "stats": {"total": 34, "additions": 5, "deletions": 29}, "files": [{"sha": "cea08bdb58c6cc01710ad1a898961e185c0dfbaa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63c16fc50c5cf446269da98919ccc7016bd4498f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63c16fc50c5cf446269da98919ccc7016bd4498f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=63c16fc50c5cf446269da98919ccc7016bd4498f", "patch": "@@ -1,3 +1,8 @@\n+2000-10-05  Richard Henderson  <rth@cygnus.com>\n+\n+\t* semantics.c (genrtl_finish_function): Don't init or check\n+\tcan_reach_end; remove noreturn and return value checks.\n+\n 2000-10-05  Tom Tromey  <tromey@cygnus.com>\n \n \t* init.c (build_java_class_ref): Use `build_static_name' with a"}, {"sha": "e3d1dec952d841dbb6e43b3882f1157d23dd0b6e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63c16fc50c5cf446269da98919ccc7016bd4498f/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63c16fc50c5cf446269da98919ccc7016bd4498f/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=63c16fc50c5cf446269da98919ccc7016bd4498f", "patch": "@@ -2528,8 +2528,6 @@ static void\n genrtl_finish_function (fn)\n      tree fn;\n {\n-  int returns_null;\n-  int returns_value;\n   tree no_return_label = NULL_TREE;\n \n #if 0\n@@ -2630,14 +2628,6 @@ genrtl_finish_function (fn)\n   /* Generate rtl for function exit.  */\n   expand_function_end (input_filename, lineno, 1);\n \n-  /* So we can tell if jump_optimize sets it to 1.  */\n-  can_reach_end = 0;\n-\n-  /* Before we call rest_of_compilation (which will pop the\n-     CURRENT_FUNCTION), we must save these values.  */\n-  returns_null = current_function_returns_null;\n-  returns_value = current_function_returns_value;\n-\n   /* If this is a nested function (like a template instantiation that\n      we're compiling in the midst of compiling something else), push a\n      new GC context.  That will keep local variables on the stack from\n@@ -2684,25 +2674,6 @@ genrtl_finish_function (fn)\n   if (DECL_STATIC_DESTRUCTOR (fn))\n     static_dtors = tree_cons (NULL_TREE, fn, static_dtors);\n \n-  if (DECL_NAME (DECL_RESULT (fn)))\n-    returns_value |= can_reach_end;\n-  else\n-    returns_null |= can_reach_end;\n-\n-  if (TREE_THIS_VOLATILE (fn) && returns_null)\n-    warning (\"`noreturn' function does return\");\n-  else if (returns_null\n-\t   && TREE_CODE (TREE_TYPE (TREE_TYPE (fn))) != VOID_TYPE)\n-    {\n-      /* Always complain if there's just no return statement.  */\n-      if (!returns_value)\n-\twarning (\"no return statement in function returning non-void\");\n-      else if (warn_return_type || pedantic)\n-\t/* If this function returns non-void and control can drop through,\n-\t       complain.  */\n-\twarning (\"control reaches end of non-void function\");\n-    }\n-\n   --function_depth;\n \n   if (!DECL_SAVED_INSNS (fn)"}]}