{"sha": "fac31afe6a8ee178de0662353dbd6f2cc5ab3556", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFjMzFhZmU2YThlZTE3OGRlMDY2MjM1M2RiZDZmMmNjNWFiMzU1Ng==", "commit": {"author": {"name": "Vineet Gupta", "email": "vgupta@synopsys.com", "date": "2019-01-29T15:08:16Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2019-01-29T15:08:16Z"}, "message": "[ARC] Enable init_array support.\n\ngcc's common configure script has a subtle flaw that it only tests\n{init,fini.preinit}_array support when NOT cross compiling. This causes\ncross builds to erroneously deduce that the feature is not supported by\nthe target.\n\n| host-gcc-final-ab544139bfee/build/gcc/config.log\n|\n|configure:22941: checking for .preinit_array/.init_array/.fini_array support\n|configure:23106: checking cross compile... guessing\n|configure:23111: result: no\n\nThe right fix is to enable this for *all* cross setups (and address any\nfallouts). However in the short-term to enable ARC glibc port to upstream,\nforce enable this for ARC.\n\nThis has been discussed at length on glibc mailing list [1], [2]\n\n[1] https://sourceware.org/ml/libc-alpha/2018-11/msg00870.html\n[2] https://sourceware.org/ml/libc-alpha/2019-01/msg00656.html\n\ngcc/\n\n2019-xx-xx  Vineet Gupta <vgupta@synopsys.com>\n\n\t* gcc/config.gcc: Force .init_array for ARC\n\nFrom-SVN: r268365", "tree": {"sha": "a0229181cc7f039ccdb8df74510295e26ba9fc80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0229181cc7f039ccdb8df74510295e26ba9fc80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fac31afe6a8ee178de0662353dbd6f2cc5ab3556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac31afe6a8ee178de0662353dbd6f2cc5ab3556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fac31afe6a8ee178de0662353dbd6f2cc5ab3556", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac31afe6a8ee178de0662353dbd6f2cc5ab3556/comments", "author": {"login": "vineetgarc", "id": 1390751, "node_id": "MDQ6VXNlcjEzOTA3NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1390751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vineetgarc", "html_url": "https://github.com/vineetgarc", "followers_url": "https://api.github.com/users/vineetgarc/followers", "following_url": "https://api.github.com/users/vineetgarc/following{/other_user}", "gists_url": "https://api.github.com/users/vineetgarc/gists{/gist_id}", "starred_url": "https://api.github.com/users/vineetgarc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vineetgarc/subscriptions", "organizations_url": "https://api.github.com/users/vineetgarc/orgs", "repos_url": "https://api.github.com/users/vineetgarc/repos", "events_url": "https://api.github.com/users/vineetgarc/events{/privacy}", "received_events_url": "https://api.github.com/users/vineetgarc/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97b9ebc8741d5c95254cb9121ed86714c85e26c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b9ebc8741d5c95254cb9121ed86714c85e26c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97b9ebc8741d5c95254cb9121ed86714c85e26c1"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "dbaf55022096bf6d8642447048adf80e0d2ee1bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac31afe6a8ee178de0662353dbd6f2cc5ab3556/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac31afe6a8ee178de0662353dbd6f2cc5ab3556/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fac31afe6a8ee178de0662353dbd6f2cc5ab3556", "patch": "@@ -1,3 +1,7 @@\n+2019-01-29  Vineet Gupta  <vgupta@synopsys.com>\n+\n+\t* gcc/config.gcc: Force .init_array for ARC.\n+\n 2019-01-29  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/87295"}, {"sha": "f7b7dcc5968fedf112b48f55b5a67f02ff015a24", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac31afe6a8ee178de0662353dbd6f2cc5ab3556/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac31afe6a8ee178de0662353dbd6f2cc5ab3556/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=fac31afe6a8ee178de0662353dbd6f2cc5ab3556", "patch": "@@ -1110,7 +1110,10 @@ arc*-*-linux*)\n \tcase ${with_endian} in\n \tbig*)\ttm_file=\"arc/big.h ${tm_file}\"\n \tesac\n-        ;;\n+\t# Force .init_array support.  The configure script cannot always\n+\t# automatically detect that GAS supports it, yet we require it.\n+\tgcc_cv_initfini_array=yes\n+\t;;\n arm-wrs-vxworks|arm-wrs-vxworks7)\n \textra_options=\"${extra_options} arm/vxworks.opt\"\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-vxworks\""}]}