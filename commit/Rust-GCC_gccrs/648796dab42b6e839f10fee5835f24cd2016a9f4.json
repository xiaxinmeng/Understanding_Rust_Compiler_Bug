{"sha": "648796dab42b6e839f10fee5835f24cd2016a9f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ4Nzk2ZGFiNDJiNmU4MzlmMTBmZWU1ODM1ZjI0Y2QyMDE2YTlmNA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-22T21:26:38Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-23T16:24:16Z"}, "message": "analyzer: avoid ICE with missing arguments (PR 93375)\n\nPR analyzer/93375 reports an ICE under certain circumstances\ninvolving a call where the number of arguments at the callsite\nis less than the parameter count of the callee,\n\nSpecifically, the ICE occurs when pruning a checker_path for a\ndiagnostic, when attempting to maintain which expression is of\ninterest through such a call.\n\nThe root cause is an assumption that there were enough arguments at\nthe callsite, within callgraph_superedge's methods for mapping\nexpressions between callee and caller.\n\nThis patch adds checks for this to the relevant methods, fixing the ICE.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/93375\n\t* supergraph.cc (callgraph_superedge::get_arg_for_parm): Fail\n\tgracefully is the number of parameters at the callee exceeds the\n\tnumber of arguments at the call stmt.\n\t(callgraph_superedge::get_parm_for_arg): Likewise.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/93375\n\t* gcc.dg/analyzer/pr93375.c: New test.", "tree": {"sha": "364511210390da46f64c760f2c83b64632d8a137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/364511210390da46f64c760f2c83b64632d8a137"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/648796dab42b6e839f10fee5835f24cd2016a9f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/648796dab42b6e839f10fee5835f24cd2016a9f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/648796dab42b6e839f10fee5835f24cd2016a9f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/648796dab42b6e839f10fee5835f24cd2016a9f4/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d00f052ef209bacdd93f503b0c5fb428cc6c434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d00f052ef209bacdd93f503b0c5fb428cc6c434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d00f052ef209bacdd93f503b0c5fb428cc6c434"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "34c311d55bf1d0eb6298b8b5ab584dd98d4073c1", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648796dab42b6e839f10fee5835f24cd2016a9f4/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648796dab42b6e839f10fee5835f24cd2016a9f4/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=648796dab42b6e839f10fee5835f24cd2016a9f4", "patch": "@@ -1,3 +1,11 @@\n+2020-01-23  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93375\n+\t* supergraph.cc (callgraph_superedge::get_arg_for_parm): Fail\n+\tgracefully is the number of parameters at the callee exceeds the\n+\tnumber of arguments at the call stmt.\n+\t(callgraph_superedge::get_parm_for_arg): Likewise.\n+\n 2020-01-22  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93382"}, {"sha": "a5bf52d8aca17c687f114564741866a56d53cd65", "filename": "gcc/analyzer/supergraph.cc", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648796dab42b6e839f10fee5835f24cd2016a9f4/gcc%2Fanalyzer%2Fsupergraph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648796dab42b6e839f10fee5835f24cd2016a9f4/gcc%2Fanalyzer%2Fsupergraph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fsupergraph.cc?ref=648796dab42b6e839f10fee5835f24cd2016a9f4", "patch": "@@ -879,16 +879,19 @@ callgraph_superedge::get_arg_for_parm (tree parm_to_find,\n   gcc_assert  (TREE_CODE (parm_to_find) == PARM_DECL);\n \n   tree callee = get_callee_decl ();\n+  const gcall *call_stmt = get_call_stmt ();\n \n-  int i = 0;\n+  unsigned i = 0;\n   for (tree iter_parm = DECL_ARGUMENTS (callee); iter_parm;\n        iter_parm = DECL_CHAIN (iter_parm), ++i)\n     {\n+      if (i >= gimple_call_num_args (call_stmt))\n+\treturn NULL_TREE;\n       if (iter_parm == parm_to_find)\n \t{\n \t  if (out)\n \t    *out = callsite_expr::from_zero_based_param (i);\n-\t  return gimple_call_arg (get_call_stmt (), i);\n+\t  return gimple_call_arg (call_stmt, i);\n \t}\n     }\n \n@@ -906,12 +909,15 @@ callgraph_superedge::get_parm_for_arg (tree arg_to_find,\n \t\t\t\t       callsite_expr *out) const\n {\n   tree callee = get_callee_decl ();\n+  const gcall *call_stmt = get_call_stmt ();\n \n-  int i = 0;\n+  unsigned i = 0;\n   for (tree iter_parm = DECL_ARGUMENTS (callee); iter_parm;\n        iter_parm = DECL_CHAIN (iter_parm), ++i)\n     {\n-      tree param = gimple_call_arg (get_call_stmt (), i);\n+      if (i >= gimple_call_num_args (call_stmt))\n+\treturn NULL_TREE;\n+      tree param = gimple_call_arg (call_stmt, i);\n       if (arg_to_find == param)\n \t{\n \t  if (out)"}, {"sha": "ef4c6fc79181091c2c2a4a2fc06d1b8a34b739a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648796dab42b6e839f10fee5835f24cd2016a9f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648796dab42b6e839f10fee5835f24cd2016a9f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=648796dab42b6e839f10fee5835f24cd2016a9f4", "patch": "@@ -1,3 +1,8 @@\n+2020-01-23  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93375\n+\t* gcc.dg/analyzer/pr93375.c: New test.\n+\n 2020-01-23  Jason Merrill  <jason@redhat.com>\n \n \t* lib/target-supports.exp (check_effective_target_unsigned_char):"}, {"sha": "93a3e87f2cb65e0f224095ae44ed009fab58f19a", "filename": "gcc/testsuite/gcc.dg/analyzer/pr93375.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648796dab42b6e839f10fee5835f24cd2016a9f4/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr93375.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648796dab42b6e839f10fee5835f24cd2016a9f4/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr93375.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr93375.c?ref=648796dab42b6e839f10fee5835f24cd2016a9f4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-additional-options \"-Wno-implicit-int\" } */\n+\n+void\n+en (jm)\n+{\n+}\n+\n+void\n+p2 ()\n+{\n+  char *rl = 0;\n+\n+  en ();\n+  __builtin_memcpy (rl, 0, sizeof (0)); /* { dg-warning \"dereference of NULL\" } */\n+}"}]}