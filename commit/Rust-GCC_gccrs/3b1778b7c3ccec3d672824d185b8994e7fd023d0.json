{"sha": "3b1778b7c3ccec3d672824d185b8994e7fd023d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IxNzc4YjdjM2NjZWMzZDY3MjgyNGQxODViODk5NGU3ZmQwMjNkMA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-10-19T08:56:37Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-10-19T08:56:37Z"}, "message": "i386: Use register_operand in AVX512 FMA with memory broadcast\n\nUse \"register_operand\" in AVX512 FMA with memory broadcast when only\nregisters are allowed.\n\n\t* config/i386/sse.md\n\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_1):\n\tReplace nonimmediate_operand with register_operand.\n\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_2):\n\tLikewise.\n\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_3):\n\tLikewise.\n\nFrom-SVN: r265310", "tree": {"sha": "542e191bbc278844b17d1d68bb83f1d37c927544", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/542e191bbc278844b17d1d68bb83f1d37c927544"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b1778b7c3ccec3d672824d185b8994e7fd023d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1778b7c3ccec3d672824d185b8994e7fd023d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b1778b7c3ccec3d672824d185b8994e7fd023d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1778b7c3ccec3d672824d185b8994e7fd023d0/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3664a0f184ad90a0aa65b473d180debce6402ab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3664a0f184ad90a0aa65b473d180debce6402ab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3664a0f184ad90a0aa65b473d180debce6402ab0"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "ee08f80154c73b90810ac67ff4d13b16976ea9cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1778b7c3ccec3d672824d185b8994e7fd023d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1778b7c3ccec3d672824d185b8994e7fd023d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b1778b7c3ccec3d672824d185b8994e7fd023d0", "patch": "@@ -1,3 +1,13 @@\n+2018-10-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_1):\n+\tReplace nonimmediate_operand with register_operand.\n+\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_2):\n+\tLikewise.\n+\t(*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_3):\n+\tLikewise.\n+\n 2018-10-19  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \tPR rtl-optimization/87596"}, {"sha": "06144dc466223ce76dc818320453921d45a91793", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1778b7c3ccec3d672824d185b8994e7fd023d0/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1778b7c3ccec3d672824d185b8994e7fd023d0/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=3b1778b7c3ccec3d672824d185b8994e7fd023d0", "patch": "@@ -3749,8 +3749,8 @@\n (define_insn \"*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_1\"\n   [(set (match_operand:VF_AVX512 0 \"register_operand\" \"=v,v\")\n \t(fma:VF_AVX512\n-\t  (match_operand:VF_AVX512 1 \"nonimmediate_operand\" \"0,v\")\n-\t  (match_operand:VF_AVX512 2 \"nonimmediate_operand\" \"v,0\")\n+\t  (match_operand:VF_AVX512 1 \"register_operand\" \"0,v\")\n+\t  (match_operand:VF_AVX512 2 \"register_operand\" \"v,0\")\n \t  (vec_duplicate:VF_AVX512\n \t    (match_operand:<ssescalarmode> 3 \"memory_operand\" \"m,m\"))))]\n   \"TARGET_AVX512F && <sd_mask_mode512bit_condition>\"\n@@ -3763,8 +3763,8 @@\n \t(fma:VF_AVX512\n \t  (vec_duplicate:VF_AVX512\n \t    (match_operand:<ssescalarmode> 1 \"memory_operand\" \"m,m\"))\n-\t  (match_operand:VF_AVX512 2 \"nonimmediate_operand\" \"0,v\")\n-\t  (match_operand:VF_AVX512 3 \"nonimmediate_operand\" \"v,0\")))]\n+\t  (match_operand:VF_AVX512 2 \"register_operand\" \"0,v\")\n+\t  (match_operand:VF_AVX512 3 \"register_operand\" \"v,0\")))]\n   \"TARGET_AVX512F && <sd_mask_mode512bit_condition>\"\n   \"@\n    vfmadd132<ssemodesuffix>\\t{%1<avx512bcst>, %3, %0<sd_mask_op4>|%0<sd_mask_op4>, %3, %1<avx512bcst>}\n@@ -3775,10 +3775,10 @@\n (define_insn \"*<sd_mask_codefor>fma_fmadd_<mode><sd_maskz_name>_bcst_3\"\n   [(set (match_operand:VF_AVX512 0 \"register_operand\" \"=v,v\")\n \t(fma:VF_AVX512\n-\t  (match_operand:VF_AVX512 1 \"nonimmediate_operand\" \"0,v\")\n+\t  (match_operand:VF_AVX512 1 \"register_operand\" \"0,v\")\n \t  (vec_duplicate:VF_AVX512\n \t    (match_operand:<ssescalarmode> 2 \"memory_operand\" \"m,m\"))\n-\t  (match_operand:VF_AVX512 3 \"nonimmediate_operand\" \"v,0\")))]\n+\t  (match_operand:VF_AVX512 3 \"register_operand\" \"v,0\")))]\n   \"TARGET_AVX512F && <sd_mask_mode512bit_condition>\"\n   \"@\n    vfmadd132<ssemodesuffix>\\t{%2<avx512bcst>, %3, %0<sd_mask_op4>|%0<sd_mask_op4>, %3, %2<avx512bcst>}"}]}