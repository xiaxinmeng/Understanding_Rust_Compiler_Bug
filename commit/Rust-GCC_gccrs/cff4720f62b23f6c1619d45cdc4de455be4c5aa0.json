{"sha": "cff4720f62b23f6c1619d45cdc4de455be4c5aa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZmNDcyMGY2MmIyM2Y2YzE2MTlkNDVjZGM0ZGU0NTViZTRjNWFhMA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2007-03-26T20:45:01Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2007-03-26T20:45:01Z"}, "message": "gengtype-lex.l: Remove all rules and states relating to yacc input files.\n\n\t* gengtype-lex.l: Remove all rules and states relating to yacc\n\tinput files.\n\t* gengtype-yacc.y: Similarly.\n\t* gengtype.c (note_yacc_type): Delete function.\n\t* gengtype.h: Update prototypes.\n\nFrom-SVN: r123226", "tree": {"sha": "a6bd00357528f3023a17376c2bd46aadaeba03a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6bd00357528f3023a17376c2bd46aadaeba03a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cff4720f62b23f6c1619d45cdc4de455be4c5aa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff4720f62b23f6c1619d45cdc4de455be4c5aa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff4720f62b23f6c1619d45cdc4de455be4c5aa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff4720f62b23f6c1619d45cdc4de455be4c5aa0/comments", "author": null, "committer": null, "parents": [{"sha": "0227f9b9b23ec0fe7f9282782d9a99dcb4c8d361", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0227f9b9b23ec0fe7f9282782d9a99dcb4c8d361", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0227f9b9b23ec0fe7f9282782d9a99dcb4c8d361"}], "stats": {"total": 250, "additions": 49, "deletions": 201}, "files": [{"sha": "7375955a6417e8be98a32fe6ab3cacdadf874f17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 38, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cff4720f62b23f6c1619d45cdc4de455be4c5aa0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cff4720f62b23f6c1619d45cdc4de455be4c5aa0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cff4720f62b23f6c1619d45cdc4de455be4c5aa0", "patch": "@@ -1,3 +1,11 @@\n+2007-03-26  Zack Weinberg  <zackw@panix.com>\n+\n+\t* gengtype-lex.l: Remove all rules and states relating to yacc\n+\tinput files.\n+\t* gengtype-yacc.y: Similarly.\n+\t* gengtype.c (note_yacc_type): Delete function.\n+\t* gengtype.h: Update prototypes.\n+\n 2007-03-26  Joseph Myers  <joseph@codesourcery.com>\n \n \t* tree-pretty-print.c (dump_generic_node): Report precision of\n@@ -84,8 +92,8 @@\n \n 2007-03-25  Revital Eres  <eres@il.ibm.com>\n \n-        * tree-if-conv.c (if_convertible_gimple_modify_stmt_p):\n-          Fold movement_possibility function into it.\n+\t* tree-if-conv.c (if_convertible_gimple_modify_stmt_p):\n+\t  Fold movement_possibility function into it.\n \n 2007-03-25  David Edelsohn  <edelsohn@gnu.org>\n \n@@ -349,7 +357,7 @@\n \t* real.c (real_from_string): Return -1 if underflow, +1 if overflow\n \tand 0 otherwise.\n \t* real.h (real_from_string): Update declaration\n-\t\n+\n 2007-03-22  Kai Tietz  <kai.tietz@onevision.com>\n \t    Richard Henderson  <rth@redhat.com>\n \n@@ -380,7 +388,7 @@\n \tMacroize expander using SSEMODEF mode macro.  Use SSE_FLOAT_MODE_P.\n \t(*cmpfp_<mode>): Rename from *cmpfp_sf and *cmpfp_df. Macroize\n \tinsn pattern using X87MODEF12 mode macro.\n-\t\n+\n 2007-03-21  Seongbae Park <seongbae.park@gmail.com>\n \n \t* regmove.c (regmove_optimize): Use reg_mentioned_p\n@@ -520,11 +528,11 @@\n \t(xde, xdee): Mode attributes adjusted to support DFP modes.\n \t(RRer, f0, op1, Rf, bt, bfp, HALF_TMODE): New mode attributes added.\n \t(\"cmp<mode>\", \"*cmp<mode>_css_0\", \"*cmp<mode>_ccs\", TF move splitters,\n-\tDF move splitters, \"floatdi<mode>2\", \"add<mode>3\", \"*add<mode>3\", \n+\tDF move splitters, \"floatdi<mode>2\", \"add<mode>3\", \"*add<mode>3\",\n \t\"*add<mode>3_cc\", \"*add<mode>3_cconly\", \"sub<mode>3\", \"*sub<mode>3\",\n \t\"*sub<mode>3_cc\", \"*sub<mode>3_cconly\", \"mul<mode>3\", \"*mul<mode>3\",\n \t\"div<mode>3\", \"*div<mode>3\", \"*neg<mode>2_nocc\", \"*abs<mode>2_nocc\",\n-\t\"*negabs<mode>2_nocc\", \"copysign<mode>3\"): Adjusted to support DFP \n+\t\"*negabs<mode>2_nocc\", \"copysign<mode>3\"): Adjusted to support DFP\n \tnumbers.\n \t(\"*movtf_64\", \"*movtf_31\", \"*movdf_64dfp\", \"*movdf_64\", \"*movdf_31\",\n \t\"movsf\"): Insn definitions removed.\n@@ -600,7 +608,7 @@\n \tUpdate move patterns.\n \t* pa.c (hppa_fpstore_bypass_p): Check for both TYPE_FPSTORE_LOAD and\n \tTYPE_FPSTORE.\n-\t\n+\n 2007-03-18  Dorit Nuzman  <dorit@il.ibm.com>\n \n \t* tree-vect-transform.c (get_initial_def_for_induction): Replace\n@@ -615,14 +623,14 @@\n \t(value_dies_in_block_x): Update for rvuse removal.\n \t(valid_in_sets): Update for renaming of vuses_dies_in_block_x.\n \t(compute_antic_aux): Handle when PHI nodes appear in\n-\tnon-single-successors. \n+\tnon-single-successors.\n \t(dump_bitmap_of_names): Removed.\n \t(compute_antic_safe): Renamed and removed rvuse calculation.\n \tCalculate only antic safe.\n \t(insert_into_preds_of_block): Remove assert.\n \t(execute_pre): Update for renamed functions.\n \t(defer_or_phi_translate_block): New function.\n-\t\n+\n 2007-03-17  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* config/arm/arm.c, config/arm/thumb2.md, config/m68k/m68k.c,\n@@ -638,9 +646,9 @@\n \tPR tree-optimization/31041\n \t* tree-vect-transform.c (get_initial_def_for_induction): Call\n \tforce_gimple_operand.\n-\t\n+\n 2007-03-17  Olga Golovanevsky  <olga@il.ibm.com>\n-  \n+\n   \t* ipa-type-escape.c (look_for_casts) : Revert code to use\n \thandled_component_p due to ada test a-numaux.adb.\n \n@@ -660,7 +668,7 @@\n \t* c-common.c (convert_and_check): Move warning logic to...\n \t(warnings_for_convert_and_check): ...here. Define.\n \t* c-common.h (warnings_for_convert_and_check): Declare.\n-\t\n+\n 2007-03-16  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa.c (attr_length_call): Partially revert change of 2007-03-09.\n@@ -682,7 +690,7 @@\n 2007-03-16  Sebastian Pop  <sebastian.pop@inria.fr>\n \n \tPR tree-optimization/31183\n-\t* tree-loop-linear.c (gather_interchange_stats, try_interchange_loops): \n+\t* tree-loop-linear.c (gather_interchange_stats, try_interchange_loops):\n \tUse double_int instead of unsigned int for representing access_strides.\n \t* testsuite/gcc.dg/tree-ssa/pr31183.c: New.\n \n@@ -758,7 +766,7 @@\n \t* c-opts.c (c_common_post_options): Handle C++ post-processing here.\n \tSet also -pedantic-errors by default for the  preprocessor unless\n \t-fpermissive is given.\n-\t\n+\n 2007-03-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/29719\n@@ -830,7 +838,7 @@\n \t(TUNE_MOVE_M1_VIA_OR): Ditto.\n \t(TUNE_NOT_UNPAIRABLE): Ditto.\n \t(TUNE_NOT_VECTORMODE): Ditto.\n-\t\n+\n \t* config/i386/i386.c (ix86_tune_features): Fill in new tuning\n \toptions.\n \n@@ -959,7 +967,7 @@\n \tPR target/31123\n \t* pa.md (vdepi_ior): Don't allow zero length deposit.  Likewise for\n \ttwo unamed patterns.\n-\t\n+\n 2007-03-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.opt (mcx16, msahf): New options.\n@@ -1065,22 +1073,22 @@\n \telfos.h to tm_file.\n \n 2007-03-12  Olga Golovanevsky  <olga@il.ibm.com>\n-  \n+\n   \t* tree.h : Add multiple_of_p declaration.\n-  \t* fold-const.c (multiple_of_p): Make multiple_of_p public. \n+  \t* fold-const.c (multiple_of_p): Make multiple_of_p public.\n   \t* ipa-type-escape.c (results_of_malloc): Redundant.\n   \t(visited_stmts): New. Visited stmt for walk_use_def_chains.\n   \t(cast_type): Extended with new members.\n   \t(check_cast): Returns cast_type.\n   \t(cast): New structure for data of walk_use_def_chains.\n   \t(is_malloc_result, is_cast_from_non_pointer_1,\n-  \tis_cast_from_non_pointer, \n+  \tis_cast_from_non_pointer,\n   \tis_array_access_through_pointer_and_index): New functions.\n   \t(look_for_casts): Returns cast types.\n  \t(check_call): Returns void.\n   \t(okay_pointer_operation): Use support of pointer plus index,\n   \tpointer plus constant and allow all multiplications.\n-\t\n+\n 2007-03-11  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/31115\n@@ -1097,7 +1105,7 @@\n \n 2007-03-11  Ira Rosen  <irar@il.ibm.com>\n \n-\t* tree-data-ref.c (analyze_offset): Add a return value (bool) to \n+\t* tree-data-ref.c (analyze_offset): Add a return value (bool) to\n \tindicate success/failure of the analysis. Add negation to subtrahend\n \tin case of subtraction. Fail if both operands contain constants.\n \t(create_data_ref): Fail if analyze_offset fails.\n@@ -1336,30 +1344,30 @@\n \n \t* doc/loop.texi: Document the Omega linear constraints solver.\n \t* doc/invoke.texi: Document -fcheck-data-deps, omega-max-vars,\n-\tomega-max-geqs, omega-max-eqs, omega-max-wild-cards, \n-\tomega-hash-table-size, omega-max-keys, and \n+\tomega-max-geqs, omega-max-eqs, omega-max-wild-cards,\n+\tomega-hash-table-size, omega-max-keys, and\n \tomega-eliminate-redundant-constraints.\n \t* tree-pass.h (pass_check_data_deps): Declared.\n \t* omega.c: New.\n \t* omega.h: New.\n \t* timevar.def (TV_CHECK_DATA_DEPS): Declared.\n-\t* tree-ssa-loop.c (check_data_deps, gate_check_data_deps, \n+\t* tree-ssa-loop.c (check_data_deps, gate_check_data_deps,\n \tpass_check_data_deps): New.\n \t* tree-data-ref.c (init_data_ref): Remove declaration.\n \t(dump_data_dependence_relation): Dump DDR_INNER_LOOP.\n \t(analyze_array): Renamed init_array_ref, move up initializations.\n \t(init_data_ref): Renamed init_pointer_ref.  Moved before its call.\n \tRemoved arguments that are set to NULL.\n-\t(analyze_indirect_ref): Correct indentation, correct call to \n+\t(analyze_indirect_ref): Correct indentation, correct call to\n \tinit_pointer_ref.\n \t(object_analysis): Call init_array_ref instead of analyze_array.\n \t(initialize_data_dependence_relation): Initialize DDR_INNER_LOOP.\n \t(access_functions_are_affine_or_constant_p): Use DR_ACCESS_FNS instead\n \tof DR_ACCESS_FNS_ADDR.\n-\t(init_omega_eq_with_af, omega_extract_distance_vectors, \n+\t(init_omega_eq_with_af, omega_extract_distance_vectors,\n \tomega_setup_subscript, init_omega_for_ddr_1, init_omega_for_ddr,\n \tddr_consistent_p): New.\n-\t(compute_affine_dependence): Check consistency of ddrs when \n+\t(compute_affine_dependence): Check consistency of ddrs when\n \tflag_check_data_deps is passed.\n \t(analyze_all_data_dependences): Uncomment.\n \t(tree_check_data_deps): New.\n@@ -1373,7 +1381,7 @@\n \t(OBJS-common): Depend on omega.o.\n \t(omega.o): Define.\n \t* passes.c (pass_check_data_deps): Scheduled.\n-\t* params.def (PARAM_OMEGA_MAX_VARS, PARAM_OMEGA_MAX_GEQS, \n+\t* params.def (PARAM_OMEGA_MAX_VARS, PARAM_OMEGA_MAX_GEQS,\n \tPARAM_OMEGA_MAX_EQS, PARAM_OMEGA_MAX_WILD_CARDS,\n \tPARAM_OMEGA_HASH_TABLE_SIZE, PARAM_OMEGA_MAX_KEYS,\n \tPARAM_VECT_MAX_VERSION_CHECKS,\n@@ -1448,7 +1456,7 @@\n \t* builtins.def (lceil, lceilf, lceill, lfloor, lfloorf, lfloorl,\n \tllceil, llceilf, llceill, llfloor, llfloorf, llfloorl): Mark with\n \tATTR_CONST_NOTHROW_LIST.\n-\t\n+\n \t* fold-const.c (tree_expr_nonnegative_warnv_p): Handle\n \tFIX_TRUNC_EXPR.\n \n@@ -1549,7 +1557,7 @@\n \texpanding sahf based alternative. Emit sahf based sequence when\n \toptimizing for code size.\n \t* config/i386/i386.md (x86_sahf_1): Do not disable for\n-\tTARGET_64BIT, enable for TARGET_SAHF. \n+\tTARGET_64BIT, enable for TARGET_SAHF.\n \n 2007-03-08  Martin Michlmayr  <tbm@cyrius.com>\n \n@@ -1648,7 +1656,7 @@\n 2007-03-06  Anatoly Sokolov <aesok@post.ru>\n \n \t* config/avr/avr.c (avr_mcu_types): Add support for ATmega325P,\n-\tATmega3250P, ATmega329P, ATmega3290P, AT90USB82 and AT90USB162 \n+\tATmega3250P, ATmega329P, ATmega3290P, AT90USB82 and AT90USB162\n \tdevices.\n \t* config/avr/avr.h (LINK_SPEC, CRT_BINUTILS_SPECS): (Ditto.).\n \t* config/avr/t-avr (MULTILIB_MATCHES): (Ditto.).\n@@ -1721,13 +1729,13 @@\n \tx86_branch_hints, x86_use_sahf, x86_partial_reg_stall,\n \tx86_partial_flag_reg_stall, x86_use_himode_fiop, x86_use_simode_fiop,\n \tx86_use_mov0, x86_use_cltd, x86_read_modify_write, x86_read_modify,\n-\tx86_split_long_moves, x86_promote_QImode, x86_fast_prefix, \n+\tx86_split_long_moves, x86_promote_QImode, x86_fast_prefix,\n \tx86_single_stringop, x86_qimode_math, x86_promote_qi_regs,\n \tx86_himode_math, x86_promote_hi_regs, x86_sub_esp_4, x86_sub_esp_8,\n-\tx86_add_esp_4, x86_add_esp_8, x86_integer_DFmode_moves, \n-\tx86_partial_reg_dependency, x86_memory_mismatch_stall, \n+\tx86_add_esp_4, x86_add_esp_8, x86_integer_DFmode_moves,\n+\tx86_partial_reg_dependency, x86_memory_mismatch_stall,\n \tx86_prologue_using_move, x86_epilogue_using_move, x86_shift1,\n-\tx86_sse_partial_reg_dependency, x86_sse_split_regs, \n+\tx86_sse_partial_reg_dependency, x86_sse_split_regs,\n \tx86_sse_unaligned_move_optimal, x86_sse_typeless_stores,\n \tx86_sse_load0_by_pxor, x86_use_ffreep, x86_use_incdec,\n \tx86_inter_unit_moves, x86_ext_80387_constants, x86_four_jump_limit,\n@@ -1761,7 +1769,7 @@\n \tx86_epilogue_using_move, x86_decompose_lea,\n \tx86_arch_always_fancy_math_387, x86_shift1,\n \tx86_sse_partial_reg_dependency, x86_sse_split_regs,\n-\tx86_sse_unaligned_move_optimal, x86_sse_typeless_stores,\t\n+\tx86_sse_unaligned_move_optimal, x86_sse_typeless_stores,\n \tx86_sse_load0_by_pxor, x86_use_ffreep, x86_inter_unit_moves,\n \tx86_schedule, x86_use_bt, x86_cmpxchg, x86_cmpxchg8b, x86_xadd,\n \tx86_use_incdec, x86_pad_returns, x86_bswap,\n@@ -1985,7 +1993,7 @@\n \tin soft-float DFmode pattern.\n \t(movdf): Fail if operand1 is a CONST_DOUBLE and operand0 is a hard\n \tfloating register.\n-\t(movsf): Likewise. \n+\t(movsf): Likewise.\n \n 2007-03-05  Mike Stump  <mrs@apple.com>\n \n@@ -2078,7 +2086,7 @@\n \tPR other/30465\n \t* c-common.c (convert_and_check): Don't give warnings for\n \tconversion if 'expr' already overflowed.\n-\t\n+\n 2007-03-04  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/30744"}, {"sha": "27802e6e29c08641976bf2e0f3f0b27d4129050b", "filename": "gcc/gengtype-lex.l", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cff4720f62b23f6c1619d45cdc4de455be4c5aa0/gcc%2Fgengtype-lex.l", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cff4720f62b23f6c1619d45cdc4de455be4c5aa0/gcc%2Fgengtype-lex.l", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-lex.l?ref=cff4720f62b23f6c1619d45cdc4de455be4c5aa0", "patch": "@@ -57,7 +57,7 @@ WS\t[[:space:]]+\n IWORD\tshort|long|(un)?signed|char|int|HOST_WIDE_INT|HOST_WIDEST_INT|bool|size_t|BOOL_BITFIELD\n ITYPE\t{IWORD}({WS}{IWORD})*\n \n-%x in_struct in_struct_comment in_comment in_yacc_escape\n+%x in_struct in_struct_comment in_comment\n %option warn noyywrap nounput nodefault perf-report\n %option 8bit never-interactive\n %%\n@@ -233,12 +233,6 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n   return ENT_EXTERNSTATIC;\n }\n \n-^\"%union\"{WS}\"{\"{WS}/\"GTY\" {\n-  BEGIN(in_struct);\n-  update_lineno (yytext, yyleng);\n-  return ENT_YACCUNION;\n-}\n-\n ^\"DEF_VEC_\"[[:alnum:]_]*{WS}?\"(\"{WS}?{ID}{WS}?(\",\"{WS}?{ID}{WS}?)*\")\" {\n   char *macro, *arg;\n   unsigned macro_len, arg_len;\n@@ -279,8 +273,6 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n \n \"/*\"\t\t\t\t{ BEGIN(in_struct_comment); }\n \n-^\"%{\"\t\t\t\t{ BEGIN(in_yacc_escape); } /* } */\n-\n {WS}\t\t\t\t{ update_lineno (yytext, yyleng); }\n \n \"const\"/[^[:alnum:]_]\t\t/* don't care */\n@@ -342,10 +334,6 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n   yylval.s = (const char *) xmemdup (yytext+1, yyleng-2, yyleng-1);\n   return ARRAY;\n }\n-^\"%\"{ID}\t\t\t{\n-  yylval.s = (const char *) xmemdup (yytext+1, yyleng-1, yyleng);\n-  return PERCENT_ID;\n-}\n \"'\"(\"\\\\\".|[^\\\\])\"'\"\t\t{\n   yylval.s = (const char *) xmemdup (yytext+1, yyleng-2, yyleng);\n   return CHAR;\n@@ -362,11 +350,6 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n   return yytext[0];\n }\n \n-^\"%%\"\t\t\t\t{\n-  BEGIN(INITIAL);\n-  return PERCENTPERCENT;\n-}\n-\n \"#define\"[^\\n]*\\n\t\t{lexer_line.line++;}\n \n .\t\t\t\t{\n@@ -391,19 +374,6 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n <in_comment>\"*/\"\t{ BEGIN(INITIAL); } \n <in_struct_comment>\"*/\"\t{ BEGIN(in_struct); }\n \n-<in_yacc_escape>{\n-\\n\t\t{ lexer_line.line++; }\n-[^%]{16}\t|\n-[^%]\t\t/* do nothing */\n-\"%\"/[^}]\t/* do nothing */\n-\"%}\"\t\t{ BEGIN(in_struct); }\n-\"%\"\t\t{\n-  error_at_line (&lexer_line, \n-\t\t \"unterminated %%{; unexpected EOF\");\n-}\n-}\n-\n-\n [\"/]    \t\t|\n <in_struct_comment,in_comment>\"*\"\t{\n   error_at_line (&lexer_line, "}, {"sha": "2ce01e7fcd9d284403046a3f567545ce311c6773", "filename": "gcc/gengtype-yacc.y", "status": "modified", "additions": 2, "deletions": 71, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cff4720f62b23f6c1619d45cdc4de455be4c5aa0/gcc%2Fgengtype-yacc.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cff4720f62b23f6c1619d45cdc4de455be4c5aa0/gcc%2Fgengtype-yacc.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-yacc.y?ref=cff4720f62b23f6c1619d45cdc4de455be4c5aa0", "patch": "@@ -38,7 +38,6 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n %token <t>ENT_TYPEDEF_STRUCT\n %token <t>ENT_STRUCT\n %token ENT_EXTERNSTATIC\n-%token ENT_YACCUNION\n %token GTY_TOKEN\n %token UNION\n %token STRUCT\n@@ -47,15 +46,13 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n %token NESTED_PTR\n %token <s>PARAM_IS\n %token NUM\n-%token PERCENTPERCENT \"%%\"\n %token <t>SCALAR\n %token <s>ID\n %token <s>STRING\n %token <s>ARRAY\n-%token <s>PERCENT_ID\n %token <s>CHAR\n \n-%type <p> struct_fields yacc_ids yacc_typematch\n+%type <p> struct_fields\n %type <t> type lasttype\n %type <o> optionsopt options option optionseq optionseqopt\n %type <s> type_option stringseq\n@@ -65,7 +62,7 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n start: /* empty */\n        | typedef_struct start\n        | externstatic start\n-       | yacc_union start\n+       | start\n        ;\n \n typedef_struct: ENT_TYPEDEF_STRUCT options '{' struct_fields '}' ID\n@@ -116,72 +113,6 @@ semiequal: ';'\n \t   | '='\n \t   ;\n \n-yacc_union: ENT_YACCUNION options struct_fields '}' yacc_typematch\n-\t    PERCENTPERCENT\n-\t      {\n-\t        note_yacc_type ($2, $3, $5, &lexer_line);\n-\t      }\n-\t    ;\n-\n-yacc_typematch: /* empty */\n-\t\t   { $$ = NULL; }\n-\t\t| yacc_typematch PERCENT_ID yacc_ids\n-\t\t   {\n-\t\t     pair_p p;\n-\t\t     for (p = $3; p->next != NULL; p = p->next)\n-\t\t       {\n-\t\t         p->name = NULL;\n-\t\t\t p->type = NULL;\n-\t\t       }\n-\t\t     p->name = NULL;\n-\t\t     p->type = NULL;\n-\t\t     p->next = $1;\n-\t\t     $$ = $3;\n-\t\t   }\n-\t\t| yacc_typematch PERCENT_ID '<' ID '>' yacc_ids\n-\t\t   {\n-\t\t     pair_p p;\n-\t\t     type_p newtype = NULL;\n-\t\t     if (strcmp ($2, \"type\") == 0)\n-\t\t       newtype = (type_p) 1;\n-\t\t     for (p = $6; p->next != NULL; p = p->next)\n-\t\t       {\n-\t\t         p->name = $4;\n-\t\t         p->type = newtype;\n-\t\t       }\n-\t\t     p->name = $4;\n-\t\t     p->next = $1;\n-\t\t     p->type = newtype;\n-\t\t     $$ = $6;\n-\t\t   }\n-\t\t;\n-\n-yacc_ids: /* empty */\n-\t{ $$ = NULL; }\n-     | yacc_ids ID\n-        {\n-\t  pair_p p = XCNEW (struct pair);\n-\t  p->next = $1;\n-\t  p->line = lexer_line;\n-\t  p->opt = XNEW (struct options);\n-\t  p->opt->name = \"tag\";\n-\t  p->opt->next = NULL;\n-\t  p->opt->info = (char *)$2;\n-\t  $$ = p;\n-\t}\n-     | yacc_ids CHAR\n-        {\n-\t  pair_p p = XCNEW (struct pair);\n-\t  p->next = $1;\n-\t  p->line = lexer_line;\n-\t  p->opt = XNEW (struct options);\n-\t  p->opt->name = \"tag\";\n-\t  p->opt->next = NULL;\n-\t  p->opt->info = xasprintf (\"'%s'\", $2);\n-\t  $$ = p;\n-\t}\n-     ;\n-\n struct_fields: { $$ = NULL; }\n \t       | type optionsopt ID bitfieldopt ';' struct_fields\n \t          {"}, {"sha": "250712c577fc196ba3057913750e93cab6a0581c", "filename": "gcc/gengtype.c", "status": "modified", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cff4720f62b23f6c1619d45cdc4de455be4c5aa0/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cff4720f62b23f6c1619d45cdc4de455be4c5aa0/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=cff4720f62b23f6c1619d45cdc4de455be4c5aa0", "patch": "@@ -810,65 +810,6 @@ adjust_field_type (type_p t, options_p opt)\n   return t;\n }\n \n-/* Create a union for YYSTYPE, as yacc would do it, given a fieldlist FIELDS\n-   and information about the correspondence between token types and fields\n-   in TYPEINFO.  POS is used for error messages.  */\n-\n-void\n-note_yacc_type (options_p o, pair_p fields, pair_p typeinfo,\n-\t\tstruct fileloc *pos)\n-{\n-  pair_p p;\n-  pair_p *p_p;\n-\n-  for (p = typeinfo; p; p = p->next)\n-    {\n-      pair_p m;\n-\n-      if (p->name == NULL)\n-\tcontinue;\n-\n-      if (p->type == (type_p) 1)\n-\t{\n-\t  pair_p pp;\n-\t  int ok = 0;\n-\n-\t  for (pp = typeinfo; pp; pp = pp->next)\n-\t    if (pp->type != (type_p) 1\n-\t\t&& strcmp (pp->opt->info, p->opt->info) == 0)\n-\t      {\n-\t\tok = 1;\n-\t\tbreak;\n-\t      }\n-\t  if (! ok)\n-\t    continue;\n-\t}\n-\n-      for (m = fields; m; m = m->next)\n-\tif (strcmp (m->name, p->name) == 0)\n-\t  p->type = m->type;\n-      if (p->type == NULL)\n-\t{\n-\t  error_at_line (&p->line,\n-\t\t\t \"couldn't match fieldname `%s'\", p->name);\n-\t  p->name = NULL;\n-\t}\n-    }\n-\n-  p_p = &typeinfo;\n-  while (*p_p)\n-    {\n-      pair_p p = *p_p;\n-\n-      if (p->name == NULL\n-\t  || p->type == (type_p) 1)\n-\t*p_p = p->next;\n-      else\n-\tp_p = &p->next;\n-    }\n-\n-  do_typedef (\"YYSTYPE\", new_structure (\"yy_union\", 1, pos, typeinfo, o), pos);\n-}\n \f\n static void set_gc_used_type (type_p, enum gc_used_enum, type_p *);\n static void set_gc_used (pair_p);"}, {"sha": "7be47b804c4ea5c2f13efd169a987c338aaa2e3e", "filename": "gcc/gengtype.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cff4720f62b23f6c1619d45cdc4de455be4c5aa0/gcc%2Fgengtype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cff4720f62b23f6c1619d45cdc4de455be4c5aa0/gcc%2Fgengtype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.h?ref=cff4720f62b23f6c1619d45cdc4de455be4c5aa0", "patch": "@@ -144,8 +144,6 @@ extern options_p create_option (options_p, const char *name, const void *info);\n extern type_p adjust_field_type (type_p, options_p);\n extern void note_variable (const char *s, type_p t, options_p o,\n \t\t\t   struct fileloc *pos);\n-extern void note_yacc_type (options_p o, pair_p fields,\n-\t\t\t    pair_p typeinfo, struct fileloc *pos);\n \n /* Lexer and parser routines, most automatically generated.  */\n extern int yylex (void);"}]}