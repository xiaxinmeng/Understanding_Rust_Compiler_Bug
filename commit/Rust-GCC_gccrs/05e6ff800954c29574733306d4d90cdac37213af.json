{"sha": "05e6ff800954c29574733306d4d90cdac37213af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVlNmZmODAwOTU0YzI5NTc0NzMzMzA2ZDRkOTBjZGFjMzcyMTNhZg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-04-15T19:40:33Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2008-04-15T19:40:33Z"}, "message": "re PR fortran/35864 (Revision 133965 broke gfortran.dg/initialization_1.f90)\n\n2008-04-15  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/35864\n\t* expr.c (scalarize_intrinsic_call): Reorder identification of\n\tarray argument so that if one is not found a segfault does not\n\toccur.  Return FAILURE if all scalar arguments.\n\nFrom-SVN: r134329", "tree": {"sha": "59ee16cb04dea8003eed6c925cb18e68f36fa439", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59ee16cb04dea8003eed6c925cb18e68f36fa439"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05e6ff800954c29574733306d4d90cdac37213af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05e6ff800954c29574733306d4d90cdac37213af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05e6ff800954c29574733306d4d90cdac37213af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05e6ff800954c29574733306d4d90cdac37213af/comments", "author": null, "committer": null, "parents": [{"sha": "69c32ec801a7b3b42778231b8187e77b8c63d0f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69c32ec801a7b3b42778231b8187e77b8c63d0f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69c32ec801a7b3b42778231b8187e77b8c63d0f2"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "dd5ef5bef6a01953a6157ec836c41d5b2a8d1fe2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05e6ff800954c29574733306d4d90cdac37213af/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05e6ff800954c29574733306d4d90cdac37213af/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=05e6ff800954c29574733306d4d90cdac37213af", "patch": "@@ -1,3 +1,10 @@\n+2008-04-15  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/35864\n+\t* expr.c (scalarize_intrinsic_call): Reorder identification of\n+\tarray argument so that if one is not found a segfault does not\n+\toccur.  Return FAILURE if all scalar arguments.\n+\n 2008-04-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \t    Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "70914c14aaba76b7f127176db4740a09ef3e347b", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05e6ff800954c29574733306d4d90cdac37213af/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05e6ff800954c29574733306d4d90cdac37213af/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=05e6ff800954c29574733306d4d90cdac37213af", "patch": "@@ -1704,14 +1704,11 @@ scalarize_intrinsic_call (gfc_expr *e)\n   gfc_expr *expr, *old;\n   int n, i, rank[5], array_arg;\n \n-  old = gfc_copy_expr (e);\n-\n-\n   /* Find which, if any, arguments are arrays.  Assume that the old\n      expression carries the type information and that the first arg\n      that is an array expression carries all the shape information.*/\n   n = array_arg = 0;\n-  a = old->value.function.actual;\n+  a = e->value.function.actual;\n   for (; a; a = a->next)\n     {\n       n++;\n@@ -1723,7 +1720,9 @@ scalarize_intrinsic_call (gfc_expr *e)\n     }\n \n   if (!array_arg)\n-    goto cleanup;\n+    return FAILURE;\n+\n+  old = gfc_copy_expr (e);\n \n   gfc_free_constructor (expr->value.constructor);\n   expr->value.constructor = NULL;\n@@ -1763,7 +1762,7 @@ scalarize_intrinsic_call (gfc_expr *e)\n     }\n \n \n-  /* Using the first argument as the master, step through the array\n+  /* Using the array argument as the master, step through the array\n      calling the function for each element and advancing the array\n      constructors together.  */\n   ctor = args[array_arg - 1];"}]}