{"sha": "08c273bb9ca995bc8c8f58a3cbdb2be6a47765bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhjMjczYmI5Y2E5OTViYzhjOGY1OGEzY2JkYjJiZTZhNDc3NjViZA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-06-23T17:37:27Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-06-23T17:37:27Z"}, "message": "Fix expand_builtin_atomic_fetch_op for pre-op (PR80902)\n\n__atomic_add_fetch adds a value to some memory, and returns the result.\nIf there is no direct support for this, expand_builtin_atomic_fetch_op\nis asked to implement this as __atomic_fetch_add (which returns the\noriginal value of the mem), followed by the addition.  Now, the\n__atomic_add_fetch could have been a tail call, but we shouldn't\nperform the __atomic_fetch_add as a tail call: following code would\nnot be executed, and in fact thrown away because there is a barrier\nafter tail calls.\n\nThis fixes it.\n\n\n\tPR middle-end/80902\n\t* builtins.c (expand_builtin_atomic_fetch_op): If emitting code after\n\ta call, force the call to not be a tail call.\n\nFrom-SVN: r249603", "tree": {"sha": "89c7f9311baba6c0a9a0a452d30f482c63850b2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89c7f9311baba6c0a9a0a452d30f482c63850b2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08c273bb9ca995bc8c8f58a3cbdb2be6a47765bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c273bb9ca995bc8c8f58a3cbdb2be6a47765bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c273bb9ca995bc8c8f58a3cbdb2be6a47765bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c273bb9ca995bc8c8f58a3cbdb2be6a47765bd/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eded3fe59237591c17259f1b6df9174b25643673", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eded3fe59237591c17259f1b6df9174b25643673", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eded3fe59237591c17259f1b6df9174b25643673"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "ff2c7238ee662f81b2c0a26727a8f4d43ea27153", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c273bb9ca995bc8c8f58a3cbdb2be6a47765bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c273bb9ca995bc8c8f58a3cbdb2be6a47765bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08c273bb9ca995bc8c8f58a3cbdb2be6a47765bd", "patch": "@@ -1,3 +1,9 @@\n+2017-06-23  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR middle-end/80902\n+\t* builtins.c (expand_builtin_atomic_fetch_op): If emitting code after\n+\ta call, force the call to not be a tail call.\n+\n 2017-06-23  Jeff Law  <law@redhat.com>\n \n \t* doc/contrib.texi: Add entry for Steven Pemberton's work on"}, {"sha": "7e829ef1408c9b6feb5cc939c98dd77f9ca41995", "filename": "gcc/builtins.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08c273bb9ca995bc8c8f58a3cbdb2be6a47765bd/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08c273bb9ca995bc8c8f58a3cbdb2be6a47765bd/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=08c273bb9ca995bc8c8f58a3cbdb2be6a47765bd", "patch": "@@ -6079,6 +6079,12 @@ expand_builtin_atomic_fetch_op (machine_mode mode, tree exp, rtx target,\n   gcc_assert (TREE_OPERAND (addr, 0) == fndecl);\n   TREE_OPERAND (addr, 0) = builtin_decl_explicit (ext_call);\n \n+  /* If we will emit code after the call, the call can not be a tail call.\n+     If it is emitted as a tail call, a barrier is emitted after it, and\n+     then all trailing code is removed.  */\n+  if (!ignore)\n+    CALL_EXPR_TAILCALL (exp) = 0;\n+\n   /* Expand the call here so we can emit trailing code.  */\n   ret = expand_call (exp, target, ignore);\n "}]}