{"sha": "f8f575d7593b7a859326d6db477d93946fdbbbfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhmNTc1ZDc1OTNiN2E4NTkzMjZkNmRiNDc3ZDkzOTQ2ZmRiYmJmYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-12T16:15:19Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-11-12T16:15:19Z"}, "message": "Compare field offsets in operand_equal_p and OEP_ADDRESS_OF\n\n\t* fold-const.c (operand_compare::operand_equal_p): Compare field\n\toffsets in operand_equal_p and OEP_ADDRESS_OF.\n\t(operand_compare::hash_operand): Update.", "tree": {"sha": "59f389cd3cace7a6de2894b279ad813d09607152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59f389cd3cace7a6de2894b279ad813d09607152"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8f575d7593b7a859326d6db477d93946fdbbbfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8f575d7593b7a859326d6db477d93946fdbbbfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8f575d7593b7a859326d6db477d93946fdbbbfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8f575d7593b7a859326d6db477d93946fdbbbfc/comments", "author": null, "committer": null, "parents": [{"sha": "d21776ef90361e66401cd99c8ff0d98b46d3b0d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21776ef90361e66401cd99c8ff0d98b46d3b0d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d21776ef90361e66401cd99c8ff0d98b46d3b0d6"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "ddf18f27cb7e0d7f8335908fff0b9ba5e84a68b3", "filename": "gcc/fold-const.c", "status": "modified", "additions": 42, "deletions": 3, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8f575d7593b7a859326d6db477d93946fdbbbfc/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8f575d7593b7a859326d6db477d93946fdbbbfc/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f8f575d7593b7a859326d6db477d93946fdbbbfc", "patch": "@@ -3312,10 +3312,32 @@ operand_compare::operand_equal_p (const_tree arg0, const_tree arg1,\n \tcase COMPONENT_REF:\n \t  /* Handle operand 2 the same as for ARRAY_REF.  Operand 0\n \t     may be NULL when we're called to compare MEM_EXPRs.  */\n-\t  if (!OP_SAME_WITH_NULL (0)\n-\t      || !OP_SAME (1))\n+\t  if (!OP_SAME_WITH_NULL (0))\n \t    return false;\n+\t  /* Most of time we only need to compare FIELD_DECLs for equality.\n+\t     However when determining address look into actual offsets.\n+\t     These may match for unions and unshared record types.  */\n \t  flags &= ~OEP_ADDRESS_OF;\n+\t  if (!OP_SAME (1))\n+\t    {\n+\t      if (flags & OEP_ADDRESS_OF)\n+\t\t{\n+\t\t  if (TREE_OPERAND (arg0, 2)\n+\t\t      || TREE_OPERAND (arg1, 2))\n+\t\t    return OP_SAME_WITH_NULL (2);\n+\t\t  tree field0 = TREE_OPERAND (arg0, 1);\n+\t\t  tree field1 = TREE_OPERAND (arg1, 1);\n+\n+\t\t  if (!operand_equal_p (DECL_FIELD_OFFSET (field0),\n+\t\t\t\t\tDECL_FIELD_OFFSET (field1), flags)\n+\t\t      || !operand_equal_p (DECL_FIELD_BIT_OFFSET (field0),\n+\t\t\t\t\t   DECL_FIELD_BIT_OFFSET (field1),\n+\t\t\t\t\t   flags))\n+\t\t    return false;\n+\t\t}\n+\t      else\n+\t\treturn false;\n+\t    }\n \t  return OP_SAME_WITH_NULL (2);\n \n \tcase BIT_FIELD_REF:\n@@ -3787,9 +3809,26 @@ operand_compare::hash_operand (const_tree t, inchash::hash &hstate,\n \t      sflags = flags;\n \t      break;\n \n+\t    case COMPONENT_REF:\n+\t      if (sflags & OEP_ADDRESS_OF)\n+\t\t{\n+\t\t  hash_operand (TREE_OPERAND (t, 0), hstate, flags);\n+\t\t  if (TREE_OPERAND (t, 2))\n+\t\t    hash_operand (TREE_OPERAND (t, 2), hstate,\n+\t\t\t\t  flags & ~OEP_ADDRESS_OF);\n+\t\t  else\n+\t\t    {\n+\t\t      tree field = TREE_OPERAND (t, 1);\n+\t\t      hash_operand (DECL_FIELD_OFFSET (field),\n+\t\t\t\t    hstate, flags & ~OEP_ADDRESS_OF);\n+\t\t      hash_operand (DECL_FIELD_BIT_OFFSET (field),\n+\t\t\t\t    hstate, flags & ~OEP_ADDRESS_OF);\n+\t\t    }\n+\t\t  return;\n+\t\t}\n+\t      break;\n \t    case ARRAY_REF:\n \t    case ARRAY_RANGE_REF:\n-\t    case COMPONENT_REF:\n \t    case BIT_FIELD_REF:\n \t      sflags &= ~OEP_ADDRESS_OF;\n \t      break;"}]}