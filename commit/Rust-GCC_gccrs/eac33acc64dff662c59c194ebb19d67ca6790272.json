{"sha": "eac33acc64dff662c59c194ebb19d67ca6790272", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFjMzNhY2M2NGRmZjY2MmM1OWMxOTRlYmIxOWQ2N2NhNjc5MDI3Mg==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2005-02-08T13:41:08Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-02-08T13:41:08Z"}, "message": "expr.c (gfc_copy_expr): Don't copy 'op1' and 'op2' for EXPR_SUBSTRING.\n\nfortran/\n* expr.c (gfc_copy_expr): Don't copy 'op1' and 'op2' for\nEXPR_SUBSTRING.\n(gfc_is_constant_expr): Check 'ref' to determine if substring\nreference is constant.\n(gfc_simplify_expr): Simplify 'ref' instead of 'op1' and 'op2'.\n(check_init_expr, check_restricted): Check 'ref' instead of 'op1'\nand 'op2'.\n* module.c (mio_expr): Read / write 'ref' instead of 'op1' and 'op2'.\n\ntestsuite/\n* gfortran.dg/substr_1.f90: New test.\n\nFrom-SVN: r94735", "tree": {"sha": "88335b706b5071f059bdce822601ba05626dffcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88335b706b5071f059bdce822601ba05626dffcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eac33acc64dff662c59c194ebb19d67ca6790272", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eac33acc64dff662c59c194ebb19d67ca6790272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eac33acc64dff662c59c194ebb19d67ca6790272", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eac33acc64dff662c59c194ebb19d67ca6790272/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81122c446d94ea3f12fae0f28d6b436c577633d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81122c446d94ea3f12fae0f28d6b436c577633d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81122c446d94ea3f12fae0f28d6b436c577633d2"}], "stats": {"total": 49, "additions": 36, "deletions": 13}, "files": [{"sha": "b1918a3445afb613df38c17020c30b1fe993c801", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac33acc64dff662c59c194ebb19d67ca6790272/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac33acc64dff662c59c194ebb19d67ca6790272/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=eac33acc64dff662c59c194ebb19d67ca6790272", "patch": "@@ -1,3 +1,14 @@\n+2005-02-08  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* expr.c (gfc_copy_expr): Don't copy 'op1' and 'op2' for\n+\tEXPR_SUBSTRING.\n+\t(gfc_is_constant_expr): Check 'ref' to determine if substring\n+\treference is constant.\n+\t(gfc_simplify_expr): Simplify 'ref' instead of 'op1' and 'op2'.\n+\t(check_init_expr, check_restricted): Check 'ref' instead of 'op1'\n+\tand 'op2'.\n+\t* module.c (mio_expr): Read / write 'ref' instead of 'op1' and 'op2'.\n+\n 2005-02-07  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* gfortran.h (gfc_add_dimension, gfc_add_result, gfc_add_save,"}, {"sha": "3898f7afd6360bd9a0a9fdab26269f850dc62326", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac33acc64dff662c59c194ebb19d67ca6790272/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac33acc64dff662c59c194ebb19d67ca6790272/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=eac33acc64dff662c59c194ebb19d67ca6790272", "patch": "@@ -393,9 +393,6 @@ gfc_copy_expr (gfc_expr * p)\n       q->value.character.string = s;\n \n       memcpy (s, p->value.character.string, p->value.character.length + 1);\n-\n-      q->op1 = gfc_copy_expr (p->op1);\n-      q->op2 = gfc_copy_expr (p->op2);\n       break;\n \n     case EXPR_CONSTANT:\n@@ -699,7 +696,8 @@ gfc_is_constant_expr (gfc_expr * e)\n       break;\n \n     case EXPR_SUBSTRING:\n-      rv = gfc_is_constant_expr (e->op1) && gfc_is_constant_expr (e->op2);\n+      rv = (gfc_is_constant_expr (e->ref->u.ss.start)\n+\t    && gfc_is_constant_expr (e->ref->u.ss.end));\n       break;\n \n     case EXPR_STRUCTURE:\n@@ -1115,12 +1113,10 @@ gfc_simplify_expr (gfc_expr * p, int type)\n       break;\n \n     case EXPR_SUBSTRING:\n-      if (gfc_simplify_expr (p->op1, type) == FAILURE\n-\t  || gfc_simplify_expr (p->op2, type) == FAILURE)\n+      if (simplify_ref_chain (p->ref, type) == FAILURE)\n \treturn FAILURE;\n \n       /* TODO: evaluate constant substrings.  */\n-\n       break;\n \n     case EXPR_OP:\n@@ -1439,11 +1435,11 @@ check_init_expr (gfc_expr * e)\n       break;\n \n     case EXPR_SUBSTRING:\n-      t = check_init_expr (e->op1);\n+      t = check_init_expr (e->ref->u.ss.start);\n       if (t == FAILURE)\n \tbreak;\n \n-      t = check_init_expr (e->op2);\n+      t = check_init_expr (e->ref->u.ss.end);\n       if (t == SUCCESS)\n \tt = gfc_simplify_expr (e, 0);\n \n@@ -1662,11 +1658,11 @@ check_restricted (gfc_expr * e)\n       break;\n \n     case EXPR_SUBSTRING:\n-      t = gfc_specification_expr (e->op1);\n+      t = gfc_specification_expr (e->ref->u.ss.start);\n       if (t == FAILURE)\n \tbreak;\n \n-      t = gfc_specification_expr (e->op2);\n+      t = gfc_specification_expr (e->ref->u.ss.end);\n       if (t == SUCCESS)\n \tt = gfc_simplify_expr (e, 0);\n "}, {"sha": "12d52c419a90c13050b475ef81bc613851e24342", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac33acc64dff662c59c194ebb19d67ca6790272/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac33acc64dff662c59c194ebb19d67ca6790272/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=eac33acc64dff662c59c194ebb19d67ca6790272", "patch": "@@ -2483,8 +2483,7 @@ mio_expr (gfc_expr ** ep)\n     case EXPR_SUBSTRING:\n       e->value.character.string = (char *)\n \tmio_allocated_string (e->value.character.string);\n-      mio_expr (&e->op1);\n-      mio_expr (&e->op2);\n+      mio_ref_list (&e->ref);\n       break;\n \n     case EXPR_STRUCTURE:"}, {"sha": "f79666ef2bac3b8ff36958d3df765d00a4e6ce2f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac33acc64dff662c59c194ebb19d67ca6790272/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac33acc64dff662c59c194ebb19d67ca6790272/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eac33acc64dff662c59c194ebb19d67ca6790272", "patch": "@@ -1,3 +1,7 @@\n+2005-02-08  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* gfortran.dg/substr_1.f90: New test.\n+\n 2005-02-07  Richard Guenther  <rguenth@gcc.gnu.org>\n \n \tPR middle-end/19775"}, {"sha": "15ab390f9062b567c84807de92c485819cb7635d", "filename": "gcc/testsuite/gfortran.dg/substr_1.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eac33acc64dff662c59c194ebb19d67ca6790272/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubstr_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eac33acc64dff662c59c194ebb19d67ca6790272/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubstr_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubstr_1.f90?ref=eac33acc64dff662c59c194ebb19d67ca6790272", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+! we used to save the wrong components of a gfc_expr describing a\n+! substring of a constant string.  This yielded a segfault on\n+! translating the expressions read from the module.\n+module m\n+  character (*), parameter :: a = \"AABBCC\"(1:4)\n+end module m\n+\n+use m\n+character(4) :: b\n+b = a\n+end\n+"}]}