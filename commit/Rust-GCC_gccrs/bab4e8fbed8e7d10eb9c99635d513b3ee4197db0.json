{"sha": "bab4e8fbed8e7d10eb9c99635d513b3ee4197db0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFiNGU4ZmJlZDhlN2QxMGViOWM5OTYzNWQ1MTNiM2VlNDE5N2RiMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-12-09T16:55:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-12-09T16:55:35Z"}, "message": "re PR tree-optimization/35468 (LHS of assignment can be folded to a constant causing ICE)\n\n\tPR tree-optimization/35468\n\t* tree-ssa-ccp.c (fold_stmt_r): Don't fold reads from constant\n\tstring on LHS.\n\n\t* gcc.dg/pr35468.c: New test.\n\t* gcc.c-torture/compile/pr35468.c: New test.\n\nFrom-SVN: r142598", "tree": {"sha": "e1fc6db592f653e87c5ae59795210387846d1c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1fc6db592f653e87c5ae59795210387846d1c3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3b30b2401e192a42d4a75728dd198223573dd81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b30b2401e192a42d4a75728dd198223573dd81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b30b2401e192a42d4a75728dd198223573dd81"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "9c9ad1f199b98d0c539d8cfbb7b09376b261c612", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bab4e8fbed8e7d10eb9c99635d513b3ee4197db0", "patch": "@@ -1,3 +1,9 @@\n+2008-12-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/35468\n+\t* tree-ssa-ccp.c (fold_stmt_r): Don't fold reads from constant\n+\tstring on LHS.\n+\n 2008-12-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/38445"}, {"sha": "7cb6b4f26792be07fa4335663d620586806da3af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bab4e8fbed8e7d10eb9c99635d513b3ee4197db0", "patch": "@@ -1,3 +1,9 @@\n+2008-12-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/35468\n+\t* gcc.dg/pr35468.c: New test.\n+\t* gcc.c-torture/compile/pr35468.c: New test.\n+\n 2008-12-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/38410"}, {"sha": "16d064b62228682e3621cd9644718ed195c871df", "filename": "gcc/testsuite/gcc.c-torture/compile/pr35468.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35468.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35468.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr35468.c?ref=bab4e8fbed8e7d10eb9c99635d513b3ee4197db0", "patch": "@@ -0,0 +1,7 @@\n+/* PR tree-optimization/35468 */\n+\n+void\n+foo (void)\n+{\n+  *(char *) \"c\" = 'x';\n+}"}, {"sha": "085c073070c47d7980125dc4afee45266bf606d8", "filename": "gcc/testsuite/gcc.dg/pr35468.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35468.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35468.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35468.c?ref=bab4e8fbed8e7d10eb9c99635d513b3ee4197db0", "patch": "@@ -0,0 +1,10 @@\n+/* PR tree-optimization/35468 */\n+/* { dg-do compile  }*/\n+/* { dg-options \"-O2 -fno-tree-dce\" } */\n+\n+char *const f(void)\n+{\n+  char *const line = \"/dev/ptyXX\";\n+  line[8] = 1;\n+  return line;\n+}"}, {"sha": "0908d546f00b312103b9a2a8f3fbe45827601d3f", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab4e8fbed8e7d10eb9c99635d513b3ee4197db0/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=bab4e8fbed8e7d10eb9c99635d513b3ee4197db0", "patch": "@@ -2191,6 +2191,9 @@ fold_stmt_r (tree *expr_p, int *walk_subtrees, void *data)\n \n       t = maybe_fold_stmt_indirect (expr, TREE_OPERAND (expr, 0),\n \t\t\t\t    integer_zero_node);\n+      /* Avoid folding *\"abc\" = 5 into 'a' = 5.  */\n+      if (wi->is_lhs && t && TREE_CODE (t) == INTEGER_CST)\n+\tt = NULL_TREE;\n       if (!t\n \t  && TREE_CODE (TREE_OPERAND (expr, 0)) == ADDR_EXPR)\n \t/* If we had a good reason for propagating the address here,\n@@ -2219,8 +2222,10 @@ fold_stmt_r (tree *expr_p, int *walk_subtrees, void *data)\n \t Otherwise we'd be wasting time.  */\n     case ARRAY_REF:\n       /* If we are not processing expressions found within an\n-\t ADDR_EXPR, then we can fold constant array references.  */\n-      if (!*inside_addr_expr_p)\n+\t ADDR_EXPR, then we can fold constant array references.\n+\t Don't fold on LHS either, to avoid folding \"abc\"[0] = 5\n+\t into 'a' = 5.  */\n+      if (!*inside_addr_expr_p && !wi->is_lhs)\n \tt = fold_read_from_constant_string (expr);\n       else\n \tt = NULL;"}]}