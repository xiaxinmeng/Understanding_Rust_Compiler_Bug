{"sha": "f3ba16d0589db7548b76f381102759f2c4cc7558", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNiYTE2ZDA1ODlkYjc1NDhiNzZmMzgxMTAyNzU5ZjJjNGNjNzU1OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-03-06T08:48:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-03-06T08:48:01Z"}, "message": "gcc.c (PLUGIN_COND): Always enable unless -fno-use-linker-plugin or -fno-lto is specified and the...\n\n2014-03-06  Richard Biener  <rguenther@suse.de>\n\n\t* gcc.c (PLUGIN_COND): Always enable unless -fno-use-linker-plugin\n\tor -fno-lto is specified and the linker has full plugin support.\n\t* collect2.c (lto_mode): Default to LTO_MODE_WHOPR if LTO is\n\tenabled.\n\t(main): Remove -flto processing, adjust lto_mode using\n\tuse_plugin late.\n\t* lto-wrapper.c (merge_and_complain): Merge compile-time\n\toptimization levels.\n\t(run_gcc): And pass it through to the link options.\n\nFrom-SVN: r208375", "tree": {"sha": "fa7f9924d2c5057881344899e74b9fd4ecc3993d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa7f9924d2c5057881344899e74b9fd4ecc3993d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3ba16d0589db7548b76f381102759f2c4cc7558", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3ba16d0589db7548b76f381102759f2c4cc7558", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3ba16d0589db7548b76f381102759f2c4cc7558", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3ba16d0589db7548b76f381102759f2c4cc7558/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df2b279c5c77f5925e85246f3dbdad92508c573b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2b279c5c77f5925e85246f3dbdad92508c573b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df2b279c5c77f5925e85246f3dbdad92508c573b"}], "stats": {"total": 99, "additions": 94, "deletions": 5}, "files": [{"sha": "2a5b0069ea2d8da3eb1a58bc747bbd651ee5553c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ba16d0589db7548b76f381102759f2c4cc7558/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ba16d0589db7548b76f381102759f2c4cc7558/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3ba16d0589db7548b76f381102759f2c4cc7558", "patch": "@@ -1,3 +1,15 @@\n+2014-03-06  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.c (PLUGIN_COND): Always enable unless -fno-use-linker-plugin\n+\tor -fno-lto is specified and the linker has full plugin support.\n+\t* collect2.c (lto_mode): Default to LTO_MODE_WHOPR if LTO is\n+\tenabled.\n+\t(main): Remove -flto processing, adjust lto_mode using\n+\tuse_plugin late.\n+\t* lto-wrapper.c (merge_and_complain): Merge compile-time\n+\toptimization levels.\n+\t(run_gcc): And pass it through to the link options.\n+\n 2014-03-06  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR debug/60381"}, {"sha": "f0ab6b8c8f108e18f0c4a7c5474e99948b778fc0", "filename": "gcc/collect2.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ba16d0589db7548b76f381102759f2c4cc7558/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ba16d0589db7548b76f381102759f2c4cc7558/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=f3ba16d0589db7548b76f381102759f2c4cc7558", "patch": "@@ -192,7 +192,11 @@ enum lto_mode_d {\n };\n \n /* Current LTO mode.  */\n+#ifdef ENABLE_LTO\n+static enum lto_mode_d lto_mode = LTO_MODE_WHOPR;\n+#else\n static enum lto_mode_d lto_mode = LTO_MODE_NONE;\n+#endif\n \n bool debug;\t\t\t\t/* true if -debug */\n bool helpflag;\t\t\t/* true if --help */\n@@ -1018,15 +1022,11 @@ main (int argc, char **argv)\n \t  debug = true;\n         else if (! strcmp (argv[i], \"-flto-partition=none\"))\n \t  no_partition = true;\n-        else if ((! strncmp (argv[i], \"-flto=\", 6)\n-\t\t  || ! strcmp (argv[i], \"-flto\")) && ! use_plugin)\n-\t  lto_mode = LTO_MODE_WHOPR;\n \telse if (!strncmp (argv[i], \"-fno-lto\", 8))\n \t  lto_mode = LTO_MODE_NONE;\n         else if (! strcmp (argv[i], \"-plugin\"))\n \t  {\n \t    use_plugin = true;\n-\t    lto_mode = LTO_MODE_NONE;\n \t    if (selected_linker == USE_DEFAULT_LD)\n \t      selected_linker = USE_PLUGIN_LD;\n \t  }\n@@ -1056,6 +1056,8 @@ main (int argc, char **argv)\n       }\n     vflag = debug;\n     find_file_set_debug (debug);\n+    if (use_plugin)\n+      lto_mode = LTO_MODE_NONE;\n     if (no_partition && lto_mode == LTO_MODE_WHOPR)\n       lto_mode = LTO_MODE_LTO;\n   }"}, {"sha": "691623ae081f3e7a891ee97a2f645e4615fdf7fd", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ba16d0589db7548b76f381102759f2c4cc7558/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ba16d0589db7548b76f381102759f2c4cc7558/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f3ba16d0589db7548b76f381102759f2c4cc7558", "patch": "@@ -695,7 +695,7 @@ proper position among the other output files.  */\n #if HAVE_LTO_PLUGIN > 0\n /* The linker used has full plugin support, use LTO plugin by default.  */\n #if HAVE_LTO_PLUGIN == 2\n-#define PLUGIN_COND \"!fno-use-linker-plugin:%{flto|flto=*|fuse-linker-plugin\"\n+#define PLUGIN_COND \"!fno-use-linker-plugin:%{!fno-lto\"\n #define PLUGIN_COND_CLOSE \"}\"\n #else\n /* The linker used has limited plugin support, use LTO plugin with explicit"}, {"sha": "cf587cbc7573eba6bac51909fc51f07f3d7146a7", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3ba16d0589db7548b76f381102759f2c4cc7558/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3ba16d0589db7548b76f381102759f2c4cc7558/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=f3ba16d0589db7548b76f381102759f2c4cc7558", "patch": "@@ -459,6 +459,77 @@ merge_and_complain (struct cl_decoded_option **decoded_options,\n \t    fatal (\"Option %s not used consistently in all LTO input files\",\n \t\t   foption->orig_option_with_args_text);\n \t  break;\n+\n+\tcase OPT_O:\n+\tcase OPT_Ofast:\n+\tcase OPT_Og:\n+\tcase OPT_Os:\n+\t  for (j = 0; j < *decoded_options_count; ++j)\n+\t    if ((*decoded_options)[j].opt_index == OPT_O\n+\t\t|| (*decoded_options)[j].opt_index == OPT_Ofast\n+\t\t|| (*decoded_options)[j].opt_index == OPT_Og\n+\t\t|| (*decoded_options)[j].opt_index == OPT_Os)\n+\t      break;\n+\t  if (j == *decoded_options_count)\n+\t    append_option (decoded_options, decoded_options_count, foption);\n+\t  else if ((*decoded_options)[j].opt_index == foption->opt_index\n+\t\t   && foption->opt_index != OPT_O)\n+\t    /* Exact same options get merged.  */\n+\t    ;\n+\t  else\n+\t    {\n+\t      /* For mismatched option kinds preserve the optimization\n+\t         level only, thus merge it as -On.  This also handles\n+\t\t merging of same optimization level -On.  */\n+\t      int level = 0;\n+\t      switch (foption->opt_index)\n+\t\t{\n+\t\tcase OPT_O:\n+\t\t  if (foption->arg[0] == '\\0')\n+\t\t    level = MAX (level, 1);\n+\t\t  else\n+\t\t    level = MAX (level, atoi (foption->arg));\n+\t\t  break;\n+\t\tcase OPT_Ofast:\n+\t\t  level = MAX (level, 3);\n+\t\t  break;\n+\t\tcase OPT_Og:\n+\t\t  level = MAX (level, 1);\n+\t\t  break;\n+\t\tcase OPT_Os:\n+\t\t  level = MAX (level, 2);\n+\t\t  break;\n+\t\tdefault:\n+\t\t  gcc_unreachable ();\n+\t\t}\n+\t      switch ((*decoded_options)[j].opt_index)\n+\t\t{\n+\t\tcase OPT_O:\n+\t\t  if ((*decoded_options)[j].arg[0] == '\\0')\n+\t\t    level = MAX (level, 1);\n+\t\t  else\n+\t\t    level = MAX (level, atoi ((*decoded_options)[j].arg));\n+\t\t  break;\n+\t\tcase OPT_Ofast:\n+\t\t  level = MAX (level, 3);\n+\t\t  break;\n+\t\tcase OPT_Og:\n+\t\t  level = MAX (level, 1);\n+\t\t  break;\n+\t\tcase OPT_Os:\n+\t\t  level = MAX (level, 2);\n+\t\t  break;\n+\t\tdefault:\n+\t\t  gcc_unreachable ();\n+\t\t}\n+\t      (*decoded_options)[j].opt_index = OPT_O;\n+\t      char *tem;\n+\t      asprintf (&tem, \"-O%d\", level);\n+\t      (*decoded_options)[j].arg = &tem[2];\n+\t      (*decoded_options)[j].canonical_option[0] = tem;\n+\t      (*decoded_options)[j].value = 1;\n+\t    }\n+\t  break;\n \t}\n     }\n }\n@@ -610,6 +681,10 @@ run_gcc (unsigned argc, char *argv[])\n \tcase OPT_fwrapv:\n \tcase OPT_ftrapv:\n \tcase OPT_fstrict_overflow:\n+\tcase OPT_O:\n+\tcase OPT_Ofast:\n+\tcase OPT_Og:\n+\tcase OPT_Os:\n \t  break;\n \n \tdefault:"}]}