{"sha": "9cce91a63dcc40cb39e68f6a771e891e51c51946", "node_id": "C_kwDOANBUbNoAKDljY2U5MWE2M2RjYzQwY2IzOWU2OGY2YTc3MWU4OTFlNTFjNTE5NDY", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-12-05T21:38:53Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-12-06T21:38:46Z"}, "message": "libstdc++: Add casts for integer-like difference type [PR107871]\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/107871\n\t* include/std/format (_Iter_sink::_M_overflow): Add cast to\n\tsize_t.\n\t(_Iter_sink<CharT, contiguous_iterator auto>::_M_make_span): Use\n\ttypedef instead of decltype.\n\t* testsuite/std/format/functions/107871.cc: New test.", "tree": {"sha": "a7db307dafe760450366e7c45eecd29e9481d0ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7db307dafe760450366e7c45eecd29e9481d0ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cce91a63dcc40cb39e68f6a771e891e51c51946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cce91a63dcc40cb39e68f6a771e891e51c51946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cce91a63dcc40cb39e68f6a771e891e51c51946", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cce91a63dcc40cb39e68f6a771e891e51c51946/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5329e1a8e1480d536ff96283a6556e51112ba470", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5329e1a8e1480d536ff96283a6556e51112ba470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5329e1a8e1480d536ff96283a6556e51112ba470"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "1072e2c17db98e795bde607540b75f6fb1a11ddf", "filename": "libstdc++-v3/include/std/format", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cce91a63dcc40cb39e68f6a771e891e51c51946/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cce91a63dcc40cb39e68f6a771e891e51c51946/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat?ref=9cce91a63dcc40cb39e68f6a771e891e51c51946", "patch": "@@ -2481,12 +2481,12 @@ namespace __format\n \tauto __s = this->_M_used();\n \tif (_M_max < 0) // No maximum.\n \t  _M_out = ranges::copy(__s, std::move(_M_out)).out;\n-\telse if (_M_count < size_t(_M_max))\n+\telse if (_M_count < static_cast<size_t>(_M_max))\n \t  {\n \t    auto __max = _M_max - _M_count;\n \t    span<_CharT> __first;\n \t    if (__max < __s.size())\n-\t      __first = __s.first(__max);\n+\t      __first = __s.first(static_cast<size_t>(__max));\n \t    else\n \t      __first = __s;\n \t    _M_out = ranges::copy(__first, std::move(_M_out)).out;\n@@ -2564,11 +2564,11 @@ namespace __format\n \n \tif (__n > 0)\n \t  {\n-\t    if constexpr (!is_integral_v<decltype(__n)>\n+\t    if constexpr (!is_integral_v<iter_difference_t<_OutIter>>\n \t\t\t    || sizeof(__n) > sizeof(size_t))\n \t      {\n \t\t// __int128 or __detail::__max_diff_type\n-\t\tauto __m = (decltype(__n))(size_t)-1;\n+\t\tauto __m = iter_difference_t<_OutIter>((size_t)-1);\n \t\tif (__n > __m)\n \t\t  __n = __m;\n \t      }"}, {"sha": "1fb558e7ac6f73bdb2e84e21062d10c0415f4403", "filename": "libstdc++-v3/testsuite/std/format/functions/107871.cc", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cce91a63dcc40cb39e68f6a771e891e51c51946/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Fformat%2Ffunctions%2F107871.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cce91a63dcc40cb39e68f6a771e891e51c51946/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Fformat%2Ffunctions%2F107871.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Fformat%2Ffunctions%2F107871.cc?ref=9cce91a63dcc40cb39e68f6a771e891e51c51946", "patch": "@@ -0,0 +1,14 @@\n+// { dg-options \"-std=gnu++20\" }\n+// { dg-do compile { target c++20 } }\n+\n+#include <format>\n+\n+struct O {\n+  using difference_type = std::ranges::__detail::__max_diff_type;\n+  O& operator=(const char&);\n+  O& operator*();\n+  O& operator++();\n+  O& operator++(int);\n+};\n+\n+auto str = std::format_to_n(O{}, 4, \"{}\", \" \"); // PR libstdc++/107871"}]}