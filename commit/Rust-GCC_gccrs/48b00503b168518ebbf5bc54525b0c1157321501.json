{"sha": "48b00503b168518ebbf5bc54525b0c1157321501", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhiMDA1MDNiMTY4NTE4ZWJiZjViYzU0NTI1YjBjMTE1NzMyMTUwMQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2012-06-22T01:33:46Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2012-06-22T01:33:46Z"}, "message": "re PR debug/53671 (Many guality test failures)\n\nPR debug/53671\nPR debug/49888\n* var-tracking.c (vt_initialize): Record initial offset between\narg pointer and stack pointer.\n\nFrom-SVN: r188870", "tree": {"sha": "ef7bf49759547cb9a88926ff8e76ffea08a7c037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef7bf49759547cb9a88926ff8e76ffea08a7c037"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48b00503b168518ebbf5bc54525b0c1157321501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b00503b168518ebbf5bc54525b0c1157321501", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48b00503b168518ebbf5bc54525b0c1157321501", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b00503b168518ebbf5bc54525b0c1157321501/comments", "author": null, "committer": null, "parents": [{"sha": "4977e903b2372bdc2b7718faa1cdcd3d149f1b3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4977e903b2372bdc2b7718faa1cdcd3d149f1b3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4977e903b2372bdc2b7718faa1cdcd3d149f1b3c"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "4b812f6fb5212d88dd3967a7f1753a4159c66396", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b00503b168518ebbf5bc54525b0c1157321501/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b00503b168518ebbf5bc54525b0c1157321501/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48b00503b168518ebbf5bc54525b0c1157321501", "patch": "@@ -1,3 +1,10 @@\n+2012-06-21  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/53671\n+\tPR debug/49888\n+\t* var-tracking.c (vt_initialize): Record initial offset between\n+\targ pointer and stack pointer.\n+\n 2012-06-21  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/53671"}, {"sha": "9fdd25253796a8261836feb8bb577f265ee92d12", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b00503b168518ebbf5bc54525b0c1157321501/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b00503b168518ebbf5bc54525b0c1157321501/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=48b00503b168518ebbf5bc54525b0c1157321501", "patch": "@@ -9504,6 +9504,41 @@ vt_initialize (void)\n       valvar_pool = NULL;\n     }\n \n+  if (MAY_HAVE_DEBUG_INSNS)\n+    {\n+      rtx reg, expr;\n+      int ofst;\n+      cselib_val *val;\n+\n+#ifdef FRAME_POINTER_CFA_OFFSET\n+      reg = frame_pointer_rtx;\n+      ofst = FRAME_POINTER_CFA_OFFSET (current_function_decl);\n+#else\n+      reg = arg_pointer_rtx;\n+      ofst = ARG_POINTER_CFA_OFFSET (current_function_decl);\n+#endif\n+\n+      ofst -= INCOMING_FRAME_SP_OFFSET;\n+\n+      val = cselib_lookup_from_insn (reg, GET_MODE (reg), 1,\n+\t\t\t\t     VOIDmode, get_insns ());\n+      preserve_value (val);\n+      cselib_preserve_cfa_base_value (val, REGNO (reg));\n+      expr = plus_constant (GET_MODE (stack_pointer_rtx),\n+\t\t\t    stack_pointer_rtx, -ofst);\n+      cselib_add_permanent_equiv (val, expr, get_insns ());\n+\n+      if (ofst)\n+\t{\n+\t  val = cselib_lookup_from_insn (stack_pointer_rtx,\n+\t\t\t\t\t GET_MODE (stack_pointer_rtx), 1,\n+\t\t\t\t\t VOIDmode, get_insns ());\n+\t  preserve_value (val);\n+\t  expr = plus_constant (GET_MODE (reg), reg, ofst);\n+\t  cselib_add_permanent_equiv (val, expr, get_insns ());\n+\t}\n+    }\n+\n   /* In order to factor out the adjustments made to the stack pointer or to\n      the hard frame pointer and thus be able to use DW_OP_fbreg operations\n      instead of individual location lists, we're going to rewrite MEMs based"}]}