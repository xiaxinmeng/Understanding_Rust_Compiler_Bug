{"sha": "4c11675d61bdd9609e4a3e100e3e59eec85dbe4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMxMTY3NWQ2MWJkZDk2MDllNGEzZTEwMGUzZTU5ZWVjODVkYmU0ZQ==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2002-05-20T18:20:45Z"}, "committer": {"name": "Dale Johannesen", "email": "dalej@gcc.gnu.org", "date": "2002-05-20T18:20:45Z"}, "message": "Back out my previous patch; causes bootstrap problem for Ada (86 Linux)\n\nFrom-SVN: r53671", "tree": {"sha": "ae5edcab4ff4b95c9b7e7effb8b3eceec65d3aa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae5edcab4ff4b95c9b7e7effb8b3eceec65d3aa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c11675d61bdd9609e4a3e100e3e59eec85dbe4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c11675d61bdd9609e4a3e100e3e59eec85dbe4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c11675d61bdd9609e4a3e100e3e59eec85dbe4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c11675d61bdd9609e4a3e100e3e59eec85dbe4e/comments", "author": null, "committer": null, "parents": [{"sha": "6a4d67604e3bf62a35668b98cf87465d5be73ec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4d67604e3bf62a35668b98cf87465d5be73ec3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4d67604e3bf62a35668b98cf87465d5be73ec3"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "542f442a4263b815545020545c360c8605aa84d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c11675d61bdd9609e4a3e100e3e59eec85dbe4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c11675d61bdd9609e4a3e100e3e59eec85dbe4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c11675d61bdd9609e4a3e100e3e59eec85dbe4e", "patch": "@@ -1,3 +1,7 @@\n+2002-05-20  Dale Johannesen  <dalej@apple.com>\n+        * combine.c (cant_combine_insn_p):  Back out my\n+        previous patch.\n+\n 2002-05-20  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* params.c: Fix formatting."}, {"sha": "9415728d6307771834a90248c1e0c4b98507fe22", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c11675d61bdd9609e4a3e100e3e59eec85dbe4e/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c11675d61bdd9609e4a3e100e3e59eec85dbe4e/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=4c11675d61bdd9609e4a3e100e3e59eec85dbe4e", "patch": "@@ -1460,10 +1460,10 @@ cant_combine_insn_p (insn)\n   if (! INSN_P (insn))\n     return 1;\n \n-  /* Never combine loads and stores involving hard regs that are likely\n-     to be spilled.  The register allocator can usually handle such\n-     reg-reg moves by tying.  If we allow the combiner to make \n-     substitutions of likely-spilled regs, we may abort in reload.\n+  /* Never combine loads and stores involving hard regs.  The register\n+     allocator can usually handle such reg-reg moves by tying.  If we allow\n+     the combiner to make substitutions of hard regs, we risk aborting in\n+     reload on machines that have SMALL_REGISTER_CLASSES.\n      As an exception, we allow combinations involving fixed regs; these are\n      not available to the register allocator so there's no risk involved.  */\n \n@@ -1478,11 +1478,9 @@ cant_combine_insn_p (insn)\n     dest = SUBREG_REG (dest);\n   if (REG_P (src) && REG_P (dest)\n       && ((REGNO (src) < FIRST_PSEUDO_REGISTER\n-\t   && ! fixed_regs[REGNO (src)]\n-\t   && CLASS_LIKELY_SPILLED_P (REGNO_REG_CLASS (REGNO (src))))\n+\t   && ! fixed_regs[REGNO (src)])\n \t  || (REGNO (dest) < FIRST_PSEUDO_REGISTER\n-\t      && ! fixed_regs[REGNO (dest)]\n-\t      && CLASS_LIKELY_SPILLED_P (REGNO_REG_CLASS (REGNO (dest))))))\n+\t      && ! fixed_regs[REGNO (dest)])))\n     return 1;\n \n   return 0;"}]}