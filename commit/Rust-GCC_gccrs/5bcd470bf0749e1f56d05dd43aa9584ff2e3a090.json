{"sha": "5bcd470bf0749e1f56d05dd43aa9584ff2e3a090", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJjZDQ3MGJmMDc0OWUxZjU2ZDA1ZGQ0M2FhOTU4NGZmMmUzYTA5MA==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2019-12-20T01:20:19Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2019-12-20T01:20:19Z"}, "message": "Use gomp_map_val for OpenACC host-to-device address translation\n\n\tlibgomp/\n\t* libgomp.h (gomp_map_val): Add prototype.\n\t* oacc-parallel.c (GOACC_parallel_keyed): Use gomp_map_val instead of\n\topen-coding device-address calculation.\n\t* target.c (gomp_map_val): Make global. Use OFFSET_POINTER in\n\tnon-present case.\n\nCo-Authored-By: Cesar Philippidis <cesar@codesourcery.com>\n\nFrom-SVN: r279622", "tree": {"sha": "0ee2ecab91ac2cde55242703052242660832f5c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ee2ecab91ac2cde55242703052242660832f5c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "378da98fcc907d05002bcd3d6ff7951f0cf485e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/378da98fcc907d05002bcd3d6ff7951f0cf485e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/378da98fcc907d05002bcd3d6ff7951f0cf485e5"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "6c146217fe2540f6d2b9932aa4bf6917b7a85e7e", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5bcd470bf0749e1f56d05dd43aa9584ff2e3a090", "patch": "@@ -1,3 +1,12 @@\n+2019-12-19  Julian Brown  <julian@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* libgomp.h (gomp_map_val): Add prototype.\n+\t* oacc-parallel.c (GOACC_parallel_keyed): Use gomp_map_val instead of\n+\topen-coding device-address calculation.\n+\t* target.c (gomp_map_val): Make global. Use OFFSET_POINTER in\n+\tnon-present case.\n+\n 2019-12-19  Julian Brown  <julian@codesourcery.com>\n \n \t* libgomp.h (struct splay_tree_key_s): Substitute dynamic_refcount"}, {"sha": "8139cd7de08678c62efdc2b3153138fadc9e2884", "filename": "libgomp/libgomp.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090/libgomp%2Flibgomp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090/libgomp%2Flibgomp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.h?ref=5bcd470bf0749e1f56d05dd43aa9584ff2e3a090", "patch": "@@ -1157,6 +1157,7 @@ extern void gomp_copy_host2dev (struct gomp_device_descr *,\n extern void gomp_copy_dev2host (struct gomp_device_descr *,\n \t\t\t\tstruct goacc_asyncqueue *, void *, const void *,\n \t\t\t\tsize_t);\n+extern uintptr_t gomp_map_val (struct target_mem_desc *, void **, size_t);\n \n extern struct target_mem_desc *gomp_map_vars (struct gomp_device_descr *,\n \t\t\t\t\t      size_t, void **, void **,"}, {"sha": "c853f01b27f7390e4cee87b9f6785542bf1982d2", "filename": "libgomp/oacc-parallel.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090/libgomp%2Foacc-parallel.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090/libgomp%2Foacc-parallel.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-parallel.c?ref=5bcd470bf0749e1f56d05dd43aa9584ff2e3a090", "patch": "@@ -303,12 +303,8 @@ GOACC_parallel_keyed (int flags_m, void (*fn) (void *),\n   \n   devaddrs = gomp_alloca (sizeof (void *) * mapnum);\n   for (i = 0; i < mapnum; i++)\n-    if (tgt->list[i].key != NULL)\n-      devaddrs[i] = (void *) (tgt->list[i].key->tgt->tgt_start\n-\t\t\t      + tgt->list[i].key->tgt_offset\n-\t\t\t      + tgt->list[i].offset);\n-    else\n-      devaddrs[i] = NULL;\n+    devaddrs[i] = (void *) gomp_map_val (tgt, hostaddrs, i);\n+\n   if (aq == NULL)\n     acc_dev->openacc.exec_func (tgt_fn, mapnum, hostaddrs, devaddrs, dims,\n \t\t\t\ttgt);"}, {"sha": "ef8e9ab14fcd7c36b24498b36cdc2d827264a85d", "filename": "libgomp/target.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090/libgomp%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bcd470bf0749e1f56d05dd43aa9584ff2e3a090/libgomp%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftarget.c?ref=5bcd470bf0749e1f56d05dd43aa9584ff2e3a090", "patch": "@@ -493,7 +493,7 @@ gomp_map_fields_existing (struct target_mem_desc *tgt,\n \t      (void *) cur_node.host_end);\n }\n \n-static inline uintptr_t\n+attribute_hidden uintptr_t\n gomp_map_val (struct target_mem_desc *tgt, void **hostaddrs, size_t i)\n {\n   if (tgt->list[i].key != NULL)\n@@ -713,7 +713,7 @@ gomp_map_vars_internal (struct gomp_device_descr *devicep,\n \t    {\n \t      /* Not present, hence, skip entry - including its MAP_POINTER,\n \t\t when existing.  */\n-\t      tgt->list[i].offset = 0;\n+\t      tgt->list[i].offset = OFFSET_POINTER;\n \t      if (i + 1 < mapnum\n \t\t  && ((typemask & get_kind (short_mapkind, kinds, i + 1))\n \t\t      == GOMP_MAP_POINTER))"}]}