{"sha": "2e0aa43fc6ae689c595902310baec604e7e0d695", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUwYWE0M2ZjNmFlNjg5YzU5NTkwMjMxMGJhZWM2MDRlN2UwZDY5NQ==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-10-26T12:46:42Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-11-04T05:06:32Z"}, "message": "Don't extract memory from operand for normal memory constraint.\n\ngcc/ChangeLog\n\tPR target/97540\n\t* ira.c: (ira_setup_alts): Extract memory from operand only\n\tfor special memory constraint.\n\t* recog.c (asm_operand_ok): Ditto.\n\t* lra-constraints.c (process_alt_operands): MEM_P is\n\trequired for normal memory constraint.\n\ngcc/testsuite/ChangeLog\n\t* gcc.target/i386/pr97540.c: New test.", "tree": {"sha": "31a62ed7fb7e9699e169f994db289b256d687411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31a62ed7fb7e9699e169f994db289b256d687411"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e0aa43fc6ae689c595902310baec604e7e0d695", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0aa43fc6ae689c595902310baec604e7e0d695", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e0aa43fc6ae689c595902310baec604e7e0d695", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0aa43fc6ae689c595902310baec604e7e0d695/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db8b3e148d5cc5358cd48886e5334bd50d2d3317", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db8b3e148d5cc5358cd48886e5334bd50d2d3317", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db8b3e148d5cc5358cd48886e5334bd50d2d3317"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "050405f183311cc7f3917046b495dc15b64f482c", "filename": "gcc/ira.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0aa43fc6ae689c595902310baec604e7e0d695/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0aa43fc6ae689c595902310baec604e7e0d695/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=2e0aa43fc6ae689c595902310baec604e7e0d695", "patch": "@@ -1845,6 +1845,7 @@ ira_setup_alts (rtx_insn *insn)\n \t\t  default:\n \t\t    {\n \t\t      enum constraint_num cn = lookup_constraint (p);\n+\t\t      rtx mem = NULL;\n \t\t      switch (get_constraint_type (cn))\n \t\t\t{\n \t\t\tcase CT_REGISTER:\n@@ -1867,8 +1868,12 @@ ira_setup_alts (rtx_insn *insn)\n \t\t\t  goto op_success;\n \n \t\t\tcase CT_MEMORY:\n+\t\t\t  mem = op;\n+\t\t\t  /* Fall through.  */\n \t\t\tcase CT_SPECIAL_MEMORY:\n-\t\t\t  if (MEM_P (extract_mem_from_operand (op)))\n+\t\t\t  if (!mem)\n+\t\t\t    mem = extract_mem_from_operand (op);\n+\t\t\t  if (MEM_P (mem))\n \t\t\t    goto op_success;\n \t\t\t  win_p = true;\n \t\t\t  break;"}, {"sha": "fbc47baa998cc2b5a1d90e2ba029b07c95221f32", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0aa43fc6ae689c595902310baec604e7e0d695/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0aa43fc6ae689c595902310baec604e7e0d695/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=2e0aa43fc6ae689c595902310baec604e7e0d695", "patch": "@@ -2428,7 +2428,8 @@ process_alt_operands (int only_alternative)\n \t\t      break;\n \n \t\t    case CT_MEMORY:\n-\t\t      if (satisfies_memory_constraint_p (op, cn))\n+\t\t      if (MEM_P (op)\n+\t\t\t  && satisfies_memory_constraint_p (op, cn))\n \t\t\twin = true;\n \t\t      else if (spilled_pseudo_p (op))\n \t\t\twin = true;"}, {"sha": "6d8b7d560eed7f4785c3c870f641240787d4dbb3", "filename": "gcc/recog.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0aa43fc6ae689c595902310baec604e7e0d695/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0aa43fc6ae689c595902310baec604e7e0d695/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=2e0aa43fc6ae689c595902310baec604e7e0d695", "patch": "@@ -1794,6 +1794,7 @@ asm_operand_ok (rtx op, const char *constraint, const char **constraints)\n \t  /* FALLTHRU */\n \tdefault:\n \t  cn = lookup_constraint (constraint);\n+\t  rtx mem = NULL;\n \t  switch (get_constraint_type (cn))\n \t    {\n \t    case CT_REGISTER:\n@@ -1812,10 +1813,13 @@ asm_operand_ok (rtx op, const char *constraint, const char **constraints)\n \t      break;\n \n \t    case CT_MEMORY:\n+\t      mem = op;\n+\t      /* Fall through.  */\n \t    case CT_SPECIAL_MEMORY:\n \t      /* Every memory operand can be reloaded to fit.  */\n-\t      result = result || memory_operand (extract_mem_from_operand (op),\n-\t\t\t\t\t\t VOIDmode);\n+\t      if (!mem)\n+\t\tmem = extract_mem_from_operand (op);\n+\t      result = result || memory_operand (mem, VOIDmode);\n \t      break;\n \n \t    case CT_ADDRESS:"}, {"sha": "20f8717372cb4be2f0eae3b94e9580f5ac830cde", "filename": "gcc/testsuite/gcc.target/i386/pr97540.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0aa43fc6ae689c595902310baec604e7e0d695/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr97540.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0aa43fc6ae689c595902310baec604e7e0d695/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr97540.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr97540.c?ref=2e0aa43fc6ae689c595902310baec604e7e0d695", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int mt7615_add_interface_dev_0;\n+int ffs(int x) { asm(\"\" : : \"rm\"(x)); }\n+int mt7615_add_interface() { ffs(~mt7615_add_interface_dev_0); }"}]}