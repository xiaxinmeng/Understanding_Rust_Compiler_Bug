{"sha": "a24d975caa592f57e0966687ca0340714df9a6a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI0ZDk3NWNhYTU5MmY1N2UwOTY2Njg3Y2EwMzQwNzE0ZGY5YTZhMA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-09-18T13:31:34Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-09-18T13:31:34Z"}, "message": "re PR sanitizer/58443 (ubsan doesn't properly honor fsanitize= flags)\n\n2013-09-18  Marek Polacek  <polacek@redhat.com>\n\n\tPR sanitize/58443\ncp/\n\t* typeck.c (cp_build_binary_op): Properly honor -fsanitize options.\n\tRemove unnecessary check.\n\nc/\n\t* c-typeck.c (build_binary_op): Properly honor -fsanitize options.\n\tRemove unnecessary check.\n\ntestsuite/\n\t* g++.dg/ubsan/div-by-zero-1.C: Use the integer-divide-by-zero option\n\tinstead of the shift option.\n\t* c-c++-common/ubsan/pr58443-1.c: New test.\n\t* c-c++-common/ubsan/pr58443-3.c: New test.\n\t* c-c++-common/ubsan/pr58443-2.c: New test.\n\nFrom-SVN: r202701", "tree": {"sha": "97eab07355cd3cdcb2aa83c4500a803b8b9678d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97eab07355cd3cdcb2aa83c4500a803b8b9678d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a24d975caa592f57e0966687ca0340714df9a6a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24d975caa592f57e0966687ca0340714df9a6a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a24d975caa592f57e0966687ca0340714df9a6a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24d975caa592f57e0966687ca0340714df9a6a0/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0547c9b695fcbcd477f7e455c2bf376ce1ec23d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0547c9b695fcbcd477f7e455c2bf376ce1ec23d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0547c9b695fcbcd477f7e455c2bf376ce1ec23d1"}], "stats": {"total": 79, "additions": 70, "deletions": 9}, "files": [{"sha": "81b2018e8c04881296f063b2d02365e5cbc4964e", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=a24d975caa592f57e0966687ca0340714df9a6a0", "patch": "@@ -1,3 +1,9 @@\n+2013-09-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitize/58443\n+\t* c-typeck.c (build_binary_op): Properly honor -fsanitize options.\n+\tRemove unnecessary check.\n+\n 2013-09-18  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/58411"}, {"sha": "7ecafe4894c20452c842d5f1c5b56bdbd7410bc3", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=a24d975caa592f57e0966687ca0340714df9a6a0", "patch": "@@ -10496,7 +10496,7 @@ build_binary_op (location_t location, enum tree_code code,\n \treturn error_mark_node;\n     }\n \n-  if (flag_sanitize & SANITIZE_UNDEFINED\n+  if ((flag_sanitize & (SANITIZE_SHIFT | SANITIZE_DIVIDE))\n       && current_function_decl != 0\n       && !lookup_attribute (\"no_sanitize_undefined\",\n \t\t\t    DECL_ATTRIBUTES (current_function_decl))\n@@ -10507,9 +10507,9 @@ build_binary_op (location_t location, enum tree_code code,\n       op1 = c_save_expr (op1);\n       op0 = c_fully_fold (op0, false, NULL);\n       op1 = c_fully_fold (op1, false, NULL);\n-      if (doing_div_or_mod)\n+      if (doing_div_or_mod && (flag_sanitize & SANITIZE_DIVIDE))\n \tinstrument_expr = ubsan_instrument_division (location, op0, op1);\n-      else if (doing_shift)\n+      else if (doing_shift && (flag_sanitize & SANITIZE_SHIFT))\n \tinstrument_expr = ubsan_instrument_shift (location, code, op0, op1);\n     }\n \n@@ -10537,7 +10537,7 @@ build_binary_op (location_t location, enum tree_code code,\n     ret = build1 (EXCESS_PRECISION_EXPR, semantic_result_type, ret);\n   protected_set_expr_location (ret, location);\n \n-  if ((flag_sanitize & SANITIZE_UNDEFINED) && instrument_expr != NULL)\n+  if (instrument_expr != NULL)\n     ret = fold_build2 (COMPOUND_EXPR, TREE_TYPE (ret),\n \t\t       instrument_expr, ret);\n "}, {"sha": "d53fb51198b74409c1b6c3a0ee1e59cbb6a31614", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a24d975caa592f57e0966687ca0340714df9a6a0", "patch": "@@ -1,3 +1,9 @@\n+2013-09-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitize/58443\n+\t* typeck.c (cp_build_binary_op): Properly honor -fsanitize options.\n+\tRemove unnecessary check.\n+\n 2013-09-18  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/58411"}, {"sha": "bcb87825a1e2f329238e100604052ff7dc1d4135", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=a24d975caa592f57e0966687ca0340714df9a6a0", "patch": "@@ -4884,7 +4884,7 @@ cp_build_binary_op (location_t location,\n   if (build_type == NULL_TREE)\n     build_type = result_type;\n \n-  if ((flag_sanitize & SANITIZE_UNDEFINED)\n+  if ((flag_sanitize & (SANITIZE_SHIFT | SANITIZE_DIVIDE))\n       && !processing_template_decl\n       && current_function_decl != 0\n       && !lookup_attribute (\"no_sanitize_undefined\",\n@@ -4898,7 +4898,7 @@ cp_build_binary_op (location_t location,\n \t\t\t\t\t\t\t\t  tf_none));\n       op1 = maybe_constant_value (fold_non_dependent_expr_sfinae (op1,\n \t\t\t\t\t\t\t\t  tf_none));\n-      if (doing_div_or_mod)\n+      if (doing_div_or_mod && (flag_sanitize & SANITIZE_DIVIDE))\n \t{\n \t  /* For diagnostics we want to use the promoted types without\n \t     shorten_binary_op.  So convert the arguments to the\n@@ -4912,7 +4912,7 @@ cp_build_binary_op (location_t location,\n \t    }\n \t  instrument_expr = ubsan_instrument_division (location, cop0, cop1);\n \t}\n-      else if (doing_shift)\n+      else if (doing_shift && (flag_sanitize & SANITIZE_SHIFT))\n \tinstrument_expr = ubsan_instrument_shift (location, code, op0, op1);\n     }\n \n@@ -4926,7 +4926,7 @@ cp_build_binary_op (location_t location,\n       && !TREE_OVERFLOW_P (op1))\n     overflow_warning (location, result);\n \n-  if ((flag_sanitize & SANITIZE_UNDEFINED) && instrument_expr != NULL)\n+  if (instrument_expr != NULL)\n     result = fold_build2 (COMPOUND_EXPR, TREE_TYPE (result),\n \t\t\t  instrument_expr, result);\n "}, {"sha": "8fc51745109a2b52cc4c55e0766d10d5b98bdbdc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a24d975caa592f57e0966687ca0340714df9a6a0", "patch": "@@ -1,3 +1,12 @@\n+2013-09-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitize/58443\n+\t* g++.dg/ubsan/div-by-zero-1.C: Use the integer-divide-by-zero option\n+\tinstead of the shift option.\n+\t* c-c++-common/ubsan/pr58443-1.c: New test.\n+\t* c-c++-common/ubsan/pr58443-3.c: New test.\n+\t* c-c++-common/ubsan/pr58443-2.c: New test.\n+\n 2013-09-18  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/58417"}, {"sha": "76f1dda07a52e9c7f1df0cac9a3df0dffbe4655f", "filename": "gcc/testsuite/c-c++-common/ubsan/pr58443-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr58443-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr58443-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr58443-1.c?ref=a24d975caa592f57e0966687ca0340714df9a6a0", "patch": "@@ -0,0 +1,11 @@\n+/* PR sanitizer/58443 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=shift,unreachable -w\" } */\n+\n+int\n+foo (int u, int o)\n+{\n+  return u / o;\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ubsan_handle_divrem_overflow\" } } */"}, {"sha": "a135758a86f1dd8c38feb09e8a4f3342a53b6899", "filename": "gcc/testsuite/c-c++-common/ubsan/pr58443-2.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr58443-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr58443-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr58443-2.c?ref=a24d975caa592f57e0966687ca0340714df9a6a0", "patch": "@@ -0,0 +1,11 @@\n+/* PR sanitizer/58443 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=unreachable,integer-divide-by-zero -w\" } */\n+\n+int\n+foo (int u, int o)\n+{\n+  return u >> o;\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ubsan_handle_shift_out_of_bounds\" } } */"}, {"sha": "5696a62dffa988b425f7701cbbf46eab8cb0afc9", "filename": "gcc/testsuite/c-c++-common/ubsan/pr58443-3.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr58443-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr58443-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr58443-3.c?ref=a24d975caa592f57e0966687ca0340714df9a6a0", "patch": "@@ -0,0 +1,18 @@\n+/* PR sanitizer/58443 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=undefined -w\" } */\n+\n+int\n+foo (int u, int o)\n+{\n+  return u >> o;\n+}\n+\n+int\n+bar (int u, int o)\n+{\n+  return u / o;\n+}\n+\n+/* { dg-final { scan-assembler \"__ubsan_handle_divrem_overflow\" } } */\n+/* { dg-final { scan-assembler \"__ubsan_handle_shift_out_of_bounds\" } } */"}, {"sha": "88acfa1517eb045a81bf472ccfd93ddbc176fffc", "filename": "gcc/testsuite/g++.dg/ubsan/div-by-zero-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fdiv-by-zero-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a24d975caa592f57e0966687ca0340714df9a6a0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fdiv-by-zero-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fdiv-by-zero-1.C?ref=a24d975caa592f57e0966687ca0340714df9a6a0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-fsanitize=shift -w\" } */\n+/* { dg-options \"-fsanitize=integer-divide-by-zero -w\" } */\n \n void\n foo (int i)"}]}