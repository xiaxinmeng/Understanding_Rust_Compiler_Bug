{"sha": "bb4daba3460df28e1228e04f7d2a63712c709a7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI0ZGFiYTM0NjBkZjI4ZTEyMjhlMDRmN2QyYTYzNzEyYzcwOWE3ZQ==", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2005-12-09T17:14:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-12-09T17:14:34Z"}, "message": "mlib-tgt-vms-ia64.adb, [...] (Is_Interface): Change Ada bind file prefix on VMS from b$ to b__.\n\n2005-12-05  Doug Rupp  <rupp@adacore.com>\n\n\t* mlib-tgt-vms-ia64.adb, mlib-tgt-vms-alpha.adb (Is_Interface): Change\n\tAda bind file prefix on VMS from b$ to b__.\n\t(Build_Dynamic_Library): Change Init file suffix on VMS from $init to\n\t__init.\n\n\t* prj-nmsc.adb: Change some Hostparm.OpenVMS checks to\n\tTargparm.OpenVMS_On_Target.\n\t(Object_Suffix): Initialize with target object suffix.\n\t(Get_Unit): Change Ada bind file prefix on VMS from b$ to b__.\n\n\t* butil.adb: Change some Hostparm.OpenVMS checks to\n\tTargparm.OpenVMS_On_Target.\n\n\t* clean.adb: Change some Hostparm.OpenVMS checks to\n\tTargparm.OpenVMS_On_Target.\n\t(Object_Suffix): Initialize with call to Get_Target_Object_Suffix.\n\t({declaraction},Delete_Binder_Generated_Files,{initialization}): Change\n\tAda bind file prefix on VMS from b$ to b__.\n\n\t* gnatlink.adb (Process_Args): Call Add_Src_Search_Dir for -I in\n\t--GCC so that Get_Target_Parameters can find system.ads.\n\t(Gnatlink): Call Get_Target_Parameters in mainline.\n\tInitialize standard packages for Targparm.\n\tChange some Hostparm.OpenVMS checks to Targparm.OpenVMS_On_Target.\n\t(Process_Args): Also Check for object files with target object\n\textension.\n\t(Make_Binder_File_Names): Create with target object extension.\n\t(Make_Binder_File_Names): Change Ada bind file prefix on VMS from b$\n\tto b__.\n\n\t* mlib-prj.adb: Change some Hostparm.OpenVMS checks to\n\tTargparm.OpenVMS_On_Target.\n\t({declaration},Build_Library,Check_Library): Change Ada bind file\n\tprefix on VMS from b$ to b__.\n\n\t* osint-b.adb: Change some Hostparm.OpenVMS checks to\n\tTargparm.OpenVMS_On_Target.\n\t(Create_Binder_Output): Change Ada bind file prefix on VMS from b$ to\n\tb__.\n\n\t* targext.c: New file.\n\n\t* Makefile.in: add support for vxworks653 builds\n\t(../../vxaddr2line): gnatlink with targext.o.\n\t(TOOLS_LIBS): Move targext.o to precede libgnat.\n\t(init.o, initialize.o): Minor clean up in dependencies.\n\t(GNATLINK_OBJS): Add targparm.o, snames.o\n\tAdd rules fo building targext.o and linking it explicitly with all\n\ttools.\n\tAlso add targext.o to gnatlib.\n\n\t* Make-lang.in: Add rules for building targext.o and linking it in\n\twith gnat1 and gnatbind.\n\tAdd entry for exp_sel.o.\n\n\t* osint.adb Change some Hostparm.OpenVMS checks to\n\tTargparm.OpenVMS_On_Target.\n\t(Object_File_Name): Use target object suffix.\n\n\t* osint.ads (Object_Suffix): Remove, no longer used.\n\t(Target_Object_Suffix): Initialize with target object suffix.\n\n\t* rident.ads: Add special exception to license.\n\n\t* targparm.adb (Get_Target_Parameters): Set the value of\n\tMulti_Unit_Index_Character after OpenVMS_On_Target gets its definitive\n\tvalue.\n\t(Get_Target_Parameters): Set OpenVMS_On_Target if openvms.\n\t\n\t* targparm.ads: Add special exception to license.\n\n\t* g-os_lib.ads, g-os_lib.adb (Get_Target_Debuggable_Suffix): New\n\tfunction.\n\t(Copy_File): Make sure from file is closed if error on to file\n\t(Get_Target_Executable_Suffix, Get_Target_Object_Suffix): New functions.\n\n\t* make.adb (Object_Suffix): Intialize with Get_Target_Object_Suffix.\n\t(Executable_Suffix): Intialize with Get_Target_Executable_Suffix.\n\n\t* osint-c.adb (Set_Output_Object_File_Name): Initialize extension with\n\ttarget object suffix.\n\nFrom-SVN: r108285", "tree": {"sha": "a8d42a81e79abc47cb8938eacf7a68faab31a1df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8d42a81e79abc47cb8938eacf7a68faab31a1df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb4daba3460df28e1228e04f7d2a63712c709a7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb4daba3460df28e1228e04f7d2a63712c709a7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb4daba3460df28e1228e04f7d2a63712c709a7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb4daba3460df28e1228e04f7d2a63712c709a7e/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d744221db2ca7b17e1734998d8fb9a7b67608ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d744221db2ca7b17e1734998d8fb9a7b67608ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d744221db2ca7b17e1734998d8fb9a7b67608ca"}], "stats": {"total": 606, "additions": 435, "deletions": 171}, "files": [{"sha": "517dcbdbaf461700dfec7e32a83213ca125de9c6", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -121,10 +121,10 @@ GNAT_ADA_OBJS = ada/ada.o ada/a-charac.o ada/a-chlat1.o ada/a-except.o \\\n  ada/exp_ch4.o ada/exp_ch5.o ada/exp_ch6.o ada/exp_ch7.o ada/exp_ch8.o \\\n  ada/exp_ch9.o ada/exp_code.o ada/exp_dbug.o ada/exp_disp.o ada/exp_dist.o \\\n  ada/exp_fixd.o ada/exp_aggr.o ada/exp_imgv.o ada/exp_intr.o ada/exp_pakd.o \\\n- ada/exp_prag.o ada/exp_smem.o ada/exp_strm.o ada/exp_tss.o ada/exp_util.o \\\n- ada/exp_vfpt.o ada/expander.o ada/fname.o ada/fname-uf.o ada/fmap.o \\\n- ada/freeze.o ada/frontend.o ada/gnat.o ada/g-hesora.o ada/g-htable.o \\\n- ada/g-os_lib.o ada/g-speche.o ada/g-string.o ada/g-utf_32.o \\\n+ ada/exp_prag.o ada/exp_sel.o ada/exp_smem.o ada/exp_strm.o ada/exp_tss.o \\\n+ ada/exp_util.o ada/exp_vfpt.o ada/expander.o ada/fname.o ada/fname-uf.o \\\n+ ada/fmap.o ada/freeze.o ada/frontend.o ada/gnat.o ada/g-hesora.o \\\n+ ada/g-htable.o ada/g-os_lib.o ada/g-speche.o ada/g-string.o ada/g-utf_32.o \\\n  ada/s-crc32.o ada/get_targ.o \\\n  ada/gnatvsn.o ada/hlo.o ada/hostparm.o ada/impunit.o ada/interfac.o \\\n  ada/itypes.o ada/inline.o ada/krunch.o ada/lib.o ada/layout.o ada/lib-load.o \\\n@@ -148,7 +148,7 @@ GNAT_ADA_OBJS = ada/ada.o ada/a-charac.o ada/a-chlat1.o ada/a-except.o \\\n  ada/stylesw.o ada/validsw.o ada/system.o ada/table.o ada/targparm.o \\\n  ada/tbuild.o ada/tree_gen.o ada/tree_io.o ada/treepr.o ada/treeprs.o \\\n  ada/ttypef.o ada/ttypes.o ada/types.o ada/uintp.o ada/uname.o ada/urealp.o \\\n- ada/usage.o ada/widechar.o ada/s-crtl.o ada/seh_init.o\n+ ada/usage.o ada/widechar.o ada/s-crtl.o ada/seh_init.o ada/targext.o\n \n # Object files for gnat executables\n GNAT1_ADA_OBJS = $(GNAT_ADA_OBJS) ada/back_end.o ada/gnat1drv.o\n@@ -166,6 +166,7 @@ GNATBIND_OBJS = \\\n  ada/initialize.o \\\n  ada/seh_init.o   \\\n  ada/link.o       \\\n+ ada/targext.o    \\\n  ada/raise.o      \\\n  ada/tracebak.o   \\\n  ada/a-except.o   \\\n@@ -491,7 +492,7 @@ ada.install-common:\n \t    if [ -d $(DESTDIR)$(tooldir)/bin/. ] ; then \\\n \t       rm -f $(DESTDIR)$(tooldir)/bin/gnatchop$(exeext); \\\n \t       $(INSTALL_PROGRAM) gnatchop-cross$(exeext) $(DESTDIR)$(tooldir)/bin/gnatchop$(exeext); \\\n-            fi; \\\n+\t    fi ; \\\n \t  else \\\n \t    $(RM) $(DESTDIR)$(bindir)/gnatchop$(exeext); \\\n \t    $(INSTALL_PROGRAM) gnatchop$(exeext) $(DESTDIR)$(bindir)/gnatchop$(exeext); \\\n@@ -1017,6 +1018,11 @@ ada/exit.o     : ada/exit.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n ada/final.o    : ada/final.c $(CONFIG_H) $(SYSTEM_H) ada/raise.h\n ada/link.o     : ada/link.c\n \n+\n+ada/targext.o : ada/targext.c $(SYSTEM_H) coretypes.h $(TM_H)\n+\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t\t$< $(OUTPUT_OPTION)\n+\n ada/cio.o     : ada/cio.c $(CONFIG_H) $(SYSTEM_H) ada/adaint.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n@@ -1050,7 +1056,7 @@ ada/decl.o : ada/decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    gt-ada-decl.h $(EXPR_H)\n \n ada/misc.o : ada/misc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n-   $(RTL_H) $(EXPR_H) insn-codes.h insn-flags.h recog.h flags.h \\\n+   $(RTL_H) $(EXPR_H) insn-codes.h insn-flags.h insn-config.h recog.h flags.h \\\n    diagnostic.h output.h except.h $(TM_P_H) langhooks.h debug.h \\\n    $(LANGHOOKS_DEF_H) libfuncs.h $(OPTABS_H) ada/ada.h ada/types.h \\\n    ada/atree.h ada/nlists.h ada/elists.h ada/sinfo.h ada/einfo.h ada/namet.h \\"}, {"sha": "708d4e42d5f3b313b0c805a8a67996868731fe84", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 71, "deletions": 15, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -247,7 +247,7 @@ LIBS = $(LIBINTL) $(LIBIBERTY) $(SYSLIBS)\n LIBDEPS = $(LIBINTL_DEP) $(LIBIBERTY)\n # Default is no TGT_LIB; one might be passed down or something\n TGT_LIB =\n-TOOLS_LIBS = $(LIBGNAT) $(EXTRA_GNATTOOLS_OBJS) link.o ../../../libiberty/libiberty.a $(SYSLIBS) $(TGT_LIB)\n+TOOLS_LIBS = $(EXTRA_GNATTOOLS_OBJS) targext.o link.o $(LIBGNAT) ../../../libiberty/libiberty.a $(SYSLIBS) $(TGT_LIB)\n \n # Specify the directories to be searched for header files.\n # Both . and srcdir are used, in that order,\n@@ -296,10 +296,11 @@ Makefile: ../config.status $(srcdir)/Makefile.in $(srcdir)/../version.c\n # Lists of files for various purposes.\n \n GNATLINK_OBJS = gnatlink.o \\\n- a-except.o ali.o alloc.o butil.o casing.o csets.o debug.o fmap.o fname.o gnatvsn.o \\\n- hostparm.o indepsw.o interfac.o i-c.o i-cstrin.o namet.o opt.o osint.o output.o rident.o \\\n- s-exctab.o s-secsta.o s-stalib.o s-stoele.o sdefault.o stylesw.o switch.o system.o \\\n- table.o tree_io.o types.o validsw.o widechar.o\n+ a-except.o ali.o alloc.o butil.o casing.o csets.o debug.o fmap.o fname.o \\\n+ gnatvsn.o hostparm.o indepsw.o interfac.o i-c.o i-cstrin.o namet.o opt.o \\\n+ osint.o output.o rident.o s-exctab.o s-secsta.o s-stalib.o s-stoele.o \\\n+ sdefault.o snames.o stylesw.o switch.o system.o table.o targparm.o tree_io.o \\\n+ types.o validsw.o widechar.o\n \n GNATMAKE_OBJS = a-except.o ctrl_c.o ali.o ali-util.o s-casuti.o \\\n  alloc.o atree.o binderr.o butil.o casing.o csets.o debug.o elists.o einfo.o\\\n@@ -595,6 +596,56 @@ ifeq ($(strip $(filter-out mips% wrs vx%,$(targ))),)\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o\n endif\n \n+# vxworksae / vxworks 653\n+ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n+  # target pairs for kernel + vthreads runtime\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-elchha.adb<a-elchha-vxworks-ppc-full.adb \\\n+  a-intnam.ads<a-intnam-vxworks.ads \\\n+  a-numaux.ads<a-numaux-vxworks.ads \\\n+  a-sytaco.ads<1asytaco.ads \\\n+  a-sytaco.adb<1asytaco.adb \\\n+  g-io.adb<g-io-vxworks-ppc-cert.adb \\\n+  g-io.ads<g-io-vxworks-ppc-cert.ads \\\n+  s-inmaop.adb<s-inmaop-posix.adb \\\n+  s-interr.adb<s-interr-vxworks.adb \\\n+  s-intman.ads<s-intman-vxworks.ads \\\n+  s-intman.adb<s-intman-vxworks.adb \\\n+  s-osinte.adb<s-osinte-vxworks.adb \\\n+  s-osinte.ads<s-osinte-vxworks.ads \\\n+  s-osprim.adb<s-osprim-vxworks.adb \\\n+  s-parame.ads<s-parame-ae653.ads \\\n+  s-taprop.adb<s-taprop-vxworks.adb \\\n+  s-taspri.ads<s-taspri-vxworks.ads \\\n+  s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n+  s-vxwork.ads<s-vxwork-ppc.ads \\\n+  g-soccon.ads<g-soccon-vxworks.ads \\\n+  g-socthi.ads<g-socthi-vxworks.ads \\\n+  g-socthi.adb<g-socthi-vxworks.adb \\\n+  system.ads<system-vxworks-ppc-vthread.ads\n+\n+  TOOLS_TARGET_PAIRS=mlib-tgt.adb<mlib-tgt-vxworks.adb\n+\n+  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n+  EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o\n+\n+  # Extra pairs for the vthreads runtime\n+  ifeq ($(strip $(filter-out vthreads,$(THREAD_KIND))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+    s-thread.adb<s-thread-ae653.adb\n+    EXTRA_GNATRTL_NONTASKING_OBJS += s-thread.o\n+  endif\n+\n+  ifeq ($(strip $(filter-out yes,$(TRACE))),)\n+    LIBGNAT_TARGET_PAIRS += \\\n+    s-traces.adb<s-traces-default.adb \\\n+    s-trafor.adb<s-trafor-default.adb \\\n+    s-trafor.ads<s-trafor-default.ads \\\n+    s-tratas.adb<s-tratas-default.adb \\\n+    s-tfsetr.adb<s-tfsetr-vxworks.adb\n+  endif\n+endif\n+\n ifeq ($(strip $(filter-out sparc sun solaris%,$(targ))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-solaris.ads \\\n@@ -1335,11 +1386,11 @@ LIBGNAT_SRCS = ada.h adaint.c adaint.h argv.c cio.c cstreams.c \\\n   errno.c exit.c cal.c ctrl_c.c \\\n   raise.h raise.c sysdep.c aux-io.c init.c initialize.c seh_init.c \\\n   final.c tracebak.c tb-alvms.c tb-alvxw.c expect.c mkdir.c socket.c gsocket.h \\\n-  $(EXTRA_LIBGNAT_SRCS)\n+  targext.c $(EXTRA_LIBGNAT_SRCS)\n \n LIBGNAT_OBJS = adaint.o argv.o cio.o cstreams.o ctrl_c.o errno.o exit.o \\\n   raise.o sysdep.o aux-io.o init.o initialize.o seh_init.o cal.o \\\n-  final.o tracebak.o expect.o mkdir.o socket.o $(EXTRA_LIBGNAT_OBJS)\n+  final.o tracebak.o expect.o mkdir.o socket.o targext.o $(EXTRA_LIBGNAT_OBJS)\n \n # NOTE ??? - when the -I option for compiling Ada code is made to work,\n #  the library installation will change and there will be a\n@@ -1445,12 +1496,12 @@ endif\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) $(GNATBIND_FLAGS) gnatdll\n \t$(GNATLINK) -v gnatdll -o $@ --GCC=$(GCC_LINK) $(TOOLS_LIBS)\n \n-../../vxaddr2line$(exeext): \n+../../vxaddr2line$(exeext): targext.o\n \t$(GNATMAKE) -c  $(ADA_INCLUDES) vxaddr2line --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) vxaddr2line \n-\t$(GNATLINK) -v vxaddr2line -o $@ --GCC=$(GCC_LINK) $(CLIB)\n+\t$(GNATLINK) -v vxaddr2line -o $@ --GCC=$(GCC_LINK) targext.o $(CLIB)\n \n-gnatmake-re:  link.o\n+gnatmake-re:  link.o targext.o\n \t$(GNATMAKE) $(ADA_INCLUDES) -u sdefault --GCC=\"$(CC) $(MOST_ADA_FLAGS)\"\n \t$(GNATMAKE) -c $(ADA_INCLUDES) gnatmake --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatmake \n@@ -1459,7 +1510,7 @@ gnatmake-re:  link.o\n \n # Note the use of the \"mv\" command in order to allow gnatlink to be linked with\n # with the former version of gnatlink itself which cannot override itself.\n-gnatlink-re:  link.o\n+gnatlink-re:  link.o targext.o\n \t$(GNATMAKE) -c $(ADA_INCLUDES) gnatlink --GCC=\"$(CC) $(ALL_ADAFLAGS)\"\n \t$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatlink \n \t$(GNATLINK) -v gnatlink -o ../../gnatlinknew$(exeext) \\\n@@ -1471,11 +1522,11 @@ gnatlink-re:  link.o\n #  stamp target in the parent directory whenever gnat1 is rebuilt\n \n # Likewise for the tools\n-../../gnatmake$(exeext): $(P) b_gnatm.o link.o $(GNATMAKE_OBJS)\n+../../gnatmake$(exeext): $(P) b_gnatm.o link.o targext.o $(GNATMAKE_OBJS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ b_gnatm.o $(GNATMAKE_OBJS) \\\n \t      $(TOOLS_LIBS)\n \n-../../gnatlink$(exeext): $(P) b_gnatl.o link.o $(GNATLINK_OBJS)\n+../../gnatlink$(exeext): $(P) b_gnatl.o link.o targext.o $(GNATLINK_OBJS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ b_gnatl.o $(GNATLINK_OBJS) \\\n \t      $(TOOLS_LIBS)\n \n@@ -1869,14 +1920,19 @@ cio.o     : cio.c\n \t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-init.o    : init.c ada.h types.h raise.h\n+init.o    : init.c adaint.h raise.h\n \t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-initialize.o : initialize.c\n+initialize.o : initialize.c raise.h\n \t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n \t         $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n+targext.o : targext.c\n+\t$(CC) -c $(ALL_CFLAGS) $(ADA_CFLAGS) \\\n+\t\t$(ALL_CPPFLAGS) $(INCLUDES_FOR_SUBDIR) \\\n+\t\t$< $(OUTPUT_OPTION)\n+\n # No optimization to compile this file as optimizations (-O1 or above) breaks\n # the SEH handling on Windows. The reasons are not clear.\n seh_init.o : seh_init.c raise.h"}, {"sha": "fe630890494d3423c7d00577861b11d7e0aa0d3b", "filename": "gcc/ada/butil.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fbutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fbutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbutil.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -24,9 +24,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Hostparm; use Hostparm;\n with Namet;    use Namet;\n with Output;   use Output;\n+with Targparm; use Targparm;\n \n package body Butil is\n \n@@ -45,11 +45,11 @@ package body Butil is\n                                or else\n                              Name_Buffer (1 .. 5) = \"gnat.\"))\n         or else\n-          (OpenVMS\n-             and then Name_Len > 3\n-             and then (Name_Buffer (1 .. 4) = \"dec%\"\n-                         or else\n-                       Name_Buffer (1 .. 4) = \"dec.\"));\n+          (OpenVMS_On_Target\n+           and then Name_Len > 3\n+           and then (Name_Buffer (1 .. 4) = \"dec%\"\n+                      or else\n+                     Name_Buffer (1 .. 4) = \"dec.\"));\n \n    end Is_Internal_Unit;\n "}, {"sha": "5d8fc0d273dce8cd300bc3b3a650518ec2c80457", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -27,7 +27,6 @@\n with ALI;      use ALI;\n with Csets;\n with Gnatvsn;\n-with Hostparm;\n with Makeutl;\n with MLib.Tgt; use MLib.Tgt;\n with Namet;    use Namet;\n@@ -41,6 +40,7 @@ with Prj.Pars;\n with Prj.Util; use Prj.Util;\n with Snames;\n with Table;\n+with Targparm; use Targparm;\n with Types;    use Types;\n \n with Ada.Command_Line;          use Ada.Command_Line;\n@@ -60,16 +60,16 @@ package body Clean is\n    Assembly_Suffix : constant String := \".s\";\n    ALI_Suffix      : constant String := \".ali\";\n    Tree_Suffix     : constant String := \".adt\";\n-   Object_Suffix   : constant String := Get_Object_Suffix.all;\n+   Object_Suffix   : constant String := Get_Target_Object_Suffix.all;\n    Debug_Suffix    : String          := \".dg\";\n    --  Changed to \"_dg\" for VMS in the body of the package\n \n    Repinfo_Suffix  : String := \".rep\";\n    --  Changed to \"_rep\" for VMS in the body of the package\n \n-   B_Start : String := \"b~\";\n-   --  Prefix of binder generated file.\n-   --  Changed to \"b$\" for VMS in the body of the package.\n+   B_Start : String_Ptr := new String'(\"b~\");\n+   --  Prefix of binder generated file, and number of actual characters used.\n+   --  Changed to \"b__\" for VMS in the body of the package.\n \n    Object_Directory_Path : String_Access := null;\n    --  The path name of the object directory, set with switch -D\n@@ -1240,7 +1240,7 @@ package body Clean is\n \n       --  Build the file name (before the extension)\n \n-      File_Name (1 .. B_Start'Length) := B_Start;\n+      File_Name (1 .. B_Start'Length) := B_Start.all;\n       File_Name (B_Start'Length + 1 .. Last) := Source_Name;\n \n       --  Spec\n@@ -1899,9 +1899,9 @@ package body Clean is\n    end Usage;\n \n begin\n-   if Hostparm.OpenVMS then\n+   if OpenVMS_On_Target then\n       Debug_Suffix (Debug_Suffix'First) := '_';\n       Repinfo_Suffix (Repinfo_Suffix'First) := '_';\n-      B_Start (B_Start'Last) := '$';\n+      B_Start := new String'(\"b__\");\n    end if;\n end Clean;"}, {"sha": "46a21fdf7500693b31d521b11b66fc692d7584ba", "filename": "gcc/ada/g-os_lib.adb", "status": "modified", "additions": 95, "deletions": 1, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fg-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fg-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-os_lib.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -384,7 +384,11 @@ package body GNAT.OS_Lib is\n          procedure Free is new Unchecked_Deallocation (Buf, Buf_Ptr);\n \n       begin\n-         if From = Invalid_FD or else To = Invalid_FD then\n+         if From = Invalid_FD then\n+            raise Copy_Error;\n+\n+         elsif To = Invalid_FD then\n+            Close (From, Status_From);\n             raise Copy_Error;\n          end if;\n \n@@ -903,6 +907,36 @@ package body GNAT.OS_Lib is\n       return Result;\n    end Get_Debuggable_Suffix;\n \n+   ----------------------------------\n+   -- Get_Target_Debuggable_Suffix --\n+   ----------------------------------\n+\n+   function Get_Target_Debuggable_Suffix return String_Access is\n+      Target_Exec_Ext_Ptr : Address;\n+      pragma Import\n+        (C, Target_Exec_Ext_Ptr, \"__gnat_target_debuggable_extension\");\n+\n+      procedure Strncpy (Astring_Addr, Cstring : Address; N : Integer);\n+      pragma Import (C, Strncpy, \"strncpy\");\n+\n+      function Strlen (Cstring : Address) return Integer;\n+      pragma Import (C, Strlen, \"strlen\");\n+\n+      Suffix_Length : Integer;\n+      Result        : String_Access;\n+\n+   begin\n+      Suffix_Length := Strlen (Target_Exec_Ext_Ptr);\n+\n+      Result := new String (1 .. Suffix_Length);\n+\n+      if Suffix_Length > 0 then\n+         Strncpy (Result.all'Address, Target_Exec_Ext_Ptr, Suffix_Length);\n+      end if;\n+\n+      return Result;\n+   end Get_Target_Debuggable_Suffix;\n+\n    ---------------------------\n    -- Get_Executable_Suffix --\n    ---------------------------\n@@ -930,6 +964,36 @@ package body GNAT.OS_Lib is\n       return Result;\n    end Get_Executable_Suffix;\n \n+   ----------------------------------\n+   -- Get_Target_Executable_Suffix --\n+   ----------------------------------\n+\n+   function Get_Target_Executable_Suffix return String_Access is\n+      Target_Exec_Ext_Ptr : Address;\n+      pragma Import\n+        (C, Target_Exec_Ext_Ptr, \"__gnat_target_executable_extension\");\n+\n+      procedure Strncpy (Astring_Addr, Cstring : Address; N : Integer);\n+      pragma Import (C, Strncpy, \"strncpy\");\n+\n+      function Strlen (Cstring : Address) return Integer;\n+      pragma Import (C, Strlen, \"strlen\");\n+\n+      Suffix_Length : Integer;\n+      Result        : String_Access;\n+\n+   begin\n+      Suffix_Length := Strlen (Target_Exec_Ext_Ptr);\n+\n+      Result := new String (1 .. Suffix_Length);\n+\n+      if Suffix_Length > 0 then\n+         Strncpy (Result.all'Address, Target_Exec_Ext_Ptr, Suffix_Length);\n+      end if;\n+\n+      return Result;\n+   end Get_Target_Executable_Suffix;\n+\n    -----------------------\n    -- Get_Object_Suffix --\n    -----------------------\n@@ -957,6 +1021,36 @@ package body GNAT.OS_Lib is\n       return Result;\n    end Get_Object_Suffix;\n \n+   ------------------------------\n+   -- Get_Target_Object_Suffix --\n+   ------------------------------\n+\n+   function Get_Target_Object_Suffix return String_Access is\n+      Target_Object_Ext_Ptr : Address;\n+      pragma Import\n+        (C, Target_Object_Ext_Ptr, \"__gnat_target_object_extension\");\n+\n+      procedure Strncpy (Astring_Addr, Cstring : Address; N : Integer);\n+      pragma Import (C, Strncpy, \"strncpy\");\n+\n+      function Strlen (Cstring : Address) return Integer;\n+      pragma Import (C, Strlen, \"strlen\");\n+\n+      Suffix_Length : Integer;\n+      Result        : String_Access;\n+\n+   begin\n+      Suffix_Length := Strlen (Target_Object_Ext_Ptr);\n+\n+      Result := new String (1 .. Suffix_Length);\n+\n+      if Suffix_Length > 0 then\n+         Strncpy (Result.all'Address, Target_Object_Ext_Ptr, Suffix_Length);\n+      end if;\n+\n+      return Result;\n+   end Get_Target_Object_Suffix;\n+\n    ------------\n    -- Getenv --\n    ------------"}, {"sha": "8360d35e5e68c7c5a59cc7c27a3d5712b6a7ef04", "filename": "gcc/ada/g-os_lib.ads", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fg-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fg-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-os_lib.ads?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -520,17 +520,29 @@ package GNAT.OS_Lib is\n    function Get_Debuggable_Suffix return String_Access;\n    --  Return the debuggable suffix convention. Usually this is the same as\n    --  the convention for Get_Executable_Suffix. The result is allocated on\n-   --  the heap and should be freed when no longer needed to avoid storage\n+   --  the heap and should be freed after use to avoid storage leaks.\n+\n+   function Get_Target_Debuggable_Suffix return String_Access;\n+   --  Return the target debuggable suffix convention. Usually this is the\n+   --  same as the convention for Get_Executable_Suffix. The result is\n+   --  allocated on the heap and should be freed after use to avoid storage\n    --  leaks.\n \n    function Get_Executable_Suffix return String_Access;\n-   --  Return the executable suffix convention. The result is allocated on\n-   --  the heap and should be freed when no longer needed to avoid storage\n-   --  leaks.\n+   --  Return the executable suffix convention. The result is allocated on the\n+   --  heap and should be freed after use to avoid storage leaks.\n \n    function Get_Object_Suffix return String_Access;\n-   --  Return the object suffix convention. The result is allocated on the\n-   --  heap and should be freed when no longer needed to avoid storage leaks.\n+   --  Return the object suffix convention. The result is allocated on the heap\n+   --  and should be freed after use to avoid storage leaks.\n+\n+   function Get_Target_Executable_Suffix return String_Access;\n+   --  Return the target executable suffix convention. The result is allocated\n+   --  on the heap and should be freed after use to avoid storage leaks.\n+\n+   function Get_Target_Object_Suffix return String_Access;\n+   --  Return the target object suffix convention. The result is allocated on\n+   --  the heap and should be freed after use to avoid storage leaks.\n \n    --  The following section contains low-level routines using addresses to\n    --  pass file name and executable name. In each routine the name must be\n@@ -706,12 +718,12 @@ package GNAT.OS_Lib is\n       Args         : Argument_List)\n       return         Process_Id;\n    --  This is a non blocking call. The Process_Id of the spawned process is\n-   --  returned. Parameters are to be used as in Spawn. If Invalid_Id is\n+   --  returned. Parameters are to be used as in Spawn. If Invalid_Pid is\n    --  returned the program could not be spawned.\n    --\n    --  \"Non_Blocking_Spawn\" should not be used in tasking applications.\n    --\n-   --  This function will always return Invalid_Id under VxWorks, since there\n+   --  This function will always return Invalid_Pid under VxWorks, since there\n    --  is no notion of executables under this OS.\n \n    function Non_Blocking_Spawn\n@@ -721,12 +733,12 @@ package GNAT.OS_Lib is\n       Err_To_Out             : Boolean := True) return Process_Id;\n    --  Similar to the procedure above, but redirects the output to the file\n    --  designated by Output_File_Descriptor. If Err_To_Out is True, then the\n-   --  Standard Error output is also redirected. Invalid_Id is returned\n+   --  Standard Error output is also redirected. Invalid_Pid is returned\n    --  if the program could not be spawned successfully.\n    --\n    --  \"Non_Blocking_Spawn\" should not be used in tasking applications.\n    --\n-   --  This function will always return Invalid_Id under VxWorks, since there\n+   --  This function will always return Invalid_Pid under VxWorks, since there\n    --  is no notion of executables under this OS.\n \n    function Non_Blocking_Spawn\n@@ -739,13 +751,13 @@ package GNAT.OS_Lib is\n    --  a file with the name Output_File.\n    --\n    --  Success is set to True if the command is executed and its output\n-   --  successfully written to the file. Invalid_Id is returned if the output\n+   --  successfully written to the file. Invalid_Pid is returned if the output\n    --  file could not be created or if the program could not be spawned\n    --  successfully.\n    --\n    --  \"Non_Blocking_Spawn\" should not be used in tasking applications.\n    --\n-   --  This function will always return Invalid_Id under VxWorks, since there\n+   --  This function will always return Invalid_Pid under VxWorks, since there\n    --  is no notion of executables under this OS.\n \n    procedure Wait_Process (Pid : out Process_Id; Success : out Boolean);\n@@ -757,7 +769,7 @@ package GNAT.OS_Lib is\n    --  Wait_Process is immediate. Pid identifies the process that has\n    --  terminated (matching the value returned from Non_Blocking_Spawn).\n    --  Success is set to True if this sub-process terminated successfully. If\n-   --  Pid = Invalid_Id, there were no subprocesses left to wait on.\n+   --  Pid = Invalid_Pid, there were no subprocesses left to wait on.\n    --\n    --  This function will always set success to False under VxWorks, since\n    --  there is no notion of executables under this OS."}, {"sha": "a099217f4aca03a0a43445a2d6320243f3a6eca5", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 65, "deletions": 53, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -27,16 +27,19 @@\n --  Gnatlink usage: please consult the gnat documentation\n \n with ALI;      use ALI;\n+with Csets;\n with Gnatvsn;  use Gnatvsn;\n with Hostparm;\n with Indepsw;  use Indepsw;\n with Namet;    use Namet;\n with Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n+with Snames;\n with Switch;   use Switch;\n with System;   use System;\n with Table;\n+with Targparm; use Targparm;\n with Types;\n \n with Ada.Command_Line;     use Ada.Command_Line;\n@@ -301,9 +304,7 @@ procedure Gnatlink is\n                  new String'(Arg);\n \n             elsif Arg'Length /= 0 and then Arg (1) = '-' then\n-               if Arg'Length > 4\n-                 and then Arg (2 .. 5) =  \"gnat\"\n-               then\n+               if Arg'Length > 4 and then Arg (2 .. 5) =  \"gnat\" then\n                   Exit_With_Error\n                     (\"invalid switch: \"\"\" & Arg & \"\"\" (gnat not needed here)\");\n                end if;\n@@ -335,6 +336,7 @@ procedure Gnatlink is\n                elsif Arg'Length >= 3 and then Arg (2) = 'M' then\n                   declare\n                      Switches : String_List_Access;\n+\n                   begin\n                      Convert (Map_File, Arg (3 .. Arg'Last), Switches);\n \n@@ -461,7 +463,6 @@ procedure Gnatlink is\n                     Linker_Options.Table (Linker_Options.Last);\n \n                elsif Arg'Length >= 7 and then Arg (1 .. 7) = \"--LINK=\" then\n-\n                   if Arg'Length = 7 then\n                      Exit_With_Error (\"Missing argument for --LINK=\");\n                   end if;\n@@ -502,6 +503,15 @@ procedure Gnatlink is\n                               end if;\n                            end if;\n \n+                           --  Add directory to source search dirs so that\n+                           --  Get_Target_Parameters can find system.ads\n+\n+                           if Arg (AF .. AF + 1) = \"-I\"\n+                             and then Arg'Length > 2\n+                           then\n+                              Add_Src_Search_Dir (Arg (AF + 2 .. Arg'Last));\n+                           end if;\n+\n                            --  Pass to gcc for compiling binder generated file\n                            --  No use passing libraries, it will just generate\n                            --  a warning\n@@ -546,7 +556,20 @@ procedure Gnatlink is\n                      Exit_With_Error (\"cannot handle more than one ALI file\");\n                   end if;\n \n-               --  If object file, record object file\n+               --  If target object file, record object file\n+\n+               elsif Arg'Length > Get_Target_Object_Suffix.all'Length\n+                 and then Arg\n+                   (Arg'Last -\n+                    Get_Target_Object_Suffix.all'Length + 1 .. Arg'Last)\n+                   = Get_Target_Object_Suffix.all\n+               then\n+                  Linker_Objects.Increment_Last;\n+                  Linker_Objects.Table (Linker_Objects.Last) :=\n+                    new String'(Arg);\n+\n+               --  If host object file, record object file\n+               --  e.g. accept foo.o as well as foo.obj on VMS target\n \n                elsif Arg'Length > Get_Object_Suffix.all'Length\n                  and then Arg\n@@ -1012,7 +1035,7 @@ procedure Gnatlink is\n             --  The following test needs comments, why is it VMS specific.\n             --  The above comment looks out of date ???\n \n-            elsif not (Hostparm.OpenVMS\n+            elsif not (OpenVMS_On_Target\n                          and then\n                        Is_Option_Present (Next_Line (Nfirst .. Nlast)))\n             then\n@@ -1424,17 +1447,24 @@ begin\n \n    if not Is_Regular_File (Ali_File_Name.all) then\n       Exit_With_Error (Ali_File_Name.all & \" not found\");\n+   end if;\n+\n+   --  Get target parameters\n+\n+   Namet.Initialize;\n+   Csets.Initialize;\n+   Snames.Initialize;\n+   Osint.Add_Default_Search_Dirs;\n+   Targparm.Get_Target_Parameters;\n \n    --  Read the ALI file of the main subprogram if the binder generated\n    --  file needs to be compiled and no --GCC= switch has been specified.\n    --  Fetch the back end switches from this ALI file and use these switches\n    --  to compile the binder generated file\n \n-   elsif Compile_Bind_File and then Standard_Gcc then\n-      --  Do some initializations\n+   if Compile_Bind_File and then Standard_Gcc then\n \n       Initialize_ALI;\n-      Namet.Initialize;\n       Name_Len := Ali_File_Name'Length;\n       Name_Buffer (1 .. Name_Len) := Ali_File_Name.all;\n \n@@ -1445,7 +1475,6 @@ begin\n          A : ALI_Id;\n \n       begin\n-         --  Osint.Add_Default_Search_Dirs;\n          --  Load the ALI file\n \n          T := Read_Library_Info (F, True);\n@@ -1494,10 +1523,9 @@ begin\n    --  If no output name specified, then use the base name of .ali file name\n \n    if Output_File_Name = null then\n-\n       Output_File_Name :=\n         new String'(Base_Name (Ali_File_Name.all)\n-                       & Get_Debuggable_Suffix.all);\n+                       & Get_Target_Debuggable_Suffix.all);\n \n       Linker_Options.Increment_Last;\n       Linker_Options.Table (Linker_Options.Last) :=\n@@ -1506,7 +1534,6 @@ begin\n       Linker_Options.Increment_Last;\n       Linker_Options.Table (Linker_Options.Last) :=\n         new String'(Output_File_Name.all);\n-\n    end if;\n \n    --  Warn if main program is called \"test\", as that may be a built-in command\n@@ -1554,71 +1581,56 @@ begin\n                         \"__gnat_get_maximum_file_name_length\");\n \n       Maximum_File_Name_Length : constant Integer :=\n-        Get_Maximum_File_Name_Length;\n+                                   Get_Maximum_File_Name_Length;\n \n-      Second_Char : Character;\n-      --  Second character of name of files\n+      Bind_File_Prefix : Types.String_Ptr;\n+      --  Contains prefix used for bind files\n \n    begin\n-      --  Set proper second character of file name\n+      --  Set prefix\n \n       if not Ada_Bind_File then\n-         Second_Char := '_';\n-\n-      elsif Hostparm.OpenVMS then\n-         Second_Char := '$';\n-\n+         Bind_File_Prefix := new String'(\"b_\");\n+      elsif OpenVMS_On_Target then\n+         Bind_File_Prefix := new String'(\"b__\");\n       else\n-         Second_Char := '~';\n+         Bind_File_Prefix := new String'(\"b~\");\n       end if;\n \n       --  If the length of the binder file becomes too long due to\n       --  the addition of the \"b?\" prefix, then truncate it.\n \n       if Maximum_File_Name_Length > 0 then\n-         while Fname_Len > Maximum_File_Name_Length - 2 loop\n+         while Fname_Len >\n+                 Maximum_File_Name_Length - Bind_File_Prefix.all'Length\n+         loop\n             Fname_Len := Fname_Len - 1;\n          end loop;\n       end if;\n \n-      if Ada_Bind_File then\n-         Binder_Spec_Src_File :=\n-           new String'('b'\n-                       & Second_Char\n-                       & Fname (Fname'First .. Fname'First + Fname_Len - 1)\n-                       & \".ads\");\n-         Binder_Body_Src_File :=\n-           new String'('b'\n-                       & Second_Char\n-                       & Fname (Fname'First .. Fname'First + Fname_Len - 1)\n-                       & \".adb\");\n-         Binder_Ali_File :=\n-           new String'('b'\n-                       & Second_Char\n-                       & Fname (Fname'First .. Fname'First + Fname_Len - 1)\n-                       & \".ali\");\n+      declare\n+         Fnam : constant String :=\n+                  Bind_File_Prefix.all &\n+                    Fname (Fname'First .. Fname'First + Fname_Len - 1);\n \n-      else\n-         Binder_Body_Src_File :=\n-           new String'('b'\n-                       & Second_Char\n-                       & Fname (Fname'First .. Fname'First + Fname_Len - 1)\n-                       & \".c\");\n-      end if;\n+      begin\n+         if Ada_Bind_File then\n+            Binder_Spec_Src_File := new String'(Fnam & \".ads\");\n+            Binder_Body_Src_File := new String'(Fnam & \".adb\");\n+            Binder_Ali_File      := new String'(Fnam & \".ali\");\n+         else\n+            Binder_Body_Src_File := new String'(Fnam & \".c\");\n+         end if;\n \n-      Binder_Obj_File :=\n-        new String'('b'\n-                    & Second_Char\n-                    & Fname (Fname'First .. Fname'First + Fname_Len - 1)\n-                    & Get_Object_Suffix.all);\n+         Binder_Obj_File := new String'(Fnam & Get_Target_Object_Suffix.all);\n+      end;\n \n       if Fname_Len /= Fname'Length then\n          Binder_Options.Increment_Last;\n          Binder_Options.Table (Binder_Options.Last) := new String'(\"-o\");\n          Binder_Options.Increment_Last;\n          Binder_Options.Table (Binder_Options.Last) := Binder_Obj_File;\n       end if;\n-\n    end Make_Binder_File_Names;\n \n    Process_Binder_File (Binder_Body_Src_File.all & ASCII.NUL);"}, {"sha": "32da876b8bb14fda2d81a6f37481505495731452", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -628,8 +628,8 @@ package body Make is\n    GNAT_Flag         : constant String_Access := new String'(\"-gnatpg\");\n    Do_Not_Check_Flag : constant String_Access := new String'(\"-x\");\n \n-   Object_Suffix     : constant String := Get_Object_Suffix.all;\n-   Executable_Suffix : constant String := Get_Executable_Suffix.all;\n+   Object_Suffix     : constant String := Get_Target_Object_Suffix.all;\n+   Executable_Suffix : constant String := Get_Target_Executable_Suffix.all;\n \n    Syntax_Only : Boolean := False;\n    --  Set to True when compiling with -gnats"}, {"sha": "6cae545c2de473302cbbc956832480fb19418e73", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -26,7 +26,6 @@\n \n with ALI;      use ALI;\n with Gnatvsn;  use Gnatvsn;\n-with Hostparm;\n with MLib.Fil; use MLib.Fil;\n with MLib.Tgt; use MLib.Tgt;\n with MLib.Utl; use MLib.Utl;\n@@ -40,6 +39,7 @@ with Sinput.P;\n with Snames;   use Snames;\n with Switch;   use Switch;\n with Table;\n+with Targparm; use Targparm;\n \n with Ada.Characters.Handling;\n \n@@ -55,12 +55,13 @@ package body MLib.Prj is\n    pragma Import (C, Prj_Add_Obj_Files, \"__gnat_prj_add_obj_files\");\n    Add_Object_Files : constant Boolean := Prj_Add_Obj_Files /= 0;\n    --  Indicates if object files in pragmas Linker_Options (found in the\n-   --  binder generated file) should be taken when linking aq stand-alone\n-   --  library.\n-   --  False for Windows, True for other platforms.\n+   --  binder generated file) should be taken when linking a stand-alone\n+   --  library. False for Windows, True for other platforms.\n \n    ALI_Suffix : constant String := \".ali\";\n-   B_Start    : String := \"b~\";\n+\n+   B_Start : String_Ptr := new String'(\"b~\");\n+   --  Prefix of bind file, changed to b__ for VMS\n \n    S_Osinte_Ads : Name_Id := No_Name;\n    --  Name_Id for \"s-osinte.ads\"\n@@ -515,7 +516,7 @@ package body MLib.Prj is\n \n       begin\n          if not Libgnarl_Needed or\n-           (Hostparm.OpenVMS and then\n+           (OpenVMS_On_Target and then\n               ((not Libdecgnat_Needed) or\n                (not Gtrasymobj_Needed)))\n          then\n@@ -542,7 +543,7 @@ package body MLib.Prj is\n                if ALI.Sdep.Table (Index).Sfile = S_Osinte_Ads then\n                   Libgnarl_Needed := True;\n \n-               elsif Hostparm.OpenVMS then\n+               elsif OpenVMS_On_Target then\n                   if ALI.Sdep.Table (Index).Sfile = S_Dec_Ads then\n                      Libdecgnat_Needed := True;\n \n@@ -799,18 +800,18 @@ package body MLib.Prj is\n                Arguments := new String_List (1 .. Initial_Argument_Max);\n             end if;\n \n-            --  Add \"-n -o b~<lib>.adb (b$<lib>.adb on VMS) -L<lib>\"\n+            --  Add \"-n -o b~<lib>.adb (b__<lib>.adb on VMS) -L<lib>\"\n \n             Argument_Number := 2;\n             Arguments (1) := No_Main;\n             Arguments (2) := Output_Switch;\n \n-            if Hostparm.OpenVMS then\n-               B_Start (B_Start'Last) := '$';\n+            if OpenVMS_On_Target then\n+               B_Start := new String'(\"b__\");\n             end if;\n \n             Add_Argument\n-              (B_Start & Get_Name_String (Data.Library_Name) & \".adb\");\n+              (B_Start.all & Get_Name_String (Data.Library_Name) & \".adb\");\n             Add_Argument (\"-L\" & Get_Name_String (Data.Library_Name));\n \n             if Data.Lib_Auto_Init and then SALs_Use_Constructors then\n@@ -1006,7 +1007,7 @@ package body MLib.Prj is\n                In_Tree             => In_Tree,\n                Including_Libraries => True);\n \n-            --  Invoke <gcc> -c b$$<lib>.adb\n+            --  Invoke <gcc> -c b__<lib>.adb\n \n             --  Allocate Arguments, if it is the first time we see a standalone\n             --  library.\n@@ -1018,12 +1019,12 @@ package body MLib.Prj is\n             Argument_Number := 1;\n             Arguments (1) := Compile_Switch;\n \n-            if Hostparm.OpenVMS then\n-               B_Start (B_Start'Last) := '$';\n+            if OpenVMS_On_Target then\n+               B_Start := new String'(\"b__\");\n             end if;\n \n             Add_Argument\n-              (B_Start & Get_Name_String (Data.Library_Name) & \".adb\");\n+              (B_Start.all & Get_Name_String (Data.Library_Name) & \".adb\");\n \n             --  If necessary, add the PIC option\n \n@@ -1160,7 +1161,7 @@ package body MLib.Prj is\n \n          --  Add the objects found in the object directory and the object\n          --  directories of the extended files, if any, except for generated\n-         --  object files (b~.. or B$..) from extended projects.\n+         --  object files (b~.. or B__..) from extended projects.\n          --  When there are one or more extended files, only add an object file\n          --  if no object file with the same name have already been added.\n \n@@ -1203,7 +1204,7 @@ package body MLib.Prj is\n \n                         if In_Main_Object_Directory\n                           or else Last < 5\n-                          or else Filename (1 .. B_Start'Length) /= B_Start\n+                          or else Filename (1 .. B_Start'Length) /= B_Start.all\n                         then\n                            Name_Len := Last;\n                            Name_Buffer (1 .. Name_Len) := Filename (1 .. Last);\n@@ -1790,8 +1791,8 @@ package body MLib.Prj is\n                Object_Dir : Dir_Type;\n \n             begin\n-               if Hostparm.OpenVMS then\n-                  B_Start (B_Start'Last) := '$';\n+               if OpenVMS_On_Target then\n+                  B_Start := new String'(\"b__\");\n                end if;\n \n                --  If the library file does not exist, then the time stamp will\n@@ -1810,7 +1811,7 @@ package body MLib.Prj is\n                   --  generated file.\n \n                   if Is_Obj (Name_Buffer (1 .. Name_Len))\n-                    and then Name_Buffer (1 .. B_Start'Length) /= B_Start\n+                    and then Name_Buffer (1 .. B_Start'Length) /= B_Start.all\n                   then\n                      --  Get the object file time stamp\n "}, {"sha": "8c2aa1b023b32860c531c781ffa515ddd2f09ce4", "filename": "gcc/ada/mlib-tgt-vms-alpha.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms-alpha.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -179,7 +179,7 @@ package body MLib.Tgt is\n             return True;\n \n          elsif ALI'Length > 2 and then\n-               ALI (ALI'First .. ALI'First + 1) = \"b$\"\n+               ALI (ALI'First .. ALI'First + 2) = \"b__\"\n          then\n             return True;\n \n@@ -289,7 +289,7 @@ package body MLib.Tgt is\n \n       if Auto_Init then\n          declare\n-            Macro_File_Name : constant String := Lib_Filename & \"$init.asm\";\n+            Macro_File_Name : constant String := Lib_Filename & \"__init.asm\";\n             Macro_File      : File_Descriptor;\n             Init_Proc       : String := Lib_Filename & \"INIT\";\n             Popen_Result    : System.Address;\n@@ -382,7 +382,7 @@ package body MLib.Tgt is\n \n             Additional_Objects :=\n               new Argument_List'\n-                (1 => new String'(Lib_Filename & \"$init.obj\"));\n+                (1 => new String'(Lib_Filename & \"__init.obj\"));\n          end;\n       end if;\n \n@@ -515,7 +515,7 @@ package body MLib.Tgt is\n       if Auto_Init then\n          declare\n             Auto_Init_Object_File_Name : constant String :=\n-                                           Lib_Filename & \"$init.obj\";\n+                                           Lib_Filename & \"__init.obj\";\n             Disregard : Boolean;\n \n          begin"}, {"sha": "ca8ed75460bfc7e0c937277b4d43098864277070", "filename": "gcc/ada/mlib-tgt-vms-ia64.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-tgt-vms-ia64.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -179,7 +179,7 @@ package body MLib.Tgt is\n             return True;\n \n          elsif ALI'Length > 2 and then\n-               ALI (ALI'First .. ALI'First + 1) = \"b$\"\n+               ALI (ALI'First .. ALI'First + 2) = \"b__\"\n          then\n             return True;\n \n@@ -287,7 +287,7 @@ package body MLib.Tgt is\n \n       if Auto_Init then\n          declare\n-            Macro_File_Name : constant String := Lib_Filename & \"$init.asm\";\n+            Macro_File_Name : constant String := Lib_Filename & \"__init.asm\";\n             Macro_File      : File_Descriptor;\n             Init_Proc       : String := Lib_Filename & \"INIT\";\n             Popen_Result    : System.Address;\n@@ -415,7 +415,7 @@ package body MLib.Tgt is\n \n             Additional_Objects :=\n               new Argument_List'\n-                (1 => new String'(Lib_Filename & \"$init.obj\"));\n+                (1 => new String'(Lib_Filename & \"__init.obj\"));\n          end;\n       end if;\n \n@@ -548,7 +548,7 @@ package body MLib.Tgt is\n       if Auto_Init then\n          declare\n             Auto_Init_Object_File_Name : constant String :=\n-                                           Lib_Filename & \"$init.obj\";\n+                                           Lib_Filename & \"__init.obj\";\n             Disregard : Boolean;\n \n          begin"}, {"sha": "2dc070ebd7e72103a4dc7b033d1ca76f7251b22e", "filename": "gcc/ada/osint-b.adb", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fosint-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fosint-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-b.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,9 +24,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Hostparm;\n-with Namet;   use Namet;\n-with Opt;     use Opt;\n+with Namet;    use Namet;\n+with Opt;      use Opt;\n+with Targparm; use Targparm;\n \n package body Osint.B is\n \n@@ -71,6 +71,10 @@ package body Osint.B is\n       Findex2   : Natural;\n       Flength   : Natural;\n \n+      Bind_File_Prefix_Len : Natural := 2;\n+      --  Length of binder file prefix (normally set to 2 for b~, but gets\n+      --  reset to 3 for VMS for b__).\n+\n    begin\n       if Output_File_Name /= \"\" then\n          Name_Buffer (Output_File_Name'Range) := Output_File_Name;\n@@ -112,16 +116,24 @@ package body Osint.B is\n \n          if Maximum_File_Name_Length > 0 then\n \n+            if OpenVMS_On_Target and then Typ /= 'c' then\n+               Bind_File_Prefix_Len := 3;\n+            end if;\n+\n             --  Make room for the extra two characters in \"b?\"\n \n-            while Int (Flength) > Maximum_File_Name_Length - 2 loop\n+            while Int (Flength) >\n+              Maximum_File_Name_Length - Nat (Bind_File_Prefix_Len)\n+            loop\n                Findex2 := Findex2 - 1;\n                Flength := Findex2 - Findex1;\n             end loop;\n          end if;\n \n-         Name_Buffer (3 .. Flength + 2) := File_Name (Findex1 .. Findex2 - 1);\n-         Name_Buffer (Flength + 3) := '.';\n+         Name_Buffer\n+           (Bind_File_Prefix_Len + 1 .. Flength + Bind_File_Prefix_Len) :=\n+              File_Name (Findex1 .. Findex2 - 1);\n+         Name_Buffer (Flength + Bind_File_Prefix_Len + 1) := '.';\n \n          --  C bind file, name is b_xxx.c\n \n@@ -132,20 +144,21 @@ package body Osint.B is\n             Name_Len := Flength + 4;\n \n          --  Ada bind file, name is b~xxx.adb or b~xxx.ads\n-         --  (with $ instead of ~ in VMS)\n+         --  (with __ instead of ~ in VMS)\n \n          else\n-            if Hostparm.OpenVMS then\n-               Name_Buffer (2) := '$';\n+            if OpenVMS_On_Target then\n+               Name_Buffer (2) := '_';\n+               Name_Buffer (3) := '_';\n             else\n                Name_Buffer (2) := '~';\n             end if;\n \n-            Name_Buffer (Flength + 4) := 'a';\n-            Name_Buffer (Flength + 5) := 'd';\n-            Name_Buffer (Flength + 6) := Typ;\n-            Name_Buffer (Flength + 7) := ASCII.NUL;\n-            Name_Len := Flength + 6;\n+            Name_Buffer (Flength + Bind_File_Prefix_Len + 2) := 'a';\n+            Name_Buffer (Flength + Bind_File_Prefix_Len + 3) := 'd';\n+            Name_Buffer (Flength + Bind_File_Prefix_Len + 4) := Typ;\n+            Name_Buffer (Flength + Bind_File_Prefix_Len + 5) := ASCII.NUL;\n+            Name_Len := Flength + Bind_File_Prefix_Len + 4;\n          end if;\n       end if;\n "}, {"sha": "124ce39fc3b7579a9dac5d72707ad7a370985e04", "filename": "gcc/ada/osint-c.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fosint-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fosint-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -319,7 +319,7 @@ package body Osint.C is\n    ---------------------------------\n \n    procedure Set_Output_Object_File_Name (Name : String) is\n-      Ext : constant String := Object_Suffix;\n+      Ext : constant String  := Target_Object_Suffix;\n       NL  : constant Natural := Name'Length;\n       EL  : constant Natural := Ext'Length;\n "}, {"sha": "d1a6b52c66ce7fc8f01675ac1fa7b85dd459ec40", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -32,6 +32,7 @@ with Opt;      use Opt;\n with Output;   use Output;\n with Sdefault; use Sdefault;\n with Table;\n+with Targparm; use Targparm;\n \n with System.Case_Util; use System.Case_Util;\n \n@@ -1776,9 +1777,9 @@ package body Osint is\n       Get_Name_String (N);\n       Name_Len := Name_Len - ALI_Suffix'Length - 1;\n \n-      for J in Object_Suffix'Range loop\n+      for J in Target_Object_Suffix'Range loop\n          Name_Len := Name_Len + 1;\n-         Name_Buffer (Name_Len) := Object_Suffix (J);\n+         Name_Buffer (Name_Len) := Target_Object_Suffix (J);\n       end loop;\n \n       return Name_Enter;\n@@ -2292,7 +2293,7 @@ package body Osint is\n       Library (3 + Name'Length)                 := '-';\n       Library (4 + Name'Length .. Library'Last) := Library_Version;\n \n-      if Hostparm.OpenVMS then\n+      if OpenVMS_On_Target then\n          for K in Library'First + 2 .. Library'Last loop\n             if Library (K) = '.' or else Library (K) = '-' then\n                Library (K) := '_';\n@@ -2799,13 +2800,6 @@ begin\n       Identifier_Character_Set := Get_Default_Identifier_Character_Set;\n       Maximum_File_Name_Length := Get_Maximum_File_Name_Length;\n \n-      --  On VMS, '~' is not allowed in file names. Change the multi unit\n-      --  index character to '$'.\n-\n-      if Hostparm.OpenVMS then\n-         Multi_Unit_Index_Character := '$';\n-      end if;\n-\n       --  Following should be removed by having above function return\n       --  Integer'Last as indication of no maximum instead of -1 ???\n "}, {"sha": "d7c8c49a25aa8e82f7f67f659c59239bbd789968", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -558,8 +558,8 @@ private\n    --  No_File, that indicates that the file whose name was returned by the\n    --  last call to Next_Main_Source (and stored here) is to be read.\n \n-   Object_Suffix : constant String := Get_Object_Suffix.all;\n-   --  The suffix used for the object files\n+   Target_Object_Suffix : constant String := Get_Target_Object_Suffix.all;\n+   --  The suffix used for the target object files\n \n    Output_FD : File_Descriptor;\n    --  The file descriptor for the current library info, tree or binder output"}, {"sha": "3a7dd9630e94c8b651f9ad77634ecf14ca861478", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -38,6 +38,7 @@ with Prj.Util; use Prj.Util;\n with Sinput.P;\n with Snames;   use Snames;\n with Table;    use Table;\n+with Targparm; use Targparm;\n \n with Ada.Characters.Handling;    use Ada.Characters.Handling;\n with Ada.Strings;                use Ada.Strings;\n@@ -56,7 +57,7 @@ package body Prj.Nmsc is\n    ALI_Suffix   : constant String := \".ali\";\n    --  File suffix for ali files\n \n-   Object_Suffix : constant String := Get_Object_Suffix.all;\n+   Object_Suffix : constant String := Get_Target_Object_Suffix.all;\n    --  File suffix for object files\n \n    type Name_Location is record\n@@ -3902,15 +3903,19 @@ package body Prj.Nmsc is\n                declare\n                   S1 : constant Character := Src (Src'First);\n                   S2 : constant Character := Src (Src'First + 1);\n+                  S3 : constant Character := Src (Src'First + 2);\n \n                begin\n                   if S1 = 'a' or else S1 = 'g'\n                     or else S1 = 'i' or else S1 = 's'\n                   then\n                      --  Children or separates of packages A, G, I or S\n \n-                     if (Hostparm.OpenVMS and then S2 = '$')\n-                       or else (not Hostparm.OpenVMS and then S2 = '~')\n+                     if (OpenVMS_On_Target\n+                         and then S2 = '_'\n+                         and then S3 = '_')\n+                        or else\n+                         S2 = '~'\n                      then\n                         Src (Src'First + 1) := '.';\n "}, {"sha": "678c3b82393258401ecf0a49bdf4d36e04a00c95", "filename": "gcc/ada/rident.ads", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Frident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Frident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frident.ads?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -19,6 +19,13 @@\n -- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n -- Boston, MA 02110-1301, USA.                                              --\n --                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --"}, {"sha": "97d6b7f9a63b614220b573f36fdda5091ae55fd2", "filename": "gcc/ada/targext.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Ftargext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Ftargext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargext.c?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -0,0 +1,51 @@\n+/****************************************************************************\n+ *                                                                          *\n+ *                         GNAT COMPILER COMPONENTS                         *\n+ *                                                                          *\n+ *                             T A R G E X T                                *\n+ *                                                                          *\n+ *                          C Implementation File                           *\n+ *                                                                          *\n+ *           Copyright (C) 2005, Free Software Foundation, Inc.             *\n+ *                                                                          *\n+ * GNAT is free software;  you can  redistribute it  and/or modify it under *\n+ * terms of the  GNU General Public License as published  by the Free Soft- *\n+ * ware  Foundation;  either version 2,  or (at your option) any later ver- *\n+ * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n+ * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *\n+ * for  more details.  You should have  received  a copy of the GNU General *\n+ * Public License  distributed with GNAT;  see file COPYING.  If not, write *\n+ * to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, *\n+ * Boston, MA 02110-1301, USA.                                              *\n+ *                                                                          *\n+ * As a  special  exception,  if you  link  this file  with other  files to *\n+ * produce an executable,  this file does not by itself cause the resulting *\n+ * executable to be covered by the GNU General Public License. This except- *\n+ * ion does not  however invalidate  any other reasons  why the  executable *\n+ * file might be covered by the  GNU Public License.                        *\n+ *                                                                          *\n+ * GNAT was originally developed  by the GNAT team at  New York University. *\n+ * Extensive contributions were provided by Ada Core Technologies Inc.      *\n+ *                                                                          *\n+ ****************************************************************************/\n+\n+/*  This file contains target-specific parameters describing the file       */\n+/*  extension for object and executable files. It is used by the compiler,  */\n+/*  binder and tools.                                                       */\n+\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+\n+#ifndef TARGET_OBJECT_SUFFIX\n+#define TARGET_OBJECT_SUFFIX \".o\"\n+#endif\n+\n+#ifndef TARGET_EXECUTABLE_SUFFIX\n+#define TARGET_EXECUTABLE_SUFFIX \"\"\n+#endif\n+\n+const char *__gnat_target_object_extension = TARGET_OBJECT_SUFFIX;\n+const char *__gnat_target_executable_extension = TARGET_EXECUTABLE_SUFFIX;\n+const char *__gnat_target_debuggable_extension = TARGET_EXECUTABLE_SUFFIX;"}, {"sha": "829535d860351e7fa22e40c5b1bac9e1bbd3bbc0", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -24,11 +24,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Csets;  use Csets;\n-with Namet;  use Namet;\n-with Opt;    use Opt;\n-with Osint;  use Osint;\n-with Output; use Output;\n+with Csets;    use Csets;\n+with Namet;    use Namet;\n+with Opt;      use Opt;\n+with Osint;    use Osint;\n+with Output;   use Output;\n \n package body Targparm is\n    use ASCII;\n@@ -154,7 +154,6 @@ package body Targparm is\n    procedure Set_Profile_Restrictions (P : Profile_Name) is\n       R : Restriction_Flags  renames Profile_Info (P).Set;\n       V : Restriction_Values renames Profile_Info (P).Value;\n-\n    begin\n       for J in R'Range loop\n          if R (J) then\n@@ -603,6 +602,13 @@ package body Targparm is\n          end if;\n       end loop Line_Loop;\n \n+      --  Now that OpenVMS_On_Target has been given its definitive value,\n+      --  change the multi-unit index character from '~' to '$' for OpenVMS.\n+\n+      if OpenVMS_On_Target then\n+         Multi_Unit_Index_Character := '$';\n+      end if;\n+\n       --  Check no missing target parameter settings (skip for compiler vsn)\n \n       if not Compiler_System_Version then"}, {"sha": "8325e8cb38bd4f6fc6a5f1981384bf955862c7c0", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb4daba3460df28e1228e04f7d2a63712c709a7e/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=bb4daba3460df28e1228e04f7d2a63712c709a7e", "patch": "@@ -19,6 +19,13 @@\n -- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n -- Boston, MA 02110-1301, USA.                                              --\n --                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --"}]}