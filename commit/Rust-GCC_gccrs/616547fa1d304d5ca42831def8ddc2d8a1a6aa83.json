{"sha": "616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE2NTQ3ZmExZDMwNGQ1Y2E0MjgzMWRlZjhkZGMyZDhhMWE2YWE4Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:17:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T10:17:29Z"}, "message": "[multiple changes]\n\n2012-10-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aux.adb (Get_Rep_Item): Treat Priority and Interrupt_Priority\n\tas equivalent, because only one of them can be specified for a\n\ttask, protected definition, or subprogram body.\n\t* aspects.adb ((Same_Aspect): The canonical aspect of\n\tInterrupt_Priority is Priority.\n\n2012-10-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch13.adb: Minor reformatting.\n\n2012-10-29  Robert Dewar  <dewar@adacore.com>\n\n\t* i-cstrea.ads: Avoid redefinition of standard symbol string.\n\t* prj-makr.adb: Add comment for OK redefinition of Stadard.\n\t* prj.ads: Add comment for OK redefinition of Stadard.\n\t* s-crtl.ads: Avoid redefinition of standard symbol string.\n\t* sinfo-cn.adb (Change_Identifier_To_Defining_Identifier):\n\tGenerate warning for standard redefinition if\n\tWarn_On_Standard_Definition set.\n\t* usage.adb: Add lines for -gnatw.k and -gnatw.K\n\t* warnsw.adb: Set/reset Warn_On_Standard_Redefinition\n\tappropriately.\n\t* warnsw.ads (Warn_On_Standard_Redefinition): New flag.\n\t* s-stratt-xdr.adb: Avoid new warning.\n\n2012-10-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_dbug.ads, exp_dbug.adb (Build_Subprogram_Instance_Renamings):\n\tin the body of a subpogram instance, introduce local renamings\n\tfor actuals of an elementary type, so that GDB can recover the\n\tvalues of these actuals more directly.\n\nFrom-SVN: r192919", "tree": {"sha": "d5bcc0b8a275116938b18ab57bffcca94142d56f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5bcc0b8a275116938b18ab57bffcca94142d56f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/comments", "author": null, "committer": null, "parents": [{"sha": "30ebb1146dff85d153f99f89b9f479d4e479fd20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30ebb1146dff85d153f99f89b9f479d4e479fd20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30ebb1146dff85d153f99f89b9f479d4e479fd20"}], "stats": {"total": 425, "additions": 282, "deletions": 143}, "files": [{"sha": "7ec41ce0bae6304cbbfaeceb3af4ed0f4430ddac", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -1,3 +1,37 @@\n+2012-10-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aux.adb (Get_Rep_Item): Treat Priority and Interrupt_Priority\n+\tas equivalent, because only one of them can be specified for a\n+\ttask, protected definition, or subprogram body.\n+\t* aspects.adb ((Same_Aspect): The canonical aspect of\n+\tInterrupt_Priority is Priority.\n+\n+2012-10-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch13.adb: Minor reformatting.\n+\n+2012-10-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* i-cstrea.ads: Avoid redefinition of standard symbol string.\n+\t* prj-makr.adb: Add comment for OK redefinition of Stadard.\n+\t* prj.ads: Add comment for OK redefinition of Stadard.\n+\t* s-crtl.ads: Avoid redefinition of standard symbol string.\n+\t* sinfo-cn.adb (Change_Identifier_To_Defining_Identifier):\n+\tGenerate warning for standard redefinition if\n+\tWarn_On_Standard_Definition set.\n+\t* usage.adb: Add lines for -gnatw.k and -gnatw.K\n+\t* warnsw.adb: Set/reset Warn_On_Standard_Redefinition\n+\tappropriately.\n+\t* warnsw.ads (Warn_On_Standard_Redefinition): New flag.\n+\t* s-stratt-xdr.adb: Avoid new warning.\n+\n+2012-10-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_dbug.ads, exp_dbug.adb (Build_Subprogram_Instance_Renamings):\n+\tin the body of a subpogram instance, introduce local renamings\n+\tfor actuals of an elementary type, so that GDB can recover the\n+\tvalues of these actuals more directly.\n+\n 2012-10-29  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch5.adb (Analyze_Loop_Statement): Add warning for identical"}, {"sha": "880ee244578b54fe0df8246bd166193037ea391c", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -275,7 +275,7 @@ package body Aspects is\n     Aspect_Inline_Always                => Aspect_Inline,\n     Aspect_Input                        => Aspect_Input,\n     Aspect_Interrupt_Handler            => Aspect_Interrupt_Handler,\n-    Aspect_Interrupt_Priority           => Aspect_Interrupt_Priority,\n+    Aspect_Interrupt_Priority           => Aspect_Priority,\n     Aspect_Invariant                    => Aspect_Invariant,\n     Aspect_Iterator_Element             => Aspect_Iterator_Element,\n     Aspect_Link_Name                    => Aspect_Link_Name,"}, {"sha": "582138f3c4a30a76bd526a4fa0b84a7f52b8c094", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -902,6 +902,39 @@ package body Exp_Dbug is\n       end if;\n    end Get_Variant_Encoding;\n \n+   ------------------------------------------\n+   --  Build_Subprogram_Instance_Renamings --\n+   ------------------------------------------\n+\n+   procedure Build_Subprogram_Instance_Renamings\n+     (N       : Node_Id;\n+      Wrapper : Entity_Id)\n+   is\n+      Loc  : Source_Ptr;\n+      Decl : Node_Id;\n+      E    : Entity_Id;\n+\n+   begin\n+      E := First_Entity (Wrapper);\n+      while Present (E) loop\n+         if Nkind (Parent (E)) = N_Object_Declaration\n+           and then Is_Elementary_Type (Etype (E))\n+         then\n+            Loc := Sloc (Expression (Parent (E)));\n+            Decl := Make_Object_Renaming_Declaration (Loc,\n+               Defining_Identifier =>\n+                 Make_Defining_Identifier (Loc, Chars (E)),\n+               Subtype_Mark        => New_Occurrence_Of (Etype (E), Loc),\n+               Name                => New_Occurrence_Of (E, Loc));\n+\n+            Append (Decl, Declarations (N));\n+            Set_Needs_Debug_Info (Defining_Identifier (Decl));\n+         end if;\n+\n+         Next_Entity (E);\n+      end loop;\n+   end Build_Subprogram_Instance_Renamings;\n+\n    ------------------------------------\n    -- Get_Secondary_DT_External_Name --\n    ------------------------------------"}, {"sha": "41d4090639fa5a4e905bc0081b7b3707df3e9193", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -1442,6 +1442,24 @@ package Exp_Dbug is\n    --  corresponding to variants, and consider the fields inside as belonging\n    --  to the containing record.\n \n+   -----------------------------------------------\n+   --  Extra renamings for subprogram instances --\n+   -----------------------------------------------\n+\n+   procedure Build_Subprogram_Instance_Renamings\n+     (N      : Node_Id;\n+     Wrapper : Entity_Id);\n+\n+   --  The debugger has difficulties in recovering the value of actuals of an\n+   --  elementary type, from within the body of a subprogram instantiation.\n+   --  This is because such actuals generate an object declaration that is\n+   --  placed within the wrapper package of the instance, and the entity in\n+   --  these declarations is encoded in a complex way that GDB does not handle\n+   --  well.  These new renaming declarations appear within the body of the\n+   --  subprogram, and are redundant from a visibility point of view, but They\n+   --  should have no measurable performance impact, and require no special\n+   --  decoding in the debugger.\n+\n    -------------------------------------------\n    -- Character literals in Character Types --\n    -------------------------------------------"}, {"sha": "8882a7d3de680d53b632d944e4fb52ccb5e0fc84", "filename": "gcc/ada/i-cstrea.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fi-cstrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fi-cstrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea.ads?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -175,7 +175,7 @@ package Interfaces.C_Streams is\n       mode   : int;\n       size   : size_t) return int;\n \n-   procedure tmpnam (string : chars) renames System.CRTL.tmpnam;\n+   procedure tmpnam (str : chars) renames System.CRTL.tmpnam;\n    --  The parameter must be a pointer to a string buffer of at least L_tmpnam\n    --  bytes (the call with a null parameter is not supported). The returned\n    --  value, which is just a copy of the input argument, is discarded."}, {"sha": "e2b1ad1d9fd40bc3ade692067fe88d3916eafeeb", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -120,7 +120,12 @@ package body Prj.Makr is\n    Non_Empty_Node : constant Project_Node_Id := 1;\n    --  Used for the With_Clause of the naming project\n \n+   --  Turn off warnings for now around this redefinition of True and False,\n+   --  but it really seems a bit horrible to do this redefinition ???\n+\n+   pragma Warnings (Off);\n    type Matched_Type is (True, False, Excluded);\n+   pragma Warnings (On);\n \n    Naming_File_Suffix      : constant String := \"_naming\";\n    Source_List_File_Suffix : constant String := \"_source_list.txt\";"}, {"sha": "f3ca31bdbf91f38ee3e96041118bb657b949ed8e", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -68,14 +68,21 @@ package Prj is\n    type Yes_No_Unknown is (Yes, No, Unknown);\n    --  Tri-state to decide if -lgnarl is needed when linking\n \n+   pragma Warnings (Off);\n    type Project_Qualifier is\n      (Unspecified,\n+\n+      --  The following clash with Standard is OK, and justified by the context\n+      --  which really wants to use the same set of qualifiers.\n+\n       Standard,\n+\n       Library,\n       Configuration,\n       Dry,\n       Aggregate,\n       Aggregate_Library);\n+   pragma Warnings (On);\n    --  Qualifiers that can prefix the reserved word \"project\" in a project\n    --  file:\n    --    Standard:             standard project ...\n@@ -1188,7 +1195,17 @@ package Prj is\n \n    --  The following record describes a project file representation\n \n-   type Standalone is (No, Standard, Encapsulated);\n+   pragma Warnings (Off);\n+   type Standalone is\n+     (No,\n+\n+      --  The following clash with Standard is OK, and justified by the context\n+      --  which really wants to use the same set of qualifiers.\n+\n+      Standard,\n+\n+      Encapsulated);\n+   pragma Warnings (On);\n \n    type Project_Data (Qualifier : Project_Qualifier := Unspecified) is record\n "}, {"sha": "a763d606b70b657467770ef96704a74f58a93c0b", "filename": "gcc/ada/s-crtl.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -177,7 +177,7 @@ package System.CRTL is\n       size   : size_t) return int;\n    pragma Import (C, setvbuf, \"setvbuf\");\n \n-   procedure tmpnam (string : chars);\n+   procedure tmpnam (str : chars);\n    pragma Import (C, tmpnam, \"tmpnam\");\n \n    function tmpfile return FILEs;"}, {"sha": "d63c251477969ec36072d7b1030e85675967e9a9", "filename": "gcc/ada/s-stratt-xdr.adb", "status": "modified", "additions": 66, "deletions": 65, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fs-stratt-xdr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fs-stratt-xdr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stratt-xdr.adb?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 1996-2010, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1996-2012, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GARLIC is free software;  you can redistribute it and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -374,12 +374,12 @@ package body System.Stream_Attributes is\n       F_Bytes : SEO      renames Fields (I).F_Bytes;\n       F_Size  : Integer  renames Fields (I).F_Size;\n \n-      Positive   : Boolean;\n-      Exponent   : Long_Unsigned;\n-      Fraction   : Long_Unsigned;\n-      Result     : Float;\n-      S          : SEA (1 .. F_L);\n-      L          : SEO;\n+      Is_Positive : Boolean;\n+      Exponent    : Long_Unsigned;\n+      Fraction    : Long_Unsigned;\n+      Result      : Float;\n+      S           : SEA (1 .. F_L);\n+      L           : SEO;\n \n    begin\n       Ada.Streams.Read (Stream.all, S, L);\n@@ -397,10 +397,10 @@ package body System.Stream_Attributes is\n       Result := Float'Scaling (Float (Fraction), -F_Size);\n \n       if BS <= S (1) then\n-         Positive := False;\n+         Is_Positive := False;\n          Exponent := Long_Unsigned (S (1) - BS);\n       else\n-         Positive := True;\n+         Is_Positive := True;\n          Exponent := Long_Unsigned (S (1));\n       end if;\n \n@@ -434,7 +434,7 @@ package body System.Stream_Attributes is\n            (1.0 + Result, Integer (Exponent) - E_Bias);\n       end if;\n \n-      if not Positive then\n+      if not Is_Positive then\n          Result := -Result;\n       end if;\n \n@@ -489,12 +489,12 @@ package body System.Stream_Attributes is\n       F_Bytes : SEO      renames Fields (I).F_Bytes;\n       F_Size  : Integer  renames Fields (I).F_Size;\n \n-      Positive   : Boolean;\n-      Exponent   : Long_Unsigned;\n-      Fraction   : Long_Long_Unsigned;\n-      Result     : Long_Float;\n-      S          : SEA (1 .. LF_L);\n-      L          : SEO;\n+      Is_Positive : Boolean;\n+      Exponent    : Long_Unsigned;\n+      Fraction    : Long_Long_Unsigned;\n+      Result      : Long_Float;\n+      S           : SEA (1 .. LF_L);\n+      L           : SEO;\n \n    begin\n       Ada.Streams.Read (Stream.all, S, L);\n@@ -513,10 +513,10 @@ package body System.Stream_Attributes is\n       Result := Long_Float'Scaling (Long_Float (Fraction), -F_Size);\n \n       if BS <= S (1) then\n-         Positive := False;\n+         Is_Positive := False;\n          Exponent := Long_Unsigned (S (1) - BS);\n       else\n-         Positive := True;\n+         Is_Positive := True;\n          Exponent := Long_Unsigned (S (1));\n       end if;\n \n@@ -551,7 +551,7 @@ package body System.Stream_Attributes is\n            (1.0 + Result, Integer (Exponent) - E_Bias);\n       end if;\n \n-      if not Positive then\n+      if not Is_Positive then\n          Result := -Result;\n       end if;\n \n@@ -617,7 +617,7 @@ package body System.Stream_Attributes is\n       F_Bytes : SEO      renames Fields (I).F_Bytes;\n       F_Size  : Integer  renames Fields (I).F_Size;\n \n-      Positive   : Boolean;\n+      Is_Positive   : Boolean;\n       Exponent   : Long_Unsigned;\n       Fraction_1 : Long_Long_Unsigned := 0;\n       Fraction_2 : Long_Long_Unsigned := 0;\n@@ -648,10 +648,10 @@ package body System.Stream_Attributes is\n       Result := Long_Long_Float'Scaling (Result, HF - F_Size);\n \n       if BS <= S (1) then\n-         Positive := False;\n+         Is_Positive := False;\n          Exponent := Long_Unsigned (S (1) - BS);\n       else\n-         Positive := True;\n+         Is_Positive := True;\n          Exponent := Long_Unsigned (S (1));\n       end if;\n \n@@ -686,7 +686,7 @@ package body System.Stream_Attributes is\n            (1.0 + Result, Integer (Exponent) - E_Bias);\n       end if;\n \n-      if not Positive then\n+      if not Is_Positive then\n          Result := -Result;\n       end if;\n \n@@ -827,12 +827,12 @@ package body System.Stream_Attributes is\n       F_Bytes : SEO      renames Fields (I).F_Bytes;\n       F_Size  : Integer  renames Fields (I).F_Size;\n \n-      Exponent   : Long_Unsigned;\n-      Fraction   : Long_Unsigned;\n-      Positive   : Boolean;\n-      Result     : Short_Float;\n-      S          : SEA (1 .. SF_L);\n-      L          : SEO;\n+      Exponent    : Long_Unsigned;\n+      Fraction    : Long_Unsigned;\n+      Is_Positive : Boolean;\n+      Result      : Short_Float;\n+      S           : SEA (1 .. SF_L);\n+      L           : SEO;\n \n    begin\n       Ada.Streams.Read (Stream.all, S, L);\n@@ -850,10 +850,10 @@ package body System.Stream_Attributes is\n       Result := Short_Float'Scaling (Short_Float (Fraction), -F_Size);\n \n       if BS <= S (1) then\n-         Positive := False;\n+         Is_Positive := False;\n          Exponent := Long_Unsigned (S (1) - BS);\n       else\n-         Positive := True;\n+         Is_Positive := True;\n          Exponent := Long_Unsigned (S (1));\n       end if;\n \n@@ -887,7 +887,7 @@ package body System.Stream_Attributes is\n            (1.0 + Result, Integer (Exponent) - E_Bias);\n       end if;\n \n-      if not Positive then\n+      if not Is_Positive then\n          Result := -Result;\n       end if;\n \n@@ -1179,12 +1179,12 @@ package body System.Stream_Attributes is\n       F_Size  : Integer  renames Fields (I).F_Size;\n       F_Mask  : SE       renames Fields (I).F_Mask;\n \n-      Exponent : Long_Unsigned;\n-      Fraction : Long_Unsigned;\n-      Positive : Boolean;\n-      E        : Integer;\n-      F        : Float;\n-      S        : SEA (1 .. F_L) := (others => 0);\n+      Exponent    : Long_Unsigned;\n+      Fraction    : Long_Unsigned;\n+      Is_Positive : Boolean;\n+      E           : Integer;\n+      F           : Float;\n+      S           : SEA (1 .. F_L) := (others => 0);\n \n    begin\n       if not Item'Valid then\n@@ -1193,7 +1193,7 @@ package body System.Stream_Attributes is\n \n       --  Compute Sign\n \n-      Positive := (0.0 <= Item);\n+      Is_Positive := (0.0 <= Item);\n       F := abs (Item);\n \n       --  Signed zero\n@@ -1241,7 +1241,7 @@ package body System.Stream_Attributes is\n \n       --  Store Sign\n \n-      if not Positive then\n+      if not Is_Positive then\n          S (1) := S (1) + BS;\n       end if;\n \n@@ -1293,12 +1293,12 @@ package body System.Stream_Attributes is\n       F_Size  : Integer  renames Fields (I).F_Size;\n       F_Mask  : SE       renames Fields (I).F_Mask;\n \n-      Exponent : Long_Unsigned;\n-      Fraction : Long_Long_Unsigned;\n-      Positive : Boolean;\n-      E        : Integer;\n-      F        : Long_Float;\n-      S        : SEA (1 .. LF_L) := (others => 0);\n+      Exponent    : Long_Unsigned;\n+      Fraction    : Long_Long_Unsigned;\n+      Is_Positive : Boolean;\n+      E           : Integer;\n+      F           : Long_Float;\n+      S           : SEA (1 .. LF_L) := (others => 0);\n \n    begin\n       if not Item'Valid then\n@@ -1307,7 +1307,7 @@ package body System.Stream_Attributes is\n \n       --  Compute Sign\n \n-      Positive := (0.0 <= Item);\n+      Is_Positive := (0.0 <= Item);\n       F := abs (Item);\n \n       --  Signed zero\n@@ -1355,7 +1355,7 @@ package body System.Stream_Attributes is\n \n       --  Store Sign\n \n-      if not Positive then\n+      if not Is_Positive then\n          S (1) := S (1) + BS;\n       end if;\n \n@@ -1421,13 +1421,13 @@ package body System.Stream_Attributes is\n \n       HFS : constant Integer := F_Size / 2;\n \n-      Exponent   : Long_Unsigned;\n-      Fraction_1 : Long_Long_Unsigned;\n-      Fraction_2 : Long_Long_Unsigned;\n-      Positive   : Boolean;\n-      E          : Integer;\n-      F          : Long_Long_Float := Item;\n-      S          : SEA (1 .. LLF_L) := (others => 0);\n+      Exponent    : Long_Unsigned;\n+      Fraction_1  : Long_Long_Unsigned;\n+      Fraction_2  : Long_Long_Unsigned;\n+      Is_Positive : Boolean;\n+      E           : Integer;\n+      F           : Long_Long_Float := Item;\n+      S           : SEA (1 .. LLF_L) := (others => 0);\n \n    begin\n       if not Item'Valid then\n@@ -1436,7 +1436,8 @@ package body System.Stream_Attributes is\n \n       --  Compute Sign\n \n-      Positive := (0.0 <= Item);\n+      Is_Positive := (0.0 <= Item);\n+\n       if F < 0.0 then\n          F := -Item;\n       end if;\n@@ -1495,7 +1496,7 @@ package body System.Stream_Attributes is\n \n       --  Store Sign\n \n-      if not Positive then\n+      if not Is_Positive then\n          S (1) := S (1) + BS;\n       end if;\n \n@@ -1639,12 +1640,12 @@ package body System.Stream_Attributes is\n       F_Size  : Integer  renames Fields (I).F_Size;\n       F_Mask  : SE       renames Fields (I).F_Mask;\n \n-      Exponent : Long_Unsigned;\n-      Fraction : Long_Unsigned;\n-      Positive : Boolean;\n-      E        : Integer;\n-      F        : Short_Float;\n-      S        : SEA (1 .. SF_L) := (others => 0);\n+      Exponent    : Long_Unsigned;\n+      Fraction    : Long_Unsigned;\n+      Is_Positive : Boolean;\n+      E           : Integer;\n+      F           : Short_Float;\n+      S           : SEA (1 .. SF_L) := (others => 0);\n \n    begin\n       if not Item'Valid then\n@@ -1653,7 +1654,7 @@ package body System.Stream_Attributes is\n \n       --  Compute Sign\n \n-      Positive := (0.0 <= Item);\n+      Is_Positive := (0.0 <= Item);\n       F := abs (Item);\n \n       --  Signed zero\n@@ -1701,7 +1702,7 @@ package body System.Stream_Attributes is\n \n       --  Store Sign\n \n-      if not Positive then\n+      if not Is_Positive then\n          S (1) := S (1) + BS;\n       end if;\n "}, {"sha": "490048e9a7c2ccf0011e5cab8bb9b754f7bdf0ef", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -431,11 +431,17 @@ package body Sem_Aux is\n    begin\n       N := First_Rep_Item (E);\n       while Present (N) loop\n+\n+         --  Only one of Priority / Interrupt_Priority can be specified, so\n+         --  return whichever one is present to catch illegal duplication.\n+\n          if Nkind (N) = N_Pragma\n            and then\n              (Pragma_Name (N) = Nam\n                or else (Nam = Name_Priority\n-                         and then Pragma_Name (N) = Name_Interrupt_Priority))\n+                         and then Pragma_Name (N) = Name_Interrupt_Priority)\n+               or else (Nam = Name_Interrupt_Priority\n+                         and then Pragma_Name (N) = Name_Priority))\n          then\n             if Check_Parents then\n                return N;"}, {"sha": "51edb644c1dccbfe838bfe3424f0fbdd4d84e249", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 48, "deletions": 65, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -253,9 +253,7 @@ package body Sem_Ch13 is\n             --  is important, since otherwise if there are record subtypes, we\n             --  could reverse the bits once for each subtype, which is wrong.\n \n-            if Present (CC)\n-              and then Ekind (R) = E_Record_Type\n-            then\n+            if Present (CC) and then Ekind (R) = E_Record_Type then\n                declare\n                   CFB : constant Uint    := Component_Bit_Offset (Comp);\n                   CSZ : constant Uint    := Esize (Comp);\n@@ -623,14 +621,12 @@ package body Sem_Ch13 is\n                   for C in Start .. Stop loop\n                      declare\n                         Comp : constant Entity_Id := Comps (C);\n-                        CC   : constant Node_Id   :=\n-                                 Component_Clause (Comp);\n-                        LB   : constant Uint :=\n-                                 Static_Integer (Last_Bit (CC));\n+                        CC   : constant Node_Id   := Component_Clause (Comp);\n+\n+                        LB   : constant Uint := Static_Integer (Last_Bit (CC));\n                         NFB  : constant Uint := MSS - Uint_1 - LB;\n                         NLB  : constant Uint := NFB + Esize (Comp) - 1;\n-                        Pos  : constant Uint :=\n-                                 Static_Integer (Position (CC));\n+                        Pos  : constant Uint := Static_Integer (Position (CC));\n \n                      begin\n                         if Warn_On_Reverse_Bit_Order then\n@@ -1012,9 +1008,7 @@ package body Sem_Ch13 is\n \n             procedure Analyze_Aspect_Implicit_Dereference is\n             begin\n-               if not Is_Type (E)\n-                 or else not Has_Discriminants (E)\n-               then\n+               if not Is_Type (E) or else not Has_Discriminants (E) then\n                   Error_Msg_N\n                     (\"Aspect must apply to a type with discriminants\", N);\n \n@@ -1306,7 +1300,8 @@ package body Sem_Ch13 is\n                         A_Name := Chars (Identifier (A));\n \n                         if A_Name = Name_Import\n-                          or else A_Name = Name_Export\n+                             or else\n+                           A_Name = Name_Export\n                         then\n                            if Found then\n                               Error_Msg_N (\"conflicting\", A);\n@@ -1331,6 +1326,7 @@ package body Sem_Ch13 is\n                      end loop;\n \n                      Arg_List := New_List (Relocate_Node (Expr), Ent);\n+\n                      if Present (L_Assoc) then\n                         Append_To (Arg_List, L_Assoc);\n                      end if;\n@@ -1769,9 +1765,7 @@ package body Sem_Ch13 is\n                   --  For a Boolean aspect, create the corresponding pragma if\n                   --  no expression or if the value is True.\n \n-                  if Is_Boolean_Aspect (Aspect)\n-                    and then No (Aitem)\n-                  then\n+                  if Is_Boolean_Aspect (Aspect) and then No (Aitem) then\n                      if Is_True (Static_Boolean (Expr)) then\n                         Aitem :=\n                           Make_Pragma (Loc,\n@@ -4752,11 +4746,13 @@ package body Sem_Ch13 is\n                              or else Intval (Last_Bit (Rep1)) /=\n                                                    Intval (Last_Bit (CC))\n                            then\n-                              Error_Msg_N (\"component clause inconsistent \"\n-                                & \"with representation of ancestor\", CC);\n+                              Error_Msg_N\n+                                (\"component clause inconsistent \"\n+                                 & \"with representation of ancestor\", CC);\n                            elsif Warn_On_Redundant_Constructs then\n-                              Error_Msg_N (\"?redundant component clause \"\n-                                & \"for inherited component!\", CC);\n+                              Error_Msg_N\n+                                (\"?redundant component clause \"\n+                                 & \"for inherited component!\", CC);\n                            end if;\n                         end;\n                      end if;\n@@ -5031,9 +5027,10 @@ package body Sem_Ch13 is\n          -- Replace_Type_Reference --\n          ----------------------------\n \n+         --  Note: See comments in Add_Predicates.Replace_Type_Reference\n+         --  regarding handling of Sloc and Comes_From_Source.\n+\n          procedure Replace_Type_Reference (N : Node_Id) is\n-            --  See comments in Add_Predicates.Replace_Type_Reference regarding\n-            --  Sloc and Comes_From_Source.\n          begin\n             --  Invariant'Class, replace with T'Class (obj)\n \n@@ -5145,7 +5142,8 @@ package body Sem_Ch13 is\n                Assoc := New_List (\n                  Make_Pragma_Argument_Association (Loc,\n                    Expression => Make_Identifier (Loc, Name_Invariant)),\n-                 Make_Pragma_Argument_Association (Loc, Expression => Exp));\n+                 Make_Pragma_Argument_Association (Loc,\n+                   Expression => Exp));\n \n                --  Add message if present in Invariant pragma\n \n@@ -5254,7 +5252,6 @@ package body Sem_Ch13 is\n       --  Build the procedure if we generated at least one Check pragma\n \n       if Stmts /= No_List then\n-\n          Spec  := Copy_Separate_Tree (Specification (PDecl));\n \n          PBody :=\n@@ -5487,7 +5484,6 @@ package body Sem_Ch13 is\n                if Entity (Arg1) = Typ\n                  or else Full_View (Entity (Arg1)) = Typ\n                then\n-\n                   --  We have a match, this entry is for our subtype\n \n                   --  We need to replace any occurrences of the name of the\n@@ -6074,6 +6070,7 @@ package body Sem_Ch13 is\n             --  Comparisons of type with static value\n \n             when N_Op_Compare =>\n+\n                --  Type is left operand\n \n                if Is_Type_Ref (Left_Opnd (Exp))\n@@ -6336,9 +6333,7 @@ package body Sem_Ch13 is\n       begin\n          --  Not static if type does not have static predicates\n \n-         if not Has_Predicates (Typ)\n-           or else No (Static_Predicate (Typ))\n-         then\n+         if not Has_Predicates (Typ) or else No (Static_Predicate (Typ)) then\n             raise Non_Static;\n          end if;\n \n@@ -7435,9 +7430,7 @@ package body Sem_Ch13 is\n \n             --  Check parent overlap if component might overlap parent field\n \n-            if Present (Tagged_Parent)\n-              and then Fbit <= Parent_Last_Bit\n-            then\n+            if Present (Tagged_Parent) and then Fbit <= Parent_Last_Bit then\n                Pcomp := First_Component_Or_Discriminant (Tagged_Parent);\n                while Present (Pcomp) loop\n                   if not Is_Tag (Pcomp)\n@@ -7599,7 +7592,7 @@ package body Sem_Ch13 is\n                   --  Outer level of record definition, check discriminants\n \n                   if Nkind_In (Clist, N_Full_Type_Declaration,\n-                               N_Private_Type_Declaration)\n+                                      N_Private_Type_Declaration)\n                   then\n                      if Has_Discriminants (Defining_Identifier (Clist)) then\n                         C2_Ent :=\n@@ -7951,6 +7944,7 @@ package body Sem_Ch13 is\n \n             if Asiz <= Siz then\n                return;\n+\n             else\n                Error_Msg_Uint_1 := Asiz;\n                Error_Msg_NE\n@@ -8281,11 +8275,12 @@ package body Sem_Ch13 is\n    begin\n       if Nkind (N) /= N_Attribute_Definition_Clause then\n          return False;\n+\n       else\n          declare\n-            Id    : constant Attribute_Id := Get_Attribute_Id (Chars (N));\n+            Id : constant Attribute_Id := Get_Attribute_Id (Chars (N));\n          begin\n-            return   Id = Attribute_Input\n+            return    Id = Attribute_Input\n               or else Id = Attribute_Output\n               or else Id = Attribute_Read\n               or else Id = Attribute_Write\n@@ -8681,6 +8676,7 @@ package body Sem_Ch13 is\n       elsif Has_Private_Component (T) then\n          if Nkind (N) = N_Pragma then\n             return False;\n+\n          else\n             Error_Msg_N\n               (\"representation item must appear after type is fully defined\",\n@@ -8775,9 +8771,7 @@ package body Sem_Ch13 is\n       --  but avoid chaining if we have an overloadable entity, and the pragma\n       --  is one that can apply to multiple overloaded entities.\n \n-      if Is_Overloadable (T)\n-        and then Nkind (N) = N_Pragma\n-      then\n+      if Is_Overloadable (T) and then Nkind (N) = N_Pragma then\n          declare\n             Pname : constant Name_Id := Pragma_Name (N);\n          begin\n@@ -9045,18 +9039,16 @@ package body Sem_Ch13 is\n \n             begin\n                if Has_Discriminants (T1) then\n-                  CD1 := First_Discriminant (T1);\n-                  CD2 := First_Discriminant (T2);\n \n                   --  The number of discriminants may be different if the\n                   --  derived type has fewer (constrained by values). The\n                   --  invisible discriminants retain the representation of\n                   --  the original, so the discrepancy does not per se\n                   --  indicate a different representation.\n \n-                  while Present (CD1)\n-                    and then Present (CD2)\n-                  loop\n+                  CD1 := First_Discriminant (T1);\n+                  CD2 := First_Discriminant (T2);\n+                  while Present (CD1) and then Present (CD2) loop\n                      if not Same_Rep then\n                         return False;\n                      else\n@@ -9068,7 +9060,6 @@ package body Sem_Ch13 is\n \n                CD1 := First_Component (Underlying_Type (Base_Type (T1)));\n                CD2 := First_Component (Underlying_Type (Base_Type (T2)));\n-\n                while Present (CD1) loop\n                   if not Same_Rep then\n                      return False;\n@@ -9094,7 +9085,6 @@ package body Sem_Ch13 is\n          begin\n             L1 := First_Literal (T1);\n             L2 := First_Literal (T2);\n-\n             while Present (L1) loop\n                if Enumeration_Rep (L1) /= Enumeration_Rep (L2) then\n                   return False;\n@@ -9105,7 +9095,6 @@ package body Sem_Ch13 is\n             end loop;\n \n             return True;\n-\n          end Enumeration_Case;\n \n       --  Any other types have the same representation for these purposes\n@@ -9219,7 +9208,6 @@ package body Sem_Ch13 is\n             --  Skip processing of this entry if warning already posted\n \n             if not Address_Warning_Posted (ACCR.N) then\n-\n                Expr := Original_Node (Expression (ACCR.N));\n \n                --  Get alignments\n@@ -9353,9 +9341,8 @@ package body Sem_Ch13 is\n             --  Bad component size, check reason\n \n             if Has_Component_Size_Clause (Atyp) then\n-               P :=\n-                 Get_Attribute_Definition_Clause\n-                   (Atyp, Attribute_Component_Size);\n+               P := Get_Attribute_Definition_Clause\n+                      (Atyp, Attribute_Component_Size);\n \n                if Present (P) then\n                   Error_Msg_Sloc := Sloc (P);\n@@ -9427,17 +9414,16 @@ package body Sem_Ch13 is\n          --  cases where we cannot check static values.\n \n          if not (Known_Static_Esize (C)\n-                  and then Known_Static_Esize (Ctyp))\n+                  and then\n+                 Known_Static_Esize (Ctyp))\n          then\n             return False;\n          end if;\n \n          --  Size of component must be addressable or greater than 64 bits\n          --  and a multiple of bytes.\n \n-         if not Addressable (Esize (C))\n-           and then Esize (C) < Uint_64\n-         then\n+         if not Addressable (Esize (C)) and then Esize (C) < Uint_64 then\n             return False;\n          end if;\n \n@@ -9626,9 +9612,7 @@ package body Sem_Ch13 is\n \n       --  Source may be unconstrained array, but not target\n \n-      if Is_Array_Type (Target)\n-        and then not Is_Constrained (Target)\n-      then\n+      if Is_Array_Type (Target) and then not Is_Constrained (Target) then\n          Error_Msg_N\n            (\"unchecked conversion to unconstrained array not allowed\", N);\n          return;\n@@ -9674,9 +9658,7 @@ package body Sem_Ch13 is\n          begin\n             pragma Assert (Present (Calendar_Time));\n \n-            if Source = Calendar_Time\n-              or else Target = Calendar_Time\n-            then\n+            if Source = Calendar_Time or else Target = Calendar_Time then\n                Error_Msg_N\n                  (\"?representation of 'Time values may change between \" &\n                   \"'G'N'A'T versions\", N);\n@@ -9691,10 +9673,9 @@ package body Sem_Ch13 is\n \n       if Warn_On_Unchecked_Conversion then\n          Unchecked_Conversions.Append\n-           (New_Val => UC_Entry'\n-              (Eloc   => Sloc (N),\n-               Source => Source,\n-               Target => Target));\n+           (New_Val => UC_Entry'(Eloc   => Sloc (N),\n+                                 Source => Source,\n+                                 Target => Target));\n \n          --  If both sizes are known statically now, then back end annotation\n          --  is not required to do a proper check but if either size is not\n@@ -9792,7 +9773,8 @@ package body Sem_Ch13 is\n                      Error_Msg_Uint_1 := UI_Abs (Source_Siz - Target_Siz);\n \n                      if Is_Discrete_Type (Source)\n-                       and then Is_Discrete_Type (Target)\n+                          and then\n+                        Is_Discrete_Type (Target)\n                      then\n                         if Source_Siz > Target_Siz then\n                            Error_Msg\n@@ -9856,7 +9838,8 @@ package body Sem_Ch13 is\n \n                begin\n                   if Known_Alignment (D_Source)\n-                    and then Known_Alignment (D_Target)\n+                       and then\n+                     Known_Alignment (D_Target)\n                   then\n                      declare\n                         Source_Align : constant Uint := Alignment (D_Source);"}, {"sha": "895af938c4f7241710283bb9f8a61f089d5c5ff2", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -33,6 +33,7 @@ with Expander; use Expander;\n with Exp_Ch6;  use Exp_Ch6;\n with Exp_Ch7;  use Exp_Ch7;\n with Exp_Ch9;  use Exp_Ch9;\n+with Exp_Dbug; use Exp_Dbug;\n with Exp_Disp; use Exp_Disp;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n@@ -2723,6 +2724,16 @@ package body Sem_Ch6 is\n \n             Install_Formals (Spec_Id);\n             Last_Real_Spec_Entity := Last_Entity (Spec_Id);\n+\n+            --  Within an instance, add local renaming declarations so that\n+            --  gdb can retrieve the values of actuals more easily.\n+\n+            if Is_Generic_Instance (Spec_Id)\n+              and then Is_Wrapper_Package (Current_Scope)\n+            then\n+               Build_Subprogram_Instance_Renamings (N, Current_Scope);\n+            end if;\n+\n             Push_Scope (Spec_Id);\n \n             --  Make sure that the subprogram is immediately visible. For"}, {"sha": "60afa011e4fe686a6e0f6c92bf4e4bd64bd42204", "filename": "gcc/ada/sinfo-cn.adb", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fsinfo-cn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fsinfo-cn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo-cn.adb?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,8 +30,11 @@\n --  general manner, but in some specific cases, the fields of related nodes\n --  have been deliberately layed out in a manner that permits such alteration.\n \n-with Atree;  use Atree;\n-with Snames; use Snames;\n+with Atree;    use Atree;\n+with Errout;   use Errout;\n+with Sem_Util; use Sem_Util;\n+with Snames;   use Snames;\n+with Warnsw;   use Warnsw;\n \n package body Sinfo.CN is\n \n@@ -71,6 +74,20 @@ package body Sinfo.CN is\n \n    procedure Change_Identifier_To_Defining_Identifier (N : in out Node_Id) is\n    begin\n+      --  Check for redefinition of standard entity (requiring a warning)\n+\n+      if Warn_On_Standard_Redefinition then\n+         declare\n+            C : constant Entity_Id := Current_Entity (N);\n+         begin\n+            if Present (C) and then Sloc (C) = Standard_Location then\n+               Error_Msg_N (\"redefinition of entity& in Standard?\", N);\n+            end if;\n+         end;\n+      end if;\n+\n+      --  Go ahead with the change\n+\n       Set_Nkind (N, N_Defining_Identifier);\n       N := Extend_Node (N);\n    end Change_Identifier_To_Defining_Identifier;"}, {"sha": "f5e07063cf0de862818406cfb2cc521253c84901", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -435,6 +435,8 @@ begin\n \n    Write_Switch_Char (\"wxx\");\n    Write_Line (\"Enable selected warning modes, xx = list of parameters:\");\n+   Write_Line (\"        *    indicates default setting\");\n+   Write_Line (\"        +    indicates warning flag included in -gnatwa\");\n    Write_Line (\"        a    turn on all info/warnings marked below with +\");\n    Write_Line (\"        A    turn off all optional info/warnings\");\n    Write_Line (\"        .a*+ turn on warnings for failing assertion\");\n@@ -472,6 +474,8 @@ begin\n                                                   \"(annex J) feature\");\n    Write_Line (\"        k+   turn on warnings on constant variable\");\n    Write_Line (\"        K*   turn off warnings on constant variable\");\n+   Write_Line (\"        .k+  turn on warnings for standard redefinition\");\n+   Write_Line (\"        .K*  turn off warnings for standard redefinition\");\n    Write_Line (\"        l    turn on warnings for missing \" &\n                                                   \"elaboration pragma\");\n    Write_Line (\"        L*   turn off warnings for missing \" &\n@@ -541,8 +545,6 @@ begin\n                                                   \"unchecked conversion\");\n    Write_Line (\"        Z    turn off warnings for suspicious \" &\n                                                   \"unchecked conversion\");\n-   Write_Line (\"        *    indicates default in above list\");\n-   Write_Line (\"        +    indicates warning flag included in -gnatwa\");\n \n    --  Line for -gnatW switch\n "}, {"sha": "7920ac902690394d9690b721deff0aeb1f0c8b72", "filename": "gcc/ada/warnsw.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fwarnsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fwarnsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.adb?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -87,6 +87,7 @@ package body Warnsw is\n             Warn_On_Record_Holes                := True;\n             Warn_On_Redundant_Constructs        := True;\n             Warn_On_Reverse_Bit_Order           := True;\n+            Warn_On_Standard_Redefinition       := True;\n             Warn_On_Suspicious_Contract         := True;\n             Warn_On_Unchecked_Conversion        := True;\n             Warn_On_Unordered_Enumeration_Type  := True;\n@@ -109,6 +110,12 @@ package body Warnsw is\n          when 'I' =>\n             Warn_On_Overlap                     := False;\n \n+         when 'k' =>\n+            Warn_On_Standard_Redefinition       := True;\n+\n+         when 'K' =>\n+            Warn_On_Standard_Redefinition       := False;\n+\n          when 'l' =>\n             List_Inherited_Aspects              := True;\n \n@@ -307,6 +314,7 @@ package body Warnsw is\n             Warn_On_Questionable_Missing_Parens := False;\n             Warn_On_Redundant_Constructs        := False;\n             Warn_On_Reverse_Bit_Order           := False;\n+            Warn_On_Standard_Redefinition       := False;\n             Warn_On_Suspicious_Contract         := False;\n             Warn_On_Suspicious_Modulus_Value    := False;\n             Warn_On_Unchecked_Conversion        := False;"}, {"sha": "f802bb7790afd6229cfe3dc560cba3b5d66db22e", "filename": "gcc/ada/warnsw.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fwarnsw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/616547fa1d304d5ca42831def8ddc2d8a1a6aa83/gcc%2Fada%2Fwarnsw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.ads?ref=616547fa1d304d5ca42831def8ddc2d8a1a6aa83", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,6 +47,10 @@ package Warnsw is\n    --  set with an explicit size clause. Off by default, set by -gnatw.s (but\n    --  not -gnatwa).\n \n+   Warn_On_Standard_Redefinition : Boolean := False;\n+   --  Warn when a program defines an identifier that matches a name in\n+   --  Standard. Off by default, set by -gnatw.k (and also by -gnatwa).\n+\n    -----------------\n    -- Subprograms --\n    -----------------"}]}