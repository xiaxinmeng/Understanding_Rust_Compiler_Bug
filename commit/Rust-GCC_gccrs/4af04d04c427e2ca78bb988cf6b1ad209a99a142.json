{"sha": "4af04d04c427e2ca78bb988cf6b1ad209a99a142", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFmMDRkMDRjNDI3ZTJjYTc4YmI5ODhjZjZiMWFkMjA5YTk5YTE0Mg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-09-19T08:13:01Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-19T08:13:01Z"}, "message": "[Ada] Fix spurious type mismatch failure on nested instantiations\n\nThis fixes a spurious type mismatch failure reported between formal and\nactual of a call to a subprogram that comes from the instantiation of a\nchild generic unit that itself contains an instantiation of a slibling\nchild generic unit, when the parent is itself a generic unit with\nprivate part. The regression was introduced by a recent change made to\nclear the Is_Generic_Actual_Type on the implicit full view built when a\ngeneric package is instantiated on a private type.\n\n2019-09-19  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (Restore_Private_Views): Comment out new code\n\tthat clear the Is_Generic_Actual_Type also on the full view.\n\ngcc/testsuite/\n\n\t* gnat.dg/generic_inst13.adb,\n\tgnat.dg/generic_inst13_pkg-nested_g.ads,\n\tgnat.dg/generic_inst13_pkg-ops_g.ads,\n\tgnat.dg/generic_inst13_pkg.ads: New testcase.\n\nFrom-SVN: r275935", "tree": {"sha": "6aecebcde170934f49929bc06001f08200b70add", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6aecebcde170934f49929bc06001f08200b70add"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4af04d04c427e2ca78bb988cf6b1ad209a99a142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4af04d04c427e2ca78bb988cf6b1ad209a99a142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4af04d04c427e2ca78bb988cf6b1ad209a99a142", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4af04d04c427e2ca78bb988cf6b1ad209a99a142/comments", "author": null, "committer": null, "parents": [{"sha": "682c09cebada73fb80e3a36fec6a3b1a09c5781e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/682c09cebada73fb80e3a36fec6a3b1a09c5781e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/682c09cebada73fb80e3a36fec6a3b1a09c5781e"}], "stats": {"total": 82, "additions": 79, "deletions": 3}, "files": [{"sha": "5ff5f16875ae0f4e8b552fe77f6b04b0e7164687", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4af04d04c427e2ca78bb988cf6b1ad209a99a142", "patch": "@@ -1,3 +1,8 @@\n+2019-09-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch12.adb (Restore_Private_Views): Comment out new code\n+\tthat clear the Is_Generic_Actual_Type also on the full view.\n+\n 2019-09-19  Bob Duff  <duff@adacore.com>\n \n \t* exp_ch3.adb (Rewrite_As_Renaming): Return False if there are"}, {"sha": "61a40ebcb94d25f9fdba80c56b57595960c6d612", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=4af04d04c427e2ca78bb988cf6b1ad209a99a142", "patch": "@@ -14638,9 +14638,17 @@ package body Sem_Ch12 is\n             else\n                Set_Is_Generic_Actual_Type (E, False);\n \n-               if Is_Private_Type (E) and then Present (Full_View (E)) then\n-                  Set_Is_Generic_Actual_Type (Full_View (E), False);\n-               end if;\n+               --  It might seem reasonable to clear the Is_Generic_Actual_Type\n+               --  flag also on the Full_View if the type is private, since it\n+               --  was set also on this Full_View. However, this flag is relied\n+               --  upon by Covers to spot \"types exported from instantiations\"\n+               --  which are implicit Full_Views built for instantiations made\n+               --  on private types and we get type mismatches if we do it when\n+               --  the block exchanging the declarations below triggers ???\n+\n+               --  if Is_Private_Type (E) and then Present (Full_View (E)) then\n+               --    Set_Is_Generic_Actual_Type (Full_View (E), False);\n+               --  end if;\n             end if;\n \n             --  An unusual case of aliasing: the actual may also be directly"}, {"sha": "69e78548ab8e2b699c6cbc571c6a428e62741d58", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4af04d04c427e2ca78bb988cf6b1ad209a99a142", "patch": "@@ -1,3 +1,10 @@\n+2019-09-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/generic_inst13.adb,\n+\tgnat.dg/generic_inst13_pkg-nested_g.ads,\n+\tgnat.dg/generic_inst13_pkg-ops_g.ads,\n+\tgnat.dg/generic_inst13_pkg.ads: New testcase.\n+\n 2019-09-19  Bob Duff  <duff@adacore.com>\n \n \t* gnat.dg/concat3.adb: New testcase."}, {"sha": "c83b893dae8826b5ccf34412fecb8e6d49190429", "filename": "gcc/testsuite/gnat.dg/generic_inst13.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13.adb?ref=4af04d04c427e2ca78bb988cf6b1ad209a99a142", "patch": "@@ -0,0 +1,22 @@\n+--  { dg-do compile }\n+\n+with Generic_Inst13_Pkg;\n+with Generic_Inst13_Pkg.Nested_G;\n+\n+procedure Generic_Inst13 is\n+\n+  type Item_T is range 1 .. 16;\n+\n+  package My_Inst is new Generic_Inst13_Pkg (Item_T);\n+\n+  package My_Nested is new My_Inst.Nested_G;\n+\n+  procedure Proc (Left, Right : My_Nested.T) is\n+    R : constant My_Nested.List_T := My_Nested.\"or\" (Left, Right);\n+  begin\n+    null;\n+  end;\n+\n+begin\n+  null;\n+end;"}, {"sha": "edbfe942afefcbc4ddf1a28919abc54442d170ae", "filename": "gcc/testsuite/gnat.dg/generic_inst13_pkg-nested_g.ads", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13_pkg-nested_g.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13_pkg-nested_g.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13_pkg-nested_g.ads?ref=4af04d04c427e2ca78bb988cf6b1ad209a99a142", "patch": "@@ -0,0 +1,14 @@\n+with Generic_Inst13_Pkg.Ops_G;\n+\n+generic\n+package Generic_Inst13_Pkg.Nested_G is\n+\n+  type T is new Generic_Inst13_Pkg.T;\n+\n+  package My_Operations is new Generic_Inst13_Pkg.Ops_G (T);\n+\n+  subtype List_T is My_Operations.List_T;\n+\n+  function \"or\" (Left, Right : T) return List_T renames My_Operations.\"or\";\n+\n+end Generic_Inst13_Pkg.Nested_G;"}, {"sha": "08329408ed0a2ffc3507dd3be60288569c33185f", "filename": "gcc/testsuite/gnat.dg/generic_inst13_pkg-ops_g.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13_pkg-ops_g.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13_pkg-ops_g.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13_pkg-ops_g.ads?ref=4af04d04c427e2ca78bb988cf6b1ad209a99a142", "patch": "@@ -0,0 +1,9 @@\n+generic\n+  type Data_T is private;\n+package Generic_Inst13_Pkg.Ops_G is\n+\n+  type List_T is array (Positive range <>) of Data_T;\n+\n+  function \"or\" (Left, Right : Data_T) return List_T is ((Left, Right));\n+\n+end Generic_Inst13_Pkg.Ops_G;\n\\ No newline at end of file"}, {"sha": "5cdfb64834f96201148ce8a09fa186a7c9e13fa3", "filename": "gcc/testsuite/gnat.dg/generic_inst13_pkg.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4af04d04c427e2ca78bb988cf6b1ad209a99a142/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_inst13_pkg.ads?ref=4af04d04c427e2ca78bb988cf6b1ad209a99a142", "patch": "@@ -0,0 +1,11 @@\n+generic\n+  type Component_T is private;\n+package Generic_Inst13_Pkg is\n+\n+  type T is private;\n+\n+private\n+\n+  type T is array (Boolean) of Component_T;\n+\n+end Generic_Inst13_Pkg;"}]}