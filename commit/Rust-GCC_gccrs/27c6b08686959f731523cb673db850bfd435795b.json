{"sha": "27c6b08686959f731523cb673db850bfd435795b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdjNmIwODY4Njk1OWY3MzE1MjNjYjY3M2RiODUwYmZkNDM1Nzk1Yg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2011-02-15T18:36:16Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2011-02-15T18:36:16Z"}, "message": "re PR debug/47106 (-fcompare-debug failure (length) with  -fpartial-inlining -flto -fconserve-stack)\n\nPR debug/47106\nPR debug/47402\n* tree-flow.h (referenced_var_lookup): Add fn parameter.\nAdjust all callers.\n* tree-dfa.c (referenced_var_lookup): Use fn instead of cfun.\n* tree-flow-inline.h: Adjust.\n* gimple-pretty-print.c: Adjust.\n* tree-into-ssa.c: Adjust.\n* tree-ssa.c: Adjust.\n* cfgexpand.c: Adjust.\n\nFrom-SVN: r170185", "tree": {"sha": "1b4083e3da8dae77376ffb0717557ef0a7be9e34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b4083e3da8dae77376ffb0717557ef0a7be9e34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27c6b08686959f731523cb673db850bfd435795b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c6b08686959f731523cb673db850bfd435795b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27c6b08686959f731523cb673db850bfd435795b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c6b08686959f731523cb673db850bfd435795b/comments", "author": null, "committer": null, "parents": [{"sha": "679e81836971b405e643a8ba12ba084b76b15508", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/679e81836971b405e643a8ba12ba084b76b15508", "html_url": "https://github.com/Rust-GCC/gccrs/commit/679e81836971b405e643a8ba12ba084b76b15508"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "cc9ed6b09fa47479dcc173ac5b5444ab079a2967", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c6b08686959f731523cb673db850bfd435795b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c6b08686959f731523cb673db850bfd435795b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27c6b08686959f731523cb673db850bfd435795b", "patch": "@@ -1,3 +1,16 @@\n+2011-02-15  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/47106\n+\tPR debug/47402\n+\t* tree-flow.h (referenced_var_lookup): Add fn parameter.\n+\tAdjust all callers.\n+\t* tree-dfa.c (referenced_var_lookup): Use fn instead of cfun.\n+\t* tree-flow-inline.h: Adjust.\n+\t* gimple-pretty-print.c: Adjust.\n+\t* tree-into-ssa.c: Adjust.\n+\t* tree-ssa.c: Adjust.\n+\t* cfgexpand.c: Adjust.\n+\n 2011-02-15  Nathan Froyd  <froydnj@codesourcery.com>\n \n         * config/iq2000/i2000.h (REG_CLASS_FROM_LETTER): Delete."}, {"sha": "6fdb10d2507b9d4194a9cca2286adb7ba6ecdc53", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c6b08686959f731523cb673db850bfd435795b/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c6b08686959f731523cb673db850bfd435795b/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=27c6b08686959f731523cb673db850bfd435795b", "patch": "@@ -520,7 +520,7 @@ update_alias_info_with_stack_vars (void)\n \t     for -O0 where we are preserving even unreferenced variables.  */\n \t  gcc_assert (DECL_P (decl)\n \t\t      && (!optimize\n-\t\t\t  || referenced_var_lookup (DECL_UID (decl))));\n+\t\t\t  || referenced_var_lookup (cfun, DECL_UID (decl))));\n \t  bitmap_set_bit (part, uid);\n \t  *((bitmap *) pointer_map_insert (decls_to_partitions,\n \t\t\t\t\t   (void *)(size_t) uid)) = part;"}, {"sha": "747e8cd404f4beb648d20ec58477887d53609909", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c6b08686959f731523cb673db850bfd435795b/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c6b08686959f731523cb673db850bfd435795b/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=27c6b08686959f731523cb673db850bfd435795b", "patch": "@@ -542,7 +542,7 @@ pp_points_to_solution (pretty_printer *buffer, struct pt_solution *pt)\n       pp_string (buffer, \"{ \");\n       EXECUTE_IF_SET_IN_BITMAP (pt->vars, 0, i, bi)\n \t{\n-\t  tree var = referenced_var_lookup (i);\n+\t  tree var = referenced_var_lookup (cfun, i);\n \t  if (var)\n \t    {\n \t      dump_generic_node (buffer, var, 0, dump_flags, false);"}, {"sha": "f37c30fc2c1d2fe6da855b4f8f14b9321c5edc3c", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c6b08686959f731523cb673db850bfd435795b/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c6b08686959f731523cb673db850bfd435795b/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=27c6b08686959f731523cb673db850bfd435795b", "patch": "@@ -488,12 +488,12 @@ find_referenced_vars_in (gimple stmt)\n    variable.  */\n \n tree\n-referenced_var_lookup (unsigned int uid)\n+referenced_var_lookup (struct function *fn, unsigned int uid)\n {\n   tree h;\n   struct tree_decl_minimal in;\n   in.uid = uid;\n-  h = (tree) htab_find_with_hash (gimple_referenced_vars (cfun), &in, uid);\n+  h = (tree) htab_find_with_hash (gimple_referenced_vars (fn), &in, uid);\n   return h;\n }\n "}, {"sha": "538d6fe678fb69610551cc854fb12ee2989fb8d5", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c6b08686959f731523cb673db850bfd435795b/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c6b08686959f731523cb673db850bfd435795b/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=27c6b08686959f731523cb673db850bfd435795b", "patch": "@@ -103,7 +103,7 @@ next_htab_element (htab_iterator *hti)\n static inline tree\n referenced_var (unsigned int uid)\n {\n-  tree var = referenced_var_lookup (uid);\n+  tree var = referenced_var_lookup (cfun, uid);\n   gcc_assert (var || uid == 0);\n   return var;\n }"}, {"sha": "e1700375cce124c42d7a9c83e7de40bf0c89f859", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c6b08686959f731523cb673db850bfd435795b/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c6b08686959f731523cb673db850bfd435795b/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=27c6b08686959f731523cb673db850bfd435795b", "patch": "@@ -319,7 +319,7 @@ typedef struct\n        !end_referenced_vars_p (&(ITER)); \\\n        (VAR) = next_referenced_var (&(ITER)))\n \n-extern tree referenced_var_lookup (unsigned int);\n+extern tree referenced_var_lookup (struct function *, unsigned int);\n extern bool referenced_var_check_and_insert (tree);\n #define num_referenced_vars htab_elements (gimple_referenced_vars (cfun))\n "}, {"sha": "5f6ea19fc7c9500b47f3a52b8859937dc04dde8c", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c6b08686959f731523cb673db850bfd435795b/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c6b08686959f731523cb673db850bfd435795b/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=27c6b08686959f731523cb673db850bfd435795b", "patch": "@@ -1469,7 +1469,7 @@ dump_decl_set (FILE *file, bitmap set)\n \n       EXECUTE_IF_SET_IN_BITMAP (set, 0, i, bi)\n \t{\n-\t  tree var = referenced_var_lookup (i);\n+\t  tree var = referenced_var_lookup (cfun, i);\n \t  if (var)\n \t    print_generic_expr (file, var, 0);\n \t  else"}, {"sha": "a787f710360c721677ebfada993ebedcee50af7f", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c6b08686959f731523cb673db850bfd435795b/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c6b08686959f731523cb673db850bfd435795b/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=27c6b08686959f731523cb673db850bfd435795b", "patch": "@@ -1930,7 +1930,7 @@ maybe_optimize_var (tree var, bitmap addresses_taken, bitmap not_reg_needs)\n \n   /* If the variable is not in the list of referenced vars then we\n      do not need to touch it nor can we rename it.  */\n-  if (!referenced_var_lookup (DECL_UID (var)))\n+  if (!referenced_var_lookup (cfun, DECL_UID (var)))\n     return false;\n \n   if (TREE_ADDRESSABLE (var)"}]}