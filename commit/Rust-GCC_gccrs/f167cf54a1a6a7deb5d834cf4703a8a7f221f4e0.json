{"sha": "f167cf54a1a6a7deb5d834cf4703a8a7f221f4e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE2N2NmNTRhMWE2YTdkZWI1ZDgzNGNmNDcwM2E4YTdmMjIxZjRlMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-02-11T08:11:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-02-11T08:11:52Z"}, "message": "re PR rtl-optimization/69291 (wrong code at -O1 for ruby-2.3.0/regcomp.c:985:compile_length_quantifier_node())\n\n2016-02-11  Richard Biener  <rguenther@suse.de>\n\n\tPR rtl-optimization/69291\n\t* ifcvt.c (noce_try_store_flag_constants): Do not allow\n\tsubexpressions affected by changing the result.\n\nFrom-SVN: r233316", "tree": {"sha": "a6de3a8d010410ba2f310ee3377056ba4949dbf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6de3a8d010410ba2f310ee3377056ba4949dbf9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f167cf54a1a6a7deb5d834cf4703a8a7f221f4e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f167cf54a1a6a7deb5d834cf4703a8a7f221f4e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f167cf54a1a6a7deb5d834cf4703a8a7f221f4e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f167cf54a1a6a7deb5d834cf4703a8a7f221f4e0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "168a75879e79c37071a70cd98d6b1dcb7f18c202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/168a75879e79c37071a70cd98d6b1dcb7f18c202", "html_url": "https://github.com/Rust-GCC/gccrs/commit/168a75879e79c37071a70cd98d6b1dcb7f18c202"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "6037782465c16303a8dc96f3fa68fbed4095d80b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f167cf54a1a6a7deb5d834cf4703a8a7f221f4e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f167cf54a1a6a7deb5d834cf4703a8a7f221f4e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f167cf54a1a6a7deb5d834cf4703a8a7f221f4e0", "patch": "@@ -1,3 +1,9 @@\n+2016-02-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/69291\n+\t* ifcvt.c (noce_try_store_flag_constants): Do not allow\n+\tsubexpressions affected by changing the result.\n+\n 2016-02-10  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/69148"}, {"sha": "205590938a5e434abdc85048367dd541d1d66f2d", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f167cf54a1a6a7deb5d834cf4703a8a7f221f4e0/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f167cf54a1a6a7deb5d834cf4703a8a7f221f4e0/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=f167cf54a1a6a7deb5d834cf4703a8a7f221f4e0", "patch": "@@ -1274,7 +1274,10 @@ noce_try_store_flag_constants (struct noce_if_info *if_info)\n       && CONST_INT_P (XEXP (a, 1))\n       && CONST_INT_P (XEXP (b, 1))\n       && rtx_equal_p (XEXP (a, 0), XEXP (b, 0))\n-      && noce_operand_ok (XEXP (a, 0))\n+      /* Allow expressions that are not using the result or plain\n+         registers where we handle overlap below.  */\n+      && (REG_P (XEXP (a, 0))\n+\t  || ! reg_overlap_mentioned_p (if_info->x, XEXP (a, 0)))\n       && if_info->branch_cost >= 2)\n     {\n       common = XEXP (a, 0);"}]}