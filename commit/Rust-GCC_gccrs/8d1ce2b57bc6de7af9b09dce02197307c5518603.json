{"sha": "8d1ce2b57bc6de7af9b09dce02197307c5518603", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQxY2UyYjU3YmM2ZGU3YWY5YjA5ZGNlMDIxOTczMDdjNTUxODYwMw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2017-02-13T15:09:54Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2017-02-13T15:09:54Z"}, "message": "[ARM] Fix assembly comment syntax in -mprint-tune-info\n\n\t* config/arm/arm.c (arm_print_tune_info): Use ASM_COMMENT_START instead\n\tof explicit '@'.  Add missing assembly comment marker on branch costs\n\tprintout.\n\nFrom-SVN: r245388", "tree": {"sha": "281870e3088236c1d1054cc923a189ece656bcba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/281870e3088236c1d1054cc923a189ece656bcba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d1ce2b57bc6de7af9b09dce02197307c5518603", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1ce2b57bc6de7af9b09dce02197307c5518603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d1ce2b57bc6de7af9b09dce02197307c5518603", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1ce2b57bc6de7af9b09dce02197307c5518603/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e9d2c4f5f595a2def9c11d1ace4426143c6f592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9d2c4f5f595a2def9c11d1ace4426143c6f592", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e9d2c4f5f595a2def9c11d1ace4426143c6f592"}], "stats": {"total": 63, "additions": 39, "deletions": 24}, "files": [{"sha": "113328cc828d995954b93a51b3a477378a9a3efd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1ce2b57bc6de7af9b09dce02197307c5518603/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1ce2b57bc6de7af9b09dce02197307c5518603/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d1ce2b57bc6de7af9b09dce02197307c5518603", "patch": "@@ -1,3 +1,9 @@\n+2016-02-13  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (arm_print_tune_info): Use ASM_COMMENT_START instead\n+\tof explicit '@'.  Add missing assembly comment marker on branch costs\n+\tprintout.\n+\n 2017-02-13  Nathan Sidwell  <nathan@acm.org>\n \n \t* gengtype-lex.l (<in_struct>): Add '/'."}, {"sha": "bd5b69950a98b5a15d5d586c81cb7273cfceeb14", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 33, "deletions": 24, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1ce2b57bc6de7af9b09dce02197307c5518603/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1ce2b57bc6de7af9b09dce02197307c5518603/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=8d1ce2b57bc6de7af9b09dce02197307c5518603", "patch": "@@ -25948,46 +25948,55 @@ arm_emit_eabi_attribute (const char *name, int num, int val)\n void\n arm_print_tune_info (void)\n {\n-  asm_fprintf (asm_out_file, \"\\t@.tune parameters\\n\");\n-  asm_fprintf (asm_out_file, \"\\t\\t@constant_limit:\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\" ASM_COMMENT_START \".tune parameters\\n\");\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START \"constant_limit:\\t%d\\n\",\n \t       current_tune->constant_limit);\n-  asm_fprintf (asm_out_file, \"\\t\\t@max_insns_skipped:\\t%d\\n\",\n-\t       current_tune->max_insns_skipped);\n-  asm_fprintf (asm_out_file, \"\\t\\t@prefetch.num_slots:\\t%d\\n\",\n-\t       current_tune->prefetch.num_slots);\n-  asm_fprintf (asm_out_file, \"\\t\\t@prefetch.l1_cache_size:\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"max_insns_skipped:\\t%d\\n\", current_tune->max_insns_skipped);\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"prefetch.num_slots:\\t%d\\n\", current_tune->prefetch.num_slots);\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"prefetch.l1_cache_size:\\t%d\\n\",\n \t       current_tune->prefetch.l1_cache_size);\n-  asm_fprintf (asm_out_file, \"\\t\\t@prefetch.l1_cache_line_size:\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"prefetch.l1_cache_line_size:\\t%d\\n\",\n \t       current_tune->prefetch.l1_cache_line_size);\n-  asm_fprintf (asm_out_file, \"\\t\\t@prefer_constant_pool:\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"prefer_constant_pool:\\t%d\\n\",\n \t       (int) current_tune->prefer_constant_pool);\n-  asm_fprintf (asm_out_file, \"\\t\\t@branch_cost:\\t(s:speed, p:predictable)\\n\");\n-  asm_fprintf (asm_out_file, \"\\t\\t\\t\\ts&p\\tcost\\n\");\n-  asm_fprintf (asm_out_file, \"\\t\\t\\t\\t00\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"branch_cost:\\t(s:speed, p:predictable)\\n\");\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START \"\\t\\ts&p\\tcost\\n\");\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START \"\\t\\t00\\t%d\\n\",\n \t       current_tune->branch_cost (false, false));\n-  asm_fprintf (asm_out_file, \"\\t\\t\\t\\t01\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START \"\\t\\t01\\t%d\\n\",\n \t       current_tune->branch_cost (false, true));\n-  asm_fprintf (asm_out_file, \"\\t\\t\\t\\t10\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START \"\\t\\t10\\t%d\\n\",\n \t       current_tune->branch_cost (true, false));\n-  asm_fprintf (asm_out_file, \"\\t\\t\\t\\t11\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START \"\\t\\t11\\t%d\\n\",\n \t       current_tune->branch_cost (true, true));\n-  asm_fprintf (asm_out_file, \"\\t\\t@prefer_ldrd_strd:\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"prefer_ldrd_strd:\\t%d\\n\",\n \t       (int) current_tune->prefer_ldrd_strd);\n-  asm_fprintf (asm_out_file, \"\\t\\t@logical_op_non_short_circuit:\\t[%d,%d]\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"logical_op_non_short_circuit:\\t[%d,%d]\\n\",\n \t       (int) current_tune->logical_op_non_short_circuit_thumb,\n \t       (int) current_tune->logical_op_non_short_circuit_arm);\n-  asm_fprintf (asm_out_file, \"\\t\\t@prefer_neon_for_64bits:\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"prefer_neon_for_64bits:\\t%d\\n\",\n \t       (int) current_tune->prefer_neon_for_64bits);\n-  asm_fprintf (asm_out_file,\n-\t       \"\\t\\t@disparage_flag_setting_t16_encodings:\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"disparage_flag_setting_t16_encodings:\\t%d\\n\",\n \t       (int) current_tune->disparage_flag_setting_t16_encodings);\n-  asm_fprintf (asm_out_file, \"\\t\\t@string_ops_prefer_neon:\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"string_ops_prefer_neon:\\t%d\\n\",\n \t       (int) current_tune->string_ops_prefer_neon);\n-  asm_fprintf (asm_out_file, \"\\t\\t@max_insns_inline_memset:\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START\n+\t       \"max_insns_inline_memset:\\t%d\\n\",\n \t       current_tune->max_insns_inline_memset);\n-  asm_fprintf (asm_out_file, \"\\t\\t@fusible_ops:\\t%u\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START \"fusible_ops:\\t%u\\n\",\n \t       current_tune->fusible_ops);\n-  asm_fprintf (asm_out_file, \"\\t\\t@sched_autopref:\\t%d\\n\",\n+  asm_fprintf (asm_out_file, \"\\t\\t\" ASM_COMMENT_START \"sched_autopref:\\t%d\\n\",\n \t       (int) current_tune->sched_autopref);\n }\n "}]}