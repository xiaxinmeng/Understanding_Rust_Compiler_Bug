{"sha": "5e849f6e86c9cccc8fcc145d887dfdbd08134da7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU4NDlmNmU4NmM5Y2NjYzhmY2MxNDVkODg3ZGZkYmQwODEzNGRhNw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@cygnus.com", "date": "2000-04-27T14:46:55Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-04-27T14:46:55Z"}, "message": "mn10300.md (movqi): Simplify.\n\n* config/mn10300/mn10300.md (movqi): Simplify.  Prefer data\nregisters.\n\nFrom-SVN: r33485", "tree": {"sha": "1fb4b0ff1db61a90034ef90be3d76feb82967e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fb4b0ff1db61a90034ef90be3d76feb82967e65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e849f6e86c9cccc8fcc145d887dfdbd08134da7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e849f6e86c9cccc8fcc145d887dfdbd08134da7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e849f6e86c9cccc8fcc145d887dfdbd08134da7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e849f6e86c9cccc8fcc145d887dfdbd08134da7/comments", "author": null, "committer": null, "parents": [{"sha": "2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a5b96fdb1cdccc1dfe2c8feb36ddaec7ac08069"}], "stats": {"total": 43, "additions": 19, "deletions": 24}, "files": [{"sha": "c563b2196537d77b8a6394372fec18b9a5ce1198", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e849f6e86c9cccc8fcc145d887dfdbd08134da7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e849f6e86c9cccc8fcc145d887dfdbd08134da7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e849f6e86c9cccc8fcc145d887dfdbd08134da7", "patch": "@@ -1,3 +1,8 @@\n+Thu Apr 27 11:45:16 2000  Alexandre Oliva  <aoliva@cygnus.com>\n+\n+\t* config/mn10300/mn10300.md (movqi): Simplify.  Prefer data\n+\tregisters.\n+\n Thu Apr 27 16:11:00 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* expr.c (store_expr): Use clear_storage instead of direct memset"}, {"sha": "12e809fdb861bcf883f919c101a349b118cc7b61", "filename": "gcc/config/mn10300/mn10300.md", "status": "modified", "additions": 14, "deletions": 24, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e849f6e86c9cccc8fcc145d887dfdbd08134da7/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e849f6e86c9cccc8fcc145d887dfdbd08134da7/gcc%2Fconfig%2Fmn10300%2Fmn10300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.md?ref=5e849f6e86c9cccc8fcc145d887dfdbd08134da7", "patch": "@@ -56,8 +56,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=dx,a,dx,a,dx,a,dx,a,dxa,m\")\n-\t(match_operand:QI 1 \"general_operand\" \"0,0,I,I,a,dx,dxi,ia,m,dxa\"))]\n+  [(set (match_operand:QI 0 \"general_operand\" \"=d*x*a,d*x,d*x*a,d*x*a,m\")\n+\t(match_operand:QI 1 \"general_operand\" \"0,I,d*xai,m,d*xa\"))]\n   \"TARGET_AM33\n    && (register_operand (operands[0], QImode)\n        || register_operand (operands[1], QImode))\"\n@@ -66,15 +66,10 @@\n   switch (which_alternative)\n     {\n     case 0:\n-    case 1:\n       return \\\"nop\\\";\n-    case 2:\n+    case 1:\n       return \\\"clr %0\\\";\n-    case 3:\n-    case 4:\n-    case 5:\n-    case 6:\n-    case 7:\n+    case 2:\n       if (GET_CODE (operands[1]) == CONST_DOUBLE)\n \t{\n \t  rtx xoperands[2];\n@@ -94,34 +89,29 @@\n \t    return \\\"movu %1,%0\\\";\n \t}\n       return \\\"mov %1,%0\\\";\n-    case 8:\n-    case 9:\n+    case 3:\n+    case 4:\n       return \\\"movbu %1,%0\\\";\n     default:\n       abort ();\n     }\n }\"\n-  [(set_attr \"cc\" \"none,none,clobber,none_0hit,none_0hit,none_0hit,none_0hit,none_0hit,none_0hit,none_0hit\")])\n+  [(set_attr \"cc\" \"none,clobber,none_0hit,none_0hit,none_0hit\")])\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"=dx,*a,dx,*a,dx,*a,dx,*a,dx,m\")\n-\t(match_operand:QI 1 \"general_operand\" \"0,0,I,I,a,dx,dxi,ia,m,dx\"))]\n+  [(set (match_operand:QI 0 \"general_operand\" \"=d*a,d,d*a,d,m\")\n+\t(match_operand:QI 1 \"general_operand\" \"0,I,dai,m,d\"))]\n   \"register_operand (operands[0], QImode)\n    || register_operand (operands[1], QImode)\"\n   \"*\n {\n   switch (which_alternative)\n     {\n     case 0:\n-    case 1:\n       return \\\"nop\\\";\n-    case 2:\n+    case 1:\n       return \\\"clr %0\\\";\n-    case 3:\n-    case 4:\n-    case 5:\n-    case 6:\n-    case 7:\n+    case 2:\n       if (GET_CODE (operands[1]) == CONST_DOUBLE)\n \t{\n \t  rtx xoperands[2];\n@@ -132,14 +122,14 @@\n \t}\n \n       return \\\"mov %1,%0\\\";\n-    case 8:\n-    case 9:\n+    case 3:\n+    case 4:\n       return \\\"movbu %1,%0\\\";\n     default:\n       abort ();\n     }\n }\"\n-  [(set_attr \"cc\" \"none,none,clobber,none_0hit,none_0hit,none_0hit,none_0hit,none_0hit,none_0hit,none_0hit\")])\n+  [(set_attr \"cc\" \"none,clobber,none_0hit,none_0hit,none_0hit\")])\n \n ;; movhi\n "}]}