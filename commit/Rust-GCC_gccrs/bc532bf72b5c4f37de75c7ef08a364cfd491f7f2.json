{"sha": "bc532bf72b5c4f37de75c7ef08a364cfd491f7f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM1MzJiZjcyYjVjNGYzN2RlNzVjN2VmMDhhMzY0Y2ZkNDkxZjdmMg==", "commit": {"author": {"name": "Steve Christiansen", "email": "smc@us.ibm.com", "date": "2001-11-07T06:24:46Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-11-07T06:24:46Z"}, "message": "* loop.c (loop_regs_scan):  Don't invalidate PIC register.\n\nFrom-SVN: r46817", "tree": {"sha": "c5fddc0c80d6ba84addceb45d48bd84d3fa42ce7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5fddc0c80d6ba84addceb45d48bd84d3fa42ce7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc532bf72b5c4f37de75c7ef08a364cfd491f7f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc532bf72b5c4f37de75c7ef08a364cfd491f7f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc532bf72b5c4f37de75c7ef08a364cfd491f7f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc532bf72b5c4f37de75c7ef08a364cfd491f7f2/comments", "author": null, "committer": null, "parents": [{"sha": "2a2be25e129c9d24ed6d7eeb5b2cab6c630a2d5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a2be25e129c9d24ed6d7eeb5b2cab6c630a2d5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a2be25e129c9d24ed6d7eeb5b2cab6c630a2d5b"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "ab7b2fad794bd9442881b4357c391d689a3c2a82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc532bf72b5c4f37de75c7ef08a364cfd491f7f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc532bf72b5c4f37de75c7ef08a364cfd491f7f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc532bf72b5c4f37de75c7ef08a364cfd491f7f2", "patch": "@@ -1,3 +1,7 @@\n+2001-11-06  Steve Christiansen  <smc@us.ibm.com>\n+\n+\t* loop.c (loop_regs_scan):  Don't invalidate PIC register.\n+\n 2001-11-06  Eric Christopher  <echristo@redhat.com>\n \n \t* config/mips/mips.md(movdf_internal2): Add constraints for float"}, {"sha": "bc2285238ecd34613a98fe820db2024f1922d7a6", "filename": "gcc/loop.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc532bf72b5c4f37de75c7ef08a364cfd491f7f2/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc532bf72b5c4f37de75c7ef08a364cfd491f7f2/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=bc532bf72b5c4f37de75c7ef08a364cfd491f7f2", "patch": "@@ -8819,11 +8819,18 @@ loop_regs_scan (loop, extra_size)\n \tmemset (last_set, 0, regs->num * sizeof (rtx));\n     }\n \n-  for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-    {\n-      regs->array[i].may_not_optimize = 1;\n-      regs->array[i].set_in_loop = 1;\n-    }\n+  /* Invalidate all hard registers clobbered by calls.  With one exception:\n+     a call-clobbered PIC register is still function-invariant for our\n+     purposes, since we can hoist any PIC calculations out of the loop.\n+     Thus the call to rtx_varies_p.  */\n+  if (LOOP_INFO (loop)->has_call)\n+    for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n+      if (TEST_HARD_REG_BIT (regs_invalidated_by_call, i)\n+          && rtx_varies_p (gen_rtx_REG (Pmode, i), /*for_alias=*/1))\n+        {\n+          regs->array[i].may_not_optimize = 1;\n+          regs->array[i].set_in_loop = 1;\n+        }\n \n #ifdef AVOID_CCMODE_COPIES\n   /* Don't try to move insns which set CC registers if we should not"}]}