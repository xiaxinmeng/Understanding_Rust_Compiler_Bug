{"sha": "b5835272a085adf5a5c5491f5614dbfdc394d13e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU4MzUyNzJhMDg1YWRmNWE1YzU0OTFmNTYxNGRiZmRjMzk0ZDEzZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-16T18:31:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-16T18:31:00Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r14461", "tree": {"sha": "65cc18e2a7ee80357086ae31d003de50bfd1fca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65cc18e2a7ee80357086ae31d003de50bfd1fca0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5835272a085adf5a5c5491f5614dbfdc394d13e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5835272a085adf5a5c5491f5614dbfdc394d13e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5835272a085adf5a5c5491f5614dbfdc394d13e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5835272a085adf5a5c5491f5614dbfdc394d13e/comments", "author": null, "committer": null, "parents": [{"sha": "71791e16e370fa64078a593b8542946d8f04fb62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71791e16e370fa64078a593b8542946d8f04fb62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71791e16e370fa64078a593b8542946d8f04fb62"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "44f1748e6e1babe357103cfe5b857e8bbad58fd3", "filename": "gcc/flow.c", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5835272a085adf5a5c5491f5614dbfdc394d13e/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5835272a085adf5a5c5491f5614dbfdc394d13e/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=b5835272a085adf5a5c5491f5614dbfdc394d13e", "patch": "@@ -1135,17 +1135,17 @@ life_analysis (f, nregs)\n \t\t reg that is live at the end now but was not live there before\n \t\t is one of the significant regs of this basic block).  */\n \n-\t      EXECUTE_IF_AND_COMPL_IN_REG_SET (basic_block_new_live_at_end[i],\n-\t\t\t\t\t       basic_block_live_at_end[i],\n-\t\t\t\t\t       0, j,\n-\t\t\t\t\t       {\n-\t\t\t\t\t\t consider = 1;\n-\t\t\t\t\t\t if (REGNO_REG_SET_P (basic_block_significant[i], j))\n-\t\t\t\t\t\t   {\n-\t\t\t\t\t\t     must_rescan = 1;\n-\t\t\t\t\t\t     goto done;\n-\t\t\t\t\t\t   }\n-\t\t\t\t\t       });\n+\t      EXECUTE_IF_AND_COMPL_IN_REG_SET\n+\t\t(basic_block_new_live_at_end[i],\n+\t\t basic_block_live_at_end[i], 0, j,\n+\t\t {\n+\t\t   consider = 1;\n+\t\t   if (REGNO_REG_SET_P (basic_block_significant[i], j))\n+\t\t     {\n+\t\t       must_rescan = 1;\n+\t\t       goto done;\n+\t\t     }\n+\t\t });\n \t    done:\n \t      if (! consider)\n \t\tcontinue;\n@@ -1661,11 +1661,12 @@ propagate_block (old, first, last, final, significant, bnum)\n \t      register int regno;\n \t      register int *p;\n \n-\t      EXECUTE_IF_AND_COMPL_IN_REG_SET (live, maxlive, 0, regno,\n-\t\t\t\t\t       {\n-\t\t\t\t\t\t regs_sometimes_live[sometimes_max++] = regno;\n-\t\t\t\t\t\t SET_REGNO_REG_SET (maxlive, regno);\n-\t\t\t\t\t       });\n+\t      EXECUTE_IF_AND_COMPL_IN_REG_SET\n+\t\t(live, maxlive, 0, regno,\n+\t\t {\n+\t\t   regs_sometimes_live[sometimes_max++] = regno;\n+\t\t   SET_REGNO_REG_SET (maxlive, regno);\n+\t\t });\n \n \t      p = regs_sometimes_live;\n \t      for (i = 0; i < sometimes_max; i++)"}]}