{"sha": "60b787004834c234f5ce3e7fb5a960d76115d673", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBiNzg3MDA0ODM0YzIzNGY1Y2UzZTdmYjVhOTYwZDc2MTE1ZDY3Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-09-20T07:56:42Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-20T07:56:42Z"}, "message": "real.c (do_fix_trunc): Static.\n\n        * real.c (do_fix_trunc): Static.\n        (encode_ieee_single, encode_ieee_double, encode_ieee_extended,\n        encode_ieee_quad, encode_vax_f, encode_vax_d, encode_vax_g,\n        encode_i370_single, encode_i370_double, encode_c4x_single,\n        encode_c4x_extended): Add default abort case.\n\nFrom-SVN: r57344", "tree": {"sha": "60133295b97b11233acbc05c8d3f088a5d05561a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60133295b97b11233acbc05c8d3f088a5d05561a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60b787004834c234f5ce3e7fb5a960d76115d673", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60b787004834c234f5ce3e7fb5a960d76115d673", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60b787004834c234f5ce3e7fb5a960d76115d673", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60b787004834c234f5ce3e7fb5a960d76115d673/comments", "author": null, "committer": null, "parents": [{"sha": "0ee6fdb5f75d25d7488b43dc61ff73872cf406f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee6fdb5f75d25d7488b43dc61ff73872cf406f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ee6fdb5f75d25d7488b43dc61ff73872cf406f8"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "001a0c611e616ab2dad664435f0425623e75dc4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60b787004834c234f5ce3e7fb5a960d76115d673/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60b787004834c234f5ce3e7fb5a960d76115d673/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60b787004834c234f5ce3e7fb5a960d76115d673", "patch": "@@ -1,3 +1,11 @@\n+2002-09-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* real.c (do_fix_trunc): Static.\n+\t(encode_ieee_single, encode_ieee_double, encode_ieee_extended,\n+\tencode_ieee_quad, encode_vax_f, encode_vax_d, encode_vax_g,\n+\tencode_i370_single, encode_i370_double, encode_c4x_single,\n+\tencode_c4x_extended): Add default abort case.\n+\n 2002-09-20  Richard Henderson  <rth@redhat.com>\n \n \t* real.h (enum real_value_class, SIGNIFICAND_BITS, EXP_BITS,"}, {"sha": "2c28135c17138d469a07179517937977fa7acd68", "filename": "gcc/real.c", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60b787004834c234f5ce3e7fb5a960d76115d673/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60b787004834c234f5ce3e7fb5a960d76115d673/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=60b787004834c234f5ce3e7fb5a960d76115d673", "patch": "@@ -993,7 +993,7 @@ do_compare (a, b, nan_result)\n \n /* Return A truncated to an integral value toward zero.  */\n \n-void\n+static void\n do_fix_trunc (r, a)\n      REAL_VALUE_TYPE *r;\n      const REAL_VALUE_TYPE *a;\n@@ -2366,6 +2366,9 @@ encode_ieee_single (fmt, buf, r)\n       image |= exp << 23;\n       image |= sig;\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   buf[0] = image;\n@@ -2516,6 +2519,9 @@ encode_ieee_double (fmt, buf, r)\n       image_hi |= sig_hi;\n       image_lo = sig_lo;\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   if (FLOAT_WORDS_BIG_ENDIAN)\n@@ -2746,6 +2752,9 @@ encode_ieee_extended (fmt, buf, r)\n \t  }\n       }\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   if (FLOAT_WORDS_BIG_ENDIAN)\n@@ -3016,6 +3025,9 @@ encode_ieee_quad (fmt, buf, r)\n \t  image2 &= 0xffffffff;\n \t}\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   if (FLOAT_WORDS_BIG_ENDIAN)\n@@ -3209,6 +3221,9 @@ encode_vax_f (fmt, buf, r)\n       image |= exp << 7;\n       image |= sig >> 16;\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   buf[0] = image;\n@@ -3281,6 +3296,9 @@ encode_vax_d (fmt, buf, r)\n       image0 |= sign;\n       image0 |= (r->exp + 128) << 7;\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   if (FLOAT_WORDS_BIG_ENDIAN)\n@@ -3382,6 +3400,9 @@ encode_vax_g (fmt, buf, r)\n       image0 |= sign;\n       image0 |= (r->exp + 1024) << 4;\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   if (FLOAT_WORDS_BIG_ENDIAN)\n@@ -3529,6 +3550,9 @@ encode_i370_single (fmt, buf, r)\n       exp = ((r->exp / 4) + 64) << 24;\n       image = sign | exp | sig;\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   buf[0] = image;\n@@ -3599,6 +3623,9 @@ encode_i370_double (fmt, buf, r)\n       exp = ((r->exp / 4) + 64) << 24;\n       image_hi |= sign | exp;\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   if (FLOAT_WORDS_BIG_ENDIAN)\n@@ -3723,6 +3750,9 @@ encode_c4x_single (fmt, buf, r)\n \t  sig |= 0x800000;\n \t}\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   image = ((exp & 0xff) << 24) | (sig & 0xffffff);\n@@ -3802,6 +3832,9 @@ encode_c4x_extended (fmt, buf, r)\n \t  sig |= 0x80000000;\n \t}\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   exp = (exp & 0xff) << 24;"}]}