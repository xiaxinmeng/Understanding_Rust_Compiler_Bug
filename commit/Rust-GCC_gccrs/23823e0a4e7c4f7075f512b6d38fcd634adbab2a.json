{"sha": "23823e0a4e7c4f7075f512b6d38fcd634adbab2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM4MjNlMGE0ZTdjNGY3MDc1ZjUxMmI2ZDM4ZmNkNjM0YWRiYWIyYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-09-30T15:49:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-09-30T15:49:24Z"}, "message": "* parser.c (cp_parser_lambda_expression): Don't add __ to __this.\n\nFrom-SVN: r152330", "tree": {"sha": "bf44875e3be200ca784ead2087067b0e5c918a02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf44875e3be200ca784ead2087067b0e5c918a02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23823e0a4e7c4f7075f512b6d38fcd634adbab2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23823e0a4e7c4f7075f512b6d38fcd634adbab2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23823e0a4e7c4f7075f512b6d38fcd634adbab2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23823e0a4e7c4f7075f512b6d38fcd634adbab2a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bfd6b23c4f733584abc55de79b10d575fc87152d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd6b23c4f733584abc55de79b10d575fc87152d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd6b23c4f733584abc55de79b10d575fc87152d"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "ae162d4e6e60a5e72614a5170a9186bada52bee9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23823e0a4e7c4f7075f512b6d38fcd634adbab2a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23823e0a4e7c4f7075f512b6d38fcd634adbab2a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=23823e0a4e7c4f7075f512b6d38fcd634adbab2a", "patch": "@@ -1,3 +1,7 @@\n+2009-09-30  Jason Merrill  <jason@redhat.com>\n+\n+\t* parser.c (cp_parser_lambda_expression): Don't add __ to __this.\n+\n 2009-09-30  Jason Merrill  <jason@redhat.com>\n \n \t* cp-tree.h (LANG_DECL_U2_CHECK): Check LANG_DECL_HAS_MIN."}, {"sha": "deded0062ea4df13c3f2f2a626d7eb6e8772e226", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23823e0a4e7c4f7075f512b6d38fcd634adbab2a/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23823e0a4e7c4f7075f512b6d38fcd634adbab2a/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=23823e0a4e7c4f7075f512b6d38fcd634adbab2a", "patch": "@@ -7077,21 +7077,26 @@ cp_parser_lambda_expression (cp_parser* parser)\n       for (elt = LAMBDA_EXPR_CAPTURE_LIST (lambda_expr);\n \t   elt; elt = next)\n \t{\n+\t  tree field = TREE_PURPOSE (elt);\n+\t  char *buf;\n+\n+\t  next = TREE_CHAIN (elt);\n+\t  TREE_CHAIN (elt) = newlist;\n+\t  newlist = elt;\n+\n \t  /* Also add __ to the beginning of the field name so that code\n \t     outside the lambda body can't see the captured name.  We could\n \t     just remove the name entirely, but this is more useful for\n \t     debugging.  */\n-\t  tree field = TREE_PURPOSE (elt);\n-\t  char *buf\n-\t    = (char *) alloca (IDENTIFIER_LENGTH (DECL_NAME (field)) + 3);\n+\t  if (field == LAMBDA_EXPR_THIS_CAPTURE (lambda_expr))\n+\t    /* The 'this' capture already starts with __.  */\n+\t    continue;\n+\n+\t  buf = (char *) alloca (IDENTIFIER_LENGTH (DECL_NAME (field)) + 3);\n \t  buf[1] = buf[0] = '_';\n \t  memcpy (buf + 2, IDENTIFIER_POINTER (DECL_NAME (field)),\n \t\t  IDENTIFIER_LENGTH (DECL_NAME (field)) + 1);\n \t  DECL_NAME (field) = get_identifier (buf);\n-\n-\t  next = TREE_CHAIN (elt);\n-\t  TREE_CHAIN (elt) = newlist;\n-\t  newlist = elt;\n \t}\n       LAMBDA_EXPR_CAPTURE_LIST (lambda_expr) = newlist;\n     }"}]}