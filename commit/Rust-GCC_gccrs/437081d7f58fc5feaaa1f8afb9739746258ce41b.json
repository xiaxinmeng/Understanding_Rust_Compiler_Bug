{"sha": "437081d7f58fc5feaaa1f8afb9739746258ce41b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM3MDgxZDdmNThmYzVmZWFhYTFmOGFmYjk3Mzk3NDYyNThjZTQxYg==", "commit": {"author": {"name": "Robert Bowdidge", "email": "bowdidge@apple.com", "date": "2003-10-21T23:41:53Z"}, "committer": {"name": "Robert Bowdidge", "email": "bowdidge@gcc.gnu.org", "date": "2003-10-21T23:41:53Z"}, "message": "decl.c (cp_finish_decl): Remove clause intended for asm directives in struct or class fields...\n\n\n\n* cp/decl.c (cp_finish_decl): Remove clause intended for asm\n  directives in struct or class fields: this code is never executed.\n\nFrom-SVN: r72775", "tree": {"sha": "f2defe2f1d160110e8eb43a27d1c8f9cf404f97c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2defe2f1d160110e8eb43a27d1c8f9cf404f97c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/437081d7f58fc5feaaa1f8afb9739746258ce41b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437081d7f58fc5feaaa1f8afb9739746258ce41b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/437081d7f58fc5feaaa1f8afb9739746258ce41b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437081d7f58fc5feaaa1f8afb9739746258ce41b/comments", "author": null, "committer": null, "parents": [{"sha": "7451756f3107554b2f1c442e3dd1d53e6fc74d46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7451756f3107554b2f1c442e3dd1d53e6fc74d46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7451756f3107554b2f1c442e3dd1d53e6fc74d46"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "df0297ae5b296d7063c0646e26e685c849f29378", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437081d7f58fc5feaaa1f8afb9739746258ce41b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437081d7f58fc5feaaa1f8afb9739746258ce41b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=437081d7f58fc5feaaa1f8afb9739746258ce41b", "patch": "@@ -1,3 +1,7 @@\n+2003-10-21  Robert Bowdidge   <bowdidge@apple.com>\n+\t* decl.c (cp_finish_decl): Remove clause intended for asm directives \n+          in struct or class fields: this code is never executed.\n+\n 2003-10-22  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* decl.c (start_decl): Exit if push_template_decl returns"}, {"sha": "1951b251a4b5ba94d007a15830eb15fba5d3f0b9", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437081d7f58fc5feaaa1f8afb9739746258ce41b/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437081d7f58fc5feaaa1f8afb9739746258ce41b/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=437081d7f58fc5feaaa1f8afb9739746258ce41b", "patch": "@@ -4677,7 +4677,7 @@ cp_finish_decl (tree decl, tree init, tree asmspec_tree, int flags)\n   /* If a name was specified, get the string.  */\n   if (global_scope_p (current_binding_level))\n     asmspec_tree = maybe_apply_renaming_pragma (decl, asmspec_tree);\n-  if (asmspec_tree)\n+  if (asmspec_tree) \n     asmspec = TREE_STRING_POINTER (asmspec_tree);\n \n   if (init && TREE_CODE (init) == NAMESPACE_DECL)\n@@ -4763,15 +4763,7 @@ cp_finish_decl (tree decl, tree init, tree asmspec_tree, int flags)\n       TREE_READONLY (decl) = 0;\n     }\n \n-  if (TREE_CODE (decl) == FIELD_DECL && asmspec)\n-    {\n-      /* This must override the asm specifier which was placed by\n-\t grokclassfn.  Lay this out fresh.  */\n-      SET_DECL_RTL (TREE_TYPE (decl), NULL_RTX);\n-      SET_DECL_ASSEMBLER_NAME (decl, get_identifier (asmspec));\n-      make_decl_rtl (decl, asmspec);\n-    }\n-  else if (TREE_CODE (decl) == VAR_DECL)\n+  if (TREE_CODE (decl) == VAR_DECL)\n     {\n       /* Only PODs can have thread-local storage.  Other types may require\n \t various kinds of non-trivial initialization.  */"}]}