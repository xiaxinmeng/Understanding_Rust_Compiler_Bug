{"sha": "3e4c754bbf3709a6dcd41e672e5e90d5c582aaca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U0Yzc1NGJiZjM3MDlhNmRjZDQxZTY3MmU1ZTkwZDVjNTgyYWFjYQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-08-25T14:36:01Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-08-25T14:36:01Z"}, "message": "* config/avr/avr.c (byte_immediate_operand): Remove Function.\n\nFrom-SVN: r178067", "tree": {"sha": "c432d2cc9e8297f4e92d1dfaca6d7b3edb7c3399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c432d2cc9e8297f4e92d1dfaca6d7b3edb7c3399"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e4c754bbf3709a6dcd41e672e5e90d5c582aaca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4c754bbf3709a6dcd41e672e5e90d5c582aaca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e4c754bbf3709a6dcd41e672e5e90d5c582aaca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4c754bbf3709a6dcd41e672e5e90d5c582aaca/comments", "author": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01bb8ae21712d3bab740fdbaf509499bec801594", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bb8ae21712d3bab740fdbaf509499bec801594", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01bb8ae21712d3bab740fdbaf509499bec801594"}], "stats": {"total": 9, "additions": 0, "deletions": 9}, "files": [{"sha": "d48f722bfae7b07c1d8cdbf7a43e4f95b342d02d", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e4c754bbf3709a6dcd41e672e5e90d5c582aaca/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e4c754bbf3709a6dcd41e672e5e90d5c582aaca/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=3e4c754bbf3709a6dcd41e672e5e90d5c582aaca", "patch": "@@ -1628,15 +1628,6 @@ ret_cond_branch (rtx x, int len, int reverse)\n   return \"\";\n }\n \n-/* Predicate function for immediate operand which fits to byte (8bit) */\n-\n-int\n-byte_immediate_operand (rtx op, enum machine_mode mode ATTRIBUTE_UNUSED)\n-{\n-  return (GET_CODE (op) == CONST_INT\n-          && INTVAL (op) <= 0xff && INTVAL (op) >= 0);\n-}\n-\n /* Output insn cost for next insn.  */\n \n void"}]}