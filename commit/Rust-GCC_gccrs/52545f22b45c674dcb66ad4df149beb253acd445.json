{"sha": "52545f22b45c674dcb66ad4df149beb253acd445", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI1NDVmMjJiNDVjNjc0ZGNiNjZhZDRkZjE0OWJlYjI1M2FjZDQ0NQ==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2009-09-17T10:46:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-09-17T10:46:35Z"}, "message": "2009-09-17  Emmanuel Briot  <briot@adacore.com>\n\n\t* gnatcmd.adb, make.adb, prj-part.adb, prj-ext.adb, prj-ext.ads,\n\tswitch-m.adb, switch-m.ads, clean.adb, prj-tree.ads\n\t(Project_Node_Tree_Data.Project_Path): New field.\n\n\t* prj-conf.adb (Do_Autoconf): Remove \"creating auto.cgpr\" message\n\nFrom-SVN: r151794", "tree": {"sha": "4ec65cf7739dd5e1b857f1c5ca795614aa5d0330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ec65cf7739dd5e1b857f1c5ca795614aa5d0330"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52545f22b45c674dcb66ad4df149beb253acd445", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52545f22b45c674dcb66ad4df149beb253acd445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52545f22b45c674dcb66ad4df149beb253acd445", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52545f22b45c674dcb66ad4df149beb253acd445/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9b4a5d344983386125cd8c99ced8b2b6abd1a88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9b4a5d344983386125cd8c99ced8b2b6abd1a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9b4a5d344983386125cd8c99ced8b2b6abd1a88"}], "stats": {"total": 208, "additions": 131, "deletions": 77}, "files": [{"sha": "92352f55f2d8390f8ac8959ba88ac398ccb7680d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=52545f22b45c674dcb66ad4df149beb253acd445", "patch": "@@ -1,3 +1,11 @@\n+2009-09-17  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* gnatcmd.adb, make.adb, prj-part.adb, prj-ext.adb, prj-ext.ads,\n+\tswitch-m.adb, switch-m.ads, clean.adb, prj-tree.ads\n+\t(Project_Node_Tree_Data.Project_Path): New field.\n+\n+\t* prj-conf.adb (Do_Autoconf): Remove \"creating auto.cgpr\" message\n+\n 2009-09-17  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-ext.adb, prj-ext.ads, makeutl.adb (Is_External_Assignment):"}, {"sha": "b7bfd059869baa23134853021dcd7ae792e125e2", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=52545f22b45c674dcb66ad4df149beb253acd445", "patch": "@@ -1691,7 +1691,7 @@ package body Clean is\n \n                         elsif Arg (3) = 'P' then\n                            Prj.Ext.Add_Search_Project_Directory\n-                             (Arg (4 .. Arg'Last));\n+                             (Project_Node_Tree, Arg (4 .. Arg'Last));\n \n                         else\n                            Bad_Argument;"}, {"sha": "563b92d150e193b69bc9dad79e91d73126361428", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=52545f22b45c674dcb66ad4df149beb253acd445", "patch": "@@ -1604,7 +1604,7 @@ begin\n                     and then Argv (Argv'First + 1 .. Argv'First + 2) = \"aP\"\n                   then\n                      Add_Search_Project_Directory\n-                       (Argv (Argv'First + 3 .. Argv'Last));\n+                       (Project_Node_Tree, Argv (Argv'First + 3 .. Argv'Last));\n \n                      Remove_Switch (Arg_Num);\n "}, {"sha": "dacf290c2732f7fe28b163fdbaf54f7ed1196e59", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=52545f22b45c674dcb66ad4df149beb253acd445", "patch": "@@ -7787,7 +7787,7 @@ package body Make is\n             Add_Switch (Argv, Linker, And_Save => And_Save);\n \n          else\n-            Scan_Make_Switches (Argv, Success);\n+            Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n          end if;\n \n       --  If we have seen a regular switch process it\n@@ -7926,7 +7926,7 @@ package body Make is\n                             \"project file\");\n \n             else\n-               Scan_Make_Switches (Argv, Success);\n+               Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n             end if;\n \n          --  -d\n@@ -7943,13 +7943,13 @@ package body Make is\n                Make_Failed (\"-i cannot be used in conjunction with a \" &\n                             \"project file\");\n             else\n-               Scan_Make_Switches (Argv, Success);\n+               Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n             end if;\n \n          --  -j (need to save the result)\n \n          elsif Argv (2) = 'j' then\n-            Scan_Make_Switches (Argv, Success);\n+            Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n \n             if And_Save then\n                Saved_Maximum_Processes := Maximum_Processes;\n@@ -8089,7 +8089,8 @@ package body Make is\n          --  is passed to the compiler.\n \n          else\n-            Scan_Make_Switches (Argv, Gnatmake_Switch_Found);\n+            Scan_Make_Switches\n+              (Project_Node_Tree, Argv, Gnatmake_Switch_Found);\n \n             if not Gnatmake_Switch_Found then\n                Add_Switch (Argv, Compiler, And_Save => And_Save);"}, {"sha": "bb70e358a7437df041564c8b57848161f64ab0b9", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=52545f22b45c674dcb66ad4df149beb253acd445", "patch": "@@ -783,9 +783,16 @@ package body Prj.Conf is\n                Write_Eol;\n \n             elsif not Quiet_Output then\n-               Write_Str (\"creating \");\n-               Write_Str (Simple_Name (Args (3).all));\n-               Write_Eol;\n+               --  Display no message if we are creating auto.cgpr, unless in\n+               --  verbose mode\n+\n+               if Config_File_Name /= \"\"\n+                 or else Verbose_Mode\n+               then\n+                  Write_Str (\"creating \");\n+                  Write_Str (Simple_Name (Args (3).all));\n+                  Write_Eol;\n+               end if;\n             end if;\n \n             Spawn (Gprconfig_Path.all, Args (1 .. Arg_Last) & Switches.all,"}, {"sha": "2b41c67702d94ec9d0fc7325fdc9853ff009034e", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 59, "deletions": 51, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=52545f22b45c674dcb66ad4df149beb253acd445", "patch": "@@ -23,33 +23,26 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with System.OS_Lib; use System.OS_Lib;\n with Hostparm;\n-with Makeutl;  use Makeutl;\n-with Osint;    use Osint;\n-with Prj.Tree; use Prj.Tree;\n+with Makeutl;       use Makeutl;\n+with Osint;         use Osint;\n+with Prj.Tree;      use Prj.Tree;\n with Sdefault;\n-with Table;\n \n package body Prj.Ext is\n \n    No_Project_Default_Dir : constant String := \"-\";\n+   --  Indicator in the project path to indicate that the default search\n+   --  directories should not be added to the path\n \n-   Current_Project_Path : String_Access;\n-   --  The project path. Initialized by procedure Initialize_Project_Path\n-   --  below.\n+   Uninitialized_Prefix   : constant String := '#' & Path_Separator;\n+   --  Prefix to indicate that the project path has not been initilized yet.\n+   --  Must be two characters long\n \n-   procedure Initialize_Project_Path;\n+   procedure Initialize_Project_Path (Tree : Prj.Tree.Project_Node_Tree_Ref);\n    --  Initialize Current_Project_Path\n \n-   package Search_Directories is new Table.Table\n-     (Table_Component_Type => Name_Id,\n-      Table_Index_Type     => Natural,\n-      Table_Low_Bound      => 1,\n-      Table_Initial        => 4,\n-      Table_Increment      => 100,\n-      Table_Name           => \"Prj.Ext.Search_Directories\");\n-   --  The table for the directories specified with -aP switches\n-\n    ---------\n    -- Add --\n    ---------\n@@ -76,11 +69,20 @@ package body Prj.Ext is\n    -- Add_Search_Project_Directory --\n    ----------------------------------\n \n-   procedure Add_Search_Project_Directory (Path : String) is\n+   procedure Add_Search_Project_Directory\n+     (Tree : Prj.Tree.Project_Node_Tree_Ref;\n+      Path : String)\n+   is\n+      Tmp : String_Access;\n    begin\n-      Name_Len := 0;\n-      Add_Str_To_Name_Buffer (Path);\n-      Search_Directories.Append (Name_Find);\n+      if Tree.Project_Path = null then\n+         Tree.Project_Path := new String'(Uninitialized_Prefix & Path);\n+\n+      else\n+         Tmp := Tree.Project_Path;\n+         Tree.Project_Path := new String'(Tmp.all & Path_Separator & Path);\n+         Free (Tmp);\n+      end if;\n    end Add_Search_Project_Directory;\n \n    -- Check --\n@@ -110,7 +112,7 @@ package body Prj.Ext is\n    -- Initialize_Project_Path --\n    -----------------------------\n \n-   procedure Initialize_Project_Path is\n+   procedure Initialize_Project_Path (Tree : Prj.Tree.Project_Node_Tree_Ref) is\n       Add_Default_Dir : Boolean := True;\n       First           : Positive;\n       Last            : Positive;\n@@ -129,38 +131,38 @@ package body Prj.Ext is\n       --  May be empty.\n \n    begin\n-      --  The current directory is always first\n-\n-      Name_Len := 1;\n-      Name_Buffer (Name_Len) := '.';\n-\n-      --  If there are directories in the Search_Directories table, add them\n+      --  The current directory is always first in the search path. Since the\n+      --  Project_Path currently starts with '#:' as a sign that it isn't\n+      --  initialized, we simply replace '#' with '.'\n+\n+      if Tree.Project_Path = null then\n+         Tree.Project_Path := new String'('.' & Path_Separator);\n+      else\n+         Tree.Project_Path (Tree.Project_Path'First) := '.';\n+      end if;\n \n-      for J in 1 .. Search_Directories.Last loop\n-         Name_Len := Name_Len + 1;\n-         Name_Buffer (Name_Len) := Path_Separator;\n-         Add_Str_To_Name_Buffer\n-           (Get_Name_String (Search_Directories.Table (J)));\n-      end loop;\n+      --  Then the reset of the project path (if any) currently contains the\n+      --  directories added through Add_Search_Project_Directory\n \n-      --  If environment variable is defined and not empty, add its content\n+      --  If environment variables are defined and not empty, add their content\n \n       if Gpr_Prj_Path.all /= \"\" then\n-         Name_Len := Name_Len + 1;\n-         Name_Buffer (Name_Len) := Path_Separator;\n-         Add_Str_To_Name_Buffer (Gpr_Prj_Path.all);\n+         Add_Search_Project_Directory (Tree, Gpr_Prj_Path.all);\n       end if;\n \n       Free (Gpr_Prj_Path);\n \n       if Ada_Prj_Path.all /= \"\" then\n-         Name_Len := Name_Len + 1;\n-         Name_Buffer (Name_Len) := Path_Separator;\n-         Add_Str_To_Name_Buffer (Ada_Prj_Path.all);\n+         Add_Search_Project_Directory (Tree, Ada_Prj_Path.all);\n       end if;\n \n       Free (Ada_Prj_Path);\n \n+      --  Copy to Name_Buffer, since we will need to manipulate the path\n+\n+      Name_Len := Tree.Project_Path'Length;\n+      Name_Buffer (1 .. Name_Len) := Tree.Project_Path.all;\n+\n       --  Scan the directory path to see if \"-\" is one of the directories.\n       --  Remove each occurrence of \"-\" and set Add_Default_Dir to False.\n       --  Also resolve relative paths and symbolic links.\n@@ -232,6 +234,8 @@ package body Prj.Ext is\n          First := Last + 1;\n       end loop;\n \n+      Free (Tree.Project_Path);\n+\n       --  Set the initial value of Current_Project_Path\n \n       if Add_Default_Dir then\n@@ -253,7 +257,7 @@ package body Prj.Ext is\n                end if;\n \n             else\n-               Current_Project_Path :=\n+               Tree.Project_Path :=\n                  new String'(Name_Buffer (1 .. Name_Len) & Path_Separator &\n                              Prefix.all &\n                              \"..\" &  Directory_Separator &\n@@ -265,22 +269,24 @@ package body Prj.Ext is\n          end;\n       end if;\n \n-      if Current_Project_Path = null then\n-         Current_Project_Path := new String'(Name_Buffer (1 .. Name_Len));\n+      if Tree.Project_Path = null then\n+         Tree.Project_Path := new String'(Name_Buffer (1 .. Name_Len));\n       end if;\n    end Initialize_Project_Path;\n \n    ------------------\n    -- Project_Path --\n    ------------------\n \n-   function Project_Path return String is\n+   function Project_Path (Tree : Project_Node_Tree_Ref) return String is\n    begin\n-      if Current_Project_Path = null then\n-         Initialize_Project_Path;\n+      if Tree.Project_Path = null\n+        or else Tree.Project_Path (Tree.Project_Path'First) = '#'\n+      then\n+         Initialize_Project_Path (Tree);\n       end if;\n \n-      return Current_Project_Path.all;\n+      return Tree.Project_Path.all;\n    end Project_Path;\n \n    -----------\n@@ -296,10 +302,12 @@ package body Prj.Ext is\n    -- Set_Project_Path --\n    ----------------------\n \n-   procedure Set_Project_Path (New_Path : String) is\n+   procedure Set_Project_Path\n+     (Tree     : Project_Node_Tree_Ref;\n+      New_Path : String) is\n    begin\n-      Free (Current_Project_Path);\n-      Current_Project_Path := new String'(New_Path);\n+      Free (Tree.Project_Path);\n+      Tree.Project_Path := new String'(New_Path);\n    end Set_Project_Path;\n \n    --------------"}, {"sha": "c960e4e6f1dce02fb1f388beab2ffa893ea925f7", "filename": "gcc/ada/prj-ext.ads", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fprj-ext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fprj-ext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.ads?ref=52545f22b45c674dcb66ad4df149beb253acd445", "patch": "@@ -34,18 +34,26 @@ package Prj.Ext is\n    -- Project Path --\n    ------------------\n \n-   procedure Add_Search_Project_Directory (Path : String);\n+   procedure Add_Search_Project_Directory\n+     (Tree : Prj.Tree.Project_Node_Tree_Ref;\n+      Path : String);\n    --  Add a directory to the project path. Directories added with this\n    --  procedure are added in order after the current directory and before\n    --  the path given by the environment variable GPR_PROJECT_PATH. A value\n    --  of \"-\" will remove the default project directory from the project path.\n+   --\n+   --  Calls to this subprogram must be performed before the first call to\n+   --  Project_Path below, or PATH will be added at the end of the search\n+   --  path.\n \n-   function Project_Path return String;\n+   function Project_Path (Tree : Prj.Tree.Project_Node_Tree_Ref) return String;\n    --  Return the current value of the project path, either the value set\n    --  during elaboration of the package or, if procedure Set_Project_Path has\n    --  been called, the value set by the last call to Set_Project_Path.\n \n-   procedure Set_Project_Path (New_Path : String);\n+   procedure Set_Project_Path\n+     (Tree     : Prj.Tree.Project_Node_Tree_Ref;\n+      New_Path : String);\n    --  Give a new value to the project path. The new value New_Path should\n    --  always start with the current directory (\".\") and the path separators\n    --  should be the correct ones for the platform."}, {"sha": "b55afc5afc899ce976bab978e2afde6a8948db49", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=52545f22b45c674dcb66ad4df149beb253acd445", "patch": "@@ -212,7 +212,8 @@ package body Prj.Part is\n    --  file (.cgpr) since some specific checks apply.\n \n    function Project_Path_Name_Of\n-     (Project_File_Name : String;\n+     (In_Tree           : Project_Node_Tree_Ref;\n+      Project_File_Name : String;\n       Directory         : String) return String;\n    --  Returns the path name of a project file. Returns an empty string\n    --  if project file cannot be found.\n@@ -455,13 +456,14 @@ package body Prj.Part is\n \n       if Current_Verbosity >= Medium then\n          Write_Str (\"GPR_PROJECT_PATH=\"\"\");\n-         Write_Str (Project_Path);\n+         Write_Str (Project_Path (In_Tree));\n          Write_Line (\"\"\"\");\n       end if;\n \n       declare\n          Path_Name : constant String :=\n-                       Project_Path_Name_Of (Real_Project_File_Name.all,\n+                       Project_Path_Name_Of (In_Tree,\n+                                             Real_Project_File_Name.all,\n                                              Directory   => Current_Directory);\n \n       begin\n@@ -478,7 +480,7 @@ package body Prj.Part is\n               (\"project file \"\"\"\n                & Project_File_Name\n                & \"\"\" not found in \"\n-               & Project_Path);\n+               & Project_Path (In_Tree));\n             Project := Empty_Node;\n             return;\n          end if;\n@@ -755,7 +757,8 @@ package body Prj.Part is\n \n                Imported_Path_Name : constant String :=\n                                       Project_Path_Name_Of\n-                                        (Original_Path,\n+                                        (In_Tree,\n+                                         Original_Path,\n                                          Project_Directory_Path);\n \n                Resolved_Path : constant String :=\n@@ -1432,7 +1435,8 @@ package body Prj.Part is\n \n                Extended_Project_Path_Name : constant String :=\n                                               Project_Path_Name_Of\n-                                                (Original_Path_Name,\n+                                                (In_Tree,\n+                                                 Original_Path_Name,\n                                                  Get_Name_String\n                                                    (Project_Directory));\n \n@@ -1909,7 +1913,8 @@ package body Prj.Part is\n    --------------------------\n \n    function Project_Path_Name_Of\n-     (Project_File_Name : String;\n+     (In_Tree           : Project_Node_Tree_Ref;\n+      Project_File_Name : String;\n       Directory         : String) return String\n    is\n \n@@ -1922,7 +1927,7 @@ package body Prj.Part is\n       -------------------\n \n       function Try_Path_Name (Path : String) return String_Access is\n-         Prj_Path : constant String := Project_Path;\n+         Prj_Path : constant String := Project_Path (In_Tree);\n          First    : Natural;\n          Last     : Natural;\n          Result   : String_Access := null;"}, {"sha": "31a74248c23840089d34f1d7a8b37d7be972abf7", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=52545f22b45c674dcb66ad4df149beb253acd445", "patch": "@@ -1387,6 +1387,17 @@ package Prj.Tree is\n       --  through subprogrames in prj-ext.ads). External references are\n       --  project-tree specific so that one can load the same tree twice but\n       --  have two views of it, for instance.\n+\n+      Project_Path : String_Access;\n+      --  The project path, manipulated through subprograms in prj-ext.ads.\n+      --  As a special case, if the first character is '#:\" or this variable is\n+      --  unset, this means that the PATH has not been fully initialized yet\n+      --  (although subprograms prj-ext.ads will properly take care of that).\n+      --\n+      --  The project path is tree specific, since we might want to load\n+      --  simultaneously multiple projects, each with its own search path, in\n+      --  particular when using different compilers with different default\n+      --  search directories.\n    end record;\n    --  The data for a project node tree\n "}, {"sha": "316b77e702bcb63319aefd82c2f357a01467aabc", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=52545f22b45c674dcb66ad4df149beb253acd445", "patch": "@@ -532,8 +532,9 @@ package body Switch.M is\n    ------------------------\n \n    procedure Scan_Make_Switches\n-     (Switch_Chars : String;\n-      Success      : out Boolean)\n+     (Project_Node_Tree : Prj.Tree.Project_Node_Tree_Ref;\n+      Switch_Chars      : String;\n+      Success           : out Boolean)\n    is\n       Ptr : Integer          := Switch_Chars'First;\n       Max : constant Integer := Switch_Chars'Last;\n@@ -590,7 +591,8 @@ package body Switch.M is\n            and then Switch_Chars (Ptr .. Ptr + 1) = \"aP\"\n          then\n             Add_Search_Project_Directory\n-              (Switch_Chars (Ptr + 2 .. Switch_Chars'Last));\n+              (Project_Node_Tree,\n+               Switch_Chars (Ptr + 2 .. Switch_Chars'Last));\n \n          elsif C = 'v' and then Switch_Chars'Length = 3 then\n             Ptr := Ptr + 1;"}, {"sha": "a7301761f9399355586eadd74c5c9b054f5d42e2", "filename": "gcc/ada/switch-m.ads", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fswitch-m.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52545f22b45c674dcb66ad4df149beb253acd445/gcc%2Fada%2Fswitch-m.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.ads?ref=52545f22b45c674dcb66ad4df149beb253acd445", "patch": "@@ -30,17 +30,21 @@\n --  the otherwise undocumented debug switches that are also recognized.\n \n with System.OS_Lib; use System.OS_Lib;\n+with Prj.Tree;\n \n package Switch.M is\n \n    procedure Scan_Make_Switches\n-     (Switch_Chars : String;\n-      Success      : out Boolean);\n+     (Project_Node_Tree : Prj.Tree.Project_Node_Tree_Ref;\n+      Switch_Chars      : String;\n+      Success           : out Boolean);\n    --  Scan a gnatmake switch and act accordingly. For switches that are\n    --  recognized, Success is set to True. A switch that is not recognized and\n    --  consists of one small letter causes a fatal error exit and control does\n    --  not return. For all other not recognized switches, Success is set to\n    --  False, so that the switch may be passed to the compiler.\n+   --  Project_Node_Tree is used to store tree-specific parameters like the\n+   --  project path\n \n    procedure Normalize_Compiler_Switches\n      (Switch_Chars : String;"}]}