{"sha": "7aec1b82097e03a40f8d6818d0321cea5883abdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FlYzFiODIwOTdlMDNhNDBmOGQ2ODE4ZDAzMjFjZWE1ODgzYWJkYg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2018-01-31T10:42:52Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2018-01-31T10:42:52Z"}, "message": "re PR lto/84105 (Segmentation fault in pp_tree_identifier() during LTO)\n\n\tPR lto/84105\n\t* tree-pretty-print.c (dump_generic_node): Handle a TYPE_NAME with\n\tan IDENTIFIER_NODE for FUNCTION_TYPE's.\n\nFrom-SVN: r257228", "tree": {"sha": "b3a5bb4256fa4eb5c301e9b5a1cd99a9a9649044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3a5bb4256fa4eb5c301e9b5a1cd99a9a9649044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7aec1b82097e03a40f8d6818d0321cea5883abdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aec1b82097e03a40f8d6818d0321cea5883abdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aec1b82097e03a40f8d6818d0321cea5883abdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aec1b82097e03a40f8d6818d0321cea5883abdb/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "73df9303b7a4cbe5bef8420a8584e9e1c3d3548f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73df9303b7a4cbe5bef8420a8584e9e1c3d3548f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73df9303b7a4cbe5bef8420a8584e9e1c3d3548f"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "9b9a1c39b1394e25325b33a7046af1f7e17cda06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aec1b82097e03a40f8d6818d0321cea5883abdb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aec1b82097e03a40f8d6818d0321cea5883abdb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7aec1b82097e03a40f8d6818d0321cea5883abdb", "patch": "@@ -1,3 +1,9 @@\n+2018-01-29  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR lto/84105\n+\t* tree-pretty-print.c (dump_generic_node): Handle a TYPE_NAME with\n+\tan IDENTIFIER_NODE for FUNCTION_TYPE's.\n+\n 2018-01-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tRevert"}, {"sha": "73eb27c8e8fa9efe8553ba142d5adc38444cfb0d", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aec1b82097e03a40f8d6818d0321cea5883abdb/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aec1b82097e03a40f8d6818d0321cea5883abdb/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=7aec1b82097e03a40f8d6818d0321cea5883abdb", "patch": "@@ -1822,7 +1822,9 @@ dump_generic_node (pretty_printer *pp, tree node, int spc, dump_flags_t flags,\n \t    pp_string (pp, \"<null method basetype>\");\n \t  pp_colon_colon (pp);\n \t}\n-      if (TYPE_NAME (node) && DECL_NAME (TYPE_NAME (node)))\n+      if (TYPE_IDENTIFIER (node))\n+\tdump_generic_node (pp, TYPE_NAME (node), spc, flags, false);\n+      else if (TYPE_NAME (node) && DECL_NAME (TYPE_NAME (node)))\n \tdump_decl_name (pp, TYPE_NAME (node), flags);\n       else if (flags & TDF_NOUID)\n \tpp_printf (pp, \"<Txxxx>\");"}]}