{"sha": "58508d3f3a9986157d57dca0cc154137bd99d9b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg1MDhkM2YzYTk5ODYxNTdkNTdkY2EwY2MxNTQxMzdiZDk5ZDliNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-06-19T12:45:57Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-06-19T12:45:57Z"}, "message": "Add initial version of rtl.vim syntax file.\n\n2018-06-19  Martin Liska  <mliska@suse.cz>\n\n\t* gcc-rtl.vim: New file.\n\nFrom-SVN: r261741", "tree": {"sha": "d42c5fc52fdab2bd6d5227f58179580fd54bf74f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d42c5fc52fdab2bd6d5227f58179580fd54bf74f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58508d3f3a9986157d57dca0cc154137bd99d9b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58508d3f3a9986157d57dca0cc154137bd99d9b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58508d3f3a9986157d57dca0cc154137bd99d9b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58508d3f3a9986157d57dca0cc154137bd99d9b6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b04d77ed52bb0317f9793bc95a1ec0370571f35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b04d77ed52bb0317f9793bc95a1ec0370571f35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b04d77ed52bb0317f9793bc95a1ec0370571f35"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "01dc237c65e6802b78af673d66a9aeace49f91f7", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58508d3f3a9986157d57dca0cc154137bd99d9b6/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58508d3f3a9986157d57dca0cc154137bd99d9b6/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=58508d3f3a9986157d57dca0cc154137bd99d9b6", "patch": "@@ -1,3 +1,7 @@\n+2018-06-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-rtl.vim: New file.\n+\n 2018-06-12  Jeff Law  <law@redhat.com>\n \n \t* config-list.mk (LIST): Remove alpha-freebsd6."}, {"sha": "c9070a2493f6bf85a87ff9bbce0ee8953719d8ad", "filename": "contrib/gcc-rtl.vim", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58508d3f3a9986157d57dca0cc154137bd99d9b6/contrib%2Fgcc-rtl.vim", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58508d3f3a9986157d57dca0cc154137bd99d9b6/contrib%2Fgcc-rtl.vim", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-rtl.vim?ref=58508d3f3a9986157d57dca0cc154137bd99d9b6", "patch": "@@ -0,0 +1,79 @@\n+\" Syntax highlighting rules for RTL dump files (for Vim).\n+\"\n+\" Copyright (C) 2018 Free Software Foundation, Inc.\n+\"\n+\" This script is free software; you can redistribute it and/or modify\n+\" it under the terms of the GNU General Public License as published by\n+\" the Free Software Foundation; either version 3, or (at your option)\n+\" any later version\n+\"\n+\" For more instructions please see gimple.vim file in the same folder.\n+\n+\n+\" Do not continue, if syntax is already enabled in current buffer.\n+if exists(\"b:current_syntax\")\n+    finish\n+endif\n+\n+\" General-purpose comments.\n+syn match   rtlComment          \";;.*$\"\n+\n+syn keyword rtlInstruction      debug_expr insn_list int_list sequence\n+                                \\ address debug_insn insn expr_list\n+                                \\ jump_table_data barrier code_label\n+                                \\ cond_exec parallel asm_input asm_operands\n+                                \\ unspec unspec_volatile addr_vec\n+                                \\ addr_diff_vec prefetch set use clobber\n+                                \\ call return simple_return eh_return\n+                                \\ trap_if scratch strict_low_part concat concatn\n+                                \\ mem label_ref symbol_ref cc0 compare plus minus\n+                                \\ neg mult ss_mult us_mult div ss_div us_div mod\n+                                \\ udiv umod and ior xor not ashift rotate ashiftrt\n+                                \\ lshiftrt rotatert smin smax umin umax pre_dec\n+                                \\ pre_inc post_dec post_inc pre_modify post_modify\n+                                \\ unordered ordered uneq unge ungt unle unlt ltgt sign_extend\n+                                \\ zero_extend truncate float_extend float_truncate\n+                                \\ float fix unsigned_float unsigned_fix fract_convert\n+                                \\ unsigned_fract_convert sat_fract unsigned_sat_fract\n+                                \\ abs sqrt bswap ffs clrsb clz ctz popcount parity\n+                                \\ sign_extract zero_extract high lo_sum vec_merge\n+                                \\ vec_select vec_concat vec_duplicate vec_series ss_plus\n+                                \\ us_plus ss_minus ss_neg us_neg ss_abs ss_ashift\n+                                \\ us_ashift us_minus ss_truncate us_truncate fma\n+                                \\ entry_value exclusion_set presence_set final_presence_set\n+                                \\ absence_set final_absence_set automata_option attr set_attr\n+                                \\ set_attr_alternative eq_attr eq_attr_alt attr_flag cond\n+syn keyword rtlConditional      call_insn jump_insn if_then_else\n+                                \\ eq ne gt gtu lt ltu ge geu le leu\n+syn keyword rtlNote             note barrier code_label\n+syn keyword rtlVariableLoation  var_location\n+syn keyword rtlPcRegister       pc\n+\n+syn keyword rtlModes\t\t        VOID BLK BI QI HI SI DI TI SF DF CC QQ HQ SQ\n+                                \\ DQ TQ UQQ UHQ USQ UDQ UTQ HA SA DA TA UHA\n+                                \\ USA UDA UTA SD DD TD\n+\n+\" String literals\n+syn region  rtlString           start=/\\v\"/ skip=/\\v\\\\./ end=/\\v\"/\n+\n+syn match   rtlNoteInsn         \"NOTE_INSN_[A-Z_]*\"\n+syn match   rtlIntegerConstant  \"\\vconst_int -?\\d+\"\n+syn match   rtlFloatConstant    \"\\vconst_double:[A-Z]+ -?\\d*\\.\\d+(e\\+\\d+)?\"\n+syn match   rtlRegister         \"\\vreg(\\/[a-z])?:[A-Z0-9]+ \\d+ [a-z0-9]+\"\n+syn match   rtlLocation         /\\v\"[^\"]*\":\\d+/\n+\n+hi def link rtlInstruction      Statement\n+hi def link rtlConditional      Conditional\n+hi def link rtlNote             Debug\n+hi def link rtlNoteInsn         Debug\n+hi def link rtlIntegerConstant  Number\n+hi def link rtlFloatConstant    Number\n+hi def link rtlRegister         Type\n+hi def link rtlPcRegister       Type\n+hi def link rtlModes            Type\n+hi def link rtlVariableLoation  Debug\n+hi def link rtlComment          Comment\n+hi def link rtlLocation         Debug\n+hi def link rtlString           String\n+\n+let b:current_syntax = \"gcc-rtl\""}]}