{"sha": "b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdmMGZmZjIzYjQyOWM1MGYzMWZhZGNlMTczZmU0ZDQ3OGZkNmYxYg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2007-01-29T20:27:41Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2007-01-29T20:27:41Z"}, "message": "Makefile.in (USER_H): Remove decfloat.h.\n\ngcc/\n\t* Makefile.in (USER_H): Remove decfloat.h.\n\t* ginclude/decfloat.h: Delete, moving contents to ...\n\t* ginclude/float.h: Add support for decimal floating point,\n\tguarded by __STDC_WANT_DEC_FP__.\n\ngcc/testsuite/\n\t* gcc.dg/dfp/dec-eval-method.c: Replace decfloat.h with float.h.\n\t* gcc.dg/dfp/decfloat-constants.c: Ditto.\n\t* gcc.dg/dfp/convert-dfp.c: Ditto.\n\t* gcc.dg/dfp/convert-int-saturate.c: Ditto.\n\nFrom-SVN: r121308", "tree": {"sha": "d407fcd3b280b3bac4ca0e3402c1ca361e758548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d407fcd3b280b3bac4ca0e3402c1ca361e758548"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/comments", "author": null, "committer": null, "parents": [{"sha": "821f6218d7f392e2706d3e6b3a2eefce63c9edd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/821f6218d7f392e2706d3e6b3a2eefce63c9edd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/821f6218d7f392e2706d3e6b3a2eefce63c9edd5"}], "stats": {"total": 225, "additions": 106, "deletions": 119}, "files": [{"sha": "3cf0452b2a9f2a1d3c282c36841457d3461b86df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "patch": "@@ -1,3 +1,10 @@\n+2007-01-29  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* Makefile.in (USER_H): Remove decfloat.h.\n+\t* ginclude/decfloat.h: Delete, moving contents to ...\n+\t* ginclude/float.h: Add support for decimal floating point,\n+\tguarded by __STDC_WANT_DEC_FP__.\n+\n 2007-01-29  Mike Stump  <mrs@apple.com>\n \n \t* doc/gccint.texi (Top): Rename Loop Representation to Loop"}, {"sha": "b569b36dc001b4d06d46ad6ba8c4d60ff61b5749", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "patch": "@@ -302,8 +302,7 @@ INSTALL_HEADERS_DIR = @build_install_headers_dir@\n \n # Header files that are made available under the same name\n # to programs compiled with GCC.\n-USER_H = $(srcdir)/ginclude/decfloat.h \\\n-\t $(srcdir)/ginclude/float.h \\\n+USER_H = $(srcdir)/ginclude/float.h \\\n \t $(srcdir)/ginclude/iso646.h \\\n \t $(srcdir)/ginclude/stdarg.h \\\n \t $(srcdir)/ginclude/stdbool.h \\"}, {"sha": "03e0a7bf2e8becbf8e2dcd1e3518fb0a1aff5aa7", "filename": "gcc/ginclude/decfloat.h", "status": "removed", "additions": 0, "deletions": 108, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/821f6218d7f392e2706d3e6b3a2eefce63c9edd5/gcc%2Fginclude%2Fdecfloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/821f6218d7f392e2706d3e6b3a2eefce63c9edd5/gcc%2Fginclude%2Fdecfloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fdecfloat.h?ref=821f6218d7f392e2706d3e6b3a2eefce63c9edd5", "patch": "@@ -1,108 +0,0 @@\n-/* Copyright (C) 2005 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-/* As a special exception, if you include this header file into source\n-   files compiled by GCC, this header file does not by itself cause\n-   the resulting executable to be covered by the GNU General Public\n-   License.  This exception does not however invalidate any other\n-   reasons why the executable file might be covered by the GNU General\n-   Public License.  */\n-\n-/*\n- * Draft C Extension to support decimal floating-pointing arithmetic:  \n- * Characteristics of decimal floating types <decfloat.h>\n- */\n-\n-#ifndef _DECFLOAT_H___\n-#define _DECFLOAT_H___\n-\n-/* Number of base-FLT_RADIX digits in the significand, p.  */\n-#undef DEC32_MANT_DIG\n-#undef DEC64_MANT_DIG\n-#undef DEC128_MANT_DIG\n-#define DEC32_MANT_DIG\t__DEC32_MANT_DIG__\n-#define DEC64_MANT_DIG\t__DEC64_MANT_DIG__\n-#define DEC128_MANT_DIG\t__DEC128_MANT_DIG__\n-\n-/* Minimum exponent. */\n-#undef DEC32_MIN_EXP\n-#undef DEC64_MIN_EXP\n-#undef DEC128_MIN_EXP\n-#define DEC32_MIN_EXP\t__DEC32_MIN_EXP__\n-#define DEC64_MIN_EXP\t__DEC64_MIN_EXP__\n-#define DEC128_MIN_EXP\t__DEC128_MIN_EXP__\n-\n-/* Maximum exponent. */\n-#undef DEC32_MAX_EXP\n-#undef DEC64_MAX_EXP\n-#undef DEC128_MAX_EXP\n-#define DEC32_MAX_EXP\t__DEC32_MAX_EXP__\n-#define DEC64_MAX_EXP\t__DEC64_MAX_EXP__\n-#define DEC128_MAX_EXP\t__DEC128_MAX_EXP__\n-\n-/* Maximum representable finite decimal floating-point number\n-   (there are 6, 15, and 33 9s after the decimal points respectively). */\n-#undef DEC32_MAX\n-#undef DEC64_MAX\n-#undef DEC128_MAX\n-#define DEC32_MAX   __DEC32_MAX__\n-#define DEC64_MAX   __DEC64_MAX__\n-#define DEC128_MAX  __DEC128_MAX__\n-\n-/* The difference between 1 and the least value greater than 1 that is\n-   representable in the given floating point type. */\n-#undef DEC32_EPSILON\n-#undef DEC64_EPSILON\n-#undef DEC128_EPSILON\n-#define DEC32_EPSILON\t__DEC32_EPSILON__\n-#define DEC64_EPSILON\t__DEC64_EPSILON__\n-#define DEC128_EPSILON\t__DEC128_EPSILON__\n-\n-/* Minimum normalized positive floating-point number. */\n-#undef DEC32_MIN\n-#undef DEC64_MIN\n-#undef DEC128_MIN\n-#define DEC32_MIN\t__DEC32_MIN__\n-#define DEC64_MIN\t__DEC64_MIN__\n-#define DEC128_MIN\t__DEC128_MIN__\n-\n-/* Minimum denormalized positive floating-point number. */\n-#undef DEC32_DEN\n-#undef DEC64_DEN\n-#undef DEC128_DEN\n-#define DEC32_DEN       __DEC32_DEN__\n-#define DEC64_DEN       __DEC64_DEN__\n-#define DEC128_DEN      __DEC128_DEN__\n-\n-/* The floating-point expression evaluation method.\n-         -1  indeterminate\n-         0  evaluate all operations and constants just to the range and\n-            precision of the type\n-         1  evaluate operations and constants of type _Decimal32 \n-\t    and _Decimal64 to the range and precision of the _Decimal64 \n-            type, evaluate _Decimal128 operations and constants to the \n-\t    range and precision of the _Decimal128 type;\n-\t 2  evaluate all operations and constants to the range and\n-\t    precision of the _Decimal128 type.\n-*/\n-\n-#undef DECFLT_EVAL_METHOD\n-#define DECFLT_EVAL_METHOD\t__DECFLT_EVAL_METHOD__\n-\n-#endif /* _DECFLOAT_H___ */"}, {"sha": "1e16e8884d731d8638e61964814d5f71db0515df", "filename": "gcc/ginclude/float.h", "status": "modified", "additions": 80, "deletions": 1, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Fginclude%2Ffloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Fginclude%2Ffloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Ffloat.h?ref=b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2002 Free Software Foundation, Inc.\n+/* Copyright (C) 2002, 2007 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -159,4 +159,83 @@ Boston, MA 02110-1301, USA.  */\n #define DECIMAL_DIG\t__DECIMAL_DIG__\n \n #endif /* C99 */\n+\n+#if __STDC_WANT_DEC_FP__ == 1\n+/* Draft Technical Report 24732, extension for decimal floating-point\n+   arithmetic: Characteristic of decimal floating types <float.h>.  */\n+\n+/* Number of base-FLT_RADIX digits in the significand, p.  */\n+#undef DEC32_MANT_DIG\n+#undef DEC64_MANT_DIG\n+#undef DEC128_MANT_DIG\n+#define DEC32_MANT_DIG\t__DEC32_MANT_DIG__\n+#define DEC64_MANT_DIG\t__DEC64_MANT_DIG__\n+#define DEC128_MANT_DIG\t__DEC128_MANT_DIG__\n+\n+/* Minimum exponent. */\n+#undef DEC32_MIN_EXP\n+#undef DEC64_MIN_EXP\n+#undef DEC128_MIN_EXP\n+#define DEC32_MIN_EXP\t__DEC32_MIN_EXP__\n+#define DEC64_MIN_EXP\t__DEC64_MIN_EXP__\n+#define DEC128_MIN_EXP\t__DEC128_MIN_EXP__\n+\n+/* Maximum exponent. */\n+#undef DEC32_MAX_EXP\n+#undef DEC64_MAX_EXP\n+#undef DEC128_MAX_EXP\n+#define DEC32_MAX_EXP\t__DEC32_MAX_EXP__\n+#define DEC64_MAX_EXP\t__DEC64_MAX_EXP__\n+#define DEC128_MAX_EXP\t__DEC128_MAX_EXP__\n+\n+/* Maximum representable finite decimal floating-point number\n+   (there are 6, 15, and 33 9s after the decimal points respectively). */\n+#undef DEC32_MAX\n+#undef DEC64_MAX\n+#undef DEC128_MAX\n+#define DEC32_MAX   __DEC32_MAX__\n+#define DEC64_MAX   __DEC64_MAX__\n+#define DEC128_MAX  __DEC128_MAX__\n+\n+/* The difference between 1 and the least value greater than 1 that is\n+   representable in the given floating point type. */\n+#undef DEC32_EPSILON\n+#undef DEC64_EPSILON\n+#undef DEC128_EPSILON\n+#define DEC32_EPSILON\t__DEC32_EPSILON__\n+#define DEC64_EPSILON\t__DEC64_EPSILON__\n+#define DEC128_EPSILON\t__DEC128_EPSILON__\n+\n+/* Minimum normalized positive floating-point number. */\n+#undef DEC32_MIN\n+#undef DEC64_MIN\n+#undef DEC128_MIN\n+#define DEC32_MIN\t__DEC32_MIN__\n+#define DEC64_MIN\t__DEC64_MIN__\n+#define DEC128_MIN\t__DEC128_MIN__\n+\n+/* Minimum denormalized positive floating-point number. */\n+#undef DEC32_DEN\n+#undef DEC64_DEN\n+#undef DEC128_DEN\n+#define DEC32_DEN       __DEC32_DEN__\n+#define DEC64_DEN       __DEC64_DEN__\n+#define DEC128_DEN      __DEC128_DEN__\n+\n+/* The floating-point expression evaluation method.\n+         -1  indeterminate\n+         0  evaluate all operations and constants just to the range and\n+            precision of the type\n+         1  evaluate operations and constants of type _Decimal32 \n+\t    and _Decimal64 to the range and precision of the _Decimal64 \n+            type, evaluate _Decimal128 operations and constants to the \n+\t    range and precision of the _Decimal128 type;\n+\t 2  evaluate all operations and constants to the range and\n+\t    precision of the _Decimal128 type.  */\n+\n+#undef DECFLT_EVAL_METHOD\n+#define DECFLT_EVAL_METHOD\t__DECFLT_EVAL_METHOD__\n+\n+#endif /* __STDC_WANT_DEC_FP__ == 1 */\n+\n #endif /* _FLOAT_H___ */"}, {"sha": "7403bf96851e68f6573a129c59a54f6798f00e5c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "patch": "@@ -1,3 +1,10 @@\n+2007-01-29  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* gcc.dg/dfp/dec-eval-method.c: Replace decfloat.h with float.h.\n+\t* gcc.dg/dfp/decfloat-constants.c: Ditto.\n+\t* gcc.dg/dfp/convert-dfp.c: Ditto.\n+\t* gcc.dg/dfp/convert-int-saturate.c: Ditto.\n+\n 2007-01-29  Josh Conner  <jconner@apple.com>\n \n \t* gcc.target/powerpc/altivec-24.c: New test."}, {"sha": "5afdcf0b7a205c2773c2701504c5f7fdc9a91be1", "filename": "gcc/testsuite/gcc.dg/dfp/convert-dfp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp.c?ref=b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "patch": "@@ -6,7 +6,8 @@\n \n    Test various conversions involving decimal floating types. */\n \n-#include <decfloat.h>\n+#define __STDC_WANT_DEC_FP__ 1\n+#include <float.h>\n \n extern void abort (void);\n "}, {"sha": "aeaa4655ac426fb337d28706b7c924be2f32a8f7", "filename": "gcc/testsuite/gcc.dg/dfp/convert-int-saturate.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-saturate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-saturate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-int-saturate.c?ref=b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "patch": "@@ -4,7 +4,8 @@\n    C99 6.3.1.4(1a) New.\n    Test integer saturation.  */\n \n-#include <decfloat.h>\n+#define __STDC_WANT_DEC_FP__ 1\n+#include <float.h>\n #include <limits.h>\n \n extern void abort (void);"}, {"sha": "070a4033e02803dec15e8b7d4f7fde298d20acd2", "filename": "gcc/testsuite/gcc.dg/dfp/dec-eval-method.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdec-eval-method.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdec-eval-method.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdec-eval-method.c?ref=b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile } */\n /* { dg-options \"-std=gnu99\" } */\n                                                                                 \n-/* N1107 4: Characteristics of decimal floating types <decfloat.h>.\n+/* N1107 4: Characteristics of decimal floating types <float.h>.\n    C99 5.2.4.2.2a[2] (New).\n \n    Verify that __DEC_EVAL_METHOD__ is defined; it will be used to define\n-   DEC_EVAL_METHOD in <decfloat.h>.  */\n+   DEC_EVAL_METHOD in <float.h>.  */\n \n int i;\n #ifndef __DEC_EVAL_METHOD__"}, {"sha": "4980c6532a9493ffd405729c9b6d2ba26190f4af", "filename": "gcc/testsuite/gcc.dg/dfp/decfloat-constants.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdecfloat-constants.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7f0fff23b429c50f31fadce173fe4d478fd6f1b/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdecfloat-constants.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fdecfloat-constants.c?ref=b7f0fff23b429c50f31fadce173fe4d478fd6f1b", "patch": "@@ -1,13 +1,14 @@\n /* { dg-options \"-std=gnu99\" } */\n \n-/* N1150 4: Characteristics of decimal floating types <decfloat.h>.\n+/* N1150 4: Characteristics of decimal floating types <float.h>.\n    C99 5.2.4.2.2a[3]: New.\n \n    Verify constants about range of decimal float and three components of\n-   decimal float defined in decfloat.h.  */\n+   decimal float defined in float.h.  */\n \n-/* Make sure we are exporting the right values to decfloat.h. */\n-#include <decfloat.h>\n+/* Make sure we are exporting the right values to float.h. */\n+#define __STDC_WANT_DEC_FP__ 1\n+#include <float.h>\n \n extern void abort (void);\n "}]}