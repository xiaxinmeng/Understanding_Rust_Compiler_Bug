{"sha": "5c6430d68c3d53a191c2be934ee17aebde50e908", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM2NDMwZDY4YzNkNTNhMTkxYzJiZTkzNGVlMTdhZWJkZTUwZTkwOA==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2020-09-10T19:12:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-26T08:58:58Z"}, "message": "[Ada] Missing errors on extension aggregates with unknown discriminants\n\ngcc/ada/\n\n\t* sem_aggr.adb (Resolve_Extension_Aggregate): When testing for\n\tan aggregate that is illegal due to having an ancestor type that\n\thas unknown discriminants, add an \"or else\" condition testing\n\twhether the aggregate type has unknown discriminants and that\n\tPartial_View_Has_Unknown_Discr is also set on the ancestor type.\n\tExtend the comment, including adding ??? about a possible\n\tsimpler test.", "tree": {"sha": "2d36bab6552316e407a637dc0a993c72223afd91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d36bab6552316e407a637dc0a993c72223afd91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c6430d68c3d53a191c2be934ee17aebde50e908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c6430d68c3d53a191c2be934ee17aebde50e908", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c6430d68c3d53a191c2be934ee17aebde50e908", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c6430d68c3d53a191c2be934ee17aebde50e908/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc744c0c238975146980db13facb0307f4d73968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc744c0c238975146980db13facb0307f4d73968", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc744c0c238975146980db13facb0307f4d73968"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "c75c10f9028c77b8156c64c80131a6c5896cce01", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c6430d68c3d53a191c2be934ee17aebde50e908/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c6430d68c3d53a191c2be934ee17aebde50e908/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=5c6430d68c3d53a191c2be934ee17aebde50e908", "patch": "@@ -3458,10 +3458,23 @@ package body Sem_Aggr is\n \n       if Is_Entity_Name (A) and then Is_Type (Entity (A)) then\n \n-         --  AI05-0115: if the ancestor part is a subtype mark, the ancestor\n-         --  must not have unknown discriminants.\n-\n-         if Has_Unknown_Discriminants (Entity (A)) then\n+         --  AI05-0115: If the ancestor part is a subtype mark, the ancestor\n+         --  must not have unknown discriminants. To catch cases where the\n+         --  aggregate occurs at a place where the full view of the ancestor\n+         --  type is visible and doesn't have unknown discriminants, but the\n+         --  aggregate type was derived from a partial view that has unknown\n+         --  discriminants, we check whether the aggregate type has unknown\n+         --  discriminants (unknown discriminants were inherited), along\n+         --  with checking that the partial view of the ancestor has unknown\n+         --  discriminants. (It might be sufficient to replace the entire\n+         --  condition with Has_Unknown_Discriminants (Typ), but that might\n+         --  miss some cases, not clear, and causes error changes in some tests\n+         --  such as class-wide cases, that aren't clearly improvements. ???)\n+\n+         if Has_Unknown_Discriminants (Entity (A))\n+           or else (Has_Unknown_Discriminants (Typ)\n+                      and then Partial_View_Has_Unknown_Discr (Entity (A)))\n+         then\n             Error_Msg_NE\n               (\"aggregate not available for type& whose ancestor \"\n                  & \"has unknown discriminants\", N, Typ);"}]}