{"sha": "f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMxZGRhZDhhYzhmMTFiOGIxMWFiMGMzOWYyZTA3NDBmZDQwYmE4ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-04-24T08:35:16Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-04-24T08:35:16Z"}, "message": "Adjust guality xfails for aarch64*-*-*\n\nThis patch gives clean guality.exp test results for aarch64-linux-gnu\nwith modern (top-of-tree) gdb.\n\nFor people using older gdbs, it will trade one set of noisy results for\nanother set.  I still think it's better to have the xfails based on\none \u201cclean\u201d and \u201cmodern\u201d run rather than have FAILs and XPASSes for\nall runs.\n\nIt's hard to tell which of these results are aarch64-specific and\nwhich aren't.  If other target maintainers want to do something similar,\nand are prepared to assume the same gdb version, then it should become\nclearer over time which ones are target-specific and which aren't.\n\nThere are no new skips here, so changes in test results will still\nshow up as XPASSes.\n\nI've not analysed the failures or filed PRs for them.  In some\nways the guality directory itself seems like the best place to\nstart looking for xfails, if someone's interested in working\nin this area.\n\ngcc/testsuite/\n\t* gcc.dg/guality/example.c: Update aarch64*-*-* xfails.\n\t* gcc.dg/guality/guality.c: Likewise.\n\t* gcc.dg/guality/inline-params.c: Likewise.\n\t* gcc.dg/guality/loop-1.c: Likewise.\n\t* gcc.dg/guality/pr36728-1.c: Likewise.\n\t* gcc.dg/guality/pr36728-2.c: Likewise.\n\t* gcc.dg/guality/pr36728-3.c: Likewise.\n\t* gcc.dg/guality/pr41447-1.c: Likewise.\n\t* gcc.dg/guality/pr54200.c:  Likewise.\n\t* gcc.dg/guality/pr54519-1.c: Likewise.\n\t* gcc.dg/guality/pr54519-2.c: Likewise.\n\t* gcc.dg/guality/pr54519-3.c: Likewise.\n\t* gcc.dg/guality/pr54519-4.c: Likewise.\n\t* gcc.dg/guality/pr54519-5.c: Likewise.\n\t* gcc.dg/guality/pr54519-6.c: Likewise.\n\t* gcc.dg/guality/pr54693-2.c: Likewise.\n\t* gcc.dg/guality/pr56154-1.c: Likewise.\n\t* gcc.dg/guality/pr59776.c: Likewise.\n\t* gcc.dg/guality/pr68860-1.c: Likewise.\n\t* gcc.dg/guality/pr68860-2.c: Likewise.\n\t* gcc.dg/guality/pr90074.c: Likewise.\n\t* gcc.dg/guality/pr90716.c: Likewise.\n\t* gcc.dg/guality/sra-1.c: Likewise.", "tree": {"sha": "219b2fd78ce9604c540258191b0f43bcbb45d0bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/219b2fd78ce9604c540258191b0f43bcbb45d0bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d923657c2fefac8aeb8eb317fe5c7e7c55880c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d923657c2fefac8aeb8eb317fe5c7e7c55880c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d923657c2fefac8aeb8eb317fe5c7e7c55880c9"}], "stats": {"total": 104, "additions": 53, "deletions": 51}, "files": [{"sha": "6f1c017a25325de4fc5e68bead7796136139831f", "filename": "gcc/testsuite/gcc.dg/guality/example.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fexample.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fexample.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fexample.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run { xfail *-*-* } } */\n+/* { dg-do run { xfail { ! aarch64*-*-* } } } */\n /* { dg-options \"-g\" } */\n+/* { dg-xfail-run-if \"\" aarch64*-*-* \"*\" { \"-O[01g]\" } } */\n \n #define GUALITY_DONT_FORCE_LIVE_AFTER -1\n "}, {"sha": "a4de5646fc7f557adb5a10ab85834f546fe5c69d", "filename": "gcc/testsuite/gcc.dg/guality/guality.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { xfail *-*-* } } */\n+/* { dg-do run { xfail { ! aarch64*-*-* } } } */\n /* { dg-options \"-g\" } */\n /* { dg-require-effective-target alloca } */\n "}, {"sha": "6be240a28d2166c49d7e1bfad4a66d43d4bb2840", "filename": "gcc/testsuite/gcc.dg/guality/inline-params.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Finline-params.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Finline-params.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Finline-params.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -3,7 +3,7 @@\n    inlining inlines the functions too early to test the real IPA passes (such\n    as IPA-CP).  */\n /* { dg-options \"-g -fno-early-inlining -fno-ipa-sra\" } */\n-/* { dg-xfail-run-if \"\" { \"*-*-*\" } { \"-O2\" \"-O3\" \"-Os\" } } */\n+/* { dg-xfail-run-if \"\" { ! aarch64*-*-* } { \"-O2\" \"-O3\" \"-Os\" } } */\n \n #define GUALITY_DONT_FORCE_LIVE_AFTER -1\n "}, {"sha": "1b1f6d32271b76a86351fc0c236a6e4acb6d55fd", "filename": "gcc/testsuite/gcc.dg/guality/loop-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Floop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Floop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Floop-1.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -17,6 +17,6 @@ foo (int n)\n   /* The following works only with final value replacement or with the NOP\n      but not without (which means -Og).  Vectorization breaks it, so disable\n      that.  At -O3 it currently fails, PR89983.  */\n-  __asm__ volatile (NOP : : \"g\" (i) : \"memory\"); /* { dg-final { gdb-test . \"i\" \"1\" } } */\n+  __asm__ volatile (NOP : : \"g\" (i) : \"memory\"); /* { dg-final { gdb-test . \"i\" \"1\" { xfail { aarch64*-*-* && { any-opts \"-ftracer\" } } } } } */\n }\n int main() { foo(1); }"}, {"sha": "5864c2a733a46bbca273ad3312cddf916f008ce4", "filename": "gcc/testsuite/gcc.dg/guality/pr36728-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-1.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -32,7 +32,7 @@ foo (int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7)\n /* { dg-final { gdb-test 16 \"arg5\" \"5\" } } */\n /* { dg-final { gdb-test 16 \"arg6\" \"6\" } } */\n /* { dg-final { gdb-test 16 \"arg7\" \"30\" } } */\n-/* { dg-final { gdb-test 16 \"y\" \"2\" } } */\n+/* { dg-final { gdb-test 16 \"y\" \"2\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" } } } } } */\n /* { dg-final { gdb-test 18 \"arg1\" \"1\" { target { ! \"s390*-*-*\" } } } } */\n /* { dg-final { gdb-test 18 \"arg2\" \"2\" { target { ! \"s390*-*-*\" } } } } */\n /* { dg-final { gdb-test 18 \"arg3\" \"3\" } } */"}, {"sha": "6e8d775f9ac1f3bd2c52db504634f438519f94fd", "filename": "gcc/testsuite/gcc.dg/guality/pr36728-2.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-2.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -25,21 +25,21 @@ foo (int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7)\n    and arg2.  So it is expected that these values are unavailable in\n    some of these tests.  */\n \n-/* { dg-final { gdb-test 16 \"arg1\" \"1\" { target { ! \"s390*-*-*\" } } } } */\n-/* { dg-final { gdb-test 16 \"arg2\" \"2\" { target { ! \"s390*-*-*\" } } } } */\n-/* { dg-final { gdb-test 16 \"arg3\" \"3\" } } */\n-/* { dg-final { gdb-test 16 \"arg4\" \"4\" } } */\n-/* { dg-final { gdb-test 16 \"arg5\" \"5\" } } */\n-/* { dg-final { gdb-test 16 \"arg6\" \"6\" } } */\n-/* { dg-final { gdb-test 16 \"arg7\" \"30\" } } */\n-/* { dg-final { gdb-test 16 \"y\" \"2\" } } */\n-/* { dg-final { gdb-test 18 \"arg1\" \"1\" { target { ! \"s390*-*-*\" } } } } */\n-/* { dg-final { gdb-test 18 \"arg2\" \"2\" { target { ! \"s390*-*-*\" } } } } */\n-/* { dg-final { gdb-test 18 \"arg3\" \"3\" } } */\n-/* { dg-final { gdb-test 18 \"arg4\" \"4\" } } */\n-/* { dg-final { gdb-test 18 \"arg5\" \"5\" } } */\n-/* { dg-final { gdb-test 18 \"arg6\" \"6\" } } */\n-/* { dg-final { gdb-test 18 \"arg7\" \"30\" } } */\n+/* { dg-final { gdb-test 16 \"arg1\" \"1\" { target { ! \"s390*-*-*\" } xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 16 \"arg2\" \"2\" { target { ! \"s390*-*-*\" } xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 16 \"arg3\" \"3\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 16 \"arg4\" \"4\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 16 \"arg5\" \"5\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 16 \"arg6\" \"6\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 16 \"arg7\" \"30\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 16 \"y\" \"2\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" } } } } } */\n+/* { dg-final { gdb-test 18 \"arg1\" \"1\" { target { ! \"s390*-*-*\" } xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 18 \"arg2\" \"2\" { target { ! \"s390*-*-*\" } xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 18 \"arg3\" \"3\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 18 \"arg4\" \"4\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 18 \"arg5\" \"5\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 18 \"arg6\" \"6\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n+/* { dg-final { gdb-test 18 \"arg7\" \"30\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-O3\" } } } } } */\n /* { dg-final { gdb-test 18 \"*x\" \"(char) 25\" } } */\n /* { dg-final { gdb-test 18 \"y\" \"2\" } } */\n "}, {"sha": "589009b2e82caaa2b83007439915fbeabc34fab8", "filename": "gcc/testsuite/gcc.dg/guality/pr36728-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr36728-3.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -30,7 +30,7 @@ foo (int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7)\n /* { dg-final { gdb-test 14 \"arg5\" \"5\" } } */\n /* { dg-final { gdb-test 14 \"arg6\" \"6\" } } */\n /* { dg-final { gdb-test 14 \"arg7\" \"30\" } } */\n-/* { dg-final { gdb-test 14 \"y\" \"2\" } } */\n+/* { dg-final { gdb-test 14 \"y\" \"2\" { xfail { aarch64*-*-* && { any-opts \"-O3\" } } } } } */\n /* { dg-final { gdb-test 16 \"arg1\" \"1\" { target { ! \"s390*-*-*\" } } } } */\n /* { dg-final { gdb-test 16 \"arg2\" \"2\" { target { ! \"s390*-*-*\" } } } } */\n /* { dg-final { gdb-test 16 \"arg3\" \"3\" } } */"}, {"sha": "9fde33e59a63d7cd155b3b96db2f893d5548ea69", "filename": "gcc/testsuite/gcc.dg/guality/pr41447-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41447-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41447-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41447-1.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-g\" } */\n+/* { dg-xfail-run-if \"\" { aarch64*-*-* } { \"-O2\" \"-O3\" \"-Os\" } { \"-fno-fat-lto-objects\" } } */\n \n #include \"guality.h\"\n "}, {"sha": "ba142217f5aa1bb8a25c287b2ea8573050adce1d", "filename": "gcc/testsuite/gcc.dg/guality/pr54200.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54200.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54200.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54200.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -17,7 +17,7 @@ foo (int z, int x, int b)\n   else\n     {\n       int a = (x + z) + b;\n-      return a; /* { dg-final { gdb-test . \"z\" \"3\" } } */\n+      return a; /* { dg-final { gdb-test . \"z\" \"3\" { xfail { aarch64*-*-* && { no-opts \"-O0\" \"-Og\" } } } } } */\n     }\n }\n "}, {"sha": "81703eb1744a6cf39d2d948d3a78a847e70b444c", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-1.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -16,11 +16,11 @@ fn2 (int x, int y, int z)\n     {\n       fn1 (x);\n       fn1 (x);\t\t/* { dg-final { gdb-test .+2 \"x\" \"36\" } } */\n-      if (x == 36)\t/* { dg-final { gdb-test .+1 \"y\" \"25\" } } */\n-\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"6\" } } */\n+      if (x == 36)\t/* { dg-final { gdb-test .+1 \"y\" \"25\" { xfail { aarch64*-*-* && { any-opts \"-flto\" } } } } } */\n+\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"6\" { xfail { aarch64*-*-* && { any-opts \"-flto\" } } } } } */\n       fn1 (x);\t\t/* { dg-final { gdb-test .+2 \"x\" \"98\" } } */\n-      if (x == 98)\t/* { dg-final { gdb-test .+1 \"y\" \"117\" } } */\n-\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"8\" } } */\n+      if (x == 98)\t/* { dg-final { gdb-test .+1 \"y\" \"117\" { xfail { aarch64*-*-* && { any-opts \"-flto\" } } } } } */\n+\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"8\" { xfail { aarch64*-*-* && { any-opts \"-flto\" } } } } } */\n       fn1 (x);\n       fn1 (x + a);\n     }"}, {"sha": "e1368bf63cc86b5f8078a4f95d4ff357b4b0bf61", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-2.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -14,7 +14,7 @@ fn2 (int x, int y)\n   if (y)\n     {\n       fn1 (x);\t\t/* { dg-final { gdb-test .+1 \"x\" \"6\" } } */\n-      fn1 (x);\t\t/* { dg-final { gdb-test . \"y\" \"25\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test . \"y\" \"25\" { xfail { aarch64*-*-* && { any-opts \"-flto\" } } } } } */\n       fn1 (x);\n       fn1 (x);\n       y = -2 + x;"}, {"sha": "fabab963d7222263f3721eb678e7a75dd21d9cec", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-3.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-3.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -16,11 +16,11 @@ fn2 (int x, int y, int z)\n     {\n       fn1 (x);\n       fn1 (x);\t\t/* { dg-final { gdb-test .+2 \"x\" \"36\" } } */\n-      if (x == 36)\t/* { dg-final { gdb-test .+1 \"y\" \"25\" } } */\n-\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"6\" } } */\n+      if (x == 36)\t/* { dg-final { gdb-test .+1 \"y\" \"25\" { xfail { aarch64*-*-* && { any-opts \"-flto\" } } } } } */\n+\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"6\" { xfail { aarch64*-*-* && { any-opts \"-flto\" } } } } } */\n       fn1 (x);\t\t/* { dg-final { gdb-test .+2 \"x\" \"98\" } } */\n-      if (x == 98)\t/* { dg-final { gdb-test .+1 \"y\" \"117\" } } */\n-\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"8\" } } */\n+      if (x == 98)\t/* { dg-final { gdb-test .+1 \"y\" \"117\" { xfail { aarch64*-*-* && { any-opts \"-flto\" } } } } } */\n+\tfn1 (x);\t/* { dg-final { gdb-test . \"z\" \"8\" { xfail { aarch64*-*-* && { any-opts \"-flto\" } } } } } */\n       fn1 (x);\n       fn1 (x + a);\n     }"}, {"sha": "fd8465fb72a15876d893076cd84579a19bbcb390", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-4.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -14,7 +14,7 @@ fn2 (int x, int y)\n   if (y)\n     {\n       fn1 (x);\t\t/* { dg-final { gdb-test .+1 \"x\" \"6\" } } */\n-      fn1 (x);\t\t/* { dg-final { gdb-test . \"y\" \"25\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test . \"y\" \"25\" { xfail { aarch64*-*-* && { any-opts \"-flto\" } } } } } */\n       fn1 (x);\n       fn1 (x);\n       y = -2 + x;"}, {"sha": "76fa1e3ad0210e880f927021d7a9dcef195a3cf4", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-5.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -14,7 +14,7 @@ fn2 (int x, int y)\n   if (y)\n     {\n       fn1 (x);\t\t/* { dg-final { gdb-test .+1 \"x\" \"6\" } } */\n-      fn1 (x);\t\t/* { dg-final { gdb-test . \"y\" \"25\" } } */\n+      fn1 (x);\t\t/* { dg-final { gdb-test . \"y\" \"25\" { xfail { aarch64*-*-* && { any-opts \"-flto\" } } } } } */\n       fn1 (x);\n       fn1 (x);\n       y = -2 + x;"}, {"sha": "732c268e45eea8a18ef716b71acbb4cabd234644", "filename": "gcc/testsuite/gcc.dg/guality/pr54519-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54519-6.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -7,7 +7,7 @@\n static inline void\n f1 (int x, int y)\n {\n-  asm volatile (NOP);\t/* { dg-final { gdb-test .+1 \"x\" \"2\" } } */\n+  asm volatile (NOP);\t/* { dg-final { gdb-test .+1 \"x\" \"2\" { xfail { aarch64*-*-* && { any-opts \"-Os\" } } } } } */\n   asm volatile (NOP);\t/* { dg-final { gdb-test . \"y\" \"0\" } } */\n }\n "}, {"sha": "68aa6c63d718688513b435ca6768d5d69df5b472", "filename": "gcc/testsuite/gcc.dg/guality/pr54693-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr54693-2.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -19,7 +19,7 @@ foo (int x, int y, int z)\n     {\t\t/* { dg-final { gdb-test .+2 \"i\" \"v + 1\" } } */\n \t\t/* { dg-final { gdb-test .+1 \"x\" \"10 - i\" } } */\n       bar (i);\t/* { dg-final { gdb-test . \"y\" \"20 - 2 * i\" } } */\n-\t\t/* { dg-final { gdb-test .-1 \"z\" \"30 - 3 * i\" } } */\n+\t\t/* { dg-final { gdb-test .-1 \"z\" \"30 - 3 * i\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" \"-Os\" } } } } } */\n       i++, x--, y -= 2, z -= 3;\n     }\n }"}, {"sha": "d6da4a74b267807c099c466e68726d3ca94c105c", "filename": "gcc/testsuite/gcc.dg/guality/pr56154-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr56154-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr56154-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr56154-1.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -17,7 +17,7 @@ foo (int fd, union U x)\n   asm (NOP : : : \"memory\");\t  /* { dg-final { gdb-test pr56154-1.c:17 \"x.a\" \"4\" } } */\n   z = x.a;\n   x.a = 6;\n-  asm (NOP : : : \"memory\");\t  /* { dg-final { gdb-test pr56154-1.c:20 \"x.a\" \"6\" } } */\n+  asm (NOP : : : \"memory\");\t  /* { dg-final { gdb-test pr56154-1.c:20 \"x.a\" \"6\" { xfail { aarch64*-*-* && { any-opts \"-Og\" } } } } } */\n   return result;\n }\n "}, {"sha": "0e4855959eff590daaca69b75648fb1f1bf2a031", "filename": "gcc/testsuite/gcc.dg/guality/pr59776.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr59776.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr59776.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr59776.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -9,13 +9,13 @@ struct S { float f, g; };\n __attribute__((noipa)) void\n foo (struct S *p)\n {\n-  struct S s1, s2;\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s1.f\" \"5.0\" } } */\n-  s1 = *p;\t\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s1.g\" \"6.0\" } } */\n-  s2 = s1;\t\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s2.f\" \"0.0\" } } */\n+  struct S s1, s2;\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s1.f\" \"5.0\" { xfail { aarch64*-*-* && { any-opts \"-Og\" } } } } } */\n+  s1 = *p;\t\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s1.g\" \"6.0\" { xfail { aarch64*-*-* && { any-opts \"-Og\" } } } } } */\n+  s2 = s1;\t\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s2.f\" \"0.0\" { xfail { aarch64*-*-* && { any-opts \"-Og\" } } } } } */\n   *(int *) &s2.f = 0;\t\t\t/* { dg-final { gdb-test pr59776.c:17 \"s2.g\" \"6.0\" { xfail { no-opts \"-O0\" } } } } */\n-  asm volatile (NOP : : : \"memory\");\t/* { dg-final { gdb-test pr59776.c:20 \"s1.f\" \"5.0\" } } */\n-  asm volatile (NOP : : : \"memory\");\t/* { dg-final { gdb-test pr59776.c:20 \"s1.g\" \"6.0\" } } */\n-  s2 = s1;\t\t\t\t/* { dg-final { gdb-test pr59776.c:20 \"s2.f\" \"5.0\" } } */\n+  asm volatile (NOP : : : \"memory\");\t/* { dg-final { gdb-test pr59776.c:20 \"s1.f\" \"5.0\" { xfail { aarch64*-*-* && { any-opts \"-Og\" } } } } } */\n+  asm volatile (NOP : : : \"memory\");\t/* { dg-final { gdb-test pr59776.c:20 \"s1.g\" \"6.0\" { xfail { aarch64*-*-* && { any-opts \"-Og\" } } } } } */\n+  s2 = s1;\t\t\t\t/* { dg-final { gdb-test pr59776.c:20 \"s2.f\" \"5.0\" { xfail { aarch64*-*-* && { any-opts \"-Og\" } } } } } */\n   asm volatile (NOP : : : \"memory\");\t/* { dg-final { gdb-test pr59776.c:20 \"s2.g\" \"6.0\" { xfail { no-opts \"-O0\" } } } } */\n   asm volatile (NOP : : : \"memory\");\n }"}, {"sha": "bbd9d6e60329717db52be60a47de878271734612", "filename": "gcc/testsuite/gcc.dg/guality/pr68860-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr68860-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr68860-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr68860-1.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -31,7 +31,7 @@ foo (int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int a\n /* { dg-final { gdb-test 14 \"arg6\" \"6\" } } */\n /* { dg-final { gdb-test 14 \"arg7\" \"30\" } } */\n /* { dg-final { gdb-test 14 \"arg8\" \"7\" } } */\n-/* { dg-final { gdb-test 14 \"y\" \"2\" } } */\n+/* { dg-final { gdb-test 14 \"y\" \"2\" { xfail { aarch64*-*-* && { { any-opts \"-O2\" \"-O3\" } && { no-opts \"-flto\" } } } } } } */\n /* { dg-final { gdb-test 16 \"arg1\" \"1\" { target { ! \"s390*-*-*\" } } } } */\n /* { dg-final { gdb-test 16 \"arg2\" \"2\" { target { ! \"s390*-*-*\" } } } } */\n /* { dg-final { gdb-test 16 \"arg3\" \"3\" } } */"}, {"sha": "a18a04e60b29f57882ca3605cf3f3b47db140aa0", "filename": "gcc/testsuite/gcc.dg/guality/pr68860-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr68860-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr68860-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr68860-2.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -31,7 +31,7 @@ foo (int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, int a\n /* { dg-final { gdb-test 14 \"arg6\" \"6\" } } */\n /* { dg-final { gdb-test 14 \"arg7\" \"30\" } } */\n /* { dg-final { gdb-test 14 \"arg8\" \"7\" } } */\n-/* { dg-final { gdb-test 14 \"y\" \"2\" } } */\n+/* { dg-final { gdb-test 14 \"y\" \"2\" { xfail { aarch64*-*-* && { any-opts \"-O3\" } } } } } */\n /* { dg-final { gdb-test 16 \"arg1\" \"1\" { target { ! \"s390*-*-*\" } } } } */\n /* { dg-final { gdb-test 16 \"arg2\" \"2\" { target { ! \"s390*-*-*\" } } } } */\n /* { dg-final { gdb-test 16 \"arg3\" \"3\" } } */"}, {"sha": "2fd884209f2666007a45b8df16025ab194d06aed", "filename": "gcc/testsuite/gcc.dg/guality/pr90074.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr90074.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr90074.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr90074.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -25,7 +25,7 @@ int main()\n      debug stmt for the final value of the loop during loop distribution\n      which would fix the UNSUPPORTED cases.\n      c is optimized out at -Og for no obvious reason.  */\n-  optimize_me_not(); /* { dg-final { gdb-test . \"i + 1\" \"8\" } } */\n-    /* { dg-final { gdb-test .-1 \"c + 1\" \"2\" } } */\n+  optimize_me_not(); /* { dg-final { gdb-test . \"i + 1\" \"8\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" } } } } } */\n+    /* { dg-final { gdb-test .-1 \"c + 1\" \"2\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" } } } } } */\n   return 0;\n }"}, {"sha": "fe7e5567625cf6b7617f3916458abf4d355ebc80", "filename": "gcc/testsuite/gcc.dg/guality/pr90716.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr90716.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr90716.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr90716.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -20,6 +20,6 @@ int main()\n      Instead test j + 1 which will make the test UNSUPPORTED if i\n      is optimized out.  Since the test previously had wrong debug\n      with j == 0 this is acceptable.  */\n-  optimize_me_not(); /* { dg-final { gdb-test . \"j + 1\" \"9\" } } */\n+  optimize_me_not(); /* { dg-final { gdb-test . \"j + 1\" \"9\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" } } } } } */\n   return 0;\n }"}, {"sha": "e9b920ecd66b8ee64aa0a166f862bdf37e01f44a", "filename": "gcc/testsuite/gcc.dg/guality/sra-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fsra-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fsra-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fsra-1.c?ref=f31ddad8ac8f11b8b11ab0c39f2e0740fd40ba8e", "patch": "@@ -18,7 +18,7 @@ f1 (int k)\n   asm (\"\" : \"+r\" (a.i));\n   a.j++;\n   bar (a.i);\t\t/* { dg-final { gdb-test .+1 \"a.i\" \"4\" } } */\n-  bar (a.j);\t\t/* { dg-final { gdb-test . \"a.j\" \"14\" } } */\n+  bar (a.j);\t\t/* { dg-final { gdb-test . \"a.j\" \"14\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" } } } } } */\n   return a.i + a.j;\n }\n \n@@ -29,7 +29,7 @@ f2 (int k)\n   asm (\"\" : \"+r\" (a[0]));\n   a[1]++;\n   bar (a[0]);\t\t/* { dg-final { gdb-test .+1 \"a\\[0\\]\" \"4\" } } */\n-  bar (a[1]);\t\t/* { dg-final { gdb-test . \"a\\[1\\]\" \"14\" } } */\n+  bar (a[1]);\t\t/* { dg-final { gdb-test . \"a\\[1\\]\" \"14\" { xfail { aarch64*-*-* && { any-opts \"-fno-fat-lto-objects\" } } } } } */\n   return a[0] + a[1];\n }\n \n@@ -39,8 +39,8 @@ f3 (int k)\n   struct B a = { 4, k + 6 };\n   asm (\"\" : \"+r\" (a.i));\n   a.j++;\n-  bar (a.i);\t\t/* { dg-final { gdb-test .+1 \"a.i\" \"4\" } } */\n-  bar (a.j);\t\t/* { dg-final { gdb-test . \"a.j\" \"14\" } } */\n+  bar (a.i);\t\t/* { dg-final { gdb-test .+1 \"a.i\" \"4\" { xfail { aarch64*-*-* && { any-opts \"-Og\" } } } } } */\n+  bar (a.j);\t\t/* { dg-final { gdb-test . \"a.j\" \"14\" { xfail { aarch64*-*-* && { any-opts \"-Og\" \"-fno-fat-lto-objects\" } } } } } */\n   return a.i + a.j;\n }\n "}]}