{"sha": "5eb9c92c63cb100237da01600644eb19a8926612", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWViOWM5MmM2M2NiMTAwMjM3ZGEwMTYwMDY0NGViMTlhODkyNjYxMg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-15T18:36:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-15T18:36:57Z"}, "message": "* pa.c (shadd_operand): Delete.\n\nFrom-SVN: r3738", "tree": {"sha": "7c0d8f97977e7c71323e265a8f344a4e5254d7d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c0d8f97977e7c71323e265a8f344a4e5254d7d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5eb9c92c63cb100237da01600644eb19a8926612", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eb9c92c63cb100237da01600644eb19a8926612", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eb9c92c63cb100237da01600644eb19a8926612", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eb9c92c63cb100237da01600644eb19a8926612/comments", "author": null, "committer": null, "parents": [{"sha": "81722625a7b0446cb47bfe46e184d67b7d650d0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81722625a7b0446cb47bfe46e184d67b7d650d0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81722625a7b0446cb47bfe46e184d67b7d650d0f"}], "stats": {"total": 15, "additions": 0, "deletions": 15}, "files": [{"sha": "3294f92e3c3ff917b54c1ffa66a205ab2c9c8d2a", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eb9c92c63cb100237da01600644eb19a8926612/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eb9c92c63cb100237da01600644eb19a8926612/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=5eb9c92c63cb100237da01600644eb19a8926612", "patch": "@@ -3001,21 +3001,6 @@ fmpysuboperands(operands)\n   return 1;\n }\n \n-/* Return 1 if OP is suitable for the second add operand (the unshifed \n-   operand) in an shadd instruction.   Allow CONST_INT to work around\n-   a reload bug.  */\n-int\n-shadd_operand (op, mode)\n-     rtx op;\n-     enum machine_mode mode;\n-{\n-  if (GET_CODE (op) == REG)\n-    return 1;\n-  if (GET_CODE (op) == CONST_INT)\n-    return 1;\n-  return 0;\n-}\n-\n int\n plus_xor_ior_operator (op, mode)\n      rtx op;"}]}