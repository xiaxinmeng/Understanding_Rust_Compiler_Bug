{"sha": "bae7adda10c0e1d813ebb602a719ca66ff16fae9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFlN2FkZGExMGMwZTFkODEzZWJiNjAyYTcxOWNhNjZmZjE2ZmFlOQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-04-08T09:39:44Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-04-08T09:39:44Z"}, "message": "[ARM] PR target/70566 Check that condition register is dead in tst-imm -> lsls-imm Thumb2 peepholes\n\n\tPR target/70566\n\t* config/arm/thumb2.md (tst + branch-> lsls + branch\n\tpeephole below *orsi_not_shiftsi_si): Require that condition\n\tregister is dead after the peephole.\n\t(second peephole after the above): Likewise.\n\n\t* gcc.c-torture/execute/pr70566.c: New test.\n\nFrom-SVN: r234825", "tree": {"sha": "eb144d97f0e4370882793d9dfeab03680e68ba79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb144d97f0e4370882793d9dfeab03680e68ba79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bae7adda10c0e1d813ebb602a719ca66ff16fae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae7adda10c0e1d813ebb602a719ca66ff16fae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae7adda10c0e1d813ebb602a719ca66ff16fae9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae7adda10c0e1d813ebb602a719ca66ff16fae9/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "211f3d57b17a275835d37b631591efbd1b446a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/211f3d57b17a275835d37b631591efbd1b446a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/211f3d57b17a275835d37b631591efbd1b446a46"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "7fe1c42eda7a51200d68f11bdd0ab017951eb88f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae7adda10c0e1d813ebb602a719ca66ff16fae9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae7adda10c0e1d813ebb602a719ca66ff16fae9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bae7adda10c0e1d813ebb602a719ca66ff16fae9", "patch": "@@ -1,3 +1,11 @@\n+2016-04-08  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/70566\n+\t* config/arm/thumb2.md (tst + branch-> lsls + branch\n+\tpeephole below *orsi_not_shiftsi_si): Require that condition\n+\tregister is dead after the peephole.\n+\t(second peephole after the above): Likewise.\n+\n 2016-04-08  Alan Modra  <amodra@gmail.com>\n \n \tPR target/70117"}, {"sha": "ab08288413c3e64911e8d7a8199b9809e0282d8e", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae7adda10c0e1d813ebb602a719ca66ff16fae9/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae7adda10c0e1d813ebb602a719ca66ff16fae9/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=bae7adda10c0e1d813ebb602a719ca66ff16fae9", "patch": "@@ -1550,7 +1550,8 @@\n \t\t      (match_operand 5 \"\" \"\")\n \t\t      (match_operand 6 \"\" \"\")))]\n   \"TARGET_THUMB2\n-   && (INTVAL (operands[2]) >= 0 && INTVAL (operands[2]) < 32)\"\n+   && (INTVAL (operands[2]) >= 0 && INTVAL (operands[2]) < 32)\n+   && peep2_reg_dead_p (2, operands[0])\"\n   [(parallel [(set (match_dup 0)\n \t\t   (compare:CC_NOOV (ashift:SI (match_dup 1) (match_dup 2))\n \t\t\t\t    (const_int 0)))\n@@ -1578,7 +1579,8 @@\n \t\t      (match_operand 5 \"\" \"\")\n \t\t      (match_operand 6 \"\" \"\")))]\n   \"TARGET_THUMB2\n-   && (INTVAL (operands[2]) > 0 && INTVAL (operands[2]) < 32)\"\n+   && (INTVAL (operands[2]) > 0 && INTVAL (operands[2]) < 32)\n+   && peep2_reg_dead_p (2, operands[0])\"\n   [(parallel [(set (match_dup 0)\n \t\t   (compare:CC_NOOV (ashift:SI (match_dup 1) (match_dup 2))\n \t\t\t\t    (const_int 0)))"}, {"sha": "2668b0d92af4a46c67d3b1c0c36a580c77eb332a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae7adda10c0e1d813ebb602a719ca66ff16fae9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae7adda10c0e1d813ebb602a719ca66ff16fae9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bae7adda10c0e1d813ebb602a719ca66ff16fae9", "patch": "@@ -1,3 +1,8 @@\n+2016-04-08  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/70566\n+\t* gcc.c-torture/execute/pr70566.c: New test.\n+\n 2016-04-08  Tom de Vries  <tom@codesourcery.com>\n \n \t* c-c++-common/goacc/uninit-copy-clause.c: New test."}, {"sha": "f47106e70c7d4d7f3623f9505c02445a63332a9d", "filename": "gcc/testsuite/gcc.c-torture/execute/pr70566.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae7adda10c0e1d813ebb602a719ca66ff16fae9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70566.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae7adda10c0e1d813ebb602a719ca66ff16fae9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70566.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr70566.c?ref=bae7adda10c0e1d813ebb602a719ca66ff16fae9", "patch": "@@ -0,0 +1,47 @@\n+/* PR target/70566.  */\n+\n+#define NULL 0\n+\n+struct mystruct\n+{\n+  unsigned int f1 : 1;\n+  unsigned int f2 : 1;\n+  unsigned int f3 : 1;\n+};\n+\n+__attribute__ ((noinline)) void\n+myfunc (int a, void *b)\n+{\n+}\n+__attribute__ ((noinline)) int\n+myfunc2 (void *a)\n+{\n+  return 0;\n+}\n+\n+static void\n+set_f2 (struct mystruct *user, int f2)\n+{\n+  if (user->f2 != f2)\n+    myfunc (myfunc2 (NULL), NULL);\n+  else\n+    __builtin_abort ();\n+}\n+\n+__attribute__ ((noinline)) void\n+foo (void *data)\n+{\n+  struct mystruct *user = data;\n+  if (!user->f2)\n+    set_f2 (user, 1);\n+}\n+\n+int\n+main (void)\n+{\n+  struct mystruct a;\n+  a.f1 = 1;\n+  a.f2 = 0;\n+  foo (&a);\n+  return 0;\n+}"}]}