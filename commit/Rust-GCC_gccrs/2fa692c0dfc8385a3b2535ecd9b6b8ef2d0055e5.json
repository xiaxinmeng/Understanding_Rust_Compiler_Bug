{"sha": "2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZhNjkyYzBkZmM4Mzg1YTNiMjUzNWVjZDliNmI4ZWYyZDAwNTVlNQ==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2010-11-03T22:25:53Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2010-11-03T22:25:53Z"}, "message": "Fix PR/46200\n\nFrom-SVN: r166280", "tree": {"sha": "8b5f37ff39681da2eb648312b37db5360bde9238", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b5f37ff39681da2eb648312b37db5360bde9238"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9451da7425d50f767912a2126e1681317dec0869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9451da7425d50f767912a2126e1681317dec0869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9451da7425d50f767912a2126e1681317dec0869"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "a8d12c411914ffb9f483a0e117c631122912b317", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5", "patch": "@@ -1,3 +1,9 @@\n+2010-11-03  Xinliang David Li  <davidxl@google.com>\n+\n+       PR target/46200\n+       * tree-ssa-loop-ivopts.c (get_computation_cost_at):\n+       Adjust cbase if the use stmt is after iv update.\n+\n 2010-11-03  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config.gcc (sh64*) <tm_file>: Add newlib-stdint.h for"}, {"sha": "fb9eb65b846fcda6633f1b951a61dce488f7e112", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5", "patch": "@@ -1,3 +1,8 @@\n+2010-11-03  Xinliang David Li  <davidxl@google.com>\n+\n+       PR target/46200\n+       * g++.dg/tree-ssa/ivopts-2.C: New test.\n+\n 2010-11-03  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/46295"}, {"sha": "908299d98e89d33a55e76d91f376114e0b7c5bb7", "filename": "gcc/testsuite/g++.dg/tree-ssa/ivopts-2.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fivopts-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fivopts-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fivopts-2.C?ref=2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile { target { i?86-*-* x86_64-*-*  } } } */\n+/* { dg-options \"-O2 -fdump-tree-ivopts-details\" } */\n+\n+void test (int *b, int *e, int stride)\n+  {\n+    for (int *p = b; p != e; p += stride)\n+      *p = 1;\n+  }\n+\n+/* { dg-final { scan-tree-dump-times \"PHI <p\" 1 \"ivopts\"} } */\n+/* { dg-final { cleanup-tree-dump \"ivopts\" } } */"}, {"sha": "ab2e67af2aea6af0e9621b06141701b2c09d0cb0", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=2fa692c0dfc8385a3b2535ecd9b6b8ef2d0055e5", "patch": "@@ -4027,6 +4027,8 @@ get_computation_cost_at (struct ivopts_data *data,\n   STRIP_NOPS (cbase);\n   ctype = TREE_TYPE (cbase);\n \n+  stmt_is_after_inc = stmt_after_increment (data->current_loop, cand, at);\n+\n   /* use = ubase + ratio * (var - cbase).  If either cbase is a constant\n      or ratio == 1, it is better to handle this like\n \n@@ -4045,8 +4047,24 @@ get_computation_cost_at (struct ivopts_data *data,\n     }\n   else if (ratio == 1)\n     {\n+      tree real_cbase = cbase;\n+\n+      /* Check to see if any adjustment is needed.  */\n+      if (cstepi == 0 && stmt_is_after_inc)\n+        {\n+          aff_tree real_cbase_aff;\n+          aff_tree cstep_aff;\n+\n+          tree_to_aff_combination (cbase, TREE_TYPE (real_cbase),\n+                                   &real_cbase_aff);\n+          tree_to_aff_combination (cstep, TREE_TYPE (cstep), &cstep_aff);\n+\n+          aff_combination_add (&real_cbase_aff, &cstep_aff);\n+          real_cbase = aff_combination_to_tree (&real_cbase_aff);\n+        }\n+\n       cost = difference_cost (data,\n-\t\t\t      ubase, cbase,\n+\t\t\t      ubase, real_cbase,\n \t\t\t      &symbol_present, &var_present, &offset,\n \t\t\t      depends_on);\n       cost.cost /= avg_loop_niter (data->current_loop);\n@@ -4088,7 +4106,6 @@ get_computation_cost_at (struct ivopts_data *data,\n \n   /* If we are after the increment, the value of the candidate is higher by\n      one iteration.  */\n-  stmt_is_after_inc = stmt_after_increment (data->current_loop, cand, at);\n   if (stmt_is_after_inc)\n     offset -= ratio * cstepi;\n "}]}