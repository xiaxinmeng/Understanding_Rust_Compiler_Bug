{"sha": "9ffbf2714bac6ab0521df5edcc2149ef20ebb762", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZmYmYyNzE0YmFjNmFiMDUyMWRmNWVkY2MyMTQ5ZWYyMGViYjc2Mg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-03-02T22:19:37Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-03-02T22:19:37Z"}, "message": "re PR lto/60150 (ICE in function_and_variable_visibility, at ipa.c:1000)\n\n\tPR ipa/60150\n\t* ipa.c (function_and_variable_visibility): When dissolving comdat\n\tgroup, also set all symbols to local.\n\t* g++.dg/lto/pr60150.H: New testcase.\n\t* g++.dg/lto/pr60150_0.C: New testcase.\n\t* g++.dg/lto/pr60150_1.C: New testcase.\n\nFrom-SVN: r208262", "tree": {"sha": "5e8cb9726985c6860c6d592db3fc1617ee95291e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e8cb9726985c6860c6d592db3fc1617ee95291e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ffbf2714bac6ab0521df5edcc2149ef20ebb762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ffbf2714bac6ab0521df5edcc2149ef20ebb762", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ffbf2714bac6ab0521df5edcc2149ef20ebb762", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/comments", "author": null, "committer": null, "parents": [{"sha": "993df21e9aacba1ff3236e0e0df0118573de8190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/993df21e9aacba1ff3236e0e0df0118573de8190", "html_url": "https://github.com/Rust-GCC/gccrs/commit/993df21e9aacba1ff3236e0e0df0118573de8190"}], "stats": {"total": 76, "additions": 69, "deletions": 7}, "files": [{"sha": "c05694693b060c75c4446fe616f988c37ede34d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ffbf2714bac6ab0521df5edcc2149ef20ebb762", "patch": "@@ -1,3 +1,9 @@\n+2014-03-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/60150\n+\t* ipa.c (function_and_variable_visibility): When dissolving comdat\n+\tgroup, also set all symbols to local.\n+\n 2014-03-02  Jan Hubicka  <hubicka@ucw.cz>\n \t\n \tPR ipa/60306"}, {"sha": "da9755425c5609b759d396468a4104941528e34c", "filename": "gcc/ipa.c", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=9ffbf2714bac6ab0521df5edcc2149ef20ebb762", "patch": "@@ -970,15 +970,32 @@ function_and_variable_visibility (bool whole_program)\n \t  gcc_assert (whole_program || in_lto_p\n \t\t      || !TREE_PUBLIC (node->decl));\n \t  node->unique_name = ((node->resolution == LDPR_PREVAILING_DEF_IRONLY\n-\t\t\t\t      || node->resolution == LDPR_PREVAILING_DEF_IRONLY_EXP)\n-\t\t\t\t      && TREE_PUBLIC (node->decl));\n+\t\t\t\t|| node->unique_name\n+\t\t\t\t|| node->resolution == LDPR_PREVAILING_DEF_IRONLY_EXP)\n+\t\t\t\t&& TREE_PUBLIC (node->decl));\n \t  node->resolution = LDPR_PREVAILING_DEF_IRONLY;\n \t  if (node->same_comdat_group && TREE_PUBLIC (node->decl))\n-\t    /* cgraph_externally_visible_p has already checked all other nodes\n-\t       in the group and they will all be made local.  We need to\n-\t       dissolve the group at once so that the predicate does not\n-\t       segfault though. */\n-\t    symtab_dissolve_same_comdat_group_list (node);\n+\t    {\n+\t      symtab_node *next = node;\n+\n+\t      /* Set all members of comdat group local.  */\n+\t      if (node->same_comdat_group)\n+\t\tfor (next = node->same_comdat_group;\n+\t\t     next != node;\n+\t\t     next = next->same_comdat_group)\n+\t\t{\n+\t\t  symtab_make_decl_local (next->decl);\n+\t\t  next->unique_name = ((next->resolution == LDPR_PREVAILING_DEF_IRONLY\n+\t\t\t\t\t|| next->unique_name\n+\t\t\t\t\t|| next->resolution == LDPR_PREVAILING_DEF_IRONLY_EXP)\n+\t\t\t\t\t&& TREE_PUBLIC (next->decl));\n+\t\t}\n+\t      /* cgraph_externally_visible_p has already checked all other nodes\n+\t         in the group and they will all be made local.  We need to\n+\t         dissolve the group at once so that the predicate does not\n+\t         segfault though. */\n+\t      symtab_dissolve_same_comdat_group_list (node);\n+\t    }\n \t  symtab_make_decl_local (node->decl);\n \t}\n "}, {"sha": "7db73e4067590582ed03d28e98ed4414710c31c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9ffbf2714bac6ab0521df5edcc2149ef20ebb762", "patch": "@@ -1,3 +1,10 @@\n+2014-03-02  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/60150\n+\t* g++.dg/lto/pr60150.H: New testcase.\n+\t* g++.dg/lto/pr60150_0.C: New testcase.\n+\t* g++.dg/lto/pr60150_1.C: New testcase.\n+\n 2014-03-02  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/60306"}, {"sha": "6afe37acc9c9b8eb9632d3c4e7b9c7c89a81cd68", "filename": "gcc/testsuite/g++.dg/lto/pr60150.H", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr60150.H", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr60150.H", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr60150.H?ref=9ffbf2714bac6ab0521df5edcc2149ef20ebb762", "patch": "@@ -0,0 +1,20 @@\n+struct Base {\n+  virtual void f() = 0;\n+};\n+\n+struct X : public Base { };\n+struct Y : public Base { };\n+struct Z : public Base { };\n+struct T : public Base { };\n+\n+struct S : public X, public Y, public Z\n+#ifdef XXX\n+, public T\n+#endif\n+{\n+  void f()\n+#ifdef XXX\n+  { }\n+#endif\n+  ;\n+};"}, {"sha": "cc21820a87b782bf4fe13f4d6355d310d9c72719", "filename": "gcc/testsuite/g++.dg/lto/pr60150_0.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr60150_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr60150_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr60150_0.C?ref=9ffbf2714bac6ab0521df5edcc2149ef20ebb762", "patch": "@@ -0,0 +1,8 @@\n+// { dg-lto-do run }\n+#include \"pr60150.H\"\n+\n+int main()\n+{\n+  S s;\n+  return 0;\n+}"}, {"sha": "294e5f00fe6105515302348ba92942e95801cf67", "filename": "gcc/testsuite/g++.dg/lto/pr60150_1.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr60150_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ffbf2714bac6ab0521df5edcc2149ef20ebb762/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr60150_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr60150_1.C?ref=9ffbf2714bac6ab0521df5edcc2149ef20ebb762", "patch": "@@ -0,0 +1,4 @@\n+// { dg-options \"-fno-lto\" }\n+#include \"pr60150.H\"\n+\n+void S::f() { }"}]}