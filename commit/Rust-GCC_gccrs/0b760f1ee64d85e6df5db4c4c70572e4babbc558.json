{"sha": "0b760f1ee64d85e6df5db4c4c70572e4babbc558", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI3NjBmMWVlNjRkODVlNmRmNWRiNGM0YzcwNTcyZTRiYWJiYzU1OA==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1993-09-24T05:00:25Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1993-09-24T05:00:25Z"}, "message": "(ASM_OUTPUT_ASCII): Enclose macro in \"do { .. } while (0)\".\n\nFrom-SVN: r5443", "tree": {"sha": "ccac83461e98f4ead062568fe86f9af50f07af44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccac83461e98f4ead062568fe86f9af50f07af44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b760f1ee64d85e6df5db4c4c70572e4babbc558", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b760f1ee64d85e6df5db4c4c70572e4babbc558", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b760f1ee64d85e6df5db4c4c70572e4babbc558", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b760f1ee64d85e6df5db4c4c70572e4babbc558/comments", "author": null, "committer": null, "parents": [{"sha": "4f1c4914f42087b715066c2b529cb032e9d36d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f1c4914f42087b715066c2b529cb032e9d36d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f1c4914f42087b715066c2b529cb032e9d36d43"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "a5a45e3dacc35a0bba5893fbc0e48d9b990cd924", "filename": "gcc/config/i386/att.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b760f1ee64d85e6df5db4c4c70572e4babbc558/gcc%2Fconfig%2Fi386%2Fatt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b760f1ee64d85e6df5db4c4c70572e4babbc558/gcc%2Fconfig%2Fi386%2Fatt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fatt.h?ref=0b760f1ee64d85e6df5db4c4c70572e4babbc558", "patch": "@@ -37,13 +37,15 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* How to output an ASCII string constant.  */\n \n #define ASM_OUTPUT_ASCII(FILE, p, size) \\\n+do\t\t\t\t\t\t\t\t\\\n { int i = 0; \t\t\t\t\t\t\t\\\n   while (i < (size))\t\t\t\t\t\t\\\n     { if (i%10 == 0) { if (i!=0) fprintf ((FILE), \"\\n\");\t\\\n \t\t       fprintf ((FILE), \"%s \", ASM_BYTE_OP); }\t\\\n-      else fprintf ((FILE), \",\");\t\t\t\t\t\\\n+      else fprintf ((FILE), \",\");\t\t\t\t\\\n \tfprintf ((FILE), \"0x%x\", ((p)[i++] & 0377)) ;}\t\t\\\n-      fprintf ((FILE), \"\\n\"); }\n+      fprintf ((FILE), \"\\n\");\t\t\t\t\t\\\n+} while (0)\n \n /* Do use .optim by default on this machine.  */\n #undef ASM_FILE_START_1"}, {"sha": "9809723bc9a630436f6cc8d7b1d679bfa47ce438", "filename": "gcc/config/i386/sun386.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b760f1ee64d85e6df5db4c4c70572e4babbc558/gcc%2Fconfig%2Fi386%2Fsun386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b760f1ee64d85e6df5db4c4c70572e4babbc558/gcc%2Fconfig%2Fi386%2Fsun386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsun386.h?ref=0b760f1ee64d85e6df5db4c4c70572e4babbc558", "patch": "@@ -40,13 +40,15 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* How to output an ASCII string constant.  */\n \n #define ASM_OUTPUT_ASCII(FILE, p, size) \\\n+do\t\t\t\t\t\t\t\t\\\n { int i = 0; \t\t\t\t\t\t\t\\\n   while (i < (size))\t\t\t\t\t\t\\\n-    { if (i%10 == 0) { if (i!=0) fprintf ((FILE), \"\\n\");\t\t\\\n+    { if (i%10 == 0) { if (i!=0) fprintf ((FILE), \"\\n\");\t\\\n \t\t       fprintf ((FILE), \"%s \", ASM_BYTE_OP); }\t\\\n-      else fprintf ((FILE), \",\");\t\t\t\t\t\\\n+      else fprintf ((FILE), \",\");\t\t\t\t\\\n       fprintf ((FILE), \"0x%x\", ((p)[i++] & 0377)) ;}\t\t\\\n-      fprintf ((FILE), \"\\n\"); }\n+      fprintf ((FILE), \"\\n\");\t\t\t\t\t\\\n+} while (0)\n \n /* Output at beginning of assembler file.  */\n /* The .file command should always begin the output.  */"}]}