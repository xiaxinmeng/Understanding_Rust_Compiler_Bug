{"sha": "a31505a339c847f0073c0ce9223a2b3c9bec6cef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMxNTA1YTMzOWM4NDdmMDA3M2MwY2U5MjIzYTJiM2M5YmVjNmNlZg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-08-20T19:14:04Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-08-20T19:14:04Z"}, "message": "x86: Always update EH return address in word_mode\n\nOn x86, return address is always popped in word_mode.  eh_return needs\nto put EH return address in word_mode on stack.\n\ngcc/\n\n\tPR target/87014\n\t* config/i386/i386.md (eh_return): Always update EH return\n\taddress in word_mode.\n\ngcc/testsuite/\n\n\tPR target/87014\n\t* g++.dg/torture/pr87014.C: New file.\n\nFrom-SVN: r263672", "tree": {"sha": "12a726c186f64d38dff8136282b9a6ecf9908d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12a726c186f64d38dff8136282b9a6ecf9908d37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a31505a339c847f0073c0ce9223a2b3c9bec6cef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a31505a339c847f0073c0ce9223a2b3c9bec6cef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a31505a339c847f0073c0ce9223a2b3c9bec6cef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a31505a339c847f0073c0ce9223a2b3c9bec6cef/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "846d943b4592561743d86ae90a9320b3ea03378c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/846d943b4592561743d86ae90a9320b3ea03378c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/846d943b4592561743d86ae90a9320b3ea03378c"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "eb7ac76f675b13fa16079af7ba924ce1750822e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31505a339c847f0073c0ce9223a2b3c9bec6cef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31505a339c847f0073c0ce9223a2b3c9bec6cef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a31505a339c847f0073c0ce9223a2b3c9bec6cef", "patch": "@@ -1,3 +1,9 @@\n+2018-08-20  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/87014\n+\t* config/i386/i386.md (eh_return): Always update EH return\n+\taddress in word_mode.\n+\n 2018-08-20  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \t* targhooks.c (std_gimplify_va_arg_expr): Properly handle case of when"}, {"sha": "71faa218ffaa5134fe263b34a4db615f9edfd91f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31505a339c847f0073c0ce9223a2b3c9bec6cef/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31505a339c847f0073c0ce9223a2b3c9bec6cef/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=a31505a339c847f0073c0ce9223a2b3c9bec6cef", "patch": "@@ -13612,7 +13612,10 @@\n      stack address we wish to restore.  */\n   tmp = gen_rtx_PLUS (Pmode, arg_pointer_rtx, sa);\n   tmp = plus_constant (Pmode, tmp, -UNITS_PER_WORD);\n-  tmp = gen_rtx_MEM (Pmode, tmp);\n+  /* Return address is always in word_mode.  */\n+  tmp = gen_rtx_MEM (word_mode, tmp);\n+  if (GET_MODE (ra) != word_mode)\n+    ra = convert_to_mode (word_mode, ra, 1);\n   emit_move_insn (tmp, ra);\n \n   emit_jump_insn (gen_eh_return_internal ());"}, {"sha": "26cbc08e20ab36aa5234a149f96b0e1f0018c6ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31505a339c847f0073c0ce9223a2b3c9bec6cef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31505a339c847f0073c0ce9223a2b3c9bec6cef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a31505a339c847f0073c0ce9223a2b3c9bec6cef", "patch": "@@ -1,3 +1,8 @@\n+2018-08-20  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/87014\n+\t* g++.dg/torture/pr87014.C: New file.\n+\n 2018-08-20  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR target/86984"}, {"sha": "614954ef464cf6ff54ba52444b269ba91b7ae7fa", "filename": "gcc/testsuite/g++.dg/torture/pr87014.C", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31505a339c847f0073c0ce9223a2b3c9bec6cef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr87014.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31505a339c847f0073c0ce9223a2b3c9bec6cef/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr87014.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr87014.C?ref=a31505a339c847f0073c0ce9223a2b3c9bec6cef", "patch": "@@ -0,0 +1,37 @@\n+// { dg-do run }\n+\n+void\n+fillstack ()\n+{\n+  long long foo[] =\n+    {\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+    };\n+}\n+\n+void\n+f (long long=-1,long long=-1,long long=-1,long long=-1,\n+   long long=-1,long long=-1,long long arg7_on_stack=-1)\n+{\n+  throw 0;\n+}\n+\n+void\n+g()\n+{\n+  try\n+    {\n+      f ();\n+    }\n+  catch (int)\n+    {\n+    }\n+}\n+\n+int\n+main()\n+{\n+  fillstack ();\n+  g ();\n+  return 0;\n+}"}]}