{"sha": "cd6dba21ac4803bde1b149365d543dd81500ded5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2ZGJhMjFhYzQ4MDNiZGUxYjE0OTM2NWQ1NDNkZDgxNTAwZGVkNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-12-15T10:11:03Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-12-15T10:11:03Z"}, "message": "re PR libstdc++/25421 (catching exception from codecvt_byname() segfaults)\n\n2005-12-15  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/25421\n\t* config/locale/gnu/c_locale.cc (_S_destroy_c_locale): Check\n\tfor null argument.\n\t* testsuite/22_locale/facet/25421.cc: New.\n\nFrom-SVN: r108565", "tree": {"sha": "a8e928e2bb1d296c80995e2b265c5b9ca0154da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8e928e2bb1d296c80995e2b265c5b9ca0154da2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd6dba21ac4803bde1b149365d543dd81500ded5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6dba21ac4803bde1b149365d543dd81500ded5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd6dba21ac4803bde1b149365d543dd81500ded5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6dba21ac4803bde1b149365d543dd81500ded5/comments", "author": null, "committer": null, "parents": [{"sha": "b1257407e99e36e78b1b374030d0dffb4832325a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1257407e99e36e78b1b374030d0dffb4832325a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1257407e99e36e78b1b374030d0dffb4832325a"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "5197f12c3ef34062cc17c3717f722106002e96e3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6dba21ac4803bde1b149365d543dd81500ded5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6dba21ac4803bde1b149365d543dd81500ded5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cd6dba21ac4803bde1b149365d543dd81500ded5", "patch": "@@ -1,3 +1,10 @@\n+2005-12-15  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/25421\n+\t* config/locale/gnu/c_locale.cc (_S_destroy_c_locale): Check\n+\tfor null argument.\n+\t* testsuite/22_locale/facet/25421.cc: New.\n+\n 2005-12-13  Carlos O'Donell <carlos@codesourcery.com>\n \n \t* include/std/std_limits.h (struct numeric_limits):"}, {"sha": "7a45a6e9fdabeb97e684f1db78378b65fcd94147", "filename": "libstdc++-v3/config/locale/gnu/c_locale.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6dba21ac4803bde1b149365d543dd81500ded5/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6dba21ac4803bde1b149365d543dd81500ded5/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc?ref=cd6dba21ac4803bde1b149365d543dd81500ded5", "patch": "@@ -100,7 +100,7 @@ namespace std\n   void\n   locale::facet::_S_destroy_c_locale(__c_locale& __cloc)\n   {\n-    if (_S_get_c_locale() != __cloc)\n+    if (__cloc && _S_get_c_locale() != __cloc)\n       __freelocale(__cloc); \n   }\n "}, {"sha": "93b873fef4b7142e92fd48943eab9b70d2069048", "filename": "libstdc++-v3/testsuite/22_locale/facet/25421.cc", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6dba21ac4803bde1b149365d543dd81500ded5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ffacet%2F25421.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6dba21ac4803bde1b149365d543dd81500ded5/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ffacet%2F25421.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ffacet%2F25421.cc?ref=cd6dba21ac4803bde1b149365d543dd81500ded5", "patch": "@@ -0,0 +1,67 @@\n+// 2005-12-15  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2005 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 22.1.1.1.2 - class locale::facet [lib.locale.facet]\n+\n+#include <stdexcept>\n+#include <locale>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/25421\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  try\n+    {\n+      new codecvt_byname<char, char, mbstate_t>(\"invalid-loc\");\n+      new collate_byname<char>(\"invalid-loc\");\n+      new ctype_byname<char>(\"invalid-loc\");\n+      new messages_byname<char>(\"invalid-loc\");\n+      new moneypunct_byname<char, true>(\"invalid-loc\");\n+      new numpunct_byname<char>(\"invalid-loc\");\n+\n+#ifdef _GLIBCXX_USE_WCHAR_T\n+      new codecvt_byname<wchar_t, char, mbstate_t>(\"invalid-loc\");\n+      new collate_byname<wchar_t>(\"invalid-loc\");\n+      new ctype_byname<wchar_t>(\"invalid-loc\");\n+      new messages_byname<wchar_t>(\"invalid-loc\");\n+      new moneypunct_byname<wchar_t, true>(\"invalid-loc\");\n+      new numpunct_byname<wchar_t>(\"invalid-loc\");\n+#endif\n+    }\n+  catch(const std::runtime_error&)\n+    {\n+      // named locale not valid\n+      VERIFY( true );\n+    }\n+  catch(...)\n+    {\n+      // some other error\n+      VERIFY( false );\n+    }\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}