{"sha": "e75f8f79f086dac6fa2944875f0fbfdf14644687", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc1ZjhmNzlmMDg2ZGFjNmZhMjk0NDg3NWYwZmJmZGYxNDY0NDY4Nw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-10-07T17:16:02Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-10-07T17:16:02Z"}, "message": "lto-cgraph.c (lto_symtab_encoder_new): New parameter FOR_INPUT.\n\n\n\t* lto-cgraph.c (lto_symtab_encoder_new): New parameter FOR_INPUT.\n\t(lto_symtab_encoder_delete): Update.\n\t(lto_symtab_encoder_encode): Update.\n\t(compute_ltrans_boundary): Update.\n\t(input_symtab): Update.\n \t* lto-streamer.h (lto_symtab_encoder_new): Update.\n\t\n\t* lto.c (read_cgraph_and_symbols): Release type merging hash early;\n\trelease input encoders.\n\t* lto-partition.c (new_partition): Update for new lto_symtab_encoder_new.\n\nFrom-SVN: r192184", "tree": {"sha": "087897b09e6c3cf173e2c0cc37e7b9dc85b7043a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/087897b09e6c3cf173e2c0cc37e7b9dc85b7043a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e75f8f79f086dac6fa2944875f0fbfdf14644687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75f8f79f086dac6fa2944875f0fbfdf14644687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e75f8f79f086dac6fa2944875f0fbfdf14644687", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75f8f79f086dac6fa2944875f0fbfdf14644687/comments", "author": null, "committer": null, "parents": [{"sha": "7c9bc8758e499a50cc323f88a062367d769251ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c9bc8758e499a50cc323f88a062367d769251ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c9bc8758e499a50cc323f88a062367d769251ef"}], "stats": {"total": 75, "additions": 57, "deletions": 18}, "files": [{"sha": "9543444b460280b2ae710cc18af482b147fb7a22", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e75f8f79f086dac6fa2944875f0fbfdf14644687", "patch": "@@ -1,3 +1,12 @@\n+2012-10-07  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-cgraph.c (lto_symtab_encoder_new): New parameter FOR_INPUT.\n+\t(lto_symtab_encoder_delete): Update.\n+\t(lto_symtab_encoder_encode): Update.\n+\t(compute_ltrans_boundary): Update.\n+\t(input_symtab): Update.\n+ \t* lto-streamer.h (lto_symtab_encoder_new): Update.\n+\n 2012-10-07  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips-protos.h (mips_split_type): New enum."}, {"sha": "4f952f59bf9f8230a34b7bb968a71b722e9dcf89", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=e75f8f79f086dac6fa2944875f0fbfdf14644687", "patch": "@@ -72,13 +72,17 @@ enum LTO_symtab_tags\n   LTO_symtab_last_tag\n };\n \n-/* Create a new symtab encoder.  */\n+/* Create a new symtab encoder.\n+   if FOR_INPUT, the encoder allocate only datastructures needed\n+   to read the symtab.  */\n \n lto_symtab_encoder_t\n-lto_symtab_encoder_new (void)\n+lto_symtab_encoder_new (bool for_input)\n {\n   lto_symtab_encoder_t encoder = XCNEW (struct lto_symtab_encoder_d);\n-  encoder->map = pointer_map_create ();\n+\n+  if (!for_input)\n+    encoder->map = pointer_map_create ();\n   encoder->nodes = NULL;\n   return encoder;\n }\n@@ -90,7 +94,8 @@ void\n lto_symtab_encoder_delete (lto_symtab_encoder_t encoder)\n {\n    VEC_free (lto_encoder_entry, heap, encoder->nodes);\n-   pointer_map_destroy (encoder->map);\n+   if (encoder->map)\n+     pointer_map_destroy (encoder->map);\n    free (encoder);\n }\n \n@@ -106,6 +111,15 @@ lto_symtab_encoder_encode (lto_symtab_encoder_t encoder,\n   int ref;\n   void **slot;\n \n+  if (!encoder->map)\n+    {\n+      lto_encoder_entry entry = {node, false, false, false};\n+\n+      ref = VEC_length (lto_encoder_entry, encoder->nodes);\n+      VEC_safe_push (lto_encoder_entry, heap, encoder->nodes, entry);\n+      return ref;\n+    }\n+\n   slot = pointer_map_contains (encoder->map, node);\n   if (!slot || !*slot)\n     {\n@@ -688,7 +702,7 @@ compute_ltrans_boundary (lto_symtab_encoder_t in_encoder)\n   lto_symtab_encoder_t encoder;\n   lto_symtab_encoder_iterator lsei;\n \n-  encoder = lto_symtab_encoder_new ();\n+  encoder = lto_symtab_encoder_new (false);\n \n   /* Go over all entries in the IN_ENCODER and duplicate them to\n      ENCODER. At the same time insert masters of clones so\n@@ -1316,7 +1330,7 @@ input_symtab (void)\n       if (!ib) \n \tfatal_error (\"cannot find LTO cgraph in %s\", file_data->file_name);\n       input_profile_summary (ib, file_data);\n-      file_data->symtab_node_encoder = lto_symtab_encoder_new ();\n+      file_data->symtab_node_encoder = lto_symtab_encoder_new (true);\n       nodes = input_cgraph_1 (file_data, ib);\n       lto_destroy_simple_input_block (file_data, LTO_section_symtab_nodes,\n \t\t\t\t      ib, data, len);"}, {"sha": "b2f8d30ff636011d871231d89562fdda5f89c4da", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=e75f8f79f086dac6fa2944875f0fbfdf14644687", "patch": "@@ -833,7 +833,7 @@ void lto_output_location (struct output_block *, location_t);\n \n \n /* In lto-cgraph.c  */\n-lto_symtab_encoder_t lto_symtab_encoder_new (void);\n+lto_symtab_encoder_t lto_symtab_encoder_new (bool);\n int lto_symtab_encoder_encode (lto_symtab_encoder_t, symtab_node);\n void lto_symtab_encoder_delete (lto_symtab_encoder_t);\n bool lto_symtab_encoder_delete_node (lto_symtab_encoder_t, symtab_node);"}, {"sha": "7218f4873cd874779a6f0538a59b9ff46f490e31", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=e75f8f79f086dac6fa2944875f0fbfdf14644687", "patch": "@@ -1,3 +1,9 @@\n+2012-10-07  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto.c (read_cgraph_and_symbols): Release type merging hash early;\n+\trelease input encoders.\n+\t* lto-partition.c (new_partition): Update for new lto_symtab_encoder_new.\n+\n 2012-10-06  Jan Hubicka  <jh@suse.cz>\n \n \tPR lto/54790 "}, {"sha": "32243fb83d3bfb130cee75741e52624a3808fbfe", "filename": "gcc/lto/lto-partition.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Flto%2Flto-partition.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Flto%2Flto-partition.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-partition.c?ref=e75f8f79f086dac6fa2944875f0fbfdf14644687", "patch": "@@ -99,7 +99,7 @@ static ltrans_partition\n new_partition (const char *name)\n {\n   ltrans_partition part = XCNEW (struct ltrans_partition_def);\n-  part->encoder = lto_symtab_encoder_new ();\n+  part->encoder = lto_symtab_encoder_new (false);\n   part->name = name;\n   part->insns = 0;\n   VEC_safe_push (ltrans_partition, heap, ltrans_partitions, part);"}, {"sha": "d880c8a2062a994ac5d05dc01cad1c805ddab15b", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=e75f8f79f086dac6fa2944875f0fbfdf14644687", "patch": "@@ -2946,6 +2946,17 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   if (resolution_file_name)\n     fclose (resolution);\n \n+  /* Free gimple type merging datastructures.  */\n+  htab_delete (gimple_types);\n+  gimple_types = NULL;\n+  htab_delete (type_hash_cache);\n+  type_hash_cache = NULL;\n+  free (type_pair_cache);\n+  type_pair_cache = NULL;\n+  gimple_type_leader = NULL;\n+  free_gimple_type_tables ();\n+  ggc_collect ();\n+\n   /* Set the hooks so that all of the ipa passes can read in their data.  */\n   lto_set_in_hooks (all_file_decl_data, get_section_data, free_section_data);\n \n@@ -2989,18 +3000,10 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   if (seen_error ())\n     fatal_error (\"errors during merging of translation units\");\n \n-  /* Fixup all decls and types and free the type hash tables.  */\n+  /* Fixup all decls.  */\n   lto_fixup_decls (all_file_decl_data);\n   htab_delete (tree_with_vars);\n   tree_with_vars = NULL;\n-  htab_delete (gimple_types);\n-  gimple_types = NULL;\n-  htab_delete (type_hash_cache);\n-  type_hash_cache = NULL;\n-  free (type_pair_cache);\n-  type_pair_cache = NULL;\n-  gimple_type_leader = NULL;\n-  free_gimple_type_tables ();\n   ggc_collect ();\n \n   timevar_pop (TV_IPA_LTO_DECL_MERGE);\n@@ -3015,6 +3018,13 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   else\n     ipa_read_summaries ();\n \n+  for (i = 0; all_file_decl_data[i]; i++)\n+    {\n+      gcc_assert (all_file_decl_data[i]->symtab_node_encoder);\n+      lto_symtab_encoder_delete (all_file_decl_data[i]->symtab_node_encoder);\n+      all_file_decl_data[i]->symtab_node_encoder = NULL;\n+    }\n+\n   /* Finally merge the cgraph according to the decl merging decisions.  */\n   timevar_push (TV_IPA_LTO_CGRAPH_MERGE);\n   if (cgraph_dump_file)"}, {"sha": "27bdb829417efbe1ab4a5c3ea84dd9821c5f0585", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e75f8f79f086dac6fa2944875f0fbfdf14644687/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=e75f8f79f086dac6fa2944875f0fbfdf14644687", "patch": "@@ -2544,7 +2544,7 @@ ipa_write_summaries (void)\n   if (!flag_generate_lto || seen_error ())\n     return;\n \n-  encoder = lto_symtab_encoder_new ();\n+  encoder = lto_symtab_encoder_new (false);\n \n   /* Create the callgraph set in the same order used in\n      cgraph_expand_all_functions.  This mostly facilitates debugging,"}]}