{"sha": "1d72079ba3a370d6751953312f0de76d1a1c555d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ3MjA3OWJhM2EzNzBkNjc1MTk1MzMxMmYwZGU3NmQxYTFjNTU1ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-26T07:47:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-26T13:58:32Z"}, "message": "tree-optimization/95327 - fix another vectorizable_shift const SLP op\n\nThis fixes another case where we fail to set the type on a SLP\nconstant operand in vectorizable_shift.\n\n2020-05-26  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/95327\n\t* tree-vect-stmts.c (vectorizable_shift): Compute op1_vectype\n\twhen we are not using a scalar shift.", "tree": {"sha": "2b961c24057859b5d4e3404ac732aa6fca740c98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b961c24057859b5d4e3404ac732aa6fca740c98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d72079ba3a370d6751953312f0de76d1a1c555d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d72079ba3a370d6751953312f0de76d1a1c555d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d72079ba3a370d6751953312f0de76d1a1c555d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d72079ba3a370d6751953312f0de76d1a1c555d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b8579a6b3664d202db23af60a2ab6cc1f9eb5ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b8579a6b3664d202db23af60a2ab6cc1f9eb5ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b8579a6b3664d202db23af60a2ab6cc1f9eb5ae"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "225a9dc98ac583a5e8a82b6c4678d1fb84eaaa13", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d72079ba3a370d6751953312f0de76d1a1c555d/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d72079ba3a370d6751953312f0de76d1a1c555d/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=1d72079ba3a370d6751953312f0de76d1a1c555d", "patch": "@@ -5733,13 +5733,19 @@ vectorizable_shift (vec_info *vinfo,\n                 dump_printf_loc (MSG_NOTE, vect_location,\n                                  \"vector/vector shift/rotate found.\\n\");\n \n+\t      if (!op1_vectype)\n+\t\top1_vectype = get_vectype_for_scalar_type (vinfo,\n+\t\t\t\t\t\t\t   TREE_TYPE (op1),\n+\t\t\t\t\t\t\t   slp_node);\n+\n               /* Unlike the other binary operators, shifts/rotates have\n                  the rhs being int, instead of the same type as the lhs,\n                  so make sure the scalar is the right type if we are\n \t\t dealing with vectors of long long/long/short/char.  */\n \t      incompatible_op1_vectype_p\n-\t\t= !tree_nop_conversion_p (TREE_TYPE (vectype),\n-\t\t\t\t\t  TREE_TYPE (op1));\n+\t\t= (!op1_vectype\n+\t\t   || !tree_nop_conversion_p (TREE_TYPE (vectype),\n+\t\t\t\t\t      TREE_TYPE (op1)));\n             }\n         }\n     }"}]}