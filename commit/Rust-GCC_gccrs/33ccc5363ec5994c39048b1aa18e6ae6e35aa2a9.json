{"sha": "33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNjY2M1MzYzZWM1OTk0YzM5MDQ4YjFhYTE4ZTZhZTZlMzVhYTJhOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-10-27T10:56:04Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-10-27T10:56:04Z"}, "message": "decl.c (gnat_to_gnu_entity): Remove superfluous computation for the max size.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Type>: Remove\n\tsuperfluous computation for the max size.\n\t<E_Array_Subtype>: Likewise.  Make sure that the max size calculation\n\tdoes not overflow at compile time.\n\nFrom-SVN: r216725", "tree": {"sha": "89f9bc56de9dc2fbc474b2c63f3ed7f470ca3868", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89f9bc56de9dc2fbc474b2c63f3ed7f470ca3868"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9/comments", "author": null, "committer": null, "parents": [{"sha": "0a2e22ec88620328fe7511e75536b942cf672a7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2e22ec88620328fe7511e75536b942cf672a7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2e22ec88620328fe7511e75536b942cf672a7a"}], "stats": {"total": 93, "additions": 76, "deletions": 17}, "files": [{"sha": "bb092c81c666db1e9948bffce8308927f2a9c21c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9", "patch": "@@ -1,3 +1,10 @@\n+2014-10-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Type>: Remove\n+\tsuperfluous computation for the max size.\n+\t<E_Array_Subtype>: Likewise.  Make sure that the max size calculation\n+\tdoes not overflow at compile time.\n+\n 2014-10-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_eval.adb (Check_Non_Static_Context): Do not set"}, {"sha": "97fd3b5a854252341c134fc70079a6f279fd880f", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9", "patch": "@@ -2127,11 +2127,8 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\ttree gnu_max\n \t\t  = convert (sizetype, TYPE_MAX_VALUE (gnu_index_type));\n \t\ttree gnu_this_max\n-\t\t  = size_binop (MAX_EXPR,\n-\t\t\t\tsize_binop (PLUS_EXPR, size_one_node,\n-\t\t\t\t\t    size_binop (MINUS_EXPR,\n-\t\t\t\t\t\t\tgnu_max, gnu_min)),\n-\t\t\t\tsize_zero_node);\n+\t\t  = size_binop (PLUS_EXPR, size_one_node,\n+\t\t\t\tsize_binop (MINUS_EXPR, gnu_max, gnu_min));\n \n \t\tif (TREE_CODE (gnu_this_max) == INTEGER_CST\n \t\t    && TREE_OVERFLOW (gnu_this_max))\n@@ -2464,20 +2461,26 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t    gnu_max_size = NULL_TREE;\n \t\t  else\n \t\t    {\n-\t\t      tree gnu_this_max\n-\t\t\t= size_binop (MAX_EXPR,\n-\t\t\t\t      size_binop (PLUS_EXPR, size_one_node,\n-\t\t\t\t\t\t  size_binop (MINUS_EXPR,\n+\t\t      tree gnu_this_max;\n+\n+\t\t      /* Use int_const_binop if the bounds are constant to\n+\t\t\t avoid any unwanted overflow.  */\n+\t\t      if (TREE_CODE (gnu_base_min) == INTEGER_CST\n+\t\t\t  && TREE_CODE (gnu_base_max) == INTEGER_CST)\n+\t\t\tgnu_this_max\n+\t\t\t  = int_const_binop (PLUS_EXPR, size_one_node,\n+\t\t\t\t\t     int_const_binop (MINUS_EXPR,\n \t\t\t\t\t\t\t      gnu_base_max,\n-\t\t\t\t\t\t\t      gnu_base_min)),\n-\t\t\t\t      size_zero_node);\n-\n-\t\t      if (TREE_CODE (gnu_this_max) == INTEGER_CST\n-\t\t\t  && TREE_OVERFLOW (gnu_this_max))\n-\t\t\tgnu_max_size = NULL_TREE;\n+\t\t\t\t\t\t\t      gnu_base_min));\n \t\t      else\n-\t\t\tgnu_max_size\n-\t\t\t  = size_binop (MULT_EXPR, gnu_max_size, gnu_this_max);\n+\t\t\tgnu_this_max\n+\t\t\t  = size_binop (PLUS_EXPR, size_one_node,\n+\t\t\t\t\tsize_binop (MINUS_EXPR,\n+\t\t\t\t\t\t    gnu_base_max,\n+\t\t\t\t\t\t    gnu_base_min));\n+\n+\t\t      gnu_max_size\n+\t\t\t= size_binop (MULT_EXPR, gnu_max_size, gnu_this_max);\n \t\t    }\n \t\t}\n "}, {"sha": "89d8d8edb886a560547417cefb9f0233a9017325", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9", "patch": "@@ -1,3 +1,7 @@\n+2014-10-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/entry_queues2.adb: New test.\n+\n 2014-10-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/63641"}, {"sha": "a1445cebdcb386f8e4b2e3eac9be8953d781c2bc", "filename": "gcc/testsuite/gnat.dg/entry_queues2.adb", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9/gcc%2Ftestsuite%2Fgnat.dg%2Fentry_queues2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9/gcc%2Ftestsuite%2Fgnat.dg%2Fentry_queues2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fentry_queues2.adb?ref=33ccc5363ec5994c39048b1aa18e6ae6e35aa2a9", "patch": "@@ -0,0 +1,45 @@\n+-- { dg-do compile }\n+\n+procedure Entry_Queues2 is\n+\n+    F1 : Integer := 17;\n+\n+    generic\n+        type T is limited private;\n+    procedure Check;\n+\n+    procedure Check is\n+    begin\n+        declare\n+            type Poe is new T;\n+        begin\n+            declare\n+                type Arr is array (1 .. 2) of Poe;\n+                X : Arr;\n+                pragma Unreferenced (X);\n+            begin\n+                null;\n+            end;\n+        end;\n+    end;\n+\n+begin\n+\n+    declare\n+        protected type Poe (D3 : Integer := F1) is\n+            entry E (D3 .. F1);    -- F1 evaluated\n+        end Poe;\n+        protected body Poe is\n+            entry E (for I in D3 .. F1) when True is\n+            begin\n+                null;\n+            end E;\n+        end Poe;\n+\n+        procedure Chk is new Check (Poe);\n+\n+    begin\n+        Chk;\n+    end;\n+\n+end;"}]}