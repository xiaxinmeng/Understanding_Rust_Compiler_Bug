{"sha": "e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTgzOWUyYTkzMTFlY2ZhMmNmZDhlOWJjMGI2ZWViYTY1ZGE0ODQxOA==", "commit": {"author": {"name": "Andrey Belevantsev", "email": "abel@ispras.ru", "date": "2013-08-14T14:31:26Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2013-08-14T14:31:26Z"}, "message": "re PR rtl-optimization/57662 (ICE: SIGSEGV in code_motion_process_successors with -fschedule-insns2 -fselective-scheduling2)\n\nPR rtl-optimization/57662\n\ngcc/\n\t* sel-sched.c (code_motion_process_successors): When the current insn\n\tis removed after the recursive traversal, break from the loop.\n\tAdd comments and debug printouts.\n\ntestsuite/\n\n\t* gcc.dg/pr57662.c: New test.\n\nFrom-SVN: r201728", "tree": {"sha": "6797bfb33445b2da9e17d960737957cc6f4fdc6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6797bfb33445b2da9e17d960737957cc6f4fdc6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418/comments", "author": {"login": "abonzo", "id": 20396542, "node_id": "MDQ6VXNlcjIwMzk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/20396542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonzo", "html_url": "https://github.com/abonzo", "followers_url": "https://api.github.com/users/abonzo/followers", "following_url": "https://api.github.com/users/abonzo/following{/other_user}", "gists_url": "https://api.github.com/users/abonzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonzo/subscriptions", "organizations_url": "https://api.github.com/users/abonzo/orgs", "repos_url": "https://api.github.com/users/abonzo/repos", "events_url": "https://api.github.com/users/abonzo/events{/privacy}", "received_events_url": "https://api.github.com/users/abonzo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aec9ba36b142026cae3b194840c41d9ba7b5c8f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aec9ba36b142026cae3b194840c41d9ba7b5c8f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aec9ba36b142026cae3b194840c41d9ba7b5c8f4"}], "stats": {"total": 74, "additions": 73, "deletions": 1}, "files": [{"sha": "576a7d16ab46fafba9f25edd314bbbeccade6703", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418", "patch": "@@ -1,3 +1,10 @@\n+2013-08-14  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR rtl-optimization/57662\n+\t* sel-sched.c (code_motion_process_successors): When the current insn\n+\tis removed after the recursive traversal, break from the loop.\n+\tAdd comments and debug printouts.\n+\n 2013-08-14  Jakub Jelinek  <jakub@redhat.com>\n \t    Alexandre Oliva  <aoliva@redhat.com>\n "}, {"sha": "46c66b4f3ed3c678c9108e2cd15341cd012fa5fd", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418", "patch": "@@ -6424,10 +6424,23 @@ code_motion_process_successors (insn_t insn, av_set_t orig_ops,\n         res = b;\n \n       /* We have simplified the control flow below this point.  In this case,\n-         the iterator becomes invalid.  We need to try again.  */\n+         the iterator becomes invalid.  We need to try again.\n+\t If we have removed the insn itself, it could be only an\n+\t unconditional jump.  Thus, do not rescan but break immediately --\n+\t we have already visited the only successor block.  */\n+      if (!BLOCK_FOR_INSN (insn))\n+\t{\n+\t  if (sched_verbose >= 6)\n+\t    sel_print (\"Not doing rescan: already visited the only successor\"\n+\t\t       \" of block %d\\n\", old_index);\n+\t  break;\n+\t}\n       if (BLOCK_FOR_INSN (insn)->index != old_index\n           || EDGE_COUNT (bb->succs) != old_succs)\n         {\n+\t  if (sched_verbose >= 6)\n+\t    sel_print (\"Rescan: CFG was simplified below insn %d, block %d\\n\",\n+\t\t       INSN_UID (insn), BLOCK_FOR_INSN (insn)->index);\n           insn = sel_bb_end (BLOCK_FOR_INSN (insn));\n           goto rescan;\n         }"}, {"sha": "7c4c070320df77c21a8d4df8597016a3fc20bdef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418", "patch": "@@ -1,3 +1,8 @@\n+2013-08-14  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR rtl-optimization/57662\n+\t* gcc.dg/pr57662.c: New test.\n+\n 2013-08-13  Maciej W. Rozycki  <macro@codesourcery.com>\n \n \t* gcc.target/mips/nan-legacy.c: Accept 4294967295 as an"}, {"sha": "7af845532b8b00a3899ae0ec9fe85a2bae810234", "filename": "gcc/testsuite/gcc.dg/pr57662.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57662.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57662.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr57662.c?ref=e839e2a9311ecfa2cfd8e9bc0b6eeba65da48418", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } } */\n+/* { dg-options \" -O -fno-guess-branch-probability -fpeel-loops -freorder-blocks-and-partition -fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2 -ftree-pre\" } */\n+\n+struct intC\n+{\n+  short x;\n+  short y;\n+};\n+\n+void Get(void);\n+\n+int size_x;\n+\n+struct\n+{\n+  int *depot_table;\n+  struct intC *ti;\n+  int size;\n+} dummy;\n+\n+static inline int\n+GetRotatedTileFromOffset (int *a, struct intC tidc)\n+{\n+  if (!*a)\n+    Get ();\n+  switch (*a)\n+    {\n+    case 0:\n+      return (tidc.y << size_x) + tidc.x;\n+    case 1:\n+      return tidc.y + (dummy.size - tidc.x) * size_x;\n+    case 2:\n+      return tidc.x + (dummy.size - tidc.y) * size_x;\n+    case 3:\n+      return (dummy.size - tidc.x);\n+    }\n+  return 0;\n+}\n+\n+int\n+GetHangarNum (int *a, int i)\n+{\n+  while (dummy.size)\n+    if (GetRotatedTileFromOffset (a, dummy.ti[i]))\n+      return *dummy.depot_table;\n+  return 0;\n+}"}]}