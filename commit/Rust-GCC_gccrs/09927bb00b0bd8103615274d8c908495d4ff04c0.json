{"sha": "09927bb00b0bd8103615274d8c908495d4ff04c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk5MjdiYjAwYjBiZDgxMDM2MTUyNzRkOGM5MDg0OTVkNGZmMDRjMA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-07-23T19:43:08Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-07-23T19:43:08Z"}, "message": "entered into RCS\n\nFrom-SVN: r1675", "tree": {"sha": "5d18e9719f3b1c83eb7cc4fcfbe39f5b4f0a0289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d18e9719f3b1c83eb7cc4fcfbe39f5b4f0a0289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09927bb00b0bd8103615274d8c908495d4ff04c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09927bb00b0bd8103615274d8c908495d4ff04c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09927bb00b0bd8103615274d8c908495d4ff04c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09927bb00b0bd8103615274d8c908495d4ff04c0/comments", "author": null, "committer": null, "parents": [{"sha": "110de73f7bf271d2f70cf5ce6c517bcccb02df70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/110de73f7bf271d2f70cf5ce6c517bcccb02df70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/110de73f7bf271d2f70cf5ce6c517bcccb02df70"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "58d01cd52e7da968c641c2e7a4ceb04a7b0a85b2", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 48, "deletions": 6, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09927bb00b0bd8103615274d8c908495d4ff04c0/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09927bb00b0bd8103615274d8c908495d4ff04c0/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=09927bb00b0bd8103615274d8c908495d4ff04c0", "patch": "@@ -3729,16 +3729,37 @@ parse_stabs_common (string_start, string_end, rest)\n       else\n \t{\n \t  SYMR *sym_ptr;\n-\t  shash_t *shash_ptr = hash_string (p,\n-\t\t\t\t\t    strlen (p) - 1,\n-\t\t\t\t\t    &orig_str_hash[0],\n-\t\t\t\t\t    (symint_t *)0);\n+\t  shash_t *shash_ptr;\n+\t  const char *start, *end_p1;\n+\n+\t  start = p;\n+\t  if ((end_p1 = strchr (start, '+')) == (char *)0)\n+\t    {\n+\t      if ((end_p1 = strchr (start, '-')) == (char *)0)\n+\t\tend_p1 = start + strlen(start) - 1;\n+\t    }\n+\n+\t  shash_ptr = hash_string (start,\n+\t\t\t\t   end_p1 - start,\n+\t\t\t\t   &orig_str_hash[0],\n+\t\t\t\t   (symint_t *)0);\n \n \t  if (shash_ptr == (shash_t *)0\n \t      || (sym_ptr = shash_ptr->sym_ptr) == (SYMR *)0)\n \t    {\n-\t      error (\"Illegal .stabs/.stabn directive, value not found\");\n-\t      return;\n+\t      shash_ptr = hash_string (start,\n+\t\t\t\t       end_p1 - start,\n+\t\t\t\t       &ext_str_hash[0],\n+\t\t\t\t       (symint_t *)0);\n+\n+\t      if (shash_ptr == (shash_t *)0\n+\t\t  || shash_ptr->esym_ptr == (EXTR *)0)\n+\t\t{\n+\t\t  error (\"Illegal .stabs/.stabn directive, value not found\");\n+\t\t  return;\n+\t\t}\n+\t      else\n+\t\tsym_ptr = &(shash_ptr->esym_ptr->asym);\n \t    }\n \n \t  /* Traditionally, N_LBRAC and N_RBRAC are *not* relocated. */\n@@ -3753,6 +3774,27 @@ parse_stabs_common (string_start, string_end, rest)\n \t      st = (st_t) sym_ptr->st;\n \t    }\n \t  value = sym_ptr->value;\n+\n+\t  ch = *end_p1++;\n+\t  if (ch != '\\n')\n+\t    {\n+\t      if (((!isdigit (*end_p1)) && (*end_p1 != '-'))\n+\t\t  || ((ch != '+') && (ch != '-')))\n+\t\t{\n+\t\t  error (\"Illegal .stabs/.stabn directive, badly formed value\");\n+\t\t  return;\n+\t\t}\n+\t      if (ch == '+')\n+\t\tvalue += strtol (end_p1, &p, 0);\n+\t      else if (ch == '-')\n+\t\tvalue -= strtol (end_p1, &p, 0);\n+\n+\t      if (*p != '\\n')\n+\t\t{\n+\t\t  error (\"Illegal .stabs/.stabn directive, stuff after numeric value\");\n+\t\t  return;\n+\t\t}\n+\t    }\n \t}\n       code = MIPS_MARK_STAB(code);\n     }"}]}