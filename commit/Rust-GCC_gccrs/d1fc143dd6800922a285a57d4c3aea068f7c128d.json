{"sha": "d1fc143dd6800922a285a57d4c3aea068f7c128d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFmYzE0M2RkNjgwMDkyMmEyODVhNTdkNGMzYWVhMDY4ZjdjMTI4ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-10-06T06:58:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-10-06T06:58:21Z"}, "message": "tree-vect-patterns.c (vect_pattern_recog_1): Add stmts_to_replace argument...\n\n\t* tree-vect-patterns.c (vect_pattern_recog_1): Add stmts_to_replace\n\targument, truncate it at the beginning instead of allocating there\n\tand freeing at the end.\n\t(vect_pattern_recog): Allocate stmts_to_replace here and free at end,\n\tpass its address to vect_pattern_recog_1.\n\nFrom-SVN: r179592", "tree": {"sha": "b504669632d701e02d71a41d733c9cc3d03e7af4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b504669632d701e02d71a41d733c9cc3d03e7af4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1fc143dd6800922a285a57d4c3aea068f7c128d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1fc143dd6800922a285a57d4c3aea068f7c128d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1fc143dd6800922a285a57d4c3aea068f7c128d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1fc143dd6800922a285a57d4c3aea068f7c128d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc78280f80f8a49dc3a4abf6b09ad5f976893f62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc78280f80f8a49dc3a4abf6b09ad5f976893f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc78280f80f8a49dc3a4abf6b09ad5f976893f62"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "4e459f40a8ff67a97f080a419eb334443abd7c21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1fc143dd6800922a285a57d4c3aea068f7c128d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1fc143dd6800922a285a57d4c3aea068f7c128d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1fc143dd6800922a285a57d4c3aea068f7c128d", "patch": "@@ -1,3 +1,11 @@\n+2011-10-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-vect-patterns.c (vect_pattern_recog_1): Add stmts_to_replace\n+\targument, truncate it at the beginning instead of allocating there\n+\tand freeing at the end.\n+\t(vect_pattern_recog): Allocate stmts_to_replace here and free at end,\n+\tpass its address to vect_pattern_recog_1.\n+\n 2011-10-05  David S. Miller  <davem@davemloft.net>\n \n \t* config/sparc/sparc.opt (POPC): New option."}, {"sha": "5ed60b79552ad0083d6502dd0898052133fc9684", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1fc143dd6800922a285a57d4c3aea068f7c128d/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1fc143dd6800922a285a57d4c3aea068f7c128d/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=d1fc143dd6800922a285a57d4c3aea068f7c128d", "patch": "@@ -1281,7 +1281,8 @@ vect_mark_pattern_stmts (gimple orig_stmt, gimple pattern_stmt,\n static void\n vect_pattern_recog_1 (\n \tgimple (* vect_recog_func) (VEC (gimple, heap) **, tree *, tree *),\n-\tgimple_stmt_iterator si)\n+\tgimple_stmt_iterator si,\n+\tVEC (gimple, heap) **stmts_to_replace)\n {\n   gimple stmt = gsi_stmt (si), pattern_stmt;\n   stmt_vec_info stmt_info;\n@@ -1291,14 +1292,14 @@ vect_pattern_recog_1 (\n   enum tree_code code;\n   int i;\n   gimple next;\n-  VEC (gimple, heap) *stmts_to_replace = VEC_alloc (gimple, heap, 1);\n \n-  VEC_quick_push (gimple, stmts_to_replace, stmt);\n-  pattern_stmt = (* vect_recog_func) (&stmts_to_replace, &type_in, &type_out);\n+  VEC_truncate (gimple, *stmts_to_replace, 0);\n+  VEC_quick_push (gimple, *stmts_to_replace, stmt);\n+  pattern_stmt = (* vect_recog_func) (stmts_to_replace, &type_in, &type_out);\n   if (!pattern_stmt)\n     return;\n \n-  stmt = VEC_last (gimple, stmts_to_replace);\n+  stmt = VEC_last (gimple, *stmts_to_replace);\n   stmt_info = vinfo_for_stmt (stmt);\n   loop_vinfo = STMT_VINFO_LOOP_VINFO (stmt_info);\n  \n@@ -1363,8 +1364,8 @@ vect_pattern_recog_1 (\n   /* It is possible that additional pattern stmts are created and inserted in\n      STMTS_TO_REPLACE.  We create a stmt_info for each of them, and mark the\n      relevant statements.  */\n-  for (i = 0; VEC_iterate (gimple, stmts_to_replace, i, stmt)\n-              && (unsigned) i < (VEC_length (gimple, stmts_to_replace) - 1);\n+  for (i = 0; VEC_iterate (gimple, *stmts_to_replace, i, stmt)\n+\t      && (unsigned) i < (VEC_length (gimple, *stmts_to_replace) - 1);\n        i++)\n     {\n       stmt_info = vinfo_for_stmt (stmt);\n@@ -1377,8 +1378,6 @@ vect_pattern_recog_1 (\n \n       vect_mark_pattern_stmts (stmt, pattern_stmt, NULL_TREE);\n     }\n-\n-  VEC_free (gimple, heap, stmts_to_replace);\n }\n \n \n@@ -1468,6 +1467,7 @@ vect_pattern_recog (loop_vec_info loop_vinfo)\n   gimple_stmt_iterator si;\n   unsigned int i, j;\n   gimple (* vect_recog_func_ptr) (VEC (gimple, heap) **, tree *, tree *);\n+  VEC (gimple, heap) *stmts_to_replace = VEC_alloc (gimple, heap, 1);\n \n   if (vect_print_dump_info (REPORT_DETAILS))\n     fprintf (vect_dump, \"=== vect_pattern_recog ===\");\n@@ -1483,8 +1483,11 @@ vect_pattern_recog (loop_vec_info loop_vinfo)\n           for (j = 0; j < NUM_PATTERNS; j++)\n             {\n               vect_recog_func_ptr = vect_vect_recog_func_ptrs[j];\n-              vect_pattern_recog_1 (vect_recog_func_ptr, si);\n+\t      vect_pattern_recog_1 (vect_recog_func_ptr, si,\n+\t\t\t\t    &stmts_to_replace);\n             }\n         }\n     }\n+\n+  VEC_free (gimple, heap, stmts_to_replace);\n }"}]}