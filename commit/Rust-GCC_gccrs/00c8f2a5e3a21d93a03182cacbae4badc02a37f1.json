{"sha": "00c8f2a5e3a21d93a03182cacbae4badc02a37f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBjOGYyYTVlM2EyMWQ5M2EwMzE4MmNhY2JhZTRiYWRjMDJhMzdmMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-05-23T08:00:16Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-05-23T08:40:16Z"}, "message": "libstdc++: Remove incorrect static specifiers\n\nThese functions were originally static members of the path class, but\nthe 'static' specifiers were not removed when they were moved to\nnamespace scope. This causes ODR violations when the functions are\ncalled from functions defined in the header, which is incompatible with\nNathan's modules branch.  Change them to 'inline' instead.\n\n\t* include/bits/fs_path.h (__detail::_S_range_begin)\n\t(__detail::_S_range_end): Remove unintentional static specifiers.\n\t* include/experimental/bits/fs_path.h (__detail::_S_range_begin)\n\t(__detail::_S_range_end): Likewise.", "tree": {"sha": "1170ab3f56443d41d55df17e89788015689a2244", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1170ab3f56443d41d55df17e89788015689a2244"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00c8f2a5e3a21d93a03182cacbae4badc02a37f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c8f2a5e3a21d93a03182cacbae4badc02a37f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c8f2a5e3a21d93a03182cacbae4badc02a37f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c8f2a5e3a21d93a03182cacbae4badc02a37f1/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "988b853f9c829742907ae22ac66de56facfc7bc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/988b853f9c829742907ae22ac66de56facfc7bc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/988b853f9c829742907ae22ac66de56facfc7bc5"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "af52f143be82cf53c378715fa6489d984469c06a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c8f2a5e3a21d93a03182cacbae4badc02a37f1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c8f2a5e3a21d93a03182cacbae4badc02a37f1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=00c8f2a5e3a21d93a03182cacbae4badc02a37f1", "patch": "@@ -1,5 +1,10 @@\n 2020-05-23  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/fs_path.h (__detail::_S_range_begin)\n+\t(__detail::_S_range_end): Remove unintentional static specifiers.\n+\t* include/experimental/bits/fs_path.h (__detail::_S_range_begin)\n+\t(__detail::_S_range_end): Likewise.\n+\n \t* include/bits/fs_path.h (filesystem::__detail::__is_encoded_char):\n \tReplace alias template with variable template. Don't remove const.\n \t(filesystem::__detail::__is_path_src): Replace overloaded function"}, {"sha": "818b5918927220bda6203f8dabf299b0ca360f06", "filename": "libstdc++-v3/include/bits/fs_path.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c8f2a5e3a21d93a03182cacbae4badc02a37f1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c8f2a5e3a21d93a03182cacbae4badc02a37f1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h?ref=00c8f2a5e3a21d93a03182cacbae4badc02a37f1", "patch": "@@ -156,32 +156,32 @@ namespace __detail\n     using _Path2 = enable_if_t<__is_path_iter_src<_Tr>::value, path>;\n \n   template<typename _Source>\n-    static _Source\n+    _Source\n     _S_range_begin(_Source __begin) { return __begin; }\n \n   struct __null_terminated { };\n \n   template<typename _Source>\n-    static __null_terminated\n+    __null_terminated\n     _S_range_end(_Source) { return {}; }\n \n   template<typename _CharT, typename _Traits, typename _Alloc>\n-    static const _CharT*\n+    inline const _CharT*\n     _S_range_begin(const basic_string<_CharT, _Traits, _Alloc>& __str)\n     { return __str.data(); }\n \n   template<typename _CharT, typename _Traits, typename _Alloc>\n-    static const _CharT*\n+    inline const _CharT*\n     _S_range_end(const basic_string<_CharT, _Traits, _Alloc>& __str)\n     { return __str.data() + __str.size(); }\n \n   template<typename _CharT, typename _Traits>\n-    static const _CharT*\n+    inline const _CharT*\n     _S_range_begin(const basic_string_view<_CharT, _Traits>& __str)\n     { return __str.data(); }\n \n   template<typename _CharT, typename _Traits>\n-    static const _CharT*\n+    inline const _CharT*\n     _S_range_end(const basic_string_view<_CharT, _Traits>& __str)\n     { return __str.data() + __str.size(); }\n "}, {"sha": "69b823a34666dc9435abab36537775eb9715f5da", "filename": "libstdc++-v3/include/experimental/bits/fs_path.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c8f2a5e3a21d93a03182cacbae4badc02a37f1/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c8f2a5e3a21d93a03182cacbae4badc02a37f1/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h?ref=00c8f2a5e3a21d93a03182cacbae4badc02a37f1", "patch": "@@ -137,33 +137,33 @@ namespace __detail\n \t\t     path>::type;\n \n   template<typename _Source>\n-    static _Source\n+    inline _Source\n     _S_range_begin(_Source __begin) { return __begin; }\n \n   struct __null_terminated { };\n \n   template<typename _Source>\n-    static __null_terminated\n+    inline __null_terminated\n     _S_range_end(_Source) { return {}; }\n \n   template<typename _CharT, typename _Traits, typename _Alloc>\n-    static const _CharT*\n+    inline const _CharT*\n     _S_range_begin(const basic_string<_CharT, _Traits, _Alloc>& __str)\n     { return __str.data(); }\n \n   template<typename _CharT, typename _Traits, typename _Alloc>\n-    static const _CharT*\n+    inline const _CharT*\n     _S_range_end(const basic_string<_CharT, _Traits, _Alloc>& __str)\n     { return __str.data() + __str.size(); }\n \n #if __cplusplus >= 201402L\n   template<typename _CharT, typename _Traits>\n-    static const _CharT*\n+    inline const _CharT*\n     _S_range_begin(const basic_string_view<_CharT, _Traits>& __str)\n     { return __str.data(); }\n \n   template<typename _CharT, typename _Traits>\n-    static const _CharT*\n+    inline const _CharT*\n     _S_range_end(const basic_string_view<_CharT, _Traits>& __str)\n     { return __str.data() + __str.size(); }\n #endif"}]}