{"sha": "aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEwZGZhN2U0ZTFmMWMzNmIyMmRkYzMwMTYyYmYyNTY4ZTUxNjMzYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-08T07:59:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-08T07:59:55Z"}, "message": "[multiple changes]\n\n2013-07-08  Gary Dismukes  <dismukes@adacore.com>\n\n\t* freeze.adb: Minor typo fixes.\n\n2013-07-08  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document SPARK_05 (replaces SPARK) Document\n\tobsolete recognition of SPARK Document all other obsolete synonyms\n\tfor old restrictions.\n\t* restrict.adb (Check_SPARK_Restriction): SPARK_05 replaces\n\tSPARK (Process_Restriction_Synonyms): Handle SPARK as synonym\n\tfor SPARK_05.\n\t* restrict.ads: Restriction SPARK_05 replaces SPARK.\n\t* s-rident.ads: Replace restriction SPARK by SPARK_05 Add SPARK\n\tas synonym for SPARK_05.\n\t* sem_prag.adb: Minor reformatting.\n\t* snames.ads-tmpl: Add entries for Name_SPARK and Name_SPARK_05.\n\nFrom-SVN: r200763", "tree": {"sha": "40aba15e0eff5197ee547a88d9b4e93b5fa34349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40aba15e0eff5197ee547a88d9b4e93b5fa34349"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/comments", "author": null, "committer": null, "parents": [{"sha": "3d529af452fe7c618ab440f2cc1c07c445d6a72e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d529af452fe7c618ab440f2cc1c07c445d6a72e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d529af452fe7c618ab440f2cc1c07c445d6a72e"}], "stats": {"total": 124, "additions": 97, "deletions": 27}, "files": [{"sha": "65e59773a1ee67db731ed30a6358c671bf15d9d2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "patch": "@@ -1,3 +1,21 @@\n+2013-07-08  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* freeze.adb: Minor typo fixes.\n+\n+2013-07-08  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document SPARK_05 (replaces SPARK) Document\n+\tobsolete recognition of SPARK Document all other obsolete synonyms\n+\tfor old restrictions.\n+\t* restrict.adb (Check_SPARK_Restriction): SPARK_05 replaces\n+\tSPARK (Process_Restriction_Synonyms): Handle SPARK as synonym\n+\tfor SPARK_05.\n+\t* restrict.ads: Restriction SPARK_05 replaces SPARK.\n+\t* s-rident.ads: Replace restriction SPARK by SPARK_05 Add SPARK\n+\tas synonym for SPARK_05.\n+\t* sem_prag.adb: Minor reformatting.\n+\t* snames.ads-tmpl: Add entries for Name_SPARK and Name_SPARK_05.\n+\n 2013-07-08  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_dim.adb: Minor error message change."}, {"sha": "8a5b927c570c3024d254d2852b427e5b0a95016c", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "patch": "@@ -3415,15 +3415,16 @@ package body Freeze is\n             --  a size given for an array where the array needs to be packed,\n             --  but was not so the size cannot be honored. This is the case\n             --  where implicit packing may apply. The reason we do this so\n-            --  early is that if we have implicit packing, the lagout of the\n+            --  early is that if we have implicit packing, the layout of the\n             --  base type is affected, so we must do this before we freeze\n             --  the base type.\n \n             --  We could do this processing only if implicit packing is enabled\n             --  since in all other cases, the error would be caught by the back\n             --  end. However, we choose to do the check even if we do not have\n-            --  implicit packingh enabled, since this allows us to give a more\n-            --  useful error message (advising the use of pack or the pragma).\n+            --  implicit packing enabled, since this allows us to give a more\n+            --  useful error message (advising use of pragmas Implicit_Packing\n+            --  or Pack).\n \n             if Is_Array_Type (E) then\n                declare"}, {"sha": "b714e25899ac9cb646e98b13cb4a4f9aeaf560bd", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 41, "deletions": 5, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "patch": "@@ -454,7 +454,7 @@ Program Unit Level Restrictions\n * No_Implicit_Aliasing::\n * No_Obsolescent_Features::\n * No_Wide_Characters::\n-* SPARK::\n+* SPARK_05::\n \n The Implementation of Standard I/O\n \n@@ -8951,6 +8951,12 @@ Note that this restriction is checked at run time. Violation of this\n restriction results in the raising of Program_Error exception at the point of\n the call.\n \n+@findex Max_Entry_Queue_Depth\n+The restriction @code{Max_Entry_Queue_Depth} is recognized as a\n+synonym for @code{Max_Entry_Queue_Length}. This is retained for historical\n+compatibility purposes (and a warning will be generated for its use if\n+warnings on obsolescent features are activated).\n+\n @node Max_Protected_Entries\n @unnumberedsubsec Max_Protected_Entries\n @findex Max_Protected_Entries\n@@ -9137,6 +9143,12 @@ operations defined in package Ada.Interrupts\n (Is_Reserved, Is_Attached, Current_Handler, Attach_Handler, Exchange_Handler,\n Detach_Handler, and Reference).\n \n+@findex No_Dynamic_Interrupts\n+The restriction @code{No_Dynamic_Interrupts} is recognized as a\n+synonym for @code{No_Dynamic_Attachment}. This is retained for historical\n+compatibility purposes (and a warning will be generated for its use if\n+warnings on obsolescent features are activated).\n+\n @node No_Dynamic_Priorities\n @unnumberedsubsec No_Dynamic_Priorities\n @findex No_Dynamic_Priorities\n@@ -9378,6 +9390,12 @@ appearing in source code.\n are permitted and prevents keyword @code{requeue} from being used in source\n code.\n \n+@findex No_Requeue\n+The restriction @code{No_Requeue} is recognized as a\n+synonym for @code{No_Requeue_Statements}. This is retained for historical\n+compatibility purposes (and a warning will be generated for its use if\n+warnings on oNobsolescent features are activated).\n+\n @node No_Secondary_Stack\n @unnumberedsubsec No_Secondary_Stack\n @findex No_Secondary_Stack\n@@ -9459,6 +9477,12 @@ or types containing task subcomponents.\n [GNAT] This restriction ensures at compile time that there are no implicit or\n explicit dependencies on the package @code{Ada.Task_Attributes}.\n \n+@findex No_Task_Attributes\n+The restriction @code{No_Task_Attributes} is recognized as a synonym\n+for @code{No_Task_Attributes_Package}. This is retained for historical\n+compatibility purposes (and a warning will be generated for its use if\n+warnings on obsolescent features are activated).\n+\n @node No_Task_Hierarchy\n @unnumberedsubsec No_Task_Hierarchy\n @findex No_Task_Hierarchy\n@@ -9498,6 +9522,12 @@ declarations for protected types are restricted to either static boolean\n expressions or references to simple boolean variables defined in the private\n part of the protected type.  No other form of entry barriers is permitted.\n \n+@findex Boolean_Entry_Barriers\n+The restriction @code{Boolean_Entry_Barriers} is recognized as a\n+synonym for @code{Simple_Barriers}. This is retained for historical\n+compatibility purposes (and a warning will be generated for its use if\n+warnings on obsolescent features are activated).\n+\n @node Static_Priorities\n @unnumberedsubsec Static_Priorities\n @findex Static_Priorities\n@@ -9533,7 +9563,7 @@ other compilation units in the partition.\n * No_Implicit_Aliasing::\n * No_Obsolescent_Features::\n * No_Wide_Characters::\n-* SPARK::\n+* SPARK_05::\n @end menu\n \n @node No_Elaboration_Code\n@@ -9663,13 +9693,19 @@ appear, and that no wide or wide wide string or character literals\n appear in the program (that is literals representing characters not in\n type @code{Character}).\n \n-@node SPARK\n-@unnumberedsubsec SPARK\n-@findex SPARK\n+@node SPARK_05\n+@unnumberedsubsec SPARK_05\n+@findex SPARK_05\n [GNAT] This restriction checks at compile time that some constructs\n forbidden in SPARK 2005 are not present. Error messages related to\n SPARK restriction have the form:\n \n+@findex SPARK\n+The restriction @code{SPARK} is recognized as a\n+synonym for @code{SPARK_05}. This is retained for historical\n+compatibility purposes (and an unconditional warning will be generated\n+for its use, advising replacement by @code{SPARK}.\n+\n @smallexample\n violation of restriction \"SPARK\" at <file>\n  <error message>"}, {"sha": "7bd97b9516837756e0053bd55bc539a7c6bc1bb9", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "patch": "@@ -166,7 +166,7 @@ package body Restrict is\n    begin\n       if Force or else Comes_From_Source (Original_Node (N)) then\n \n-         if Restriction_Check_Required (SPARK)\n+         if Restriction_Check_Required (SPARK_05)\n            and then Is_In_Hidden_Part_In_SPARK (Sloc (N))\n          then\n             return;\n@@ -177,7 +177,7 @@ package body Restrict is\n          --  restore the previous value of the global variable around the call.\n \n          Save_Error_Msg_Sloc := Error_Msg_Sloc;\n-         Check_Restriction (Msg_Issued, SPARK, First_Node (N));\n+         Check_Restriction (Msg_Issued, SPARK_05, First_Node (N));\n          Error_Msg_Sloc := Save_Error_Msg_Sloc;\n \n          if Msg_Issued then\n@@ -194,7 +194,7 @@ package body Restrict is\n \n       if Comes_From_Source (Original_Node (N)) then\n \n-         if Restriction_Check_Required (SPARK)\n+         if Restriction_Check_Required (SPARK_05)\n            and then Is_In_Hidden_Part_In_SPARK (Sloc (N))\n          then\n             return;\n@@ -205,7 +205,7 @@ package body Restrict is\n          --  restore the previous value of the global variable around the call.\n \n          Save_Error_Msg_Sloc := Error_Msg_Sloc;\n-         Check_Restriction (Msg_Issued, SPARK, First_Node (N));\n+         Check_Restriction (Msg_Issued, SPARK_05, First_Node (N));\n          Error_Msg_Sloc := Save_Error_Msg_Sloc;\n \n          if Msg_Issued then\n@@ -880,10 +880,22 @@ package body Restrict is\n          when Name_No_Task_Attributes =>\n             New_Name := Name_No_Task_Attributes_Package;\n \n+         --  SPARK is special in that we unconditionally warn\n+\n+         when Name_SPARK =>\n+            Error_Msg_Name_1 := Name_SPARK;\n+            Error_Msg_N (\"restriction identifier % is obsolescent??\", N);\n+            Error_Msg_Name_1 := Name_SPARK_05;\n+            Error_Msg_N (\"|use restriction identifier % instead??\", N);\n+            return Name_SPARK_05;\n+\n          when others =>\n             return Old_Name;\n       end case;\n \n+      --  Output warning if we are warning on obsolescent features for all\n+      --  cases other than SPARK.\n+\n       if Warn_On_Obsolescent_Feature then\n          Error_Msg_Name_1 := Old_Name;\n          Error_Msg_N (\"restriction identifier % is obsolescent?j?\", N);\n@@ -983,10 +995,10 @@ package body Restrict is\n \n       procedure Id_Case (S : String; Quotes : Boolean := True);\n       --  Given a string S, case it according to current identifier casing,\n-      --  except for SPARK (an acronym) which is set all upper case, and store\n-      --  in Error_Msg_String. Then append `~` to the message buffer to output\n-      --  the string unchanged surrounded in quotes. The quotes are suppressed\n-      --  if Quotes = False.\n+      --  except for SPARK_05 (an acronym) which is set all upper case, and\n+      --  store in Error_Msg_String. Then append `~` to the message buffer\n+      --  to output the string unchanged surrounded in quotes. The quotes\n+      --  are suppressed if Quotes = False.\n \n       --------------\n       -- Add_Char --\n@@ -1017,7 +1029,7 @@ package body Restrict is\n          Name_Buffer (1 .. S'Last) := S;\n          Name_Len := S'Length;\n \n-         if R = SPARK then\n+         if R = SPARK_05 then\n             Set_All_Upper_Case;\n          else\n             Set_Casing (Identifier_Casing (Get_Source_File_Index (Sloc (N))));"}, {"sha": "9c4b3b4dd339ece8ec37aff472eb11f28406933d", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "patch": "@@ -142,7 +142,7 @@ package Restrict is\n       No_Wide_Characters                 => True,\n       Static_Priorities                  => True,\n       Static_Storage_Size                => True,\n-      SPARK                              => True,\n+      SPARK_05                           => True,\n       others                             => False);\n \n    --  The following table records entries made by Restrictions pragmas\n@@ -180,7 +180,7 @@ package Restrict is\n    -- SPARK Restriction Control --\n    -------------------------------\n \n-   --  SPARK HIDE directives allow the effect of the SPARK restriction to be\n+   --  SPARK HIDE directives allow the effect of the SPARK_05 restriction to be\n    --  turned off for a specified region of code, and the following tables are\n    --  the data structures used to keep track of these regions.\n \n@@ -282,10 +282,10 @@ package Restrict is\n      (Msg   : String;\n       N     : Node_Id;\n       Force : Boolean := False);\n-   --  Node N represents a construct not allowed in formal mode. If this is a\n-   --  source node, or if the restriction is forced (Force = True), and the\n-   --  SPARK restriction is set, then an error is issued on N. Msg is appended\n-   --  to the restriction failure message.\n+   --  Node N represents a construct not allowed in formal mode. If this is\n+   --  a source node, or if the restriction is forced (Force = True), and\n+   --  the SPARK_05 restriction is set, then an error is issued on N. Msg\n+   --  is appended to the restriction failure message.\n \n    procedure Check_SPARK_Restriction (Msg1, Msg2 : String; N : Node_Id);\n    --  Same as Check_SPARK_Restriction except there is a continuation message"}, {"sha": "2fb2941811f374f182c4eee824df143677e7c543", "filename": "gcc/ada/s-rident.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Fs-rident.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Fs-rident.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-rident.ads?ref=aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "patch": "@@ -175,7 +175,7 @@ package System.Rident is\n       No_Elaboration_Code,                       -- GNAT\n       No_Obsolescent_Features,                   -- Ada 2005 AI-368\n       No_Wide_Characters,                        -- GNAT\n-      SPARK,                                     -- GNAT\n+      SPARK_05,                                  -- GNAT\n \n       --  The following cases require a parameter value\n \n@@ -223,13 +223,14 @@ package System.Rident is\n    No_Dynamic_Interrupts  : Restriction_Id renames No_Dynamic_Attachment;\n    No_Requeue             : Restriction_Id renames No_Requeue_Statements;\n    No_Task_Attributes     : Restriction_Id renames No_Task_Attributes_Package;\n+   SPARK                  : Restriction_Id renames SPARK_05;\n \n    subtype All_Restrictions is Restriction_Id range\n      Simple_Barriers .. Max_Storage_At_Blocking;\n    --  All restrictions (excluding only Not_A_Restriction_Id)\n \n    subtype All_Boolean_Restrictions is Restriction_Id range\n-     Simple_Barriers .. SPARK;\n+     Simple_Barriers .. SPARK_05;\n    --  All restrictions which do not take a parameter\n \n    subtype Partition_Boolean_Restrictions is All_Boolean_Restrictions range\n@@ -240,7 +241,7 @@ package System.Rident is\n    --  case of Boolean restrictions.\n \n    subtype Cunit_Boolean_Restrictions is All_Boolean_Restrictions range\n-     Immediate_Reclamation .. SPARK;\n+     Immediate_Reclamation .. SPARK_05;\n    --  Boolean restrictions that are not checked for partition consistency\n    --  and that thus apply only to the current unit. Note that for these\n    --  restrictions, the compiler does not apply restrictions found in"}, {"sha": "7c929a4440879dc1450c9168f702572a391b1b4f", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "patch": "@@ -7016,7 +7016,7 @@ package body Sem_Prag is\n       --  Start of processing for Process_Restrictions_Or_Restriction_Warnings\n \n       begin\n-         --  Ignore all Restrictions pragma in CodePeer mode\n+         --  Ignore all Restrictions pragmas in CodePeer mode\n \n          if CodePeer_Mode then\n             return;"}, {"sha": "2f8057698e552a87388f9e001974844587c29fa1", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=aa0dfa7e4e1f1c36b22ddc30162bf2568e51633a", "patch": "@@ -762,6 +762,8 @@ package Snames is\n    Name_Semaphore                      : constant Name_Id := N + $;\n    Name_Short_Descriptor               : constant Name_Id := N + $;\n    Name_Simple_Barriers                : constant Name_Id := N + $;\n+   Name_SPARK                          : constant Name_Id := N + $;\n+   Name_SPARK_05                       : constant Name_Id := N + $;\n    Name_Spec_File_Name                 : constant Name_Id := N + $;\n    Name_State                          : constant Name_Id := N + $;\n    Name_Statement_Assertions           : constant Name_Id := N + $;"}]}