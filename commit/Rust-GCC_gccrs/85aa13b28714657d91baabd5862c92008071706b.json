{"sha": "85aa13b28714657d91baabd5862c92008071706b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVhYTEzYjI4NzE0NjU3ZDkxYmFhYmQ1ODYyYzkyMDA4MDcxNzA2Yg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-08T16:28:30Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-08T16:28:30Z"}, "message": "Connection.java, [...]: Moved to gnu/java/net/protocol.\n\n2003-10-08  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/gcj/protocol/core/Connection.java,\n\tgnu/gcj/protocol/core/CoreInputStream.java,\n\tgnu/gcj/protocol/core/Handler.java,\n\tgnu/gcj/protocol/core/natCoreInputStream.cc,\n\tgnu/gcj/protocol/file/Connection.java,\n\tgnu/gcj/protocol/file/Handler.java,\n\tgnu/gcj/protocol/gcjlib/Connection.java,\n\tgnu/gcj/protocol/gcjlib/Handler.java,\n\tgnu/gcj/protocol/http/Connection.java,\n\tgnu/gcj/protocol/http/Handler.java,\n\tgnu/gcj/protocol/jar/Connection.java,\n\tgnu/gcj/protocol/jar/Handler.java: Moved to gnu/java/net/protocol.\n\t* gnu/java/net/protocol/core/Connection.java,\n\tgnu/java/net/protocol/core/CoreInputStream.java,\n\tgnu/java/net/protocol/core/Handler.java,\n\tgnu/java/net/protocol/core/natCoreInputStream.cc,\n\tgnu/java/net/protocol/file/Connection.java,\n\tgnu/java/net/protocol/file/Handler.java,\n\tgnu/java/net/protocol/gcjlib/Connection.java,\n\tgnu/java/net/protocol/gcjlib/Handler.java,\n\tgnu/java/net/protocol/http/Connection.java,\n\tgnu/java/net/protocol/http/Handler.java,\n\tgnu/java/net/protocol/jar/Connection.java,\n\tgnu/java/net/protocol/jar/Handler.java: Moved from gnu/gcj/protocol.\n\t* gnu/gcj/runtime/FirstThread.java,\n\tjava/net/URL.java: Use moved protocol handlers.\n\t* Makefile.am\n\t(ordinary_java_source_files): Moved files.\n\t(nat_source_files): Likewise.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r72233", "tree": {"sha": "29235379269c11d708bb5904e53492149194f733", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29235379269c11d708bb5904e53492149194f733"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85aa13b28714657d91baabd5862c92008071706b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85aa13b28714657d91baabd5862c92008071706b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85aa13b28714657d91baabd5862c92008071706b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85aa13b28714657d91baabd5862c92008071706b/comments", "author": null, "committer": null, "parents": [{"sha": "36805693cb85727570568498fef1714f802891ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36805693cb85727570568498fef1714f802891ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36805693cb85727570568498fef1714f802891ee"}], "stats": {"total": 342, "additions": 199, "deletions": 143}, "files": [{"sha": "2812d333f2f1fc4d1621f65f349a47136eae7c36", "filename": "libjava/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -1,3 +1,36 @@\n+2003-10-08  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/gcj/protocol/core/Connection.java,\n+\tgnu/gcj/protocol/core/CoreInputStream.java,\n+\tgnu/gcj/protocol/core/Handler.java,\n+\tgnu/gcj/protocol/core/natCoreInputStream.cc,\n+\tgnu/gcj/protocol/file/Connection.java,\n+\tgnu/gcj/protocol/file/Handler.java,\n+\tgnu/gcj/protocol/gcjlib/Connection.java,\n+\tgnu/gcj/protocol/gcjlib/Handler.java,\n+\tgnu/gcj/protocol/http/Connection.java,\n+\tgnu/gcj/protocol/http/Handler.java,\n+\tgnu/gcj/protocol/jar/Connection.java,\n+\tgnu/gcj/protocol/jar/Handler.java: Moved to gnu/java/net/protocol.\n+\t* gnu/java/net/protocol/core/Connection.java,\n+\tgnu/java/net/protocol/core/CoreInputStream.java,\n+\tgnu/java/net/protocol/core/Handler.java,\n+\tgnu/java/net/protocol/core/natCoreInputStream.cc,\n+\tgnu/java/net/protocol/file/Connection.java,\n+\tgnu/java/net/protocol/file/Handler.java,\n+\tgnu/java/net/protocol/gcjlib/Connection.java,\n+\tgnu/java/net/protocol/gcjlib/Handler.java,\n+\tgnu/java/net/protocol/http/Connection.java,\n+\tgnu/java/net/protocol/http/Handler.java,\n+\tgnu/java/net/protocol/jar/Connection.java,\n+\tgnu/java/net/protocol/jar/Handler.java: Moved from gnu/gcj/protocol.\n+\t* gnu/gcj/runtime/FirstThread.java,\n+\tjava/net/URL.java: Use moved protocol handlers.\n+\t* Makefile.am\n+\t(ordinary_java_source_files): Moved files.\n+\t(nat_source_files): Likewise.\n+\t* Makefile.in: Regenerated.\n+\n 2003-10-08  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/nio/SocketChannelImpl.java"}, {"sha": "8160ec416b2fdd007fec1fe90a501db1e711c40b", "filename": "libjava/Makefile.am", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -2009,17 +2009,6 @@ gnu/gcj/RawData.java \\\n gnu/gcj/io/DefaultMimeTypes.java \\\n gnu/gcj/io/MimeTypes.java \\\n gnu/gcj/io/SimpleSHSStream.java\t\\\n-gnu/gcj/protocol/core/Connection.java \\\n-gnu/gcj/protocol/core/Handler.java \\\n-gnu/gcj/protocol/core/CoreInputStream.java \\\n-gnu/gcj/protocol/file/Connection.java \\\n-gnu/gcj/protocol/file/Handler.java \\\n-gnu/gcj/protocol/http/Connection.java \\\n-gnu/gcj/protocol/http/Handler.java \\\n-gnu/gcj/protocol/jar/Connection.java \\\n-gnu/gcj/protocol/jar/Handler.java \\\n-gnu/gcj/protocol/gcjlib/Connection.java \\\n-gnu/gcj/protocol/gcjlib/Handler.java \\\n gnu/gcj/runtime/FileDeleter.java \\\n gnu/gcj/runtime/FinalizerThread.java \\\n gnu/gcj/runtime/FirstThread.java \\\n@@ -2182,6 +2171,17 @@ gnu/java/locale/LocaleInformation_zh_TW.java \\\n gnu/java/math/MPN.java \\\n gnu/java/net/PlainDatagramSocketImpl.java \\\n gnu/java/net/PlainSocketImpl.java \\\n+gnu/java/net/protocol/core/Connection.java \\\n+gnu/java/net/protocol/core/Handler.java \\\n+gnu/java/net/protocol/core/CoreInputStream.java \\\n+gnu/java/net/protocol/file/Connection.java \\\n+gnu/java/net/protocol/file/Handler.java \\\n+gnu/java/net/protocol/http/Connection.java \\\n+gnu/java/net/protocol/http/Handler.java \\\n+gnu/java/net/protocol/jar/Connection.java \\\n+gnu/java/net/protocol/jar/Handler.java \\\n+gnu/java/net/protocol/gcjlib/Connection.java \\\n+gnu/java/net/protocol/gcjlib/Handler.java \\\n gnu/java/nio/DatagramChannelImpl.java \\\n gnu/java/nio/DatagramChannelSelectionKey.java \\\n gnu/java/nio/FileLockImpl.java \\\n@@ -2645,7 +2645,6 @@ gnu/gcj/convert/natOutput_EUCJIS.cc \\\n gnu/gcj/convert/natOutput_SJIS.cc \\\n gnu/gcj/io/natSimpleSHSStream.cc \\\n gnu/gcj/io/shs.cc \\\n-gnu/gcj/protocol/core/natCoreInputStream.cc \\\n gnu/gcj/runtime/natFinalizerThread.cc \\\n gnu/gcj/runtime/natFirstThread.cc \\\n gnu/gcj/runtime/natNameFinder.cc \\\n@@ -2656,6 +2655,7 @@ gnu/gcj/runtime/natVMClassLoader.cc \\\n gnu/java/awt/natEmbeddedWindow.cc \\\n gnu/java/net/natPlainDatagramSocketImpl.cc \\\n gnu/java/net/natPlainSocketImpl.cc \\\n+gnu/java/net/protocol/core/natCoreInputStream.cc \\\n gnu/java/nio/natFileLockImpl.cc \\\n gnu/java/nio/natSelectorImpl.cc \\\n java/io/natFile.cc \\"}, {"sha": "3d2754c5eab77113d1f69ce9aae96cbe1bc24272", "filename": "libjava/Makefile.in", "status": "modified", "additions": 40, "deletions": 38, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -448,6 +448,7 @@ inner_nat_headers = java/io/ObjectOutputStream$$PutField.h \\\n \tgnu/java/net/PlainSocketImpl$$SocketInputStream.h \\\n \tgnu/java/net/PlainSocketImpl$$SocketOutputStream.h\n \n+\n nat_headers = $(ordinary_nat_headers) $(inner_nat_headers)\n \n x_nat_headers = $(x_java_source_files:.java=.h)\n@@ -1727,17 +1728,6 @@ gnu/gcj/RawData.java \\\n gnu/gcj/io/DefaultMimeTypes.java \\\n gnu/gcj/io/MimeTypes.java \\\n gnu/gcj/io/SimpleSHSStream.java\t\\\n-gnu/gcj/protocol/core/Connection.java \\\n-gnu/gcj/protocol/core/Handler.java \\\n-gnu/gcj/protocol/core/CoreInputStream.java \\\n-gnu/gcj/protocol/file/Connection.java \\\n-gnu/gcj/protocol/file/Handler.java \\\n-gnu/gcj/protocol/http/Connection.java \\\n-gnu/gcj/protocol/http/Handler.java \\\n-gnu/gcj/protocol/jar/Connection.java \\\n-gnu/gcj/protocol/jar/Handler.java \\\n-gnu/gcj/protocol/gcjlib/Connection.java \\\n-gnu/gcj/protocol/gcjlib/Handler.java \\\n gnu/gcj/runtime/FileDeleter.java \\\n gnu/gcj/runtime/FinalizerThread.java \\\n gnu/gcj/runtime/FirstThread.java \\\n@@ -1900,6 +1890,17 @@ gnu/java/locale/LocaleInformation_zh_TW.java \\\n gnu/java/math/MPN.java \\\n gnu/java/net/PlainDatagramSocketImpl.java \\\n gnu/java/net/PlainSocketImpl.java \\\n+gnu/java/net/protocol/core/Connection.java \\\n+gnu/java/net/protocol/core/Handler.java \\\n+gnu/java/net/protocol/core/CoreInputStream.java \\\n+gnu/java/net/protocol/file/Connection.java \\\n+gnu/java/net/protocol/file/Handler.java \\\n+gnu/java/net/protocol/http/Connection.java \\\n+gnu/java/net/protocol/http/Handler.java \\\n+gnu/java/net/protocol/jar/Connection.java \\\n+gnu/java/net/protocol/jar/Handler.java \\\n+gnu/java/net/protocol/gcjlib/Connection.java \\\n+gnu/java/net/protocol/gcjlib/Handler.java \\\n gnu/java/nio/DatagramChannelImpl.java \\\n gnu/java/nio/DatagramChannelSelectionKey.java \\\n gnu/java/nio/FileLockImpl.java \\\n@@ -2362,7 +2363,6 @@ gnu/gcj/convert/natOutput_EUCJIS.cc \\\n gnu/gcj/convert/natOutput_SJIS.cc \\\n gnu/gcj/io/natSimpleSHSStream.cc \\\n gnu/gcj/io/shs.cc \\\n-gnu/gcj/protocol/core/natCoreInputStream.cc \\\n gnu/gcj/runtime/natFinalizerThread.cc \\\n gnu/gcj/runtime/natFirstThread.cc \\\n gnu/gcj/runtime/natNameFinder.cc \\\n@@ -2373,6 +2373,7 @@ gnu/gcj/runtime/natVMClassLoader.cc \\\n gnu/java/awt/natEmbeddedWindow.cc \\\n gnu/java/net/natPlainDatagramSocketImpl.cc \\\n gnu/java/net/natPlainSocketImpl.cc \\\n+gnu/java/net/protocol/core/natCoreInputStream.cc \\\n gnu/java/nio/natFileLockImpl.cc \\\n gnu/java/nio/natSelectorImpl.cc \\\n java/io/natFile.cc \\\n@@ -2543,20 +2544,21 @@ gnu/gcj/convert/JIS0212_to_Unicode.lo gnu/gcj/convert/Unicode_to_JIS.lo \\\n gnu/gcj/convert/natIconv.lo gnu/gcj/convert/natInput_EUCJIS.lo \\\n gnu/gcj/convert/natInput_SJIS.lo gnu/gcj/convert/natOutput_EUCJIS.lo \\\n gnu/gcj/convert/natOutput_SJIS.lo gnu/gcj/io/natSimpleSHSStream.lo \\\n-gnu/gcj/io/shs.lo gnu/gcj/protocol/core/natCoreInputStream.lo \\\n-gnu/gcj/runtime/natFinalizerThread.lo gnu/gcj/runtime/natFirstThread.lo \\\n-gnu/gcj/runtime/natNameFinder.lo gnu/gcj/runtime/natSharedLibLoader.lo \\\n-gnu/gcj/runtime/natStackTrace.lo gnu/gcj/runtime/natStringBuffer.lo \\\n-gnu/gcj/runtime/natVMClassLoader.lo gnu/java/awt/natEmbeddedWindow.lo \\\n+gnu/gcj/io/shs.lo gnu/gcj/runtime/natFinalizerThread.lo \\\n+gnu/gcj/runtime/natFirstThread.lo gnu/gcj/runtime/natNameFinder.lo \\\n+gnu/gcj/runtime/natSharedLibLoader.lo gnu/gcj/runtime/natStackTrace.lo \\\n+gnu/gcj/runtime/natStringBuffer.lo gnu/gcj/runtime/natVMClassLoader.lo \\\n+gnu/java/awt/natEmbeddedWindow.lo \\\n gnu/java/net/natPlainDatagramSocketImpl.lo \\\n-gnu/java/net/natPlainSocketImpl.lo gnu/java/nio/natFileLockImpl.lo \\\n-gnu/java/nio/natSelectorImpl.lo java/io/natFile.lo \\\n-java/io/natFileDescriptor.lo java/io/natObjectInputStream.lo \\\n-java/io/natVMObjectStreamClass.lo java/lang/natCharacter.lo \\\n-java/lang/natClass.lo java/lang/natClassLoader.lo \\\n-java/lang/natConcreteProcess.lo java/lang/natDouble.lo \\\n-java/lang/natFloat.lo java/lang/natMath.lo java/lang/natObject.lo \\\n-java/lang/natRuntime.lo java/lang/natString.lo \\\n+gnu/java/net/natPlainSocketImpl.lo \\\n+gnu/java/net/protocol/core/natCoreInputStream.lo \\\n+gnu/java/nio/natFileLockImpl.lo gnu/java/nio/natSelectorImpl.lo \\\n+java/io/natFile.lo java/io/natFileDescriptor.lo \\\n+java/io/natObjectInputStream.lo java/io/natVMObjectStreamClass.lo \\\n+java/lang/natCharacter.lo java/lang/natClass.lo \\\n+java/lang/natClassLoader.lo java/lang/natConcreteProcess.lo \\\n+java/lang/natDouble.lo java/lang/natFloat.lo java/lang/natMath.lo \\\n+java/lang/natObject.lo java/lang/natRuntime.lo java/lang/natString.lo \\\n java/lang/natStringBuffer.lo java/lang/natSystem.lo \\\n java/lang/natThread.lo java/lang/natVMSecurityManager.lo \\\n java/lang/ref/natReference.lo java/lang/reflect/natArray.lo \\\n@@ -2766,19 +2768,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/io/DefaultMimeTypes.P .deps/gnu/gcj/io/MimeTypes.P \\\n .deps/gnu/gcj/io/SimpleSHSStream.P \\\n .deps/gnu/gcj/io/natSimpleSHSStream.P .deps/gnu/gcj/io/shs.P \\\n-.deps/gnu/gcj/natCore.P .deps/gnu/gcj/protocol/core/Connection.P \\\n-.deps/gnu/gcj/protocol/core/CoreInputStream.P \\\n-.deps/gnu/gcj/protocol/core/Handler.P \\\n-.deps/gnu/gcj/protocol/core/natCoreInputStream.P \\\n-.deps/gnu/gcj/protocol/file/Connection.P \\\n-.deps/gnu/gcj/protocol/file/Handler.P \\\n-.deps/gnu/gcj/protocol/gcjlib/Connection.P \\\n-.deps/gnu/gcj/protocol/gcjlib/Handler.P \\\n-.deps/gnu/gcj/protocol/http/Connection.P \\\n-.deps/gnu/gcj/protocol/http/Handler.P \\\n-.deps/gnu/gcj/protocol/jar/Connection.P \\\n-.deps/gnu/gcj/protocol/jar/Handler.P \\\n-.deps/gnu/gcj/runtime/FileDeleter.P \\\n+.deps/gnu/gcj/natCore.P .deps/gnu/gcj/runtime/FileDeleter.P \\\n .deps/gnu/gcj/runtime/FinalizerThread.P \\\n .deps/gnu/gcj/runtime/FirstThread.P .deps/gnu/gcj/runtime/JNIWeakRef.P \\\n .deps/gnu/gcj/runtime/MethodRef.P .deps/gnu/gcj/runtime/NameFinder.P \\\n@@ -3027,6 +3017,18 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/java/net/PlainSocketImpl.P \\\n .deps/gnu/java/net/natPlainDatagramSocketImpl.P \\\n .deps/gnu/java/net/natPlainSocketImpl.P \\\n+.deps/gnu/java/net/protocol/core/Connection.P \\\n+.deps/gnu/java/net/protocol/core/CoreInputStream.P \\\n+.deps/gnu/java/net/protocol/core/Handler.P \\\n+.deps/gnu/java/net/protocol/core/natCoreInputStream.P \\\n+.deps/gnu/java/net/protocol/file/Connection.P \\\n+.deps/gnu/java/net/protocol/file/Handler.P \\\n+.deps/gnu/java/net/protocol/gcjlib/Connection.P \\\n+.deps/gnu/java/net/protocol/gcjlib/Handler.P \\\n+.deps/gnu/java/net/protocol/http/Connection.P \\\n+.deps/gnu/java/net/protocol/http/Handler.P \\\n+.deps/gnu/java/net/protocol/jar/Connection.P \\\n+.deps/gnu/java/net/protocol/jar/Handler.P \\\n .deps/gnu/java/nio/DatagramChannelImpl.P \\\n .deps/gnu/java/nio/DatagramChannelSelectionKey.P \\\n .deps/gnu/java/nio/FileLockImpl.P .deps/gnu/java/nio/NIOConstants.P \\"}, {"sha": "90515830cfcbb152e2cd7695a6e373023faa91a3", "filename": "libjava/gnu/gcj/runtime/FirstThread.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fgcj%2Fruntime%2FFirstThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fgcj%2Fruntime%2FFirstThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FFirstThread.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -90,7 +90,7 @@ private String getMain (String name)\n   // classes are only referred to via Class.forName(), so we add an\n   // explicit mention of them here.\n   static final Class Kcert = java.security.cert.Certificate.class;\n-  static final Class Kfile = gnu.gcj.protocol.file.Handler.class;\n-  static final Class Khttp = gnu.gcj.protocol.http.Handler.class;\n-  static final Class Kjar  = gnu.gcj.protocol.jar.Handler.class;\n+  static final Class Kfile = gnu.java.net.protocol.file.Handler.class;\n+  static final Class Khttp = gnu.java.net.protocol.http.Handler.class;\n+  static final Class Kjar  = gnu.java.net.protocol.jar.Handler.class;\n }"}, {"sha": "2319c0be923139ab8830810ae381f35f5e028409", "filename": "libjava/gnu/java/net/protocol/core/Connection.java", "status": "renamed", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FConnection.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -8,11 +8,14 @@\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-package gnu.gcj.protocol.core;\n+package gnu.java.net.protocol.core;\n \n import gnu.gcj.Core;\n-import java.net.*;\n-import java.io.*;\n+import java.io.InputStream;\n+import java.io.IOException;\n+import java.net.ProtocolException;\n+import java.net.URL;\n+import java.net.URLConnection;\n import java.util.Map;\n import java.util.Vector;\n import java.util.Hashtable;\n@@ -31,7 +34,7 @@ class Connection extends URLConnection\n \n   private Core core;\n \n-  public Connection(URL url)\n+  public Connection (URL url)\n   {\n     super(url);\n   }\n@@ -98,7 +101,7 @@ public String getHeaderField(int n)\n \treturn null;\n       }\n     if (n < hdrVec.size())\n-      return getField((String) hdrVec.elementAt(n));\n+      return getField ((String) hdrVec.elementAt(n));\n \n     return null;\n   }\n@@ -115,7 +118,7 @@ public String getHeaderFieldKey(int n)\n \treturn null;\n       }\n     if (n < hdrVec.size())\n-      return getKey((String) hdrVec.elementAt(n));\n+      return getKey ((String) hdrVec.elementAt(n));\n \n     return null;\n   }", "previous_filename": "libjava/gnu/gcj/protocol/core/Connection.java"}, {"sha": "421bb1c476586dc53878edcc492304b5fcb9694e", "filename": "libjava/gnu/java/net/protocol/core/CoreInputStream.java", "status": "renamed", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FCoreInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FCoreInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FCoreInputStream.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -8,11 +8,12 @@\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-package gnu.gcj.protocol.core;\n+package gnu.java.net.protocol.core;\n \n-import java.io.*;\n import gnu.gcj.Core;\n import gnu.gcj.RawData;\n+import java.io.InputStream;\n+import java.io.IOException;\n \n public class CoreInputStream extends InputStream\n {\n@@ -82,7 +83,7 @@ public synchronized long skip(long n)\n     // be larger than an int since the result of subtracting 2 positive\n     // ints will always fit in an int.  Since we have to return a long\n     // anyway, numBytes might as well just be a long.\n-    long numBytes = Math.min((long) (count - pos), n < 0 ? 0L : n);\n+    long numBytes = Math.min ((long) (count - pos), n < 0 ? 0L : n);\n     pos += numBytes;\n     return numBytes;\n   }", "previous_filename": "libjava/gnu/gcj/protocol/core/CoreInputStream.java"}, {"sha": "8726172d2cdf41d75c9b10142d4a82c1630fb089", "filename": "libjava/gnu/java/net/protocol/core/Handler.java", "status": "renamed", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FHandler.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -8,18 +8,17 @@\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-package gnu.gcj.protocol.core;\n+package gnu.java.net.protocol.core;\n \n+import java.io.IOException;\n import java.net.URL;\n import java.net.URLConnection;\n import java.net.URLStreamHandler;\n-import java.io.IOException;\n \n /**\n  * @author Anthony Green <green@redhat.com>\n  * @date August 13, 2001.\n  */\n-\n public class Handler extends URLStreamHandler\n {\n   protected URLConnection openConnection(URL url) throws IOException", "previous_filename": "libjava/gnu/gcj/protocol/core/Handler.java"}, {"sha": "4053efcd16a56fa0f63ea873eb645c3f74b95efa", "filename": "libjava/gnu/java/net/protocol/core/natCoreInputStream.cc", "status": "renamed", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FnatCoreInputStream.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FnatCoreInputStream.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fcore%2FnatCoreInputStream.cc?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -18,28 +18,30 @@ details.  */\n \n #include <java/lang/NullPointerException.h>\n #include <java/lang/ArrayIndexOutOfBoundsException.h>\n-#include <gnu/gcj/protocol/core/CoreInputStream.h>\n+#include <gnu/java/net/protocol/core/CoreInputStream.h>\n \n jint\n-gnu::gcj::protocol::core::CoreInputStream::unsafeGetByte (jlong offset)\n+gnu::java::net::protocol::core::CoreInputStream::unsafeGetByte (jlong offset)\n {\n-  return ((char *)ptr)[offset];\n+  return ((char*) ptr) [offset];\n }\n \n jint\n-gnu::gcj::protocol::core::CoreInputStream::copyIntoByteArray (jbyteArray dest,\n-\t\t\t\t\t\t\t      jint offset,\n-\t\t\t\t\t\t\t      jint numBytes)\n+gnu::java::net::protocol::core::CoreInputStream::copyIntoByteArray (jbyteArray dest,\n+\t\t\t\t\t\t\t            jint offset,\n+\t\t\t\t\t\t\t            jint numBytes)\n {\n-  if (! dest)\n-    throw new java::lang::NullPointerException; \n+  if (!dest)\n+    throw new ::java::lang::NullPointerException;\n+  \n   jsize destSize = JvGetArrayLength (dest);\n+  \n   if (offset < 0 || numBytes < 0 || offset + numBytes < 0\n       || offset + numBytes > destSize\n       || pos + numBytes > count)\n-    throw new java::lang::ArrayIndexOutOfBoundsException;\n+    throw new ::java::lang::ArrayIndexOutOfBoundsException;\n \n-  void *pcore = (void *) &((char*)ptr)[pos];\n+  void *pcore = (void *) &((char*) ptr) [pos];\n   void *pdest = (void *) (elements (dest) + offset);\n \n   memcpy (pdest, pcore, numBytes);", "previous_filename": "libjava/gnu/gcj/protocol/core/natCoreInputStream.cc"}, {"sha": "3bddd0ffe13e1698066aef0b310de96d6646670f", "filename": "libjava/gnu/java/net/protocol/file/Connection.java", "status": "renamed", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -8,10 +8,19 @@\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-package gnu.gcj.protocol.file;\n-\n-import java.net.*;\n-import java.io.*;\n+package gnu.java.net.protocol.file;\n+\n+import java.io.BufferedInputStream;\n+import java.io.BufferedOutputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.InputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.net.ProtocolException;\n+import java.net.URL;\n+import java.net.URLConnection;\n import java.util.Map;\n import java.util.Vector;\n import java.util.Hashtable;\n@@ -122,7 +131,7 @@ public String getHeaderField(int n)\n \treturn null;\n       }\n     if (n < hdrVec.size())\n-      return getField((String) hdrVec.elementAt(n));\n+      return getField ((String) hdrVec.elementAt(n));\n \n     return null;\n   }\n@@ -139,7 +148,7 @@ public String getHeaderFieldKey(int n)\n \treturn null;\n       }\n     if (n < hdrVec.size())\n-      return getKey((String) hdrVec.elementAt(n));\n+      return getKey ((String) hdrVec.elementAt(n));\n \n     return null;\n   }", "previous_filename": "libjava/gnu/gcj/protocol/file/Connection.java"}, {"sha": "f85db447b593a9a7ad52e2228b0d13d0cef468f0", "filename": "libjava/gnu/java/net/protocol/file/Handler.java", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FHandler.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -8,12 +8,12 @@\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-package gnu.gcj.protocol.file;\n+package gnu.java.net.protocol.file;\n \n+import java.io.IOException;\n import java.net.URL;\n import java.net.URLConnection;\n import java.net.URLStreamHandler;\n-import java.io.IOException;\n \n /**\n  * @author Warren Levy <warrenl@cygnus.com>", "previous_filename": "libjava/gnu/gcj/protocol/file/Handler.java"}, {"sha": "b31db56577684d01ae74c36f98aa4696dd164915", "filename": "libjava/gnu/java/net/protocol/gcjlib/Connection.java", "status": "renamed", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fgcjlib%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fgcjlib%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fgcjlib%2FConnection.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -9,18 +9,21 @@\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-package gnu.gcj.protocol.gcjlib;\n-import java.io.*;\n-import java.net.*;\n+package gnu.java.net.protocol.gcjlib;\n+\n+import java.io.InputStream;\n+import java.io.IOException;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.net.URLConnection;\n import gnu.gcj.Core;\n-import gnu.gcj.protocol.core.CoreInputStream;\n import gnu.gcj.runtime.SharedLibHelper;\n+import gnu.java.net.protocol.core.CoreInputStream;\n \n /**\n  * @author Tom Tromey <tromey@redhat.com>\n  * @date January 10, 2003\n  */\n-\n class Connection extends URLConnection\n {\n   String solib;\n@@ -30,12 +33,13 @@ class Connection extends URLConnection\n   public Connection (URL url) throws MalformedURLException\n   {\n     super (url);\n-    int index = url.getFile().indexOf(\"!/\");\n+    int index = url.getFile().indexOf (\"!/\");\n+    \n     if (index == -1)\n-      throw new MalformedURLException(\"couldn't find !/ in gcjlib URL\");\n+      throw new MalformedURLException (\"couldn't find !/ in gcjlib URL\");\n \n-    name = url.getFile().substring(index + 2);\n-    solib = url.getFile().substring(0, index);\n+    name = url.getFile().substring (index + 2);\n+    solib = url.getFile().substring (0, index);\n   }\n \n   public void connect() throws IOException", "previous_filename": "libjava/gnu/gcj/protocol/gcjlib/Connection.java"}, {"sha": "60f5bcc25187b7917b38156b1b64273d05a398c3", "filename": "libjava/gnu/java/net/protocol/gcjlib/Handler.java", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fgcjlib%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fgcjlib%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fgcjlib%2FHandler.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -8,17 +8,17 @@\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-package gnu.gcj.protocol.gcjlib;\n+package gnu.java.net.protocol.gcjlib;\n \n+import java.io.IOException;\n import java.net.URL;\n import java.net.URLConnection;\n import java.net.URLStreamHandler;\n-import java.io.IOException;\n \n public class Handler extends URLStreamHandler\n {\n-  protected URLConnection openConnection(URL url) throws IOException\n+  protected URLConnection openConnection (URL url) throws IOException\n   {\n-    return new Connection(url);\n+    return new Connection (url);\n   }\n }", "previous_filename": "libjava/gnu/gcj/protocol/gcjlib/Handler.java"}, {"sha": "990287db22816a975c5744f88f67999d5fd660b9", "filename": "libjava/gnu/java/net/protocol/http/Connection.java", "status": "renamed", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FConnection.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -8,20 +8,24 @@\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-package gnu.gcj.protocol.http;\n-\n-import java.net.*;\n-import java.io.*;\n+package gnu.java.net.protocol.http;\n+\n+import java.io.BufferedInputStream;\n+import java.io.InputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.io.PrintWriter;\n+import java.net.HttpURLConnection;\n+import java.net.InetAddress;\n+import java.net.ProtocolException;\n+import java.net.Socket;\n+import java.net.URL;\n+import java.net.URLConnection;\n import java.util.Map;\n import java.util.Vector;\n import java.util.Hashtable;\n import java.util.Enumeration;\n \n-/**\n- * @author Warren Levy <warrenl@cygnus.com>\n- * @date March 29, 1999.\n- */\n-\n /**\n  * Written using on-line Java Platform 1.2 API Specification, as well\n  * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n@@ -32,6 +36,10 @@\n  * doOutput.\n  */\n \n+/**\n+ * @author Warren Levy <warrenl@cygnus.com>\n+ * @date March 29, 1999.\n+ */\n class Connection extends HttpURLConnection\n {\n   protected Socket sock = null;\n@@ -233,7 +241,7 @@ public String getHeaderField(int n)\n \t}\n \n     if (n < hdrVec.size())\n-      return getField((String) hdrVec.elementAt(n));\n+      return getField ((String) hdrVec.elementAt(n));\n     return null;\n   }\n \n@@ -251,7 +259,7 @@ public String getHeaderFieldKey(int n)\n \t}\n \n     if (n < hdrVec.size())\n-      return getKey((String) hdrVec.elementAt(n));\n+      return getKey ((String) hdrVec.elementAt(n));\n     return null;\n   }\n ", "previous_filename": "libjava/gnu/gcj/protocol/http/Connection.java"}, {"sha": "e1184bbc4aff62afe3088c730f5d864eeceb19c3", "filename": "libjava/gnu/java/net/protocol/http/Handler.java", "status": "renamed", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHandler.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -8,33 +8,32 @@\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-package gnu.gcj.protocol.http;\n+package gnu.java.net.protocol.http;\n \n+import java.io.IOException;\n import java.net.URL;\n import java.net.URLConnection;\n import java.net.URLStreamHandler;\n-import java.io.IOException;\n-\n-/**\n- * @author Warren Levy\n- * @author Anthony Green <green@redhat.com>\n- * @date March 26, 1999.\n- */\n \n /**\n  * Written using on-line Java Platform 1.2 API Specification, as well\n  * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n  * Status:  Minimal functionality.\n  */\n \n+/**\n+ * @author Warren Levy\n+ * @author Anthony Green <green@redhat.com>\n+ * @date March 26, 1999.\n+ */\n public class Handler extends URLStreamHandler\n {\n-  protected URLConnection openConnection(URL url) throws IOException\n+  protected URLConnection openConnection (URL url) throws IOException\n   {\n-    return new Connection(url);\n+    return new Connection (url);\n   }\n \n-  protected int getDefaultPort ()\n+  protected int getDefaultPort()\n   {\n     return 80;\n   }", "previous_filename": "libjava/gnu/gcj/protocol/http/Handler.java"}, {"sha": "19e8ab719c48d73d5cf972212238b5eadcd03e48", "filename": "libjava/gnu/java/net/protocol/jar/Connection.java", "status": "renamed", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FConnection.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -6,31 +6,28 @@\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-package gnu.gcj.protocol.jar;\n+package gnu.java.net.protocol.jar;\n \n-import java.net.URL;\n-import java.net.URLConnection;\n-import java.net.JarURLConnection;\n-import java.net.URLStreamHandler;\n-import java.net.MalformedURLException;\n-import java.net.ProtocolException;\n-import java.io.IOException;\n import java.io.InputStream;\n+import java.io.IOException;\n import java.io.File;\n import java.io.FileOutputStream;\n+import java.net.JarURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.ProtocolException;\n+import java.net.URL;\n+import java.net.URLConnection;\n+import java.net.URLStreamHandler;\n+import java.util.Hashtable;\n import java.util.jar.JarFile;\n import java.util.zip.ZipFile;\n-import java.util.Hashtable;\n \n /**\n  * Written using on-line Java Platform 1.2 API Specification.\n  *\n  * @author Kresten Krab Thorup <krab@gnu.org>\n  * @date Aug 10, 1999.\n  */\n-\n-\n-\n public class Connection extends JarURLConnection \n {\n   static Hashtable file_cache = new Hashtable();\n@@ -53,22 +50,22 @@ public synchronized JarFile getJarFile() throws java.io.IOException\n     if (jarfile != null)\n       return jarfile;\n \n-    URL jarFileURL = getJarFileURL ();\n+    URL jarFileURL = getJarFileURL();\n \n-    if (jarFileURL.getProtocol ().equals (\"file\")\n-\t&& jarFileURL.getHost ().equals (\"\"))\n+    if (jarFileURL.getProtocol().equals (\"file\")\n+\t&& jarFileURL.getHost().equals (\"\"))\n       {\n \tif (getUseCaches())\n \t  {\n \t    jarfile = (JarFile) file_cache.get(jarFileURL);\n \t    if (jarfile == null)\n \t      {\n-\t\tjarfile = new JarFile (jarFileURL.getFile ());\n+\t\tjarfile = new JarFile (jarFileURL.getFile());\n \t\tfile_cache.put (jarFileURL, jarfile);\n \t      }\n \t  }\n \telse\n-\t  jarfile = new JarFile (jarFileURL.getFile ());\n+\t  jarfile = new JarFile (jarFileURL.getFile());\n       }\n     else\n       {\n@@ -78,7 +75,7 @@ public synchronized JarFile getJarFile() throws java.io.IOException\n \tFile f = File.createTempFile(\"cache\", \"jar\");\n \tFileOutputStream fos = new FileOutputStream(f);\n \tint len = 0;\n-\twhile((len = is.read(buf)) != -1)\n+\twhile ((len = is.read(buf)) != -1)\n \t  fos.write(buf, 0, len);\n         fos.close();\n \t// Always verify the Manifest, open read only and delete when done.", "previous_filename": "libjava/gnu/gcj/protocol/jar/Connection.java"}, {"sha": "e19a5cfc9547284620b491e7a3ecf89c3db9a8d2", "filename": "libjava/gnu/java/net/protocol/jar/Handler.java", "status": "renamed", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FHandler.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -8,18 +8,17 @@\n Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n details.  */\n \n-package gnu.gcj.protocol.jar;\n+package gnu.java.net.protocol.jar;\n \n+import java.io.IOException;\n import java.net.URL;\n import java.net.URLConnection;\n import java.net.URLStreamHandler;\n-import java.io.IOException;\n \n /**\n  * @author Kresten Krab Thorup <krab@gnu.org>\n  * @date August 13, 1999.\n  */\n-\n public class Handler extends URLStreamHandler\n {\n   protected URLConnection openConnection(URL url) throws IOException", "previous_filename": "libjava/gnu/gcj/protocol/jar/Handler.java"}, {"sha": "dd1ea4f0855d47f3c531f8cfa03421419e1aa1df", "filename": "libjava/java/net/URL.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fjava%2Fnet%2FURL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85aa13b28714657d91baabd5862c92008071706b/libjava%2Fjava%2Fnet%2FURL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURL.java?ref=85aa13b28714657d91baabd5862c92008071706b", "patch": "@@ -119,7 +119,7 @@\n public final class URL implements Serializable\n {\n   private static final String DEFAULT_SEARCH_PATH =\n-    \"gnu.gcj.protocol|sun.net.www.protocol\";\n+    \"gnu.java.net.protocol|sun.net.www.protocol\";\n   \n   /**\n    * The name of the protocol for this URL.\n@@ -775,12 +775,12 @@ public String toString()\n       }\n     else if (protocol.equals (\"core\"))\n       {\n- \tph = new gnu.gcj.protocol.core.Handler();\n+ \tph = new gnu.java.net.protocol.core.Handler();\n       }\n     else if (protocol.equals (\"file\"))\n       {\n \t// This is an interesting case.  It's tempting to think that we\n-\t// could call Class.forName (\"gnu.gcj.protocol.file.Handler\") to\n+\t// could call Class.forName (\"gnu.java.net.protocol.file.Handler\") to\n \t// get the appropriate class.  Unfortunately, if we do that the\n \t// program will never terminate, because getURLStreamHandler is\n \t// eventually called by Class.forName.\n@@ -789,7 +789,7 @@ else if (protocol.equals (\"file\"))\n \t// fix this problem.  If other protocols are required in a\n \t// statically linked application they will need to be handled in\n \t// the same way as \"file\".\n-\tph = new gnu.gcj.protocol.file.Handler();\n+\tph = new gnu.java.net.protocol.file.Handler();\n       }\n \n     // Non-default factory may have returned null or a factory wasn't set."}]}