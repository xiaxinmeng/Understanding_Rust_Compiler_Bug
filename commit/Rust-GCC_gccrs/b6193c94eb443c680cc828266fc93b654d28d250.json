{"sha": "b6193c94eb443c680cc828266fc93b654d28d250", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYxOTNjOTRlYjQ0M2M2ODBjYzgyODI2NmZjOTNiNjU0ZDI4ZDI1MA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-08-01T12:14:21Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-08-01T12:14:21Z"}, "message": "re PR debug/49887 (.debug_macro breaks many Solaris/SPARC tests)\n\n\tPR debug/49887\n\t* config/sol2.c (solaris_code_end): Rename to solaris_file_end.\n\t* config/sol2-protos.h: Likewise.\n\t* config/i386/i386.c (ix86_code_end) [TARGET_SOLARIS]: Don't call\n\tsolaris_code_end.\n\t* config/i386/sol2.h [!USE_GAS] (TARGET_ASM_FILE_END): Redefine.\n\t* config/sparc/sparc.c (sparc_file_end) [TARGET_SOLARIS]: Call\n\tsolaris_file_end.\n\t* config/sparc/sol2.h (TARGET_ASM_CODE_END): Remove.\n\nFrom-SVN: r177020", "tree": {"sha": "4d0d0b823c4f7af2d0f70bb733e07ce0979a4f7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d0d0b823c4f7af2d0f70bb733e07ce0979a4f7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6193c94eb443c680cc828266fc93b654d28d250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6193c94eb443c680cc828266fc93b654d28d250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6193c94eb443c680cc828266fc93b654d28d250", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6193c94eb443c680cc828266fc93b654d28d250/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "247eb06feda17162e6f3ce4fd65f7db9dc3d04cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247eb06feda17162e6f3ce4fd65f7db9dc3d04cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247eb06feda17162e6f3ce4fd65f7db9dc3d04cd"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "76fe48cff39ea79a523736257d177565fe88462f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6193c94eb443c680cc828266fc93b654d28d250", "patch": "@@ -1,3 +1,15 @@\n+2011-08-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR debug/49887\n+\t* config/sol2.c (solaris_code_end): Rename to solaris_file_end.\n+\t* config/sol2-protos.h: Likewise.\n+\t* config/i386/i386.c (ix86_code_end) [TARGET_SOLARIS]: Don't call\n+\tsolaris_code_end.\n+\t* config/i386/sol2.h [!USE_GAS] (TARGET_ASM_FILE_END): Redefine.\n+\t* config/sparc/sparc.c (sparc_file_end) [TARGET_SOLARIS]: Call\n+\tsolaris_file_end.\n+\t* config/sparc/sol2.h (TARGET_ASM_CODE_END): Remove.\n+\n 2011-08-01  Julian Brown  <julian@codesourcery.com>\n \n \t* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Support FIXED_CST."}, {"sha": "ebb6f250d57aa9c6c548e94c210f86266c53419c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b6193c94eb443c680cc828266fc93b654d28d250", "patch": "@@ -8318,10 +8318,6 @@ ix86_code_end (void)\n   rtx xops[2];\n   int regno;\n \n-#ifdef TARGET_SOLARIS\n-  solaris_code_end ();\n-#endif\n-\n   for (regno = AX_REG; regno <= SP_REG; regno++)\n     {\n       char name[32];"}, {"sha": "48dcfbb74393bd6c5affd5e3acf7e8d9773ce870", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=b6193c94eb443c680cc828266fc93b654d28d250", "patch": "@@ -160,6 +160,12 @@ along with GCC; see the file COPYING3.  If not see\n #undef TARGET_ASM_NAMED_SECTION\n #define TARGET_ASM_NAMED_SECTION i386_solaris_elf_named_section\n \n+#ifndef USE_GAS\n+/* Emit COMDAT group signature symbols for Sun as.  */\n+#undef TARGET_ASM_FILE_END\n+#define TARGET_ASM_FILE_END solaris_file_end\n+#endif\n+\n /* Unlike GNU ld, Sun ld doesn't coalesce .ctors.N/.dtors.N sections, so\n    inhibit their creation.  Also cf. sparc/sysv4.h.  */\n #ifndef USE_GLD"}, {"sha": "dae3e137b636cf0f7eda2b65f25e1dedc699fa9a", "filename": "gcc/config/sol2-protos.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fsol2-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fsol2-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-protos.h?ref=b6193c94eb443c680cc828266fc93b654d28d250", "patch": "@@ -1,6 +1,6 @@\n /* Operating system specific prototypes to be used when targeting GCC for any\n    Solaris 2 system.\n-   Copyright 2004, 2007, 2010 Free Software Foundation, Inc.\n+   Copyright 2004, 2007, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -23,4 +23,4 @@ extern void solaris_register_pragmas (void);\n extern void solaris_output_init_fini (FILE *, tree);\n extern void solaris_assemble_visibility (tree, int);\n extern void solaris_elf_asm_comdat_section (const char *, unsigned int, tree);\n-extern void solaris_code_end (void);\n+extern void solaris_file_end (void);"}, {"sha": "b1f0196e7b507d3bb153250d5d8d248da7507200", "filename": "gcc/config/sol2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fsol2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fsol2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.c?ref=b6193c94eb443c680cc828266fc93b654d28d250", "patch": "@@ -228,7 +228,7 @@ solaris_elf_asm_comdat_section (const char *name, unsigned int flags, tree decl)\n      for Sun as.  With a few exceptions, this is already the case.  To\n      identify the missing ones without changing the affected frontents,\n      remember the signature symbols and emit those not marked\n-     TREE_SYMBOL_REFERENCED in solaris_code_end.  */\n+     TREE_SYMBOL_REFERENCED in solaris_file_end.  */\n   if (solaris_comdat_htab == NULL)\n     solaris_comdat_htab = htab_create_alloc (37, comdat_hash, comdat_eq, NULL,\n \t\t\t\t\t     xcalloc, free);\n@@ -275,7 +275,7 @@ solaris_define_comdat_signature (void **slot, void *aux ATTRIBUTE_UNUSED)\n /* Emit unreferenced COMDAT group signature symbols for Sun as.  */\n \n void\n-solaris_code_end (void)\n+solaris_file_end (void)\n {\n   if (solaris_comdat_htab == NULL)\n     return;"}, {"sha": "64932f967cd3107506b4221d0a8ad1f843df3ed7", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=b6193c94eb443c680cc828266fc93b654d28d250", "patch": "@@ -314,10 +314,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef TARGET_ASM_NAMED_SECTION\n #define TARGET_ASM_NAMED_SECTION sparc_solaris_elf_asm_named_section\n \n-/* Emit COMDAT group signature symbols for Sun as.  */\n-#undef TARGET_ASM_CODE_END\n-#define TARGET_ASM_CODE_END solaris_code_end\n-\n /* Sun as requires doublequoted section names on SPARC.  While GNU as\n    supports that, too, we prefer the standard variant.  */\n #undef SECTION_NAME_FORMAT"}, {"sha": "811684473ce78d0d79715be767eee35dfa6d5a4c", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6193c94eb443c680cc828266fc93b654d28d250/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=b6193c94eb443c680cc828266fc93b654d28d250", "patch": "@@ -10019,6 +10019,10 @@ sparc_file_end (void)\n \n   if (NEED_INDICATE_EXEC_STACK)\n     file_end_indicate_exec_stack ();\n+\n+#ifdef TARGET_SOLARIS\n+  solaris_file_end ();\n+#endif\n }\n \n #ifdef TARGET_ALTERNATE_LONG_DOUBLE_MANGLING"}]}