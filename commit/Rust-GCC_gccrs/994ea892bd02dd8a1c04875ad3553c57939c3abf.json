{"sha": "994ea892bd02dd8a1c04875ad3553c57939c3abf", "node_id": "C_kwDOANBUbNoAKDk5NGVhODkyYmQwMmRkOGExYzA0ODc1YWQzNTUzYzU3OTM5YzNhYmY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-09-12T08:48:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-09-12T08:48:19Z"}, "message": "libgomp: Fix up icv-6.c [PR106894]\n\nThe thing is,\nmake check\nor\nmake check RUNTESTFLAGS=\"c.exp='icv-6.c' c++.exp='icv-6.c'\"\nin libgomp obj dir work fine, but\nmake -j32 -k check RUNTESTFLAGS=\"c.exp='icv-6.c' c++.exp='icv-6.c'\"\nfails.\nThe thing is that the testcase as written relies on OMP_NUM_THREADS not being\nset in environment (as it takes priority over OMP_NUM_THREADS_ALL for the\nhost).\nSo, if either a user has OMP_NUM_THREADS=42 in the environment by himself, or\nwhen doing make check with -jN, we trigger:\n          if test $$num_cpus -gt 8 && test -z \"$$OMP_NUM_THREADS\"; then \\\n            OMP_NUM_THREADS=8; export OMP_NUM_THREADS; \\\n            echo @@@ libgomp OMP_NUM_THREADS adjusted to 8 because of parallel\nmake check and too many CPUs; \\\n          fi; \\\nin libgomp/testsuite/Makefile.am and so the test fails.\n\n2022-09-12  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR libgomp/106894\n\t* testsuite/libgomp.c-c++-common/icv-6.c: Include string.h.\n\t(main): Avoid tests for which corresponding non-_ALL suffixed variable\n\tis in the environment, or for OMP_NUM_TEAMS on the device\n\tOMP_NUM_TEAMS_DEV_?.", "tree": {"sha": "5d364e76f213d76035f905156272ef2bb6553be6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d364e76f213d76035f905156272ef2bb6553be6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/994ea892bd02dd8a1c04875ad3553c57939c3abf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/994ea892bd02dd8a1c04875ad3553c57939c3abf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/994ea892bd02dd8a1c04875ad3553c57939c3abf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/994ea892bd02dd8a1c04875ad3553c57939c3abf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "643ae816f17745a77b62188b6bf169211609a59b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643ae816f17745a77b62188b6bf169211609a59b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/643ae816f17745a77b62188b6bf169211609a59b"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "e199a185920c45313e25f7f258e1bef450ccf284", "filename": "libgomp/testsuite/libgomp.c-c++-common/icv-6.c", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/994ea892bd02dd8a1c04875ad3553c57939c3abf/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ficv-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/994ea892bd02dd8a1c04875ad3553c57939c3abf/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ficv-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Ficv-6.c?ref=994ea892bd02dd8a1c04875ad3553c57939c3abf", "patch": "@@ -17,6 +17,7 @@\n \n #include <omp.h>\n #include <stdlib.h>\n+#include <string.h>\n \n int\n main ()\n@@ -25,21 +26,28 @@ main ()\n   int chunk_size;\n   omp_get_schedule(&kind, &chunk_size);\n \n-  if (omp_get_max_teams () != 42\n-      || !omp_get_dynamic ()\n-      || kind != 3 || chunk_size != 4\n-      || omp_get_teams_thread_limit () != 44\n-      || omp_get_thread_limit () != 45\n-      || omp_get_max_threads () != 46\n-      || omp_get_proc_bind () != omp_proc_bind_spread\n-      || omp_get_max_active_levels () != 47)\n+  if ((!getenv (\"OMP_NUM_TEAMS\") && omp_get_max_teams () != 42)\n+      || (!getenv (\"OMP_DYNAMIC\") && !omp_get_dynamic ())\n+      || (!getenv (\"OMP_SCHEDULE\") && (kind != 3 || chunk_size != 4))\n+      || (!getenv (\"OMP_TEAMS_THREAD_LIMIT\") && omp_get_teams_thread_limit () != 44)\n+      || (!getenv (\"OMP_THREAD_LIMIT\") && omp_get_thread_limit () != 45)\n+      || (!getenv (\"OMP_NUM_THREADS\") && omp_get_max_threads () != 46)\n+      || (!getenv (\"OMP_PROC_BIND\") && omp_get_proc_bind () != omp_proc_bind_spread)\n+      || (!getenv (\"OMP_MAX_ACTIVE_LEVELS\") && omp_get_max_active_levels () != 47))\n     abort ();\n \n   int num_devices = omp_get_num_devices () > 3 ? 3 : omp_get_num_devices ();\n-  for (int i=0; i < num_devices; i++)\n+  for (int i = 0; i < num_devices; i++)\n+    {\n+      char name[sizeof (\"OMP_NUM_TEAMS_DEV_1\")];\n+      strcpy (name, \"OMP_NUM_TEAMS_DEV_1\");\n+      name[sizeof (\"OMP_NUM_TEAMS_DEV_1\") - 2] = '0' + i;\n+      if (getenv (name))\n+\tcontinue;\n     #pragma omp target device (i)\n       if (omp_get_max_teams () != 43)\n \tabort ();\n+    }\n \n   return 0;\n }"}]}