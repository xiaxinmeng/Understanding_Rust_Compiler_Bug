{"sha": "164247b0e22af8e62b10596e74fe1778e46e18d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY0MjQ3YjBlMjJhZjhlNjJiMTA1OTZlNzRmZTE3NzhlNDZlMThkMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-11-01T05:07:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-11-01T05:07:00Z"}, "message": "tree.c (cv_unqualified): New fn.\n\n\t* tree.c (cv_unqualified): New fn.\n\t* cp-tree.h: Declare it.\n\t* typeck.c (decay_conversion): Use it instead of TYPE_MAIN_VARIANT.\n\nFrom-SVN: r153790", "tree": {"sha": "26911dba08cb0a7db0e486c6601e5761fb0de7d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26911dba08cb0a7db0e486c6601e5761fb0de7d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/164247b0e22af8e62b10596e74fe1778e46e18d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164247b0e22af8e62b10596e74fe1778e46e18d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/164247b0e22af8e62b10596e74fe1778e46e18d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164247b0e22af8e62b10596e74fe1778e46e18d0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c86f25e8ea6708147f15f4e80fca192ff2e81c19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c86f25e8ea6708147f15f4e80fca192ff2e81c19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c86f25e8ea6708147f15f4e80fca192ff2e81c19"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "2182bb1f97e049d6eaf4ae67eae43f10212aae77", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=164247b0e22af8e62b10596e74fe1778e46e18d0", "patch": "@@ -1,5 +1,9 @@\n 2009-10-31  Jason Merrill  <jason@redhat.com>\n \n+\t* tree.c (cv_unqualified): New fn.\n+\t* cp-tree.h: Declare it.\n+\t* typeck.c (decay_conversion): Use it instead of TYPE_MAIN_VARIANT.\n+\n \t* rtti.c (tinfo_name): Fix lengths for private case.\n \n 2009-10-31  Jason Merrill  <jason@redhat.com>"}, {"sha": "79655142eebb3401db5e6eb23932cd2fc002f5e4", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=164247b0e22af8e62b10596e74fe1778e46e18d0", "patch": "@@ -5146,6 +5146,7 @@ extern tree move\t\t\t\t(tree);\n extern tree cp_build_qualified_type_real\t(tree, int, tsubst_flags_t);\n #define cp_build_qualified_type(TYPE, QUALS) \\\n   cp_build_qualified_type_real ((TYPE), (QUALS), tf_warning_or_error)\n+extern tree cv_unqualified\t\t\t(tree);\n extern special_function_kind special_function_p (const_tree);\n extern int count_trees\t\t\t\t(tree);\n extern int char_type_p\t\t\t\t(tree);"}, {"sha": "b79093a36d5092a6e42f49f52fd3287cf14f5591", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=164247b0e22af8e62b10596e74fe1778e46e18d0", "patch": "@@ -946,6 +946,16 @@ cp_build_qualified_type_real (tree type,\n   return result;\n }\n \n+/* Return TYPE with const and volatile removed.  */\n+\n+tree\n+cv_unqualified (tree type)\n+{\n+  int quals = TYPE_QUALS (type);\n+  quals &= ~(TYPE_QUAL_CONST|TYPE_QUAL_VOLATILE);\n+  return cp_build_qualified_type (type, quals);\n+}\n+\n /* Builds a qualified variant of T that is not a typedef variant.\n    E.g. consider the following declarations:\n      typedef const int ConstInt;"}, {"sha": "25c257f94a9c73cd9e1f51c64b1cad1522d636dc", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=164247b0e22af8e62b10596e74fe1778e46e18d0", "patch": "@@ -1691,7 +1691,7 @@ decay_conversion (tree exp)\n      Non-class rvalues always have cv-unqualified types.  */\n   type = TREE_TYPE (exp);\n   if (!CLASS_TYPE_P (type) && cp_type_quals (type))\n-    exp = build_nop (TYPE_MAIN_VARIANT (type), exp);\n+    exp = build_nop (cv_unqualified (type), exp);\n \n   return exp;\n }"}, {"sha": "6e3a9d8369e61e2d38eea079441aab7b942b54a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=164247b0e22af8e62b10596e74fe1778e46e18d0", "patch": "@@ -1,3 +1,7 @@\n+2009-10-31  Richard Guenther  <rguenther@suse.de>\n+\n+\t* g++.dg/tree-ssa/restrict1.C: New.\n+\n 2009-10-31  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/rtti/typeid9.C: New."}, {"sha": "dc120b1e81798733959e3aae271227ec2d0ce87d", "filename": "gcc/testsuite/g++.dg/tree-ssa/restrict1.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164247b0e22af8e62b10596e74fe1778e46e18d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Frestrict1.C?ref=164247b0e22af8e62b10596e74fe1778e46e18d0", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-lim-details\" } */\n+\n+struct Foo\n+{\n+  Foo();\n+  Foo(const Foo&);\n+  int n;\n+  int * __restrict__ p;\n+};\n+void bar(Foo f, int * __restrict__ q)\n+{\n+  for (int i = 0; i < f.n; ++i)\n+    {\n+      *q += f.p[i];\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"Executing store motion\" \"lim1\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}]}