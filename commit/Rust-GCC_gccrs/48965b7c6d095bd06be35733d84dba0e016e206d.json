{"sha": "48965b7c6d095bd06be35733d84dba0e016e206d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg5NjViN2M2ZDA5NWJkMDZiZTM1NzMzZDg0ZGJhMGUwMTZlMjA2ZA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2009-02-09T22:52:08Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2009-02-09T22:52:08Z"}, "message": "addr2name.awk: Remove.\n\n\t* addr2name.awk: Remove.\n\t* Makefile.am (bin_SCRIPTS): Remove addr2name.awk.\n\t* Makefile.in: Regenerated.\n\n\t* configure.ac: Define enable_sjlj_exceptions\n\tappropriately under the ARM EH ABI.\n\t* configure: Regenerated.\n\n\t* Makefile.am (LTLDFLAGS): Define.\n\t(GCJLINK): Use it.\n\t(LIBLINK): Likewise.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r144046", "tree": {"sha": "ec1c19d82568c9bac01072efe4d3acb8c95220e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec1c19d82568c9bac01072efe4d3acb8c95220e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48965b7c6d095bd06be35733d84dba0e016e206d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48965b7c6d095bd06be35733d84dba0e016e206d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48965b7c6d095bd06be35733d84dba0e016e206d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48965b7c6d095bd06be35733d84dba0e016e206d/comments", "author": null, "committer": null, "parents": [{"sha": "71c8958e6748de19ef2f674cc576e4a873c03236", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71c8958e6748de19ef2f674cc576e4a873c03236", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71c8958e6748de19ef2f674cc576e4a873c03236"}], "stats": {"total": 88, "additions": 34, "deletions": 54}, "files": [{"sha": "76cc195123621c5c074792a86e23c43aed47af7f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48965b7c6d095bd06be35733d84dba0e016e206d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48965b7c6d095bd06be35733d84dba0e016e206d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=48965b7c6d095bd06be35733d84dba0e016e206d", "patch": "@@ -1,3 +1,18 @@\n+2009-02-09  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* addr2name.awk: Remove.\n+\t* Makefile.am (bin_SCRIPTS): Remove addr2name.awk.\n+\t* Makefile.in: Regenerated.\n+\n+\t* configure.ac: Define enable_sjlj_exceptions\n+\tappropriately under the ARM EH ABI.\n+\t* configure: Regenerated.\n+\n+\t* Makefile.am (LTLDFLAGS): Define.\n+\t(GCJLINK): Use it.\n+\t(LIBLINK): Likewise.\n+\t* Makefile.in: Regenerated.\n+\n 2009-02-03  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gnu/gcj/convert/Convert.java (version): Update copyright notice"}, {"sha": "382a642e4eb98a875cf1ea8067f16a31018a8d84", "filename": "libjava/Makefile.am", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48965b7c6d095bd06be35733d84dba0e016e206d/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48965b7c6d095bd06be35733d84dba0e016e206d/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=48965b7c6d095bd06be35733d84dba0e016e206d", "patch": "@@ -98,7 +98,7 @@ endif\n dbexec_DATA = $(db_name)\n endif \n \n-bin_SCRIPTS = addr2name.awk contrib/rebuild-gcj-db contrib/aot-compile\n+bin_SCRIPTS = contrib/rebuild-gcj-db contrib/aot-compile\n \n if INSTALL_AOT_RPM\n bin_SCRIPTS += contrib/aot-compile-rpm\n@@ -128,12 +128,15 @@ if ANONVERSCRIPT\n extra_ldflags_libjava += -Wl,--version-script=$(srcdir)/libgcj.ver\n endif\n \n+LTLDFLAGS = $(shell $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) \\\n-          $(LDFLAGS) -o $@\n+          $(LTLDFLAGS) -o $@\n GCJ_FOR_ECJX = @GCJ_FOR_ECJX@\n GCJ_FOR_ECJX_LINK = $(GCJ_FOR_ECJX) -o $@\n LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) $(JC1FLAGS) \\\n-          $(LDFLAGS) $(extra_ldflags_libjava) $(extra_ldflags) -o $@\n+          $(LTLDFLAGS) $(extra_ldflags_libjava) $(extra_ldflags) -o $@\n+CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(AM_LDFLAGS) $(LTLDFLAGS) -o $@\n \n GCC_UNWIND_INCLUDE = @GCC_UNWIND_INCLUDE@\n "}, {"sha": "b172d01f4deef29323f1ca93a0c5fd5dc5f5c405", "filename": "libjava/Makefile.in", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48965b7c6d095bd06be35733d84dba0e016e206d/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48965b7c6d095bd06be35733d84dba0e016e206d/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=48965b7c6d095bd06be35733d84dba0e016e206d", "patch": "@@ -532,8 +532,6 @@ LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \\\n \t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n \t$(AM_CXXFLAGS) $(CXXFLAGS)\n CXXLD = $(CXX)\n-CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n-\t$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\n GCJCOMPILE = $(GCJ) $(AM_GCJFLAGS) $(GCJFLAGS)\n LTGCJCOMPILE = $(LIBTOOL) --tag=GCJ --mode=compile $(GCJ) \\\n \t$(AM_GCJFLAGS) $(GCJFLAGS)\n@@ -929,15 +927,19 @@ db_pathtail = $(gcjsubdir)/$(db_name)\n @NATIVE_TRUE@\tgcjh gjavah gnative2ascii gorbd grmid gserialver \\\n @NATIVE_TRUE@\tgtnameserv gc-analyze $(am__append_5)\n @NATIVE_TRUE@dbexec_DATA = $(db_name)\n-bin_SCRIPTS = addr2name.awk contrib/rebuild-gcj-db contrib/aot-compile \\\n+bin_SCRIPTS = contrib/rebuild-gcj-db contrib/aot-compile \\\n \t$(am__append_7)\n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8 -Wno-deprecated\n+LTLDFLAGS = $(shell $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) \\\n-          $(LDFLAGS) -o $@\n+          $(LTLDFLAGS) -o $@\n \n GCJ_FOR_ECJX_LINK = $(GCJ_FOR_ECJX) -o $@\n LIBLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXX) -L$(here) $(JC1FLAGS) \\\n-          $(LDFLAGS) $(extra_ldflags_libjava) $(extra_ldflags) -o $@\n+          $(LTLDFLAGS) $(extra_ldflags_libjava) $(extra_ldflags) -o $@\n+\n+CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \\\n+\t$(CXXFLAGS) $(AM_LDFLAGS) $(LTLDFLAGS) -o $@\n \n WARNINGS = -Wextra -Wall\n AM_CXXFLAGS = \\"}, {"sha": "f31befd526dc94a5afd49b3ed83cebbd3a149cdc", "filename": "libjava/addr2name.awk", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71c8958e6748de19ef2f674cc576e4a873c03236/libjava%2Faddr2name.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71c8958e6748de19ef2f674cc576e4a873c03236/libjava%2Faddr2name.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Faddr2name.awk?ref=71c8958e6748de19ef2f674cc576e4a873c03236", "patch": "@@ -1,46 +0,0 @@\n-#!/bin/awk -f\n-\n-# Copyright (C) 2000  Free Software Foundation\n-\n-#    This file is part of libgcj.\n-\n-# This software is copyrighted work licensed under the terms of the\n-# Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-# details.\n-\n-# This script emulates a little of the functionality of addr2line for\n-# those systems that don't have it.  The only command line argument is\n-# an executable name.  The script reads hexadecimal addresses from\n-# stdin and prints the corresponding symbol names to stdout.  The\n-# addresses must begin with \"0x\" and be fully zero filled or this\n-# won't work.\n-\n-BEGIN {\n-  object = ARGV[1];\n-  ARGV[1] = \"\";\n-\n-  while (\"nm \" object \"| sort\" | getline) {\n-    if ($2 == \"t\" || $2 == \"T\") {\n-      address[i] = \"0x\" $1; name[i] = $3;\n-      i++;\n-    }\n-  }\n-  syms = i;\n-}\n-\n-{\n-  lo = 0;\n-  hi = syms - 1;\n-\n-  while ((hi-1) > lo)\n-    {\n-      try = int ((hi + lo) / 2);\n-      if ($0 < address[try])\n-\thi = try;\n-      else if ($0 >= address[try])\n-\tlo = try;\n-    }\n-  print name[lo] \"\\n\"; fflush();\n-}\n-\n-    "}, {"sha": "9b8f52f0a3cb251cb2bac4ad8b27c427c9d97c0f", "filename": "libjava/configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48965b7c6d095bd06be35733d84dba0e016e206d/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48965b7c6d095bd06be35733d84dba0e016e206d/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=48965b7c6d095bd06be35733d84dba0e016e206d", "patch": "@@ -18795,6 +18795,9 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n     enable_sjlj_exceptions=yes\n   elif grep _Unwind_Resume conftest.s >/dev/null 2>&1 ; then\n     enable_sjlj_exceptions=no\n+  elif grep __cxa_end_cleanup conftest.s >/dev/null 2>&1 ; then\n+    # ARM EH ABI.\n+    enable_sjlj_exceptions=no\n   fi\n fi\n CXXFLAGS=\"$old_CXXFLAGS\""}, {"sha": "8719431210406e9c65598a63b282c8e8b641f2f0", "filename": "libjava/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48965b7c6d095bd06be35733d84dba0e016e206d/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48965b7c6d095bd06be35733d84dba0e016e206d/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=48965b7c6d095bd06be35733d84dba0e016e206d", "patch": "@@ -675,6 +675,9 @@ if AC_TRY_EVAL(ac_compile); then\n     enable_sjlj_exceptions=yes\n   elif grep _Unwind_Resume conftest.s >/dev/null 2>&1 ; then\n     enable_sjlj_exceptions=no\n+  elif grep __cxa_end_cleanup conftest.s >/dev/null 2>&1 ; then\n+    # ARM EH ABI.\n+    enable_sjlj_exceptions=no\n   fi\n fi\n CXXFLAGS=\"$old_CXXFLAGS\""}]}