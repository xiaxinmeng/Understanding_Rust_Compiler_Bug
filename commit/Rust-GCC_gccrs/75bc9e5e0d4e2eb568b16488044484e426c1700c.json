{"sha": "75bc9e5e0d4e2eb568b16488044484e426c1700c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViYzllNWUwZDRlMmViNTY4YjE2NDg4MDQ0NDg0ZTQyNmMxNzAwYw==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2010-08-21T12:18:02Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2010-08-21T12:18:02Z"}, "message": "Fix misquoting in stdint.m4.\n\nconfig/:\n\tPR target/45084\n\t* stdint.m4 (GCC_HEADER_STDINT): Use m4 quotes for arguments\n\tof AC_MSG_ERROR.\n\nlibdecnumber/:\n\t* configure: Regenerate.\n\nlibgfortran/:\n\t* configure: Regenerate.\n\nlibgomp/:\n\t* configure: Regenerate.\n\nlibstdc++-v3/:\n\t* configure: Regenerate.\n\nFrom-SVN: r163441", "tree": {"sha": "774615d95a071425dfdae72912713fe3a6ca7292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/774615d95a071425dfdae72912713fe3a6ca7292"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75bc9e5e0d4e2eb568b16488044484e426c1700c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75bc9e5e0d4e2eb568b16488044484e426c1700c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75bc9e5e0d4e2eb568b16488044484e426c1700c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75bc9e5e0d4e2eb568b16488044484e426c1700c/comments", "author": null, "committer": null, "parents": [{"sha": "47b996944dcb50a831c1332b8ea667ff6f95fa95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b996944dcb50a831c1332b8ea667ff6f95fa95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b996944dcb50a831c1332b8ea667ff6f95fa95"}], "stats": {"total": 80, "additions": 43, "deletions": 37}, "files": [{"sha": "22a36414fc33358b9c1e70584692ffb193a30f0a", "filename": "config/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc9e5e0d4e2eb568b16488044484e426c1700c/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc9e5e0d4e2eb568b16488044484e426c1700c/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=75bc9e5e0d4e2eb568b16488044484e426c1700c", "patch": "@@ -1,3 +1,9 @@\n+2010-08-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR target/45084\n+\t* stdint.m4 (GCC_HEADER_STDINT): Use m4 quotes for arguments\n+\tof AC_MSG_ERROR.\n+\n 2010-07-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gc++filt.m4: New file."}, {"sha": "fbdd58619a56d7ef35f1efa310398a113f27456c", "filename": "config/stdint.m4", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc9e5e0d4e2eb568b16488044484e426c1700c/config%2Fstdint.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc9e5e0d4e2eb568b16488044484e426c1700c/config%2Fstdint.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fstdint.m4?ref=75bc9e5e0d4e2eb568b16488044484e426c1700c", "patch": "@@ -146,23 +146,23 @@ if test $acx_cv_header_stdint = stddef.h; then\n   AC_MSG_CHECKING(for type equivalent to int8_t)\n   case \"$ac_cv_sizeof_char\" in\n     1) acx_cv_type_int8_t=char ;;\n-    *) AC_MSG_ERROR(no 8-bit type, please report a bug)\n+    *) AC_MSG_ERROR([no 8-bit type, please report a bug])\n   esac\n   AC_MSG_RESULT($acx_cv_type_int8_t)\n \n   AC_MSG_CHECKING(for type equivalent to int16_t)\n   case \"$ac_cv_sizeof_int:$ac_cv_sizeof_short\" in\n     2:*) acx_cv_type_int16_t=int ;;\n     *:2) acx_cv_type_int16_t=short ;;\n-    *) AC_MSG_ERROR(no 16-bit type, please report a bug)\n+    *) AC_MSG_ERROR([no 16-bit type, please report a bug])\n   esac\n   AC_MSG_RESULT($acx_cv_type_int16_t)\n \n   AC_MSG_CHECKING(for type equivalent to int32_t)\n   case \"$ac_cv_sizeof_int:$ac_cv_sizeof_long\" in\n     4:*) acx_cv_type_int32_t=int ;;\n     *:4) acx_cv_type_int32_t=long ;;\n-    *) AC_MSG_ERROR(no 32-bit type, please report a bug)\n+    *) AC_MSG_ERROR([no 32-bit type, please report a bug])\n   esac\n   AC_MSG_RESULT($acx_cv_type_int32_t)\n fi\n@@ -185,7 +185,7 @@ if test \"$ac_cv_type_uintptr_t\" != yes; then\n     2) acx_cv_type_intptr_t=int16_t ;;\n     4) acx_cv_type_intptr_t=int32_t ;;\n     8) acx_cv_type_intptr_t=int64_t ;;\n-    *) AC_MSG_ERROR(no equivalent for intptr_t, please report a bug)\n+    *) AC_MSG_ERROR([no equivalent for intptr_t, please report a bug])\n   esac\n   AC_MSG_RESULT($acx_cv_type_intptr_t)\n fi"}, {"sha": "9ea1ed70c4efc9e4e4cf83fadd29124dd780198b", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc9e5e0d4e2eb568b16488044484e426c1700c/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc9e5e0d4e2eb568b16488044484e426c1700c/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=75bc9e5e0d4e2eb568b16488044484e426c1700c", "patch": "@@ -1,3 +1,7 @@\n+2010-08-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* configure: Regenerate.\n+\n 2010-04-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* aclocal.m4: Regenerate."}, {"sha": "ce319763ba4f6f14b4cf92151fca567bd2e5d7f9", "filename": "libdecnumber/configure", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc9e5e0d4e2eb568b16488044484e426c1700c/libdecnumber%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc9e5e0d4e2eb568b16488044484e426c1700c/libdecnumber%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure?ref=75bc9e5e0d4e2eb568b16488044484e426c1700c", "patch": "@@ -4101,8 +4101,7 @@ _ACEOF\n $as_echo_n \"checking for type equivalent to int8_t... \" >&6; }\n   case \"$ac_cv_sizeof_char\" in\n     1) acx_cv_type_int8_t=char ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 8-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 8-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int8_t\" >&5\n $as_echo \"$acx_cv_type_int8_t\" >&6; }\n@@ -4112,8 +4111,7 @@ $as_echo_n \"checking for type equivalent to int16_t... \" >&6; }\n   case \"$ac_cv_sizeof_int:$ac_cv_sizeof_short\" in\n     2:*) acx_cv_type_int16_t=int ;;\n     *:2) acx_cv_type_int16_t=short ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 16-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 16-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int16_t\" >&5\n $as_echo \"$acx_cv_type_int16_t\" >&6; }\n@@ -4123,8 +4121,7 @@ $as_echo_n \"checking for type equivalent to int32_t... \" >&6; }\n   case \"$ac_cv_sizeof_int:$ac_cv_sizeof_long\" in\n     4:*) acx_cv_type_int32_t=int ;;\n     *:4) acx_cv_type_int32_t=long ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 32-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 32-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int32_t\" >&5\n $as_echo \"$acx_cv_type_int32_t\" >&6; }\n@@ -4151,8 +4148,7 @@ $as_echo_n \"checking for type equivalent to intptr_t... \" >&6; }\n     2) acx_cv_type_intptr_t=int16_t ;;\n     4) acx_cv_type_intptr_t=int32_t ;;\n     8) acx_cv_type_intptr_t=int64_t ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no equivalent for intptr_t\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no equivalent for intptr_t, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_intptr_t\" >&5\n $as_echo \"$acx_cv_type_intptr_t\" >&6; }"}, {"sha": "eae41d236f6600a56b98ad76970e8a5ef08f7b96", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc9e5e0d4e2eb568b16488044484e426c1700c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc9e5e0d4e2eb568b16488044484e426c1700c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=75bc9e5e0d4e2eb568b16488044484e426c1700c", "patch": "@@ -1,3 +1,7 @@\n+2010-08-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* configure: Regenerate.\n+\n 2010-08-19  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/36158"}, {"sha": "bc4a25bf70e450e166462d914c6e336a0384477f", "filename": "libgfortran/configure", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc9e5e0d4e2eb568b16488044484e426c1700c/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc9e5e0d4e2eb568b16488044484e426c1700c/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=75bc9e5e0d4e2eb568b16488044484e426c1700c", "patch": "@@ -15442,8 +15442,7 @@ _ACEOF\n $as_echo_n \"checking for type equivalent to int8_t... \" >&6; }\n   case \"$ac_cv_sizeof_char\" in\n     1) acx_cv_type_int8_t=char ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 8-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 8-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int8_t\" >&5\n $as_echo \"$acx_cv_type_int8_t\" >&6; }\n@@ -15453,8 +15452,7 @@ $as_echo_n \"checking for type equivalent to int16_t... \" >&6; }\n   case \"$ac_cv_sizeof_int:$ac_cv_sizeof_short\" in\n     2:*) acx_cv_type_int16_t=int ;;\n     *:2) acx_cv_type_int16_t=short ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 16-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 16-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int16_t\" >&5\n $as_echo \"$acx_cv_type_int16_t\" >&6; }\n@@ -15464,8 +15462,7 @@ $as_echo_n \"checking for type equivalent to int32_t... \" >&6; }\n   case \"$ac_cv_sizeof_int:$ac_cv_sizeof_long\" in\n     4:*) acx_cv_type_int32_t=int ;;\n     *:4) acx_cv_type_int32_t=long ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 32-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 32-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int32_t\" >&5\n $as_echo \"$acx_cv_type_int32_t\" >&6; }\n@@ -15492,8 +15489,7 @@ $as_echo_n \"checking for type equivalent to intptr_t... \" >&6; }\n     2) acx_cv_type_intptr_t=int16_t ;;\n     4) acx_cv_type_intptr_t=int32_t ;;\n     8) acx_cv_type_intptr_t=int64_t ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no equivalent for intptr_t\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no equivalent for intptr_t, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_intptr_t\" >&5\n $as_echo \"$acx_cv_type_intptr_t\" >&6; }"}, {"sha": "7079bae6db87f845d83a65d0de7d03728d072e36", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc9e5e0d4e2eb568b16488044484e426c1700c/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc9e5e0d4e2eb568b16488044484e426c1700c/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=75bc9e5e0d4e2eb568b16488044484e426c1700c", "patch": "@@ -1,3 +1,7 @@\n+2010-08-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* configure: Regenerate.\n+\n 2010-07-26  Jakub Jelinek  <jakub@redhat.com>\n \n \t* libgomp.texi: Add function keyword to a couple of Fortran"}, {"sha": "9dd832380bc00af7f7386364e696ae65c4ae7a74", "filename": "libgomp/configure", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc9e5e0d4e2eb568b16488044484e426c1700c/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc9e5e0d4e2eb568b16488044484e426c1700c/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=75bc9e5e0d4e2eb568b16488044484e426c1700c", "patch": "@@ -14926,8 +14926,7 @@ _ACEOF\n $as_echo_n \"checking for type equivalent to int8_t... \" >&6; }\n   case \"$ac_cv_sizeof_char\" in\n     1) acx_cv_type_int8_t=char ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 8-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 8-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int8_t\" >&5\n $as_echo \"$acx_cv_type_int8_t\" >&6; }\n@@ -14937,8 +14936,7 @@ $as_echo_n \"checking for type equivalent to int16_t... \" >&6; }\n   case \"$ac_cv_sizeof_int:$ac_cv_sizeof_short\" in\n     2:*) acx_cv_type_int16_t=int ;;\n     *:2) acx_cv_type_int16_t=short ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 16-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 16-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int16_t\" >&5\n $as_echo \"$acx_cv_type_int16_t\" >&6; }\n@@ -14948,8 +14946,7 @@ $as_echo_n \"checking for type equivalent to int32_t... \" >&6; }\n   case \"$ac_cv_sizeof_int:$ac_cv_sizeof_long\" in\n     4:*) acx_cv_type_int32_t=int ;;\n     *:4) acx_cv_type_int32_t=long ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 32-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 32-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int32_t\" >&5\n $as_echo \"$acx_cv_type_int32_t\" >&6; }\n@@ -14976,8 +14973,7 @@ $as_echo_n \"checking for type equivalent to intptr_t... \" >&6; }\n     2) acx_cv_type_intptr_t=int16_t ;;\n     4) acx_cv_type_intptr_t=int32_t ;;\n     8) acx_cv_type_intptr_t=int64_t ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no equivalent for intptr_t\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no equivalent for intptr_t, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_intptr_t\" >&5\n $as_echo \"$acx_cv_type_intptr_t\" >&6; }\n@@ -15376,7 +15372,7 @@ rm -f core conftest.err conftest.$ac_objext \\\n \tCFLAGS=\"$chktls_save_CFLAGS\"\n \tif test \"X$thread_CFLAGS\" != Xfailed; then\n \t  CFLAGS=\"$thread_CFLAGS $chktls_save_CFLAGS\"\n-\t  if test \"$cross_compiling\" = yes; then :\n+ \t  \t  \t  \t  \t  \t  if test \"$cross_compiling\" = yes; then :\n   { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n $as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n as_fn_error \"cannot run test program while cross compiling"}, {"sha": "aa44424026983abd83f8b393aaf38a7ecb05fe1f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc9e5e0d4e2eb568b16488044484e426c1700c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc9e5e0d4e2eb568b16488044484e426c1700c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=75bc9e5e0d4e2eb568b16488044484e426c1700c", "patch": "@@ -1,3 +1,7 @@\n+2010-08-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* configure: Regenerate.\n+\n 2010-08-18  Kostya Serebryany <kcc@google.com>\n \t    Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "0032823bcfd370193acdf8b7ec904a824faaa254", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75bc9e5e0d4e2eb568b16488044484e426c1700c/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75bc9e5e0d4e2eb568b16488044484e426c1700c/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=75bc9e5e0d4e2eb568b16488044484e426c1700c", "patch": "@@ -58053,8 +58053,7 @@ _ACEOF\n $as_echo_n \"checking for type equivalent to int8_t... \" >&6; }\n   case \"$ac_cv_sizeof_char\" in\n     1) acx_cv_type_int8_t=char ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 8-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 8-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int8_t\" >&5\n $as_echo \"$acx_cv_type_int8_t\" >&6; }\n@@ -58064,8 +58063,7 @@ $as_echo_n \"checking for type equivalent to int16_t... \" >&6; }\n   case \"$ac_cv_sizeof_int:$ac_cv_sizeof_short\" in\n     2:*) acx_cv_type_int16_t=int ;;\n     *:2) acx_cv_type_int16_t=short ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 16-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 16-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int16_t\" >&5\n $as_echo \"$acx_cv_type_int16_t\" >&6; }\n@@ -58075,8 +58073,7 @@ $as_echo_n \"checking for type equivalent to int32_t... \" >&6; }\n   case \"$ac_cv_sizeof_int:$ac_cv_sizeof_long\" in\n     4:*) acx_cv_type_int32_t=int ;;\n     *:4) acx_cv_type_int32_t=long ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no 32-bit type\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no 32-bit type, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_int32_t\" >&5\n $as_echo \"$acx_cv_type_int32_t\" >&6; }\n@@ -58103,8 +58100,7 @@ $as_echo_n \"checking for type equivalent to intptr_t... \" >&6; }\n     2) acx_cv_type_intptr_t=int16_t ;;\n     4) acx_cv_type_intptr_t=int32_t ;;\n     8) acx_cv_type_intptr_t=int64_t ;;\n-    *) { as_fn_set_status please report a bug\n-as_fn_error \"no equivalent for intptr_t\" \"$LINENO\" 5; }\n+    *) as_fn_error \"no equivalent for intptr_t, please report a bug\" \"$LINENO\" 5\n   esac\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_type_intptr_t\" >&5\n $as_echo \"$acx_cv_type_intptr_t\" >&6; }"}]}