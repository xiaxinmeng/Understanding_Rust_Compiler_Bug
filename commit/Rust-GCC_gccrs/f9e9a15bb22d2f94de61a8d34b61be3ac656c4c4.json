{"sha": "f9e9a15bb22d2f94de61a8d34b61be3ac656c4c4", "node_id": "C_kwDOANBUbNoAKGY5ZTlhMTViYjIyZDJmOTRkZTYxYThkMzRiNjFiZTNhYzY1NmM0YzQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-25T10:06:15Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-25T10:06:15Z"}, "message": "Revert \"gcc-changelog: temporarily disable check_line_start\"\n\nThis reverts commit a5878983d53db7513edb0e6bd99250dbb0c7d147.", "tree": {"sha": "775497b750b7e22d5728800d00b3c21e660fcb0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/775497b750b7e22d5728800d00b3c21e660fcb0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9e9a15bb22d2f94de61a8d34b61be3ac656c4c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e9a15bb22d2f94de61a8d34b61be3ac656c4c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9e9a15bb22d2f94de61a8d34b61be3ac656c4c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e9a15bb22d2f94de61a8d34b61be3ac656c4c4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a1b4f1d3dc29be8673f6f4d96aaf49021614b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a1b4f1d3dc29be8673f6f4d96aaf49021614b82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a1b4f1d3dc29be8673f6f4d96aaf49021614b82"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "3bd671011f20de8f5156f6374e831959405cb531", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9e9a15bb22d2f94de61a8d34b61be3ac656c4c4/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9e9a15bb22d2f94de61a8d34b61be3ac656c4c4/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=f9e9a15bb22d2f94de61a8d34b61be3ac656c4c4", "patch": "@@ -615,8 +615,6 @@ def check_for_broken_parentheses(self):\n                 self.errors.append(Error(msg, entry.parentheses_stack[-1]))\n \n     def check_line_start(self):\n-        # FIXME: temporarily disable\n-        return\n         for entry in self.changelog_entries:\n             for line in entry.lines:\n                 if line.startswith('\\t '):"}]}