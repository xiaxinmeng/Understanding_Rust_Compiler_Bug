{"sha": "6ba30237b918e2d8c35bf481767ccd525499625e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJhMzAyMzdiOTE4ZTJkOGMzNWJmNDgxNzY3Y2NkNTI1NDk5NjI1ZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-08-18T16:32:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-08-18T16:32:23Z"}, "message": "re PR libstdc++/50119 ([C++0x] copy_n advances InputIterator one more time than necessary)\n\n2011-08-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/50119\n\t* include/bits/stl_algo.h (__copy_n(_InputIterator, _Size,\n\t_OutputIterator, input_iterator_tag)): Fix.\n\t* testsuite/25_algorithms/copy_n/50119.cc: New.\n\nFrom-SVN: r177871", "tree": {"sha": "f55f3e9a1fac35f32e7847001fe076ec7532f81c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f55f3e9a1fac35f32e7847001fe076ec7532f81c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ba30237b918e2d8c35bf481767ccd525499625e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba30237b918e2d8c35bf481767ccd525499625e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba30237b918e2d8c35bf481767ccd525499625e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba30237b918e2d8c35bf481767ccd525499625e/comments", "author": null, "committer": null, "parents": [{"sha": "df385b9c2b6e05ec699eba7fbf8fc958a17f7a03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df385b9c2b6e05ec699eba7fbf8fc958a17f7a03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df385b9c2b6e05ec699eba7fbf8fc958a17f7a03"}], "stats": {"total": 75, "additions": 70, "deletions": 5}, "files": [{"sha": "2145f89ea6d6171a80d46bceb0e1070de4458807", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba30237b918e2d8c35bf481767ccd525499625e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba30237b918e2d8c35bf481767ccd525499625e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6ba30237b918e2d8c35bf481767ccd525499625e", "patch": "@@ -1,7 +1,14 @@\n+2011-08-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/50119\n+\t* include/bits/stl_algo.h (__copy_n(_InputIterator, _Size,\n+\t_OutputIterator, input_iterator_tag)): Fix.\n+\t* testsuite/25_algorithms/copy_n/50119.cc: New.\n+\n 2011-08-18  Marc Glisse  <marc.glisse@normalesup.org>\n \t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n-\tPR libstdc++-v3/1773\n+\tPR libstdc++/1773\n \t* config/os/solaris2.7: Rename to config/os/solaris2.9.\n \t* config/os/solaris/solaris2.9/os_defines.h\n \t(__CORRECT_ISO_CPP_MATH_H_PROTO1)"}, {"sha": "10c7e2d0756344f95dc00903dd273249d12c096d", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba30237b918e2d8c35bf481767ccd525499625e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba30237b918e2d8c35bf481767ccd525499625e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=6ba30237b918e2d8c35bf481767ccd525499625e", "patch": "@@ -979,11 +979,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     __copy_n(_InputIterator __first, _Size __n,\n \t     _OutputIterator __result, input_iterator_tag)\n     {\n-      for (; __n > 0; --__n)\n+      if (__n > 0)\n \t{\n-\t  *__result = *__first;\n-\t  ++__first;\n-\t  ++__result;\n+\t  while (true)\n+\t    {\n+\t      *__result = *__first;\n+\t      ++__result;\n+\t      if (--__n > 0)\n+\t\t++__first;\n+\t      else\n+\t\tbreak;\n+\t    }\n \t}\n       return __result;\n     }"}, {"sha": "6803f964467ab65847aa32420a2c64004e675031", "filename": "libstdc++-v3/testsuite/25_algorithms/copy_n/50119.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba30237b918e2d8c35bf481767ccd525499625e/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2F50119.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba30237b918e2d8c35bf481767ccd525499625e/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2F50119.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_n%2F50119.cc?ref=6ba30237b918e2d8c35bf481767ccd525499625e", "patch": "@@ -0,0 +1,52 @@\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <algorithm>\n+#include <vector>\n+#include <sstream>\n+#include <iterator>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/50119\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  vector<int> v;\n+  istringstream s(\"1 2 3 4 5\");\n+\n+  copy_n(istream_iterator<int>(s), 2, back_inserter(v));\n+  VERIFY( v.size() == 2 );\n+  VERIFY( v[0] == 1 );\n+  VERIFY( v[1] == 2 );\n+\n+  copy_n(istream_iterator<int>(s), 2, back_inserter(v));\n+  VERIFY( v.size() == 4 );\n+  VERIFY( v[0] == 1 );\n+  VERIFY( v[1] == 2 );\n+  VERIFY( v[2] == 3 );\n+  VERIFY( v[3] == 4 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}