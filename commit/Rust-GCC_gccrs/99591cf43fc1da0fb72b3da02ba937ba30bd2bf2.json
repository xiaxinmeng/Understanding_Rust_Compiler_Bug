{"sha": "99591cf43fc1da0fb72b3da02ba937ba30bd2bf2", "node_id": "C_kwDOANBUbNoAKDk5NTkxY2Y0M2ZjMWRhMGZiNzJiM2RhMDJiYTkzN2JhMzBiZDJiZjI", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2022-03-25T04:41:12Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2022-03-26T14:15:34Z"}, "message": "x86: Use x constraint on SSSE3 patterns with MMX operands\n\nSince PHADDW/PHADDD/PHADDSW/PHSUBW/PHSUBD/PHSUBSW/PSIGNB/PSIGNW/PSIGND\nhave no AVX512 version, replace the \"Yv\" register constraint with the\n\"x\" register constraint.\n\n\tPR target/105052\n\t* config/i386/sse.md (ssse3_ph<plusminus_mnemonic>wv4hi3):\n\tReplace \"Yv\" with \"x\".\n\t(ssse3_ph<plusminus_mnemonic>dv2si3): Likewise.\n\t(ssse3_psign<mode>3): Likewise.", "tree": {"sha": "7d830be70b0cddcc71b04ad47788631bb862658b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d830be70b0cddcc71b04ad47788631bb862658b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99591cf43fc1da0fb72b3da02ba937ba30bd2bf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99591cf43fc1da0fb72b3da02ba937ba30bd2bf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99591cf43fc1da0fb72b3da02ba937ba30bd2bf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99591cf43fc1da0fb72b3da02ba937ba30bd2bf2/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c8993c75309901e03418eba1d6239b9a39a43b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8993c75309901e03418eba1d6239b9a39a43b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c8993c75309901e03418eba1d6239b9a39a43b7"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "29802d00ce686bbe8f8d79fd6d9a7b6674c10550", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99591cf43fc1da0fb72b3da02ba937ba30bd2bf2/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99591cf43fc1da0fb72b3da02ba937ba30bd2bf2/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=99591cf43fc1da0fb72b3da02ba937ba30bd2bf2", "patch": "@@ -20221,12 +20221,12 @@\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn_and_split \"ssse3_ph<plusminus_mnemonic>wv4hi3\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=y,x,Yv\")\n+  [(set (match_operand:V4HI 0 \"register_operand\" \"=y,x,x\")\n \t(ssse3_plusminus:V4HI\n \t  (vec_select:V4HI\n \t    (vec_concat:V8HI\n-\t      (match_operand:V4HI 1 \"register_operand\" \"0,0,Yv\")\n-\t      (match_operand:V4HI 2 \"register_mmxmem_operand\" \"ym,x,Yv\"))\n+\t      (match_operand:V4HI 1 \"register_operand\" \"0,0,x\")\n+\t      (match_operand:V4HI 2 \"register_mmxmem_operand\" \"ym,x,x\"))\n \t    (parallel\n \t      [(const_int 0) (const_int 2) (const_int 4) (const_int 6)]))\n \t  (vec_select:V4HI\n@@ -20308,12 +20308,12 @@\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn_and_split \"ssse3_ph<plusminus_mnemonic>dv2si3\"\n-  [(set (match_operand:V2SI 0 \"register_operand\" \"=y,x,Yv\")\n+  [(set (match_operand:V2SI 0 \"register_operand\" \"=y,x,x\")\n \t(plusminus:V2SI\n \t  (vec_select:V2SI\n \t    (vec_concat:V4SI\n-\t      (match_operand:V2SI 1 \"register_operand\" \"0,0,Yv\")\n-\t      (match_operand:V2SI 2 \"register_mmxmem_operand\" \"ym,x,Yv\"))\n+\t      (match_operand:V2SI 1 \"register_operand\" \"0,0,x\")\n+\t      (match_operand:V2SI 2 \"register_mmxmem_operand\" \"ym,x,x\"))\n \t    (parallel [(const_int 0) (const_int 2)]))\n \t  (vec_select:V2SI\n \t    (vec_concat:V4SI (match_dup 1) (match_dup 2))\n@@ -20811,10 +20811,10 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"ssse3_psign<mode>3\"\n-  [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y,x,Yv\")\n+  [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y,x,x\")\n \t(unspec:MMXMODEI\n-\t  [(match_operand:MMXMODEI 1 \"register_operand\" \"0,0,Yv\")\n-\t   (match_operand:MMXMODEI 2 \"register_mmxmem_operand\" \"ym,x,Yv\")]\n+\t  [(match_operand:MMXMODEI 1 \"register_operand\" \"0,0,x\")\n+\t   (match_operand:MMXMODEI 2 \"register_mmxmem_operand\" \"ym,x,x\")]\n \t  UNSPEC_PSIGN))]\n   \"(TARGET_MMX || TARGET_MMX_WITH_SSE) && TARGET_SSSE3\"\n   \"@"}]}