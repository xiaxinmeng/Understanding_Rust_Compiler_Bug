{"sha": "4e7739b25ab46d9c573222680ad2862d263c909e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU3NzM5YjI1YWI0NmQ5YzU3MzIyMjY4MGFkMjg2MmQyNjNjOTA5ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-08-08T22:01:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-08-08T22:01:29Z"}, "message": "re PR c++/67159 ([c++concepts] Segfault while diagnosing constraint violation)\n\n\tPR c++/67159\n\t* constraint.cc (finish_template_introduction):\n\tSET_NON_DEFAULT_TEMPLATE_ARGS_COUNT.\n\nFrom-SVN: r226738", "tree": {"sha": "e2c799f9127cd9e5418f54ff0ee0649b9040aae8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2c799f9127cd9e5418f54ff0ee0649b9040aae8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e7739b25ab46d9c573222680ad2862d263c909e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e7739b25ab46d9c573222680ad2862d263c909e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e7739b25ab46d9c573222680ad2862d263c909e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e7739b25ab46d9c573222680ad2862d263c909e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d6729a4291a69749ea7faf55bba2c4520ca6a6a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6729a4291a69749ea7faf55bba2c4520ca6a6a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6729a4291a69749ea7faf55bba2c4520ca6a6a9"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "f04b15c0f628a815a43cbd7ef3bd15f4f6429638", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7739b25ab46d9c573222680ad2862d263c909e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7739b25ab46d9c573222680ad2862d263c909e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4e7739b25ab46d9c573222680ad2862d263c909e", "patch": "@@ -1,5 +1,9 @@\n 2015-08-08  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/67159\n+\t* constraint.cc (finish_template_introduction):\n+\tSET_NON_DEFAULT_TEMPLATE_ARGS_COUNT.\n+\n \tPR c++/67142\n \t* pt.c (equal): Make sure tmpl is actually a template.\n "}, {"sha": "c981212271d4649cf2ba70517dbeae008d5ad90b", "filename": "gcc/cp/constraint.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7739b25ab46d9c573222680ad2862d263c909e/gcc%2Fcp%2Fconstraint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7739b25ab46d9c573222680ad2862d263c909e/gcc%2Fcp%2Fconstraint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstraint.cc?ref=4e7739b25ab46d9c573222680ad2862d263c909e", "patch": "@@ -1337,6 +1337,7 @@ finish_template_introduction (tree tmpl_decl, tree intro_list)\n       tree parm = TREE_VEC_ELT (parm_list, n);\n       TREE_VEC_ELT (check_args, n) = template_parm_to_arg (parm);\n     }\n+  SET_NON_DEFAULT_TEMPLATE_ARGS_COUNT (check_args, n);\n \n   /* If the template expects more parameters we should be able\n      to use the defaults from our deduced concept.  */"}, {"sha": "7c360cc3943b1d9dc1242ef98e7e4b57d049e614", "filename": "gcc/testsuite/g++.dg/concepts/diagnostic1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e7739b25ab46d9c573222680ad2862d263c909e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e7739b25ab46d9c573222680ad2862d263c909e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fdiagnostic1.C?ref=4e7739b25ab46d9c573222680ad2862d263c909e", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/67159\n+// { dg-options -std=c++1z }\n+\n+template <class T>\n+concept bool R = requires (T& t) {\n+  { t.begin() } -> T\n+};\n+\n+struct foo {\n+  int* begin();\n+};\n+\n+R{T}\n+constexpr bool f() { return true; }\n+\n+static_assert(f<foo>());\t// { dg-error \"\" }"}]}