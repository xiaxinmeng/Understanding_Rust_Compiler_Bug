{"sha": "b4b63e32e6e0d8b8d499faf44c8de91231d26ec8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRiNjNlMzJlNmUwZDhiOGQ0OTlmYWY0NGM4ZGU5MTIzMWQyNmVjOA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@snafu.rutgers.edu", "date": "1999-05-12T17:04:30Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-05-12T17:04:30Z"}, "message": "expr.c (expand_invoke): Mark parameter `nargs' with ATTRIBUTE_UNUSED.\n\n        * expr.c (expand_invoke): Mark parameter `nargs' with\n        ATTRIBUTE_UNUSED.\n        (PRE_LOOKUP_SWITCH): Likewise for variable `match'.\n        * jcf-io.c (jcf_unexpected_eof): Mark parameter `count' with\n        ATTRIBUTE_UNUSED.\n        * jcf-reader.c (get_attribute): Cast a value to long\n        when comparing against a signed expression.  Likewise.\n\nFrom-SVN: r26907", "tree": {"sha": "70715ebcac70670659d707679cdd0ba84cbf5d91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70715ebcac70670659d707679cdd0ba84cbf5d91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8/comments", "author": null, "committer": null, "parents": [{"sha": "34ba56fa810df1980ccdfcf300cd7ab620d34b90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ba56fa810df1980ccdfcf300cd7ab620d34b90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34ba56fa810df1980ccdfcf300cd7ab620d34b90"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "588e1aff19e00372cca135530253be4a6371d49e", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=b4b63e32e6e0d8b8d499faf44c8de91231d26ec8", "patch": "@@ -1,5 +1,15 @@\n 1999-05-12  Kaveh R. Ghazi  <ghazi@snafu.rutgers.edu>\n \n+\t* expr.c (expand_invoke): Mark parameter `nargs' with\n+\tATTRIBUTE_UNUSED.\n+\t(PRE_LOOKUP_SWITCH): Likewise for variable `match'.\n+\n+\t* jcf-io.c (jcf_unexpected_eof): Mark parameter `count' with\n+\tATTRIBUTE_UNUSED.\n+\n+\t* jcf-reader.c (get_attribute): Cast a value to long\n+\twhen comparing against a signed expression.  Likewise.\n+\n \t* lex.h: Never define HOST_WIDE_INT, HOST_BITS_PER_WIDE_INT or\n \tHOST_BITS_PER_CHAR.\n "}, {"sha": "d975c42c5ed72cd9cbe219121768523013634fe9", "filename": "gcc/java/expr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=b4b63e32e6e0d8b8d499faf44c8de91231d26ec8", "patch": "@@ -1565,7 +1565,7 @@ static void\n expand_invoke (opcode, method_ref_index, nargs)\n      int opcode;\n      int method_ref_index;\n-     int nargs;\n+     int nargs ATTRIBUTE_UNUSED;\n {\n   tree method_signature = COMPONENT_REF_SIGNATURE(&current_jcf->cpool, method_ref_index);\n   tree method_name = COMPONENT_REF_NAME (&current_jcf->cpool, method_ref_index);\n@@ -2118,7 +2118,8 @@ expand_byte_code (jcf, method)\n     NOTE_LABEL (default_offset+oldpc);\t\t\t\t\t\\\n     if (npairs >= 0)\t\t\t\t\t\t\t\\\n       while (--npairs >= 0) {\t\t\t\t\t\t\\\n-       jint match = IMMEDIATE_s4; jint offset = IMMEDIATE_s4;\t\t\\\n+       jint match ATTRIBUTE_UNUSED = IMMEDIATE_s4;\t\t\t\\\n+       jint offset = IMMEDIATE_s4;\t\t\t\t\t\\\n        NOTE_LABEL (offset+oldpc); }\t\t\t\t\t\\\n   }\n "}, {"sha": "95332186545bf70efcf9e815847cf474d1f4ba57", "filename": "gcc/java/jcf-io.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8/gcc%2Fjava%2Fjcf-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8/gcc%2Fjava%2Fjcf-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-io.c?ref=b4b63e32e6e0d8b8d499faf44c8de91231d26ec8", "patch": "@@ -36,7 +36,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n int\n DEFUN(jcf_unexpected_eof, (jcf, count),\n-      JCF *jcf AND int count)\n+      JCF *jcf AND int count ATTRIBUTE_UNUSED)\n {\n   if (jcf->filename)\n     fprintf (stderr, \"Premature end of .class file %s.\\n\", jcf->filename);"}, {"sha": "c6207a235c933ae7abe682ca61a493f7d7ee58c1", "filename": "gcc/java/jcf-reader.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8/gcc%2Fjava%2Fjcf-reader.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4b63e32e6e0d8b8d499faf44c8de91231d26ec8/gcc%2Fjava%2Fjcf-reader.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-reader.c?ref=b4b63e32e6e0d8b8d499faf44c8de91231d26ec8", "patch": "@@ -35,7 +35,7 @@ DEFUN(get_attribute, (jcf),\n   uint32 start_pos = JCF_TELL(jcf);\n   int name_length;\n   unsigned char *name_data;\n-  JCF_FILL (jcf, attribute_length);\n+  JCF_FILL (jcf, (long) attribute_length);\n   if (attribute_name <= 0 || attribute_name >= JPOOL_SIZE(jcf))\n     return -2;\n   if (JPOOL_TAG (jcf, attribute_name) != CONSTANT_Utf8)\n@@ -128,7 +128,7 @@ DEFUN(get_attribute, (jcf),\n       JCF_SKIP (jcf, attribute_length);\n #endif\n     }\n-  if (start_pos + attribute_length != JCF_TELL(jcf))\n+  if ((long) (start_pos + attribute_length) != JCF_TELL(jcf))\n     return -1;\n   return 0;\n }"}]}