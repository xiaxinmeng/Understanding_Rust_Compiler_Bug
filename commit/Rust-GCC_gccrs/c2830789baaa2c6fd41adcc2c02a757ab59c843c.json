{"sha": "c2830789baaa2c6fd41adcc2c02a757ab59c843c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI4MzA3ODliYWFhMmM2ZmQ0MWFkY2MyYzAyYTc1N2FiNTljODQzYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-07-25T20:36:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-07-25T20:36:06Z"}, "message": "PR libstdc++/53984 handle exceptions in basic_istream::sentry\n\n\tPR libstdc++/53984\n\t* include/bits/basic_ios.h (basic_ios::_M_setstate): Adjust comment.\n\t* include/bits/istream.tcc (basic_istream::sentry): Handle exceptions\n\tduring construction.\n\t* include/std/istream: Adjust comments for formatted input functions\n\tand unformatted input functions.\n\t* testsuite/27_io/basic_fstream/53984.cc: New.\n\t* testsuite/27_io/basic_istream/sentry/char/53984.cc: New.\n\nFrom-SVN: r250545", "tree": {"sha": "3c31212ec06206dca624076021ca38ab2d22dbb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c31212ec06206dca624076021ca38ab2d22dbb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2830789baaa2c6fd41adcc2c02a757ab59c843c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2830789baaa2c6fd41adcc2c02a757ab59c843c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2830789baaa2c6fd41adcc2c02a757ab59c843c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2830789baaa2c6fd41adcc2c02a757ab59c843c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a74bc411bce0cdc1801574e5d2b4fa3fb143b0ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a74bc411bce0cdc1801574e5d2b4fa3fb143b0ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a74bc411bce0cdc1801574e5d2b4fa3fb143b0ee"}], "stats": {"total": 152, "additions": 123, "deletions": 29}, "files": [{"sha": "7c064b9527e70c724cbc137a8987d9676b28f0b0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c2830789baaa2c6fd41adcc2c02a757ab59c843c", "patch": "@@ -1,5 +1,14 @@\n 2017-07-25  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/53984\n+\t* include/bits/basic_ios.h (basic_ios::_M_setstate): Adjust comment.\n+\t* include/bits/istream.tcc (basic_istream::sentry): Handle exceptions\n+\tduring construction.\n+\t* include/std/istream: Adjust comments for formatted input functions\n+\tand unformatted input functions.\n+\t* testsuite/27_io/basic_fstream/53984.cc: New.\n+\t* testsuite/27_io/basic_istream/sentry/char/53984.cc: New.\n+\n \t* include/bits/ios_base.h (ios_base::io_state, ios_base::open_mode)\n \t(ios_base::seek_dir): Remove for C++17.\n \t* include/std/streambuf (basic_streambuf::stossc): Remove for C++17."}, {"sha": "f0b8682b4fe4ce0a7cceb62c74d78672ccb82226", "filename": "libstdc++-v3/include/bits/basic_ios.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h?ref=c2830789baaa2c6fd41adcc2c02a757ab59c843c", "patch": "@@ -157,8 +157,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       setstate(iostate __state)\n       { this->clear(this->rdstate() | __state); }\n \n-      // Flip the internal state on for the proper state bits, then re\n-      // throws the propagated exception if bit also set in\n+      // Flip the internal state on for the proper state bits, then\n+      // rethrows the propagated exception if bit also set in\n       // exceptions().\n       void\n       _M_setstate(iostate __state)"}, {"sha": "92df9d126ef0c361de540317b4503691b17245a9", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 29, "deletions": 21, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=c2830789baaa2c6fd41adcc2c02a757ab59c843c", "patch": "@@ -48,28 +48,36 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       ios_base::iostate __err = ios_base::goodbit;\n       if (__in.good())\n-\t{\n-\t  if (__in.tie())\n-\t    __in.tie()->flush();\n-\t  if (!__noskip && bool(__in.flags() & ios_base::skipws))\n-\t    {\n-\t      const __int_type __eof = traits_type::eof();\n-\t      __streambuf_type* __sb = __in.rdbuf();\n-\t      __int_type __c = __sb->sgetc();\n-\n-\t      const __ctype_type& __ct = __check_facet(__in._M_ctype);\n-\t      while (!traits_type::eq_int_type(__c, __eof)\n-\t\t     && __ct.is(ctype_base::space, \n-\t\t\t\ttraits_type::to_char_type(__c)))\n-\t\t__c = __sb->snextc();\n+\t__try\n+\t  {\n+\t    if (__in.tie())\n+\t      __in.tie()->flush();\n+\t    if (!__noskip && bool(__in.flags() & ios_base::skipws))\n+\t      {\n+\t\tconst __int_type __eof = traits_type::eof();\n+\t\t__streambuf_type* __sb = __in.rdbuf();\n+\t\t__int_type __c = __sb->sgetc();\n+\n+\t\tconst __ctype_type& __ct = __check_facet(__in._M_ctype);\n+\t\twhile (!traits_type::eq_int_type(__c, __eof)\n+\t\t       && __ct.is(ctype_base::space,\n+\t\t\t\t  traits_type::to_char_type(__c)))\n+\t\t  __c = __sb->snextc();\n \n-\t      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n-\t      // 195. Should basic_istream::sentry's constructor ever\n-\t      // set eofbit?\n-\t      if (traits_type::eq_int_type(__c, __eof))\n-\t\t__err |= ios_base::eofbit;\n-\t    }\n-\t}\n+\t\t// _GLIBCXX_RESOLVE_LIB_DEFECTS\n+\t\t// 195. Should basic_istream::sentry's constructor ever\n+\t\t// set eofbit?\n+\t\tif (traits_type::eq_int_type(__c, __eof))\n+\t\t  __err |= ios_base::eofbit;\n+\t      }\n+\t  }\n+\t__catch(__cxxabiv1::__forced_unwind&)\n+\t  {\n+\t    __in._M_setstate(ios_base::badbit);\n+\t    __throw_exception_again;\n+\t  }\n+\t__catch(...)\n+\t  { __in._M_setstate(ios_base::badbit); }\n \n       if (__in.good() && __err == ios_base::goodbit)\n \t_M_ok = true;"}, {"sha": "233cc6b01458b73f289e797fb97be32a5ccd7836", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=c2830789baaa2c6fd41adcc2c02a757ab59c843c", "patch": "@@ -150,9 +150,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  whatever data is appropriate for the type of the argument.\n        *\n        *  If an exception is thrown during extraction, ios_base::badbit\n-       *  will be turned on in the stream's error state without causing an\n-       *  ios_base::failure to be thrown.  The original exception will then\n-       *  be rethrown.\n+       *  will be turned on in the stream's error state (without causing an\n+       *  ios_base::failure to be thrown) and the original exception will\n+       *  be rethrown if badbit is set in the exceptions mask.\n       */\n \n       //@{\n@@ -286,9 +286,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  by gcount().\n        *\n        *  If an exception is thrown during extraction, ios_base::badbit\n-       *  will be turned on in the stream's error state without causing an\n-       *  ios_base::failure to be thrown.  The original exception will then\n-       *  be rethrown.\n+       *  will be turned on in the stream's error state (without causing an\n+       *  ios_base::failure to be thrown) and the original exception will\n+       *  be rethrown if badbit is set in the exceptions mask.\n       */\n \n       /**"}, {"sha": "e84072e6a909430e1c70ccf2372dcf5f509d6036", "filename": "libstdc++-v3/testsuite/27_io/basic_fstream/53984.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_fstream%2F53984.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_fstream%2F53984.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_fstream%2F53984.cc?ref=c2830789baaa2c6fd41adcc2c02a757ab59c843c", "patch": "@@ -0,0 +1,36 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-require-file-io \"\" }\n+\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::fstream in(\".\");\n+  int x;\n+  in >> x;\n+  VERIFY( in.bad() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "9c08c7236dacd717f80c22f5b55ca43f0112d2f3", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/sentry/char/53984.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F53984.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2830789baaa2c6fd41adcc2c02a757ab59c843c/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F53984.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F53984.cc?ref=c2830789baaa2c6fd41adcc2c02a757ab59c843c", "patch": "@@ -0,0 +1,41 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <streambuf>\n+#include <istream>\n+#include <testsuite_hooks.h>\n+\n+struct SB : std::streambuf\n+{\n+  virtual int_type underflow() { throw 1; }\n+};\n+\n+void\n+test01()\n+{\n+  SB sb;\n+  std::istream is(&sb);\n+  int i;\n+  is >> i;\n+  VERIFY( is.bad() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}