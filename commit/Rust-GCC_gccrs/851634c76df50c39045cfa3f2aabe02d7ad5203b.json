{"sha": "851634c76df50c39045cfa3f2aabe02d7ad5203b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUxNjM0Yzc2ZGY1MGMzOTA0NWNmYTNmMmFhYmUwMmQ3YWQ1MjAzYg==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2012-04-26T08:28:39Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2012-04-26T08:28:39Z"}, "message": "Add sparc Niagara4 scheduling description and tweaks.\n\ngcc/\n\n\t* config/sparc/niagara4.md: New file.\n\t* config/sparc/sparc.md: Include it.\n\t* config/sparc/sparc.c (niagara4_costs): New processor costs.\n\t(sparc_option_override): Use it.\n\t(sparc_use_sched_lookahead): Return 2 for niagara4.\n\t(sparc_issue_rate): Likewise.\n\nFrom-SVN: r186864", "tree": {"sha": "af345724fb89a656af5b3911bcf46216b06db8bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af345724fb89a656af5b3911bcf46216b06db8bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/851634c76df50c39045cfa3f2aabe02d7ad5203b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/851634c76df50c39045cfa3f2aabe02d7ad5203b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/851634c76df50c39045cfa3f2aabe02d7ad5203b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/851634c76df50c39045cfa3f2aabe02d7ad5203b/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afa3ed855f0f1f76b1a428ff15a4ba7ef489c44b"}], "stats": {"total": 126, "additions": 122, "deletions": 4}, "files": [{"sha": "ccddd55767c037358efc85fd61c2645132901d16", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851634c76df50c39045cfa3f2aabe02d7ad5203b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851634c76df50c39045cfa3f2aabe02d7ad5203b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=851634c76df50c39045cfa3f2aabe02d7ad5203b", "patch": "@@ -1,5 +1,12 @@\n 2012-04-26  David S. Miller  <davem@davemloft.net>\n \n+\t* config/sparc/niagara4.md: New file.\n+\t* config/sparc/sparc.md: Include it.\n+\t* config/sparc/sparc.c (niagara4_costs): New processor costs.\n+\t(sparc_option_override): Use it.\n+\t(sparc_use_sched_lookahead): Return 2 for niagara4.\n+\t(sparc_issue_rate): Likewise.\n+\n \t* config/sparc/sparc.md (attr type): Delete 'fgm_cmp'.\n \t(fpack16_vis, fpackfix_vis, fpack32_vis): Set type to fgm_pack.\n \t(fmul8x16_vis, fmul8x16au_vis, fmul8x16al_vis, fmul8sux16_vis,"}, {"sha": "f1f83b67a6614972c74a97455016e0cd75c0972c", "filename": "gcc/config/sparc/niagara4.md", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851634c76df50c39045cfa3f2aabe02d7ad5203b/gcc%2Fconfig%2Fsparc%2Fniagara4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851634c76df50c39045cfa3f2aabe02d7ad5203b/gcc%2Fconfig%2Fsparc%2Fniagara4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fniagara4.md?ref=851634c76df50c39045cfa3f2aabe02d7ad5203b", "patch": "@@ -0,0 +1,83 @@\n+;; Scheduling description for Niagara-4\n+;;   Copyright (C) 2012 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify\n+;; it under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful,\n+;; but WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+;; GNU General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_automaton \"niagara4_0\")\n+\n+(define_cpu_unit \"n4_slot0,n4_slot1\" \"niagara4_0\")\n+(define_reservation \"n4_single_issue\" \"n4_slot0 + n4_slot1\")\n+\n+(define_insn_reservation \"n4_single\" 1\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"multi,savew,flushw,iflush,trap,gsr\"))\n+  \"n4_single_issue\")\n+\n+(define_insn_reservation \"n4_integer\" 1\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"ialu,ialuX,shift,cmove,compare\"))\n+  \"(n4_slot0 | n4_slot1)\")\n+\n+(define_insn_reservation \"n4_imul\" 12\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"imul\"))\n+  \"(n4_slot0 | n4_slot1), nothing*11\")\n+\n+(define_insn_reservation \"n4_idiv\" 35\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"idiv\"))\n+  \"(n4_slot0 | n4_slot1), nothing*34\")\n+\n+(define_insn_reservation \"n4_load\" 5\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"load,fpload,sload\"))\n+  \"n4_slot0, nothing*4\")\n+\n+(define_insn_reservation \"n4_store\" 1\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"store,fpstore\"))\n+  \"n4_slot0\")\n+\n+(define_insn_reservation \"n4_cti\" 2\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"branch,call,sibcall,call_no_delay_slot,uncond_branch,return\"))\n+  \"n4_slot1, nothing\")\n+\n+(define_insn_reservation \"n4_fp\" 11\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"fpmove,fpcmove,fpcrmove,fp,fpcmp,fpmul\"))\n+  \"n4_slot1, nothing*10\")\n+\n+(define_insn_reservation \"n4_array\" 12\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"array,edge,edgen\"))\n+  \"n4_slot1, nothing*11\")\n+\n+(define_insn_reservation \"n4_vis\" 11\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"fga,fgm_pack,fgm_mul,fgm_pdist\"))\n+  \"n4_slot1, nothing*10\")\n+\n+(define_insn_reservation \"n4_fpdivs\" 24\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"fpdivs,fpsqrts\"))\n+  \"n4_slot1, nothing*23\")\n+\n+(define_insn_reservation \"n4_fpdivd\" 37\n+  (and (eq_attr \"cpu\" \"niagara4\")\n+    (eq_attr \"type\" \"fpdivd,fpsqrtd\"))\n+  \"n4_slot1, nothing*36\")"}, {"sha": "11bd1fe90ff1b9580f56b3dd692af2f99d04eb85", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851634c76df50c39045cfa3f2aabe02d7ad5203b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851634c76df50c39045cfa3f2aabe02d7ad5203b/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=851634c76df50c39045cfa3f2aabe02d7ad5203b", "patch": "@@ -374,6 +374,30 @@ struct processor_costs niagara3_costs = {\n   0, /* shift penalty */\n };\n \n+static const\n+struct processor_costs niagara4_costs = {\n+  COSTS_N_INSNS (5), /* int load */\n+  COSTS_N_INSNS (5), /* int signed load */\n+  COSTS_N_INSNS (5), /* int zeroed load */\n+  COSTS_N_INSNS (5), /* float load */\n+  COSTS_N_INSNS (11), /* fmov, fneg, fabs */\n+  COSTS_N_INSNS (11), /* fadd, fsub */\n+  COSTS_N_INSNS (11), /* fcmp */\n+  COSTS_N_INSNS (11), /* fmov, fmovr */\n+  COSTS_N_INSNS (11), /* fmul */\n+  COSTS_N_INSNS (24), /* fdivs */\n+  COSTS_N_INSNS (37), /* fdivd */\n+  COSTS_N_INSNS (24), /* fsqrts */\n+  COSTS_N_INSNS (37), /* fsqrtd */\n+  COSTS_N_INSNS (12), /* imul */\n+  COSTS_N_INSNS (12), /* imulX */\n+  0, /* imul bit factor */\n+  COSTS_N_INSNS (50), /* idiv, average of 41 - 60 cycle range */\n+  COSTS_N_INSNS (35), /* idivX, average of 26 - 44 cycle range */\n+  COSTS_N_INSNS (1), /* movcc/movr */\n+  0, /* shift penalty */\n+};\n+\n static const struct processor_costs *sparc_costs = &cypress_costs;\n \n #ifdef HAVE_AS_RELAX_OPTION\n@@ -1157,9 +1181,11 @@ sparc_option_override (void)\n       sparc_costs = &niagara2_costs;\n       break;\n     case PROCESSOR_NIAGARA3:\n-    case PROCESSOR_NIAGARA4:\n       sparc_costs = &niagara3_costs;\n       break;\n+    case PROCESSOR_NIAGARA4:\n+      sparc_costs = &niagara4_costs;\n+      break;\n     case PROCESSOR_NATIVE:\n       gcc_unreachable ();\n     };\n@@ -8890,9 +8916,10 @@ sparc_use_sched_lookahead (void)\n {\n   if (sparc_cpu == PROCESSOR_NIAGARA\n       || sparc_cpu == PROCESSOR_NIAGARA2\n-      || sparc_cpu == PROCESSOR_NIAGARA3\n-      || sparc_cpu == PROCESSOR_NIAGARA4)\n+      || sparc_cpu == PROCESSOR_NIAGARA3)\n     return 0;\n+  if (sparc_cpu == PROCESSOR_NIAGARA4)\n+    return 2;\n   if (sparc_cpu == PROCESSOR_ULTRASPARC\n       || sparc_cpu == PROCESSOR_ULTRASPARC3)\n     return 4;\n@@ -8911,9 +8938,9 @@ sparc_issue_rate (void)\n     case PROCESSOR_NIAGARA:\n     case PROCESSOR_NIAGARA2:\n     case PROCESSOR_NIAGARA3:\n-    case PROCESSOR_NIAGARA4:\n     default:\n       return 1;\n+    case PROCESSOR_NIAGARA4:\n     case PROCESSOR_V9:\n       /* Assume V9 processors are capable of at least dual-issue.  */\n       return 2;"}, {"sha": "4c7a2b0b23290a14ef71515337421e43d46ee775", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/851634c76df50c39045cfa3f2aabe02d7ad5203b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/851634c76df50c39045cfa3f2aabe02d7ad5203b/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=851634c76df50c39045cfa3f2aabe02d7ad5203b", "patch": "@@ -477,6 +477,7 @@\n (include \"ultra3.md\")\n (include \"niagara.md\")\n (include \"niagara2.md\")\n+(include \"niagara4.md\")\n \n \n ;; Operand and operator predicates and constraints"}]}