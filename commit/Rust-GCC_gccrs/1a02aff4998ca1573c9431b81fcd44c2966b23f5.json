{"sha": "1a02aff4998ca1573c9431b81fcd44c2966b23f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEwMmFmZjQ5OThjYTE1NzNjOTQzMWI4MWZjZDQ0YzI5NjZiMjNmNQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2001-05-07T15:51:21Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-05-07T15:51:21Z"}, "message": "toplev.c (compile_file): Set up the output file before we call the various initializers for the compiler.\n\n        * toplev.c (compile_file): Set up the output file before we call\n        the various initializers for the compiler.\n\nFrom-SVN: r41897", "tree": {"sha": "34a97b443143487790dc8492fde9627c5608b41c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34a97b443143487790dc8492fde9627c5608b41c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a02aff4998ca1573c9431b81fcd44c2966b23f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a02aff4998ca1573c9431b81fcd44c2966b23f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a02aff4998ca1573c9431b81fcd44c2966b23f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a02aff4998ca1573c9431b81fcd44c2966b23f5/comments", "author": null, "committer": null, "parents": [{"sha": "cb0bb87d89f7f00656c8ffe9907490bf9de34631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb0bb87d89f7f00656c8ffe9907490bf9de34631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb0bb87d89f7f00656c8ffe9907490bf9de34631"}], "stats": {"total": 45, "additions": 24, "deletions": 21}, "files": [{"sha": "5d36475c150fccdb22fd965089916115f50689eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a02aff4998ca1573c9431b81fcd44c2966b23f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a02aff4998ca1573c9431b81fcd44c2966b23f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a02aff4998ca1573c9431b81fcd44c2966b23f5", "patch": "@@ -1,5 +1,8 @@\n Mon May  7 09:30:14 2001  Jeffrey A Law  (law@cygnus.com)\n \n+\t* toplev.c (compile_file): Set up the output file before we call\n+\tthe various initializers for the compiler.\n+\n \t* except.c (sjlj_mark_call_sites): Do not search for assignments to\n \tnon-argumment registers that are mentioned in CALL_INSN_FUNCTION_USAGE.\n "}, {"sha": "31e6387f1175114a2e436f71b9350d7d42f53b55", "filename": "gcc/toplev.c", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a02aff4998ca1573c9431b81fcd44c2966b23f5/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a02aff4998ca1573c9431b81fcd44c2966b23f5/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=1a02aff4998ca1573c9431b81fcd44c2966b23f5", "patch": "@@ -2149,6 +2149,27 @@ compile_file (name)\n   init_timevar ();\n   timevar_start (TV_TOTAL);\n \n+  if (! name_specified && asm_file_name == 0)\n+    asm_out_file = stdout;\n+  else\n+    {\n+      if (asm_file_name == 0)\n+        {\n+          int len = strlen (dump_base_name);\n+          char *dumpname = (char *) xmalloc (len + 6);\n+          memcpy (dumpname, dump_base_name, len + 1);\n+          strip_off_ending (dumpname, len);\n+          strcat (dumpname, \".s\");\n+          asm_file_name = dumpname;\n+        }\n+      if (!strcmp (asm_file_name, \"-\"))\n+        asm_out_file = stdout;\n+      else\n+        asm_out_file = fopen (asm_file_name, \"w\");\n+      if (asm_out_file == 0)\n+\tfatal_io_error (\"can't open %s for writing\", asm_file_name);\n+    }\n+\n   /* Initialize data in various passes.  */\n \n   init_obstacks ();\n@@ -2193,27 +2214,6 @@ compile_file (name)\n      because then the driver will have provided the name of a temporary\n      file or bit bucket for us.  */\n \n-  if (! name_specified && asm_file_name == 0)\n-    asm_out_file = stdout;\n-  else\n-    {\n-      if (asm_file_name == 0)\n-        {\n-          int len = strlen (dump_base_name);\n-          char *dumpname = (char *) xmalloc (len + 6);\n-          memcpy (dumpname, dump_base_name, len + 1);\n-          strip_off_ending (dumpname, len);\n-          strcat (dumpname, \".s\");\n-          asm_file_name = dumpname;\n-        }\n-      if (!strcmp (asm_file_name, \"-\"))\n-        asm_out_file = stdout;\n-      else\n-        asm_out_file = fopen (asm_file_name, \"w\");\n-      if (asm_out_file == 0)\n-\tfatal_io_error (\"can't open %s for writing\", asm_file_name);\n-    }\n-\n #ifdef IO_BUFFER_SIZE\n   setvbuf (asm_out_file, (char *) xmalloc (IO_BUFFER_SIZE),\n            _IOFBF, IO_BUFFER_SIZE);"}]}