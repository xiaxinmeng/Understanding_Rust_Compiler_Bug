{"sha": "7180b1a686163421c1339a11dfd0f33a1e28567d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE4MGIxYTY4NjE2MzQyMWMxMzM5YTExZGZkMGYzM2ExZTI4NTY3ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-15T10:22:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-15T10:22:32Z"}, "message": "dwarf2asm.h (dw2_asm_output_offset): Add overload with extra offset argument.\n\n2016-09-15  Richard Biener  <rguenther@suse.de>\n\n\t* dwarf2asm.h (dw2_asm_output_offset): Add overload with\n\textra offset argument.\n\t* dwarf2asm.c (dw2_asm_output_offset): Implement that.\n\t* doc/tm.texi.in (ASM_OUTPUT_DWARF_OFFSET): Adjust documentation\n\tto reflect new offset parameter.\n\t* doc/tm.texi: Regenerate.\n\t* config/darwin.h (ASM_OUTPUT_DWARF_OFFSET): Adjust.\n\t* config/darwin-protos.h (darwin_asm_output_dwarf_delta): Add\n\toffset argument.\n\t(darwin_asm_output_dwarf_offset): Likewise.\n\t* config/darwin.c (darwin_asm_output_dwarf_delta): Add offset\n\targument.\n\t(darwin_asm_output_dwarf_offset): Pass offset argument through.\n\t* config/ia64/ia64.h (ASM_OUTPUT_DWARF_OFFSET): Adjust.\n\t* config/i386/cygmin.h (ASM_OUTPUT_DWARF_OFFSET): Likewise.\n\nFrom-SVN: r240158", "tree": {"sha": "175e372115b6f7a7dddb27df3e0a92b746e31486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/175e372115b6f7a7dddb27df3e0a92b746e31486"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7180b1a686163421c1339a11dfd0f33a1e28567d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7180b1a686163421c1339a11dfd0f33a1e28567d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7180b1a686163421c1339a11dfd0f33a1e28567d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7180b1a686163421c1339a11dfd0f33a1e28567d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0273c10e7b1d6824932eb6f58d72fd81139154f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0273c10e7b1d6824932eb6f58d72fd81139154f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0273c10e7b1d6824932eb6f58d72fd81139154f0"}], "stats": {"total": 96, "additions": 79, "deletions": 17}, "files": [{"sha": "243b54960651048f7c37e01a30988253bd2ffe8e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7180b1a686163421c1339a11dfd0f33a1e28567d", "patch": "@@ -1,3 +1,21 @@\n+2016-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* dwarf2asm.h (dw2_asm_output_offset): Add overload with\n+\textra offset argument.\n+\t* dwarf2asm.c (dw2_asm_output_offset): Implement that.\n+\t* doc/tm.texi.in (ASM_OUTPUT_DWARF_OFFSET): Adjust documentation\n+\tto reflect new offset parameter.\n+\t* doc/tm.texi: Regenerate.\n+\t* config/darwin.h (ASM_OUTPUT_DWARF_OFFSET): Adjust.\n+\t* config/darwin-protos.h (darwin_asm_output_dwarf_delta): Add\n+\toffset argument.\n+\t(darwin_asm_output_dwarf_offset): Likewise.\n+\t* config/darwin.c (darwin_asm_output_dwarf_delta): Add offset\n+\targument.\n+\t(darwin_asm_output_dwarf_offset): Pass offset argument through.\n+\t* config/ia64/ia64.h (ASM_OUTPUT_DWARF_OFFSET): Adjust.\n+\t* config/i386/cygmin.h (ASM_OUTPUT_DWARF_OFFSET): Likewise.\n+\n 2016-09-15  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \tPR fortran/72743"}, {"sha": "7eb096b4577689652f8f8af05f6b1e9e4eb73616", "filename": "gcc/config/darwin-protos.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fconfig%2Fdarwin-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fconfig%2Fdarwin-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-protos.h?ref=7180b1a686163421c1339a11dfd0f33a1e28567d", "patch": "@@ -91,9 +91,9 @@ extern void darwin_globalize_label (FILE *, const char *);\n extern void darwin_assemble_visibility (tree, int);\n \n extern void darwin_asm_output_dwarf_delta (FILE *, int, const char *,\n-\t\t\t\t\t   const char *);\n+\t\t\t\t\t   const char *, HOST_WIDE_INT);\n extern void darwin_asm_output_dwarf_offset (FILE *, int, const char *,\n-\t\t\t\t\t    section *);\n+\t\t\t\t\t    HOST_WIDE_INT, section *);\n \n extern void darwin_asm_declare_object_name (FILE *, const char *, tree);\n extern void darwin_asm_declare_constant_name (FILE *, const char *,"}, {"sha": "f8da9591be882bb2deec257c85fd14b6c129903d", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=7180b1a686163421c1339a11dfd0f33a1e28567d", "patch": "@@ -2790,7 +2790,8 @@ static int darwin_dwarf_label_counter;\n \n void\n darwin_asm_output_dwarf_delta (FILE *file, int size,\n-\t\t\t       const char *lab1, const char *lab2)\n+\t\t\t       const char *lab1, const char *lab2,\n+\t\t\t       HOST_WIDE_INT offset)\n {\n   int islocaldiff = (lab1[0] == '*' && lab1[1] == 'L'\n \t\t     && lab2[0] == '*' && lab2[1] == 'L');\n@@ -2804,6 +2805,8 @@ darwin_asm_output_dwarf_delta (FILE *file, int size,\n   assemble_name_raw (file, lab1);\n   fprintf (file, \"-\");\n   assemble_name_raw (file, lab2);\n+  if (offset != 0)\n+    fprintf (file, \"+\" HOST_WIDE_INT_PRINT_DEC, offset);\n   if (islocaldiff)\n     fprintf (file, \"\\n\\t%s L$set$%d\", directive, darwin_dwarf_label_counter++);\n }\n@@ -2815,7 +2818,7 @@ darwin_asm_output_dwarf_delta (FILE *file, int size,\n \n void\n darwin_asm_output_dwarf_offset (FILE *file, int size, const char * lab,\n-\t\t\t\tsection *base)\n+\t\t\t\tHOST_WIDE_INT offset, section *base)\n {\n   char sname[64];\n   int namelen;\n@@ -2826,7 +2829,7 @@ darwin_asm_output_dwarf_offset (FILE *file, int size, const char * lab,\n \n   namelen = strchr (base->named.name + 8, ',') - (base->named.name + 8);\n   sprintf (sname, \"*Lsection%.*s\", namelen, base->named.name + 8);\n-  darwin_asm_output_dwarf_delta (file, size, lab, sname);\n+  darwin_asm_output_dwarf_delta (file, size, lab, sname, offset);\n }\n \n /* Called from the within the TARGET_ASM_FILE_START for each target.  */"}, {"sha": "3782eb340479844117f9fa52f5f83a2899068d1d", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=7180b1a686163421c1339a11dfd0f33a1e28567d", "patch": "@@ -835,10 +835,10 @@ enum machopic_addr_class {\n      ((CODE) == 1 || (GLOBAL) == 0) ? DW_EH_PE_pcrel : DW_EH_PE_absptr)\n \n #define ASM_OUTPUT_DWARF_DELTA(FILE,SIZE,LABEL1,LABEL2)  \\\n-  darwin_asm_output_dwarf_delta (FILE, SIZE, LABEL1, LABEL2)\n+  darwin_asm_output_dwarf_delta (FILE, SIZE, LABEL1, LABEL2, 0)\n \n-#define ASM_OUTPUT_DWARF_OFFSET(FILE,SIZE,LABEL,BASE)  \\\n-  darwin_asm_output_dwarf_offset (FILE, SIZE, LABEL, BASE)\n+#define ASM_OUTPUT_DWARF_OFFSET(FILE,SIZE,LABEL,OFFSET,BASE)  \\\n+  darwin_asm_output_dwarf_offset (FILE, SIZE, LABEL, OFFSET, BASE)\n \n #define ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX(ASM_OUT_FILE, ENCODING, SIZE, ADDR, DONE)\t\\\n       if (ENCODING == ASM_PREFERRED_EH_DATA_FORMAT (2, 1)) {\t\t\t\t\\"}, {"sha": "228d6a2e1c21bf7fe03a4478125fa674396675c1", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=7180b1a686163421c1339a11dfd0f33a1e28567d", "patch": "@@ -102,13 +102,15 @@ along with GCC; see the file COPYING3.  If not see\n /* Use section relative relocations for debugging offsets.  Unlike\n    other targets that fake this by putting the section VMA at 0, PE\n    won't allow it.  */\n-#define ASM_OUTPUT_DWARF_OFFSET(FILE, SIZE, LABEL, SECTION)\t\\\n+#define ASM_OUTPUT_DWARF_OFFSET(FILE, SIZE, LABEL, OFFSET, SECTION) \\\n   do {\t\t\t\t\t\t\t\t\\\n     switch (SIZE)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\\\n       case 4:\t\t\t\t\t\t\t\\\n \tfputs (\"\\t.secrel32\\t\", FILE);\t\t\t\t\\\n \tassemble_name (FILE, LABEL);\t\t\t\t\\\n+\tif (offset != 0)\t\t\t\t\t\\\n+\t  fprintf (FILE, \"+\" HOST_WIDE_INT_PRINT_DEC, offset)\t\\\n \tbreak;\t\t\t\t\t\t\t\\\n       case 8:\t\t\t\t\t\t\t\\\n \t/* This is a hack.  There is no 64-bit section relative\t\\\n@@ -118,6 +120,8 @@ along with GCC; see the file COPYING3.  If not see\n \t   Fake the 64-bit offset by zero-extending it.  */\t\\\n \tfputs (\"\\t.secrel32\\t\", FILE);\t\t\t\t\\\n \tassemble_name (FILE, LABEL);\t\t\t\t\\\n+\tif (offset != 0)\t\t\t\t\t\\\n+\t  fprintf (FILE, \"+\" HOST_WIDE_INT_PRINT_DEC, offset)\t\\\n \tfputs (\"\\n\\t.long\\t0\", FILE);\t\t\t\t\\\n \tbreak;\t\t\t\t\t\t\t\\\n       default:\t\t\t\t\t\t\t\\"}, {"sha": "aab2d7a4c01d228299613b3bd531c651765c5daf", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=7180b1a686163421c1339a11dfd0f33a1e28567d", "patch": "@@ -1581,11 +1581,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Use section-relative relocations for debugging offsets.  Unlike other\n    targets that fake this by putting the section VMA at 0, IA-64 has\n    proper relocations for them.  */\n-#define ASM_OUTPUT_DWARF_OFFSET(FILE, SIZE, LABEL, SECTION)\t\\\n+#define ASM_OUTPUT_DWARF_OFFSET(FILE, SIZE, LABEL, OFFSET, SECTION) \\\n   do {\t\t\t\t\t\t\t\t\\\n     fputs (integer_asm_op (SIZE, FALSE), FILE);\t\t\t\\\n     fputs (\"@secrel(\", FILE);\t\t\t\t\t\\\n     assemble_name (FILE, LABEL);\t\t\t\t\\\n+    if (offset != 0)\t\t\t\t\t\t\\\n+      fprintf (FILE, \"+\" HOST_WIDE_INT_PRINT_DEC, OFFSET);\t\\\n     fputc (')', FILE);\t\t\t\t\t\t\\\n   } while (0)\n "}, {"sha": "8d533d53083f5ce5cdc5303acffb8d0e442b38bf", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=7180b1a686163421c1339a11dfd0f33a1e28567d", "patch": "@@ -9718,10 +9718,11 @@ between the two given labels in system defined units, e.g. instruction\n slots on IA64 VMS, using an integer of the given size.\n @end defmac\n \n-@defmac ASM_OUTPUT_DWARF_OFFSET (@var{stream}, @var{size}, @var{label}, @var{section})\n+@defmac ASM_OUTPUT_DWARF_OFFSET (@var{stream}, @var{size}, @var{label}, @var{offset}, @var{section})\n A C statement to issue assembly directives that create a\n-section-relative reference to the given @var{label}, using an integer of the\n-given @var{size}.  The label is known to be defined in the given @var{section}.\n+section-relative reference to the given @var{label} plus @var{offset}, using\n+an integer of the given @var{size}.  The label is known to be defined in the\n+given @var{section}.\n @end defmac\n \n @defmac ASM_OUTPUT_DWARF_PCREL (@var{stream}, @var{size}, @var{label})"}, {"sha": "b1482381c9ab0ea1aed041c8955c7d21b043e3bf", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=7180b1a686163421c1339a11dfd0f33a1e28567d", "patch": "@@ -7059,10 +7059,11 @@ between the two given labels in system defined units, e.g. instruction\n slots on IA64 VMS, using an integer of the given size.\n @end defmac\n \n-@defmac ASM_OUTPUT_DWARF_OFFSET (@var{stream}, @var{size}, @var{label}, @var{section})\n+@defmac ASM_OUTPUT_DWARF_OFFSET (@var{stream}, @var{size}, @var{label}, @var{offset}, @var{section})\n A C statement to issue assembly directives that create a\n-section-relative reference to the given @var{label}, using an integer of the\n-given @var{size}.  The label is known to be defined in the given @var{section}.\n+section-relative reference to the given @var{label} plus @var{offset}, using\n+an integer of the given @var{size}.  The label is known to be defined in the\n+given @var{section}.\n @end defmac\n \n @defmac ASM_OUTPUT_DWARF_PCREL (@var{stream}, @var{size}, @var{label})"}, {"sha": "cad550916d4c6c230ee3bae32e22b0c54953727e", "filename": "gcc/dwarf2asm.c", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fdwarf2asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fdwarf2asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.c?ref=7180b1a686163421c1339a11dfd0f33a1e28567d", "patch": "@@ -30,6 +30,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"dwarf2asm.h\"\n #include \"dwarf2.h\"\n+#include \"function.h\"\n+#include \"emit-rtl.h\"\n \n #ifndef XCOFF_DEBUGGING_INFO\n #define XCOFF_DEBUGGING_INFO 0\n@@ -191,7 +193,7 @@ dw2_asm_output_offset (int size, const char *label,\n   va_start (ap, comment);\n \n #ifdef ASM_OUTPUT_DWARF_OFFSET\n-  ASM_OUTPUT_DWARF_OFFSET (asm_out_file, size, label, base);\n+  ASM_OUTPUT_DWARF_OFFSET (asm_out_file, size, label, 0, base);\n #else\n   dw2_assemble_integer (size, gen_rtx_SYMBOL_REF (Pmode, label));\n #endif\n@@ -206,6 +208,33 @@ dw2_asm_output_offset (int size, const char *label,\n   va_end (ap);\n }\n \n+void\n+dw2_asm_output_offset (int size, const char *label, HOST_WIDE_INT offset,\n+\t\t       section *base ATTRIBUTE_UNUSED,\n+\t\t       const char *comment, ...)\n+{\n+  va_list ap;\n+\n+  va_start (ap, comment);\n+\n+#ifdef ASM_OUTPUT_DWARF_OFFSET\n+  ASM_OUTPUT_DWARF_OFFSET (asm_out_file, size, label, offset, base);\n+#else\n+  dw2_assemble_integer (size, gen_rtx_PLUS (Pmode,\n+\t\t\t\t\t    gen_rtx_SYMBOL_REF (Pmode, label),\n+\t\t\t\t\t    gen_int_mode (offset, Pmode)));\n+#endif\n+\n+  if (flag_debug_asm && comment)\n+    {\n+      fprintf (asm_out_file, \"\\t%s \", ASM_COMMENT_START);\n+      vfprintf (asm_out_file, comment, ap);\n+    }\n+  fputc ('\\n', asm_out_file);\n+\n+  va_end (ap);\n+}\n+\n #if 0\n \n /* Output a self-relative reference to a label, possibly in a"}, {"sha": "42064d34d22f886664d3449b452ff0523d87c0b1", "filename": "gcc/dwarf2asm.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fdwarf2asm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7180b1a686163421c1339a11dfd0f33a1e28567d/gcc%2Fdwarf2asm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.h?ref=7180b1a686163421c1339a11dfd0f33a1e28567d", "patch": "@@ -40,6 +40,10 @@ extern void dw2_asm_output_offset (int, const char *, section *,\n \t\t\t\t   const char *, ...)\n      ATTRIBUTE_NULL_PRINTF_4;\n \n+extern void dw2_asm_output_offset (int, const char *, HOST_WIDE_INT,\n+\t\t\t\t   section *, const char *, ...)\n+     ATTRIBUTE_NULL_PRINTF_5;\n+\n extern void dw2_asm_output_addr (int, const char *, const char *, ...)\n      ATTRIBUTE_NULL_PRINTF_3;\n "}]}