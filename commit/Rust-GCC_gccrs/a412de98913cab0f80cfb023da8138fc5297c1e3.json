{"sha": "a412de98913cab0f80cfb023da8138fc5297c1e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQxMmRlOTg5MTNjYWIwZjgwY2ZiMDIzZGE4MTM4ZmM1Mjk3YzFlMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-11-02T07:53:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-11-02T07:53:48Z"}, "message": "re PR tree-optimization/87776 (Compile time hog during RPO VN)\n\n2018-11-02  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87776\n\t* tree-ssa-sccvn.c (do_rpo_vn): Do not mark backedges\n\texecutable when iterating but running into rpo-vn-max-loop-depth\n\tand not eliding the iteration.\n\n\t* gcc.dg/torture/pr87776.c: New testcase.\n\nFrom-SVN: r265739", "tree": {"sha": "2384b50867f156152ef0f51167685a89c110bae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2384b50867f156152ef0f51167685a89c110bae5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a412de98913cab0f80cfb023da8138fc5297c1e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a412de98913cab0f80cfb023da8138fc5297c1e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a412de98913cab0f80cfb023da8138fc5297c1e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a412de98913cab0f80cfb023da8138fc5297c1e3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b413c2421519779cd473d61b5fbeac127356ccb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b413c2421519779cd473d61b5fbeac127356ccb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b413c2421519779cd473d61b5fbeac127356ccb3"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "90d11f5038d1845cfac4519deca8b2351143fdd9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a412de98913cab0f80cfb023da8138fc5297c1e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a412de98913cab0f80cfb023da8138fc5297c1e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a412de98913cab0f80cfb023da8138fc5297c1e3", "patch": "@@ -1,3 +1,10 @@\n+2018-11-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87776\n+\t* tree-ssa-sccvn.c (do_rpo_vn): Do not mark backedges\n+\texecutable when iterating but running into rpo-vn-max-loop-depth\n+\tand not eliding the iteration.\n+\n 2018-11-30  Jan Hubicka  <jh@suse.cz>\n \n \t* tree.c (free_lang_data_in_decl): Free TREE_TYPE and alignment of"}, {"sha": "e3f4e8ef4e365f4951f501b7a05e0bfab5233507", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a412de98913cab0f80cfb023da8138fc5297c1e3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a412de98913cab0f80cfb023da8138fc5297c1e3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a412de98913cab0f80cfb023da8138fc5297c1e3", "patch": "@@ -1,3 +1,8 @@\n+2018-11-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87776\n+\t* gcc.dg/torture/pr87776.c: New testcase.\n+\n 2018-11-01  Marek Polacek  <polacek@redhat.com>\n \n \tImplement P0846R0, ADL and function templates."}, {"sha": "1f150702dcf327f8628ca49fbfd8710f27ea72b7", "filename": "gcc/testsuite/gcc.dg/torture/pr87776.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a412de98913cab0f80cfb023da8138fc5297c1e3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87776.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a412de98913cab0f80cfb023da8138fc5297c1e3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87776.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87776.c?ref=a412de98913cab0f80cfb023da8138fc5297c1e3", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"--param rpo-vn-max-loop-depth=2\" } */\n+\n+int wp;\n+\n+void\n+ff (void)\n+{\n+  int *s3 = &wp;\n+\n+  for (wp = 0; wp < 1; ++wp)\n+    {\n+      if (wp != 0)\n+\t{\n+o8:\n+\t  ;\n+\t}\n+      else\n+\t{\n+b7:\n+\t  while (wp < 1)\n+\t    {\n+\t    }\n+\t}\n+\n+      for (*s3 = 0; *s3 < 1; ++*s3)\n+\t{\n+\t  for (wp = 0; wp < 1; ++wp)\n+\t    for (wp = 0; wp < 1; ++wp)\n+\t      {\n+\t      }\n+\n+\t  for (wp = 0; wp < 1; ++wp)\n+\t    goto o8;\n+\n+\t  for (wp = 0; wp < 1; ++wp)\n+\t    goto b7;\n+\t}\n+    }\n+}"}, {"sha": "43641916d5298ab53f4b3c84d73cc182acb8a8f0", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a412de98913cab0f80cfb023da8138fc5297c1e3/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a412de98913cab0f80cfb023da8138fc5297c1e3/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=a412de98913cab0f80cfb023da8138fc5297c1e3", "patch": "@@ -6449,7 +6449,6 @@ do_rpo_vn (function *fn, edge entry, bitmap exit_bbs,\n \t      FOR_EACH_EDGE (e, ei, header->preds)\n \t\tif (e->flags & EDGE_DFS_BACK)\n \t\t  {\n-\t\t    e->flags |= EDGE_EXECUTABLE;\n \t\t    /* There can be a non-latch backedge into the header\n \t\t       which is part of an outer irreducible region.  We\n \t\t       cannot avoid iterating this block then.  */\n@@ -6462,6 +6461,8 @@ do_rpo_vn (function *fn, edge entry, bitmap exit_bbs,\n \t\t\t\t   e->src->index, e->dest->index, loop->num);\n \t\t\tnon_latch_backedge = true;\n \t\t      }\n+\t\t    else\n+\t\t      e->flags |= EDGE_EXECUTABLE;\n \t\t  }\n \t      rpo_state[bb_to_rpo[header->index]].iterate = non_latch_backedge;\n \t    }"}]}