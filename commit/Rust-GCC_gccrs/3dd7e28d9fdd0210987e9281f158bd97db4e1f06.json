{"sha": "3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RkN2UyOGQ5ZmRkMDIxMDk4N2U5MjgxZjE1OGJkOTdkYjRlMWYwNg==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2014-08-04T08:01:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T08:01:36Z"}, "message": "sem.adb, sem.ads (In_Default_Expr): Global flag that is set to True during analysis of a default component expression.\n\n2014-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* sem.adb, sem.ads (In_Default_Expr): Global flag that is set\n\tto True during analysis of a default component expression.\n\t(Semantics): Save and restore In_Default_Expr around analysis.\n\t* sem_ch3.adb, sem_ch3.ads (Analyze_Component_Declaration):\n\tCall new wrapper Preanalyze_Default_Expression.\n\t(Preanalyze_Default_Expression): New wrapper on\n\tPreanalyze_Spec_Expression which sets and restores In_Default_Expr.\n\t* sem_res.adb (Resolve_Call): Mark calls inside default\n\texpressions as not inlined in GNATprove mode.\n\nFrom-SVN: r213536", "tree": {"sha": "608f376f517d2d6bd7075697e85218cb0a4b1974", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/608f376f517d2d6bd7075697e85218cb0a4b1974"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c56d9b8a6716973e5fbba1dc5e38507022b6006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c56d9b8a6716973e5fbba1dc5e38507022b6006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c56d9b8a6716973e5fbba1dc5e38507022b6006"}], "stats": {"total": 58, "additions": 51, "deletions": 7}, "files": [{"sha": "94426168802e001ec8b19cdbdd7ab91fd2462244", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "patch": "@@ -1,3 +1,15 @@\n+2014-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem.adb, sem.ads (In_Default_Expr): Global flag that is set\n+\tto True during analysis of a default component expression.\n+\t(Semantics): Save and restore In_Default_Expr around analysis.\n+\t* sem_ch3.adb, sem_ch3.ads (Analyze_Component_Declaration):\n+\tCall new wrapper Preanalyze_Default_Expression.\n+\t(Preanalyze_Default_Expression): New wrapper on\n+\tPreanalyze_Spec_Expression which sets and restores In_Default_Expr.\n+\t* sem_res.adb (Resolve_Call): Mark calls inside default\n+\texpressions as not inlined in GNATprove mode.\n+\n 2014-08-04  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch4.adb: Minor reformatting."}, {"sha": "f1dd366573187381f3afc1c1e1f9a7f720365df7", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "patch": "@@ -1309,6 +1309,7 @@ package body Sem is\n       S_GNAT_Mode         : constant Boolean          := GNAT_Mode;\n       S_Global_Dis_Names  : constant Boolean          := Global_Discard_Names;\n       S_In_Assertion_Expr : constant Nat              := In_Assertion_Expr;\n+      S_In_Default_Expr   : constant Boolean          := In_Default_Expr;\n       S_In_Spec_Expr      : constant Boolean          := In_Spec_Expression;\n       S_Inside_A_Generic  : constant Boolean          := Inside_A_Generic;\n       S_Outer_Gen_Scope   : constant Entity_Id        := Outer_Generic_Scope;\n@@ -1442,6 +1443,7 @@ package body Sem is\n       Full_Analysis      := True;\n       Inside_A_Generic   := False;\n       In_Assertion_Expr  := 0;\n+      In_Default_Expr    := False;\n       In_Spec_Expression := False;\n       Set_Comes_From_Source_Default (False);\n \n@@ -1525,6 +1527,7 @@ package body Sem is\n       Global_Discard_Names := S_Global_Dis_Names;\n       GNAT_Mode            := S_GNAT_Mode;\n       In_Assertion_Expr    := S_In_Assertion_Expr;\n+      In_Default_Expr      := S_In_Default_Expr;\n       In_Spec_Expression   := S_In_Spec_Expr;\n       Inside_A_Generic     := S_Inside_A_Generic;\n       Outer_Generic_Scope  := S_Outer_Gen_Scope;"}, {"sha": "fced1255aab2bf2af7aeefd2d5a8889c234c87b9", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "patch": "@@ -245,12 +245,18 @@ package Sem is\n \n    In_Assertion_Expr : Nat := 0;\n    --  This is set non-zero if we are within the expression of an assertion\n-   --  pragma or aspect. It is a counter which is incremented at the start\n-   --  of expanding such an expression, and decremented on completion of\n-   --  expanding that expression. Probably a boolean would be good enough,\n-   --  since we think that such expressions cannot nest, but that might not\n-   --  be true in the future (e.g. if let expressions are added to Ada) so\n-   --  we prepare for that future possibility by making it a counter.\n+   --  pragma or aspect. It is a counter which is incremented at the start of\n+   --  expanding such an expression, and decremented on completion of expanding\n+   --  that expression. Probably a boolean would be good enough, since we think\n+   --  that such expressions cannot nest, but that might not be true in the\n+   --  future (e.g. if let expressions are added to Ada) so we prepare for that\n+   --  future possibility by making it a counter. Like In_Spec_Expression, it\n+   --  must be recursively saved on a Semantics call.\n+\n+   In_Default_Expr : Boolean := False;\n+   --  Switch to indicate that we are analyzing a default component expression.\n+   --  Like In_Spec_Expression, it must be recursively saved on a Semantics\n+   --  call.\n \n    In_Inlined_Body : Boolean := False;\n    --  Switch to indicate that we are analyzing and resolving an inlined body."}, {"sha": "0a53fd8f442a5d746bf0846073d9183aa339e77e", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "patch": "@@ -1938,7 +1938,7 @@ package body Sem_Ch3 is\n \n       if Present (E) then\n          Check_SPARK_Restriction (\"default expression is not allowed\", E);\n-         Preanalyze_Spec_Expression (E, T);\n+         Preanalyze_Default_Expression (E, T);\n          Check_Initialization (T, E);\n \n          if Ada_Version >= Ada_2005\n@@ -20215,6 +20215,18 @@ package body Sem_Ch3 is\n       In_Assertion_Expr := In_Assertion_Expr - 1;\n    end Preanalyze_Assert_Expression;\n \n+   -----------------------------------\n+   -- Preanalyze_Default_Expression --\n+   -----------------------------------\n+\n+   procedure Preanalyze_Default_Expression (N : Node_Id; T : Entity_Id) is\n+      Save_In_Default_Expr : constant Boolean := In_Default_Expr;\n+   begin\n+      In_Default_Expr := True;\n+      Preanalyze_Spec_Expression (N, T);\n+      In_Default_Expr := Save_In_Default_Expr;\n+   end Preanalyze_Default_Expression;\n+\n    --------------------------------\n    -- Preanalyze_Spec_Expression --\n    --------------------------------"}, {"sha": "57184ed58ad2e6c50981f8b203b26369a267d137", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "patch": "@@ -250,6 +250,10 @@ package Sem_Ch3 is\n    --  Wrapper on Preanalyze_Spec_Expression for assertion expressions, so that\n    --  In_Assertion_Expr can be properly adjusted.\n \n+   procedure Preanalyze_Default_Expression (N : Node_Id; T : Entity_Id);\n+   --  Wrapper on Preanalyze_Spec_Expression for default expressions, so that\n+   --  In_Default_Expr can be properly adjusted.\n+\n    procedure Process_Full_View (N : Node_Id; Full_T, Priv_T : Entity_Id);\n    --  Process some semantic actions when the full view of a private type is\n    --  encountered and analyzed. The first action is to create the full views"}, {"sha": "22e6fd633266d365bb2f231f1a2bdbbf9272ee2c", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dd7e28d9fdd0210987e9281f158bd97db4e1f06/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=3dd7e28d9fdd0210987e9281f158bd97db4e1f06", "patch": "@@ -6245,6 +6245,13 @@ package body Sem_Res is\n                Error_Msg_N (\"\\call appears in assertion expression\", N);\n                Set_Is_Inlined_Always (Nam_UA, False);\n \n+            --  Calls cannot be inlined inside default expressions\n+\n+            elsif In_Default_Expr then\n+               Error_Msg_NE (\"?no contextual analysis of &\", N, Nam);\n+               Error_Msg_N (\"\\call appears in default expression\", N);\n+               Set_Is_Inlined_Always (Nam_UA, False);\n+\n             --  Inlining should not be performed during pre-analysis\n \n             elsif Full_Analysis then"}]}