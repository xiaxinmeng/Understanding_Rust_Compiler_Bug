{"sha": "18141e4c189dc4a75e876910624301dd82475758", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxNDFlNGMxODlkYzRhNzVlODc2OTEwNjI0MzAxZGQ4MjQ3NTc1OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-09-25T21:34:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-09-25T21:34:50Z"}, "message": "search.c (get_base_distance): Remove assert.\n\n\t* search.c (get_base_distance): Remove assert.\n\t* decl2.c (build_anon_union_vars): Don't process a field with no\n\tname.\n\t(finish_anon_union): Also complain about local anon unions with no\n\tmembers.\n\nFrom-SVN: r22597", "tree": {"sha": "da1e28167f911e1a7bf564a7c5cb9effed7fa0af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da1e28167f911e1a7bf564a7c5cb9effed7fa0af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18141e4c189dc4a75e876910624301dd82475758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18141e4c189dc4a75e876910624301dd82475758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18141e4c189dc4a75e876910624301dd82475758", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18141e4c189dc4a75e876910624301dd82475758/comments", "author": null, "committer": null, "parents": [{"sha": "b8d446d46eddd7839040545a0175c9f60c81c63f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8d446d46eddd7839040545a0175c9f60c81c63f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8d446d46eddd7839040545a0175c9f60c81c63f"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "07941166e8e730ef1564e981b8fcb101c1aea1b8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18141e4c189dc4a75e876910624301dd82475758/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18141e4c189dc4a75e876910624301dd82475758/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=18141e4c189dc4a75e876910624301dd82475758", "patch": "@@ -1,3 +1,12 @@\n+1998-09-25  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* search.c (get_base_distance): Remove assert.\n+\n+\t* decl2.c (build_anon_union_vars): Don't process a field with no\n+\tname.\n+\t(finish_anon_union): Also complain about local anon unions with no\n+\tmembers.\n+\n 1998-09-25  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* decl.c (lookup_namespace_name): If the name is a namespace,"}, {"sha": "7faaf5546cffcfda29e82134e790e2c633df44ed", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18141e4c189dc4a75e876910624301dd82475758/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18141e4c189dc4a75e876910624301dd82475758/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=18141e4c189dc4a75e876910624301dd82475758", "patch": "@@ -2236,6 +2236,8 @@ build_anon_union_vars (anon_decl, elems, static_p, external_p)\n \t  if (!decl)\n \t    continue;\n \t}\n+      else if (DECL_NAME (field) == NULL_TREE)\n+\tcontinue;\n       else\n \t{\n \t  decl = build_decl (VAR_DECL, DECL_NAME (field), TREE_TYPE (field));\n@@ -2304,18 +2306,16 @@ finish_anon_union (anon_union_decl)\n   main_decl = build_anon_union_vars (anon_union_decl, &elems, \n \t\t\t\t     static_p, external_p);\n \n+  if (main_decl == NULL_TREE)\n+    {\n+      warning (\"anonymous union with no members\");\n+      return;\n+    }\n+\n   if (static_p)\n     {\n-      if (main_decl)\n-\t{\n-\t  make_decl_rtl (main_decl, 0, toplevel_bindings_p ());\n-\t  DECL_RTL (anon_union_decl) = DECL_RTL (main_decl);\n-\t}\n-      else\n-\t{\n-\t  warning (\"anonymous union with no members\");\n-\t  return;\n-\t}\n+      make_decl_rtl (main_decl, 0, toplevel_bindings_p ());\n+      DECL_RTL (anon_union_decl) = DECL_RTL (main_decl);\n     }\n \n   /* The following call assumes that there are never any cleanups"}, {"sha": "3c04170facbb08936896e4ed14fbdd5e0fbe5b77", "filename": "gcc/cp/search.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18141e4c189dc4a75e876910624301dd82475758/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18141e4c189dc4a75e876910624301dd82475758/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=18141e4c189dc4a75e876910624301dd82475758", "patch": "@@ -466,12 +466,12 @@ get_base_distance (parent, binfo, protect, path_ptr)\n     return -3;\n \n   /* If they gave us the real vbase binfo, which isn't in the main binfo\n-     tree, deal with it.  */\n+     tree, deal with it.  This happens when we are called from\n+     expand_upcast_fixups.  */\n   if (rval == -1 && TREE_CODE (parent) == TREE_VEC\n       && parent == binfo_member (BINFO_TYPE (parent),\n \t\t\t\t CLASSTYPE_VBASECLASSES (type)))\n     {\n-      my_friendly_abort (980901);\n       my_friendly_assert (BINFO_INHERITANCE_CHAIN (parent) == binfo, 980827);\n       new_binfo = parent;\n       rval = 1;"}]}