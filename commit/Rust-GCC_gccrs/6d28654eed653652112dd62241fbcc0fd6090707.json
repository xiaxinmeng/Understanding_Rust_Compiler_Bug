{"sha": "6d28654eed653652112dd62241fbcc0fd6090707", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQyODY1NGVlZDY1MzY1MjExMmRkNjIyNDFmYmNjMGZkNjA5MDcwNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-07-13T12:13:29Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-07-13T12:13:29Z"}, "message": "Add quotes to error messages related to Sanitizers.\n\n2017-07-13  Martin Liska  <mliska@suse.cz>\n\n\t* opts.c (finish_options): Add quotes to error messages.\n\t(parse_sanitizer_options): Likewise.\n2017-07-13  Martin Liska  <mliska@suse.cz>\n\n\t* c-c++-common/ubsan/sanitize-all-1.c: Update scanned pattern.\n\t* c-c++-common/ubsan/sanitize-recover-1.c:Likewise.\n\t* c-c++-common/ubsan/sanitize-recover-2.c:Likewise.\n\t* c-c++-common/ubsan/sanitize-recover-5.c:Likewise.\n\t* c-c++-common/ubsan/sanitize-recover-7.c:Likewise.\n\t* c-c++-common/ubsan/sanitize-recover-8.c:Likewise.\n\t* c-c++-common/ubsan/sanitize-recover-9.c:Likewise.\n\nFrom-SVN: r250179", "tree": {"sha": "d6f6c0838ec98a14a3ad91631514a657f7e97485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6f6c0838ec98a14a3ad91631514a657f7e97485"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d28654eed653652112dd62241fbcc0fd6090707", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d28654eed653652112dd62241fbcc0fd6090707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d28654eed653652112dd62241fbcc0fd6090707", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d28654eed653652112dd62241fbcc0fd6090707/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7123f4476ef349eed4a9d16ec18ca2623803045f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7123f4476ef349eed4a9d16ec18ca2623803045f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7123f4476ef349eed4a9d16ec18ca2623803045f"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "a148ee0e804eaea6791ea37c7c102a3dfa1db20f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d28654eed653652112dd62241fbcc0fd6090707", "patch": "@@ -1,3 +1,8 @@\n+2017-07-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* opts.c (finish_options): Add quotes to error messages.\n+\t(parse_sanitizer_options): Likewise.\n+\n 2017-07-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* doc/invoke.texi (armv8-r): Document +fp.sp ARMv8-R extension."}, {"sha": "e2e684fa0093694d73e2f6ad79313a3437ac9c31", "filename": "gcc/opts.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=6d28654eed653652112dd62241fbcc0fd6090707", "patch": "@@ -954,26 +954,26 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n   if ((opts->x_flag_sanitize & SANITIZE_USER_ADDRESS)\n       && (opts->x_flag_sanitize & SANITIZE_KERNEL_ADDRESS))\n     error_at (loc,\n-\t      \"-fsanitize=address is incompatible with \"\n-\t      \"-fsanitize=kernel-address\");\n+\t      \"%<-fsanitize=address%> is incompatible with \"\n+\t      \"%<-fsanitize=kernel-address%>\");\n \n   /* And with TSan.  */\n   if ((opts->x_flag_sanitize & SANITIZE_ADDRESS)\n       && (opts->x_flag_sanitize & SANITIZE_THREAD))\n     error_at (loc,\n-\t      \"-fsanitize=address and -fsanitize=kernel-address \"\n-\t      \"are incompatible with -fsanitize=thread\");\n+\t      \"%<-fsanitize=address%> and %<-fsanitize=kernel-address%> \"\n+\t      \"are incompatible with %<-fsanitize=thread%>\");\n \n   if ((opts->x_flag_sanitize & SANITIZE_LEAK)\n       && (opts->x_flag_sanitize & SANITIZE_THREAD))\n     error_at (loc,\n-\t      \"-fsanitize=leak is incompatible with -fsanitize=thread\");\n+\t      \"%<-fsanitize=leak%> is incompatible with %<-fsanitize=thread%>\");\n \n   /* Check error recovery for -fsanitize-recover option.  */\n   for (int i = 0; sanitizer_opts[i].name != NULL; ++i)\n     if ((opts->x_flag_sanitize_recover & sanitizer_opts[i].flag)\n \t&& !sanitizer_opts[i].can_recover)\n-      error_at (loc, \"-fsanitize-recover=%s is not supported\",\n+      error_at (loc, \"%<-fsanitize-recover=%s%> is not supported\",\n \t\tsanitizer_opts[i].name);\n \n   /* When instrumenting the pointers, we don't want to remove\n@@ -999,8 +999,8 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n       if (opts->x_flag_stack_reuse != SR_NONE\n \t  && opts_set->x_flag_stack_reuse != SR_NONE)\n \terror_at (loc,\n-\t\t  \"-fsanitize-address-use-after-scope requires \"\n-\t\t  \"-fstack-reuse=none option\");\n+\t\t  \"%<-fsanitize-address-use-after-scope%> requires \"\n+\t\t  \"%<-fstack-reuse=none%> option\");\n \n       opts->x_flag_stack_reuse = SR_NONE;\n     }\n@@ -1613,7 +1613,7 @@ parse_sanitizer_options (const char *p, location_t loc, int scode,\n \t\tif (code == OPT_fsanitize_)\n \t\t  {\n \t\t    if (complain)\n-\t\t      error_at (loc, \"-fsanitize=all option is not valid\");\n+\t\t      error_at (loc, \"%<-fsanitize=all%> option is not valid\");\n \t\t  }\n \t\telse\n \t\t  flags |= ~(SANITIZE_THREAD | SANITIZE_LEAK"}, {"sha": "b5ca7fa348f00116e595eb8198197e6a849da341", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d28654eed653652112dd62241fbcc0fd6090707", "patch": "@@ -1,3 +1,13 @@\n+2017-07-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-c++-common/ubsan/sanitize-all-1.c: Update scanned pattern.\n+\t* c-c++-common/ubsan/sanitize-recover-1.c:Likewise.\n+\t* c-c++-common/ubsan/sanitize-recover-2.c:Likewise.\n+\t* c-c++-common/ubsan/sanitize-recover-5.c:Likewise.\n+\t* c-c++-common/ubsan/sanitize-recover-7.c:Likewise.\n+\t* c-c++-common/ubsan/sanitize-recover-8.c:Likewise.\n+\t* c-c++-common/ubsan/sanitize-recover-9.c:Likewise.\n+\n 2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/81193"}, {"sha": "96a8cc576b6350af6dde0d6c11abfb87b872d67e", "filename": "gcc/testsuite/c-c++-common/ubsan/sanitize-all-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-all-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-all-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-all-1.c?ref=6d28654eed653652112dd62241fbcc0fd6090707", "patch": "@@ -5,4 +5,4 @@\n \n int i;\n \n-/* { dg-error \"-fsanitize=all option is not valid\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \".-fsanitize=all. option is not valid\" \"\" { target *-*-* } 0 } */"}, {"sha": "efa5ad7291f534b28094c516760824e419b8a620", "filename": "gcc/testsuite/c-c++-common/ubsan/sanitize-recover-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-1.c?ref=6d28654eed653652112dd62241fbcc0fd6090707", "patch": "@@ -3,4 +3,4 @@\n \n int i;\n \n-/* { dg-error \"-fsanitize-recover=unreachable is not supported\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \".-fsanitize-recover=unreachable. is not supported\" \"\" { target *-*-* } 0 } */"}, {"sha": "2b7cbcb6a7f0f468171a3f53534b330e9c6eb838", "filename": "gcc/testsuite/c-c++-common/ubsan/sanitize-recover-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-2.c?ref=6d28654eed653652112dd62241fbcc0fd6090707", "patch": "@@ -3,4 +3,4 @@\n \n int i;\n \n-/* { dg-error \"-fsanitize-recover=return is not supported\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \".-fsanitize-recover=return. is not supported\" \"\" { target *-*-* } 0 } */"}, {"sha": "3d2e51ebb91a6cd5022af720d9810f7f7933201d", "filename": "gcc/testsuite/c-c++-common/ubsan/sanitize-recover-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-5.c?ref=6d28654eed653652112dd62241fbcc0fd6090707", "patch": "@@ -3,4 +3,4 @@\n \n int i;\n \n-/* { dg-error \"-fsanitize-recover=unreachable is not supported\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \".-fsanitize-recover=unreachable. is not supported\" \"\" { target *-*-* } 0 } */"}, {"sha": "a571f2bcdc12c914124d8e403b77f78b1f11f26d", "filename": "gcc/testsuite/c-c++-common/ubsan/sanitize-recover-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-7.c?ref=6d28654eed653652112dd62241fbcc0fd6090707", "patch": "@@ -3,4 +3,4 @@\n \n int i;\n \n-/* { dg-error \"-fsanitize=address and -fsanitize=kernel-address are incompatible with -fsanitize=thread\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \".-fsanitize=address. and .-fsanitize=kernel-address. are incompatible with .-fsanitize=thread.\" \"\" { target *-*-* } 0 } */"}, {"sha": "97f4bf4c4656667c36a46c2f24f7b18c8034d8b9", "filename": "gcc/testsuite/c-c++-common/ubsan/sanitize-recover-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-8.c?ref=6d28654eed653652112dd62241fbcc0fd6090707", "patch": "@@ -3,4 +3,4 @@\n \n int i;\n \n-/* { dg-error \"-fsanitize=leak is incompatible with -fsanitize=thread\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \".-fsanitize=leak. is incompatible with .-fsanitize=thread.\" \"\" { target *-*-* } 0 } */"}, {"sha": "0800ecbe1557bace53d1a8e0b6205f47607be486", "filename": "gcc/testsuite/c-c++-common/ubsan/sanitize-recover-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d28654eed653652112dd62241fbcc0fd6090707/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fsanitize-recover-9.c?ref=6d28654eed653652112dd62241fbcc0fd6090707", "patch": "@@ -3,4 +3,4 @@\n \n int i;\n \n-/* { dg-error \"-fsanitize-recover=unreachable is not supported\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \".-fsanitize-recover=unreachable. is not supported\" \"\" { target *-*-* } 0 } */"}]}