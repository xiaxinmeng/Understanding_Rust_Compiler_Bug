{"sha": "231008e5ed01da35d44cc2a0c2d9f0e8c2bd1db2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMxMDA4ZTVlZDAxZGEzNWQ0NGNjMmEwYzJkOWYwZThjMmJkMWRiMg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2001-11-03T22:46:16Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2001-11-03T22:46:16Z"}, "message": "Fix argv and argc for __MMIX_ABI_GNU__\n\nFrom-SVN: r46747", "tree": {"sha": "37719c7321c133d5edbe24eb1656af5a8457cbba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37719c7321c133d5edbe24eb1656af5a8457cbba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/231008e5ed01da35d44cc2a0c2d9f0e8c2bd1db2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/231008e5ed01da35d44cc2a0c2d9f0e8c2bd1db2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/231008e5ed01da35d44cc2a0c2d9f0e8c2bd1db2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/231008e5ed01da35d44cc2a0c2d9f0e8c2bd1db2/comments", "author": null, "committer": null, "parents": [{"sha": "bcf684c7a5ef5e899562a0a3621d51ed6b673265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcf684c7a5ef5e899562a0a3621d51ed6b673265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcf684c7a5ef5e899562a0a3621d51ed6b673265"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "d118cb8d028bf08c4e5f26c95657effee037c6db", "filename": "gcc/config/mmix/crti.asm", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/231008e5ed01da35d44cc2a0c2d9f0e8c2bd1db2/gcc%2Fconfig%2Fmmix%2Fcrti.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/231008e5ed01da35d44cc2a0c2d9f0e8c2bd1db2/gcc%2Fconfig%2Fmmix%2Fcrti.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fcrti.asm?ref=231008e5ed01da35d44cc2a0c2d9f0e8c2bd1db2", "patch": "@@ -25,9 +25,10 @@ along with this program; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-% This is crt0 for mmix-knuth-mmixware, for setting up things for\n-% compiler-generated assembler and for setting up things between where the\n-% simulator calls and main, and shutting things down on the way back.\n+% This is the crt0 equivalent for mmix-knuth-mmixware, for setting up\n+% things for compiler-generated assembly-code and for setting up things\n+% between where the simulator calls and main, and shutting things down on\n+% the way back.  There's an actual crt0.o elsewhere, but that's a dummy.\n \n % This file and the GCC output are supposed to be *reasonably*\n % mmixal-compatible to enable people to re-use output with Knuth's mmixal.\n@@ -42,6 +43,7 @@ Boston, MA 02111-1307, USA.  */\n % This little treasure is here so the 32 lowest address bits of user data\n % will not be zero.  Because of truncation, that would cause test-case\n % gcc.c-torture/execute/980701-1.c to incorrectly fail.\n+\n \t.data\t! mmixal:= 8H LOC Data_Segment\n \t.p2align 3\n \tLOC @+(8-@)@7\n@@ -74,8 +76,8 @@ Main\tSETL\t$255,32\n #ifdef __MMIX_ABI_GNU__\n % Copy argc and argv from their initial position to argument registers\n % where necessary.\n-\tSET\t$232,$0\n-\tSET\t$233,$1\n+\tSET\t$231,$0\n+\tSET\t$232,$1\n #else\n % For the mmixware ABI, we need to move arguments.  The return value will\n % appear in $0.\n@@ -86,11 +88,11 @@ Main\tSETL\t$255,32\n \tPUSHJ\t$0,main\n \tJMP\texit\n \n-% Provide first part of _init and _fini.  Save the return address on the\n+% Provide the first part of _init and _fini.  Save the return address on the\n % register stack.  We eventually ignore the return address of these\n % PUSHJ:s, so it doesn't matter that whether .init and .fini code calls\n-% functions or where they store rJ.  We shouldn't get there, so abort if\n-% that happens\n+% functions or where they store rJ.  We shouldn't get there, so abort\n+% (TRAP Halt) if that happens.\n \n \t.section .init,\"ax\",@progbits\n \t.global\t_init"}]}