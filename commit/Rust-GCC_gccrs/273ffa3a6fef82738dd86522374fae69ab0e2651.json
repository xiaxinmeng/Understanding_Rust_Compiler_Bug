{"sha": "273ffa3a6fef82738dd86522374fae69ab0e2651", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjczZmZhM2E2ZmVmODI3MzhkZDg2NTIyMzc0ZmFlNjlhYjBlMjY1MQ==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-05T18:26:25Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-05T18:26:25Z"}, "message": "VAX: Also provide QImode and HImode `ctz' and `ffs' operations\n\nThe FFS machine instruction provides for arbitrary input bit-field widths\nso take advantage of this and convert `ffssi2' and `ctzsi2' to templates\nfor all the three of QI, HI, SI machine modes.\n\nTest cases will be added separately.\n\n\tgcc/\n\t* config/vax/builtins.md (width): New mode attribute.\n\t(ffssi2): Rework expander into...\n\t(ffs<mode>2): ... this.\n\t(ctzsi2): Rework insn into...\n\t(ctz<mode>2): ... this.", "tree": {"sha": "34272370d708f9e9e9f66af1f22087f281935e15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34272370d708f9e9e9f66af1f22087f281935e15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/273ffa3a6fef82738dd86522374fae69ab0e2651", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/273ffa3a6fef82738dd86522374fae69ab0e2651", "html_url": "https://github.com/Rust-GCC/gccrs/commit/273ffa3a6fef82738dd86522374fae69ab0e2651", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/273ffa3a6fef82738dd86522374fae69ab0e2651/comments", "author": null, "committer": null, "parents": [{"sha": "a17ab4b6add6a7b7cedbef39af442ca99f7cb3f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17ab4b6add6a7b7cedbef39af442ca99f7cb3f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a17ab4b6add6a7b7cedbef39af442ca99f7cb3f8"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "b7ed9762c2378d353ea8264385a4a485b85f1dd9", "filename": "gcc/config/vax/builtins.md", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273ffa3a6fef82738dd86522374fae69ab0e2651/gcc%2Fconfig%2Fvax%2Fbuiltins.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273ffa3a6fef82738dd86522374fae69ab0e2651/gcc%2Fconfig%2Fvax%2Fbuiltins.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fbuiltins.md?ref=273ffa3a6fef82738dd86522374fae69ab0e2651", "patch": "@@ -23,14 +23,15 @@\n   ]\n )\n \n+(define_mode_attr width [(QI \"8\") (HI \"16\") (SI \"32\")])\n (define_mode_attr bb_mem [(QI \"m\") (HI \"Q\") (SI \"Q\")])\n \n (define_int_iterator bit [0 1])\n (define_int_attr ccss [(0 \"cc\") (1 \"ss\")])\n \n-(define_expand \"ffssi2\"\n+(define_expand \"ffs<mode>2\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-\t(ffs:SI (match_operand:SI 1 \"general_operand\" \"\")))]\n+\t(ffs:SI (match_operand:VAXint 1 \"general_operand\" \"\")))]\n   \"\"\n   \"\n {\n@@ -39,22 +40,22 @@\n   rtx cond = gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx);\n   rtx target = gen_rtx_IF_THEN_ELSE (VOIDmode, cond, label_ref, pc_rtx);\n \n-  emit_insn (gen_ctzsi2 (operands[0], operands[1]));\n+  emit_insn (gen_ctz<mode>2 (operands[0], operands[1]));\n   emit_jump_insn (gen_rtx_SET (pc_rtx, target));\n-  emit_insn (gen_negsi2 (operands[0], const1_rtx));\n+  emit_insn (gen_neg<mode>2 (operands[0], const1_rtx));\n   emit_label (label);\n-  emit_insn (gen_addsi3 (operands[0], operands[0], const1_rtx));\n+  emit_insn (gen_add<mode>3 (operands[0], operands[0], const1_rtx));\n   DONE;\n }\")\n \n-(define_insn \"ctzsi2\"\n+(define_insn \"ctz<mode>2\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rQ\")\n-\t(ctz:SI (match_operand:SI 1 \"general_operand\" \"nrQT\")))\n+\t(ctz:SI (match_operand:VAXint 1 \"general_operand\" \"nrQT\")))\n    (set (cc0)\n \t(compare (match_dup 1)\n \t\t (const_int 0)))]\n   \"\"\n-  \"ffs $0,$32,%1,%0\")\n+  \"ffs $0,$<width>,%1,%0\")\n \n (define_expand \"sync_lock_test_and_set<mode>\"\n   [(match_operand:VAXint 0 \"nonimmediate_operand\" \"=&g\")"}]}