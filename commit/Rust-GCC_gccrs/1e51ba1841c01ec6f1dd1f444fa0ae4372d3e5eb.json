{"sha": "1e51ba1841c01ec6f1dd1f444fa0ae4372d3e5eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU1MWJhMTg0MWMwMWVjNmYxZGQxZjQ0NGZhMGFlNDM3MmQzZTVlYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1997-06-10T02:49:33Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1997-06-10T02:49:33Z"}, "message": "Use i?86, not i.86.\n\nDon't test /usr/lib/ldscripts; instead, test whether ld_help_string\ndoes not contain \"supported emulations\".\nUse a case statement to distinguish systems when there IS\n\"supported emulations\".\n\nFrom-SVN: r14212", "tree": {"sha": "0c1094adfd75c5cd163311428947b323662b8e25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c1094adfd75c5cd163311428947b323662b8e25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e51ba1841c01ec6f1dd1f444fa0ae4372d3e5eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e51ba1841c01ec6f1dd1f444fa0ae4372d3e5eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e51ba1841c01ec6f1dd1f444fa0ae4372d3e5eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e51ba1841c01ec6f1dd1f444fa0ae4372d3e5eb/comments", "author": null, "committer": null, "parents": [{"sha": "f46fe00a5ecace6f1025fad614b1644583609350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f46fe00a5ecace6f1025fad614b1644583609350", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f46fe00a5ecace6f1025fad614b1644583609350"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "b52d4f0a9fc640054a97450c7a45f48aeff30880", "filename": "gcc/config.guess", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e51ba1841c01ec6f1dd1f444fa0ae4372d3e5eb/gcc%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e51ba1841c01ec6f1dd1f444fa0ae4372d3e5eb/gcc%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.guess?ref=1e51ba1841c01ec6f1dd1f444fa0ae4372d3e5eb", "patch": "@@ -436,17 +436,21 @@ EOF\n \t# The BFD linker knows what the default object file format is, so\n \t# first see if it will tell us.\n \tld_help_string=`ld --help 2>&1`\n-\tif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: i.86linux\"; then\n-\t  echo \"${UNAME_MACHINE}-pc-linux-gnuaout\" ; exit 0\n-\telif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: i.86coff\"; then\n-\t  echo \"${UNAME_MACHINE}-pc-linux-gnucoff\" ; exit 0\n-\telif echo $ld_help_string | grep >/dev/null 2>&1 \"supported emulations:sparclinux\"; then\n-\t  echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0\n-\telif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: m68klinux\"; then\n-\t  echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0\n-\telif echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations: elf32ppc\"; then\n-\t  echo \"powerpc-unknown-linux-gnu\" ; exit 0\n-\telif test \"${UNAME_MACHINE}\" = \"alpha\" ; then\n+\tld_supported_emulations=`echo $ld_help_string\n+\t\t\t | sed -ne '/supported emulations:/!d\n+\t\t\t\t    s/[ \t][ \t]*/ /g\n+\t\t\t\t    s/.*supported emulations: *//\n+\t\t\t\t    s/ .*//\n+\t\t\t\t    p'`\n+        case \"$ld_supported_emulations\" in\n+\t  i?86linux)  echo \"${UNAME_MACHINE}-pc-linux-gnuaout\"      ; exit 0 ;;\n+\t  i?86coff)   echo \"${UNAME_MACHINE}-pc-linux-gnucoff\"      ; exit 0 ;;\n+\t  sparclinux) echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0 ;;\n+\t  m68klinux)  echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0 ;;\n+\t  elf32ppc)   echo \"powerpc-unknown-linux-gnu\"              ; exit 0 ;;\n+\tesac\n+\n+\tif test \"${UNAME_MACHINE}\" = \"alpha\" ; then\n \t  echo alpha-unknown-linux-gnu ; exit 0\n \telif test \"${UNAME_MACHINE}\" = \"mips\" ; then\n \t  cat >dummy.c <<EOF\n@@ -468,9 +472,12 @@ EOF\n \telse\n \t  # Either a pre-BFD a.out linker (linux-gnuoldld)\n \t  # or one that does not give us useful --help.\n-\t  # Gcc wants to distinguish between linux-gnuoldld and linux-gnuaout.\n-\t  test ! -d /usr/lib/ldscripts/. \\\n-\t    && echo \"${UNAME_MACHINE}-pc-linux-gnuoldld\" && exit 0\n+\t  # GCC wants to distinguish between linux-gnuoldld and linux-gnuaout.\n+\t  # If ld does not provide *any* \"supported emulations:\"\n+\t  # that means it is gnuoldld.\n+\t  echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations:\"\n+\t  test $? != 0 && echo \"${UNAME_MACHINE}-pc-linux-gnuoldld\" && exit 0\n+\n \t  case \"${UNAME_MACHINE}\" in\n \t  i?86)\n \t    VENDOR=pc;"}]}