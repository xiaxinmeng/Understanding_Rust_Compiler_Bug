{"sha": "c294eb47b25bcf24bacfbcdecedda5651124f54c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI5NGViNDdiMjViY2YyNGJhY2ZiY2RlY2VkZGE1NjUxMTI0ZjU0Yw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2012-09-07T16:00:07Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2012-09-07T16:00:07Z"}, "message": "re PR testsuite/54184 (gcc.dg/pr52558-1.c failure)\n\n\tPR testsuite/54184\n\t* gcc.dg/pr52558-1.c: Delete.\n\t* gcc.dg/simulate-thread/speculative-store-2.c: New.\n\nFrom-SVN: r191079", "tree": {"sha": "3085fbec07c3acbff698efa8be5b579522208fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3085fbec07c3acbff698efa8be5b579522208fbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c294eb47b25bcf24bacfbcdecedda5651124f54c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c294eb47b25bcf24bacfbcdecedda5651124f54c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c294eb47b25bcf24bacfbcdecedda5651124f54c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c294eb47b25bcf24bacfbcdecedda5651124f54c/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b12b5029cbf1a802565598511dd073f1afbe2840", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12b5029cbf1a802565598511dd073f1afbe2840", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b12b5029cbf1a802565598511dd073f1afbe2840"}], "stats": {"total": 102, "additions": 80, "deletions": 22}, "files": [{"sha": "e4ea1116641b966eed30b848049ef53a8dae45b5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c294eb47b25bcf24bacfbcdecedda5651124f54c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c294eb47b25bcf24bacfbcdecedda5651124f54c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c294eb47b25bcf24bacfbcdecedda5651124f54c", "patch": "@@ -1,3 +1,9 @@\n+2012-09-07  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR testsuite/54184\n+\t* gcc.dg/pr52558-1.c: Delete.\n+\t* gcc.dg/simulate-thread/speculative-store-2.c: New.\n+\n 2012-09-07  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* gcc.target/arm/pr50318-1.c: Scan for smlal."}, {"sha": "c34ad0655d35489dbb777059a01e5477d87b3b62", "filename": "gcc/testsuite/gcc.dg/pr52558-1.c", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b12b5029cbf1a802565598511dd073f1afbe2840/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52558-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b12b5029cbf1a802565598511dd073f1afbe2840/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52558-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr52558-1.c?ref=b12b5029cbf1a802565598511dd073f1afbe2840", "patch": "@@ -1,22 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"--param allow-store-data-races=0 -O2 -fdump-tree-lim1\" } */\n-\n-/* Test that `count' is not written to unless p->data > 0.  */\n-\n-int count;\n-\n-struct obj {\n-    int data;\n-    struct obj *next;\n-} *q;\n-\n-void func()\n-{\n-  struct obj *p;\n-  for (p = q; p; p = p->next)\n-    if (p->data > 0)\n-      count++;\n-}\n-\n-/* { dg-final { scan-tree-dump-times \"MEM count_lsm.. count_lsm_flag\" 1 \"lim1\" } } */\n-/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "d4d28f5ed6078238519b8aa13c4a13a486be557a", "filename": "gcc/testsuite/gcc.dg/simulate-thread/speculative-store-2.c", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c294eb47b25bcf24bacfbcdecedda5651124f54c/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fspeculative-store-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c294eb47b25bcf24bacfbcdecedda5651124f54c/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fspeculative-store-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fspeculative-store-2.c?ref=c294eb47b25bcf24bacfbcdecedda5651124f54c", "patch": "@@ -0,0 +1,74 @@\n+/* { dg-do link } */\n+/* { dg-options \"--param allow-store-data-races=0 -O2\" } */\n+/* { dg-final { simulate-thread } } */\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+#include \"simulate-thread.h\"\n+\n+/* Test that speculative stores do not happen for --param\n+   allow-store-data-races=0.  */\n+\n+int count, insns;\n+\n+struct obj {\n+    int data;\n+    struct obj *next;\n+} *q;\n+\n+void simulate_thread_other_threads ()\n+{\n+  ++insns;\n+  ++count;\n+}\n+\n+int simulate_thread_step_verify ()\n+{\n+  return 0;\n+}\n+\n+int simulate_thread_final_verify ()\n+{\n+  /* If count != insns, someone must have cached `count' and stored a\n+     racy value into it.  */\n+  if (count != insns)\n+    {\n+      printf(\"FAIL: count was incorrectly cached\\n\");\n+      return 1;\n+    }\n+  return 0;\n+}\n+\n+/* Test that `count' is not written to unless p->data > 0.  */\n+\n+__attribute__((noinline))\n+void simulate_thread_main()\n+{\n+  struct obj *p;\n+  for (p = q; p; p = p->next)\n+    if (p->data > 0)\n+      count++;\n+}\n+\n+struct obj *\n+insert(struct obj *head, int data)\n+{\n+  struct obj *t = (struct obj *) malloc (sizeof (struct obj));\n+  t->next = head;\n+  t->data = data;\n+  return t;\n+}\n+\n+int main()\n+{\n+  q = insert (0, 0);\n+  q = insert (q, 0);\n+  q = insert (q, 0);\n+  q = insert (q, 0);\n+  q = insert (q, 0);\n+\n+  simulate_thread_main ();\n+  simulate_thread_done ();\n+  return 0;\n+}"}]}