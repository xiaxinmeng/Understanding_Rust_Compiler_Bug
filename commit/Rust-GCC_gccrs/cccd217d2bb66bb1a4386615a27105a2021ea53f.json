{"sha": "cccd217d2bb66bb1a4386615a27105a2021ea53f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NjZDIxN2QyYmI2NmJiMWE0Mzg2NjE1YTI3MTA1YTIwMjFlYTUzZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-04-01T14:08:01Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-04-01T14:08:01Z"}, "message": "gcov-io.h (GCOV_CHECK, [...]): Remove.\n\n\t* gcov-io.h (GCOV_CHECK, GCOV_CHECK_READING,\n\tGCOV_CHECK_WRITING): Remove.\n\t(gcov_position, gcov_rewrite): Use gcc_assert.\n\t* gcov-io.c (gcov_open, gcov_write_words, gcov_write_length,\n\tgcov_read_words, gcov_sync, gcov_seek): Use gcc_assert.\n\t* libgcov.c (__gcov_merge_single, __gcov_merge_delta): Use\n\tgcc_assert.\n\nFrom-SVN: r97392", "tree": {"sha": "182cf8fa5a93fc8486b3e28c2de7702967ed9a7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/182cf8fa5a93fc8486b3e28c2de7702967ed9a7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cccd217d2bb66bb1a4386615a27105a2021ea53f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cccd217d2bb66bb1a4386615a27105a2021ea53f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cccd217d2bb66bb1a4386615a27105a2021ea53f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cccd217d2bb66bb1a4386615a27105a2021ea53f/comments", "author": null, "committer": null, "parents": [{"sha": "3cf1107531370bc19dff50f66e151fc1aaafde9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cf1107531370bc19dff50f66e151fc1aaafde9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cf1107531370bc19dff50f66e151fc1aaafde9a"}], "stats": {"total": 54, "additions": 25, "deletions": 29}, "files": [{"sha": "e7df520bd530923369d856720dd31331030847e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cccd217d2bb66bb1a4386615a27105a2021ea53f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cccd217d2bb66bb1a4386615a27105a2021ea53f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cccd217d2bb66bb1a4386615a27105a2021ea53f", "patch": "@@ -1,3 +1,13 @@\n+2005-04-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* gcov-io.h (GCOV_CHECK, GCOV_CHECK_READING,\n+\tGCOV_CHECK_WRITING): Remove.\n+\t(gcov_position, gcov_rewrite): Use gcc_assert.\n+\t* gcov-io.c (gcov_open, gcov_write_words, gcov_write_length,\n+\tgcov_read_words, gcov_sync, gcov_seek): Use gcc_assert.\n+\t* libgcov.c (__gcov_merge_single, __gcov_merge_delta): Use\n+\tgcc_assert.\n+\n 2005-04-01  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-inline.c: Fix a typo."}, {"sha": "67e08f0935eff46bfcdf515cf5b7f7fe5f21c0a9", "filename": "gcc/gcov-io.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cccd217d2bb66bb1a4386615a27105a2021ea53f/gcc%2Fgcov-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cccd217d2bb66bb1a4386615a27105a2021ea53f/gcc%2Fgcov-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.c?ref=cccd217d2bb66bb1a4386615a27105a2021ea53f", "patch": "@@ -74,7 +74,7 @@ gcov_open (const char *name, int mode)\n   s_flock.l_pid = getpid ();\n #endif\n   \n-  GCOV_CHECK (!gcov_var.file);\n+  gcc_assert (!gcov_var.file);\n   gcov_var.start = 0;\n   gcov_var.offset = gcov_var.length = 0;\n   gcov_var.overread = -1u;\n@@ -221,14 +221,14 @@ gcov_write_words (unsigned words)\n {\n   gcov_unsigned_t *result;\n \n-  GCOV_CHECK_WRITING ();\n+  gcc_assert (gcov_var.mode < 0);\n #if IN_LIBGCOV\n   if (gcov_var.offset >= GCOV_BLOCK_SIZE)\n     {\n       gcov_write_block (GCOV_BLOCK_SIZE);\n       if (gcov_var.offset)\n \t{\n-\t  GCOV_CHECK (gcov_var.offset == 1);\n+\t  gcc_assert (gcov_var.offset == 1);\n \t  memcpy (gcov_var.buffer, gcov_var.buffer + GCOV_BLOCK_SIZE, 4);\n \t}\n     }\n@@ -323,9 +323,9 @@ gcov_write_length (gcov_position_t position)\n   gcov_unsigned_t length;\n   gcov_unsigned_t *buffer;\n \n-  GCOV_CHECK_WRITING ();\n-  GCOV_CHECK (position + 2 <= gcov_var.start + gcov_var.offset);\n-  GCOV_CHECK (position >= gcov_var.start);\n+  gcc_assert (gcov_var.mode < 0);\n+  gcc_assert (position + 2 <= gcov_var.start + gcov_var.offset);\n+  gcc_assert (position >= gcov_var.start);\n   offset = position - gcov_var.start;\n   length = gcov_var.offset - offset - 2;\n   buffer = (gcov_unsigned_t *) &gcov_var.buffer[offset];\n@@ -380,14 +380,14 @@ gcov_read_words (unsigned words)\n   const gcov_unsigned_t *result;\n   unsigned excess = gcov_var.length - gcov_var.offset;\n   \n-  GCOV_CHECK_READING ();\n+  gcc_assert (gcov_var.mode > 0);\n   if (excess < words)\n     {\n       gcov_var.start += gcov_var.offset;\n #if IN_LIBGCOV\n       if (excess)\n \t{\n-\t  GCOV_CHECK (excess == 1);\n+\t  gcc_assert (excess == 1);\n \t  memcpy (gcov_var.buffer, gcov_var.buffer + gcov_var.offset, 4);\n \t}\n #else\n@@ -396,7 +396,7 @@ gcov_read_words (unsigned words)\n       gcov_var.offset = 0;\n       gcov_var.length = excess;\n #if IN_LIBGCOV\n-      GCOV_CHECK (!gcov_var.length || gcov_var.length == 1);\n+      gcc_assert (!gcov_var.length || gcov_var.length == 1);\n       excess = GCOV_BLOCK_SIZE;\n #else\n       if (gcov_var.length + words > gcov_var.alloc)\n@@ -494,7 +494,7 @@ gcov_read_summary (struct gcov_summary *summary)\n GCOV_LINKAGE void\n gcov_sync (gcov_position_t base, gcov_unsigned_t length)\n {\n-  GCOV_CHECK_READING ();\n+  gcc_assert (gcov_var.mode > 0);\n   base += length;\n   if (base - gcov_var.start <= gcov_var.length)\n     gcov_var.offset = base - gcov_var.start;\n@@ -513,7 +513,7 @@ gcov_sync (gcov_position_t base, gcov_unsigned_t length)\n GCOV_LINKAGE void\n gcov_seek (gcov_position_t base)\n {\n-  GCOV_CHECK_WRITING ();\n+  gcc_assert (gcov_var.mode < 0);\n   if (gcov_var.offset)\n     gcov_write_block (gcov_var.offset);\n   fseek (gcov_var.file, base << 2, SEEK_SET);"}, {"sha": "904f5419dba3894e8d7b291877c52a98c191ef72", "filename": "gcc/gcov-io.h", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cccd217d2bb66bb1a4386615a27105a2021ea53f/gcc%2Fgcov-io.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cccd217d2bb66bb1a4386615a27105a2021ea53f/gcc%2Fgcov-io.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.h?ref=cccd217d2bb66bb1a4386615a27105a2021ea53f", "patch": "@@ -546,26 +546,12 @@ GCOV_LINKAGE void gcov_write_length (gcov_position_t /*position*/);\n GCOV_LINKAGE time_t gcov_time (void);\n #endif\n \n-/* Make sure the library is used correctly.  */\n-#if IN_LIBGCOV\n-#if ENABLE_CHECKING\n-#define GCOV_CHECK(EXPR) (!(EXPR) ? abort (), 0 : 0)\n-#else\n-/* Include EXPR, so that unused variable warnings do not occur.  */\n-#define GCOV_CHECK(EXPR) ((void)(0 && (EXPR)))\n-#endif\n-#else\n-#define GCOV_CHECK(EXPR) gcc_assert (EXPR)\n-#endif\n-#define GCOV_CHECK_READING() GCOV_CHECK(gcov_var.mode > 0)\n-#define GCOV_CHECK_WRITING() GCOV_CHECK(gcov_var.mode < 0)\n-\n /* Save the current position in the gcov file.  */\n \n static inline gcov_position_t\n gcov_position (void)\n {\n-  GCOV_CHECK_READING ();\n+  gcc_assert (gcov_var.mode > 0);\n   return gcov_var.start + gcov_var.offset;\n }\n \n@@ -583,7 +569,7 @@ gcov_is_error (void)\n static inline void\n gcov_rewrite (void)\n {\n-  GCOV_CHECK_READING ();\n+  gcc_assert (gcov_var.mode > 0);\n   gcov_var.mode = -1;\n   gcov_var.start = 0;\n   gcov_var.offset = 0;"}, {"sha": "6e9c9d3a70b9a848c8eb028762641395a1abd9cc", "filename": "gcc/libgcov.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cccd217d2bb66bb1a4386615a27105a2021ea53f/gcc%2Flibgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cccd217d2bb66bb1a4386615a27105a2021ea53f/gcc%2Flibgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcov.c?ref=cccd217d2bb66bb1a4386615a27105a2021ea53f", "patch": "@@ -519,7 +519,7 @@ __gcov_merge_single (gcov_type *counters, unsigned n_counters)\n   unsigned i, n_measures;\n   gcov_type value, counter, all;\n \n-  GCOV_CHECK (!(n_counters % 3));\n+  gcc_assert (!(n_counters % 3));\n   n_measures = n_counters / 3;\n   for (i = 0; i < n_measures; i++, counters += 3)\n     {\n@@ -558,7 +558,7 @@ __gcov_merge_delta (gcov_type *counters, unsigned n_counters)\n   unsigned i, n_measures;\n   gcov_type last, value, counter, all;\n \n-  GCOV_CHECK (!(n_counters % 4));\n+  gcc_assert (!(n_counters % 4));\n   n_measures = n_counters / 4;\n   for (i = 0; i < n_measures; i++, counters += 4)\n     {"}]}