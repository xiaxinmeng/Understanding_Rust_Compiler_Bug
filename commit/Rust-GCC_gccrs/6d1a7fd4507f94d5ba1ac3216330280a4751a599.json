{"sha": "6d1a7fd4507f94d5ba1ac3216330280a4751a599", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQxYTdmZDQ1MDdmOTRkNWJhMWFjMzIxNjMzMDI4MGE0NzUxYTU5OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-03-21T14:27:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-03-21T14:27:32Z"}, "message": "re PR middle-end/89779 (internal compiler error: tree check: expected class \u2018type\u2019, have \u2018exceptional\u2019 (error_mark) in tree_nop_conversion_p, at tree.c:12798)\n\n2019-03-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/89779\n\t* tree.c (tree_nop_conversion): Consolidate and fix defensive\n\tchecks with respect to released SSA names now having error_mark_node\n\ttype.\n\t* fold-const.c (operand_equal_p): Likewise.\n\n\t* gcc.dg/torture/pr89779.c: New testcase.\n\nFrom-SVN: r269838", "tree": {"sha": "18b7ef21746ac24ef6c1d79d6e6d37f58ce0d026", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18b7ef21746ac24ef6c1d79d6e6d37f58ce0d026"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d1a7fd4507f94d5ba1ac3216330280a4751a599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1a7fd4507f94d5ba1ac3216330280a4751a599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1a7fd4507f94d5ba1ac3216330280a4751a599", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1a7fd4507f94d5ba1ac3216330280a4751a599/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2186cd88ed9015ad0cd6f265daa164648d30f74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2186cd88ed9015ad0cd6f265daa164648d30f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2186cd88ed9015ad0cd6f265daa164648d30f74"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "717e2f21d9620a57e2c9f82ea0d14c3546fe3a4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1a7fd4507f94d5ba1ac3216330280a4751a599/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1a7fd4507f94d5ba1ac3216330280a4751a599/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d1a7fd4507f94d5ba1ac3216330280a4751a599", "patch": "@@ -1,3 +1,11 @@\n+2019-03-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89779\n+\t* tree.c (tree_nop_conversion): Consolidate and fix defensive\n+\tchecks with respect to released SSA names now having error_mark_node\n+\ttype.\n+\t* fold-const.c (operand_equal_p): Likewise.\n+\n 2019-03-20  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \tPR target/89775"}, {"sha": "86ad2cb8487f3f2fc720380ea47a382d59ab5e6f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1a7fd4507f94d5ba1ac3216330280a4751a599/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1a7fd4507f94d5ba1ac3216330280a4751a599/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=6d1a7fd4507f94d5ba1ac3216330280a4751a599", "patch": "@@ -2973,11 +2973,6 @@ operand_equal_p (const_tree arg0, const_tree arg1, unsigned int flags)\n       || TREE_TYPE (arg1) == error_mark_node)\n     return 0;\n \n-  /* Similar, if either does not have a type (like a released SSA name), \n-     they aren't equal.  */\n-  if (!TREE_TYPE (arg0) || !TREE_TYPE (arg1))\n-    return 0;\n-\n   /* We cannot consider pointers to different address space equal.  */\n   if (POINTER_TYPE_P (TREE_TYPE (arg0))\n       && POINTER_TYPE_P (TREE_TYPE (arg1))"}, {"sha": "c8f9492130e15637f07026728a69300a824a00af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1a7fd4507f94d5ba1ac3216330280a4751a599/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1a7fd4507f94d5ba1ac3216330280a4751a599/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d1a7fd4507f94d5ba1ac3216330280a4751a599", "patch": "@@ -1,3 +1,8 @@\n+2019-03-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89779\n+\t* gcc.dg/torture/pr89779.c: New testcase.\n+\n 2019-03-21  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/78645"}, {"sha": "2a9d240aa40928c7a586decb59e507fe2b2834e3", "filename": "gcc/testsuite/gcc.dg/torture/pr89779.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1a7fd4507f94d5ba1ac3216330280a4751a599/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89779.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1a7fd4507f94d5ba1ac3216330280a4751a599/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89779.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89779.c?ref=6d1a7fd4507f94d5ba1ac3216330280a4751a599", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+\n+typedef int a;\n+void h(a);\n+void c(a *d, int b)\n+{\n+  int e, f, g;\n+  for (; e; e++)\n+    for (f = 0; f < 4; f++)\n+      if (d)\n+\tfor (g = e + 1; g; g++)\n+\t  h(d[g]);\n+}\n+void i()\n+{\n+  a *j;\n+  int k, l;\n+  for (; k; k++)\n+    c(j, l);\n+}"}, {"sha": "ae8ff085f956494c63f561c051e31fd11b110f77", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d1a7fd4507f94d5ba1ac3216330280a4751a599/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d1a7fd4507f94d5ba1ac3216330280a4751a599/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6d1a7fd4507f94d5ba1ac3216330280a4751a599", "patch": "@@ -12812,13 +12812,10 @@ tree_nop_conversion (const_tree exp)\n   if (!CONVERT_EXPR_P (exp)\n       && TREE_CODE (exp) != NON_LVALUE_EXPR)\n     return false;\n-  if (TREE_OPERAND (exp, 0) == error_mark_node)\n-    return false;\n \n   outer_type = TREE_TYPE (exp);\n   inner_type = TREE_TYPE (TREE_OPERAND (exp, 0));\n-\n-  if (!inner_type)\n+  if (!inner_type || inner_type == error_mark_node)\n     return false;\n \n   return tree_nop_conversion_p (outer_type, inner_type);"}]}