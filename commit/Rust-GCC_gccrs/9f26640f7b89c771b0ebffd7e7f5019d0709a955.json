{"sha": "9f26640f7b89c771b0ebffd7e7f5019d0709a955", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYyNjY0MGY3Yjg5Yzc3MWIwZWJmZmQ3ZTdmNTAxOWQwNzA5YTk1NQ==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-08-04T02:50:28Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-08-04T09:43:17Z"}, "message": "Refine predicate of peephole2 to general_reg_operand. [PR target/101743]\n\nThe define_peephole2 which is added by r12-2640-gf7bf03cf69ccb7dc\nshould only work on general registers, considering that x86 also\nsupports mov instructions between gpr, sse reg, mask reg, limiting the\npeephole2 predicate to general_reg_operand.\n\ngcc/ChangeLog:\n\n\tPR target/101743\n\t* config/i386/i386.md (peephole2): Refine predicate from\n\tregister_operand to general_reg_operand.", "tree": {"sha": "6049628443ab3f83d6b378e3d0d0cca5318348ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6049628443ab3f83d6b378e3d0d0cca5318348ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f26640f7b89c771b0ebffd7e7f5019d0709a955", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f26640f7b89c771b0ebffd7e7f5019d0709a955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f26640f7b89c771b0ebffd7e7f5019d0709a955", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f26640f7b89c771b0ebffd7e7f5019d0709a955/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7195fa03e7b8dfaff85d122da3b75f0a30ce95f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7195fa03e7b8dfaff85d122da3b75f0a30ce95f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7195fa03e7b8dfaff85d122da3b75f0a30ce95f8"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "51e8b475bca328f87aea5c19659b65b327149cce", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f26640f7b89c771b0ebffd7e7f5019d0709a955/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f26640f7b89c771b0ebffd7e7f5019d0709a955/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9f26640f7b89c771b0ebffd7e7f5019d0709a955", "patch": "@@ -19423,11 +19423,11 @@\n ;; Eliminate a reg-reg mov by inverting the condition of a cmov (#1).\n ;; mov r0,r1; dec r0; mov r2,r3; cmov r0,r2 -> dec r1; mov r0,r3; cmov r0, r1\n (define_peephole2\n- [(set (match_operand:SWI248 0 \"register_operand\")\n-       (match_operand:SWI248 1 \"register_operand\"))\n+ [(set (match_operand:SWI248 0 \"general_reg_operand\")\n+       (match_operand:SWI248 1 \"general_reg_operand\"))\n   (parallel [(set (reg FLAGS_REG) (match_operand 5))\n \t     (set (match_dup 0) (match_operand:SWI248 6))])\n-  (set (match_operand:SWI248 2 \"register_operand\")\n+  (set (match_operand:SWI248 2 \"general_reg_operand\")\n        (match_operand:SWI248 3))\n   (set (match_dup 0)\n        (if_then_else:SWI248 (match_operator 4 \"ix86_comparison_operator\"\n@@ -19455,10 +19455,10 @@\n ;; Eliminate a reg-reg mov by inverting the condition of a cmov (#2).\n ;; mov r2,r3; mov r0,r1; dec r0; cmov r0,r2 -> dec r1; mov r0,r3; cmov r0, r1\n (define_peephole2\n- [(set (match_operand:SWI248 2 \"register_operand\")\n+ [(set (match_operand:SWI248 2 \"general_reg_operand\")\n        (match_operand:SWI248 3))\n-  (set (match_operand:SWI248 0 \"register_operand\")\n-       (match_operand:SWI248 1 \"register_operand\"))\n+  (set (match_operand:SWI248 0 \"general_reg_operand\")\n+       (match_operand:SWI248 1 \"general_reg_operand\"))\n   (parallel [(set (reg FLAGS_REG) (match_operand 5))\n \t     (set (match_dup 0) (match_operand:SWI248 6))])\n   (set (match_dup 0)"}]}