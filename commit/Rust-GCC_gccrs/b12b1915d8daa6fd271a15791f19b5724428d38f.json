{"sha": "b12b1915d8daa6fd271a15791f19b5724428d38f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEyYjE5MTVkOGRhYTZmZDI3MWExNTc5MWYxOWI1NzI0NDI4ZDM4Zg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-10-17T13:04:38Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-10-17T13:04:38Z"}, "message": "Makefile.in (C_COMMON_OBJS): Add c-family/c-attribs.o.\n\n\t* Makefile.in (C_COMMON_OBJS): Add c-family/c-attribs.o.\n\n\t* c-attribs.c: New file.\n\t* c-common.c: Move attributes handling to c-attribs.c.\n\t(get_nonnull_operand): No longer static.\n\t* c-common.h: Move the declarations from c-attribs.c to its own section.\n\nFrom-SVN: r241238", "tree": {"sha": "cb4a2609890d93b658ad383cdff51e510a7e36a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb4a2609890d93b658ad383cdff51e510a7e36a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b12b1915d8daa6fd271a15791f19b5724428d38f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12b1915d8daa6fd271a15791f19b5724428d38f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b12b1915d8daa6fd271a15791f19b5724428d38f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12b1915d8daa6fd271a15791f19b5724428d38f/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6a1ec62617c0a21e9b9e849cda8e5510efb52b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6a1ec62617c0a21e9b9e849cda8e5510efb52b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6a1ec62617c0a21e9b9e849cda8e5510efb52b7"}], "stats": {"total": 6667, "additions": 3365, "deletions": 3302}, "files": [{"sha": "b5e65289366d4c99ab4a37f4d77aa5d44fb6a28d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b12b1915d8daa6fd271a15791f19b5724428d38f", "patch": "@@ -1,3 +1,7 @@\n+2016-10-17  Marek Polacek  <polacek@redhat.com>\n+\n+\t* Makefile.in (C_COMMON_OBJS): Add c-family/c-attribs.o.\n+\n 2016-10-17  Richard Biener  <rguenther@suse.de>\n \n \t* bb-reorder.c (reorder_basic_blocks_simple): Clear BB_VISITED"}, {"sha": "c512cd709703016006af28f8444c7dbc800dcddb", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b12b1915d8daa6fd271a15791f19b5724428d38f", "patch": "@@ -1183,7 +1183,7 @@ C_COMMON_OBJS = c-family/c-common.o c-family/c-cppbuiltin.o c-family/c-dump.o \\\n   c-family/c-semantics.o c-family/c-ada-spec.o \\\n   c-family/c-cilkplus.o \\\n   c-family/array-notation-common.o c-family/cilk.o c-family/c-ubsan.o \\\n-  c-family/c-warn.o\n+  c-family/c-attribs.o c-family/c-warn.o\n \n # Language-independent object files.\n # We put the *-match.o and insn-*.o files first so that a parallel make"}, {"sha": "64eccee3b77a5788252f68f9e3a388f374351ba0", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b12b1915d8daa6fd271a15791f19b5724428d38f", "patch": "@@ -1,3 +1,10 @@\n+2016-10-17  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-attribs.c: New file.\n+\t* c-common.c: Move attributes handling to c-attribs.c.\n+\t(get_nonnull_operand): No longer static.\n+\t* c-common.h: Move the declarations from c-attribs.c to its own section.\n+\n 2016-10-14  Jason Merrill  <jason@redhat.com>\n \n \t* c-cppbuiltin.c (c_cpp_builtins): Define __cpp_aggregate_bases"}, {"sha": "925f1b20c5096bb09724aa82df144c8a122ec49a", "filename": "gcc/c-family/c-attribs.c", "status": "added", "additions": 3163, "deletions": 0, "changes": 3163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=b12b1915d8daa6fd271a15791f19b5724428d38f"}, {"sha": "326ff6f49e2083bc9c3afe7edf75c0d8c51af18a", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 181, "deletions": 3293, "changes": 3474, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=b12b1915d8daa6fd271a15791f19b5724428d38f"}, {"sha": "bfdbda0898df275f2419eef766ea9b759e0c188f", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b12b1915d8daa6fd271a15791f19b5724428d38f/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=b12b1915d8daa6fd271a15791f19b5724428d38f", "patch": "@@ -808,10 +808,8 @@ extern bool check_builtin_function_arguments (location_t, vec<location_t>,\n \t\t\t\t\t      tree, int, tree *);\n extern void check_function_format (tree, int, tree *);\n extern bool attribute_fallthrough_p (tree);\n-extern tree handle_unused_attribute (tree *, tree, tree, int, bool *);\n extern tree handle_format_attribute (tree *, tree, tree, int, bool *);\n extern tree handle_format_arg_attribute (tree *, tree, tree, int, bool *);\n-extern bool attribute_takes_identifier_p (const_tree);\n extern bool c_common_handle_option (size_t, const char *, int, int, location_t,\n \t\t\t\t    const struct cl_option_handlers *);\n extern bool default_handle_c_option (size_t, const char *, int);\n@@ -857,6 +855,7 @@ extern bool pointer_to_zero_sized_aggr_p (tree);\n extern bool bool_promoted_to_int_p (tree);\n extern tree fold_for_warn (tree);\n extern tree c_common_get_narrower (tree, int *);\n+extern bool get_nonnull_operand (tree, unsigned HOST_WIDE_INT *);\n \n #define c_sizeof(LOC, T)  c_sizeof_or_alignof_type (LOC, T, true, false, 1)\n #define c_alignof(LOC, T) c_sizeof_or_alignof_type (LOC, T, false, false, 1)\n@@ -1315,8 +1314,6 @@ c_tree_chain_next (tree t)\n #define TM_STMT_ATTR_ATOMIC\t4\n #define TM_STMT_ATTR_RELAXED\t8\n \n-extern int parse_tm_stmt_attr (tree, int);\n-\n /* Mask used by tm_attr_to_mask and tm_mask_to_attr.  Note that these\n    are ordered specifically such that more restrictive attributes are\n    at lower bit positions.  This fact is known by the C++ tm attribute\n@@ -1328,10 +1325,6 @@ extern int parse_tm_stmt_attr (tree, int);\n #define TM_ATTR_IRREVOCABLE\t\t8\n #define TM_ATTR_MAY_CANCEL_OUTER\t16\n \n-extern int tm_attr_to_mask (tree);\n-extern tree tm_mask_to_attr (int);\n-extern tree find_tm_attribute (tree);\n-\n /* A suffix-identifier value doublet that represents user-defined literals\n    for C++-0x.  */\n enum overflow_type {\n@@ -1538,6 +1531,14 @@ extern bool maybe_warn_shift_overflow (location_t, tree, tree);\n extern void warn_duplicated_cond_add_or_warn (location_t, tree, vec<tree> **);\n extern bool diagnose_mismatched_attributes (tree, tree);\n \n+/* In c-attribs.c.  */\n+extern bool attribute_takes_identifier_p (const_tree);\n+extern tree handle_unused_attribute (tree *, tree, tree, int, bool *);\n+extern int parse_tm_stmt_attr (tree, int);\n+extern int tm_attr_to_mask (tree);\n+extern tree tm_mask_to_attr (int);\n+extern tree find_tm_attribute (tree);\n+\n #if CHECKING_P\n namespace selftest {\n   extern void c_format_c_tests (void);"}]}