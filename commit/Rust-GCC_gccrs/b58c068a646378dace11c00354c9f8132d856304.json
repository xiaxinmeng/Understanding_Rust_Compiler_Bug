{"sha": "b58c068a646378dace11c00354c9f8132d856304", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU4YzA2OGE2NDYzNzhkYWNlMTFjMDAzNTRjOWY4MTMyZDg1NjMwNA==", "commit": {"author": {"name": "Denis Chertykov", "email": "denisc@overta.ru", "date": "2000-05-11T18:53:24Z"}, "committer": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2000-05-11T18:53:24Z"}, "message": "avr-protos.c (jump_over_one_insn_p): New declaration.\n\n\n\t* config/avr/avr-protos.c (jump_over_one_insn_p): New declaration.\n\t* config/avr/avr.c (jump_over_one_insn_p): New function.\n\t* config/avr/avr.md: New peepholes added. Output test and\n\tconditional jump to \"sbrc\" or \"sbrs\" command.\n\nFrom-SVN: r33855", "tree": {"sha": "f8b7b11e7761a392f63eb714232c7fda9e0b228e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8b7b11e7761a392f63eb714232c7fda9e0b228e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b58c068a646378dace11c00354c9f8132d856304", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b58c068a646378dace11c00354c9f8132d856304", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b58c068a646378dace11c00354c9f8132d856304", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b58c068a646378dace11c00354c9f8132d856304/comments", "author": null, "committer": null, "parents": [{"sha": "38b8de2fe15314c4a3034e638e9874f1d413a923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38b8de2fe15314c4a3034e638e9874f1d413a923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38b8de2fe15314c4a3034e638e9874f1d413a923"}], "stats": {"total": 75, "additions": 74, "deletions": 1}, "files": [{"sha": "3c9aecb84332cb019dbbbbfa9f1355fa2c1fe328", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b58c068a646378dace11c00354c9f8132d856304/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b58c068a646378dace11c00354c9f8132d856304/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b58c068a646378dace11c00354c9f8132d856304", "patch": "@@ -1,3 +1,10 @@\n+Thu May 11 22:28:05 2000  Denis Chertykov  <denisc@overta.ru>\n+\n+\t* config/avr/avr-protos.c (jump_over_one_insn_p): New declaration.\n+\t* config/avr/avr.c (jump_over_one_insn_p): New function.\n+\t* config/avr/avr.md: New peepholes added. Output test and\n+\tconditional jump to \"sbrc\" or \"sbrs\" command.\n+\n 2000-05-11  Mark Elbrecht  <snowball3@bigfoot.com>\n \n \t* cppmain.c (main): Use IS_DIR_SEPARATOR."}, {"sha": "7532754e0384d62a0bc825ec31ce62f19e73aa49", "filename": "gcc/config/avr/avr-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b58c068a646378dace11c00354c9f8132d856304/gcc%2Fconfig%2Favr%2Favr-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b58c068a646378dace11c00354c9f8132d856304/gcc%2Fconfig%2Favr%2Favr-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-protos.h?ref=b58c068a646378dace11c00354c9f8132d856304", "patch": "@@ -136,6 +136,7 @@ extern int    avr_jump_mode          PARAMS ((rtx x, rtx insn));\n extern int    byte_immediate_operand PARAMS ((register rtx op,\n \t\t\t\t\t     enum machine_mode mode));\n extern int    test_hard_reg_class    PARAMS ((enum reg_class class, rtx x));\n+extern int    jump_over_one_insn_p   PARAMS ((rtx insn, rtx dest));\n \n #endif /* RTX_CODE */\n "}, {"sha": "fbb96cf2c3877e926cb862438a68543a36c1eac9", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b58c068a646378dace11c00354c9f8132d856304/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b58c068a646378dace11c00354c9f8132d856304/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=b58c068a646378dace11c00354c9f8132d856304", "patch": "@@ -3869,4 +3869,16 @@ debug_hard_reg_set (HARD_REG_SET set)\n     }\n   fprintf (stderr, \"\\n\");\n }\n-\t     \n+\n+int\n+jump_over_one_insn_p (insn, dest)\n+     rtx insn;\n+     rtx dest;\n+{\n+  int uid = INSN_UID (GET_CODE (dest) == LABEL_REF\n+\t\t      ? XEXP (dest, 0)\n+\t\t      : dest);\n+  int jump_addr = insn_addresses[INSN_UID (insn)];\n+  int dest_addr = insn_addresses[uid];\n+  return dest_addr - jump_addr == 2;\n+}"}, {"sha": "9f2afc68ccb582315a13a2c688e0257738ba5cc4", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b58c068a646378dace11c00354c9f8132d856304/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b58c068a646378dace11c00354c9f8132d856304/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=b58c068a646378dace11c00354c9f8132d856304", "patch": "@@ -1832,3 +1832,56 @@\n           AS1 (jmp,%1));\n }\")\n \t\t\t\t\t\n+(define_peephole\n+  [(set (cc0) (match_operand:QI 0 \"register_operand\" \"\"))\n+   (set (pc)\n+\t(if_then_else (lt (cc0) (const_int 0))\n+\t\t      (label_ref (match_operand 1 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"jump_over_one_insn_p (insn, operands[1])\"\n+  \"sbrs %0,7\")\n+\n+(define_peephole\n+  [(set (cc0) (match_operand:QI 0 \"register_operand\" \"\"))\n+   (set (pc)\n+\t(if_then_else (ge (cc0) (const_int 0))\n+\t\t      (label_ref (match_operand 1 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"jump_over_one_insn_p (insn, operands[1])\"\n+  \"sbrc %0,7\")\n+\t\t\t\t\t\n+(define_peephole\n+  [(set (cc0) (match_operand:HI 0 \"register_operand\" \"\"))\n+   (set (pc)\n+\t(if_then_else (lt (cc0) (const_int 0))\n+\t\t      (label_ref (match_operand 1 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"jump_over_one_insn_p (NEXT_INSN (insn), operands[1])\"\n+  \"sbrs %B0,7\")\n+\n+(define_peephole\n+  [(set (cc0) (match_operand:HI 0 \"register_operand\" \"\"))\n+   (set (pc)\n+\t(if_then_else (ge (cc0) (const_int 0))\n+\t\t      (label_ref (match_operand 1 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"jump_over_one_insn_p (insn, operands[1])\"\n+  \"sbrc %B0,7\")\n+\n+(define_peephole\n+  [(set (cc0) (match_operand:SI 0 \"register_operand\" \"\"))\n+   (set (pc)\n+\t(if_then_else (lt (cc0) (const_int 0))\n+\t\t      (label_ref (match_operand 1 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"jump_over_one_insn_p (NEXT_INSN (insn), operands[1])\"\n+  \"sbrs %D0,7\")\n+\n+(define_peephole\n+  [(set (cc0) (match_operand:SI 0 \"register_operand\" \"\"))\n+   (set (pc)\n+\t(if_then_else (ge (cc0) (const_int 0))\n+\t\t      (label_ref (match_operand 1 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"jump_over_one_insn_p (insn, operands[1])\"\n+  \"sbrc %D0,7\")"}]}