{"sha": "5ec81069e5422ce9e606abc35ff3152a9478caf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVjODEwNjllNTQyMmNlOWU2MDZhYmMzNWZmMzE1MmE5NDc4Y2FmNQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-05-25T17:52:03Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-05-25T17:52:03Z"}, "message": "re PR fortran/32600 ([ISO Bind C] C_F_POINTER w/o SHAPE should not be a library function)\n\n2008-05-25  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/32600\n        * trans-expr.c (gfc_conv_function_call): Remove library\n        call for c_f_pointer with scalar Fortran pointers and for\n        c_f_procpointer.\n\n2008-05-25  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/32600\n        * intrinsics/iso_c_binding.c (c_f_procpointer): Remove.\n        * intrinsics/iso_c_binding.h (c_f_procpointer): Remove.\n        * gfortran.map (c_f_procpointer): Remove.\n\n2008-05-25  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/32600\n        * gfortran.dg/c_f_pointer_tests_3.f90: New.\n\nFrom-SVN: r135877", "tree": {"sha": "ca93358d5c827cf4f4f0ac92f9cfd0055fc12c0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca93358d5c827cf4f4f0ac92f9cfd0055fc12c0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ec81069e5422ce9e606abc35ff3152a9478caf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec81069e5422ce9e606abc35ff3152a9478caf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ec81069e5422ce9e606abc35ff3152a9478caf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec81069e5422ce9e606abc35ff3152a9478caf5/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb238648c42ed68efbf890c01cb9631a02455a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb238648c42ed68efbf890c01cb9631a02455a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb238648c42ed68efbf890c01cb9631a02455a2a"}], "stats": {"total": 100, "additions": 82, "deletions": 18}, "files": [{"sha": "5c85a65eeeca72b11b1101fde25f305e2a46fe7d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec81069e5422ce9e606abc35ff3152a9478caf5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec81069e5422ce9e606abc35ff3152a9478caf5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5ec81069e5422ce9e606abc35ff3152a9478caf5", "patch": "@@ -1,3 +1,10 @@\n+2008-05-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32600\n+\t* trans-expr.c (gfc_conv_function_call): Remove library\n+\tcall for c_f_pointer with scalar Fortran pointers and for\n+\tc_f_procpointer.\n+\n 2008-05-21  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/36257"}, {"sha": "cfd33e464bc544547e554375c89fb70cacf35058", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec81069e5422ce9e606abc35ff3152a9478caf5/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec81069e5422ce9e606abc35ff3152a9478caf5/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=5ec81069e5422ce9e606abc35ff3152a9478caf5", "patch": "@@ -2317,6 +2317,34 @@ gfc_conv_function_call (gfc_se * se, gfc_symbol * sym,\n \t  arg->expr->ts.kind = sym->ts.derived->ts.kind;\n \t  gfc_conv_expr_reference (se, arg->expr);\n       \n+\t  return 0;\n+\t}\n+      else if ((sym->intmod_sym_id == ISOCBINDING_F_POINTER\n+\t         && arg->next->expr->rank == 0)\n+\t       || sym->intmod_sym_id == ISOCBINDING_F_PROCPOINTER)\n+\t{\n+\t  /* Convert c_f_pointer if fptr is a scalar\n+\t     and convert c_f_procpointer.  */\n+\t  gfc_se cptrse;\n+\t  gfc_se fptrse;\n+\n+\t  gfc_init_se (&cptrse, NULL);\n+\t  gfc_conv_expr (&cptrse, arg->expr);\n+\t  gfc_add_block_to_block (&se->pre, &cptrse.pre);\n+\t  gfc_add_block_to_block (&se->post, &cptrse.post);\n+\n+\t  gfc_init_se (&fptrse, NULL);\n+\t  if (sym->intmod_sym_id == ISOCBINDING_F_POINTER)\n+\t      fptrse.want_pointer = 1;\n+\n+\t  gfc_conv_expr (&fptrse, arg->next->expr);\n+\t  gfc_add_block_to_block (&se->pre, &fptrse.pre);\n+\t  gfc_add_block_to_block (&se->post, &fptrse.post);\n+\n+\t  tmp = arg->next->expr->symtree->n.sym->backend_decl;\n+\t  se->expr = fold_build2 (MODIFY_EXPR, TREE_TYPE (tmp), fptrse.expr,\n+\t\t\t\t  fold_convert (TREE_TYPE (tmp), cptrse.expr));\n+\n \t  return 0;\n \t}\n       else if (sym->intmod_sym_id == ISOCBINDING_ASSOCIATED)"}, {"sha": "2cc96bf4f26e9c4a5759ced328ce70cbadfc87d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec81069e5422ce9e606abc35ff3152a9478caf5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec81069e5422ce9e606abc35ff3152a9478caf5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ec81069e5422ce9e606abc35ff3152a9478caf5", "patch": "@@ -1,3 +1,8 @@\n+2008-05-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32600\n+\t* gfortran.dg/c_f_pointer_tests_3.f90: New.\n+\n 2008-05-25  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/17526"}, {"sha": "525af506428d430f83230d1c33ccbb640560c223", "filename": "gcc/testsuite/gfortran.dg/c_f_pointer_tests_3.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec81069e5422ce9e606abc35ff3152a9478caf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_tests_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec81069e5422ce9e606abc35ff3152a9478caf5/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_tests_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_f_pointer_tests_3.f90?ref=5ec81069e5422ce9e606abc35ff3152a9478caf5", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do compile }\n+! { dg-options \"-O2 -fdump-tree-original\" }\n+!\n+! PR fortran/32600 c_f_pointer w/o shape\n+! PR fortran/32580 c_f_procpointer\n+!\n+! Verify that c_f_prointer [w/o shape] and c_f_procpointer generate\n+! the right code - and no library call\n+\n+program test\n+  use iso_c_binding\n+  implicit none\n+  type(c_ptr)    :: cptr\n+  type(c_funptr) :: cfunptr\n+  integer(4), pointer :: fptr\n+  integer(4), pointer :: fptr_array(:)\n+!  procedure(integer(4)), pointer :: fprocptr ! TODO\n+\n+  call c_f_pointer(cptr, fptr)\n+  call c_f_pointer(cptr, fptr_array, [ 1 ])\n+!  call c_f_procpointer(cfunptr, fprocptr) ! TODO\n+end program test\n+\n+! Make sure there is only a single function call:\n+! { dg-final { scan-tree-dump-times \"c_f\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"c_f_pointer\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"c_f_pointer_i4\" 1 \"original\" } }\n+!\n+! Check scalar c_f_pointer\n+! { dg-final { scan-tree-dump-times \"  fptr = .integer.kind=4. .. cptr\" 1 \"original\" } }\n+!\n+! Check c_f_procpointer\n+!   TODO     { scan-tree-dump-times \"  fprocptr = .integer.kind=4. .\\\\*<.*>. .void.. cfunptr;\" 1 \"original\" } }  TODO\n+!\n+! { dg-final { cleanup-tree-dump \"original\" } }"}, {"sha": "877ab6243517d6e56ef1574af08027b2ed688258", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec81069e5422ce9e606abc35ff3152a9478caf5/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec81069e5422ce9e606abc35ff3152a9478caf5/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5ec81069e5422ce9e606abc35ff3152a9478caf5", "patch": "@@ -1,3 +1,10 @@\n+2008-05-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/32600\n+\t* intrinsics/iso_c_binding.c (c_f_procpointer): Remove.\n+\t* intrinsics/iso_c_binding.h (c_f_procpointer): Remove.\n+\t* gfortran.map (c_f_procpointer): Remove.\n+\n 2008-05-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR libgfortran/36302"}, {"sha": "4244acab5f874dc8a07022419128ba10c77d060e", "filename": "libgfortran/gfortran.map", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec81069e5422ce9e606abc35ff3152a9478caf5/libgfortran%2Fgfortran.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec81069e5422ce9e606abc35ff3152a9478caf5/libgfortran%2Fgfortran.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgfortran.map?ref=5ec81069e5422ce9e606abc35ff3152a9478caf5", "patch": "@@ -1026,7 +1026,6 @@ GFORTRAN_1.0 {\n     __iso_c_binding_c_f_pointer_l4;\n     __iso_c_binding_c_f_pointer_l8;\n     __iso_c_binding_c_f_pointer_u0;\n-    __iso_c_binding_c_f_procpointer;\n   local:\n     *;\n };"}, {"sha": "171b152475149c0a976fb456421f28bda52de2ab", "filename": "libgfortran/intrinsics/iso_c_binding.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec81069e5422ce9e606abc35ff3152a9478caf5/libgfortran%2Fintrinsics%2Fiso_c_binding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec81069e5422ce9e606abc35ff3152a9478caf5/libgfortran%2Fintrinsics%2Fiso_c_binding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fiso_c_binding.c?ref=5ec81069e5422ce9e606abc35ff3152a9478caf5", "patch": "@@ -180,16 +180,3 @@ ISO_C_BINDING_PREFIX (c_f_pointer_d0) (void *c_ptr_in,\n \t\t\t | (GFC_DTYPE_DERIVED << GFC_DTYPE_TYPE_SHIFT);\n     }\n }\n-\n-\n-/* This function will change, once there is an actual f90 type for the\n-   procedure pointer.  */\n-\n-void\n-ISO_C_BINDING_PREFIX (c_f_procpointer) (void *c_ptr_in,\n-                                        gfc_array_void *f_ptr_out)\n-{\n-  GFC_DESCRIPTOR_DATA(f_ptr_out) = c_ptr_in;\n-}\n-\n-"}, {"sha": "cb1a7a066b713e3a802ba91d0b397081ff1c8c53", "filename": "libgfortran/intrinsics/iso_c_binding.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec81069e5422ce9e606abc35ff3152a9478caf5/libgfortran%2Fintrinsics%2Fiso_c_binding.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec81069e5422ce9e606abc35ff3152a9478caf5/libgfortran%2Fintrinsics%2Fiso_c_binding.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fiso_c_binding.h?ref=5ec81069e5422ce9e606abc35ff3152a9478caf5", "patch": "@@ -52,10 +52,6 @@ c_funptr_t;\n void ISO_C_BINDING_PREFIX(c_f_pointer)(void *, gfc_array_void *,\n \t\t\t\t       const array_t *, int, int);\n \n-/* The second param here may change, once procedure pointers are\n-   implemented.  */\n-void ISO_C_BINDING_PREFIX(c_f_procpointer) (void *, gfc_array_void *);\n-\n void ISO_C_BINDING_PREFIX(c_f_pointer_u0) (void *, gfc_array_void *,\n \t\t\t\t\t   const array_t *);\n void ISO_C_BINDING_PREFIX(c_f_pointer_d0) (void *, gfc_array_void *,"}]}