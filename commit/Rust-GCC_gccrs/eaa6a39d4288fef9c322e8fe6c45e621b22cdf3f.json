{"sha": "eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFhNmEzOWQ0Mjg4ZmVmOWMzMjJlOGZlNmM0NWU2MjFiMjJjZGYzZg==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-05-21T06:59:16Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-05-21T06:59:16Z"}, "message": "Convert contrib/mklog script to Python 3\n\nUpstream will drop support for Python 2.x on January 1, 2020.  This\npatch converts the contrib/mklog script to Python 3.  The process for\nthe conversion was as follows.\n\n- Use the futurize tool (https://python-future.org ) to apply the\n  print_with_import, except, and dict transformations.\n\n- Remove the \"from __future__ import print_function\".\n\n- Change the shebang line to search for python3 in the environment.\n\n- Modify the run() function to return a str instead of bytes.\n\n- Update the copyright year.\n\ncontrib/ChangeLog:\n\n2019-05-21  Janne Blomqvist  <jb@gcc.gnu.org>\n\n        * mklog: Convert to Python 3.\n\nFrom-SVN: r271456", "tree": {"sha": "0863773e2fa9f516c38664c52e7803704edec7a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0863773e2fa9f516c38664c52e7803704edec7a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f/comments", "author": null, "committer": null, "parents": [{"sha": "cb7ac91b12cc424680e47a65c05cecb6bb21ac7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb7ac91b12cc424680e47a65c05cecb6bb21ac7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb7ac91b12cc424680e47a65c05cecb6bb21ac7b"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "2b6425b9ec20115e31e21472f2416318d2babb3b", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f", "patch": "@@ -1,3 +1,7 @@\n+2019-05-21  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+        * mklog: Convert to Python 3.\n+\n 2019-05-03  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gennews (files): Add files for GCC 9."}, {"sha": "125f52ef11ca9545518c68ae9f843dc4744b2b47", "filename": "contrib/mklog", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f/contrib%2Fmklog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f/contrib%2Fmklog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog?ref=eaa6a39d4288fef9c322e8fe6c45e621b22cdf3f", "patch": "@@ -1,6 +1,6 @@\n-#!/usr/bin/python\n+#!/usr/bin/env python3\n \n-# Copyright (C) 2017 Free Software Foundation, Inc.\n+# Copyright (C) 2017-2019 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -67,7 +67,7 @@ class RegexCache(object):\n cache = RegexCache()\n \n def print_help_and_exit():\n-    print \"\"\"\\\n+    print(\"\"\"\\\n Usage: %s [-i | --inline] [PATCH]\n Generate ChangeLog template for PATCH.\n PATCH must be generated using diff(1)'s -up or -cp options\n@@ -78,7 +78,7 @@ When PATCH is - or missing, read standard input.\n When -i is used, prepends ChangeLog to PATCH.\n If PATCH is not stdin, modifies PATCH in-place, otherwise writes\n to stdout.\n-\"\"\" % me\n+\"\"\" % me)\n     sys.exit(1)\n \n def run(cmd, die_on_error):\n@@ -87,7 +87,7 @@ def run(cmd, die_on_error):\n   (out, err) = proc.communicate()\n   if die_on_error and proc.returncode != 0:\n     error(\"`%s` failed:\\n\" % (cmd, proc.stderr))\n-  return proc.returncode, out, err\n+  return proc.returncode, out.decode(), err\n \n def read_user_info():\n   dot_mklog_format_msg = \"\"\"\\\n@@ -153,9 +153,9 @@ class FileDiff:\n     self.clname, self.relname = get_parent_changelog(filename);\n \n   def dump(self):\n-    print \"Diff for %s:\\n  ChangeLog = %s\\n  rel name = %s\\n\" % (self.filename, self.clname, self.relname)\n+    print(\"Diff for %s:\\n  ChangeLog = %s\\n  rel name = %s\\n\" % (self.filename, self.clname, self.relname))\n     for i, h in enumerate(self.hunks):\n-      print \"Next hunk %d:\" % i\n+      print(\"Next hunk %d:\" % i)\n       h.dump()\n \n class Hunk:\n@@ -167,8 +167,8 @@ class Hunk:\n     self.ctx_diff = is_ctx_hunk_start(hdr)\n \n   def dump(self):\n-    print '%s' % self.hdr\n-    print '%s' % '\\n'.join(self.lines)\n+    print('%s' % self.hdr)\n+    print('%s' % '\\n'.join(self.lines))\n \n   def is_file_addition(self):\n     \"\"\"Does hunk describe addition of file?\"\"\"\n@@ -358,7 +358,7 @@ def main():\n \n   try:\n     opts, args = getopt.getopt(sys.argv[1:], 'hiv', ['help', 'verbose', 'inline'])\n-  except getopt.GetoptError, err:\n+  except getopt.GetoptError as err:\n     error(str(err))\n \n   inline = False\n@@ -388,7 +388,7 @@ def main():\n   diffs = parse_patch(contents)\n \n   if verbose:\n-    print \"Parse results:\"\n+    print(\"Parse results:\")\n     for d in diffs:\n       d.dump()\n \n@@ -449,7 +449,7 @@ def main():\n \n   # Print log\n   date = time.strftime('%Y-%m-%d')\n-  for log_name, msg in sorted(logs.iteritems()):\n+  for log_name, msg in sorted(logs.items()):\n     out.write(\"\"\"\\\n %s:\n "}]}