{"sha": "446096148ca9775cb56f9ee924fa283babcd0b76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ2MDk2MTQ4Y2E5Nzc1Y2I1NmY5ZWU5MjRmYTI4M2JhYmNkMGI3Ng==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-11-18T11:51:05Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-11-18T11:51:05Z"}, "message": "Verify NOP_EXPR LHS type in IPA ICF.\n\n2019-11-18  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/92529\n\t* ipa-icf-gimple.c (func_checker::compare_gimple_assign):\n\tCompare LHS types of NOP_EXPR.\n2019-11-18  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/92529\n\t* gcc.dg/ipa/pr92529.c: New test.\n\nFrom-SVN: r278395", "tree": {"sha": "be28bc8ab15513a44efc7a6a0b50d954ba47d77e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be28bc8ab15513a44efc7a6a0b50d954ba47d77e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/446096148ca9775cb56f9ee924fa283babcd0b76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/446096148ca9775cb56f9ee924fa283babcd0b76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/446096148ca9775cb56f9ee924fa283babcd0b76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/446096148ca9775cb56f9ee924fa283babcd0b76/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20a380171f5db5f356b173d573559bfeef1ebbff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20a380171f5db5f356b173d573559bfeef1ebbff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20a380171f5db5f356b173d573559bfeef1ebbff"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "a829a68f543458f109b7520b986eedc32f5634df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446096148ca9775cb56f9ee924fa283babcd0b76/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446096148ca9775cb56f9ee924fa283babcd0b76/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=446096148ca9775cb56f9ee924fa283babcd0b76", "patch": "@@ -1,3 +1,9 @@\n+2019-11-18  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/92529\n+\t* ipa-icf-gimple.c (func_checker::compare_gimple_assign):\n+\tCompare LHS types of NOP_EXPR.\n+\n 2019-11-18  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* run-rtl-passes.c (run_rtl_passes): Accept and handle empty"}, {"sha": "9aa2fe001385000bde0f5d7e9b378bc6121715c7", "filename": "gcc/ipa-icf-gimple.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446096148ca9775cb56f9ee924fa283babcd0b76/gcc%2Fipa-icf-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446096148ca9775cb56f9ee924fa283babcd0b76/gcc%2Fipa-icf-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.c?ref=446096148ca9775cb56f9ee924fa283babcd0b76", "patch": "@@ -620,6 +620,13 @@ func_checker::compare_gimple_assign (gimple *s1, gimple *s2)\n       arg1 = gimple_op (s1, i);\n       arg2 = gimple_op (s2, i);\n \n+      /* LHS types of NOP_EXPR must be compatible.  */\n+      if (CONVERT_EXPR_CODE_P (code1) && i == 0)\n+\t{\n+\t  if (!compatible_types_p (TREE_TYPE (arg1), TREE_TYPE (arg2)))\n+\t    return return_false_with_msg (\"GIMPLE NOP LHS type mismatch\");\n+\t}\n+\n       if (!compare_operand (arg1, arg2))\n \treturn return_false_with_msg (\"GIMPLE assignment operands \"\n \t\t\t\t      \"are different\");"}, {"sha": "8773d5073e8a345cb2a492c8df081f2f6e47ced9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446096148ca9775cb56f9ee924fa283babcd0b76/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446096148ca9775cb56f9ee924fa283babcd0b76/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=446096148ca9775cb56f9ee924fa283babcd0b76", "patch": "@@ -1,3 +1,8 @@\n+2019-11-18  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/92529\n+\t* gcc.dg/ipa/pr92529.c: New test.\n+\n 2019-11-18  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* gcc.dg/rtl/aarch64/unspecified-pass-error.c: New test."}, {"sha": "0864f3427739cd12dfa1aa6f72d5c9cecd07e939", "filename": "gcc/testsuite/gcc.dg/ipa/pr92529.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446096148ca9775cb56f9ee924fa283babcd0b76/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr92529.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446096148ca9775cb56f9ee924fa283babcd0b76/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr92529.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr92529.c?ref=446096148ca9775cb56f9ee924fa283babcd0b76", "patch": "@@ -0,0 +1,28 @@\n+/* PR ipa/92529 */\n+/* { dg-options \"-O2 -fdump-ipa-icf-optimized\"  } */\n+\n+int\n+foo(volatile int a)\n+{\n+  return (char)a;\n+}\n+\n+int\n+bar(volatile int a)\n+{\n+  return (short)a;\n+}\n+\n+#pragma GCC optimize (\"-O0\")\n+\n+int main(int argc, char **argv)\n+{\n+  int r = bar(1000);\n+  __builtin_printf (\"global: %d\\n\", r);\n+  if (r != 1000)\n+    __builtin_abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-ipa-dump \"Equal symbols: 0\" \"icf\"  } } */"}]}