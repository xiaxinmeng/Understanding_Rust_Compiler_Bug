{"sha": "d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef", "node_id": "C_kwDOANBUbNoAKGQzMjhkM2E2Zjg3NTZlZDYxYjNjZGYzNjc1YjI0MDUxZjdkM2IyZWY", "commit": {"author": {"name": "Christoph M\u00fcllner", "email": "christoph.muellner@vrull.eu", "date": "2022-12-05T12:02:24Z"}, "committer": {"name": "Philipp Tomsich", "email": "philipp.tomsich@vrull.eu", "date": "2023-03-15T08:56:45Z"}, "message": "riscv: thead: Add support for the XTheadBs ISA extension\n\nThis patch adds support for the XTheadBs ISA extension.\nThe new INSN pattern is defined in a new file to separate\nthis vendor extension from the standard extensions.\nThe cost model adjustment reuses the xbs:bext cost.\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv.cc (riscv_rtx_costs): Add xthead:tst cost.\n\t* config/riscv/thead.md (*th_tst<mode>3): New INSN.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/xtheadbs-tst.c: New test.\n\nSigned-off-by: Christoph M\u00fcllner <christoph.muellner@vrull.eu>", "tree": {"sha": "d5eb64d284dd836617d70165d2d5420006123b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5eb64d284dd836617d70165d2d5420006123b8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef/comments", "author": {"login": "cmuellner", "id": 92810, "node_id": "MDQ6VXNlcjkyODEw", "avatar_url": "https://avatars.githubusercontent.com/u/92810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmuellner", "html_url": "https://github.com/cmuellner", "followers_url": "https://api.github.com/users/cmuellner/followers", "following_url": "https://api.github.com/users/cmuellner/following{/other_user}", "gists_url": "https://api.github.com/users/cmuellner/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmuellner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmuellner/subscriptions", "organizations_url": "https://api.github.com/users/cmuellner/orgs", "repos_url": "https://api.github.com/users/cmuellner/repos", "events_url": "https://api.github.com/users/cmuellner/events{/privacy}", "received_events_url": "https://api.github.com/users/cmuellner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ptomsich", "id": 14983582, "node_id": "MDQ6VXNlcjE0OTgzNTgy", "avatar_url": "https://avatars.githubusercontent.com/u/14983582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptomsich", "html_url": "https://github.com/ptomsich", "followers_url": "https://api.github.com/users/ptomsich/followers", "following_url": "https://api.github.com/users/ptomsich/following{/other_user}", "gists_url": "https://api.github.com/users/ptomsich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptomsich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptomsich/subscriptions", "organizations_url": "https://api.github.com/users/ptomsich/orgs", "repos_url": "https://api.github.com/users/ptomsich/repos", "events_url": "https://api.github.com/users/ptomsich/events{/privacy}", "received_events_url": "https://api.github.com/users/ptomsich/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b77c32273b432db3f04175b95143b3ed5214f6f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77c32273b432db3f04175b95143b3ed5214f6f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b77c32273b432db3f04175b95143b3ed5214f6f3"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "69fb789c17528ebaad6d334c59e45d2aad324caf", "filename": "gcc/config/riscv/riscv.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef/gcc%2Fconfig%2Friscv%2Friscv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef/gcc%2Fconfig%2Friscv%2Friscv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.cc?ref=d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef", "patch": "@@ -2412,8 +2412,8 @@ riscv_rtx_costs (rtx x, machine_mode mode, int outer_code, int opno ATTRIBUTE_UN\n \t  *total = COSTS_N_INSNS (SINGLE_SHIFT_COST);\n \t  return true;\n \t}\n-      /* bext pattern for zbs.  */\n-      if (TARGET_ZBS && outer_code == SET\n+      /* bit extraction pattern (zbs:bext, xtheadbs:tst).  */\n+      if ((TARGET_ZBS || TARGET_XTHEADBS) && outer_code == SET\n \t  && GET_CODE (XEXP (x, 1)) == CONST_INT\n \t  && INTVAL (XEXP (x, 1)) == 1)\n \t{"}, {"sha": "3842a194d16d1564dad1051c051592daa6a8d62d", "filename": "gcc/config/riscv/thead.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef/gcc%2Fconfig%2Friscv%2Fthead.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef/gcc%2Fconfig%2Friscv%2Fthead.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fthead.md?ref=d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef", "patch": "@@ -29,3 +29,14 @@\n   \"th.addsl\\t%0,%3,%1,%2\"\n   [(set_attr \"type\" \"bitmanip\")\n    (set_attr \"mode\" \"<X:MODE>\")])\n+\n+;; XTheadBs\n+\n+(define_insn \"*th_tst<mode>3\"\n+  [(set (match_operand:X 0 \"register_operand\" \"=r\")\n+\t(zero_extract:X (match_operand:X 1 \"register_operand\" \"r\")\n+\t\t\t(const_int 1)\n+\t\t\t(match_operand 2 \"const_int_operand\" \"n\")))]\n+  \"TARGET_XTHEADBS && UINTVAL (operands[2]) < GET_MODE_BITSIZE (<MODE>mode)\"\n+  \"th.tst\\t%0,%1,%2\"\n+  [(set_attr \"type\" \"bitmanip\")])"}, {"sha": "674cec09128a668a5c871a05ad2ae4d025172824", "filename": "gcc/testsuite/gcc.target/riscv/xtheadbs-tst.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fxtheadbs-tst.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fxtheadbs-tst.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fxtheadbs-tst.c?ref=d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gc_xtheadbs\" { target { rv32 } } } */\n+/* { dg-options \"-march=rv64gc_xtheadbs\" { target { rv64 } } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-O0\" } } */\n+\n+long\n+foo1 (long i)\n+{\n+  return 1L & (i >> 20);\n+}\n+\n+/* { dg-final { scan-assembler-times \"th.tst\\t\" 1 } } */\n+/* { dg-final { scan-assembler-not \"andi\" } } */"}]}