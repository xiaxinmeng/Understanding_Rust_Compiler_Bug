{"sha": "d9d9095344463e91039277634167223d3a1b759b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlkOTA5NTM0NDQ2M2U5MTAzOTI3NzYzNDE2NzIyM2QzYTFiNzU5Yg==", "commit": {"author": {"name": "Olga Golovanevsky", "email": "olga@gcc.gnu.org", "date": "2007-12-13T18:59:44Z"}, "committer": {"name": "Olga Golovanevsky", "email": "olga@gcc.gnu.org", "date": "2007-12-13T18:59:44Z"}, "message": "Fogot to commit ipa-struct-reorg.c\n\nFrom-SVN: r130906", "tree": {"sha": "fa6de40f7de525d6e1d8d3892bd35771817b56cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa6de40f7de525d6e1d8d3892bd35771817b56cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9d9095344463e91039277634167223d3a1b759b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9d9095344463e91039277634167223d3a1b759b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9d9095344463e91039277634167223d3a1b759b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9d9095344463e91039277634167223d3a1b759b/comments", "author": null, "committer": null, "parents": [{"sha": "bfcd72332c49fce4b4368d89cbf0e2c7386665b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfcd72332c49fce4b4368d89cbf0e2c7386665b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfcd72332c49fce4b4368d89cbf0e2c7386665b5"}], "stats": {"total": 92, "additions": 77, "deletions": 15}, "files": [{"sha": "be60a21e46f923fe64e4c8b540e9edb224b89762", "filename": "gcc/ipa-struct-reorg.c", "status": "modified", "additions": 77, "deletions": 15, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9d9095344463e91039277634167223d3a1b759b/gcc%2Fipa-struct-reorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9d9095344463e91039277634167223d3a1b759b/gcc%2Fipa-struct-reorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-struct-reorg.c?ref=d9d9095344463e91039277634167223d3a1b759b", "patch": "@@ -2010,7 +2010,15 @@ is_candidate (tree var, tree *type_p, VEC (tree, heap) **unsuitable_types)\n       else\n \t{\n \t  if (initialized && unsuitable_types && *unsuitable_types)\n-\t    add_unsuitable_type (unsuitable_types, type);\n+\t    {\n+\t      if (dump_file)\n+\t\t{\n+\t\t  fprintf (dump_file, \"The type \");\n+\t\t  print_generic_expr (dump_file, type, 0);\n+\t\t  fprintf (dump_file, \" is initialized...Excluded.\");\t\t  \n+\t\t}\n+\t      add_unsuitable_type (unsuitable_types, type);\n+\t    }\n \t  *type_p = type;\n \t  return true;\n       }\n@@ -2437,7 +2445,15 @@ get_stmt_accesses (tree *tp, int *walk_subtrees, void *data)\n \tunsigned i = find_structure (type);\n \n \tif (i != VEC_length (structure, structures))\n-\t  remove_structure (i);\t\n+\t  {\n+\t    if (dump_file)\n+\t      {\n+\t\tfprintf (dump_file, \"\\nThe type \");\n+\t\tprint_generic_expr (dump_file, type, 0);\n+\t\tfprintf (dump_file, \" has bitfield.\");\n+\t      }\t    \n+\t    remove_structure (i);\n+\t  }\n       }\n       break;\n \n@@ -2476,6 +2492,15 @@ get_stmt_accesses (tree *tp, int *walk_subtrees, void *data)\n \t\t       we can deal with.  */\n \t\t    if (!decompose_access (str->decl, acc))\n \t\t      {\n+\t\t\tif (dump_file)\n+\t\t\t  {\n+\t\t\t    fprintf (dump_file, \"\\nThe type \");\n+\t\t\t    print_generic_expr (dump_file, type, 0);\n+\t\t\t    fprintf (dump_file, \n+\t\t\t\t     \" has complicate access in statement \");\n+\t\t\t    print_generic_stmt (dump_file, stmt, 0);\n+\t\t\t  }\n+\t\t\t\n \t\t\tremove_structure (i);\n \t\t\tfree (acc);\n \t\t      }\n@@ -3056,7 +3081,14 @@ safe_cond_expr_check (void **slot, void *data)\n   if (TREE_CODE (acc->stmt) == COND_EXPR)\n     {\n       if (!is_safe_cond_expr (acc->stmt))\n-\tremove_structure (*(unsigned *) data);\n+\t{\n+\t  if (dump_file)\n+\t    {\n+\t      fprintf (dump_file, \"\\nUnsafe conditional statement \");\n+\t      print_generic_stmt (dump_file, acc->stmt, 0);\n+\t    }\n+\t  remove_structure (*(unsigned *) data);\n+\t}\n     }\n   return 1;\n }\n@@ -3469,7 +3501,15 @@ collect_alloc_sites (void)\n \t\t\t    add_alloc_site (node->decl, stmt, str);\n \t\t\t  }\n \t\t\telse\n-\t\t\t  remove_structure (i);\t\t\n+\t\t\t  {\n+\t\t\t    if (dump_file)\n+\t\t\t      {\n+\t\t\t\tfprintf (dump_file, \n+\t\t\t\t\t \"\\nUnsupported allocation function \");\n+\t\t\t\tprint_generic_stmt (dump_file, stmt, 0);\n+\t\t\t      }\n+\t\t\t    remove_structure (i);\t\t\n+\t\t\t  }\n \t\t      }\n \t\t  }\n \t      }\t      \n@@ -3682,8 +3722,17 @@ dump_new_types (void)\n \t   \" this optimization:\\n\");\n \n   for (i = 0; VEC_iterate (structure, structures, i, str); i++)\n-    for (j = 0; VEC_iterate (tree, str->new_types, j, type); j++)\n-      dump_struct_type (type, 2, 0); \n+    {\n+      if (dump_file)\n+\t{\n+\t  fprintf (dump_file, \"\\nFor type \");\n+\t  dump_struct_type (str->decl, 2, 0);\n+\t  fprintf (dump_file, \"\\nthe number of new types is %d\\n\",\n+\t\t   VEC_length (tree, str->new_types));\n+\t}      \n+      for (j = 0; VEC_iterate (tree, str->new_types, j, type); j++)\n+\tdump_struct_type (type, 2, 0); \n+    }\n }\n \n /* This function creates new types to replace old structure types.  */\n@@ -3743,13 +3792,6 @@ collect_structures (void)\n \n   remove_unsuitable_types (unsuitable_types);\n   VEC_free (tree, heap, unsuitable_types);\n-\n-  if (!VEC_length (structure, structures))\n-    {\n-      if (dump_file)\n-\tfprintf (dump_file, \"\\nNo structures to transform. Exiting...\");\n-      return;\n-    }\n }\n \n /* Collect structure allocation sites. In case of arrays\n@@ -3814,7 +3856,15 @@ exclude_cold_structs (void)\n   /* Remove cold structures from structures vector.  */\n   for (i = 0; VEC_iterate (structure, structures, i, str); i++)\n     if (str->count * 100 < (hotest * STRUCT_REORG_COLD_STRUCT_RATIO))\n-      remove_structure (i);\n+      {\n+\tif (dump_file)\n+\t  {\n+\t    fprintf (dump_file, \"\\nThe structure \");\n+\t    print_generic_expr (dump_file, str->decl, 0);\n+\t    fprintf (dump_file, \" is cold.\");\n+\t  }\n+\tremove_structure (i);\n+      }\n }\n \n /* This function decomposes original structure into substructures, \n@@ -3839,7 +3889,19 @@ do_reorg (void)\n {\n   /* Check that there is a work to do.  */\n   if (!VEC_length (structure, structures))\n-    return;\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \"\\nNo structures to transform. Exiting...\");\n+      return;\n+    }\n+  else\n+    {\n+      if (dump_file)\n+\t{\n+\t  fprintf (dump_file, \"\\nNumber of structures to transform is %d\",\n+\t\t   VEC_length (structure, structures));\n+\t}\n+    }\n \n   /* Generate new types.  */\n   create_new_types ();"}]}