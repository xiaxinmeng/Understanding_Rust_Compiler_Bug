{"sha": "2325c8920bbc99edcc9fffaa79577c528df41eb8", "node_id": "C_kwDOANBUbNoAKDIzMjVjODkyMGJiYzk5ZWRjYzlmZmZhYTc5NTc3YzUyOGRmNDFlYjg", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2023-01-27T10:32:19Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2023-01-27T10:33:46Z"}, "message": "OpenMP/Fortran: Fix has_device_addr clause splitting [PR108558]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/108558\n\t* trans-openmp.cc (gfc_split_omp_clauses): Handle has_device_addr.\n\nlibgomp/ChangeLog:\n\n\tPR fortran/108558\n\t* testsuite/libgomp.fortran/has_device_addr.f90: New test.", "tree": {"sha": "c3a8d2d90e6f1b4aa998ce5b5401da5783ee157f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3a8d2d90e6f1b4aa998ce5b5401da5783ee157f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2325c8920bbc99edcc9fffaa79577c528df41eb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2325c8920bbc99edcc9fffaa79577c528df41eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2325c8920bbc99edcc9fffaa79577c528df41eb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2325c8920bbc99edcc9fffaa79577c528df41eb8/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16f30680f403891556da2ad6329fcef9dc9b47db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16f30680f403891556da2ad6329fcef9dc9b47db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16f30680f403891556da2ad6329fcef9dc9b47db"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "5283d0ce5f30eba8a103c0cb2c1452867786f8ec", "filename": "gcc/fortran/trans-openmp.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2325c8920bbc99edcc9fffaa79577c528df41eb8/gcc%2Ffortran%2Ftrans-openmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2325c8920bbc99edcc9fffaa79577c528df41eb8/gcc%2Ffortran%2Ftrans-openmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.cc?ref=2325c8920bbc99edcc9fffaa79577c528df41eb8", "patch": "@@ -6205,6 +6205,8 @@ gfc_split_omp_clauses (gfc_code *code,\n \t    = code->ext.omp_clauses->lists[OMP_LIST_MAP];\n \t  clausesa[GFC_OMP_SPLIT_TARGET].lists[OMP_LIST_IS_DEVICE_PTR]\n \t    = code->ext.omp_clauses->lists[OMP_LIST_IS_DEVICE_PTR];\n+\t  clausesa[GFC_OMP_SPLIT_TARGET].lists[OMP_LIST_HAS_DEVICE_ADDR]\n+\t    = code->ext.omp_clauses->lists[OMP_LIST_HAS_DEVICE_ADDR];\n \t  clausesa[GFC_OMP_SPLIT_TARGET].device\n \t    = code->ext.omp_clauses->device;\n \t  clausesa[GFC_OMP_SPLIT_TARGET].thread_limit"}, {"sha": "95cc7788f2d21ff78b329646b3fab3ec929d80da", "filename": "libgomp/testsuite/libgomp.fortran/has_device_addr.f90", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2325c8920bbc99edcc9fffaa79577c528df41eb8/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fhas_device_addr.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2325c8920bbc99edcc9fffaa79577c528df41eb8/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fhas_device_addr.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fhas_device_addr.f90?ref=2325c8920bbc99edcc9fffaa79577c528df41eb8", "patch": "@@ -0,0 +1,59 @@\n+! { dg-additional-options \"-fdump-tree-original\" }\n+\n+!\n+! PR fortran/108558\n+!\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp target has_device_addr\\\\(x\\\\) has_device_addr\\\\(y\\\\)\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data map\\\\(tofrom:x\\\\) map\\\\(tofrom:y\\\\)\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data use_device_addr\\\\(x\\\\) use_device_addr\\\\(y\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target update from\\\\(y\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target data map\\\\(tofrom:x\\\\) map\\\\(tofrom:y\\\\) use_device_addr\\\\(x\\\\) use_device_addr\\\\(y\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp teams\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp distribute\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp parallel\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp for nowait\" 2 \"original\" } }\n+\n+module m\n+contains\n+subroutine vectorAdd(x, y, N)\n+  implicit none\n+  integer :: N\n+  integer(4) :: x(N), y(N)\n+  integer :: i\n+\n+  !$omp target teams distribute parallel do has_device_addr(x, y)\n+  do i = 1, N\n+    y(i) = x(i) + y(i)\n+  end do\n+end subroutine vectorAdd\n+end module m\n+\n+program main\n+  use m\n+  implicit none\n+  integer, parameter :: N = 9876\n+  integer(4) :: x(N), y(N)\n+  integer :: i\n+\n+  x(:) = 1\n+  y(:) = 2\n+\n+  !$omp target data map(x, y)\n+    !$omp target data use_device_addr(x, y)\n+      call vectorAdd(x, y, N)\n+    !$omp end target data\n+    !$omp target update from(y)\n+    if (any (y /= 3)) error stop\n+  !$omp end target data\n+\n+  x = 1\n+  y = 2\n+  !$omp target data map(x, y) use_device_addr(x, y)\n+    !$omp target teams distribute parallel do has_device_addr(x, y)\n+    do i = 1, N\n+      y(i) = x(i) + y(i)\n+    end do\n+ !$omp end target data\n+ if (any (y /= 3)) error stop\n+end program"}]}