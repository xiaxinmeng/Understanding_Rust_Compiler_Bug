{"sha": "20b22d5fd556484b3bb62ac6e89d2dfb0c237659", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBiMjJkNWZkNTU2NDg0YjNiYjYyYWM2ZTg5ZDJkZmIwYzIzNzY1OQ==", "commit": {"author": {"name": "Roland McGrath", "email": "roland@gcc.gnu.org", "date": "1993-05-19T20:24:48Z"}, "committer": {"name": "Roland McGrath", "email": "roland@gcc.gnu.org", "date": "1993-05-19T20:24:48Z"}, "message": "Initial revision\n\nFrom-SVN: r4504", "tree": {"sha": "e071bf9595699ee1ca712509eedd98cc62f2b1a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e071bf9595699ee1ca712509eedd98cc62f2b1a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20b22d5fd556484b3bb62ac6e89d2dfb0c237659", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20b22d5fd556484b3bb62ac6e89d2dfb0c237659", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20b22d5fd556484b3bb62ac6e89d2dfb0c237659", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20b22d5fd556484b3bb62ac6e89d2dfb0c237659/comments", "author": null, "committer": null, "parents": [{"sha": "94c866c7dddd5e427ec23c3897419c5972d68bd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c866c7dddd5e427ec23c3897419c5972d68bd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94c866c7dddd5e427ec23c3897419c5972d68bd0"}], "stats": {"total": 169, "additions": 169, "deletions": 0}, "files": [{"sha": "15bd193d8e2966f40bc9617bddbddaa6f5f58f74", "filename": "gcc/config.guess", "status": "added", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20b22d5fd556484b3bb62ac6e89d2dfb0c237659/gcc%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20b22d5fd556484b3bb62ac6e89d2dfb0c237659/gcc%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.guess?ref=20b22d5fd556484b3bb62ac6e89d2dfb0c237659", "patch": "@@ -0,0 +1,169 @@\n+#!/bin/sh\n+# This script attempts to guess a canonical system name.\n+#   Copyright (C) 1992, 1993 Free Software Foundation, Inc.\n+#\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#\n+# This script attempts to guess a cononical system name similar to\n+# config.sub. If it succeeds, it prints the system name on stdout, and\n+# exits with 0.  Otherwise, it prints an error message on stderr, and\n+# exits with 1.\n+#\n+# The plan is that this can be called by configure scripts if you\n+# don't specify an explicit system type (host/target name).\n+#\n+# Only a few systems have been added to this list; please add others\n+# (but try to keep the structure clean).\n+#\n+\n+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\n+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n+UNAME_SYSTEM=`(uname -s) 2>/dev/null` || UNAME_SYSTEM=unknown\n+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n+\n+# Note: order is significant - the case branches are not exclusive.\n+\n+case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n+    alpha:OSF1:1.*:*)\n+\techo alpha-dec-osf${UNAME_RELEASE}\n+        exit 0 ;;\n+    sun4*:SunOS:[5-9].*:*)\n+\techo sparc-sun-solaris2\n+\texit 0 ;;\n+    sun4*:SunOS:*:*)\n+\techo sparc-sun-sunos${UNAME_RELEASE}\n+\texit 0 ;;\n+    sun3*:SunOS:*:*)\n+\techo m68k-sun-sunos${UNAME_RELEASE}\n+\texit 0 ;;\n+    RISC*:ULTRIX:*:*)\n+\techo mips-dec-ultrix${UNAME_RELEASE}\n+\texit 0 ;;\n+    VAX*:ULTRIX*:*:*)\n+\techo vax-dec-ultrix${UNAME_RELEASE}\n+\texit 0 ;;\n+    m88k:*:4*:R4*)\n+\techo m88k-motorola-sysv4\n+\texit 0 ;;\n+    m88k:*:3*:R3*)\n+\techo m88k-motorola-sysv3\n+\texit 0 ;;\n+    *:IRIX:*:*)\n+\techo mips-sgi-irix${UNAME_RELEASE}\n+\texit 0 ;;\n+    i[34]86:AIX:*:*)\n+\techo i386-ibm-aix\n+\texit 0 ;;\n+    *:AIX:2:3)\n+\techo rs6000-ibm-aix3.2\n+\texit 0 ;;\n+    *:AIX:*:*)\n+\techo rs6000-ibm-aix\n+\texit 0 ;;\n+    *:BOSX:*:*)\n+\techo rs6000-bull-bosx\n+\texit 0 ;;\n+    9000/31?:HP-UX:*:*)\n+\techo m68000-hp-hpux\n+\texit 0 ;;\n+    9000/3??:HP-UX:*:*)\n+\techo m68k-hp-hpux\n+\texit 0 ;;\n+    9000/7??:HP-UX:*:* | 9000/8?7:HP-UX:*:* )\n+\techo hppa1.1-hp-hpux\n+\texit 0 ;;\n+    9000/8??:HP-UX:*:*)\n+\techo hppa1.0-hp-hpux\n+\texit 0 ;;\n+    C1*:ConvexOS:*:*)\n+\techo c1-convex-bsd\n+        exit 0 ;;\n+    C2*:ConvexOS:*:*)\n+\techo c2-convex-bsd\n+        exit 0 ;;\n+    CRAY*X-MP:UNICOS:*:*)\n+\techo xmp-cray-unicos\n+        exit 0 ;;\n+    CRAY*Y-MP:UNICOS:*:*)\n+\techo ymp-cray-unicos\n+        exit 0 ;;\n+    CRAY-2:UNICOS:*:*)\n+\techo cray2-cray-unicos\n+        exit 0 ;;\n+    i[34]86:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux\n+\texit 0 ;;\n+    i[34]86:UNIX_SV:4.*:*)\n+\techo i486-unknown-sysv4\n+\texit 0 ;;\n+    i[34]86:*:3.2:*)\n+\tif /bin/uname -X 2>/dev/null >/dev/null ; then\n+\t\tUNAME_REL=`(/bin/uname -X|egrep Release|sed -e 's/.*= //')`\n+\t\t(/bin/uname -X|egrep i80486 >/dev/null) && UNAME_MACHINE=i486\n+\t\techo ${UNAME_MACHINE}-unknown-sco$UNAME_REL\n+\telse\n+\t\techo ${UNAME_MACHINE}-unknown-sysv3.2\n+\tfi\n+\texit 0 ;;\n+    mini*:CTIX:SYS*5:*)\n+\t# \"miniframe\"\n+\techo m68010-convergent-sysv\n+\texit 0 ;;\n+esac\n+\n+echo '(No uname command or uname output not recognized.)' 1>&2\n+#echo \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" 1>&2\n+\n+cat >dummy.c <<EOF\n+main()\n+{\n+#if defined (sony)\n+#if defined (MIPSEB)\n+#else\n+  printf(\"m68k-sony-newsos\\n\"); exit(0);\n+#endif\n+#endif\n+\n+#if defined(hp300) && !defined(hpux)\n+  printf(\"m68k-hp-bsd\\n\"); exit(0);\n+#endif\n+\n+#if defined (MULTIMAX) || defined (n16)\n+#if defined (UMAXV)\n+  printf(\"ns32k-encore-sysv\\n\"); exit(0);\n+#else\n+#if defined (CMU)\n+  printf(\"ns32k-encore-mach\\n\"); exit(0);\n+#else\n+  printf(\"ns32k-encore-bsd\\n\"); exit(0);\n+#endif\n+#endif\n+#endif\n+\n+#if defined(__386BSD__) || (defined(__bsdi__) && defined(__i386__))\n+  printf(\"i386-unknown-bsd\\n\"); exit(0);\n+#endif\n+\n+  exit (1);\n+}\n+EOF\n+\n+${CC-cc} dummy.c -o dummy && ./dummy && rm dummy.c dummy && exit 0\n+rm -f dummy.c dummy\n+\n+echo '(Unable to guess system type)' 1>&2\n+\n+exit 1"}]}