{"sha": "c19ef23bb984194a0db18332631c61d7417435ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE5ZWYyM2JiOTg0MTk0YTBkYjE4MzMyNjMxYzYxZDc0MTc0MzVjYQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2020-06-13T09:40:52Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2020-06-13T09:42:17Z"}, "message": "Remove failing test case accidentally committed.\n\nWhen committing 0cfc34ad1293a5e19f1dc67c461c58d99222ac9d, I\naccidentylly committed gcc/testsuite/gfortran.dg/finalize_36.f90 .\nThis removes this, again.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/finalize_36.f90: Remove accidentally\n\tcommitted test case.", "tree": {"sha": "d454d9b254a2c2033dd6b20c68561677db5dbcdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d454d9b254a2c2033dd6b20c68561677db5dbcdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c19ef23bb984194a0db18332631c61d7417435ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c19ef23bb984194a0db18332631c61d7417435ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c19ef23bb984194a0db18332631c61d7417435ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c19ef23bb984194a0db18332631c61d7417435ca/comments", "author": null, "committer": null, "parents": [{"sha": "0cfc34ad1293a5e19f1dc67c461c58d99222ac9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cfc34ad1293a5e19f1dc67c461c58d99222ac9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cfc34ad1293a5e19f1dc67c461c58d99222ac9d"}], "stats": {"total": 39, "additions": 0, "deletions": 39}, "files": [{"sha": "432f5472aebc2256323b1010832c290de71795d3", "filename": "gcc/testsuite/gfortran.dg/finalize_36.f90", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cfc34ad1293a5e19f1dc67c461c58d99222ac9d/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_36.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cfc34ad1293a5e19f1dc67c461c58d99222ac9d/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_36.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_36.f90?ref=0cfc34ad1293a5e19f1dc67c461c58d99222ac9d", "patch": "@@ -1,39 +0,0 @@\n-! { dg-do run }\n-! { dg-additional-options \"-fdump-tree-original\" }\n-! PR 94109\n-! This used to leak memory.  Test case by Antony Lewis.\n-    module debug\n-    implicit none\n-\n-    Type Tester\n-        real, dimension(:), allocatable :: Dat, Dat2\n-    end Type\n-\n-    Type TestType2\n-        Type(Tester) :: T\n-    end type TestType2\n-\n-    contains\n-\n-    subroutine Leaker\n-    class(TestType2), pointer :: ActiveState\n-    Type(Tester) :: Temp\n-\n-    allocate(Temp%Dat2(10000))\n-\n-    allocate(TestType2::ActiveState)\n-    ActiveState%T = Temp\n-    deallocate(ActiveState)\n-\n-    end subroutine\n-\n-    end module\n-\n-\n-    program run\n-    use debug\n-\n-    call Leaker()\n-\n-    end program\n-! { dg-final { scan-tree-dump-times \"__builtin_free\\\\ \\\\(ptr2\" 4 \"original\" } }"}]}