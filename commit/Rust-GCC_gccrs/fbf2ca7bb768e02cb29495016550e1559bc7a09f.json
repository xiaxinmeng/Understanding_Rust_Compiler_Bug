{"sha": "fbf2ca7bb768e02cb29495016550e1559bc7a09f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJmMmNhN2JiNzY4ZTAyY2IyOTQ5NTAxNjU1MGUxNTU5YmM3YTA5Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-02-08T07:19:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-02-08T07:19:43Z"}, "message": "config.gcc (sparc-*-linux*): Add sparc/t-linux to tmake_file.\n\n\t* config.gcc (sparc-*-linux*): Add sparc/t-linux to tmake_file.\n\t(sparc64-*-linux*): Likewise.\n\t* config/sparc/t-linux64 (SHLIB_MAPFILES): Removed.\n\t* config/sparc/t-linux: New file.\n\t* config/sparc/libgcc-sparc-glibc.ver (__fixtfdi, __fixunstfdi,\n\t__floatditf): Export at GCC_LDBL_3.0 if -m32 -mlong-double-128.\n\t(__divtc3, __multc3, __powitf2): Export at GCC_LDBL_4.0.0 if\n\t-m32 -mlong-double-128.\n\n\t* config.gcc (alpha*-*-linux*): Add alpha/t-linux to tmake_file.\n\t* config/alpha/t-linux: New file.\n\t* config/alpha/libgcc-alpha-ldbl.ver: New file.\n\n\t* config/sparc/linux.h (TARGET_OS_CPP_BUILTINS): Define\n\t__LONG_DOUBLE_128__ if TARGET_LONG_DOUBLE_128.\n\t(CPP_SUBTARGET_SPEC): Don't add -D__LONG_DOUBLE_128__ here.\n\t* config/sparc/linux64.h (TARGET_OS_CPP_BUILTINS): Define\n\t__LONG_DOUBLE_128__ if TARGET_LONG_DOUBLE_128 and TARGET_ARCH32.\n\t(CPP_ARCH32_SPEC): Remove.\n\nFrom-SVN: r110741", "tree": {"sha": "a41bb4f1cec14e074b92e413221535071e94078e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a41bb4f1cec14e074b92e413221535071e94078e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbf2ca7bb768e02cb29495016550e1559bc7a09f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf2ca7bb768e02cb29495016550e1559bc7a09f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf2ca7bb768e02cb29495016550e1559bc7a09f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf2ca7bb768e02cb29495016550e1559bc7a09f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25e8451eb7687536993eb3eb876a915ae51c63aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25e8451eb7687536993eb3eb876a915ae51c63aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25e8451eb7687536993eb3eb876a915ae51c63aa"}], "stats": {"total": 153, "additions": 118, "deletions": 35}, "files": [{"sha": "b75b3b3e496bf2c811688147e0980e8772f9b307", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbf2ca7bb768e02cb29495016550e1559bc7a09f", "patch": "@@ -1,3 +1,25 @@\n+2006-02-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config.gcc (sparc-*-linux*): Add sparc/t-linux to tmake_file.\n+\t(sparc64-*-linux*): Likewise.\n+\t* config/sparc/t-linux64 (SHLIB_MAPFILES): Removed.\n+\t* config/sparc/t-linux: New file.\n+\t* config/sparc/libgcc-sparc-glibc.ver (__fixtfdi, __fixunstfdi,\n+\t__floatditf): Export at GCC_LDBL_3.0 if -m32 -mlong-double-128.\n+\t(__divtc3, __multc3, __powitf2): Export at GCC_LDBL_4.0.0 if\n+\t-m32 -mlong-double-128.\n+\n+\t* config.gcc (alpha*-*-linux*): Add alpha/t-linux to tmake_file.\n+\t* config/alpha/t-linux: New file.\n+\t* config/alpha/libgcc-alpha-ldbl.ver: New file.\n+\n+\t* config/sparc/linux.h (TARGET_OS_CPP_BUILTINS): Define\n+\t__LONG_DOUBLE_128__ if TARGET_LONG_DOUBLE_128.\n+\t(CPP_SUBTARGET_SPEC): Don't add -D__LONG_DOUBLE_128__ here.\n+\t* config/sparc/linux64.h (TARGET_OS_CPP_BUILTINS): Define\n+\t__LONG_DOUBLE_128__ if TARGET_LONG_DOUBLE_128 and TARGET_ARCH32.\n+\t(CPP_ARCH32_SPEC): Remove.\n+\n 2006-02-07  Uttam Pawar  <uttamp@us.ibm.com>\n \n \tPR tree-optimization/26145"}, {"sha": "b5c725195770adb203b7eb51b392d04ca2232f91", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=fbf2ca7bb768e02cb29495016550e1559bc7a09f", "patch": "@@ -568,7 +568,7 @@ alpha*-*-unicosmk*)\n alpha*-*-linux*)\n \ttm_file=\"${tm_file} alpha/elf.h alpha/linux.h alpha/linux-elf.h\"\n \ttarget_cpu_default=\"MASK_GAS\"\n-\ttmake_file=\"${tmake_file} alpha/t-crtfm alpha/t-alpha alpha/t-ieee\"\n+\ttmake_file=\"${tmake_file} alpha/t-crtfm alpha/t-alpha alpha/t-ieee alpha/t-linux\"\n \t;;\n alpha*-*-gnu*)\n \ttarget_cpu_default=\"MASK_GAS\"\n@@ -2055,7 +2055,7 @@ sparc-*-elf*)\n sparc-*-linux*)\t\t# SPARC's running GNU/Linux, libc6\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/linux.h\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n-\ttmake_file=\"${tmake_file} sparc/t-crtfm\"\n+\ttmake_file=\"${tmake_file} sparc/t-linux sparc/t-crtfm\"\n \t;;\n sparc-*-rtems*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/sp-elf.h sparc/rtemself.h rtems.h\"\n@@ -2174,7 +2174,7 @@ sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n sparc64-*-linux*)\t\t# 64-bit SPARC's running GNU/Linux\n \ttm_file=\"sparc/biarch64.h ${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/linux64.h\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n-\ttmake_file=\"${tmake_file} sparc/t-linux64 sparc/t-crtfm\"\n+\ttmake_file=\"${tmake_file} sparc/t-linux sparc/t-linux64 sparc/t-crtfm\"\n \t;;\n sparc64-*-netbsd*)\n \ttm_file=\"sparc/biarch64.h ${tm_file}\""}, {"sha": "f8fc4a9fa77f607989fd217d993c4be1caa0ff30", "filename": "gcc/config/alpha/libgcc-alpha-ldbl.ver", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Falpha%2Flibgcc-alpha-ldbl.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Falpha%2Flibgcc-alpha-ldbl.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flibgcc-alpha-ldbl.ver?ref=fbf2ca7bb768e02cb29495016550e1559bc7a09f", "patch": "@@ -0,0 +1,32 @@\n+%ifdef __LONG_DOUBLE_128__\n+\n+# long double 128 bit support in libgcc_s.so.1 is only available\n+# when configured with --with-long-double-128.  Make sure all the\n+# symbols are available at @@GCC_LDBL_* versions to make it clear\n+# there is a configurable symbol set.\n+\n+%exclude {\n+  __fixtfdi\n+  __fixunstfdi\n+  __floatditf\n+\n+  __divtc3\n+  __multc3\n+  __powitf2\n+}\n+\n+%inherit GCC_LDBL_3.0 GCC_3.0\n+GCC_LDBL_3.0 {\n+  __fixtfdi\n+  __fixunstfdi\n+  __floatditf\n+}\n+\n+%inherit GCC_LDBL_4.0.0 GCC_4.0.0\n+GCC_LDBL_4.0.0 {\n+  __divtc3\n+  __multc3\n+  __powitf2\n+}\n+\n+%endif"}, {"sha": "fabf38f9cce03b28e45f34d08d25e3ae3cd4a61b", "filename": "gcc/config/alpha/t-linux", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Falpha%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Falpha%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ft-linux?ref=fbf2ca7bb768e02cb29495016550e1559bc7a09f", "patch": "@@ -0,0 +1 @@\n+SHLIB_MAPFILES += $(srcdir)/config/alpha/libgcc-alpha-ldbl.ver"}, {"sha": "ed280fe05a7482a7e5d6efc089284849164443d6", "filename": "gcc/config/sparc/libgcc-sparc-glibc.ver", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Fsparc%2Flibgcc-sparc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Fsparc%2Flibgcc-sparc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flibgcc-sparc-glibc.ver?ref=fbf2ca7bb768e02cb29495016550e1559bc7a09f", "patch": "@@ -26,3 +26,36 @@ GLIBC_VER {\n   __frame_state_for\n   __register_frame_info_table\n }\n+\n+%if !defined (__arch64__) && defined (__LONG_DOUBLE_128__)\n+\n+# long double 128 bit support from 32-bit libgcc_s.so.1 is only available\n+# when configured with --with-long-double-128.  Make sure all the\n+# symbols are available at @@GCC_LDBL_* versions to make it clear\n+# there is a configurable symbol set.\n+\n+%exclude {\n+  __fixtfdi\n+  __fixunstfdi\n+  __floatditf\n+\n+  __divtc3\n+  __multc3\n+  __powitf2\n+}\n+\n+%inherit GCC_LDBL_3.0 GCC_3.0\n+GCC_LDBL_3.0 {\n+  __fixtfdi\n+  __fixunstfdi\n+  __floatditf\n+}\n+\n+%inherit GCC_LDBL_4.0.0 GCC_4.0.0\n+GCC_LDBL_4.0.0 {\n+  __divtc3\n+  __multc3\n+  __powitf2\n+}\n+\n+%endif"}, {"sha": "524c720ae63e6390202a8c77eb77d046086f091a", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=fbf2ca7bb768e02cb29495016550e1559bc7a09f", "patch": "@@ -23,12 +23,14 @@ Boston, MA 02110-1301, USA.  */\n #define TARGET_OS_CPP_BUILTINS()\t\t\\\n   do\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\\\n-\tbuiltin_define_std (\"unix\");\t\t\\\n-\tbuiltin_define_std (\"linux\");\t\t\\\n-\tbuiltin_define (\"__gnu_linux__\");\t\\\n-\tbuiltin_assert (\"system=linux\");\t\\\n-\tbuiltin_assert (\"system=unix\");\t\t\\\n-\tbuiltin_assert (\"system=posix\");\t\\\n+      builtin_define_std (\"unix\");\t\t\\\n+      builtin_define_std (\"linux\");\t\t\\\n+      builtin_define (\"__gnu_linux__\");\t\t\\\n+      builtin_assert (\"system=linux\");\t\t\\\n+      builtin_assert (\"system=unix\");\t\t\\\n+      builtin_assert (\"system=posix\");\t\t\\\n+      if (TARGET_LONG_DOUBLE_128)       \t\\\n+\tbuiltin_define (\"__LONG_DOUBLE_128__\");\t\\\n     }\t\t\t\t\t\t\\\n   while (0)\n \n@@ -95,8 +97,7 @@ Boston, MA 02110-1301, USA.  */\n \n #undef CPP_SUBTARGET_SPEC\n #define CPP_SUBTARGET_SPEC \\\n-\"%{posix:-D_POSIX_SOURCE} \\\n-%{pthread:-D_REENTRANT} %{mlong-double-128:-D__LONG_DOUBLE_128__}\"\n+\"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n \n #undef LIB_SPEC\n #define LIB_SPEC \\"}, {"sha": "a190c1654b1326c7ef222f3dfeb2ecebd3bfc96c", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=fbf2ca7bb768e02cb29495016550e1559bc7a09f", "patch": "@@ -20,17 +20,19 @@ along with GCC; see the file COPYING.  If not, write to\n the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n Boston, MA 02110-1301, USA.  */\n \n-#define TARGET_OS_CPP_BUILTINS()\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-\tbuiltin_define_std (\"unix\");\t\t\\\n-\tbuiltin_define_std (\"linux\");\t\t\\\n-\tbuiltin_define (\"_LONGLONG\");\t\t\\\n-\tbuiltin_define (\"__gnu_linux__\");\t\\\n-\tbuiltin_assert (\"system=linux\");\t\\\n-\tbuiltin_assert (\"system=unix\");\t\t\\\n-\tbuiltin_assert (\"system=posix\");\t\\\n-    }\t\t\t\t\t\t\\\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      builtin_define_std (\"unix\");\t\t\t\\\n+      builtin_define_std (\"linux\");\t\t\t\\\n+      builtin_define (\"_LONGLONG\");\t\t\t\\\n+      builtin_define (\"__gnu_linux__\");\t\t\t\\\n+      builtin_assert (\"system=linux\");\t\t\t\\\n+      builtin_assert (\"system=unix\");\t\t\t\\\n+      builtin_assert (\"system=posix\");\t\t\t\\\n+      if (TARGET_ARCH32 && TARGET_LONG_DOUBLE_128)\t\\\n+\tbuiltin_define (\"__LONG_DOUBLE_128__\");\t\t\\\n+    }\t\t\t\t\t\t\t\\\n   while (0)\n \n /* Don't assume anything about the header files.  */\n@@ -54,13 +56,6 @@ Boston, MA 02110-1301, USA.  */\n #undef ASM_CPU_DEFAULT_SPEC\n #define ASM_CPU_DEFAULT_SPEC \"-Av9a\"\n \n-#ifdef SPARC_BI_ARCH\n-\n-#undef CPP_ARCH32_SPEC\n-#define CPP_ARCH32_SPEC \"%{mlong-double-128:-D__LONG_DOUBLE_128__}\"\n-\n-#endif\n-\n /* Provide a STARTFILE_SPEC appropriate for GNU/Linux.  Here we add\n    the GNU/Linux magical crtbegin.o file (see crtstuff.c) which\n    provides part of the support for getting C++ file-scope static"}, {"sha": "a3e513087f5710c9dfbf1c75c4cc4d9a9f64a906", "filename": "gcc/config/sparc/t-linux", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Fsparc%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Fsparc%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-linux?ref=fbf2ca7bb768e02cb29495016550e1559bc7a09f", "patch": "@@ -0,0 +1,5 @@\n+# Override t-slibgcc-elf-ver to export some libgcc symbols with\n+# the symbol versions that glibc used.\n+# Avoid the t-linux version file.\n+SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver \\\n+\t\t $(srcdir)/config/sparc/libgcc-sparc-glibc.ver"}, {"sha": "7a1d5b1e14560c4dfc250a9be605c1c33d7e8f83", "filename": "gcc/config/sparc/t-linux64", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Fsparc%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf2ca7bb768e02cb29495016550e1559bc7a09f/gcc%2Fconfig%2Fsparc%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-linux64?ref=fbf2ca7bb768e02cb29495016550e1559bc7a09f", "patch": "@@ -8,12 +8,6 @@ INSTALL_LIBGCC = install-multilib\n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o \\\n \tcrtfastmath.o\n \n-# Override t-slibgcc-elf-ver to export some libgcc symbols with\n-# the symbol versions that glibc used.\n-# Avoid the t-linux version file.\n-SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver \\\n-\t\t $(srcdir)/config/sparc/libgcc-sparc-glibc.ver\n-\n CRTSTUFF_T_CFLAGS = `if test x$$($(GCC_FOR_TARGET) $(MULTILIB_CFLAGS) \\\n \t\t\t\t -print-multi-os-directory) \\\n \t\t\t= x../lib64; then echo -mcmodel=medany; fi`"}]}