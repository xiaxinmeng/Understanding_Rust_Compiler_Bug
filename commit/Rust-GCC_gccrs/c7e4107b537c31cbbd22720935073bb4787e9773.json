{"sha": "c7e4107b537c31cbbd22720935073bb4787e9773", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdlNDEwN2I1MzdjMzFjYmJkMjI3MjA5MzUwNzNiYjQ3ODdlOTc3Mw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2017-03-18T11:53:53Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2017-03-18T11:53:53Z"}, "message": "re PR fortran/71838 (ICE with OpenCoarrays on submodule)\n\n2017-03-18  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/71838\n\t* symbol.c (check_conflict): A dummy procedure in a submodule,\n\tmodule procedure is not an error.\n\t(gfc_add_flavor): Ditto.\n\n2017-03-18  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/71838\n\t* gfortran.dg/submodule_26.f08 : New test.\n\t* gfortran.dg/submodule_27.f08 : New test.\n\nFrom-SVN: r246255", "tree": {"sha": "ffd3ab1e79cf8deb0d35156af127f11439be1faa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffd3ab1e79cf8deb0d35156af127f11439be1faa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7e4107b537c31cbbd22720935073bb4787e9773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e4107b537c31cbbd22720935073bb4787e9773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7e4107b537c31cbbd22720935073bb4787e9773", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e4107b537c31cbbd22720935073bb4787e9773/comments", "author": null, "committer": null, "parents": [{"sha": "251daa19a4d046491e7803c32fd46ae24750d4ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251daa19a4d046491e7803c32fd46ae24750d4ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251daa19a4d046491e7803c32fd46ae24750d4ba"}], "stats": {"total": 121, "additions": 118, "deletions": 3}, "files": [{"sha": "e8d62961f8906d763258f28b4797c4fc1ec3cf07", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e4107b537c31cbbd22720935073bb4787e9773/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e4107b537c31cbbd22720935073bb4787e9773/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c7e4107b537c31cbbd22720935073bb4787e9773", "patch": "@@ -1,3 +1,10 @@\n+2017-03-18  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/71838\n+\t* symbol.c (check_conflict): A dummy procedure in a submodule,\n+\tmodule procedure is not an error.\n+\t(gfc_add_flavor): Ditto.\n+\n 2017-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/79841\n@@ -46,7 +53,7 @@\n \t* gfortran.texi: Added description for the new API functions. Updated\n \tcoverage of gfortran of TS18508.\n \t* intrinsic.c (add_functions): Added symbols to resolve new intrinsic\n-\tfunctions. \n+\tfunctions.\n \t* intrinsic.h: Added prototypes.\n \t* iresolve.c (gfc_resolve_failed_images): Resolve the failed_images\n \tintrinsic."}, {"sha": "fc79d9970cdcaf0cebd81a5ea10aeafff685b5ff", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e4107b537c31cbbd22720935073bb4787e9773/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e4107b537c31cbbd22720935073bb4787e9773/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=c7e4107b537c31cbbd22720935073bb4787e9773", "patch": "@@ -474,8 +474,13 @@ check_conflict (symbol_attribute *attr, const char *name, locus *where)\n \t}\n     }\n \n-  if (attr->dummy && ((attr->function || attr->subroutine) && \n-\t\t\tgfc_current_state () == COMP_CONTAINS))\n+  /* The copying of procedure dummy arguments for module procedures in\n+     a submodule occur whilst the current state is COMP_CONTAINS. It\n+     is necessary, therefore, to let this through.  */\n+  if (attr->dummy\n+      && (attr->function || attr->subroutine)\n+      && gfc_current_state () == COMP_CONTAINS\n+      && !(gfc_new_block && gfc_new_block->abr_modproc_decl))\n     gfc_error_now (\"internal procedure %qs at %L conflicts with \"\n \t\t   \"DUMMY argument\", name, where);\n \n@@ -1646,6 +1651,13 @@ gfc_add_flavor (symbol_attribute *attr, sym_flavor f, const char *name,\n   if (attr->flavor == f && f == FL_VARIABLE)\n     return true;\n \n+  /* Copying a procedure dummy argument for a module procedure in a\n+     submodule results in the flavor being copied and would result in\n+     an error without this.  */\n+  if (gfc_new_block && gfc_new_block->abr_modproc_decl\n+      && attr->flavor == f && f == FL_PROCEDURE)\n+    return true;\n+\n   if (attr->flavor != FL_UNKNOWN)\n     {\n       if (where == NULL)"}, {"sha": "da22ac21e50e84c06255795212f8f18f275e15b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e4107b537c31cbbd22720935073bb4787e9773/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e4107b537c31cbbd22720935073bb4787e9773/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7e4107b537c31cbbd22720935073bb4787e9773", "patch": "@@ -1,3 +1,9 @@\n+2017-03-18  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/71838\n+\t* gfortran.dg/submodule_26.f08 : New test.\n+\t* gfortran.dg/submodule_27.f08 : New test.\n+\n 2017-03-17  Pat Haugen  <pthaugen@us.ibm.com>\n \n \tPR target/79951"}, {"sha": "6e0ec9a8f3962d2bf6c1abc882f4114a85a80314", "filename": "gcc/testsuite/gfortran.dg/submodule_26.f08", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e4107b537c31cbbd22720935073bb4787e9773/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_26.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e4107b537c31cbbd22720935073bb4787e9773/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_26.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_26.f08?ref=c7e4107b537c31cbbd22720935073bb4787e9773", "patch": "@@ -0,0 +1,46 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n+!\n+! Tests the fix for PR71838 in which the PROCEDURE dummy argument caused\n+! an ICE in the submodule. This is the reduced test in comment #9.\n+!\n+! Contributed by Anton Shterenlikht  <mexas@bristol.ac.uk>\n+! Test reduced by Dominique d'Humieres <dominiq@lps.ens.fr>\n+!\n+module cgca_m3clvg\n+  abstract interface\n+    subroutine cgca_clvgs_abstract( farr, marr, n, cstate, debug,      &\n+                                    newstate )\n+      integer, parameter :: iarr = 4, idef = 4, rdef = 4, ldef = 4\n+      integer, parameter :: l=-1, centre=l+1, u=centre+1\n+      integer( kind=iarr ), intent(in) :: farr(l:u,l:u,l:u),           &\n+          marr(l:u,l:u,l:u), cstate\n+      real( kind=rdef ), intent(in) :: n(3)\n+      logical( kind=ldef ), intent(in) :: debug\n+      integer( kind=iarr ), intent(out) :: newstate\n+     end subroutine cgca_clvgs_abstract\n+  end interface\n+\n+  interface\n+    module subroutine cgca_clvgp( coarray, rt, t, scrit, sub, gcus,    &\n+                                 periodicbc, iter, heartbeat, debug )\n+      integer, parameter :: iarr = 4, idef = 4, rdef = 4, ldef = 4\n+      integer( kind=iarr ), allocatable, intent(inout) ::              &\n+          coarray(:,:,:,:)[:,:,:]\n+      real( kind=rdef ), allocatable, intent(inout) :: rt(:,:,:)[:,:,:]\n+      real( kind=rdef ), intent(in) :: t(3,3), scrit(3)\n+      procedure( cgca_clvgs_abstract ) :: sub\n+      logical( kind=ldef ), intent(in) :: periodicbc\n+      integer( kind=idef ), intent(in) :: iter, heartbeat\n+      logical( kind=ldef ), intent(in) :: debug\n+    end subroutine cgca_clvgp\n+  end interface\n+end module cgca_m3clvg\n+\n+\n+submodule ( cgca_m3clvg ) m3clvg_sm3\n+  implicit none\n+contains\n+  module procedure cgca_clvgp\n+  end procedure cgca_clvgp\n+end submodule m3clvg_sm3"}, {"sha": "1439c38cb9af3f26c34f03379a45145a9a6b2f16", "filename": "gcc/testsuite/gfortran.dg/submodule_27.f08", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e4107b537c31cbbd22720935073bb4787e9773/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_27.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e4107b537c31cbbd22720935073bb4787e9773/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_27.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_27.f08?ref=c7e4107b537c31cbbd22720935073bb4787e9773", "patch": "@@ -0,0 +1,44 @@\n+! { dg-do run }\n+!\n+! Tests the fix for PR71838 in which the PROCEDURE dummy argument caused\n+! an ICE in the submodule. This an executable version of the reduced test\n+! in comment #11.\n+!\n+! Contributed by Anton Shterenlikht  <mexas@bristol.ac.uk>\n+! Test reduced by Dominique d'Humieres <dominiq@lps.ens.fr>\n+!\n+subroutine hello (message)\n+  character (7), intent(inout) :: message\n+  message = \"hello  \"\n+end\n+\n+module cgca_m3clvg\n+  interface\n+    subroutine cgca_clvgs_abstract(message)\n+      character (7), intent(inout) :: message\n+    end subroutine cgca_clvgs_abstract\n+  end interface\n+\n+  interface\n+    module subroutine cgca_clvgp(sub)\n+      procedure( cgca_clvgs_abstract ) :: sub\n+    end subroutine cgca_clvgp\n+  end interface\n+\n+  character (7) :: greeting\n+end module cgca_m3clvg\n+\n+submodule ( cgca_m3clvg ) m3clvg_sm3\n+  implicit none\n+contains\n+  module procedure cgca_clvgp\n+    call sub (greeting)\n+  end procedure cgca_clvgp\n+end submodule m3clvg_sm3\n+\n+  use cgca_m3clvg\n+  external hello\n+  greeting = \"goodbye\"\n+  call cgca_clvgp (hello)\n+  if (trim (greeting) .ne. \"hello\") call abort\n+end"}]}