{"sha": "3b1da8bb77bb07285272f2ad9e516197f3fe0835", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IxZGE4YmI3N2JiMDcyODUyNzJmMmFkOWU1MTYxOTdmM2ZlMDgzNQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-11-11T14:09:30Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-11-11T14:09:30Z"}, "message": "simplify-rtx: Simplify trunc of and of shiftrt\n\nIf we have\n\n\t(truncate:M1 (and:M2 (lshiftrt:M2 (x:M2) C) C2))\n\nwe can write it instead as\n\n\t(and:M1 (lshiftrt:M1 (truncate:M1 (x:M2)) C) C2)\n\n(if that is valid, of course), which has smaller modes for the\nbinary ops, and the truncate can often simplify further (if \"x\"\nis a register, for example).\n\n\n\t* gcc/simplify-rtx.c (simplify_truncation): Simplify TRUNCATE\n\tof AND of [LA]SHIFTRT.\n\nFrom-SVN: r230164", "tree": {"sha": "c09f91af0c54de0985d5a415cf2c88fc2d1c1afd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c09f91af0c54de0985d5a415cf2c88fc2d1c1afd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b1da8bb77bb07285272f2ad9e516197f3fe0835", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1da8bb77bb07285272f2ad9e516197f3fe0835", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b1da8bb77bb07285272f2ad9e516197f3fe0835", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1da8bb77bb07285272f2ad9e516197f3fe0835/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ad291c0e8e6a489d98741eb958736cc5f09d0b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ad291c0e8e6a489d98741eb958736cc5f09d0b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ad291c0e8e6a489d98741eb958736cc5f09d0b7"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "eb556d059577c3ba85ef058d8a5efb271bbf7e41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1da8bb77bb07285272f2ad9e516197f3fe0835/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1da8bb77bb07285272f2ad9e516197f3fe0835/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b1da8bb77bb07285272f2ad9e516197f3fe0835", "patch": "@@ -1,3 +1,8 @@\n+2015-11-11  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc/simplify-rtx.c (simplify_truncation): Simplify TRUNCATE\n+\tof AND of [LA]SHIFTRT.\n+\n 2015-11-11  Martin Liska  <mliska@suse.cz>\n \t    Richard Biener  <rguenther@suse.de>\n "}, {"sha": "c4fc42aebcf2d80c8747ecc6becf0f5f3b827e6d", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1da8bb77bb07285272f2ad9e516197f3fe0835/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1da8bb77bb07285272f2ad9e516197f3fe0835/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=3b1da8bb77bb07285272f2ad9e516197f3fe0835", "patch": "@@ -714,6 +714,34 @@ simplify_truncation (machine_mode mode, rtx op,\n     return simplify_gen_binary (ASHIFT, mode,\n \t\t\t\tXEXP (XEXP (op, 0), 0), XEXP (op, 1));\n \n+  /* Likewise (truncate:QI (and:SI (lshiftrt:SI (x:SI) C) C2)) into\n+     (and:QI (lshiftrt:QI (truncate:QI (x:SI)) C) C2) for suitable C\n+     and C2.  */\n+  if (GET_CODE (op) == AND\n+      && (GET_CODE (XEXP (op, 0)) == LSHIFTRT\n+\t  || GET_CODE (XEXP (op, 0)) == ASHIFTRT)\n+      && CONST_INT_P (XEXP (XEXP (op, 0), 1))\n+      && CONST_INT_P (XEXP (op, 1)))\n+    {\n+      rtx op0 = (XEXP (XEXP (op, 0), 0));\n+      rtx shift_op = XEXP (XEXP (op, 0), 1);\n+      rtx mask_op = XEXP (op, 1);\n+      unsigned HOST_WIDE_INT shift = UINTVAL (shift_op);\n+      unsigned HOST_WIDE_INT mask = UINTVAL (mask_op);\n+\n+      if (shift < precision\n+\t  /* If doing this transform works for an X with all bits set,\n+\t     it works for any X.  */\n+\t  && ((GET_MODE_MASK (mode) >> shift) & mask)\n+\t     == ((GET_MODE_MASK (op_mode) >> shift) & mask)\n+\t  && (op0 = simplify_gen_unary (TRUNCATE, mode, op0, op_mode))\n+\t  && (op0 = simplify_gen_binary (LSHIFTRT, mode, op0, shift_op)))\n+\t{\n+\t  mask_op = GEN_INT (trunc_int_for_mode (mask, mode));\n+\t  return simplify_gen_binary (AND, mode, op0, mask_op);\n+\t}\n+    }\n+\n   /* Recognize a word extraction from a multi-word subreg.  */\n   if ((GET_CODE (op) == LSHIFTRT\n        || GET_CODE (op) == ASHIFTRT)"}]}