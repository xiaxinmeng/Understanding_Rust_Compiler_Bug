{"sha": "4971426b43884c12761691e9017828512483e7be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk3MTQyNmI0Mzg4NGMxMjc2MTY5MWU5MDE3ODI4NTEyNDgzZTdiZQ==", "commit": {"author": {"name": "Alan Lehotsky", "email": "lehotsky@tiac.net", "date": "2001-01-10T02:34:14Z"}, "committer": {"name": "Alan Lehotsky", "email": "alehotsky@gcc.gnu.org", "date": "2001-01-10T02:34:14Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r38849", "tree": {"sha": "a7d4908b19444ce690db058c95b6b1ac87e5b736", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7d4908b19444ce690db058c95b6b1ac87e5b736"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4971426b43884c12761691e9017828512483e7be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4971426b43884c12761691e9017828512483e7be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4971426b43884c12761691e9017828512483e7be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4971426b43884c12761691e9017828512483e7be/comments", "author": null, "committer": null, "parents": [{"sha": "fa44a93614f595ad511c5e1540bf83bbfbbb52b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa44a93614f595ad511c5e1540bf83bbfbbb52b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa44a93614f595ad511c5e1540bf83bbfbbb52b1"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "dcadbdcc7a5684131ffa2bc22c419ff02c38a259", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4971426b43884c12761691e9017828512483e7be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4971426b43884c12761691e9017828512483e7be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4971426b43884c12761691e9017828512483e7be", "patch": "@@ -1,3 +1,8 @@\n+2001-01-09  Alan Lehotsky  <lehotsky@tiac.net>\n+\n+\t* reload.c (find_reloads_address): Check for eliminable registers\n+\t\t  when substituting a constant expression for a pseudo.\n+\t\n 2001-01-09  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* c-common.c (enum format_type): Add format_type_error."}, {"sha": "533c28c92491b6b8cd881843b3a991e9561c4a23", "filename": "gcc/reload.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4971426b43884c12761691e9017828512483e7be/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4971426b43884c12761691e9017828512483e7be/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=4971426b43884c12761691e9017828512483e7be", "patch": "@@ -4487,10 +4487,14 @@ find_reloads_address (mode, memrefloc, ad, loc, opnum, type, ind_levels, insn)\n     {\n       regno = REGNO (ad);\n \n-      if (reg_equiv_constant[regno] != 0\n-\t  && strict_memory_address_p (mode, reg_equiv_constant[regno]))\n+      /* If the register is equivalent to an invariant expression, substitute\n+\t the invariant, and eliminate any eliminable register references. */\n+      tem = reg_equiv_constant[regno];\n+      if (tem != 0\n+\t  && (tem = eliminate_regs (tem, mode, insn))\n+\t  && strict_memory_address_p (mode, tem))\n \t{\n-\t  *loc = ad = reg_equiv_constant[regno];\n+\t  *loc = ad = tem;\n \t  return 0;\n \t}\n "}]}