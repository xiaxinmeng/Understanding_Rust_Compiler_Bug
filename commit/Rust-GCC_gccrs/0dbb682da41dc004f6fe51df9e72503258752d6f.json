{"sha": "0dbb682da41dc004f6fe51df9e72503258752d6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRiYjY4MmRhNDFkYzAwNGY2ZmU1MWRmOWU3MjUwMzI1ODc1MmQ2Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-23T13:39:56Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-23T13:39:56Z"}, "message": "(ENQUIRE_CFLAGS): Omit -DNO_STDDEF.\n\n(USE_ALLOCA): Allow ${ALLOCA} to begin with a dash.\n(OBJC, OBJECTIVE-C): Depend on objc-runtime.\n(objc-headers): Make include directory if missing.\n\nFrom-SVN: r6281", "tree": {"sha": "cc57fffe66a6a790ce9e899b480019bf2c5068c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc57fffe66a6a790ce9e899b480019bf2c5068c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0dbb682da41dc004f6fe51df9e72503258752d6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dbb682da41dc004f6fe51df9e72503258752d6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dbb682da41dc004f6fe51df9e72503258752d6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dbb682da41dc004f6fe51df9e72503258752d6f/comments", "author": null, "committer": null, "parents": [{"sha": "b3a2ef9465ec43c08362ddabcc3fa32d8329fe9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3a2ef9465ec43c08362ddabcc3fa32d8329fe9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3a2ef9465ec43c08362ddabcc3fa32d8329fe9d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "c909322c92bda4da6f4ac98e83203e4855dd3f95", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dbb682da41dc004f6fe51df9e72503258752d6f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dbb682da41dc004f6fe51df9e72503258752d6f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0dbb682da41dc004f6fe51df9e72503258752d6f", "patch": "@@ -105,7 +105,7 @@ GCC_CFLAGS=$(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -I./include\n \n # Special flags for compiling enquire.\n # We disable optimization to make floating point more reliable.\n-ENQUIRE_CFLAGS = -DNO_MEM -DNO_STDDEF -DNO_LONG_DOUBLE_IO -O0\n+ENQUIRE_CFLAGS = -DNO_MEM -DNO_LONG_DOUBLE_IO -O0\n ENQUIRE_LDFLAGS = $(LDFLAGS)\n \n # Tools to use when building a cross-compiler.\n@@ -347,7 +347,7 @@ ALL_CFLAGS = $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) $(XCFLAGS)\n ALL_CPPFLAGS = $(CPPFLAGS) $(X_CPPFLAGS) $(T_CPPFLAGS)\n \n # Even if ALLOCA is set, don't use it if compiling with GCC.\n-USE_ALLOCA= ` case \"${CC}\" in \"${OLDCC}\") echo ${ALLOCA} ;; esac `\n+USE_ALLOCA= ` case \"${CC}\" in \"${OLDCC}\") echo \"\" ${ALLOCA} ;; esac `\n USE_HOST_ALLOCA= ` case \"${HOST_CC}\"@\"${HOST_ALLOCA}\" in \"${OLDCC}\"@?*) echo ${HOST_PREFIX}${HOST_ALLOCA} ;; esac `\n USE_HOST_MALLOC= ` case \"${HOST_MALLOC}\" in ?*) echo ${HOST_PREFIX}${HOST_MALLOC} ;; esac `\n USE_HOST_OBSTACK= ` case \"${HOST_OBSTACK}\" in ?*) echo ${HOST_PREFIX}${HOST_OBSTACK} ;; esac `\n@@ -512,9 +512,8 @@ native: config.status cpp $(LANGUAGES) $(EXTRA_PASSES) $(EXTRA_PROGRAMS) $(USE_C\n # to do the right thing within all.cross.\n C c: cc1\n C++ c++: cc1plus\n-# The next two ought to depend on objc-runtime, but that doesn't work yet.\n-OBJC objc: cc1obj\n-OBJECTIVE-C objective-c: cc1obj\n+OBJC objc: cc1obj objc-runtime\n+OBJECTIVE-C objective-c: cc1obj objc-runtime\n PROTO: proto\n \n # Really, really stupid make features, such as SUN's KEEP_STATE, may force\n@@ -1560,6 +1559,7 @@ stmp-fixinc: $(srcdir)/$(FIXINCLUDES) gsyslimits.h fixinc.ready\n \n # copy objc header files into build directory\n objc-headers: stmp-fixinc\n+\tif [ -d include ]; then true; else mkdir include; fi\n \tif [ -d objc ]; then true; else mkdir objc; fi\n \tthisdir1=`pwd`; \\\n \tsrcdir1=`cd $(srcdir); pwd`; \\"}]}