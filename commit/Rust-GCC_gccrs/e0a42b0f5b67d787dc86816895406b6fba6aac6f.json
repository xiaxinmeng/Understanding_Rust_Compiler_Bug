{"sha": "e0a42b0f5b67d787dc86816895406b6fba6aac6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBhNDJiMGY1YjY3ZDc4N2RjODY4MTY4OTU0MDZiNmZiYTZhYWM2Zg==", "commit": {"author": {"name": "Zbigniew Chamski", "email": "zbigniew.chamski@gmail.com", "date": "2009-11-08T21:10:08Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2009-11-08T21:10:08Z"}, "message": "cfgrtl.c (pass_free_cfg): Add pass name.\n\n        * cfgrtl.c (pass_free_cfg): Add pass name.\n        * cgraphbuild.c (pass_build_cgraph_edges): Likewise.\n        (pass_rebuild_cgraph_edges, pass_remove_cgraph_callee_edges): Likewise.\n        * dce.c (pass_ud_rtl_dce, pass_fast_rtl_dce): Change pass name.\n        * df-core.c (pass_df_initialize_no_opt): Likewise.\n        * except.c (pass_rtl_eh): Likewise.\n        * function.c (pass_init_function, pass_leaf_regs): Likewise.\n        * gcse.c (pass_rtl_pre): Change pass name.\n        * passes.c (pass_postreload): Add pass name.\n        (make_pass_instance): Don't use duplicate-tracking logic for\n        names starting with '*'.\n        (next_pass_1): Assert that pass has a name.\n        (register_one_dump_file): If there is an space in the name,\n        skip past it.\n        * predict.c (pass_strip_predict_hints): Add pass name.\n        * reg-stack.c (pass_stack_regs): Likewise.\n        * stack-ptr-mod.c (pass_stack_ptr_mod): Likewise.\n        * tree-cfg.c (pass_warn_function_return,\n        pass_warn_function_noreturn): Add pass name.\n        * tree-dfa.c (pass_referenced_vars): Likewise.\n        * tree-optimize.c (pass_cleanup_cfg_post_optimizing):\n        Fix whitespace before comment.\n        (pass_fixup_cfg): Add pass name, fix whitespace before comment.\n        (pass_init_datastructures): Add pass name.\n        * tree-ssa-loop.c (pass_record_bounds): Likewise.\n        * tree-ssa.c (pass_early_warn_uninitialized,\n        pass_late_warn_uninitialized): Likewise.\n        * tree.c (pass_ipa_free_lang_data): Likewise.\n        * doc/passes.texi (pass manager): Document how to disambiguate\n        pass names.\n\nCo-Authored-By: Joern Rennecke <amylaar@spamcop.net>\n\nFrom-SVN: r154013", "tree": {"sha": "42ab065bf8a3186983b0f265c90ee184ca2fd8ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42ab065bf8a3186983b0f265c90ee184ca2fd8ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0a42b0f5b67d787dc86816895406b6fba6aac6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a42b0f5b67d787dc86816895406b6fba6aac6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0a42b0f5b67d787dc86816895406b6fba6aac6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a42b0f5b67d787dc86816895406b6fba6aac6f/comments", "author": {"login": "PicoPET", "id": 17454672, "node_id": "MDQ6VXNlcjE3NDU0Njcy", "avatar_url": "https://avatars.githubusercontent.com/u/17454672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PicoPET", "html_url": "https://github.com/PicoPET", "followers_url": "https://api.github.com/users/PicoPET/followers", "following_url": "https://api.github.com/users/PicoPET/following{/other_user}", "gists_url": "https://api.github.com/users/PicoPET/gists{/gist_id}", "starred_url": "https://api.github.com/users/PicoPET/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PicoPET/subscriptions", "organizations_url": "https://api.github.com/users/PicoPET/orgs", "repos_url": "https://api.github.com/users/PicoPET/repos", "events_url": "https://api.github.com/users/PicoPET/events{/privacy}", "received_events_url": "https://api.github.com/users/PicoPET/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "642746839c4e86df01d0a6b34dd945ae10db7bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/642746839c4e86df01d0a6b34dd945ae10db7bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/642746839c4e86df01d0a6b34dd945ae10db7bc7"}], "stats": {"total": 119, "additions": 84, "deletions": 35}, "files": [{"sha": "aeb880e82309042df15ae283e4a6ca7d4d78f85b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -1,3 +1,37 @@\n+2009-11-08  Zbigniew Chamski  <zbigniew.chamski@gmail.com>\n+\t    Joern Rennecke  <amylaar@spamcop.net>\n+\n+\t* cfgrtl.c (pass_free_cfg): Add pass name.\n+\t* cgraphbuild.c (pass_build_cgraph_edges): Likewise.\n+\t(pass_rebuild_cgraph_edges, pass_remove_cgraph_callee_edges): Likewise.\n+\t* dce.c (pass_ud_rtl_dce, pass_fast_rtl_dce): Change pass name.\n+\t* df-core.c (pass_df_initialize_no_opt): Likewise.\n+\t* except.c (pass_rtl_eh): Likewise.\n+\t* function.c (pass_init_function, pass_leaf_regs): Likewise.\n+\t* gcse.c (pass_rtl_pre): Change pass name.\n+\t* passes.c (pass_postreload): Add pass name.\n+\t(make_pass_instance): Don't use duplicate-tracking logic for\n+\tnames starting with '*'.\n+\t(next_pass_1): Assert that pass has a name.\n+\t(register_one_dump_file): If there is an space in the name,\n+\tskip past it.\n+\t* predict.c (pass_strip_predict_hints): Add pass name.\n+\t* reg-stack.c (pass_stack_regs): Likewise.\n+\t* stack-ptr-mod.c (pass_stack_ptr_mod): Likewise.\n+\t* tree-cfg.c (pass_warn_function_return,\n+\tpass_warn_function_noreturn): Add pass name.\n+\t* tree-dfa.c (pass_referenced_vars): Likewise.\n+\t* tree-optimize.c (pass_cleanup_cfg_post_optimizing):\n+\tFix whitespace before comment.\n+\t(pass_fixup_cfg): Add pass name, fix whitespace before comment.\n+\t(pass_init_datastructures): Add pass name.\n+\t* tree-ssa-loop.c (pass_record_bounds): Likewise.\n+\t* tree-ssa.c (pass_early_warn_uninitialized,\n+\tpass_late_warn_uninitialized): Likewise.\n+\t* tree.c (pass_ipa_free_lang_data): Likewise.\n+\t* doc/passes.texi (pass manager): Document how to disambiguate\n+\tpass names.\n+\n 2009-11-08  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* df-problems.c: Fix documentation for forward simulation of LR."}, {"sha": "73aebf078446aaa15af4e2d0b760a36062953bfc", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -433,7 +433,7 @@ struct rtl_opt_pass pass_free_cfg =\n {\n  {\n   RTL_PASS,\n-  NULL,                                 /* name */\n+  \"*free_cfg\",                          /* name */\n   NULL,                                 /* gate */\n   rest_of_pass_free_cfg,                /* execute */\n   NULL,                                 /* sub */"}, {"sha": "8423c36b880a5624f3f0adcd7527dbbbb4c0d3b9", "filename": "gcc/cgraphbuild.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fcgraphbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fcgraphbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -205,7 +205,7 @@ struct gimple_opt_pass pass_build_cgraph_edges =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*build_cgraph_edges\",\t\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   build_cgraph_edges,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -270,7 +270,7 @@ struct gimple_opt_pass pass_rebuild_cgraph_edges =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*rebuild_cgraph_edges\",\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   rebuild_cgraph_edges,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -297,7 +297,7 @@ struct gimple_opt_pass pass_remove_cgraph_callee_edges =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*remove_cgraph_callee_edges\",\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   remove_cgraph_callee_edges,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "a2c6973f53f904427a523725c9a8de0b4e183c6b", "filename": "gcc/dce.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -738,9 +738,9 @@ struct rtl_opt_pass pass_ud_rtl_dce =\n {\n  {\n   RTL_PASS,\n-  \"dce\",                                /* name */\n-  gate_ud_dce,                        /* gate */\n-  rest_of_handle_ud_dce,              /* execute */\n+  \"ud dce\",                             /* name */\n+  gate_ud_dce,                          /* gate */\n+  rest_of_handle_ud_dce,                /* execute */\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n@@ -1123,7 +1123,7 @@ struct rtl_opt_pass pass_fast_rtl_dce =\n {\n  {\n   RTL_PASS,\n-  \"dce\",                                /* name */\n+  \"rtl dce\",                            /* name */\n   gate_fast_dce,                        /* gate */\n   rest_of_handle_fast_dce,              /* execute */\n   NULL,                                 /* sub */"}, {"sha": "a53e7091d955b81b58f3ffae8c92ee60693925db", "filename": "gcc/df-core.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -780,7 +780,7 @@ struct rtl_opt_pass pass_df_initialize_no_opt =\n {\n  {\n   RTL_PASS,\n-  \"dfinit\",                             /* name */\n+  \"no-opt dfinit\",                      /* name */\n   gate_no_opt,                          /* gate */\n   rest_of_handle_df_initialize,         /* execute */\n   NULL,                                 /* sub */"}, {"sha": "2bbddeab52012f6e36681b643394ce9a83983f57", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -166,9 +166,14 @@ not attempt to (re-)generate data structures or lower intermediate\n language form based on the requirements of the next pass.  Nevertheless,\n what is present is useful, and a far sight better than nothing at all.\n \n+Each pass should have a unique name.\n Each pass may have its own dump file (for GCC debugging purposes).\n-Passes without any names, or with a name starting with a star, do not\n-dump anything.\n+Passes with a name starting with a star do not dump anything.\n+Sometimes passes are supposed to share a dump file / option name.\n+To still give these unique names, you can use a prefix that is delimited\n+by a space from the part that is used for the dump file / option name.\n+E.g. When the pass name is \"ud dce\", the name used for dump file/options\n+is \"dce\".\n \n TODO: describe the global variables set up by the pass manager,\n and a brief description of how a new pass should use it."}, {"sha": "6c7618339e57bc0fb3c92da53aeb7620a66a1ada", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -1465,7 +1465,7 @@ struct rtl_opt_pass pass_rtl_eh =\n {\n  {\n   RTL_PASS,\n-  \"eh\",                                 /* name */\n+  \"rtl eh\",                             /* name */\n   gate_handle_eh,                       /* gate */\n   rest_of_handle_eh,\t\t\t/* execute */\n   NULL,                                 /* sub */"}, {"sha": "d5963430c7305b37a6f447cffa8334aab2db695b", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -4228,7 +4228,7 @@ struct rtl_opt_pass pass_init_function =\n {\n  {\n   RTL_PASS,\n-  NULL,                                 /* name */\n+  \"*init_function\",                     /* name */\n   NULL,                                 /* gate */   \n   init_function_for_compilation,        /* execute */       \n   NULL,                                 /* sub */\n@@ -5538,7 +5538,7 @@ struct rtl_opt_pass pass_leaf_regs =\n {\n  {\n   RTL_PASS,\n-  NULL,                                 /* name */\n+  \"*leaf_regs\",                         /* name */\n   NULL,                                 /* gate */\n   rest_of_handle_check_leaf_regs,       /* execute */\n   NULL,                                 /* sub */"}, {"sha": "e6514e7cce5d40508bc9dd71eca70eecf762e7c7", "filename": "gcc/gcse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -5147,7 +5147,7 @@ struct rtl_opt_pass pass_rtl_pre =\n {\n  {\n   RTL_PASS,\n-  \"pre\",                                /* name */\n+  \"rtl pre\",                            /* name */\n   gate_rtl_pre,                         /* gate */   \n   execute_rtl_pre,    \t\t\t/* execute */       \n   NULL,                                 /* sub */"}, {"sha": "1cef3499b789ec168124943cf5ab1326a46678b3", "filename": "gcc/passes.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -314,7 +314,7 @@ struct rtl_opt_pass pass_postreload =\n {\n  {\n   RTL_PASS,\n-  NULL,                                 /* name */\n+  \"*all-postreload\",                        /* name */\n   gate_postreload,                      /* gate */\n   NULL,                                 /* execute */\n   NULL,                                 /* sub */\n@@ -374,7 +374,7 @@ void\n register_one_dump_file (struct opt_pass *pass)\n {\n   char *dot_name, *flag_name, *glob_name;\n-  const char *prefix;\n+  const char *name, *prefix;\n   char num[10];\n   int flags, id;\n \n@@ -384,16 +384,23 @@ register_one_dump_file (struct opt_pass *pass)\n     sprintf (num, \"%d\", ((int) pass->static_pass_number < 0\n \t\t\t ? 1 : pass->static_pass_number));\n \n-  dot_name = concat (\".\", pass->name, num, NULL);\n+  /* The name is both used to identify the pass for the purposes of plugins,\n+     and to specify dump file name and option.\n+     The latter two might want something short which is not quite unique; for\n+     that reason, we may have a disambiguating prefix, followed by a space\n+     to mark the start of the following dump file name / option string.  */\n+  name = strchr (pass->name, ' ');\n+  name = name ? name + 1 : pass->name;\n+  dot_name = concat (\".\", name, num, NULL);\n   if (pass->type == SIMPLE_IPA_PASS || pass->type == IPA_PASS)\n     prefix = \"ipa-\", flags = TDF_IPA;\n   else if (pass->type == GIMPLE_PASS)\n     prefix = \"tree-\", flags = TDF_TREE;\n   else\n     prefix = \"rtl-\", flags = TDF_RTL;\n \n-  flag_name = concat (prefix, pass->name, num, NULL);\n-  glob_name = concat (prefix, pass->name, NULL);\n+  flag_name = concat (prefix, name, num, NULL);\n+  glob_name = concat (prefix, name, NULL);\n   id = dump_register (dot_name, flag_name, glob_name, flags);\n   set_pass_for_id (id, pass);\n }\n@@ -461,7 +468,7 @@ make_pass_instance (struct opt_pass *pass, bool track_duplicates)\n          and so it should rename the dump file.  The first instance will\n          be -1, and be number of duplicates = -static_pass_number - 1.\n          Subsequent instances will be > 0 and just the duplicate number.  */\n-      if (pass->name || track_duplicates)\n+      if ((pass->name && pass->name[0] != '*') || track_duplicates)\n         {\n           pass->static_pass_number -= 1;\n           new_pass->static_pass_number = -pass->static_pass_number;\n@@ -482,6 +489,9 @@ make_pass_instance (struct opt_pass *pass, bool track_duplicates)\n static struct opt_pass **\n next_pass_1 (struct opt_pass **list, struct opt_pass *pass)\n {\n+  /* Every pass should have a name so that plugins can refer to them.  */\n+  gcc_assert (pass->name != NULL);\n+\n   *list = make_pass_instance (pass, false);\n   \n   return &(*list)->next;"}, {"sha": "becff10615b4db8ad05aaf088db95a0dd8a9edfb", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -2246,7 +2246,7 @@ struct gimple_opt_pass pass_strip_predict_hints =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*strip_predict_hints\",\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   strip_predict_hints,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "f3f71e9c534412e1f6fd9771ce255ec0a703f4ce", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -3275,7 +3275,7 @@ struct rtl_opt_pass pass_stack_regs =\n {\n  {\n   RTL_PASS,\n-  NULL,                                 /* name */\n+  \"*stack_regs\",                        /* name */\n   gate_handle_stack_regs,               /* gate */\n   NULL,\t\t\t\t\t/* execute */\n   NULL,                                 /* sub */"}, {"sha": "2d9ce82c98ed60c3c410aaed3c5adc4d68a1507c", "filename": "gcc/stack-ptr-mod.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fstack-ptr-mod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Fstack-ptr-mod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstack-ptr-mod.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -95,7 +95,7 @@ struct rtl_opt_pass pass_stack_ptr_mod =\n {\n  {\n   RTL_PASS,\n-  NULL,\t\t                        /* name */\n+  \"*stack_ptr_mod\",                     /* name */\n   NULL,                                 /* gate */\n   rest_of_handle_stack_ptr_mod,         /* execute */\n   NULL,                                 /* sub */"}, {"sha": "4de3dea4ea4b4dc9ba0fea3fd469642f9aad0066", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -7191,7 +7191,7 @@ struct gimple_opt_pass pass_warn_function_return =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*warn_function_return\",\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   execute_warn_function_return,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -7225,7 +7225,7 @@ struct gimple_opt_pass pass_warn_function_noreturn =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*warn_function_noreturn\",\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   execute_warn_function_noreturn,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "d1f84a2ebaafdea7cc060317e6d87d4e7be3c223", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -106,7 +106,7 @@ struct gimple_opt_pass pass_referenced_vars =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*referenced_vars\",\t\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   find_referenced_vars,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "7affd1627c590f7be18a7fc5723363379feb301b", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -201,7 +201,7 @@ struct gimple_opt_pass pass_cleanup_cfg_post_optimizing =\n {\n  {\n   GIMPLE_PASS,\n-  \"optimized\",\t\t\t/* name */\n+  \"optimized\",\t\t\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   execute_cleanup_cfg_post_optimizing,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -287,9 +287,9 @@ struct gimple_opt_pass pass_fixup_cfg =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*free_cfg_annotations\",\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n-  execute_fixup_cfg,\t\t/* execute */\n+  execute_fixup_cfg,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n@@ -317,7 +317,7 @@ struct gimple_opt_pass pass_init_datastructures =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*init_datastructures\",\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   execute_init_datastructures,\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "c52b787f4072e82976e667ccd551abcf72e3a868", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -455,7 +455,7 @@ struct gimple_opt_pass pass_record_bounds =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*record_bounds\",\t\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   tree_ssa_loop_bounds,\t\t       \t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "e6a9a07a5d85b530822453d65a62fc606f70f216", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -1856,7 +1856,7 @@ struct gimple_opt_pass pass_early_warn_uninitialized =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*early_warn_uninitialized\",\t\t/* name */\n   gate_warn_uninitialized,\t\t/* gate */\n   execute_early_warn_uninitialized,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n@@ -1875,7 +1875,7 @@ struct gimple_opt_pass pass_late_warn_uninitialized =\n {\n  {\n   GIMPLE_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*late_warn_uninitialized\",\t\t/* name */\n   gate_warn_uninitialized,\t\t/* gate */\n   execute_late_warn_uninitialized,\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}, {"sha": "3bfb527590e4390f64e7e1b17894f915f0d80b81", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a42b0f5b67d787dc86816895406b6fba6aac6f/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=e0a42b0f5b67d787dc86816895406b6fba6aac6f", "patch": "@@ -4988,7 +4988,7 @@ struct simple_ipa_opt_pass pass_ipa_free_lang_data =\n {\n  {\n   SIMPLE_IPA_PASS,\n-  NULL,\t\t\t\t\t/* name */\n+  \"*free_lang_data\",\t\t\t/* name */\n   NULL,\t\t\t\t\t/* gate */\n   free_lang_data,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */"}]}