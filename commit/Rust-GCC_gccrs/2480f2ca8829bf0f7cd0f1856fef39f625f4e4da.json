{"sha": "2480f2ca8829bf0f7cd0f1856fef39f625f4e4da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ4MGYyY2E4ODI5YmYwZjdjZDBmMTg1NmZlZjM5ZjYyNWY0ZTRkYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-02-08T18:08:12Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-02-08T18:08:12Z"}, "message": "gnu-user.h (TARGET_CAN_SPLIT_STACK): Define only when HAVE_GAS_CFI_PERSONALITY_DIRECTIVE is set.\n\n\t* config/i386/gnu-user.h (TARGET_CAN_SPLIT_STACK): Define only\n\twhen HAVE_GAS_CFI_PERSONALITY_DIRECTIVE is set.\n\t* config/i386/gnu-user64.h (TARGET_CAN_SPLIT_STACK): Ditto.\n\nFrom-SVN: r195895", "tree": {"sha": "88ed51f8c917fb9e6bade85d7eada5fc2e2545a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88ed51f8c917fb9e6bade85d7eada5fc2e2545a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2480f2ca8829bf0f7cd0f1856fef39f625f4e4da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2480f2ca8829bf0f7cd0f1856fef39f625f4e4da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2480f2ca8829bf0f7cd0f1856fef39f625f4e4da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2480f2ca8829bf0f7cd0f1856fef39f625f4e4da/comments", "author": null, "committer": null, "parents": [{"sha": "76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ef61fbd9ed3f30a5553ddac1a1568fc52e6ab9"}], "stats": {"total": 55, "additions": 35, "deletions": 20}, "files": [{"sha": "c0e9efb81dacaa692dd9f60929ed853f75b21002", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 18, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2480f2ca8829bf0f7cd0f1856fef39f625f4e4da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2480f2ca8829bf0f7cd0f1856fef39f625f4e4da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2480f2ca8829bf0f7cd0f1856fef39f625f4e4da", "patch": "@@ -1,22 +1,29 @@\n-2013-02-08  Edgar E. Iglesias <edgar.iglesias@gmail.com>\n-\n-\t* config.gcc (microblaze*-linux*): Add TARGET_BIG_ENDIAN_DEFAULT\n-\t(microblaze*-*-elf): Likewise\n-\t* config/microblaze/linux.h: Add -mbig-endian / -mlittle-endian to \n-\tLINK_SPEC\n-\t* config/microblaze/microblaze-c.c: Add builtin defines for _LITTLE_ENDIAN \n-\tand _BIG_ENDIAN\n-\t* config/microblaze/microblaze.h: Add TARGET_ENDIAN_DEFAULT and add to \n-\tTARGET_DEFAULT flags.\n+2013-02-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/gnu-user.h (TARGET_CAN_SPLIT_STACK): Define only\n+\twhen HAVE_GAS_CFI_PERSONALITY_DIRECTIVE is set.\n+\t* config/i386/gnu-user64.h (TARGET_CAN_SPLIT_STACK): Ditto.\n+\n+2013-02-08  Edgar E. Iglesias  <edgar.iglesias@gmail.com>\n+\n+\t* config.gcc (microblaze*-linux*): Add TARGET_BIG_ENDIAN_DEFAULT.\n+\t(microblaze*-*-elf): Likewise.\n+\t* config/microblaze/linux.h: Add -mbig-endian / -mlittle-endian to\n+\tLINK_SPEC.\n+\t* config/microblaze/microblaze-c.c: Add builtin defines for\n+\t_LITTLE_ENDIAN and _BIG_ENDIAN.\n+\t* config/microblaze/microblaze.h: Add TARGET_ENDIAN_DEFAULT and\n+\tadd to TARGET_DEFAULT flags.\n \tExpand ASM_SPEC and LINK_SPEC.\n-\tUpdate BYTES_BIG_ENDIAN and WORDS_BIG_ENDIAN\n-\t* config/microblaze/microblaze.md: Update extendsidi2 and movdi_internal \n-\tinstructions to use low-order / high-order reg print_operands\n-\t* config/microblaze/microblaze.opt: Add mbig-endian and mlittle-endian \n-\toptions and inversemask / mask of LITTLE_ENDIAN\n-\t* config/microblaze/t-microblaze: Expand multilib options to include mlittle-\n-\tendian (le) and update exceptions patterns\n-\t\n+\tUpdate BYTES_BIG_ENDIAN and WORDS_BIG_ENDIAN.\n+\t* config/microblaze/microblaze.md: Update extendsidi2 and\n+\tmovdi_internal instructions to use low-order / high-order reg\n+\tprint_operands.\n+\t* config/microblaze/microblaze.opt: Add mbig-endian and mlittle-endian\n+\toptions and inversemask / mask of LITTLE_ENDIAN.\n+\t* config/microblaze/t-microblaze: Expand multilib options to\n+\tinclude mlittle-endian (le) and update exceptions patterns.\n+\n 2013-02-08  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/56195"}, {"sha": "c93d9757d5077ef7f30f670bcaa0de058f7974e6", "filename": "gcc/config/i386/gnu-user.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2480f2ca8829bf0f7cd0f1856fef39f625f4e4da/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2480f2ca8829bf0f7cd0f1856fef39f625f4e4da/gcc%2Fconfig%2Fi386%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user.h?ref=2480f2ca8829bf0f7cd0f1856fef39f625f4e4da", "patch": "@@ -154,7 +154,11 @@ along with GCC; see the file COPYING3.  If not see\n /* i386 glibc provides __stack_chk_guard in %gs:0x14.  */\n #define TARGET_THREAD_SSP_OFFSET\t0x14\n \n-/* We steal the last transactional memory word.  */\n+/* We only build the -fsplit-stack support in libgcc if the\n+   assembler has full support for the CFI directives.  */\n+#if HAVE_GAS_CFI_PERSONALITY_DIRECTIVE\n #define TARGET_CAN_SPLIT_STACK\n+#endif\n+/* We steal the last transactional memory word.  */\n #define TARGET_THREAD_SPLIT_STACK_OFFSET 0x30\n #endif"}, {"sha": "952bb5b475cc0835a067ac4926fd6de390e9e540", "filename": "gcc/config/i386/gnu-user64.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2480f2ca8829bf0f7cd0f1856fef39f625f4e4da/gcc%2Fconfig%2Fi386%2Fgnu-user64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2480f2ca8829bf0f7cd0f1856fef39f625f4e4da/gcc%2Fconfig%2Fi386%2Fgnu-user64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user64.h?ref=2480f2ca8829bf0f7cd0f1856fef39f625f4e4da", "patch": "@@ -85,8 +85,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_THREAD_SSP_OFFSET \\\n   (TARGET_64BIT ? (TARGET_X32 ? 0x18 : 0x28) : 0x14)\n \n-/* We steal the last transactional memory word.  */\n+/* We only build the -fsplit-stack support in libgcc if the\n+   assembler has full support for the CFI directives.  */\n+#if HAVE_GAS_CFI_PERSONALITY_DIRECTIVE\n #define TARGET_CAN_SPLIT_STACK\n+#endif\n+/* We steal the last transactional memory word.  */\n #define TARGET_THREAD_SPLIT_STACK_OFFSET \\\n   (TARGET_64BIT ? (TARGET_X32 ? 0x40 : 0x70) : 0x30)\n #endif"}]}