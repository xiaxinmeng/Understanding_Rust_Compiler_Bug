{"sha": "e7f40208e1a14281ef5b2ec50f947335e761648f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdmNDAyMDhlMWExNDI4MWVmNWIyZWM1MGY5NDczMzVlNzYxNjQ4Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-06-04T10:06:11Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-06-04T10:06:11Z"}, "message": "re PR target/66369 (gcc 4.8.3/5.1.0 miss optimisation with vpmovmskb)\n\n\tPR target/66369\n\t* config/i386/sse.md (<sse2_avx2>_pmovmsk): Merge from avx2_pmovmskb\n\tand sse2_pmovmskb using VI1_AVX2 mode iterator.\n\t(*<sse>_movmsk<ssemodesuffix><avxsizesuffix>_zext): New insn pattern.\n\t(*<sse2_avx2>_pmovmskb_zext): Ditto.\n\nFrom-SVN: r224120", "tree": {"sha": "6c19af416a8734800d4c1726431a043fb6e3eca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c19af416a8734800d4c1726431a043fb6e3eca9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7f40208e1a14281ef5b2ec50f947335e761648f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f40208e1a14281ef5b2ec50f947335e761648f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f40208e1a14281ef5b2ec50f947335e761648f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f40208e1a14281ef5b2ec50f947335e761648f/comments", "author": null, "committer": null, "parents": [{"sha": "676d13847e8d4265e2bc8d207a0ab1b2130a2f99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/676d13847e8d4265e2bc8d207a0ab1b2130a2f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/676d13847e8d4265e2bc8d207a0ab1b2130a2f99"}], "stats": {"total": 52, "additions": 38, "deletions": 14}, "files": [{"sha": "78d46132672ddb8c4ad37801dbf62d4ed6c93733", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f40208e1a14281ef5b2ec50f947335e761648f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f40208e1a14281ef5b2ec50f947335e761648f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7f40208e1a14281ef5b2ec50f947335e761648f", "patch": "@@ -1125,7 +1125,7 @@\n \tACX_PROG_CXX_WARNING_ALMOST_PEDANTIC, and\n \tACX_PROG_CXX_WARNINGS_ARE_ERRORS.\n \n-2015-05-22 Aditya Kumar <hiraditya@msn.com>\n+2015-05-22  Aditya Kumar  <hiraditya@msn.com>\n \n \t* auto-profile.c (afdo_calculate_branch_prob): Break once has_sample\n \tis true.\n@@ -3398,7 +3398,7 @@\n \t(aarch_macro_fusion_pair_p): Update uses of current_tune.\n \t* arm.h (LOGICAL_OP_NON_SHORT_CIRCUIT): Likewise.\n \n-2015-05-12 Sandra Loosemore <sandra@codesourcery.com>\n+2015-05-12  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* config/nios2/nios2.md (trap, ctrapsi4): Use \"trap\" instead of\n \t\"break\"."}, {"sha": "e44ba9a6d366444bc598642530f33d69f9bbfe17", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 36, "deletions": 12, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f40208e1a14281ef5b2ec50f947335e761648f/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f40208e1a14281ef5b2ec50f947335e761648f/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=e7f40208e1a14281ef5b2ec50f947335e761648f", "patch": "@@ -13112,24 +13112,48 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"avx2_pmovmskb\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:V32QI 1 \"register_operand\" \"x\")]\n-\t\t   UNSPEC_MOVMSK))]\n-  \"TARGET_AVX2\"\n-  \"vpmovmskb\\t{%1, %0|%0, %1}\"\n+(define_insn \"*<sse>_movmsk<ssemodesuffix><avxsizesuffix>_zext\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:DI\n+\t  (unspec:SI\n+\t    [(match_operand:VF_128_256 1 \"register_operand\" \"x\")]\n+\t    UNSPEC_MOVMSK)))]\n+  \"TARGET_64BIT && TARGET_SSE\"\n+  \"%vmovmsk<ssemodesuffix>\\t{%1, %k0|%k0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"DI\")])\n+   (set_attr \"prefix\" \"maybe_vex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"sse2_pmovmskb\"\n+(define_insn \"<sse2_avx2>_pmovmskb\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:V16QI 1 \"register_operand\" \"x\")]\n-\t\t   UNSPEC_MOVMSK))]\n+\t(unspec:SI\n+\t  [(match_operand:VI1_AVX2 1 \"register_operand\" \"x\")]\n+\t  UNSPEC_MOVMSK))]\n   \"TARGET_SSE2\"\n   \"%vpmovmskb\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"prefix_data16\" \"1\")\n+   (set (attr \"prefix_data16\")\n+     (if_then_else\n+       (match_test \"TARGET_AVX\")\n+     (const_string \"*\")\n+     (const_string \"1\")))\n+   (set_attr \"prefix\" \"maybe_vex\")\n+   (set_attr \"mode\" \"SI\")])\n+\n+(define_insn \"*<sse2_avx2>_pmovmskb_zext\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:DI\n+\t  (unspec:SI\n+\t    [(match_operand:VI1_AVX2 1 \"register_operand\" \"x\")]\n+\t    UNSPEC_MOVMSK)))]\n+  \"TARGET_64BIT && TARGET_SSE2\"\n+  \"%vpmovmskb\\t{%1, %k0|%k0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set (attr \"prefix_data16\")\n+     (if_then_else\n+       (match_test \"TARGET_AVX\")\n+     (const_string \"*\")\n+     (const_string \"1\")))\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"SI\")])\n "}]}