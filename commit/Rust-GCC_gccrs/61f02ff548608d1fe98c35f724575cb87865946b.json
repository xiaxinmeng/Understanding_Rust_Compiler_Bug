{"sha": "61f02ff548608d1fe98c35f724575cb87865946b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFmMDJmZjU0ODYwOGQxZmU5OGMzNWY3MjQ1NzVjYjg3ODY1OTQ2Yg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-08-15T09:55:31Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-08-15T09:55:31Z"}, "message": "s390.c (legitimize_address): Optimize loading of large displacements.\n\n\t* config/s390/s390.c (legitimize_address): Optimize loading\n\tof large displacements.\n\nFrom-SVN: r56345", "tree": {"sha": "1f3840a03d2c684772d5f02cea5d49744d4f9753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f3840a03d2c684772d5f02cea5d49744d4f9753"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61f02ff548608d1fe98c35f724575cb87865946b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f02ff548608d1fe98c35f724575cb87865946b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61f02ff548608d1fe98c35f724575cb87865946b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f02ff548608d1fe98c35f724575cb87865946b/comments", "author": null, "committer": null, "parents": [{"sha": "6848fc973f311a7459b20305a71d17049b0d799d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6848fc973f311a7459b20305a71d17049b0d799d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6848fc973f311a7459b20305a71d17049b0d799d"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "71ae78dae207f76979ba4870cee77204940d1e54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f02ff548608d1fe98c35f724575cb87865946b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f02ff548608d1fe98c35f724575cb87865946b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61f02ff548608d1fe98c35f724575cb87865946b", "patch": "@@ -1,3 +1,8 @@\n+2002-08-15  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (legitimize_address): Optimize loading\n+\tof large displacements.\n+\n 2002-08-14  Douglas B Rupp  <rupp@gnat.com>\n \n \t* config/alpha/alpha-protos.h: Update."}, {"sha": "85952c5bacb24bf0191d2d6cd12a5adf84c7c55c", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f02ff548608d1fe98c35f724575cb87865946b/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f02ff548608d1fe98c35f724575cb87865946b/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=61f02ff548608d1fe98c35f724575cb87865946b", "patch": "@@ -2084,6 +2084,31 @@ legitimize_address (x, oldx, mode)\n \n   x = eliminate_constant_term (x, &constant_term);\n \n+  /* Optimize loading of large displacements by splitting them\n+     into the multiple of 4K and the rest; this allows the\n+     former to be CSE'd if possible. \n+\n+     Don't do this if the displacement is added to a register\n+     pointing into the stack frame, as the offsets will\n+     change later anyway.  */\n+\n+  if (GET_CODE (constant_term) == CONST_INT\n+      && (INTVAL (constant_term) < 0\n+          || INTVAL (constant_term) >= 4096)\n+      && !(REG_P (x) && REGNO_PTR_FRAME_P (REGNO (x))))\n+    {\n+      HOST_WIDE_INT lower = INTVAL (constant_term) & 0xfff;\n+      HOST_WIDE_INT upper = INTVAL (constant_term) ^ lower;\n+\n+      rtx temp = gen_reg_rtx (Pmode);\n+      rtx val  = force_operand (GEN_INT (upper), temp);\n+      if (val != temp)\n+\temit_move_insn (temp, val);\n+\n+      x = gen_rtx_PLUS (Pmode, x, temp);\n+      constant_term = GEN_INT (lower);\n+    }\n+\n   if (GET_CODE (x) == PLUS)\n     {\n       if (GET_CODE (XEXP (x, 0)) == REG)"}]}