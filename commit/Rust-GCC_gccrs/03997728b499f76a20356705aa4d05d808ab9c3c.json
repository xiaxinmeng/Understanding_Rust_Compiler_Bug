{"sha": "03997728b499f76a20356705aa4d05d808ab9c3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM5OTc3MjhiNDk5Zjc2YTIwMzU2NzA1YWE0ZDA1ZDgwOGFiOWMzYw==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2001-08-04T11:26:17Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2001-08-04T11:26:17Z"}, "message": "m68hc11.md (\"cmphi_1\", \"cmpqi_1\"): Allow memory and soft register for operand 0.\n\n\t* config/m68hc11/m68hc11.md (\"cmphi_1\", \"cmpqi_1\"): Allow memory\n\tand soft register for operand 0.\n\t(\"cmphi_z_used\", \"cmpqi_z_used\"): Allow memory for operand 0.\n\nFrom-SVN: r44631", "tree": {"sha": "d057cc5cf6f89327b86d2088d790e78c65b66af3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d057cc5cf6f89327b86d2088d790e78c65b66af3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03997728b499f76a20356705aa4d05d808ab9c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03997728b499f76a20356705aa4d05d808ab9c3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03997728b499f76a20356705aa4d05d808ab9c3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03997728b499f76a20356705aa4d05d808ab9c3c/comments", "author": null, "committer": null, "parents": [{"sha": "d8de89e827441c22b129365aeb4f0a2626448aa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8de89e827441c22b129365aeb4f0a2626448aa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8de89e827441c22b129365aeb4f0a2626448aa5"}], "stats": {"total": 63, "additions": 41, "deletions": 22}, "files": [{"sha": "abb7295b1c9d27d67f6e829f1b34b821a94a3492", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03997728b499f76a20356705aa4d05d808ab9c3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03997728b499f76a20356705aa4d05d808ab9c3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03997728b499f76a20356705aa4d05d808ab9c3c", "patch": "@@ -1,3 +1,9 @@\n+2001-08-04  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* config/m68hc11/m68hc11.md (\"cmphi_1\", \"cmpqi_1\"): Allow memory \n+\tand soft register for operand 0.\n+\t(\"cmphi_z_used\", \"cmpqi_z_used\"): Allow memory for operand 0.\n+\n 2001-08-04  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* config/m68hc11/m68hc11.md (\"bitcmpqi\"): Allow memory and soft"}, {"sha": "171d6e8468f3d42a48cb589bf65e7442ff1c04f0", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 35, "deletions": 22, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03997728b499f76a20356705aa4d05d808ab9c3c/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03997728b499f76a20356705aa4d05d808ab9c3c/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=03997728b499f76a20356705aa4d05d808ab9c3c", "patch": "@@ -303,32 +303,37 @@\n (define_insn \"cmphi_1\"\n   [(set (cc0)\n \t(compare (match_operand:HI 0 \"tst_operand\" \n-\t\t\t\t\"xy,d,?xy,d,dxy,dxy,dxy\")\n+\t\t\t\t\"x,dy,xyd,?xy,d,m,!u,dxy,dxy\")\n \t\t (match_operand:HI 1 \"cmp_operand\"\n-\t\t\t\t\"i,i,m,m,?*d*A,?u,!*w\")))]\n+\t\t\t\t\"i,i,!u,m,m,dxy,dxy,?*d*A,!*w\")))]\n   \"\"\n   \"*\n {\n-  if (H_REG_P (operands[1]))\n+  if (H_REG_P (operands[1]) && !H_REG_P (operands[0]))\n+    {\n+      cc_status.flags |= CC_REVERSED;\n+      return \\\"cp%1\\\\t%0\\\";\n+    }\n+  else if (H_REG_P (operands[1]))\n     return \\\"#\\\";\n   else\n     return \\\"cp%0\\\\t%1\\\";\n }\")\n \n (define_insn \"cmphi_z_used\"\n   [(set (cc0)\n-\t(compare (match_operand:HI 0 \"hard_reg_operand\" \"dxy\")\n-\t\t (match_operand:HI 1 \"cmp_operand\" \"m\")))\n-   (use (match_operand:HI 2 \"hard_reg_operand\" \"dxy\"))\n+\t(compare (match_operand:HI 0 \"tst_operand\" \"dxy,m\")\n+\t\t (match_operand:HI 1 \"cmp_operand\" \"m,dxy\")))\n+   (use (match_operand:HI 2 \"hard_reg_operand\" \"dxy,dxy\"))\n    (use (reg:HI 11))]\n   \"\"\n   \"#\")\n   \n (define_split /* \"cmphi_z_used\" */\n   [(set (cc0)\n-\t(compare (match_operand:HI 0 \"hard_reg_operand\" \"dxy\")\n-\t\t (match_operand:HI 1 \"cmp_operand\" \"m\")))\n-   (use (match_operand:HI 2 \"hard_reg_operand\" \"dxy\"))\n+\t(compare (match_operand:HI 0 \"tst_operand\" \"dxy,m\")\n+\t\t (match_operand:HI 1 \"cmp_operand\" \"m,dxy\")))\n+   (use (match_operand:HI 2 \"hard_reg_operand\" \"dxy,dxy\"))\n    (use (reg:HI 11))]\n   \"z_replacement_completed == 2\"\n   [(set (mem:HI (pre_dec:HI (reg:HI SP_REGNUM))) (match_dup 2))\n@@ -479,29 +484,37 @@\n \n (define_insn \"cmpqi_1\"\n   [(set (cc0)\n-\t(compare (match_operand:QI 0 \"tst_operand\" \"d,d,*x*y,*x*y\")\n-\t\t (match_operand:QI 1 \"cmp_operand\" \"im,!u,!u,?dim*x*y\")))]\n+\t(compare (match_operand:QI 0 \"tst_operand\" \"d,m,d,!u,*B,d\")\n+\t\t (match_operand:QI 1 \"cmp_operand\" \"im,d,!u,d,?dim*B,*u\")))]\n   \"\"\n-  \"@\n-   cmpb\\\\t%1\n-   cmpb\\\\t%b1\n-   #\n-   #\")\n+  \"*\n+{\n+   if (A_REG_P (operands[0]) || A_REG_P (operands[1]))\n+     {\n+        return \\\"#\\\";\n+     }\n+   else if (D_REG_P (operands[0]))\n+     {\n+        return \\\"cmpb\\\\t%b1\\\";\n+     }\n+   cc_status.flags |= CC_REVERSED;\n+   return \\\"cmpb\\\\t%b0\\\";\n+}\")\n \n (define_insn \"cmpqi_z_used\"\n   [(set (cc0)\n-\t(compare (match_operand:QI 0 \"hard_reg_operand\" \"dxy\")\n-\t\t (match_operand:QI 1 \"cmp_operand\" \"m\")))\n-   (use (match_operand:HI 2 \"hard_reg_operand\" \"dxy\"))\n+\t(compare (match_operand:QI 0 \"tst_operand\" \"dxy,m\")\n+\t\t (match_operand:QI 1 \"cmp_operand\" \"m,dxy\")))\n+   (use (match_operand:HI 2 \"hard_reg_operand\" \"dxy,dxy\"))\n    (use (reg:HI 11))]\n   \"\"\n   \"#\")\n   \n (define_split /* cmpqi_z_used */\n   [(set (cc0)\n-\t(compare (match_operand:QI 0 \"hard_reg_operand\" \"dxy\")\n-\t\t (match_operand:QI 1 \"cmp_operand\" \"m\")))\n-   (use (match_operand:HI 2 \"hard_reg_operand\" \"dxy\"))\n+\t(compare (match_operand:QI 0 \"tst_operand\" \"dxy,m\")\n+\t\t (match_operand:QI 1 \"cmp_operand\" \"m,dxy\")))\n+   (use (match_operand:HI 2 \"hard_reg_operand\" \"dxy,dxy\"))\n    (use (reg:HI 11))]\n   \"z_replacement_completed == 2\"\n   [(set (mem:HI (pre_dec:HI (reg:HI SP_REGNUM))) (match_dup 2))"}]}