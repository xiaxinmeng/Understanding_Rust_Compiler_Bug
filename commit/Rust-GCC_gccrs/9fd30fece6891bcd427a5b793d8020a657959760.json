{"sha": "9fd30fece6891bcd427a5b793d8020a657959760", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZkMzBmZWNlNjg5MWJjZDQyN2E1Yjc5M2Q4MDIwYTY1Nzk1OTc2MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-15T19:22:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-15T19:22:14Z"}, "message": "re PR c++/54276 (Lambda in a Template Function Undefined Reference to local static)\n\n\tPR c++/54276\n\t* semantics.c (finish_id_expression): Also return the identifier\n\tfor an outer local static.\n\nFrom-SVN: r196091", "tree": {"sha": "61d03cb82a12362afce84796980c24dea58b2707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61d03cb82a12362afce84796980c24dea58b2707"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fd30fece6891bcd427a5b793d8020a657959760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fd30fece6891bcd427a5b793d8020a657959760", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fd30fece6891bcd427a5b793d8020a657959760", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fd30fece6891bcd427a5b793d8020a657959760/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "479189517610591e746369fc4d80302f5cebdbd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479189517610591e746369fc4d80302f5cebdbd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/479189517610591e746369fc4d80302f5cebdbd7"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "921c6a4672d8ae2926823a48a26257f4f93a28d0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fd30fece6891bcd427a5b793d8020a657959760/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fd30fece6891bcd427a5b793d8020a657959760/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9fd30fece6891bcd427a5b793d8020a657959760", "patch": "@@ -1,5 +1,9 @@\n 2013-02-15  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54276\n+\t* semantics.c (finish_id_expression): Also return the identifier\n+\tfor an outer local static.\n+\n \tPR c++/56343\n \t* class.c (check_bases_and_members): Deduce noexcept after\n \tchecking bases."}, {"sha": "458ed26d330bf0a3f68f77b43446f0a5aea4f0e9", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fd30fece6891bcd427a5b793d8020a657959760/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fd30fece6891bcd427a5b793d8020a657959760/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9fd30fece6891bcd427a5b793d8020a657959760", "patch": "@@ -2876,18 +2876,26 @@ baselink_for_fns (tree fns)\n   return build_baselink (cl, cl, fns, /*optype=*/NULL_TREE);\n }\n \n-/* Returns true iff DECL is an automatic variable from a function outside\n+/* Returns true iff DECL is a variable from a function outside\n    the current one.  */\n \n static bool\n-outer_automatic_var_p (tree decl)\n+outer_var_p (tree decl)\n {\n   return ((TREE_CODE (decl) == VAR_DECL || TREE_CODE (decl) == PARM_DECL)\n \t  && DECL_FUNCTION_SCOPE_P (decl)\n-\t  && !TREE_STATIC (decl)\n \t  && DECL_CONTEXT (decl) != current_function_decl);\n }\n \n+/* As above, but also checks that DECL is automatic.  */\n+\n+static bool\n+outer_automatic_var_p (tree decl)\n+{\n+  return (outer_var_p (decl)\n+\t  && !TREE_STATIC (decl));\n+}\n+\n /* ID_EXPRESSION is a representation of parsed, but unprocessed,\n    id-expression.  (See cp_parser_id_expression for details.)  SCOPE,\n    if non-NULL, is the type or namespace used to explicitly qualify\n@@ -2994,9 +3002,18 @@ finish_id_expression (tree id_expression,\n \n       /* Disallow uses of local variables from containing functions, except\n \t within lambda-expressions.  */\n-      if (outer_automatic_var_p (decl)\n+      if (!outer_var_p (decl)\n \t  /* It's not a use (3.2) if we're in an unevaluated context.  */\n-\t  && !cp_unevaluated_operand)\n+\t  || cp_unevaluated_operand)\n+\t/* OK.  */;\n+      else if (TREE_STATIC (decl))\n+\t{\n+\t  if (processing_template_decl)\n+\t    /* For a use of an outer static var, return the identifier so\n+\t       that we'll look it up again in the instantiation.  */\n+\t    return id_expression;\n+\t}\n+      else\n \t{\n \t  tree context = DECL_CONTEXT (decl);\n \t  tree containing_function = current_function_decl;"}, {"sha": "c1d010ba128388ec539c03e64179d6a3ad5b5f9c", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-template9.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fd30fece6891bcd427a5b793d8020a657959760/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fd30fece6891bcd427a5b793d8020a657959760/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template9.C?ref=9fd30fece6891bcd427a5b793d8020a657959760", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/54276\n+// { dg-do link { target c++11 } }\n+\n+template <typename T>\n+void foo(T)\n+{\n+  static int x = 1;\n+  auto f = [] { return x + 1; };\n+  f();\n+}\n+\n+int main()\n+{\n+  foo(4);\n+}"}]}