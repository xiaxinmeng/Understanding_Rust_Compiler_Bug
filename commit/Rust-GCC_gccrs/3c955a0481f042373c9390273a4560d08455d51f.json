{"sha": "3c955a0481f042373c9390273a4560d08455d51f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M5NTVhMDQ4MWYwNDIzNzNjOTM5MDI3M2E0NTYwZDA4NDU1ZDUxZg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-10-14T19:50:08Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-10-14T19:50:08Z"}, "message": "re PR c++/19565 (g++ does not warn about overflow in conversion but gcc does)\n\n\tPR c++/19565\n\t* g++.dg/warn/Wconversion1.C: New test.\n\t* g++.dg/ext/packed4.C: Compile with -w.\n\t* g++.dg/opt/20050511-1.C: Likewise.\n\t* g++.old-deja/g++.other/warn4.C: Compiler with -Wconversion.\n\nFrom-SVN: r105421", "tree": {"sha": "a92acb52906f3524fb18cda3d190a9e9183cb38e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a92acb52906f3524fb18cda3d190a9e9183cb38e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c955a0481f042373c9390273a4560d08455d51f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c955a0481f042373c9390273a4560d08455d51f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c955a0481f042373c9390273a4560d08455d51f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c955a0481f042373c9390273a4560d08455d51f/comments", "author": null, "committer": null, "parents": [{"sha": "21dac32c3c6e6a26fef2639662a1bff50166e58d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21dac32c3c6e6a26fef2639662a1bff50166e58d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21dac32c3c6e6a26fef2639662a1bff50166e58d"}], "stats": {"total": 79, "additions": 56, "deletions": 23}, "files": [{"sha": "7b2ff855d6460dbd85903660364387e4d3ca3c26", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3c955a0481f042373c9390273a4560d08455d51f", "patch": "@@ -1,3 +1,15 @@\n+2005-10-14  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/19565\n+\t* call.c (convert_like_real): Rely on convert_and_check to issue\n+\twarnings about overflow and conversion to unsigned.\n+\t* decl.c (finish_enum): Use the location of the enumerators, not\n+\tthe closing brace of the enumeration, when reporting warnings\n+\tabout conversions.\n+\t(build_enumerator): Use error_mark_node for erroneous values.\n+\t* typeck2.c (digest_init): Remove reference to \"signature pointer\"\n+\tfrom comment.\n+\n 2005-10-14  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/17796"}, {"sha": "fe8d62e6154b57436e21be002273cbb6aa8e8782", "filename": "gcc/cp/call.c", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3c955a0481f042373c9390273a4560d08455d51f", "patch": "@@ -4216,21 +4216,6 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t  else\n \t    warning (0, \"converting to %qT from %qT\", t, TREE_TYPE (expr));\n \t}\n-      /* And warn about assigning a negative value to an unsigned\n-\t variable.  */\n-      else if (TYPE_UNSIGNED (t) && TREE_CODE (t) != BOOLEAN_TYPE)\n-\t{\n-\t  if (TREE_CODE (expr) == INTEGER_CST && TREE_NEGATED_INT (expr))\n-\t    {\n-\t      if (fn)\n-\t\twarning (0, \"passing negative value %qE for argument %P to %qD\",\n-\t\t\t expr, argnum, fn);\n-\t      else\n-\t\twarning (0, \"converting negative value %qE to %qT\", expr, t);\n-\t    }\n-\n-\t  overflow_warning (expr);\n-\t}\n     }\n \n   switch (convs->kind)\n@@ -4430,8 +4415,13 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n     default:\n       break;\n     }\n-  return ocp_convert (totype, expr, CONV_IMPLICIT,\n-\t\t      LOOKUP_NORMAL|LOOKUP_NO_CONVERSION);\n+\n+  if (issue_conversion_warnings)\n+    expr = convert_and_check (totype, expr);\n+  else\n+    expr = convert (totype, expr);\n+\n+  return expr;\n }\n \n /* Build a call to __builtin_trap.  */"}, {"sha": "56c2d4da765bb676144aabbe8c17119e86ab3eb5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3c955a0481f042373c9390273a4560d08455d51f", "patch": "@@ -9750,6 +9750,8 @@ finish_enum (tree enumtype)\n \n \t  /* Update the minimum and maximum values, if appropriate.  */\n \t  value = DECL_INITIAL (decl);\n+\t  if (value == error_mark_node)\n+\t    value = integer_zero_node;\n \t  /* Figure out what the minimum and maximum values of the\n \t     enumerators are.  */\n \t  if (!minnode)\n@@ -9852,9 +9854,14 @@ finish_enum (tree enumtype)\n      type of the enumeration.  */\n   for (values = TYPE_VALUES (enumtype); values; values = TREE_CHAIN (values))\n     {\n+      location_t saved_location;\n+\n       decl = TREE_VALUE (values);\n+      saved_location = input_location;\n+      input_location = DECL_SOURCE_LOCATION (decl);\n       value = perform_implicit_conversion (underlying_type,\n \t\t\t\t\t   DECL_INITIAL (decl));\n+      input_location = saved_location;\n \n       /* Do not clobber shared ints.  */\n       value = copy_node (value);\n@@ -9944,7 +9951,10 @@ build_enumerator (tree name, tree value, tree enumtype)\n \t      overflowed |= !int_fits_type_p (value, TREE_TYPE (prev_value));\n \n \t      if (overflowed)\n-\t\terror (\"overflow in enumeration values at %qD\", name);\n+\t\t{\n+\t\t  error (\"overflow in enumeration values at %qD\", name);\n+\t\t  value = error_mark_node;\n+\t\t}\n \t    }\n \t  else\n \t    value = integer_zero_node;"}, {"sha": "42520e2f76779e4c7f895ad0881841b5361205a6", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=3c955a0481f042373c9390273a4560d08455d51f", "patch": "@@ -695,10 +695,8 @@ digest_init (tree type, tree init)\n \t}\n     }\n \n-  /* Handle scalar types, including conversions,\n-     and signature pointers and references.  */\n-  if (SCALAR_TYPE_P (type)\n-      || code == REFERENCE_TYPE)\n+  /* Handle scalar types (including conversions) and references.  */\n+  if (SCALAR_TYPE_P (type) || code == REFERENCE_TYPE)\n     return convert_for_initialization (0, type, init, LOOKUP_NORMAL,\n \t\t\t\t       \"initialization\", NULL_TREE, 0);\n "}, {"sha": "877bca8b75403985369bc0642db3dea4701030fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c955a0481f042373c9390273a4560d08455d51f", "patch": "@@ -1,3 +1,11 @@\n+2005-10-14  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/19565\n+\t* g++.dg/warn/Wconversion1.C: New test.\n+\t* g++.dg/ext/packed4.C: Compile with -w.\n+\t* g++.dg/opt/20050511-1.C: Likewise.\n+\t* g++.old-deja/g++.other/warn4.C: Compiler with -Wconversion.\n+\n 2005-10-14  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gfortran.dg/boz_5.f90: New test."}, {"sha": "db1f5c992eea038124ea1779395c38d040dad385", "filename": "gcc/testsuite/g++.dg/ext/packed4.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked4.C?ref=3c955a0481f042373c9390273a4560d08455d51f", "patch": "@@ -1,4 +1,5 @@\n // { dg-do run }\n+// { dg-options \"-w\" }\n \n // Copyright (C) 2003 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 15 Jul 2003 <nathan@codesourcery.com>"}, {"sha": "2fbd3e1be5e998d84726b20ac1ef2d91d0537818", "filename": "gcc/testsuite/g++.dg/opt/20050511-1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2F20050511-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2F20050511-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2F20050511-1.C?ref=3c955a0481f042373c9390273a4560d08455d51f", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run } */\n-/* { dg-options \"-O3\" { target powerpc*-*-* } } */\n+/* { dg-options \"-w\" } */\n+/* { dg-options \"-O3 -w\" { target powerpc*-*-* } } */\n #include <stdio.h>\n #include <stdlib.h>\n "}, {"sha": "b3fbc30611a89d1ff0c1fcb896d1717b57a57c1f", "filename": "gcc/testsuite/g++.dg/warn/Wconversion1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion1.C?ref=3c955a0481f042373c9390273a4560d08455d51f", "patch": "@@ -0,0 +1,12 @@\n+// { dg-options \"-Wconversion\" }\n+\n+char c1 = 1024; // { dg-warning \"overflow\" }\n+char c2 = char(1024);\n+char c3 = (char) 1024;\n+char c4 = static_cast<char>(1024);\n+ \n+unsigned char uc1 = -129; // { dg-warning \"unsigned\" }\n+\n+bool b1 = -3;\n+\n+int i1 = 0x80000000;"}, {"sha": "6cb4785f2b6b94f0acac0d84f9a324ef3bb6456c", "filename": "gcc/testsuite/g++.old-deja/g++.other/warn4.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c955a0481f042373c9390273a4560d08455d51f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn4.C?ref=3c955a0481f042373c9390273a4560d08455d51f", "patch": "@@ -1,4 +1,5 @@\n // { dg-do assemble  }\n+// { dg-options \"-Wconversion\" }\n \n // Copyright (C) 1999 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 21 Nov 1999 <nathan@acm.org>"}]}