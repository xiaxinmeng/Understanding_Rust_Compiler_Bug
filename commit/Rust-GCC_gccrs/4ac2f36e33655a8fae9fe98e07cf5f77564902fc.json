{"sha": "4ac2f36e33655a8fae9fe98e07cf5f77564902fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFjMmYzNmUzMzY1NWE4ZmFlOWZlOThlMDdjZjVmNzc1NjQ5MDJmYw==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2016-04-28T12:15:06Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2016-04-28T12:15:06Z"}, "message": "[ARC] Don't use drsub* instructions when selecting fpuda.\n\nThe double precision floating point assist instructions are not\nimplementing the reverse double subtract instruction (drsub) found in\nthe FPX extension.\n\ngcc/\n2016-04-28  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.md (cpu_facility): Add fpx variant.\n\t(subdf3): Prohibit use reverse sub when assist operations option\n\tis enabled.\n\t* config/arc/fpx.md (subdf3_insn, *dsubh_peep2_insn): Allow drsub\n\tinstructions only when FPX is enabled.\n        * testsuite/gcc.target/arc/trsub.c: New test.\n\nFrom-SVN: r235562", "tree": {"sha": "d1ede566440a947e60fc459d8577f88db7b53bea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1ede566440a947e60fc459d8577f88db7b53bea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ac2f36e33655a8fae9fe98e07cf5f77564902fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac2f36e33655a8fae9fe98e07cf5f77564902fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac2f36e33655a8fae9fe98e07cf5f77564902fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac2f36e33655a8fae9fe98e07cf5f77564902fc/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e54a38e86b29eb062545ed30ab0bda6ebd4c9c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54a38e86b29eb062545ed30ab0bda6ebd4c9c33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e54a38e86b29eb062545ed30ab0bda6ebd4c9c33"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "40258635363b12fee79ba0bbb139a3430014705f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2f36e33655a8fae9fe98e07cf5f77564902fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2f36e33655a8fae9fe98e07cf5f77564902fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ac2f36e33655a8fae9fe98e07cf5f77564902fc", "patch": "@@ -1,3 +1,12 @@\n+2016-04-28  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.md (cpu_facility): Add fpx variant.\n+\t(subdf3): Prohibit use reverse sub when assist operations option\n+\tis enabled.\n+\t* config/arc/fpx.md (subdf3_insn, *dsubh_peep2_insn): Allow drsub\n+\tinstructions only when FPX is enabled.\n+\t* testsuite/gcc.target/arc/trsub.c: New test.\n+\n 2016-04-28  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*fop_<mode>_1_mixed): Do not check for"}, {"sha": "a58b491355a9dc1ca834c8c17d9296a6d877306c", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2f36e33655a8fae9fe98e07cf5f77564902fc/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2f36e33655a8fae9fe98e07cf5f77564902fc/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=4ac2f36e33655a8fae9fe98e07cf5f77564902fc", "patch": "@@ -270,7 +270,7 @@\n \t\t     - get_attr_length (insn)\")))\n \n ; for ARCv2 we need to disable/enable different instruction alternatives\n-(define_attr \"cpu_facility\" \"std,av1,av2\"\n+(define_attr \"cpu_facility\" \"std,av1,av2,fpx\"\n   (const_string \"std\"))\n \n ; We should consider all the instructions enabled until otherwise\n@@ -282,6 +282,10 @@\n \t (and (eq_attr \"cpu_facility\" \"av2\")\n \t      (not (match_test \"TARGET_V2\")))\n \t (const_string \"no\")\n+\n+\t (and (eq_attr \"cpu_facility\" \"fpx\")\n+\t      (match_test \"TARGET_FP_DP_AX\"))\n+\t (const_string \"no\")\n \t ]\n \t(const_string \"yes\")))\n \n@@ -5780,6 +5784,8 @@\n   \"\n    if (TARGET_DPFP)\n     {\n+     if (TARGET_FP_DP_AX && (GET_CODE (operands[1]) == CONST_DOUBLE))\n+       operands[1] = force_reg (DFmode, operands[1]);\n      if ((GET_CODE (operands[1]) == CONST_DOUBLE)\n           || GET_CODE (operands[2]) == CONST_DOUBLE)\n       {"}, {"sha": "2e11157cabfbd0f87b80d2249fac12f6a46ddb7f", "filename": "gcc/config/arc/fpx.md", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2f36e33655a8fae9fe98e07cf5f77564902fc/gcc%2Fconfig%2Farc%2Ffpx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2f36e33655a8fae9fe98e07cf5f77564902fc/gcc%2Fconfig%2Farc%2Ffpx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Ffpx.md?ref=4ac2f36e33655a8fae9fe98e07cf5f77564902fc", "patch": "@@ -304,7 +304,8 @@\n      drsubh%F0%F2 0,%H1,%L1\n      drsubh%F0%F2 0,%3,%L1\"\n   [(set_attr \"type\" \"dpfp_addsub\")\n-  (set_attr \"length\" \"4,8,4,8\")])\n+   (set_attr \"length\" \"4,8,4,8\")\n+   (set_attr \"cpu_facility\" \"*,*,fpx,fpx\")])\n \n ;; ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;; ;; Peephole for following conversion\n@@ -613,5 +614,5 @@\n   drsubh%F0%F2 %H6, %H1, %L1\n   drsubh%F0%F2 %H6, %3, %L1\"\n  [(set_attr \"type\" \"dpfp_addsub\")\n-  (set_attr \"length\" \"4,8,4,8\")]\n-)\n+  (set_attr \"length\" \"4,8,4,8\")\n+  (set_attr \"cpu_facility\" \"*,*,fpx,fpx\")])"}, {"sha": "031935fdc8f5ac770ce398e74bbbc0bcd4d773b1", "filename": "gcc/testsuite/gcc.target/arc/trsub.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac2f36e33655a8fae9fe98e07cf5f77564902fc/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftrsub.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac2f36e33655a8fae9fe98e07cf5f77564902fc/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftrsub.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Ftrsub.c?ref=4ac2f36e33655a8fae9fe98e07cf5f77564902fc", "patch": "@@ -0,0 +1,10 @@\n+/* Tests if we generate rsub instructions when compiling using\n+   floating point assist instructions.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-mfpu=fpuda -mcpu=arcem\" } */\n+\n+double foo (double a)\n+{\n+  return ((double) 0.12 - a);\n+}\n+/* { dg-final { scan-assembler-not \"drsub.*\" } } */"}]}