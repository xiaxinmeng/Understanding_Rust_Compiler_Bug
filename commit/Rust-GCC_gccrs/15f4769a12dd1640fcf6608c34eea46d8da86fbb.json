{"sha": "15f4769a12dd1640fcf6608c34eea46d8da86fbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVmNDc2OWExMmRkMTY0MGZjZjY2MDhjMzRlZWE0NmQ4ZGE4NmZiYg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-04-08T19:31:00Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-04-08T19:31:00Z"}, "message": "typeck2.c (digest_init_r): Don't condition the object slicing warning on flag_checking.\n\n\t* typeck2.c (digest_init_r): Don't condition the object slicing warning\n\ton flag_checking.\n\nFrom-SVN: r270215", "tree": {"sha": "a6b68ef4a070fb64c3a65932094b5d6692e72aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6b68ef4a070fb64c3a65932094b5d6692e72aae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15f4769a12dd1640fcf6608c34eea46d8da86fbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15f4769a12dd1640fcf6608c34eea46d8da86fbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15f4769a12dd1640fcf6608c34eea46d8da86fbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15f4769a12dd1640fcf6608c34eea46d8da86fbb/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04862afe9f5c54a420823f95bb6ae152eec64b8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04862afe9f5c54a420823f95bb6ae152eec64b8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04862afe9f5c54a420823f95bb6ae152eec64b8b"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "9df42489a4e87b9f6451ff6edfc459b0e7644795", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15f4769a12dd1640fcf6608c34eea46d8da86fbb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15f4769a12dd1640fcf6608c34eea46d8da86fbb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=15f4769a12dd1640fcf6608c34eea46d8da86fbb", "patch": "@@ -1,3 +1,8 @@\n+2019-04-08  Marek Polacek  <polacek@redhat.com>\n+\n+\t* typeck2.c (digest_init_r): Don't condition the object slicing warning\n+\ton flag_checking.\n+\n 2019-04-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/89914"}, {"sha": "55b84f043f467af787b1f2063b095313e470e7c4", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15f4769a12dd1640fcf6608c34eea46d8da86fbb/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15f4769a12dd1640fcf6608c34eea46d8da86fbb/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=15f4769a12dd1640fcf6608c34eea46d8da86fbb", "patch": "@@ -1200,8 +1200,7 @@ digest_init_r (tree type, tree init, int nested, int flags,\n   /* \"If T is a class type and the initializer list has a single\n      element of type cv U, where U is T or a class derived from T,\n      the object is initialized from that element.\"  */\n-  if (flag_checking\n-      && cxx_dialect >= cxx11\n+  if (cxx_dialect >= cxx11\n       && BRACE_ENCLOSED_INITIALIZER_P (stripped_init)\n       && CONSTRUCTOR_NELTS (stripped_init) == 1\n       && ((CLASS_TYPE_P (type) && !CLASSTYPE_NON_AGGREGATE (type))\n@@ -1228,7 +1227,7 @@ digest_init_r (tree type, tree init, int nested, int flags,\n \t\t\t      \"results in object slicing\", TREE_TYPE (field)))\n \t\tinform (loc, \"remove %<{ }%> around initializer\");\n \t    }\n-\t  else\n+\t  else if (flag_checking)\n \t    /* We should have fixed this in reshape_init.  */\n \t    gcc_unreachable ();\n \t}"}]}