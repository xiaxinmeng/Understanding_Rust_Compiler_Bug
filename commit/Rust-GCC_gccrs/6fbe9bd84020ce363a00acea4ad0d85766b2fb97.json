{"sha": "6fbe9bd84020ce363a00acea4ad0d85766b2fb97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZiZTliZDg0MDIwY2UzNjNhMDBhY2VhNGFkMGQ4NTc2NmIyZmI5Nw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-01-19T21:55:35Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-01-19T21:55:35Z"}, "message": "recog.c (pop_operand): New function.\n\n        * recog.c (pop_operand): New function.\n        * recog.h (pop_operand): Declare it.\n        * genrecog.c (preds): Define it.\n\nFrom-SVN: r24774", "tree": {"sha": "088d40957b9d7c9c96322fee3efb8313e0f0e222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/088d40957b9d7c9c96322fee3efb8313e0f0e222"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fbe9bd84020ce363a00acea4ad0d85766b2fb97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fbe9bd84020ce363a00acea4ad0d85766b2fb97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fbe9bd84020ce363a00acea4ad0d85766b2fb97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fbe9bd84020ce363a00acea4ad0d85766b2fb97/comments", "author": null, "committer": null, "parents": [{"sha": "d804ed43d00126b959d19621d7c546463d990e1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d804ed43d00126b959d19621d7c546463d990e1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d804ed43d00126b959d19621d7c546463d990e1a"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "d32ef1b10104d96ebd537c446ef622c9002802a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbe9bd84020ce363a00acea4ad0d85766b2fb97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbe9bd84020ce363a00acea4ad0d85766b2fb97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fbe9bd84020ce363a00acea4ad0d85766b2fb97", "patch": "@@ -1,5 +1,9 @@\n Tue Jan 19 21:20:52 1999  Richard Henderson  <rth@cygnus.com>\n \n+\t* recog.c (pop_operand): New function.\n+\t* recog.h (pop_operand): Declare it.\n+\t* genrecog.c (preds): Define it.\n+\n \t* expr.c (do_jump_for_compare): Handle conditional branch expanders\n \temitting multiple jump instructions.\n \t* jump.c (condjump_label): New function."}, {"sha": "bcc47f0a6d3910fa7fe4d8cc1d5e55ecc9985677", "filename": "gcc/genrecog.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbe9bd84020ce363a00acea4ad0d85766b2fb97/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbe9bd84020ce363a00acea4ad0d85766b2fb97/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=6fbe9bd84020ce363a00acea4ad0d85766b2fb97", "patch": "@@ -161,6 +161,7 @@ static struct pred_table\n      {\"nonmemory_operand\", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,\n \t\t\t    LABEL_REF, SUBREG, REG}},\n      {\"push_operand\", {MEM}},\n+     {\"pop_operand\", {MEM}},\n      {\"memory_operand\", {SUBREG, MEM}},\n      {\"indirect_operand\", {SUBREG, MEM}},\n      {\"comparison_operator\", {EQ, NE, LE, LT, GE, GT, LEU, LTU, GEU, GTU}},"}, {"sha": "6d8db93e918029b0da8851131ace1b938f61e4eb", "filename": "gcc/recog.c", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbe9bd84020ce363a00acea4ad0d85766b2fb97/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbe9bd84020ce363a00acea4ad0d85766b2fb97/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=6fbe9bd84020ce363a00acea4ad0d85766b2fb97", "patch": "@@ -41,6 +41,14 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #endif\n \n+#ifndef STACK_POP_CODE\n+#ifdef STACK_GROWS_DOWNWARD\n+#define STACK_POP_CODE POST_INC\n+#else\n+#define STACK_POP_CODE POST_DEC\n+#endif\n+#endif\n+\n static void validate_replace_rtx_1\tPROTO((rtx *, rtx, rtx, rtx));\n static rtx *find_single_use_1\t\tPROTO((rtx, rtx *));\n static rtx *find_constant_term_loc\tPROTO((rtx *));\n@@ -1200,6 +1208,31 @@ push_operand (op, mode)\n   return XEXP (op, 0) == stack_pointer_rtx;\n }\n \n+/* Return 1 if OP is a valid operand that stands for popping a\n+   value of mode MODE off the stack.\n+\n+   The main use of this function is as a predicate in match_operand\n+   expressions in the machine description.  */\n+\n+int\n+pop_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  if (GET_CODE (op) != MEM)\n+    return 0;\n+\n+  if (GET_MODE (op) != mode)\n+    return 0;\n+\n+  op = XEXP (op, 0);\n+\n+  if (GET_CODE (op) != STACK_POP_CODE)\n+    return 0;\n+\n+  return XEXP (op, 0) == stack_pointer_rtx;\n+}\n+\n /* Return 1 if ADDR is a valid memory address for mode MODE.  */\n \n int"}, {"sha": "fc4719b4e656a8e71627120c715b659d11e37f93", "filename": "gcc/recog.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbe9bd84020ce363a00acea4ad0d85766b2fb97/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbe9bd84020ce363a00acea4ad0d85766b2fb97/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=6fbe9bd84020ce363a00acea4ad0d85766b2fb97", "patch": "@@ -98,6 +98,7 @@ extern int const_double_operand\t\tPROTO((rtx, enum machine_mode));\n extern int nonimmediate_operand\t\tPROTO((rtx, enum machine_mode));\n extern int nonmemory_operand\t\tPROTO((rtx, enum machine_mode));\n extern int push_operand\t\t\tPROTO((rtx, enum machine_mode));\n+extern int pop_operand\t\t\tPROTO((rtx, enum machine_mode));\n extern int memory_operand\t\tPROTO((rtx, enum machine_mode));\n extern int indirect_operand\t\tPROTO((rtx, enum machine_mode));\n extern int mode_independent_operand\tPROTO((rtx, enum machine_mode));"}]}