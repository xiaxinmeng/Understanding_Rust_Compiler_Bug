{"sha": "132afeecc3f5adc88a029f9d1e11ca6d64ab3e8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMyYWZlZWNjM2Y1YWRjODhhMDI5ZjlkMWUxMWNhNmQ2NGFiM2U4Yg==", "commit": {"author": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2018-06-12T16:07:37Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2018-06-12T16:07:37Z"}, "message": "p8-vec-xl-xst-v2.c: New.(actually added this time).\n\n\n[testsuite]\n\n2018-05-31  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n\t* gcc.target/powerpc/p8-vec-xl-xst-v2.c: New.(actually added this time).\n\nFrom-SVN: r261510", "tree": {"sha": "09ce3df36c8b0a1f83c1432611d5458489f10b5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09ce3df36c8b0a1f83c1432611d5458489f10b5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/132afeecc3f5adc88a029f9d1e11ca6d64ab3e8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/132afeecc3f5adc88a029f9d1e11ca6d64ab3e8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/132afeecc3f5adc88a029f9d1e11ca6d64ab3e8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/132afeecc3f5adc88a029f9d1e11ca6d64ab3e8b/comments", "author": null, "committer": null, "parents": [{"sha": "3ea94d354581d548f80a7e22ef50eeb908802917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea94d354581d548f80a7e22ef50eeb908802917", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ea94d354581d548f80a7e22ef50eeb908802917"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "cc68ceb87ca3e872acc970569e3d02ed29f83a8c", "filename": "gcc/testsuite/gcc.target/powerpc/p8-vec-xl-xst-v2.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/132afeecc3f5adc88a029f9d1e11ca6d64ab3e8b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8-vec-xl-xst-v2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/132afeecc3f5adc88a029f9d1e11ca6d64ab3e8b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8-vec-xl-xst-v2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8-vec-xl-xst-v2.c?ref=132afeecc3f5adc88a029f9d1e11ca6d64ab3e8b", "patch": "@@ -0,0 +1,64 @@\n+/* { dg-do compile { target { le } } } */\n+/* { dg-skip-if \"\" { powerpc*-*-darwin* } } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power8\" } } */\n+/* { dg-options \"-mcpu=power8 -O2\" } */\n+\n+/* Verify fix for problem where vec_xl and vec_xst are not recognized\n+   for the vector char and vector short cases on P8 only.\n+   This test duplicates p8-vec-xl-xst.c , except that it allows gimple-folding,\n+   which changes the expected codegen.  */\n+\n+#include <altivec.h>\n+\n+vector unsigned char\n+foo (unsigned char * address)\n+{\n+  return __builtin_vec_xl (0, address);\n+}\n+\n+void\n+bar (vector unsigned char x, unsigned char * address)\n+{\n+  __builtin_vec_xst (x, 0, address);\n+}\n+\n+vector unsigned short\n+foot (unsigned short * address)\n+{\n+  return __builtin_vec_xl (0, address);\n+}\n+\n+void\n+bart (vector unsigned short x, unsigned short * address)\n+{\n+  __builtin_vec_xst (x, 0, address);\n+}\n+\n+vector unsigned char\n+fool (unsigned char * address)\n+{\n+  return vec_xl (0, address);\n+}\n+\n+void\n+barl (vector unsigned char x, unsigned char * address)\n+{\n+  vec_xst (x, 0, address);\n+}\n+\n+vector unsigned short\n+footle (unsigned short * address)\n+{\n+  return vec_xl (0, address);\n+}\n+\n+void\n+bartle (vector unsigned short x, unsigned short * address)\n+{\n+  vec_xst (x, 0, address);\n+}\n+\n+/* { dg-final { scan-assembler-times \"lvx\" 4 } } */\n+/* { dg-final { scan-assembler-times \"stvx\"  4 } } */\n+/* { dg-final { scan-assembler-times \"xxpermdi\" 0 } } */"}]}