{"sha": "a73848406c824b7b2f6095c205828e2a1c8427a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTczODQ4NDA2YzgyNGI3YjJmNjA5NWMyMDU4MjhlMmExYzg0MjdhMg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-04-17T17:27:45Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-04-17T17:27:45Z"}, "message": "gjavah.c (print_name_for_stub_or_jni): Don't prefix method names with a newline, for CNI.\n\n2000-04-17  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* gjavah.c (print_name_for_stub_or_jni): Don't prefix method names\n\twith a newline, for CNI.\n\t(print_stub_or_jni): Print a space or newline before method name for\n\tCNI as well as JNI.\n\t(print_cxx_classname): Don't write leading \"::\" in CNI stub method.\n\t(process_file): Include gcj/cni.h if generating CNI stubs.\n\nFrom-SVN: r33213", "tree": {"sha": "5b33dd154121b0ce5f57eb893a461608baab2b97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b33dd154121b0ce5f57eb893a461608baab2b97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a73848406c824b7b2f6095c205828e2a1c8427a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73848406c824b7b2f6095c205828e2a1c8427a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a73848406c824b7b2f6095c205828e2a1c8427a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73848406c824b7b2f6095c205828e2a1c8427a2/comments", "author": null, "committer": null, "parents": [{"sha": "56f02b88c17ac5e93b999eb556d75a7c2f95d232", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f02b88c17ac5e93b999eb556d75a7c2f95d232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f02b88c17ac5e93b999eb556d75a7c2f95d232"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "5215ce08226392558099311857bf357ba2c4c747", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73848406c824b7b2f6095c205828e2a1c8427a2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73848406c824b7b2f6095c205828e2a1c8427a2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=a73848406c824b7b2f6095c205828e2a1c8427a2", "patch": "@@ -1,3 +1,12 @@\n+2000-04-17  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* gjavah.c (print_name_for_stub_or_jni): Don't prefix method names \n+\twith a newline, for CNI.\n+\t(print_stub_or_jni): Print a space or newline before method name for \n+\tCNI as well as JNI.\n+\t(print_cxx_classname): Don't write leading \"::\" in CNI stub method.\n+\t(process_file): Include gcj/cni.h if generating CNI stubs.      \n+\n 2000-04-16  Tom Tromey  <tromey@cygnus.com>\n \n \t* gjavah.c (decompile_method): Use print_field_name."}, {"sha": "355f99c34aa158f47eaa2057dffaef5690da4aad", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73848406c824b7b2f6095c205828e2a1c8427a2/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73848406c824b7b2f6095c205828e2a1c8427a2/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=a73848406c824b7b2f6095c205828e2a1c8427a2", "patch": "@@ -1122,7 +1122,7 @@ DEFUN (print_name_for_stub_or_jni, (stream, jcf, name_index, signature_index,\n        AND int name_index AND int signature_index\n        AND int is_init AND const char *name_override AND int flags)\n {\n-  const char *const prefix = flag_jni ? \"Java_\" : \"\\n\";\n+  const char *const prefix = flag_jni ? \"Java_\" : \"\";\n   print_cxx_classname (stream, prefix, jcf, jcf->this_class);\n   fputs (flag_jni ? \"_\" : \"::\", stream);\n   print_full_cxx_name (stream, jcf, name_index, \n@@ -1188,9 +1188,8 @@ DEFUN(print_stub_or_jni, (stream, jcf, name_index, signature_index, is_init,\n \n       /* When printing a JNI header we need to respect the space.  In\n \t other cases we're just going to insert a newline anyway.  */\n-      if (flag_jni)\n-\tfputs (need_space && ! stubs ? \" \" : \"\\n\", stream);\n-\n+      fputs (need_space && ! stubs ? \" \" : \"\\n\", stream);\n+      \n       /* Now print the name of the thing.  */\n       print_name_for_stub_or_jni (stream, jcf, name_index,\n \t\t\t\t  signature_index, is_init, name_override,\n@@ -1251,7 +1250,7 @@ print_cxx_classname (stream, prefix, jcf, index)\n   fputs (prefix, stream);\n \n   /* Print a leading \"::\" so we look in the right namespace.  */\n-  if (! flag_jni)\n+  if (! flag_jni && ! stubs)\n     fputs (\"::\", stream);\n \n   while (s < limit)\n@@ -1691,6 +1690,7 @@ DEFUN(process_file, (jcf, out),\n \t  if (len > 6 && ! strcmp (&jcf->classname[len - 6], \".class\"))\n \t    len -= 6;\n \t  print_include (out, jcf->classname, len);\n+\t  print_include (out, \"gcj/cni\", -1);\n \t}\n     }\n "}]}