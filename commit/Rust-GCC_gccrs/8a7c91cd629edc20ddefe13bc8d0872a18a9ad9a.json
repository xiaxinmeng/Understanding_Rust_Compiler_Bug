{"sha": "8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE3YzkxY2Q2MjllZGMyMGRkZWZlMTNiYzhkMDg3MmExOGE5YWQ5YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-12T07:10:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-12T07:10:07Z"}, "message": "2016-10-12  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-propagate.c\n\t(substitute_and_fold_dom_walker::before_dom_children): Do not\n\tignore ASSERT_EXPRs but only preserve them.\n\t* tree-vrp.c (remove_range_assertions): Deal with ASSERT_EXPRs\n\tthat have been propagated into.\n\t(vrp_finalize): Enable DCE for substitute_and_fold.\n\n\t* gcc.dg/tree-ssa/vrp35.c: Adjust.\n\t* gcc.dg/tree-ssa/vrp36.c: Likewise.\n\t* gcc.dg/tree-ssa/vrp46.c: Likewise.\n\nFrom-SVN: r241021", "tree": {"sha": "3d395f1318b558b7474c2796923f9da4f2bd0a23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d395f1318b558b7474c2796923f9da4f2bd0a23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7dc2f5f1236a0f1544c756c46a5cd06491e96934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc2f5f1236a0f1544c756c46a5cd06491e96934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dc2f5f1236a0f1544c756c46a5cd06491e96934"}], "stats": {"total": 54, "additions": 33, "deletions": 21}, "files": [{"sha": "30c186a9b27eb2aeb3ad196f6ed3e6a405a55c2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "patch": "@@ -1,3 +1,12 @@\n+2016-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-propagate.c\n+\t(substitute_and_fold_dom_walker::before_dom_children): Do not\n+\tignore ASSERT_EXPRs but only preserve them.\n+\t* tree-vrp.c (remove_range_assertions): Deal with ASSERT_EXPRs\n+\tthat have been propagated into.\n+\t(vrp_finalize): Enable DCE for substitute_and_fold.\n+\n 2016-10-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77920"}, {"sha": "1c4d4cf8de2e5d29400e3ad1e3e21066ab362f8a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "patch": "@@ -1,3 +1,9 @@\n+2016-10-12  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/vrp35.c: Adjust.\n+\t* gcc.dg/tree-ssa/vrp36.c: Likewise.\n+\t* gcc.dg/tree-ssa/vrp46.c: Likewise.\n+\n 2016-10-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/77920"}, {"sha": "20112eafd533b5445492bb093b990150e818a3a8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp35.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp35.c?ref=8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1-details\" } */\n \n int test1(int i, int k)\n {\n@@ -11,4 +11,4 @@ int test1(int i, int k)\n   return 1;\n }\n \n-/* { dg-final { scan-tree-dump \"Folding predicate j_.* == 10 to 0\" \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump \"Removing dead stmt \\[^\\r\\n\\]* = j_.* == 10\" \"vrp1\" } } */"}, {"sha": "3933254474a66d2b4fef95cb5aa9392d6c944847", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp36.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp36.c?ref=8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-vrp1\" } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1-details\" } */\n \n int foo(int i)\n {\n@@ -8,4 +8,4 @@ int foo(int i)\n   return 1;\n }\n \n-/* { dg-final { scan-tree-dump \"Folding predicate i_.* == 1 to 0\" \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump \"Removing dead stmt \\[^\\r\\n\\]* = i_.* == 1\" \"vrp1\" } } */"}, {"sha": "ebdc2e3eedb17c5acc16f13714c8648728204034", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp46.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp46.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp46.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp46.c?ref=8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "patch": "@@ -27,6 +27,6 @@ func_18 ( int t )\n     }\n }\n \n-/* There should be a single if left.  */\n+/* There should be no if left.  */\n \n-/* { dg-final { scan-tree-dump-times \"if\" 1 \"vrp1\" } } */\n+/* { dg-final { scan-tree-dump-times \"if\" 0 \"vrp1\" } } */"}, {"sha": "0f940cc56b58b2435adcfe282fdb72d36db309f4", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "patch": "@@ -1035,15 +1035,6 @@ substitute_and_fold_dom_walker::before_dom_children (basic_block bb)\n     {\n       bool did_replace;\n       gimple *stmt = gsi_stmt (i);\n-      enum gimple_code code = gimple_code (stmt);\n-\n-      /* Ignore ASSERT_EXPRs.  They are used by VRP to generate\n-\t range information for names and they are discarded\n-\t afterwards.  */\n-\n-      if (code == GIMPLE_ASSIGN\n-\t  && TREE_CODE (gimple_assign_rhs1 (stmt)) == ASSERT_EXPR)\n-\tcontinue;\n \n       /* No point propagating into a stmt we have a value for we\n          can propagate into all uses.  Mark it for removal instead.  */\n@@ -1056,7 +1047,10 @@ substitute_and_fold_dom_walker::before_dom_children (basic_block bb)\n \t      && sprime != lhs\n \t      && may_propagate_copy (lhs, sprime)\n \t      && !stmt_could_throw_p (stmt)\n-\t      && !gimple_has_side_effects (stmt))\n+\t      && !gimple_has_side_effects (stmt)\n+\t      /* We have to leave ASSERT_EXPRs around for jump-threading.  */\n+\t      && (!is_gimple_assign (stmt)\n+\t\t  || gimple_assign_rhs_code (stmt) != ASSERT_EXPR))\n \t    {\n \t      stmts_to_remove.safe_push (stmt);\n \t      continue;"}, {"sha": "8d5fa66e08459b2b7937b2fdf6b00f1a8f374ec0", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=8a7c91cd629edc20ddefe13bc8d0872a18a9ad9a", "patch": "@@ -6894,9 +6894,9 @@ remove_range_assertions (void)\n \t    imm_use_iterator iter;\n \n \t    var = ASSERT_EXPR_VAR (rhs);\n-\t    gcc_assert (TREE_CODE (var) == SSA_NAME);\n \n-\t    if (!POINTER_TYPE_P (TREE_TYPE (lhs))\n+\t    if (TREE_CODE (var) == SSA_NAME\n+\t\t&& !POINTER_TYPE_P (TREE_TYPE (lhs))\n \t\t&& SSA_NAME_RANGE_INFO (lhs))\n \t      {\n \t\tif (is_unreachable == -1)\n@@ -6928,8 +6928,11 @@ remove_range_assertions (void)\n \n \t    /* Propagate the RHS into every use of the LHS.  */\n \t    FOR_EACH_IMM_USE_STMT (use_stmt, iter, lhs)\n-\t      FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n-\t\tSET_USE (use_p, var);\n+\t      {\n+\t\tFOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n+\t\t  SET_USE (use_p, var);\n+\t\tupdate_stmt (use_stmt);\n+\t      }\n \n \t    /* And finally, remove the copy, it is not needed.  */\n \t    gsi_remove (&si, true);\n@@ -10611,7 +10614,7 @@ vrp_finalize (bool warn_array_bounds_p)\n       }\n \n   substitute_and_fold (op_with_constant_singleton_value_range,\n-\t\t       vrp_fold_stmt, false);\n+\t\t       vrp_fold_stmt, true);\n \n   if (warn_array_bounds && warn_array_bounds_p)\n     check_all_array_refs ();"}]}