{"sha": "c9c0db83bb3cdf8eb893be7e71efd75c21414755", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzljMGRiODNiYjNjZGY4ZWI4OTNiZTdlNzFlZmQ3NWMyMTQxNDc1NQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-04-12T09:04:05Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-04-12T09:04:05Z"}, "message": "re PR testsuite/21164 (libjava tests uses absolute paths)\n\n\tlibjava:\n\tPR testsuite/21164\n\t* testsuite/lib/libjava.exp: Load dg.exp.\n\t* testsuite/libjava.jar/jar.exp (gcj_jar_interpret): Strip srcdir\n\tfrom jarfile.\n\tUse result for messages.\n\t* testsuite/libjava.loader/loader.exp (gcj_loader_test_one): Pass\n\terrname to libjava_invoke, fix testname.\n\n\tgcc:\n\tPR testsuite/21164\n\t* lib/compat.exp (compat-execute): Declare unsupported after\n\tstripping path from src1.\n\t* lib/lto.exp (lto-execute): Likewise.\n\nFrom-SVN: r172302", "tree": {"sha": "7f5c19cc281af7f2ecf1da167e72bb6d8d42f0f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f5c19cc281af7f2ecf1da167e72bb6d8d42f0f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9c0db83bb3cdf8eb893be7e71efd75c21414755", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9c0db83bb3cdf8eb893be7e71efd75c21414755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9c0db83bb3cdf8eb893be7e71efd75c21414755", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9c0db83bb3cdf8eb893be7e71efd75c21414755/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e30ecc5d62d3fb4dcb02174702407799fb3f1c64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e30ecc5d62d3fb4dcb02174702407799fb3f1c64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e30ecc5d62d3fb4dcb02174702407799fb3f1c64"}], "stats": {"total": 78, "additions": 49, "deletions": 29}, "files": [{"sha": "91c792fef95c8952966fb972f0b196826ad6e6d2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9c0db83bb3cdf8eb893be7e71efd75c21414755/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9c0db83bb3cdf8eb893be7e71efd75c21414755/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c9c0db83bb3cdf8eb893be7e71efd75c21414755", "patch": "@@ -1,3 +1,10 @@\n+2011-04-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR testsuite/21164\n+\t* lib/compat.exp (compat-execute): Declare unsupported after\n+\tstripping path from src1.\n+\t* lib/lto.exp (lto-execute): Likewise.\n+\n 2011-04-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/48552"}, {"sha": "d686631c03b1e9aafcf2dac7551fccbdd5c33ec5", "filename": "gcc/testsuite/lib/compat.exp", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9c0db83bb3cdf8eb893be7e71efd75c21414755/gcc%2Ftestsuite%2Flib%2Fcompat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9c0db83bb3cdf8eb893be7e71efd75c21414755/gcc%2Ftestsuite%2Flib%2Fcompat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fcompat.exp?ref=c9c0db83bb3cdf8eb893be7e71efd75c21414755", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2002, 2003, 2004, 2005, 2007, 2008\n+# Copyright (C) 2002, 2003, 2004, 2005, 2007, 2008, 2011\n # Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -260,13 +260,6 @@ proc compat-execute { src1 sid use_alt } {\n     set dg-do-what [list ${dg-do-what-default} \"\" P]\n     set extra_flags_1 [compat-get-options-main $src1]\n \n-    # Check whether this test is supported for this target.\n-    if { [lindex ${dg-do-what} 1 ] == \"N\" } {\n-\tunsupported \"$src1\"\n-\tverbose \"$src1 not supported on this target, skipping it\" 3\n-\treturn\n-    }\n-\n     # Set up the names of the other source files.\n     set dir [file dirname $src1]\n     set ext [file extension $src1]\n@@ -314,10 +307,6 @@ proc compat-execute { src1 sid use_alt } {\n \tset testcase [string range \"$testcase\" [string length \"$tmpdir/\"] end]\n \tset testcase \"tmpdir-$testcase\"\n     }\n-    regsub \"_main.*\" $testcase \"\" testcase\n-    # Set up the base name of executable files so they'll be unique.\n-    regsub -all \"\\[./\\]\" $testcase \"-\" execbase\n-\n     # If we couldn't rip $srcdir out of `src1' then just do the best we can.\n     # The point is to reduce the unnecessary noise in the logs.  Don't strip\n     # out too much because different testcases with the same name can confuse\n@@ -326,6 +315,17 @@ proc compat-execute { src1 sid use_alt } {\n         set testcase \"[file tail [file dirname $src1]]/[file tail $src1]\"\n     }\n \n+    # Check whether this test is supported for this target.\n+    if { [lindex ${dg-do-what} 1 ] == \"N\" } {\n+\tunsupported \"$testcase\"\n+\tverbose \"$testcase not supported on this target, skipping it\" 3\n+\treturn\n+    }\n+\n+    regsub \"_main.*\" $testcase \"\" testcase\n+    # Set up the base name of executable files so they'll be unique.\n+    regsub -all \"\\[./\\]\" $testcase \"-\" execbase\n+\n     # Loop through all of the option lists used for this test.\n \n     set count 0"}, {"sha": "762dbbf82de9daeb2d0fb0e39038752a4f6b15ff", "filename": "gcc/testsuite/lib/lto.exp", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9c0db83bb3cdf8eb893be7e71efd75c21414755/gcc%2Ftestsuite%2Flib%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9c0db83bb3cdf8eb893be7e71efd75c21414755/gcc%2Ftestsuite%2Flib%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Flto.exp?ref=c9c0db83bb3cdf8eb893be7e71efd75c21414755", "patch": "@@ -418,13 +418,6 @@ proc lto-execute { src1 sid } {\n \tset lto_option_list $LTO_OPTIONS\n     }\n \n-    # Check whether this test is supported for this target.\n-    if { [lindex ${dg-do-what} 1 ] == \"N\" } {\n-\tunsupported \"$src1\"\n-\tverbose \"$src1 not supported on this target, skipping it\" 3\n-\treturn\n-    }\n-\n     # Set up the names of the other source files.\n     set dir [file dirname $src1]\n     set base [file rootname $src1]\n@@ -478,11 +471,6 @@ proc lto-execute { src1 sid } {\n \tset testcase [string range \"$testcase\" [string length \"$tmpdir/\"] end]\n \tset testcase \"tmpdir-$testcase\"\n     }\n-    regsub \"_0.*\" $testcase \"\" testcase\n-\n-    # Set up the base name of executable files so they'll be unique.\n-    regsub -all \"\\[./\\]\" $testcase \"-\" execbase\n-\n     # If we couldn't rip $srcdir out of `src1' then just do the best we can.\n     # The point is to reduce the unnecessary noise in the logs.  Don't strip\n     # out too much because different testcases with the same name can confuse\n@@ -491,6 +479,18 @@ proc lto-execute { src1 sid } {\n         set testcase \"[file tail [file dirname $src1]]/[file tail $src1]\"\n     }\n \n+    # Check whether this test is supported for this target.\n+    if { [lindex ${dg-do-what} 1 ] == \"N\" } {\n+\tunsupported \"$testcase\"\n+\tverbose \"$testcase not supported on this target, skipping it\" 3\n+\treturn\n+    }\n+\n+    regsub \"_0.*\" $testcase \"\" testcase\n+\n+    # Set up the base name of executable files so they'll be unique.\n+    regsub -all \"\\[./\\]\" $testcase \"-\" execbase\n+\n     # Loop through all of the option lists used for this test.\n     set count 0\n     foreach option $lto_option_list {"}, {"sha": "5bbcd6ebcae618c26e6bc89c2d8808a5db332d33", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9c0db83bb3cdf8eb893be7e71efd75c21414755/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9c0db83bb3cdf8eb893be7e71efd75c21414755/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c9c0db83bb3cdf8eb893be7e71efd75c21414755", "patch": "@@ -1,3 +1,13 @@\n+2011-04-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR testsuite/21164\n+\t* testsuite/lib/libjava.exp: Load dg.exp.\n+\t* testsuite/libjava.jar/jar.exp (gcj_jar_interpret): Strip srcdir\n+\tfrom jarfile.\n+\tUse result for messages.\n+\t* testsuite/libjava.loader/loader.exp (gcj_loader_test_one): Pass\n+\terrname to libjava_invoke, fix testname.\n+\n 2011-04-08  Kai Tietz  <ktietz@redhat.com>\n \n \t* configure.ac (libgcj_ld_export_all): Set for windows"}, {"sha": "0de823b737cf7cc74aa6842db59482528da0600e", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9c0db83bb3cdf8eb893be7e71efd75c21414755/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9c0db83bb3cdf8eb893be7e71efd75c21414755/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=c9c0db83bb3cdf8eb893be7e71efd75c21414755", "patch": "@@ -1,11 +1,13 @@\n-# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2007 Free Software Foundation\n+# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2007, 2011\n+# Free Software Foundation\n \n proc load_gcc_lib { filename } {\n     global srcdir\n     load_file $srcdir/../../gcc/testsuite/lib/$filename\n }\n \n load_lib libgloss.exp\n+load_lib dg.exp\n load_gcc_lib target-libpath.exp\n \n # GCJ_UNDER_TEST is the compiler under test."}, {"sha": "e57bcb3e540fd7c298410ccbfb2147db4dcb6252", "filename": "libjava/testsuite/libjava.jar/jar.exp", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9c0db83bb3cdf8eb893be7e71efd75c21414755/libjava%2Ftestsuite%2Flibjava.jar%2Fjar.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9c0db83bb3cdf8eb893be7e71efd75c21414755/libjava%2Ftestsuite%2Flibjava.jar%2Fjar.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jar%2Fjar.exp?ref=c9c0db83bb3cdf8eb893be7e71efd75c21414755", "patch": "@@ -20,17 +20,18 @@ proc gcj_jar_interpret {jarfile} {\n   global INTERPRETER srcdir\n \n   set gij [libjava_find_gij]\n+  set errname [dg-trim-dirname $srcdir $jarfile]\n   # libjava_find_gij will return \"\" if it couldn't find the\n   # program; in this case we want to skip the test.\n   if {$INTERPRETER != \"yes\" || $gij == \"\"} {\n-    untested \"$jarfile execution - gij test\"\n-    untested \"$jarfile output - gij test\"\n+    untested \"$errname execution - gij test\"\n+    untested \"$errname output - gij test\"\n     return\n   }\n \n   set opts(_) {}\n   set out [file rootname $jarfile].out\n-  libjava_invoke $jarfile \"gij test\" opts $gij {} $out \\\n+  libjava_invoke $errname \"gij test\" opts $gij {} $out \\\n       \"\" -jar $jarfile\n }\n "}, {"sha": "cdb356bd03534d0cb6237f751603d5c675b3f3e6", "filename": "libjava/testsuite/libjava.loader/loader.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9c0db83bb3cdf8eb893be7e71efd75c21414755/libjava%2Ftestsuite%2Flibjava.loader%2Floader.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9c0db83bb3cdf8eb893be7e71efd75c21414755/libjava%2Ftestsuite%2Flibjava.loader%2Floader.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.loader%2Floader.exp?ref=c9c0db83bb3cdf8eb893be7e71efd75c21414755", "patch": "@@ -34,7 +34,7 @@ proc gcj_loader_test_one {srcfile} {\n     }\n     pass \"$errname compilation from source\"\n \n-    libjava_invoke $executable $executable \"\" $executable \"\" $resfile \"\"\n+    libjava_invoke $errname \"source compiled test\" \"\" $executable \"\" $resfile \"\"\n \n   return 1\n }"}]}