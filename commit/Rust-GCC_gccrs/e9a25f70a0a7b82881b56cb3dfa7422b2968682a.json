{"sha": "e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlhMjVmNzBhMGE3YjgyODgxYjU2Y2IzZGZhNzQyMmIyOTY4NjgyYQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-11-02T21:19:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-11-02T21:19:36Z"}, "message": "Update mainline egcs to gcc2 snapshot 971021.\n\nFrom-SVN: r16278", "tree": {"sha": "46fe768360493f03f7282d07762e7b26c292aabd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46fe768360493f03f7282d07762e7b26c292aabd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/comments", "author": null, "committer": null, "parents": [{"sha": "bb84e66919817020267815eed4304e543688e722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb84e66919817020267815eed4304e543688e722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb84e66919817020267815eed4304e543688e722"}], "stats": {"total": 45327, "additions": 8867, "deletions": 36460}, "files": [{"sha": "f770cc69c78e9cd56b600a8ffd844d226b9f1316", "filename": "gcc/ChangeLog.11", "status": "modified", "additions": 2727, "deletions": 0, "changes": 2727, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2FChangeLog.11", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2FChangeLog.11", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.11?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "0c646b83aa5e6e4987856fd9fca8ac20678e66b2", "filename": "gcc/INSTALL", "status": "modified", "additions": 232, "deletions": 102, "changes": 334, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FINSTALL?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -66,8 +66,7 @@ and includes all the necessary compilation tools and libraries.\n      aliases.  For example, `sun3' stands for `m68k-sun', so\n      `sun3-sunos4.1' is another way to specify a Sun 3.  You can also\n      use simply `sun3-sunos', since the version of SunOS is assumed by\n-     default to be version 4.  `sun3-bsd' also works, since `configure'\n-     knows that the only BSD variant on a Sun 3 is SunOS.\n+     default to be version 4.\n \n      You can specify a version number after any of the system types,\n      and some of the CPU types.  In most cases, the version is\n@@ -104,11 +103,11 @@ and includes all the necessary compilation tools and libraries.\n           are\n           `hppa1.0-ANY-ANY', `hppa1.1-ANY-ANY', `i386-ANY-sysv',\n           `i386-ANY-isc',\n-          `i860-ANY-bsd', `m68k-bull-sysv', `m68k-hp-hpux',\n-          `m68k-sony-bsd',\n-          `m68k-altos-sysv', `m68000-hp-hpux', `m68000-att-sysv',\n-          `ANY-lynx-lynxos', and `mips-ANY').  On any other system,\n-          `--with-gnu-as' has no effect.\n+          `i860-ANY-bsd', `m68k-bull-sysv',\n+          `m68k-hp-hpux', `m68k-sony-bsd',\n+          `m68k-altos-sysv', `m68000-hp-hpux',\n+          `m68000-att-sysv', `ANY-lynx-lynxos', and `mips-ANY').  On\n+          any other system, `--with-gnu-as' has no effect.\n \n           On the systems listed above (except for the HP-PA, for ISC on\n           the 386, and for `mips-sgi-irix5.*'), if you use GAS, you\n@@ -162,6 +161,16 @@ and includes all the necessary compilation tools and libraries.\n           `--nfp' currently has no effect, though perhaps there are\n           other systems where it could usefully make a difference.\n \n+    `--enable-objcthreads=TYPE'\n+          Certain systems, notably Linux-based GNU systems, can't be\n+          relied on to supply a threads facility for the Objective C\n+          runtime and so will default to single-threaded runtime.  They\n+          may, however, have a library threads implementation\n+          available, in which case threads can be enabled with this\n+          option by supplying a suitable TYPE, probably `posix'.  The\n+          possibilities for TYPE are `single', `posix', `win32',\n+          `solaris', `irix' and `mach'.\n+\n      The `configure' script searches subdirectories of the source\n      directory for other compilers that are to be integrated into GNU\n      CC.  The GNU compiler for C++, called G++ is in a subdirectory\n@@ -217,13 +226,29 @@ and includes all the necessary compilation tools and libraries.\n      different convention (not `/usr/local') for where to put\n      site-specific files.\n \n+     The default value for `--local-prefix' is `/usr/local' regardless\n+     of the value of `--prefix'.  Specifying `--prefix' has no effect\n+     on which directory GNU CC searches for local header files.  This\n+     may seem counterintuitive, but actually it is logical.\n+\n+     The purpose of `--prefix' is to specify where to *install GNU CC*.\n+     The local header files in `/usr/local/include'--if you put any in\n+     that directory--are not part of GNU CC.  They are part of other\n+     programs--perhaps many others.  (GNU CC installs its own header\n+     files in another directory which is based on the `--prefix' value.)\n+\n      *Do not* specify `/usr' as the `--local-prefix'!  The directory\n      you use for `--local-prefix' *must not* contain any of the\n      system's standard header files.  If it did contain them, certain\n      programs would be miscompiled (including GNU Emacs, on certain\n      targets), because this would override and nullify the header file\n      corrections made by the `fixincludes' script.\n \n+     Indications are that people who use this option use it based on\n+     mistaken ideas of what it is for.  People use it as if it specified\n+     where to install part of GNU CC.  Perhaps they make this assumption\n+     because installing GNU CC creates the directory.\n+\n   6. Make sure the Bison parser generator is installed.  (This is\n      unnecessary if the Bison output files `c-parse.c' and `cexp.c' are\n      more recent than `c-parse.y' and `cexp.y' and you do not plan to\n@@ -400,11 +425,14 @@ and includes all the necessary compilation tools and libraries.\n      compiler driver program looks for them.  Here TARGET is the target\n      machine type specified when you ran `configure', and VERSION is\n      the version number of GNU CC.  This naming scheme permits various\n-     versions and/or cross-compilers to coexist.\n+     versions and/or cross-compilers to coexist.  It also copies the\n+     executables for compilers for other languages (e.g., `cc1plus' for\n+     C++) to the same directory.\n \n      This also copies the driver program `xgcc' into\n      `/usr/local/bin/gcc', so that it appears in typical execution\n-     search paths.\n+     search paths.  It also copies `gcc.1' into `/usr/local/man/man1'\n+     and info pages into `/usr/local/info'.\n \n      On some systems, this command causes recompilation of some files.\n      This is usually due to bugs in `make'.  You should either ignore\n@@ -427,23 +455,65 @@ and includes all the necessary compilation tools and libraries.\n      a C++ run-time library.  All I/O functionality, special class\n      libraries, etc., are available in the libg++ distribution.\n \n+ 17. GNU CC includes a runtime library for Objective-C because it is an\n+     integral part of the language.  You can find the files associated\n+     with the library in the subdirectory `objc'.  The GNU Objective-C\n+     Runtime Library requires header files for the target's C library in\n+     order to be compiled,and also requires the header files for the\n+     target's thread library if you want thread support.  *Note\n+     Cross-Compilers and Header Files: Cross Headers, for discussion\n+     about header files issues for cross-compilation.\n+\n+     When you run `configure', it picks the appropriate Objective-C\n+     thread implementation file for the target platform.  In some\n+     situations, you may wish to choose a different back-end as some\n+     platforms support multiple thread implementations or you may wish\n+     to disable thread support completely.  You do this by specifying a\n+     value for the OBJC_THREAD_FILE makefile variable on the command\n+     line when you run make, for example:\n+\n+          make CC=\"stage2/xgcc -Bstage2/\" CFLAGS=\"-g -O2\" OBJC_THREAD_FILE=thr-single\n+\n+     Below is a list of the currently available back-ends.\n+\n+        * thr-single Disable thread support, should work for all\n+          platforms.\n+\n+        * thr-decosf1 DEC OSF/1 thread support.\n+\n+        * thr-irix SGI IRIX thread support.\n+\n+        * thr-mach Generic MACH thread support, known to work on\n+          NEXTSTEP.\n+\n+        * thr-os2 IBM OS/2 thread support.\n+\n+        * thr-posix Generix POSIX thread support.\n+\n+        * thr-pthreads PCThreads on Linux-based GNU systems.\n+\n+        * thr-solaris SUN Solaris thread support.\n+\n+        * thr-win32 Microsoft Win32 API thread support.\n+\n Configurations Supported by GNU CC\n ==================================\n \n    Here are the possible CPU types:\n \n      1750a, a29k, alpha, arm, cN, clipper, dsp16xx, elxsi, h8300,\n-     hppa1.0, hppa1.1, i370, i386, i486, i586, i860, i960, m68000, m68k,\n-     m88k, mips, mipsel, mips64, mips64el, ns32k, powerpc, powerpcle,\n-     pyramid, romp, rs6000, sh, sparc, sparclite, sparc64, vax, we32k.\n+     hppa1.0, hppa1.1, i370, i386, i486, i586, i860, i960, m32r,\n+     m68000, m68k, m88k, mips, mipsel, mips64, mips64el, ns32k,\n+     powerpc, powerpcle, pyramid, romp, rs6000, sh, sparc, sparclite,\n+     sparc64, vax, we32k.\n \n    Here are the recognized company names.  As you can see, customary\n abbreviations are used rather than the longer official names.\n \n-     acorn, alliant, altos, apollo, att, bull, cbm, convergent, convex,\n-     crds, dec, dg, dolphin, elxsi, encore, harris, hitachi, hp, ibm,\n-     intergraph, isi, mips, motorola, ncr, next, ns, omron, plexus,\n-     sequent, sgi, sony, sun, tti, unicom, wrs.\n+     acorn, alliant, altos, apollo, apple, att, bull, cbm, convergent,\n+     convex, crds, dec, dg, dolphin, elxsi, encore, harris, hitachi,\n+     hp, ibm, intergraph, isi, mips, motorola, ncr, next, ns, omron,\n+     plexus, sequent, sgi, sony, sun, tti, unicom, wrs.\n \n    The company name is meaningful only to disambiguate when the rest of\n the information supplied is insufficient.  You can omit it, writing\n@@ -452,9 +522,9 @@ is equivalent to `vax-dec-ultrix4.2'.\n \n    Here is a list of system types:\n \n-     386bsd, aix, acis, amigaos, aos, aout, bosx, bsd, clix, coff,\n+     386bsd, aix, acis, amigaos, aos, aout, aux, bosx, bsd, clix, coff,\n      ctix, cxux, dgux, dynix, ebmon, ecoff, elf, esix, freebsd, hms,\n-     genix, gnu, gnu/linux, hiux, hpux, iris, irix, isc, luna, lynxos,\n+     genix, gnu, linux-gnu, hiux, hpux, iris, irix, isc, luna, lynxos,\n      mach, minix, msdos, mvs, netbsd, newsos, nindy, ns, osf, osfrose,\n      ptx, riscix, riscos, rtu, sco, sim, solaris, sunos, sym, sysv,\n      udi, ultrix, unicos, uniplus, unos, vms, vsta, vxworks, winnt,\n@@ -505,12 +575,11 @@ special things you must know:\n `1750a-*-*'\n      MIL-STD-1750A processors.\n \n-     Starting with GCC 2.6.1, the MIL-STD-1750A cross configuration no\n-     longer supports the Tektronix Assembler, but instead produces\n-     output for `as1750', an assembler/linker available under the GNU\n-     Public License for the 1750A. Contact *kellogg@space.otn.dasa.de*\n-     for more details on obtaining `as1750'.  A similarly licensed\n-     simulator for the 1750A is available from same address.\n+     The MIL-STD-1750A cross configuration produces output for\n+     `as1750', an assembler/linker available under the GNU Public\n+     License for the 1750A. `as1750' can be obtained at\n+     *ftp://ftp.fta-berlin.de/pub/crossgcc/1750gals/*.  A similarly\n+     licensed simulator for the 1750A is available from same address.\n \n      You should ignore a fatal error during the building of libgcc\n      (libgcc is not yet implemented for the 1750A.)\n@@ -589,15 +658,27 @@ special things you must know:\n      DBX.  DEC is now aware of this problem with the assembler and\n      hopes to provide a fix shortly.\n \n-`arm'\n+`arc-*-elf'\n+     Argonaut ARC processor.  This configuration is intended for\n+     embedded systems.\n+\n+`arm-*-aout'\n      Advanced RISC Machines ARM-family processors.  These are often\n      used in embedded applications.  There are no standard Unix\n      configurations.  This configuration corresponds to the basic\n-     instruction sequences and will produce a.out format object modules.\n+     instruction sequences and will produce `a.out' format object\n+     modules.\n \n      You may need to make a variant of the file `arm.h' for your\n      particular configuration.\n \n+`arm-*-linuxaout'\n+     Any of the ARM family processors running the Linux-based GNU\n+     system with the `a.out' binary format (ELF is not yet supported).\n+     You must use version 2.8.1.0.7 or later of the Linux binutils,\n+     which you can download from `sunsite.unc.edu:/pub/Linux/GCC' and\n+     other mirror sites for Linux-based GNU systems.\n+\n `arm-*-riscix'\n      The ARM2 or ARM3 processor running RISC iX, Acorn's port of BSD\n      Unix.  If you are running a version of RISC iX prior to 1.2 then\n@@ -651,82 +732,55 @@ special things you must know:\n      A port to the AT&T DSP1610 family of processors.\n \n `h8300-*-*'\n+     Hitachi H8/300 series of processors.\n+\n      The calling convention and structure layout has changed in release\n      2.6.  All code must be recompiled.  The calling convention now\n      passes the first three arguments in function calls in registers.\n      Structures are no longer a multiple of 2 bytes.\n \n `hppa*-*-*'\n-     There are two variants of this CPU, called 1.0 and 1.1, which have\n-     different machine descriptions.  You must use the right one for\n-     your machine.  All 7NN machines and 8N7 machines use 1.1, while\n-     all other 8NN machines use 1.0.\n-\n-     The easiest way to handle this problem is to use `configure hpNNN'\n-     or `configure hpNNN-hpux', where NNN is the model number of the\n-     machine.  Then `configure' will figure out if the machine is a 1.0\n-     or 1.1.  Use `uname -a' to find out the model number of your\n-     machine.\n+     There are several variants of the HP-PA processor which run a\n+     variety of operating systems.  GNU CC must be configured to use\n+     the correct processor type and operating system, or GNU CC will\n+     not function correctly.  The easiest way to handle this problem is\n+     to *not* specify a target when configuring GNU CC, the `configure'\n+     script will try to automatically determine the right processor\n+     type and operating system.\n \n      `-g' does not work on HP-UX, since that system uses a peculiar\n      debugging format which GNU CC does not know about.  However, `-g'\n      will work if you also use GAS and GDB in conjunction with GCC.  We\n      highly recommend using GAS for all HP-PA configurations.\n \n-     You should be using GAS-2.3 (or later) along with GDB-4.12 (or\n+     You should be using GAS-2.6 (or later) along with GDB-4.16 (or\n      later).  These can be retrieved from all the traditional GNU ftp\n      archive sites.\n \n-     Build GAS and install the resulting binary as:\n-\n-          /usr/local/lib/gcc-lib/CONFIGURATION/GCCVERSION/as\n-\n-     where CONFIGURATION is the configuration name (perhaps\n-     `hpNNN-hpux') and GCCVERSION is the GNU CC version number.  Do\n-     this *before* starting the build process, otherwise you will get\n-     errors from the HPUX assembler while building `libgcc2.a'.  The\n-     command\n-\n-          make install-dir\n+     GAS will need to be installed into a directory before `/bin',\n+     `/usr/bin', and `/usr/ccs/bin' in your search path.  You should\n+     install GAS before you build GNU CC.\n \n-     will create the necessary directory hierarchy so you can install\n-     GAS before building GCC.\n-\n-     To enable debugging, configure GNU CC with the `--with-gnu-as'\n-     option before building.\n-\n-     It has been reported that GNU CC produces invalid assembly code for\n-     1.1 machines running HP-UX 8.02 when using the HP assembler.\n-     Typically the errors look like this:\n-          as: bug.s @line#15 [err#1060]\n-            Argument 0 or 2 in FARG upper\n-                   - lookahead = ARGW1=FR,RTNVAL=GR\n-          as: foo.s @line#28 [err#1060]\n-            Argument 0 or 2 in FARG upper\n-                   - lookahead = ARGW1=FR\n-\n-     You can check the version of HP-UX you are running by executing\n-     the command `uname -r'.   If you are indeed running HP-UX 8.02 on\n-     a PA and using the HP assembler then configure GCC with\n-     \"hpNNN-hpux8.02\".\n+     To enable debugging, you must configure GNU CC with the\n+     `--with-gnu-as' option before building.\n \n `i370-*-*'\n      This port is very preliminary and has many known bugs.  We hope to\n      have a higher-quality port for this machine soon.\n \n-`i386-*-linuxoldld'\n-     Use this configuration to generate a.out binaries on Linux if you\n-     do not have gas/binutils version 2.5.2 or later installed. This is\n-     an obsolete configuration.\n+`i386-*-linux-gnuoldld'\n+     Use this configuration to generate `a.out' binaries on Linux-based\n+     GNU systems if you do not have gas/binutils version 2.5.2 or later\n+     installed. This is an obsolete configuration.\n \n-`i386-*-linuxaout'\n-     Use this configuration to generate a.out binaries on Linux. This\n-     configuration is being superseded. You must use gas/binutils\n-     version 2.5.2 or later.\n+`i386-*-linux-gnuaout'\n+     Use this configuration to generate `a.out' binaries on Linux-based\n+     GNU systems. This configuration is being superseded. You must use\n+     gas/binutils version 2.5.2 or later.\n \n-`i386-*-linux'\n-     Use this configuration to generate ELF binaries on Linux.  You must\n-     use gas/binutils version 2.5.2 or later.\n+`i386-*-linux-gnu'\n+     Use this configuration to generate ELF binaries on Linux-based GNU\n+     systems.  You must use gas/binutils version 2.5.2 or later.\n \n `i386-*-sco'\n      Compilation with RCC is recommended.  Also, it may be a good idea\n@@ -736,6 +790,27 @@ special things you must know:\n `i386-*-sco3.2v4'\n      Use this configuration for SCO release 3.2 version 4.\n \n+`i386-*-sco3.2v5*'\n+     Use this for the SCO OpenServer Release family including 5.0.0,\n+     5.0.2, 5.0.4, Internet FastStart 1.0, and Internet FastStart 1.1.\n+\n+     GNU CC can generate ELF binaries (if you specify `-melf') or COFF\n+     binaries (the default).  If you are going to build your compiler\n+     in ELF mode (once you have bootstrapped the first stage compiler)\n+     you *must* specify `-melf' as part of `CC', *not* `CFLAGS', for\n+     example as `CC=\"stage1/xgcc -melf -Bstage1/\" '.  If you do not do\n+     this, the bootstrap will generate incorrect versions of `libgcc.a'.\n+\n+     You must have TLS597 (from ftp.sco.com/TLS) installed for ELF\n+     binaries to work correctly. Note that Open Server 5.0.2 *does*\n+     need TLS597 installed.\n+\n+     *NOTE:* You must follow the instructions about invoking `make\n+     bootstrap' because the native OpenServer compiler builds a\n+     `cc1plus' that will not correctly parse many valid C++ programs.\n+     You must do a `make bootstrap' if you are building with the native\n+     compiler.\n+\n `i386-*-isc'\n      It may be a good idea to link with GNU malloc instead of the\n      malloc that comes with the system.\n@@ -748,8 +823,8 @@ special things you must know:\n      that comes with the system.\n \n `i386-ibm-aix'\n-     You need to use GAS version 2.1 or later, and and LD from GNU\n-     binutils version 2.2 or later.\n+     You need to use GAS version 2.1 or later, and LD from GNU binutils\n+     version 2.2 or later.\n \n `i386-sequent-bsd'\n      Go to the Berkeley universe before compiling.  In addition, you\n@@ -773,7 +848,7 @@ special things you must know:\n      Sun systems.\n \n `i[345]86-*-winnt3.5'\n-     This version requires a GAS that has not let been released.  Until\n+     This version requires a GAS that has not yet been released.  Until\n      it is, you can get a prebuilt binary version via anonymous ftp from\n      `cs.washington.edu:pub/gnat' or `cs.nyu.edu:pub/gnat'. You must\n      also use the Microsoft header files from the Windows NT 3.5 SDK.\n@@ -829,9 +904,13 @@ special things you must know:\n      You can tell GNU CC to use the GNU assembler and linker, by\n      specifying `--with-gnu-as --with-gnu-ld' when configuring.  These\n      will produce COFF format object files and executables;  otherwise\n-     GNU CC will use the installed tools, which produce a.out format\n+     GNU CC will use the installed tools, which produce `a.out' format\n      executables.\n \n+`m32r-*-elf'\n+     Mitsubishi M32R processor.  This configuration is intended for\n+     embedded systems.\n+\n `m68000-hp-bsd'\n      HP 9000 series 200 running BSD.  Note that the C compiler that\n      comes with this system cannot compile GNU CC; contact\n@@ -842,6 +921,20 @@ special things you must know:\n      Also, you must fix a kernel bug.  Details in the file\n      `README.ALTOS'.\n \n+`m68k-apple-aux'\n+     Apple Macintosh running A/UX.  You may configure GCC  to use\n+     either the system assembler and linker or the GNU assembler and\n+     linker.  You should use the GNU configuration if you can,\n+     especially if you also want to use GNU C++.  You enabled that\n+     configuration with + the `--with-gnu-as' and `--with-gnu-ld'\n+     options to `configure'.\n+\n+     Note the C compiler that comes with this system cannot compile GNU\n+     CC.  You can fine binaries of GNU CC for bootstrapping on\n+     `jagubox.gsfc.nasa.gov'.  You will also a patched version of\n+     `/bin/ld' there that raises some of the arbitrary limits found in\n+     the original.\n+\n `m68k-att-sysv'\n      AT&T 3b1, a.k.a. 7300 PC.  Special procedures are needed to\n      compile GNU CC with this machine's standard C compiler, due to\n@@ -853,7 +946,7 @@ special things you must know:\n      However, the following procedure might work.  We are unable to\n      test it.\n \n-       1. Comment out the `#include \"config.h\"' line on line 37 of\n+       1. Comment out the `#include \"config.h\"' line near the start of\n           `cccp.c' and do `make cpp'.  This makes a preliminary version\n           of GNU cpp.\n \n@@ -1148,48 +1241,79 @@ special things you must know:\n      prevent the linker from producing a correct library or runnable\n      executable.\n \n+     By default, AIX 4.1 produces code that can be used on either Power\n+     or PowerPC processors.\n+\n+     You can specify a default version for the `-mcpu='CPU_TYPE switch\n+     by using the configure option `--with-cpu-'CPU_TYPE.\n+\n `powerpc-*-elf'\n `powerpc-*-sysv4'\n      PowerPC system in big endian mode, running System V.4.\n \n-     This configuration is currently under development.\n+     You can specify a default version for the `-mcpu='CPU_TYPE switch\n+     by using the configure option `--with-cpu-'CPU_TYPE.\n+\n+`powerpc-*-linux-gnu'\n+     PowerPC system in big endian mode, running the Linux-based GNU\n+     system.\n+\n+     You can specify a default version for the `-mcpu='CPU_TYPE switch\n+     by using the configure option `--with-cpu-'CPU_TYPE.\n \n `powerpc-*-eabiaix'\n      Embedded PowerPC system in big endian mode with -mcall-aix\n-     selected as the default.  This system is currently under\n-     development.\n+     selected as the default.\n+\n+     You can specify a default version for the `-mcpu='CPU_TYPE switch\n+     by using the configure option `--with-cpu-'CPU_TYPE.\n \n `powerpc-*-eabisim'\n      Embedded PowerPC system in big endian mode for use in running\n-     under the PSIM simulator.  This system is currently under\n-     development.\n+     under the PSIM simulator.\n+\n+     You can specify a default version for the `-mcpu='CPU_TYPE switch\n+     by using the configure option `--with-cpu-'CPU_TYPE.\n \n `powerpc-*-eabi'\n      Embedded PowerPC system in big endian mode.\n \n-     This configuration is currently under development.\n+     You can specify a default version for the `-mcpu='CPU_TYPE switch\n+     by using the configure option `--with-cpu-'CPU_TYPE.\n \n `powerpcle-*-elf'\n `powerpcle-*-sysv4'\n      PowerPC system in little endian mode, running System V.4.\n \n-     This configuration is currently under development.\n+     You can specify a default version for the `-mcpu='CPU_TYPE switch\n+     by using the configure option `--with-cpu-'CPU_TYPE.\n \n-`powerpcle-*-sysv4'\n-     Embedded PowerPC system in little endian mode.\n+`powerpcle-*-solaris2*'\n+     PowerPC system in little endian mode, running Solaris 2.5.1 or\n+     higher.\n \n-     This system is currently under development.\n+     You can specify a default version for the `-mcpu='CPU_TYPE switch\n+     by using the configure option `--with-cpu-'CPU_TYPE.  Beta\n+     versions of the Sun 4.0 compiler do not seem to be able to build\n+     GNU CC correctly.  There are also problems with the host assembler\n+     and linker that are fixed by using the GNU versions of these tools.\n \n `powerpcle-*-eabisim'\n      Embedded PowerPC system in little endian mode for use in running\n      under the PSIM simulator.\n \n-     This system is currently under development.\n-\n `powerpcle-*-eabi'\n      Embedded PowerPC system in little endian mode.\n \n-     This configuration is currently under development.\n+     You can specify a default version for the `-mcpu='CPU_TYPE switch\n+     by using the configure option `--with-cpu-'CPU_TYPE.\n+\n+`powerpcle-*-winnt'\n+`powerpcle-*-pe'\n+     PowerPC system in little endian mode running Windows NT.\n+\n+     You can specify a default version for the `-mcpu='CPU_TYPE switch\n+     by using the configure option `--with-cpu-'CPU_TYPE.\n \n `vax-dec-ultrix'\n      Don't try compiling with Vax C (`vcc').  It produces incorrect code\n@@ -1380,10 +1504,10 @@ supports.\n \n    If you want to install libraries to use with the cross-compiler,\n such as a standard C library, put them in the directory\n-`/usr/local/TARGET/lib'; installation of GNU CC copies all all the\n-files in that subdirectory into the proper place for GNU CC to find\n-them and link with them.  Here's an example of copying some libraries\n-from a target machine:\n+`/usr/local/TARGET/lib'; installation of GNU CC copies all the files in\n+that subdirectory into the proper place for GNU CC to find them and\n+link with them.  Here's an example of copying some libraries from a\n+target machine:\n \n      ftp TARGET-MACHINE\n      lcd /usr/local/TARGET/lib\n@@ -1524,7 +1648,7 @@ from the host machine, the cross-compiler can use them also.\n    Otherwise, you're on your own in finding header files to use when\n cross-compiling.\n \n-   When you have found suitable header files, put them in\n+   When you have found suitable header files, put them in the directory\n `/usr/local/TARGET/include', before building the cross compiler.  Then\n installation will run fixincludes properly and install the corrected\n versions of the header files where the compiler will use them.\n@@ -1604,6 +1728,12 @@ it by using the following command to compile GNU CC with Sun CC:\n \n      make CC=\"TERMCAP=x OBJS=x LIBFUNCS=x STAGESTUFF=x cc\"\n \n+   SunOS 4.1.3 and 4.1.3_U1 have bugs that can cause intermittent core\n+dumps when compiling GNU CC.  A common symptom is an internal compiler\n+error which does not recur if you run it again.  To fix the problem,\n+install Sun recommended patch 100726 (for SunOS 4.1.3) or 101508 (for\n+SunOS 4.1.3_U1), or upgrade to a later SunOS release.\n+\n Installing GNU CC on VMS\n ========================\n "}, {"sha": "34c0d20b677d098f2e61a1ad5f6311a775bd4b2e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 62, "deletions": 36, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -73,6 +73,7 @@ LEX = flex\n LEXFLAGS =\n AR = ar\n AR_FLAGS = rc\n+LN = @symbolic_link@\n DLLTOOL = dlltool\n SHELL = /bin/sh\n # on sysV, define this as cp.\n@@ -174,6 +175,14 @@ SYSTEM_HEADER_DIR = /usr/include\n # Control whether to run fixproto.\n STMP_FIXPROTO = stmp-fixproto\n \n+# Test to see whether <float.h> exists in the system header files,\n+# and is not derived from GCC.\n+FLOAT_H_TEST = \\\n+  [ -f $(SYSTEM_HEADER_DIR)/float.h ] && \\\n+  if grep 'ifndef _FLOAT_H___' $(SYSTEM_HEADER_DIR)/float.h >/dev/null; \\\n+  then false; \\\n+  else :; fi\n+\n # Test to see whether <limits.h> exists in the system header files.\n LIMITS_H_TEST = [ -f $(SYSTEM_HEADER_DIR)/limits.h ]\n \n@@ -427,6 +436,9 @@ CRTSTUFF_T_CFLAGS =\n # Extra flags to use when compiling [m]crt0.o.\n CRT0STUFF_T_CFLAGS = \n \n+# \"t\" or nothing, for building multilibbed versions of, say, crtbegin.o.\n+T =\n+\n # End of variables for you to override.\n \n # Definition of `all' is here so that new rules inserted by sed\n@@ -647,9 +659,6 @@ RTL_H = rtl.h rtl.def machmode.h machmode.def\n TREE_H = tree.h real.h tree.def machmode.h machmode.def\n BYTECODE_H = bytecode.h bc-emit.h bc-optab.h\n BASIC_BLOCK_H = basic-block.h bitmap.h\n-\n-# \"t\" or nothing, for building multilibbed versions of, say, crtbegin.o.\n-T =\n #\f\n # Language makefile fragments.\n \n@@ -702,9 +711,9 @@ $(srcdir)/config.in: $(srcdir)/cstamp-h.in\n $(srcdir)/cstamp-h.in: $(srcdir)/configure.in $(srcdir)/acconfig.h\n \tcd $(srcdir) && autoheader\n \techo timestamp > $(srcdir)/cstamp-h.in\n-config.h: cstamp-h ; @true\n+auto-config.h: cstamp-h ; @true\n cstamp-h: config.in config.status\n-\tCONFIG_HEADERS=config.h:config.in $(SHELL) config.status\n+\tCONFIG_HEADERS=auto-config.h:config.in $(SHELL) config.status\n \n # Really, really stupid make features, such as SUN's KEEP_STATE, may force\n # a target to build even if it is up-to-date.  So we must verify that\n@@ -731,7 +740,7 @@ start.encap: native xgcc specs $(LIBGCC1) xlimits.h lang.start.encap\n rest.encap: stmp-headers $(LIBGCC) $(STMP_FIXPROTO) $(EXTRA_PARTS) lang.rest.encap\n # This is what is made with the host's compiler\n # whether making a cross compiler or not.\n-native: config.status config.h cpp $(LANGUAGES) \\\n+native: config.status auto-config.h cpp $(LANGUAGES) \\\n \t$(EXTRA_PASSES) $(EXTRA_PROGRAMS) $(USE_COLLECT2)\n \n # Define the names for selecting languages in LANGUAGES.\n@@ -766,8 +775,9 @@ stamp-objlist: $(OBJS) $(BC_OBJS)\n # We call this executable `xgcc' rather than `gcc'\n # to avoid confusion if the current directory is in the path\n # and CC is `gcc'.  It is renamed to `gcc' when it is installed.\n-xgcc: gcc.o version.o choose-temp.o pexecute.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ gcc.o version.o \\\n+xgcc: gcc.o version.o choose-temp.o pexecute.o prefix.o version.o \\\n+   $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ gcc.o prefix.o version.o \\\n \t  choose-temp.o pexecute.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Dump a specs file to make -B./ read these specs over installed ones.\n@@ -790,8 +800,10 @@ gfloat.h: $(FLOAT_H)\n \tcp $(FLOAT_H) gfloat.h\n \n # Create float.h source for the native machine.\n+# Make it empty if we can use the system float.h without changes.\n float.h-nat: enquire\n \t-./enquire -f > tmp-float.h\n+\tgrep '#define [^_]' tmp-float.h >/dev/null || echo > tmp-float.h\n \tmv tmp-float.h float.h-nat\n \n # Create a dummy float.h source for a cross-compiler.\n@@ -808,8 +820,15 @@ float.h-cross:\n enquire: enquire.o $(GCC_PARTS)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ENQUIRE_LDFLAGS) enquire.o -o $@\n enquire.o: $(srcdir)/enquire.c $(GCC_PASSES) stmp-int-hdrs\n-# Breaking this line caused a problem with one version of GNU make.\n-\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(ENQUIRE_CFLAGS) -I. -c $(srcdir)/enquire.c\n+\trm -f include/float.h\n+\tif $(FLOAT_H_TEST); then \\\n+\t  SYS_FLOAT_H_WRAP=1; \\\n+\telse :; \\\n+\t  SYS_FLOAT_H_WRAP=0; \\\n+\tfi; \\\n+\t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(ENQUIRE_CFLAGS) \\\n+\t  -DSYS_FLOAT_H_WRAP=$$SYS_FLOAT_H_WRAP \\\n+\t  -I. -c $(srcdir)/enquire.c\n \n # Build the version of limits.h that we will install.\n xlimits.h: glimits.h limitx.h limity.h\n@@ -1248,6 +1267,10 @@ version.o: version.c\n obstack.o: obstack.c\n choose-temp.o: choose-temp.c\n pexecute.o: pexecute.c\n+prefix.o: prefix.c $(CONFIG_H) Makefile\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t-DPREFIX=\\\"$(prefix)\\\" \\\n+\t  -c `echo $(srcdir)/prefix.c | sed 's,^\\./,,'`\n \n convert.o: convert.c $(CONFIG_H) $(TREE_H) flags.h convert.h\n \n@@ -1285,7 +1308,7 @@ expr.o : expr.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h function.h regs.h \\\n    typeclass.h bytecode.h bc-opcode.h bc-typecd.h bc-typecd.def bc-optab.h \\\n    bc-emit.h modemap.def hard-reg-set.h\n calls.o : calls.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h expr.h insn-codes.h \\\n-   insn-flags.h\n+   insn-flags.h regs.h\n expmed.o : expmed.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h  \\\n    insn-flags.h insn-config.h insn-codes.h expr.h recog.h real.h\n explow.o : explow.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h hard-reg-set.h \\\n@@ -1302,28 +1325,29 @@ dwarfout.o : dwarfout.c $(CONFIG_H) $(TREE_H) $(RTL_H) dwarf.h flags.h \\\n dwarf2out.o : dwarf2out.c $(CONFIG_H) $(TREE_H) $(RTL_H) dwarf2.h flags.h \\\n    insn-config.h reload.h output.h defaults.h hard-reg-set.h regs.h expr.h\n xcoffout.o : xcoffout.c $(CONFIG_H) $(TREE_H) $(RTL_H) xcoffout.h flags.h\n-emit-rtl.o : emit-rtl.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h \\\n-   function.h regs.h insn-config.h insn-codes.h real.h expr.h bytecode.h \\\n-   bc-opcode.h bc-typecd.h bc-typecd.def bc-optab.h bc-emit.h bc-opname.h\n+emit-rtl.o : emit-rtl.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h except.h \\\n+   function.h regs.h insn-config.h recog.h real.h expr.h obstack.h \\\n+   bytecode.h bc-opcode.h bc-typecd.h bc-typecd.def bc-optab.h bc-emit.h \\\n+   bc-opname.h\n real.o : real.c $(CONFIG_H) $(TREE_H)\n getpwd.o : getpwd.c $(CONFIG_H)\n \n integrate.o : integrate.c $(CONFIG_H) $(RTL_H) $(TREE_H) flags.h integrate.h \\\n    insn-flags.h insn-config.h insn-codes.h expr.h real.h regs.h function.h \\\n-   bytecode.h\n+   bytecode.h output.h recog.h except.h\n \n jump.o : jump.c $(CONFIG_H) $(RTL_H) flags.h hard-reg-set.h regs.h \\\n-   insn-config.h insn-flags.h insn-codes.h expr.h real.h\n+   insn-config.h insn-flags.h recog.h expr.h real.h except.h\n stupid.o : stupid.c $(CONFIG_H) $(RTL_H) regs.h hard-reg-set.h flags.h\n \n cse.o : cse.c $(CONFIG_H) $(RTL_H) regs.h hard-reg-set.h flags.h real.h \\\n    insn-config.h recog.h\n profile.o : profile.c $(CONFIG_H) $(RTL_H) flags.h insn-flags.h gcov-io.h \\\n-   tree.h output.h\n+   tree.h output.h regs.h\n loop.o : loop.c $(CONFIG_H) $(RTL_H) flags.h loop.h insn-config.h \\\n    insn-flags.h insn-codes.h regs.h hard-reg-set.h recog.h expr.h real.h\n-unroll.o : unroll.c $(CONFIG_H) $(RTL_H) insn-config.h insn-codes.h \\\n-   integrate.h regs.h flags.h expr.h loop.h\n+unroll.o : unroll.c $(CONFIG_H) $(RTL_H) insn-config.h integrate.h regs.h \\\n+   recog.h flags.h expr.h loop.h\n flow.o : flow.c $(CONFIG_H) $(RTL_H) flags.h insn-config.h \\\n    $(BASIC_BLOCK_H) regs.h hard-reg-set.h output.h\n combine.o : combine.c $(CONFIG_H) $(RTL_H) flags.h  \\\n@@ -1722,8 +1746,8 @@ bytecode.maintainer-clean: bytecode.clean\n cpp: $(CCCP)\n \t-rm -f cpp$(exeext)\n \t$(LN) $(CCCP)$(exeext) cpp$(exeext)\n-cccp: cccp.o cexp.o version.o $(LIBDEPS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ cccp.o cexp.o \\\n+cccp: cccp.o cexp.o version.o prefix.o $(LIBDEPS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ cccp.o cexp.o prefix.o \\\n \t  version.o $(LIBS)\n cexp.o: $(srcdir)/cexp.c $(CONFIG_H)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/cexp.c\n@@ -1743,9 +1767,9 @@ cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status\n \t  -c `echo $(srcdir)/cccp.c | sed 's,^\\./,,'`\n \n cppmain: cppmain.o cpplib.o cpphash.o cppalloc.o cpperror.o cppexp.o \\\n-  version.o $(LIBDEPS)\n+  prefix.o version.o $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ cppmain.o cpplib.o cpphash.o \\\n-\t  cppalloc.o cpperror.o cppexp.o version.o $(LIBS)\n+\t  cppalloc.o cpperror.o cppexp.o prefix.o version.o $(LIBS)\n \n cppmain.o: cppmain.c $(CONFIG_H) cpplib.h\n \n@@ -1879,11 +1903,13 @@ stmp-int-hdrs: stmp-fixinc $(USER_H) xlimits.h\n \tchmod a+r include/README\n \ttouch stmp-int-hdrs\n \n-# Build the complete include directory.\n+# Build the complete include directory, including float.h.\n stmp-headers: stmp-int-hdrs gfloat.h\n \trm -f include/float.h\n-\tcp gfloat.h include/float.h\n-\tchmod a+r include/float.h\n+\tif [ -s gfloat.h ]; then \\\n+\t  cp gfloat.h include/float.h && \\\n+\t  chmod a+r include/float.h; \\\n+\telse :; fi\n \ttouch stmp-headers\n \n # Build fixed copies of system files.\n@@ -1937,10 +1963,10 @@ xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos Makefil\n \trm -rf fixtmp.c\n \n fix-header: fix-header.o scan-decls.o scan.o xsys-protos.h $(HOST_LIBDEPS) \\\n-   cpplib.o cpphash.o cppalloc.o cppexp.o cpperror.o version.o\n+   cpplib.o cpphash.o cppalloc.o cppexp.o cpperror.o prefix.o version.o\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ fix-header.o \\\n-\t   scan-decls.o scan.o cpplib.o cpphash.o cppalloc.o version.o \\\n-\t   cppexp.o $(HOST_LIBS)\n+\t   scan-decls.o scan.o cpplib.o cpphash.o cppalloc.o prefix.o \\\n+\t   version.o cppexp.o $(HOST_LIBS)\n \n fix-header.o: fix-header.c obstack.h scan.h xsys-protos.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c\n@@ -2041,7 +2067,7 @@ mostlyclean: bytecode.mostlyclean lang.mostlyclean\n \t-rm -f */stamp-* */tmp-*\n # Delete debugging dump files.\n \t-rm -f *.greg *.lreg *.combine *.flow *.cse *.jump *.rtl *.tree *.loop\n-\t-rm -f *.dbr *.jump2 *.sched *.cse2 *.sched2 *.stack *.regmove\n+\t-rm -f *.dbr *.jump2 *.sched *.cse2 *.sched2 *.stack *.addressof *.regmove\n \t-rm -f */*.greg */*.lreg */*.combine */*.flow */*.cse */*.jump */*.rtl\n \t-rm -f */*.tree */*.loop */*.dbr */*.jump2 */*.sched */*.cse2\n \t-rm -f */*.sched2 */*.stack */*.regmove\n@@ -2088,7 +2114,7 @@ clean: mostlyclean bytecode.clean lang.clean\n # Delete all files that users would normally create\n # while building and installing GCC.\n distclean: clean bytecode.distclean lang.distclean\n-\t-rm -f tm.h config.h config2.h tconfig.h hconfig.h md cstamp-h\n+\t-rm -f tm.h config.h auto-config.h tconfig.h hconfig.h md cstamp-h\n \t-rm -f config.status config.run config.cache config.bak\n \t-rm -f Make-lang Make-hooks Make-host Make-target\n \t-rm -f Makefile specs.h options.h *.oaux\n@@ -2206,12 +2232,14 @@ install-common: native installdirs $(EXTRA_PARTS) lang.install-common\n \t  if [ x\"$$file\" != x.. ]; then \\\n \t    rm -f $(libsubdir)/$$file; \\\n \t    $(INSTALL_DATA) $$file $(libsubdir)/$$file; \\\n+\t    chmod a-x $(libsubdir)/$$file; \\\n \t  else true; fi; \\\n \tdone\n # Don't mess with specs if it doesn't exist yet.\n \t-if [ -f specs ] ; then \\\n \t  rm -f $(libsubdir)/specs; \\\n \t  $(INSTALL_DATA) specs $(libsubdir)/specs; \\\n+\t  chmod a-x $(libsubdir)/specs; \\\n \tfi\n # Install protoize if it was compiled.\n \t-if [ -f protoize$(exeext) ]; \\\n@@ -2265,7 +2293,7 @@ install-info: doc installdirs lang.install-info\n \n # Install the man pages.\n install-man: installdirs $(srcdir)/gcc.1 $(srcdir)/cccp.1 lang.install-man\n-\t-if [ -f gcc-cross ] ; then \\\n+\t-if [ -f gcc-cross$(exeext) ] ; then \\\n \t  rm -f $(mandir)/$(GCC_CROSS_NAME)$(manext); \\\n \t  $(INSTALL_DATA) $(srcdir)/gcc.1 $(mandir)/$(GCC_CROSS_NAME)$(manext); \\\n \t  chmod a-x $(mandir)/$(GCC_CROSS_NAME)$(manext); \\\n@@ -2483,7 +2511,7 @@ check-g77: testsuite/site.exp\n TAGS: force\n \tcd $(srcdir);\t\t\t\t\t\t\t\\\n \tmkdir temp;\t\t\t\t\t\t\t\\\n-\tmv -f c-parse.[ch] objc-parse.c cexp.c =*.[chy] temp;\t\t\\\n+\tmv -f c-parse.[ch] cexp.c =*.[chy] temp;\t\t\\\n \tetags *.y *.h *.c;\t\t\t\t\t\t\\\n \tmv temp/* .;\t\t\t\t\t\t\t\\\n \trmdir temp\n@@ -2507,8 +2535,7 @@ gcc.xtar: distdir\n # This target exists to do the initial work before the language specific\n # stuff gets done.\n distdir-start: doc $(srcdir)/INSTALL $(srcdir)/c-parse.y $(srcdir)/c-gperf.h \\\n-  $(srcdir)/objc-parse.y $(srcdir)/c-parse.c $(srcdir)/objc-parse.c \\\n-  $(srcdir)/cexp.c\n+  $(srcdir)/c-parse.c $(srcdir)/cexp.c\n \t@if grep -s \"for version ${mainversion}\" gcc.texi > /dev/null; \\\n \tthen true; \\\n \telse echo \"You must update the version number in \\`gcc.texi'\"; sleep 10;\\\n@@ -2525,7 +2552,6 @@ distdir-start: doc $(srcdir)/INSTALL $(srcdir)/c-parse.y $(srcdir)/c-gperf.h \\\n \tmkdir tmp\n \tmkdir tmp/config\n \tmkdir tmp/ginclude\n-\tmkdir tmp/objc\n \tfor file in *[0-9a-zA-Z+]; do \\\n \t  $(LN) $$file tmp; \\\n \tdone"}, {"sha": "5240ab8f44d2bd70d73d81efd12ee8ae0aa3c2f2", "filename": "gcc/acconfig.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facconfig.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,8 +1,3 @@\n-\n-/* Include the old config.h as config2.h to simplify the transition\n-   to autoconf.  */\n-#include \"config2.h\"\n-\n /* Whether malloc must be declared even if <stdlib.h> is included.  */\n #undef NEED_DECLARATION_MALLOC\n "}, {"sha": "18756d5698047456d8077cb0a576857ab53c5d4a", "filename": "gcc/bc-optab.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fbc-optab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fbc-optab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbc-optab.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,5 @@\n /* Bytecode conversion definitions for GNU C-compiler.\n-   Copyright (C) 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -20,6 +20,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n #include \"config.h\"\n+#include <stdio.h>\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"machmode.h\""}, {"sha": "f982f46392ad755d9d9a2e5c89175d058dfc32d6", "filename": "gcc/bitmap.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -18,8 +18,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"flags.h\"\n #include \"obstack.h\""}, {"sha": "bdedef351a795a139621fd5af025e87d102a594d", "filename": "gcc/bitmap.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -86,10 +86,10 @@ extern int bitmap_bit_p PROTO((bitmap, int));\n \n /* Debug functions to print a bitmap linked list.  */\n extern void bitmap_debug PROTO((bitmap));\n-extern void bitmap_debug_file STDIO_PROTO((FILE *, bitmap));\n+extern void bitmap_debug_file PROTO((FILE *, bitmap));\n \n /* Print a bitmap */\n-extern void bitmap_print STDIO_PROTO((FILE *, bitmap, char *, char *));\n+extern void bitmap_print PROTO((FILE *, bitmap, char *, char *));\n \n /* Initialize a bitmap header.  */\n extern bitmap bitmap_initialize PROTO((bitmap));"}, {"sha": "6900324c53faf68f26226ce1525835a31c7b1642", "filename": "gcc/c-decl.c", "status": "modified", "additions": 63, "deletions": 12, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -27,12 +27,12 @@ Boston, MA 02111-1307, USA.  */\n    line numbers.  For example, the CONST_DECLs for enum values.  */\n \n #include \"config.h\"\n+#include <stdio.h>\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"output.h\"\n #include \"c-tree.h\"\n #include \"c-lex.h\"\n-#include <stdio.h>\n \n /* In grokdeclarator, distinguish syntactic contexts of declarators.  */\n enum decl_context\n@@ -471,9 +471,14 @@ int explicit_flag_signed_bitfields = 0;\n \n int flag_no_ident = 0;\n \n-/* Nonzero means warn about implicit declarations.  */\n+/* Nonzero means warn about use of implicit int. */\n+\n+int warn_implicit_int;\n \n-int warn_implicit;\n+/* Nonzero means message about use of implicit function declarations;\n+ 1 means warning; 2 means error. */\n+\n+int mesg_implicit_function_declaration;\n \n /* Nonzero means give string constants the type `const char *'\n    to get extra warnings from them.  These warnings will be too numerous\n@@ -648,10 +653,24 @@ c_decode_option (p)\n     flag_no_ident = 0;\n   else if (!strcmp (p, \"-ansi\"))\n     flag_no_asm = 1, flag_no_nonansi_builtin = 1;\n+  else if (!strcmp (p, \"-Werror-implicit-function-declaration\"))\n+    mesg_implicit_function_declaration = 2;\n+  else if (!strcmp (p, \"-Wimplicit-function-declaration\"))\n+    mesg_implicit_function_declaration = 1;\n+  else if (!strcmp (p, \"-Wno-implicit-function-declaration\"))\n+    mesg_implicit_function_declaration = 0;\n+  else if (!strcmp (p, \"-Wimplicit-int\"))\n+    warn_implicit_int = 1;\n+  else if (!strcmp (p, \"-Wno-implicit-int\"))\n+    warn_implicit_int = 0;\n   else if (!strcmp (p, \"-Wimplicit\"))\n-    warn_implicit = 1;\n+    {\n+      warn_implicit_int = 1;\n+      if (mesg_implicit_function_declaration != 2)\n+        mesg_implicit_function_declaration = 1;\n+    }\n   else if (!strcmp (p, \"-Wno-implicit\"))\n-    warn_implicit = 0;\n+    warn_implicit_int = 0, mesg_implicit_function_declaration = 0;\n   else if (!strcmp (p, \"-Wwrite-strings\"))\n     warn_write_strings = 1;\n   else if (!strcmp (p, \"-Wno-write-strings\"))\n@@ -751,7 +770,8 @@ c_decode_option (p)\n \t warning about not using it without also specifying -O.  */\n       if (warn_uninitialized != 1)\n \twarn_uninitialized = 2;\n-      warn_implicit = 1;\n+      warn_implicit_int = 1;\n+      mesg_implicit_function_declaration = 1;\n       warn_return_type = 1;\n       warn_unused = 1;\n       warn_switch = 1;\n@@ -2467,9 +2487,15 @@ implicitly_declare (functionid)\n \n   rest_of_decl_compilation (decl, NULL_PTR, 0, 0);\n \n-  if (warn_implicit && implicit_warning)\n-    warning (\"implicit declaration of function `%s'\",\n-\t     IDENTIFIER_POINTER (functionid));\n+  if (mesg_implicit_function_declaration && implicit_warning)\n+    {\n+      if (mesg_implicit_function_declaration == 2)\n+        error (\"implicit declaration of function `%s'\",\n+                 IDENTIFIER_POINTER (functionid));\n+      else\n+        warning (\"implicit declaration of function `%s'\",\n+                 IDENTIFIER_POINTER (functionid));\n+    }\n   else if (warn_traditional && traditional_warning)\n     warning (\"function `%s' was previously declared within a block\",\n \t     IDENTIFIER_POINTER (functionid));\n@@ -3880,6 +3906,9 @@ finish_decl (decl, init, asmspec_tree)\n \t  else\n \t    error_with_decl (decl, \"storage size of `%s' isn't constant\");\n \t}\n+\n+      if (TREE_USED  (type))\n+\tTREE_USED (decl) = 1;\n     }\n \n   /* If this is a function and an assembler name is specified, it isn't\n@@ -4361,9 +4390,9 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \t     For now, issue a warning if -Wreturn-type and this is a function,\n \t     or if -Wimplicit; prefer the former warning since it is more\n \t     explicit.  */\n-\t  if ((warn_implicit || warn_return_type) && funcdef_flag)\n+\t  if ((warn_implicit_int || warn_return_type) && funcdef_flag)\n \t    warn_about_return_type = 1;\n-\t  else if (warn_implicit)\n+\t  else if (warn_implicit_int)\n \t    warning (\"type defaults to `int' in declaration of `%s'\", name);\n \t}\n \n@@ -4709,6 +4738,18 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \t\t\t\t   convert (index_type, size),\n \t\t\t\t   convert (index_type, size_one_node)));\n \n+\t      /* If that overflowed, the array is too big.\n+\t\t ??? While a size of INT_MAX+1 technically shouldn't cause\n+\t\t an overflow (because we subtract 1), the overflow is recorded\n+\t\t during the conversion to index_type, before the subtraction.\n+\t\t Handling this case seems like an unnecessary complication.  */\n+\t      if (TREE_OVERFLOW (itype))\n+\t\t{\n+\t\t  error (\"size of array `%s' is too large\", name);\n+\t\t  type = error_mark_node;\n+\t\t  continue;\n+\t\t}\n+\n \t      if (size_varies)\n \t\titype = variable_size (itype);\n \t      itype = build_index_type (itype);\n@@ -4884,6 +4925,13 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \n   /* Now TYPE has the actual type.  */\n \n+  /* Did array size calculations overflow?  */\n+\n+  if (TREE_CODE (type) == ARRAY_TYPE\n+      && TYPE_SIZE (type)\n+      && TREE_OVERFLOW (TYPE_SIZE (type)))\n+    error (\"size of array `%s' is too large\", name);\n+\n   /* If this is declaring a typedef name, return a TYPE_DECL.  */\n \n   if (specbits & (1 << (int) RID_TYPEDEF))\n@@ -6211,7 +6259,10 @@ start_function (declspecs, declarator, prefix_attributes, attributes, nested)\n   /* If the declarator is not suitable for a function definition,\n      cause a syntax error.  */\n   if (decl1 == 0)\n-    return 0;\n+    {\n+      immediate_size_expand = old_immediate_size_expand;\n+      return 0;\n+    }\n \n   decl_attributes (decl1, prefix_attributes, attributes);\n "}, {"sha": "b5ed3deb652a57f8060a53505251f24010790a5f", "filename": "gcc/c-lang.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,5 @@\n /* Language-specific hook definitions for C front end.\n-   Copyright (C) 1991, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1995, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "bee6ce7059d1e272c64158e21079f80f18dc259d", "filename": "gcc/c-lex.c", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,5 @@\n /* Lexical analyzer for C and Objective C.\n-   Copyright (C) 1987, 88, 89, 92, 94, 95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 89, 92, 94-96, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -18,12 +18,12 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#include \"config.h\"\n \n #include <stdio.h>\n #include <errno.h>\n #include <setjmp.h>\n \n-#include \"config.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"input.h\"\n@@ -118,6 +118,8 @@ char *token_buffer;\t/* Pointer to token buffer.\n \t\t\t   Actual allocated length is maxtoken + 2.\n \t\t\t   This is not static because objc-parse.y uses it.  */\n \n+static int indent_level = 0;        /* Number of { minus number of }. */\n+\n /* Nonzero if end-of-file has been seen on input.  */\n static int end_of_file;\n \n@@ -747,6 +749,7 @@ check_newline ()\n \t      input_file_stack->line = old_lineno;\n \t      p->next = input_file_stack;\n \t      p->name = input_filename;\n+\t      p->indent_level = indent_level;\n \t      input_file_stack = p;\n \t      input_file_stack_tick++;\n \t      debug_start_source_file (input_filename);\n@@ -758,6 +761,14 @@ check_newline ()\n \t      if (input_file_stack->next)\n \t\t{\n \t\t  struct file_stack *p = input_file_stack;\n+\t\t  if (indent_level != p->indent_level)\n+\t\t    {\n+\t\t      warning_with_file_and_line \n+\t\t\t(p->name, old_lineno,\n+\t\t\t \"This file contains more `%c's than `%c's.\",\n+\t\t\t indent_level > p->indent_level ? '{' : '}',\n+\t\t\t indent_level > p->indent_level ? '}' : '{');\n+\t\t    }\n \t\t  input_file_stack = p->next;\n \t\t  free (p);\n \t\t  input_file_stack_tick++;\n@@ -816,6 +827,10 @@ check_newline ()\n \n   /* skip the rest of this line.  */\n  skipline:\n+#if !USE_CPPLIB\n+  if (c != '\\n' && c != EOF && nextchar >= 0)\n+    c = nextchar, nextchar = -1;\n+#endif\n   while (c != '\\n' && c != EOF)\n     c = GETC();\n   return c;\n@@ -1731,8 +1746,6 @@ yylex ()\n \t\telse if (! spec_long_long)\n \t\t  ansi_type = long_unsigned_type_node;\n \t\telse if (! spec_unsigned\n-\t\t\t /* Verify value does not overflow into sign bit.  */\n-\t\t\t && TREE_INT_CST_HIGH (yylval.ttype) >= 0\n \t\t\t && int_fits_type_p (yylval.ttype,\n \t\t\t\t\t     long_long_integer_type_node))\n \t\t  ansi_type = long_long_integer_type_node;\n@@ -2122,13 +2135,13 @@ yylex ()\n \t      break;\n \t    case '<':\n \t      if (c1 == '%')\n-\t\t{ value = '{'; goto done; }\n+\t\t{ value = '{'; indent_level++; goto done; }\n \t      if (c1 == ':')\n \t\t{ value = '['; goto done; }\n \t      break;\n \t    case '%':\n \t      if (c1 == '>')\n-\t\t{ value = '}'; goto done; }\n+\t\t{ value = '}'; indent_level--; goto done; }\n \t      break;\n \t    }\n \tUNGETC (c1);\n@@ -2145,6 +2158,16 @@ yylex ()\n       value = 1;\n       break;\n \n+    case '{':\n+      indent_level++;\n+      value = c;\n+      break;\n+\n+    case '}':\n+      indent_level--;\n+      value = c;\n+      break;\n+\n     default:\n       value = c;\n     }"}, {"sha": "8cfed9eb095e97dbabbeb2268e67a348349b17c2", "filename": "gcc/c-parse.c", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,6 +1,6 @@\n \n /*  A Bison parser, made from c-parse.y\n- by  Bison version A2.5 (Andrew Consortium)\n+ by  GNU Bison version 1.25\n   */\n \n #define YYBISON 1  /* Identify Bison output.  */\n@@ -404,7 +404,7 @@ static const short yyrline[] = { 0,\n #endif\n \n \n-#if YYDEBUG != 0\n+#if YYDEBUG != 0 || defined (YYERROR_VERBOSE)\n \n static const char * const yytname[] = {   \"$\",\"error\",\"$undefined.\",\"IDENTIFIER\",\n \"TYPENAME\",\"SCSPEC\",\"TYPESPEC\",\"TYPE_QUAL\",\"CONSTANT\",\"STRING\",\"ELLIPSIS\",\"SIZEOF\",\n@@ -1170,7 +1170,7 @@ static const short yycheck[] = {    40,\n     48,    49,    50,    51,    52\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/share/bison.simple\"\n+#line 3 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -1325,16 +1325,16 @@ int yyparse (void);\n #endif\n \f\n #if __GNUC__ > 1\t\t/* GNU C and GNU C++ define this.  */\n-#define __yy_memcpy(FROM,TO,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n+#define __yy_memcpy(TO,FROM,COUNT)\t__builtin_memcpy(TO,FROM,COUNT)\n #else\t\t\t\t/* not GNU C or C++ */\n #ifndef __cplusplus\n \n /* This is the most reliable way to avoid incompatibilities\n    in available built-in functions on various systems.  */\n static void\n-__yy_memcpy (from, to, count)\n-     char *from;\n+__yy_memcpy (to, from, count)\n      char *to;\n+     char *from;\n      int count;\n {\n   register char *f = from;\n@@ -1350,7 +1350,7 @@ __yy_memcpy (from, to, count)\n /* This is the most reliable way to avoid incompatibilities\n    in available built-in functions on various systems.  */\n static void\n-__yy_memcpy (char *from, char *to, int count)\n+__yy_memcpy (char *to, char *from, int count)\n {\n   register char *f = from;\n   register char *t = to;\n@@ -1363,7 +1363,7 @@ __yy_memcpy (char *from, char *to, int count)\n #endif\n #endif\n \f\n-#line 192 \"/usr/share/bison.simple\"\n+#line 196 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -1372,14 +1372,20 @@ __yy_memcpy (char *from, char *to, int count)\n    to the proper pointer type.  */\n \n #ifdef YYPARSE_PARAM\n+#ifdef __cplusplus\n+#define YYPARSE_PARAM_ARG void *YYPARSE_PARAM\n+#define YYPARSE_PARAM_DECL\n+#else /* not __cplusplus */\n+#define YYPARSE_PARAM_ARG YYPARSE_PARAM\n #define YYPARSE_PARAM_DECL void *YYPARSE_PARAM;\n-#else\n-#define YYPARSE_PARAM\n+#endif /* not __cplusplus */\n+#else /* not YYPARSE_PARAM */\n+#define YYPARSE_PARAM_ARG\n #define YYPARSE_PARAM_DECL\n-#endif\n+#endif /* not YYPARSE_PARAM */\n \n int\n-yyparse(YYPARSE_PARAM)\n+yyparse(YYPARSE_PARAM_ARG)\n      YYPARSE_PARAM_DECL\n {\n   register int yystate;\n@@ -1496,12 +1502,12 @@ yyparse(YYPARSE_PARAM)\n       if (yystacksize > YYMAXDEPTH)\n \tyystacksize = YYMAXDEPTH;\n       yyss = (short *) alloca (yystacksize * sizeof (*yyssp));\n-      __yy_memcpy ((char *)yyss1, (char *)yyss, size * sizeof (*yyssp));\n+      __yy_memcpy ((char *)yyss, (char *)yyss1, size * sizeof (*yyssp));\n       yyvs = (YYSTYPE *) alloca (yystacksize * sizeof (*yyvsp));\n-      __yy_memcpy ((char *)yyvs1, (char *)yyvs, size * sizeof (*yyvsp));\n+      __yy_memcpy ((char *)yyvs, (char *)yyvs1, size * sizeof (*yyvsp));\n #ifdef YYLSP_NEEDED\n       yyls = (YYLTYPE *) alloca (yystacksize * sizeof (*yylsp));\n-      __yy_memcpy ((char *)yyls1, (char *)yyls, size * sizeof (*yylsp));\n+      __yy_memcpy ((char *)yyls, (char *)yyls1, size * sizeof (*yylsp));\n #endif\n #endif /* no yyoverflow */\n \n@@ -3646,7 +3652,7 @@ case 395:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 487 \"/usr/share/bison.simple\"\n+#line 498 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;"}, {"sha": "7be030dcd1be58ef74cca5e3853ce0db103c723b", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 49, "deletions": 12, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -261,6 +261,12 @@ common_type (t1, t2)\n \t  return build_type_attribute_variant (t1, attributes);\n \t}\n \n+      /* Likewise, prefer long double to double even if same size.  */\n+      if (TYPE_MAIN_VARIANT (t1) == long_double_type_node\n+\t  || TYPE_MAIN_VARIANT (t2) == long_double_type_node)\n+\treturn build_type_attribute_variant (long_double_type_node,\n+\t\t\t\t\t     attributes);\n+\n       /* Otherwise prefer the unsigned one.  */\n \n       if (TREE_UNSIGNED (t1))\n@@ -507,6 +513,9 @@ comptypes (type1, type2)\n       if (maybe_objc_comptypes (t1, t2, 0) == 1)\n \tval = 1;\n       break;\n+\n+    default:\n+      break;\n     }\n   return attrval == 2 && val == 1 ? 2 : val;\n }\n@@ -1008,13 +1017,14 @@ default_conversion (exp)\n       type = type_for_size (MAX (TYPE_PRECISION (type),\n \t\t\t\t TYPE_PRECISION (integer_type_node)),\n \t\t\t    ((flag_traditional\n-\t\t\t      || TYPE_PRECISION (type) >= TYPE_PRECISION (integer_type_node))\n+\t\t\t      || (TYPE_PRECISION (type)\n+\t\t\t\t  >= TYPE_PRECISION (integer_type_node)))\n \t\t\t     && TREE_UNSIGNED (type)));\n       return convert (type, exp);\n     }\n \n   if (TREE_CODE (exp) == COMPONENT_REF\n-      && DECL_BIT_FIELD (TREE_OPERAND (exp, 1)))\n+      && DECL_C_BIT_FIELD (TREE_OPERAND (exp, 1)))\n     {\n       tree width = DECL_SIZE (TREE_OPERAND (exp, 1));\n       HOST_WIDE_INT low = TREE_INT_CST_LOW (width);\n@@ -1242,6 +1252,9 @@ build_component_ref (datum, component)\n \t(TREE_OPERAND (datum, 0),\n \t build_component_ref (TREE_OPERAND (datum, 1), component),\n \t build_component_ref (TREE_OPERAND (datum, 2), component));\n+\n+    default:\n+      break;\n     }\n \n   /* See if there is a field or component with name COMPONENT.  */\n@@ -1573,6 +1586,8 @@ build_function_call (function, params)\n \tif (coerced_params == 0)\n \t  return integer_zero_node;\n \treturn build_unary_op (ABS_EXPR, TREE_VALUE (coerced_params), 0);\n+      default:\n+\tbreak;\n       }\n \n   {\n@@ -2333,6 +2348,9 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n \t    pedwarn (\"comparison between pointer and integer\");\n \t}\n       break;\n+      \n+    default:\n+      break;\n     }\n \n   if ((code0 == INTEGER_TYPE || code0 == REAL_TYPE || code0 == COMPLEX_TYPE)\n@@ -3112,6 +3130,9 @@ build_unary_op (code, xarg, noconvert)\n \t  TREE_CONSTANT (addr) = 1;\n \treturn addr;\n       }\n+\n+    default:\n+      break;\n     }\n \n   if (!errstring)\n@@ -3180,17 +3201,16 @@ lvalue_p (ref)\n     case PARM_DECL:\n     case RESULT_DECL:\n     case ERROR_MARK:\n-      if (TREE_CODE (TREE_TYPE (ref)) != FUNCTION_TYPE\n-\t  && TREE_CODE (TREE_TYPE (ref)) != METHOD_TYPE)\n-\treturn 1;\n-      break;\n+      return (TREE_CODE (TREE_TYPE (ref)) != FUNCTION_TYPE\n+\t      && TREE_CODE (TREE_TYPE (ref)) != METHOD_TYPE);\n \n     case BIND_EXPR:\n     case RTL_EXPR:\n-      if (TREE_CODE (TREE_TYPE (ref)) == ARRAY_TYPE)\n-\treturn 1;\n+      return TREE_CODE (TREE_TYPE (ref)) == ARRAY_TYPE;\n+\n+    default:\n+      return 0;\n     }\n-  return 0;\n }\n \n /* Return nonzero if REF is an lvalue valid for this language;\n@@ -3222,7 +3242,12 @@ unary_complex_lvalue (code, arg)\n   if (TREE_CODE (arg) == COMPOUND_EXPR)\n     {\n       tree real_result = build_unary_op (code, TREE_OPERAND (arg, 1), 0);\n-      pedantic_lvalue_warning (COMPOUND_EXPR);\n+\n+      /* If this returns a function type, it isn't really being used as\n+\t an lvalue, so don't issue a warning about it.  */\n+      if (TREE_CODE (TREE_TYPE (arg)) != FUNCTION_TYPE)\n+\tpedantic_lvalue_warning (COMPOUND_EXPR);\n+\n       return build (COMPOUND_EXPR, TREE_TYPE (real_result),\n \t\t    TREE_OPERAND (arg, 0), real_result);\n     }\n@@ -3231,6 +3256,9 @@ unary_complex_lvalue (code, arg)\n   if (TREE_CODE (arg) == COND_EXPR)\n     {\n       pedantic_lvalue_warning (COND_EXPR);\n+      if (TREE_CODE (TREE_TYPE (arg)) != FUNCTION_TYPE)\n+\tpedantic_lvalue_warning (COMPOUND_EXPR);\n+\n       return (build_conditional_expr\n \t      (TREE_OPERAND (arg, 0),\n \t       build_unary_op (code, TREE_OPERAND (arg, 1), 0),\n@@ -3872,6 +3900,8 @@ build_modify_expr (lhs, modifycode, rhs)\n \t\t      /* But cast it to void to avoid an \"unused\" error.  */\n \t\t      convert (void_type_node, rhs), cond);\n       }\n+    default:\n+      break;\n     }\n \n   /* If a binary op has been requested, combine the old LHS value with the RHS\n@@ -3913,6 +3943,9 @@ build_modify_expr (lhs, modifycode, rhs)\n \tpedantic_lvalue_warning (CONVERT_EXPR);\n \treturn convert (TREE_TYPE (lhs), result);\n       }\n+      \n+    default:\n+      break;\n     }\n \n   /* Now we have handled acceptable kinds of LHS that are not truly lvalues.\n@@ -4426,9 +4459,10 @@ initializer_constant_valid_p (value, endtype)\n \t  return null_pointer_node;\n \treturn 0;\n       }\n-    }\n \n-  return 0;\n+    default:\n+      return 0;\n+    }\n }\n \n /* If VALUE is a compound expr all of whose expressions are constant, then\n@@ -6617,6 +6651,9 @@ c_expand_return (retval)\n \t\t  && DECL_CONTEXT (inner) == current_function_decl)\n \t\twarning (\"function returns address of local variable\");\n \t      break;\n+\n+\t    default:\n+\t      break;\n \t    }\n \n \t  break;"}, {"sha": "a70830ce30416dc732728710eb652535bf55ee7c", "filename": "gcc/calls.c", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -19,10 +19,12 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"expr.h\"\n+#include \"regs.h\"\n #ifdef __STDC__\n #include <stdarg.h>\n #else\n@@ -232,6 +234,9 @@ calls_function_1 (exp, which)\n \n     case RTL_EXPR:\n       return 0;\n+      \n+    default:\n+      break;\n     }\n \n   for (i = 0; i < length; i++)\n@@ -267,15 +272,11 @@ prepare_call_address (funexp, fndecl, call_fusage, reg_parm_seen)\n   /* Make a valid memory address and copy constants thru pseudo-regs,\n      but not for a constant address if -fno-function-cse.  */\n   if (GET_CODE (funexp) != SYMBOL_REF)\n-    funexp =\n-#ifdef SMALL_REGISTER_CLASSES\n     /* If we are using registers for parameters, force the\n-\t function address into a register now.  */\n-      (SMALL_REGISTER_CLASSES && reg_parm_seen)\n-       ? force_not_mem (memory_address (FUNCTION_MODE, funexp))\n-       :\n-#endif\n-         memory_address (FUNCTION_MODE, funexp);\n+       function address into a register now.  */\n+    funexp = ((SMALL_REGISTER_CLASSES && reg_parm_seen)\n+\t      ? force_not_mem (memory_address (FUNCTION_MODE, funexp))\n+\t      : memory_address (FUNCTION_MODE, funexp));\n   else\n     {\n #ifndef NO_FUNCTION_CSE\n@@ -695,7 +696,8 @@ expand_call (exp, target, ignore)\n \t  structure_value_addr = XEXP (target, 0);\n \telse\n \t  {\n-\t    /* Assign a temporary on the stack to hold the value.  */\n+\t    /* Assign a temporary to hold the value.  */\n+\t    tree d;\n \n \t    /* For variable-sized objects, we must be called with a target\n \t       specified.  If we were to allocate space on the stack here,\n@@ -704,8 +706,12 @@ expand_call (exp, target, ignore)\n \t    if (struct_value_size < 0)\n \t      abort ();\n \n-\t    structure_value_addr\n-\t      = XEXP (assign_stack_temp (BLKmode, struct_value_size, 1), 0);\n+\t    /* This DECL is just something to feed to mark_addressable;\n+\t       it doesn't get pushed.  */\n+\t    d = build_decl (VAR_DECL, NULL_TREE, TREE_TYPE (exp));\n+\t    DECL_RTL (d) = assign_temp (TREE_TYPE (exp), 1, 0, 1);\n+\t    mark_addressable (d);\n+\t    structure_value_addr = XEXP (DECL_RTL (d), 0);\n \t    MEM_IN_STRUCT_P (structure_value_addr)\n \t      = AGGREGATE_TYPE_P (TREE_TYPE (exp));\n \t    target = 0;\n@@ -1675,13 +1681,8 @@ expand_call (exp, target, ignore)\n \t\t    && GET_CODE (SUBREG_REG (args[i].value)) == REG)))\n \t    && args[i].mode != BLKmode\n \t    && rtx_cost (args[i].value, SET) > 2\n-#ifdef SMALL_REGISTER_CLASSES\n \t    && ((SMALL_REGISTER_CLASSES && reg_parm_seen)\n-\t\t|| preserve_subexpressions_p ())\n-#else\n-\t    && preserve_subexpressions_p ()\n-#endif\n-\t    )\n+\t\t|| preserve_subexpressions_p ()))\n \t  args[i].value = copy_to_mode_reg (args[i].mode, args[i].value);\n       }\n \n@@ -2038,7 +2039,7 @@ expand_call (exp, target, ignore)\n \n   /* If there are cleanups to be called, don't use a hard reg as target.\n      We need to double check this and see if it matters anymore.  */\n-  if (any_pending_cleanups ()\n+  if (any_pending_cleanups (1)\n       && target && REG_P (target)\n       && REGNO (target) < FIRST_PSEUDO_REGISTER)\n     target = 0;\n@@ -2751,26 +2752,26 @@ emit_library_call VPROTO((rtx orgfun, int no_queue, enum machine_mode outmode,\n \n #ifdef ACCUMULATE_OUTGOING_ARGS\n #ifdef REG_PARM_STACK_SPACE\n-      if (save_area)\n-\t{\n-\t  enum machine_mode save_mode = GET_MODE (save_area);\n-\t  rtx stack_area\n-\t    = gen_rtx (MEM, save_mode,\n-\t\t       memory_address (save_mode,\n+  if (save_area)\n+    {\n+      enum machine_mode save_mode = GET_MODE (save_area);\n+      rtx stack_area\n+\t= gen_rtx (MEM, save_mode,\n+\t\t   memory_address (save_mode,\n #ifdef ARGS_GROW_DOWNWARD\n-\t\t\t\t       plus_constant (argblock, - high_to_save)\n+\t\t\t\t   plus_constant (argblock, - high_to_save)\n #else\n-\t\t\t\t       plus_constant (argblock, low_to_save)\n+\t\t\t\t   plus_constant (argblock, low_to_save)\n #endif\n-\t\t\t\t       ));\n+\t\t\t\t   ));\n \n-\t  if (save_mode != BLKmode)\n-\t    emit_move_insn (stack_area, save_area);\n-\t  else\n-\t    emit_block_move (stack_area, validize_mem (save_area),\n-\t\t\t     GEN_INT (high_to_save - low_to_save + 1),\n-\t\t\t     PARM_BOUNDARY / BITS_PER_UNIT);\n-\t}\n+      if (save_mode != BLKmode)\n+\temit_move_insn (stack_area, save_area);\n+      else\n+\temit_block_move (stack_area, validize_mem (save_area),\n+\t\t\t GEN_INT (high_to_save - low_to_save + 1),\n+\t\t\t PARM_BOUNDARY / BITS_PER_UNIT);\n+    }\n #endif\n \t  \n   /* If we saved any argument areas, restore them.  */\n@@ -2789,7 +2790,6 @@ emit_library_call VPROTO((rtx orgfun, int no_queue, enum machine_mode outmode,\n   highest_outgoing_arg_in_use = initial_highest_arg_in_use;\n   stack_usage_map = initial_stack_usage_map;\n #endif\n-\n }\n \f\n /* Like emit_library_call except that an extra argument, VALUE,\n@@ -3345,26 +3345,26 @@ emit_library_call_value VPROTO((rtx orgfun, rtx value, int no_queue,\n \n #ifdef ACCUMULATE_OUTGOING_ARGS\n #ifdef REG_PARM_STACK_SPACE\n-      if (save_area)\n-\t{\n-\t  enum machine_mode save_mode = GET_MODE (save_area);\n-\t  rtx stack_area\n-\t    = gen_rtx (MEM, save_mode,\n-\t\t       memory_address (save_mode,\n+  if (save_area)\n+    {\n+      enum machine_mode save_mode = GET_MODE (save_area);\n+      rtx stack_area\n+\t= gen_rtx (MEM, save_mode,\n+\t\t   memory_address (save_mode,\n #ifdef ARGS_GROW_DOWNWARD\n-\t\t\t\t       plus_constant (argblock, - high_to_save)\n+\t\t\t\t   plus_constant (argblock, - high_to_save)\n #else\n-\t\t\t\t       plus_constant (argblock, low_to_save)\n+\t\t\t\t   plus_constant (argblock, low_to_save)\n #endif\n-\t\t\t\t       ));\n+\t\t\t\t   ));\n \n-\t  if (save_mode != BLKmode)\n-\t    emit_move_insn (stack_area, save_area);\n-\t  else\n-\t    emit_block_move (stack_area, validize_mem (save_area),\n-\t\t\t     GEN_INT (high_to_save - low_to_save + 1),\n+      if (save_mode != BLKmode)\n+\temit_move_insn (stack_area, save_area);\n+      else\n+\temit_block_move (stack_area, validize_mem (save_area),\n+\t\t\t GEN_INT (high_to_save - low_to_save + 1),\n \t\t\t     PARM_BOUNDARY / BITS_PER_UNIT);\n-\t}\n+    }\n #endif\n \t  \n   /* If we saved any argument areas, restore them.  */"}, {"sha": "2a92acb323e64333752b1d8fb4379251f642ab5f", "filename": "gcc/cccp.c", "status": "modified", "additions": 151, "deletions": 108, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -51,6 +51,13 @@ typedef unsigned char U_CHAR;\n #define PATH_SEPARATOR ':'\n #endif\n \n+/* By default, the suffix for object files is \".o\".  */\n+#ifdef OBJECT_SUFFIX\n+#define HAVE_OBJECT_SUFFIX\n+#else\n+#define OBJECT_SUFFIX \".o\"\n+#endif\n+\n #include <sys/types.h>\n #include <sys/stat.h>\n #include <ctype.h>\n@@ -59,21 +66,13 @@ typedef unsigned char U_CHAR;\n \n /* The following symbols should be autoconfigured:\n \tHAVE_FCNTL_H\n-\tHAVE_STDLIB_H\n \tHAVE_SYS_TIME_H\n-\tHAVE_UNISTD_H\n \tSTDC_HEADERS\n \tTIME_WITH_SYS_TIME\n    In the mean time, we'll get by with approximations based\n    on existing GCC configuration symbols.  */\n \n #ifdef POSIX\n-# ifndef HAVE_STDLIB_H\n-# define HAVE_STDLIB_H 1\n-# endif\n-# ifndef HAVE_UNISTD_H\n-# define HAVE_UNISTD_H 1\n-# endif\n # ifndef STDC_HEADERS\n # define STDC_HEADERS 1\n # endif\n@@ -105,6 +104,10 @@ typedef unsigned char U_CHAR;\n # include <fcntl.h>\n #endif\n \n+#if HAVE_LIMITS_H\n+# include <limits.h>\n+#endif\n+\n #include <errno.h>\n \n #if HAVE_STDLIB_H\n@@ -225,8 +228,8 @@ my_bzero (b, length)\n #define fstat(fd,stbuf)\t\tVMS_fstat (fd,stbuf)\n static int VMS_fstat (), VMS_stat ();\n static int VMS_open ();\n-static FILE * VMS_fopen ();\n-static FILE * VMS_freopen ();\n+static FILE *VMS_fopen ();\n+static FILE *VMS_freopen ();\n static void hack_vms_include_specification ();\n #define INO_T_EQ(a, b) (!bcmp((char *) &(a), (char *) &(b), sizeof (a)))\n #define INO_T_HASH(a) 0\n@@ -248,18 +251,25 @@ static void hack_vms_include_specification ();\n #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))\n \n /* Find the largest host integer type and set its size and type.\n-   Don't blindly use `long'; on some crazy hosts it is shorter than `int'.  */\n-\n-#ifndef HOST_BITS_PER_WIDE_INT\n-\n-#if HOST_BITS_PER_LONG > HOST_BITS_PER_INT\n-#define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_LONG\n-#define HOST_WIDE_INT long\n-#else\n-#define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_INT\n-#define HOST_WIDE_INT int\n-#endif\n+   Watch out: on some crazy hosts `long' is shorter than `int'.  */\n \n+#ifndef HOST_WIDE_INT\n+# if HAVE_INTTYPES_H\n+#  include <inttypes.h>\n+#  define HOST_WIDE_INT intmax_t\n+# else\n+#  if (HOST_BITS_PER_LONG <= HOST_BITS_PER_INT \\\n+       && HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_INT)\n+#   define HOST_WIDE_INT int\n+#  else\n+#  if (HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_LONG \\\n+       || ! (defined LONG_LONG_MAX || defined LLONG_MAX))\n+#   define HOST_WIDE_INT long\n+#  else\n+#   define HOST_WIDE_INT long long\n+#  endif\n+#  endif\n+# endif\n #endif\n \n #ifndef S_ISREG\n@@ -303,6 +313,7 @@ static void hack_vms_include_specification ();\n /* External declarations.  */\n \n extern char *version_string;\n+extern char *update_path PROTO((char *, char *));\n #ifndef VMS\n #ifndef HAVE_STRERROR\n extern int sys_nerr;\n@@ -400,6 +411,10 @@ static enum {dump_none, dump_only, dump_names, dump_definitions}\n    where they are defined.  */\n static int debug_output = 0;\n \n+/* Nonzero means pass #include lines through to the output,\n+   even if they are ifdeffed out.  */\n+static int dump_includes;\n+\n /* Nonzero indicates special processing used by the pcp program.  The\n    special effects of this mode are: \n      \n@@ -518,7 +533,7 @@ static struct file_buf {\n   struct if_stack *if_stack;\n   /* Object to be freed at end of input at this level.  */\n   U_CHAR *free_ptr;\n-  /* True if this is a header file included using <FILENAME>.  */\n+  /* True if this is a system header file; see is_system_include.  */\n   char system_header_p;\n } instack[INPUT_STACK_MAX];\n \n@@ -579,6 +594,7 @@ struct file_name_list\n /* The */\n static struct default_include {\n   char *fname;\t\t\t/* The name of the directory.  */\n+  char *component;\t\t/* The component containing the directory */\n   int cplusplus;\t\t/* Only look here if we're compiling C++.  */\n   int cxx_aware;\t\t/* Includes in this directory don't need to\n \t\t\t\t   be wrapped in extern \"C\" when compiling\n@@ -589,40 +605,43 @@ static struct default_include {\n #else\n   = {\n     /* Pick up GNU C++ specific include files.  */\n-    { GPLUSPLUS_INCLUDE_DIR, 1, 1 },\n-    { OLD_GPLUSPLUS_INCLUDE_DIR, 1, 1 },\n+    { GPLUSPLUS_INCLUDE_DIR, \"G++\", 1, 1 },\n+    { OLD_GPLUSPLUS_INCLUDE_DIR, 0, 1, 1 },\n #ifdef CROSS_COMPILE\n     /* This is the dir for fixincludes.  Put it just before\n        the files that we fix.  */\n-    { GCC_INCLUDE_DIR, 0, 0 },\n+    { GCC_INCLUDE_DIR, \"GCC\", 0, 0 },\n     /* For cross-compilation, this dir name is generated\n        automatically in Makefile.in.  */\n-    { CROSS_INCLUDE_DIR, 0, 0 },\n+    { CROSS_INCLUDE_DIR, \"GCC\", 0, 0 },\n #ifdef TOOL_INCLUDE_DIR\n     /* This is another place that the target system's headers might be.  */\n-    { TOOL_INCLUDE_DIR, 0, 0 },\n+    { TOOL_INCLUDE_DIR, \"BINUTILS\", 0, 0 },\n #endif\n #else /* not CROSS_COMPILE */\n #ifdef LOCAL_INCLUDE_DIR\n     /* This should be /usr/local/include and should come before\n        the fixincludes-fixed header files.  */\n-    { LOCAL_INCLUDE_DIR, 0, 1 },\n+    { LOCAL_INCLUDE_DIR, 0, 0, 1 },\n #endif\n #ifdef TOOL_INCLUDE_DIR\n     /* This is here ahead of GCC_INCLUDE_DIR because assert.h goes here.\n        Likewise, behind LOCAL_INCLUDE_DIR, where glibc puts its assert.h.  */\n-    { TOOL_INCLUDE_DIR, 0, 0 },\n+    { TOOL_INCLUDE_DIR, \"BINUTILS\", 0, 0 },\n #endif\n     /* This is the dir for fixincludes.  Put it just before\n        the files that we fix.  */\n-    { GCC_INCLUDE_DIR, 0, 0 },\n+    { GCC_INCLUDE_DIR, \"GCC\", 0, 0 },\n     /* Some systems have an extra dir of include files.  */\n #ifdef SYSTEM_INCLUDE_DIR\n-    { SYSTEM_INCLUDE_DIR, 0, 0 },\n+    { SYSTEM_INCLUDE_DIR, 0, 0, 0 },\n #endif\n-    { STANDARD_INCLUDE_DIR, 0, 0 },\n+#ifndef STANDARD_INCLUDE_COMPONENT\n+#define STANDARD_INCLUDE_COMPONENT 0\n+#endif\n+    { STANDARD_INCLUDE_DIR, STANDARD_INCLUDE_COMPONENT, 0, 0 },\n #endif /* not CROSS_COMPILE */\n-    { 0, 0, 0 }\n+    { 0, 0, 0, 0 }\n     };\n #endif /* no INCLUDE_DEFAULTS */\n \n@@ -954,13 +973,10 @@ struct directive {\n   int (*func) DO_PROTO;\t/* Function to handle directive */\n   char *name;\t\t\t/* Name of directive */\n   enum node_type type;\t\t/* Code which describes which directive.  */\n-  char angle_brackets;\t\t/* Nonzero => <...> is special.  */\n-  char traditional_comments;\t/* Nonzero: keep comments if -traditional.  */\n-  char pass_thru;\t\t/* Copy directive to output:\n-\t\t\t\t   if 1, copy if dumping definitions;\n-\t\t\t\t   if 2, always copy, after preprocessing.  */\n };\n \n+#define IS_INCLUDE_DIRECTIVE_TYPE(t) (T_INCLUDE <= (t) && (t) <= T_IMPORT)\n+\n /* These functions are declared to return int instead of void since they\n    are going to be placed in the table and some old compilers have trouble with\n    pointers to functions returning void.  */\n@@ -987,24 +1003,24 @@ static int do_xifdef DO_PROTO;\n /* Here is the actual list of #-directives, most-often-used first.  */\n \n static struct directive directive_table[] = {\n-  {  6, do_define, \"define\", T_DEFINE, 0, 1, 1},\n+  {  6, do_define, \"define\", T_DEFINE},\n   {  2, do_if, \"if\", T_IF},\n   {  5, do_xifdef, \"ifdef\", T_IFDEF},\n   {  6, do_xifdef, \"ifndef\", T_IFNDEF},\n   {  5, do_endif, \"endif\", T_ENDIF},\n   {  4, do_else, \"else\", T_ELSE},\n   {  4, do_elif, \"elif\", T_ELIF},\n   {  4, do_line, \"line\", T_LINE},\n-  {  7, do_include, \"include\", T_INCLUDE, 1},\n-  { 12, do_include, \"include_next\", T_INCLUDE_NEXT, 1},\n-  {  6, do_include, \"import\", T_IMPORT, 1},\n+  {  7, do_include, \"include\", T_INCLUDE},\n+  { 12, do_include, \"include_next\", T_INCLUDE_NEXT},\n+  {  6, do_include, \"import\", T_IMPORT},\n   {  5, do_undef, \"undef\", T_UNDEF},\n   {  5, do_error, \"error\", T_ERROR},\n   {  7, do_warning, \"warning\", T_WARNING},\n #ifdef SCCS_DIRECTIVE\n   {  4, do_sccs, \"sccs\", T_SCCS},\n #endif\n-  {  6, do_pragma, \"pragma\", T_PRAGMA, 0, 0, 2},\n+  {  6, do_pragma, \"pragma\", T_PRAGMA},\n   {  5, do_ident, \"ident\", T_IDENT},\n   {  6, do_assert, \"assert\", T_ASSERT},\n   {  8, do_unassert, \"unassert\", T_UNASSERT},\n@@ -1195,7 +1211,7 @@ static void make_undef PROTO((char *, FILE_BUF *));\n \n static void make_assertion PROTO((char *, char *));\n \n-static struct file_name_list *new_include_prefix PROTO((struct file_name_list *, char *, char *));\n+static struct file_name_list *new_include_prefix PROTO((struct file_name_list *, char *, char *, char *));\n static void append_include_chain PROTO((struct file_name_list *, struct file_name_list *));\n \n static void deps_output PROTO((char *, int));\n@@ -1414,7 +1430,8 @@ main (argc, argv)\n \tif (!strcmp (argv[i], \"-isystem\")) {\n \t  struct file_name_list *dirtmp;\n \n-\t  if (! (dirtmp = new_include_prefix (NULL_PTR, \"\", argv[++i])))\n+\t  if (! (dirtmp = new_include_prefix (NULL_PTR, NULL_PTR,\n+\t\t\t\t\t      \"\", argv[++i])))\n \t    break;\n \t  dirtmp->c_system_include_path = 1;\n \n@@ -1439,7 +1456,8 @@ main (argc, argv)\n \t      prefix[strlen (prefix) - 7] = 0;\n \t  }\n \n-\t  if (! (dirtmp = new_include_prefix (NULL_PTR, prefix, argv[++i])))\n+\t  if (! (dirtmp = new_include_prefix (NULL_PTR, NULL_PTR,\n+\t\t\t\t\t      prefix, argv[++i])))\n \t    break;\n \n \t  if (after_include == 0)\n@@ -1463,14 +1481,15 @@ main (argc, argv)\n \t      prefix[strlen (prefix) - 7] = 0;\n \t  }\n \n-\t  dirtmp = new_include_prefix (NULL_PTR, prefix, argv[++i]);\n+\t  dirtmp = new_include_prefix (NULL_PTR, NULL_PTR, prefix, argv[++i]);\n \t  append_include_chain (dirtmp, dirtmp);\n \t}\n \t/* Add directory to end of path for includes.  */\n \tif (!strcmp (argv[i], \"-idirafter\")) {\n \t  struct file_name_list *dirtmp;\n \n-\t  if (! (dirtmp = new_include_prefix (NULL_PTR, \"\", argv[++i])))\n+\t  if (! (dirtmp = new_include_prefix (NULL_PTR, NULL_PTR,\n+\t\t\t\t\t      \"\", argv[++i])))\n \t    break;\n \n \t  if (after_include == 0)\n@@ -1641,6 +1660,9 @@ main (argc, argv)\n \t    case 'D':\n \t      dump_macros = dump_definitions;\n \t      break;\n+\t    case 'I':\n+\t      dump_includes = 1;\n+\t      break;\n \t    }\n \t  }\n \t}\n@@ -1734,7 +1756,7 @@ main (argc, argv)\n \t    first_bracket_include = 0;\n \t  }\n \t  else {\n-\t    dirtmp = new_include_prefix (last_include, \"\",\n+\t    dirtmp = new_include_prefix (last_include, NULL_PTR, \"\",\n \t\t\t\t\t argv[i][2] ? argv[i] + 2 : argv[++i]);\n \t    append_include_chain (dirtmp, dirtmp);\n \t  }\n@@ -1940,6 +1962,7 @@ main (argc, argv)\n \t  include_defaults[num_dirs].fname\n \t    = startp == endp ? \".\" : savestring (startp);\n \t  endp[-1] = c;\n+\t  include_defaults[num_dirs].component = 0;\n \t  include_defaults[num_dirs].cplusplus = cplusplus;\n \t  include_defaults[num_dirs].cxx_aware = 1;\n \t  num_dirs++;\n@@ -1980,7 +2003,7 @@ main (argc, argv)\n \t  if (!strncmp (p->fname, default_prefix, default_len)) {\n \t    /* Yes; change prefix and add to search list.  */\n \t    struct file_name_list *new\n-\t      = new_include_prefix (NULL_PTR, specd_prefix,\n+\t      = new_include_prefix (NULL_PTR, NULL_PTR, specd_prefix,\n \t\t\t\t    p->fname + default_len);\n \t    if (new) {\n \t      new->c_system_include_path = !p->cxx_aware;\n@@ -1996,7 +2019,7 @@ main (argc, argv)\n       /* Some standard dirs are only for C++.  */\n       if (!p->cplusplus || (cplusplus && !no_standard_cplusplus_includes)) {\n \tstruct file_name_list *new\n-\t  = new_include_prefix (NULL_PTR, \"\", p->fname);\n+\t  = new_include_prefix (NULL_PTR, p->component, \"\", p->fname);\n \tif (new) {\n \t  new->c_system_include_path = !p->cxx_aware;\n \t  append_include_chain (new, new);\n@@ -2123,11 +2146,7 @@ main (argc, argv)\n \tq = p + (len - 4);\n \n       /* Supply our own suffix.  */\n-#ifndef VMS\n-      strcpy (q, \".o\");\n-#else\n-      strcpy (q, \".obj\");\n-#endif\n+      strcpy (q, OBJECT_SUFFIX);\n \n       deps_output (p, ':');\n       deps_output (in_fname, ' ');\n@@ -2310,7 +2329,8 @@ path_include (path)\n \tcontinue;\n \n       q[-1] = 0;\n-      dirtmp = new_include_prefix (last_include, \"\", p == q ? \".\" : p);\n+      dirtmp = new_include_prefix (last_include, NULL_PTR,\n+\t\t\t\t   \"\", p == q ? \".\" : p);\n       q[-1] = c;\n       append_include_chain (dirtmp, dirtmp);\n \n@@ -3724,7 +3744,7 @@ handle_directive (ip, op)\n       limit = ip->buf + ip->length;\n       unterminated = 0;\n       already_output = 0;\n-      keep_comments = traditional && kt->traditional_comments;\n+      keep_comments = traditional && kt->type == T_DEFINE;\n       /* #import is defined only in Objective C, or when on the NeXT.  */\n       if (kt->type == T_IMPORT\n \t  && !(objc || lookup ((U_CHAR *) \"__NeXT__\", -1, -1)))\n@@ -3769,7 +3789,7 @@ handle_directive (ip, op)\n \n \t  /* <...> is special for #include.  */\n \tcase '<':\n-\t  if (!kt->angle_brackets)\n+\t  if (! IS_INCLUDE_DIRECTIVE_TYPE (kt->type))\n \t    break;\n \t  while (bp < limit && *bp != '>' && *bp != '\\n') {\n \t    if (*bp == '\\\\' && bp[1] == '\\n') {\n@@ -3828,10 +3848,12 @@ handle_directive (ip, op)\n \t RESUME_P is the next interesting data after the directive.\n \t A comment may come between.  */\n \n-      /* If a directive should be copied through, and -E was given,\n+      /* If a directive should be copied through, and -C was given,\n \t pass it through before removing comments.  */\n       if (!no_output && put_out_comments\n-\t  && (dump_macros != dump_definitions) < kt->pass_thru) {\n+\t  && (kt->type == T_DEFINE ? dump_macros == dump_definitions\n+\t      : IS_INCLUDE_DIRECTIVE_TYPE (kt->type) ? dump_includes\n+\t      : kt->type == T_PRAGMA)) {\n         int len;\n \n \t/* Output directive name.  */\n@@ -3880,7 +3902,7 @@ handle_directive (ip, op)\n \n \t    /* <...> is special for #include.  */\n \t  case '<':\n-\t    if (!kt->angle_brackets)\n+\t    if (! IS_INCLUDE_DIRECTIVE_TYPE (kt->type))\n \t      break;\n \t    while (xp < bp && c != '>') {\n \t      c = *xp++;\n@@ -3955,10 +3977,12 @@ handle_directive (ip, op)\n \n       /* Some directives should be written out for cc1 to process,\n \t just as if they were not defined.  And sometimes we're copying\n-\t definitions through.  */\n+\t directives through.  */\n \n       if (!no_output && already_output == 0\n-\t  && (dump_macros < dump_names) < kt->pass_thru) {\n+\t  && (kt->type == T_DEFINE ? dump_names <= dump_macros\n+\t      : IS_INCLUDE_DIRECTIVE_TYPE (kt->type) ? dump_includes\n+\t      : kt->type == T_PRAGMA)) {\n         int len;\n \n \t/* Output directive name.  */\n@@ -3967,13 +3991,8 @@ handle_directive (ip, op)\n         bcopy (kt->name, (char *) op->bufp, kt->length);\n         op->bufp += kt->length;\n \n-\tif ((dump_macros != dump_definitions) < kt->pass_thru) {\n-\t  /* Output arguments.  */\n-\t  len = (cp - buf);\n-\t  check_expand (op, len);\n-\t  bcopy (buf, (char *) op->bufp, len);\n-\t  op->bufp += len;\n-\t} else if (kt->type == T_DEFINE && dump_macros == dump_names) {\n+\tif (kt->type == T_DEFINE && dump_macros == dump_names) {\n+\t  /* Output `#define name' only.  */\n \t  U_CHAR *xp = buf;\n \t  U_CHAR *yp;\n \t  SKIP_WHITE_SPACE (xp);\n@@ -3982,9 +4001,14 @@ handle_directive (ip, op)\n \t  len = (xp - yp);\n \t  check_expand (op, len + 1);\n \t  *op->bufp++ = ' ';\n-\t  bcopy (yp, op->bufp, len);\n-\t  op->bufp += len;\n+\t  bcopy (yp, (char *) op->bufp, len);\n+\t} else {\n+\t  /* Output entire directive.  */\n+\t  len = (cp - buf);\n+\t  check_expand (op, len);\n+\t  bcopy (buf, (char *) op->bufp, len);\n \t}\n+\top->bufp += len;\n       }\t\t\t\t/* Don't we need a newline or #line? */\n \n       /* Call the appropriate directive handler.  buf now points to\n@@ -4118,6 +4142,12 @@ special_symbol (hp, op)\n \n   case T_CONST:\n     buf = hp->value.cpval;\n+#ifdef STDC_0_IN_SYSTEM_HEADERS\n+    if (ip->system_header_p\n+\t&& hp->length == 8 && bcmp (hp->name, \"__STDC__\", 8) == 0\n+\t&& !lookup ((U_CHAR *) \"__STRICT_ANSI__\", -1, -1))\n+      buf = \"0\";\n+#endif\n     if (pcp_inside_if && pcp_outfile)\n       /* Output a precondition for this macro use */\n       fprintf (pcp_outfile, \"#define %s %s\\n\", hp->name, buf);\n@@ -5305,12 +5335,12 @@ pcfinclude (buf, limit, name, op)\n \n     /* First skip to a longword boundary */\n     /* ??? Why a 4-byte boundary?  On all machines? */\n-    /* NOTE: This works correctly even if HOST_WIDE_INT\n+    /* NOTE: This works correctly even if size_t\n        is narrower than a pointer.\n        Do not try risky measures here to get another type to use!\n        Do not include stddef.h--it will fail!  */\n-    if ((HOST_WIDE_INT) cp & 3)\n-      cp += 4 - ((HOST_WIDE_INT) cp & 3);\n+    if ((size_t) cp & 3)\n+      cp += 4 - ((size_t) cp & 3);\n     \n     /* Now get the string.  */\n     str = (STRINGDEF *) (GENERIC_PTR) cp;\n@@ -6798,7 +6828,7 @@ do_once ()\n     }\n }\n \n-/* #ident has already been copied to the output file, so just ignore it.  */\n+/* Report program identification.  */\n \n static int\n do_ident (buf, limit, op, keyword)\n@@ -6814,22 +6844,17 @@ do_ident (buf, limit, op, keyword)\n     pedwarn (\"ANSI C does not allow `#ident'\");\n \n   trybuf = expand_to_temp_buffer (buf, limit, 0, 0);\n-  buf = (U_CHAR *) alloca (trybuf.bufp - trybuf.buf + 1);\n-  bcopy ((char *) trybuf.buf, (char *) buf, trybuf.bufp - trybuf.buf);\n-  limit = buf + (trybuf.bufp - trybuf.buf);\n-  len = (limit - buf);\n-  free (trybuf.buf);\n-\n-  /* Output directive name.  */\n-  check_expand (op, 7);\n+  buf = trybuf.buf;\n+  len = trybuf.bufp - buf;\n+\n+  /* Output expanded directive.  */\n+  check_expand (op, 7 + len);\n   bcopy (\"#ident \", (char *) op->bufp, 7);\n   op->bufp += 7;\n-\n-  /* Output the expanded argument line.  */\n-  check_expand (op, len);\n   bcopy ((char *) buf, (char *) op->bufp, len);\n   op->bufp += len;\n \n+  free (buf);\n   return 0;\n }\n \n@@ -6858,7 +6883,7 @@ do_pragma (buf, limit, op, keyword)\n     int h;\n     U_CHAR *p = buf + 14, *fname;\n     SKIP_WHITE_SPACE (p);\n-    if (*p == '\\n' || *p != '\\\"')\n+    if (*p != '\\\"')\n       return 0;\n \n     fname = p + 1;\n@@ -9782,41 +9807,51 @@ make_assertion (option, str)\n   --indepth;\n }\n \f\n+#ifndef DIR_SEPARATOR\n+#define DIR_SEPARATOR '/'\n+#endif\n+\n /* The previous include prefix, if any, is PREV_FILE_NAME.\n+   Translate any pathnames with COMPONENT.\n    Allocate a new include prefix whose name is the\n    simplified concatenation of PREFIX and NAME,\n    with a trailing / added if needed.\n    But return 0 if the include prefix should be ignored,\n    e.g. because it is a duplicate of PREV_FILE_NAME.  */\n \n static struct file_name_list *\n-new_include_prefix (prev_file_name, prefix, name)\n+new_include_prefix (prev_file_name, component, prefix, name)\n      struct file_name_list *prev_file_name;\n+     char *component;\n      char *prefix;\n      char *name;\n {\n-  if (!name)\n+  if (name == 0)\n     fatal (\"Directory name missing after command line option\");\n \n-  if (!*name)\n+  if (*name == 0)\n     /* Ignore the empty string.  */\n     return 0;\n-  else {\n+\n+  prefix = update_path (prefix, component);\n+  name = update_path (name, component);\n+\n+  {\n     struct file_name_list *dir\n       = ((struct file_name_list *)\n \t xmalloc (sizeof (struct file_name_list)\n-\t\t  + strlen (prefix) + strlen (name) + 1 /* for trailing / */));\n+\t\t  + strlen (prefix) + strlen (name) + 2));\n     size_t len;\n     strcpy (dir->fname, prefix);\n     strcat (dir->fname, name);\n     len = simplify_filename (dir->fname);\n \n     /* Convert directory name to a prefix.  */\n-    if (dir->fname[len - 1] != '/') {\n+    if (dir->fname[len - 1] != DIR_SEPARATOR) {\n       if (len == 1 && dir->fname[len - 1] == '.')\n \tlen = 0;\n       else\n-\tdir->fname[len++] = '/';\n+\tdir->fname[len++] = DIR_SEPARATOR;\n       dir->fname[len] = 0;\n     }\n \n@@ -9832,6 +9867,14 @@ new_include_prefix (prev_file_name, prefix, name)\n #ifndef VMS\n     /* VMS can't stat dir prefixes, so skip these optimizations in VMS.  */\n \n+    /* Add a trailing \".\" if there is a filename.  This increases the number\n+       of systems that can stat directories.  We remove it below.  */\n+    if (len != 0)\n+      {\n+\tdir->fname[len] = '.';\n+\tdir->fname[len + 1] = 0;\n+      }\n+\n     /* Ignore a nonexistent directory.  */\n     if (stat (len ? dir->fname : \".\", &dir->st) != 0) {\n       if (errno != ENOENT && errno != ENOTDIR)\n@@ -9840,6 +9883,9 @@ new_include_prefix (prev_file_name, prefix, name)\n       return 0;\n     }\n \n+    if (len != 0)\n+      dir->fname[len] = 0;\n+\n     /* Ignore a directory whose identity matches the previous one.  */\n     if (prev_file_name\n \t&& INO_T_EQ (prev_file_name->st.st_ino, dir->st.st_ino)\n@@ -10200,27 +10246,26 @@ hack_vms_include_specification (fname, vaxc_include)\n      \"shr=nil\"- Disallow file sharing while file is open.  */\n \n static FILE *\n-freopen (fname, type, oldfile)\n+VMS_freopen (fname, type, oldfile)\n      char *fname;\n      char *type;\n      FILE *oldfile;\n {\n-#undef\tfreopen\t/* Get back the REAL fopen routine */\n   if (strcmp (type, \"w\") == 0)\n-    return freopen (fname, type, oldfile, \"mbc=16\", \"deq=64\", \"fop=tef\", \"shr=nil\");\n-  return freopen (fname, type, oldfile, \"mbc=16\");\n+    return decc$freopen (fname, type, oldfile,\n+\t\t\t \"mbc=16\", \"deq=64\", \"fop=tef\", \"shr=nil\");\n+  return decc$freopen (fname, type, oldfile, \"mbc=16\");\n }\n \n static FILE *\n-fopen (fname, type)\n+VMS_fopen (fname, type)\n      char *fname;\n      char *type;\n {\n-#undef fopen\t/* Get back the REAL fopen routine */\n   /* The gcc-vms-1.42 distribution's header files prototype fopen with two\n      fixed arguments, which matches ANSI's specification but not VAXCRTL's\n      pre-ANSI implementation.  This hack circumvents the mismatch problem.  */\n-  FILE *(*vmslib_fopen)() = (FILE *(*)()) fopen;\n+  FILE *(*vmslib_fopen)() = (FILE *(*)()) decc$fopen;\n \n   if (*type == 'w')\n     return (*vmslib_fopen) (fname, type, \"mbc=32\",\n@@ -10230,13 +10275,12 @@ fopen (fname, type)\n }\n \n static int \n-open (fname, flags, prot)\n+VMS_open (fname, flags, prot)\n      char *fname;\n      int flags;\n      int prot;\n {\n-#undef open\t/* Get back the REAL open routine */\n-  return open (fname, flags, prot, \"mbc=16\", \"deq=64\", \"fop=tef\");\n+  return decc$open (fname, flags, prot, \"mbc=16\", \"deq=64\", \"fop=tef\");\n }\n \f\n /* more VMS hackery */\n@@ -10257,14 +10301,13 @@ extern unsigned long sys$parse(), sys$search();\n    bad enough, but then compounding the problem by reporting the reason for\n    failure as \"normal successful completion.\"  */\n \n-#undef fstat\t/* get back to library version */\n \n static int\n VMS_fstat (fd, statbuf)\n      int fd;\n      struct stat *statbuf;\n {\n-  int result = fstat (fd, statbuf);\n+  int result = decc$fstat (fd, statbuf);\n \n   if (result < 0)\n     {"}, {"sha": "f18ecfe56649c8279c5a73ea19f5b7e801f9e1a5", "filename": "gcc/collect2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1592,9 +1592,9 @@ collect_execute (prog, argv, redir)\n \t{\n \t  unlink (redir);\n \t  if (freopen (redir, \"a\", stdout) == NULL)\n-\t    fatal_perror (\"redirecting stdout\");\n+\t    fatal_perror (\"redirecting stdout: %s\", redir);\n \t  if (freopen (redir, \"a\", stderr) == NULL)\n-\t    fatal_perror (\"redirecting stderr\");\n+\t    fatal_perror (\"redirecting stderr: %s\", redir);\n \t}\n \n       execvp (argv[0], argv);"}, {"sha": "20bcaf9b37e48dfa18d9e4466d229336bd2aba66", "filename": "gcc/combine.c", "status": "modified", "additions": 108, "deletions": 32, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -970,13 +970,10 @@ can_combine_p (insn, i3, pred, succ, pdest, psrc)\n \t\t inputs.  */\n \t      || (REGNO (src) < FIRST_PSEUDO_REGISTER\n \t\t  && (! HARD_REGNO_MODE_OK (REGNO (src), GET_MODE (src))\n-#ifdef SMALL_REGISTER_CLASSES\n \t\t      || (SMALL_REGISTER_CLASSES\n \t\t\t  && ((! all_adjacent && ! REG_USERVAR_P (src))\n \t\t\t      || (FUNCTION_VALUE_REGNO_P (REGNO (src))\n-\t\t\t\t  && ! REG_USERVAR_P (src))))\n-#endif\n-\t\t      ))))\n+\t\t\t\t  && ! REG_USERVAR_P (src))))))))\n \treturn 0;\n     }\n   else if (GET_CODE (dest) != CC0)\n@@ -1086,7 +1083,7 @@ can_combine_p (insn, i3, pred, succ, pdest, psrc)\n    If I1_NOT_IN_SRC is non-zero, it means that finding I1 in the source\n    of a SET must prevent combination from occurring.\n \n-   On machines where SMALL_REGISTER_CLASSES is defined, we don't combine\n+   On machines where SMALL_REGISTER_CLASSES is non-zero, we don't combine\n    if the destination of a SET is a hard register that isn't a user\n    variable.\n \n@@ -1163,12 +1160,9 @@ combinable_i3pat (i3, loc, i2dest, i1dest, i1_not_in_src, pi3dest_killed)\n \t      && REGNO (inner_dest) < FIRST_PSEUDO_REGISTER\n \t      && (! HARD_REGNO_MODE_OK (REGNO (inner_dest),\n \t\t\t\t\tGET_MODE (inner_dest))\n-#ifdef SMALL_REGISTER_CLASSES\n-\t\t || (SMALL_REGISTER_CLASSES\n-\t\t     && GET_CODE (src) != CALL && ! REG_USERVAR_P (inner_dest)\n-\t\t     && FUNCTION_VALUE_REGNO_P (REGNO (inner_dest)))\n-#endif\n-\t\t  ))\n+\t\t || (SMALL_REGISTER_CLASSES && GET_CODE (src) != CALL\n+\t\t     && ! REG_USERVAR_P (inner_dest)\n+\t\t     && FUNCTION_VALUE_REGNO_P (REGNO (inner_dest)))))\n \t  || (i1_not_in_src && reg_overlap_mentioned_p (i1dest, src)))\n \treturn 0;\n \n@@ -1308,12 +1302,10 @@ try_combine (i3, i2, i1)\n   if (i1 == 0 && GET_CODE (i3) == INSN && GET_CODE (PATTERN (i3)) == SET\n       && GET_CODE (SET_SRC (PATTERN (i3))) == REG\n       && REGNO (SET_SRC (PATTERN (i3))) >= FIRST_PSEUDO_REGISTER\n-#ifdef SMALL_REGISTER_CLASSES\n       && (! SMALL_REGISTER_CLASSES\n-\t  || GET_CODE (SET_DEST (PATTERN (i3))) != REG\n-\t  || REGNO (SET_DEST (PATTERN (i3))) >= FIRST_PSEUDO_REGISTER\n-\t  || REG_USERVAR_P (SET_DEST (PATTERN (i3))))\n-#endif\n+\t  || (GET_CODE (SET_DEST (PATTERN (i3))) != REG\n+\t      || REGNO (SET_DEST (PATTERN (i3))) >= FIRST_PSEUDO_REGISTER\n+\t      || REG_USERVAR_P (SET_DEST (PATTERN (i3)))))\n       && find_reg_note (i3, REG_DEAD, SET_SRC (PATTERN (i3)))\n       && GET_CODE (PATTERN (i2)) == PARALLEL\n       && ! side_effects_p (SET_DEST (PATTERN (i3)))\n@@ -2066,8 +2058,21 @@ try_combine (i3, i2, i1)\n \t   && ! reg_referenced_p (SET_DEST (XVECEXP (newpat, 0, 0)),\n \t\t\t\t  XVECEXP (newpat, 0, 1)))\n     {\n-      newi2pat = XVECEXP (newpat, 0, 1);\n-      newpat = XVECEXP (newpat, 0, 0);\n+      /* Normally, it doesn't matter which of the two is done first,\n+\t but it does if one references cc0.  In that case, it has to\n+\t be first.  */\n+#ifdef HAVE_cc0\n+      if (reg_referenced_p (cc0_rtx, XVECEXP (newpat, 0, 0)))\n+\t{\n+\t  newi2pat = XVECEXP (newpat, 0, 0);\n+\t  newpat = XVECEXP (newpat, 0, 1);\n+\t}\n+      else\n+#endif\n+\t{\n+\t  newi2pat = XVECEXP (newpat, 0, 1);\n+\t  newpat = XVECEXP (newpat, 0, 0);\n+\t}\n \n       i2_code_number\n \t= recog_for_combine (&newi2pat, i2, &new_i2_notes, &i2_scratches);\n@@ -2293,7 +2298,9 @@ try_combine (i3, i2, i1)\n       }\n \n     /* If I3DEST was used in I3SRC, it really died in I3.  We may need to\n-       put a REG_DEAD note for it somewhere.  Similarly for I2 and I1.\n+       put a REG_DEAD note for it somewhere.  If NEWI2PAT exists and sets\n+       I3DEST, the death must be somewhere before I2, not I3.  If we passed I3\n+       in that case, it might delete I2.  Similarly for I2 and I1.\n        Show an additional death due to the REG_DEAD note we make here.  If\n        we discard it in distribute_notes, we will decrement it again.  */\n \n@@ -2302,16 +2309,17 @@ try_combine (i3, i2, i1)\n \tif (GET_CODE (i3dest_killed) == REG)\n \t  REG_N_DEATHS (REGNO (i3dest_killed))++;\n \n-\tdistribute_notes (gen_rtx (EXPR_LIST, REG_DEAD, i3dest_killed,\n-\t\t\t\t   NULL_RTX),\n-\t\t\t  NULL_RTX, i3, newi2pat ? i2 : NULL_RTX,\n-\t\t\t  NULL_RTX, NULL_RTX);\n+\tif (newi2pat && reg_set_p (i3dest_killed, newi2pat))\n+\t  distribute_notes (gen_rtx (EXPR_LIST, REG_DEAD, i3dest_killed,\n+\t\t\t\t     NULL_RTX),\n+\t\t\t    NULL_RTX, i2, NULL_RTX, NULL_RTX, NULL_RTX);\n+\telse\n+\t  distribute_notes (gen_rtx (EXPR_LIST, REG_DEAD, i3dest_killed,\n+\t\t\t\t     NULL_RTX),\n+\t\t\t    NULL_RTX, i3, newi2pat ? i2 : NULL_RTX,\n+\t\t\t    NULL_RTX, NULL_RTX);\n       }\n \n-    /* For I2 and I1, we have to be careful.  If NEWI2PAT exists and sets\n-       I2DEST or I1DEST, the death must be somewhere before I2, not I3.  If\n-       we passed I3 in that case, it might delete I2.  */\n-\n     if (i2dest_in_i2src)\n       {\n \tif (GET_CODE (i2dest) == REG)\n@@ -2730,6 +2738,9 @@ find_split_point (loc, insn)\n \t      unsignedp = (code == ZERO_EXTRACT);\n \t    }\n \t  break;\n+\n+\tdefault:\n+\t  break;\n \t}\n \n       if (len && pos >= 0 && pos + len <= GET_MODE_BITSIZE (GET_MODE (inner)))\n@@ -2826,6 +2837,9 @@ find_split_point (loc, insn)\n \t  SUBST (XEXP (x, 1), tem);\n \t}\n       break;\n+\n+    default:\n+      break;\n     }\n \n   /* Otherwise, select our actions depending on our rtx class.  */\n@@ -4083,6 +4097,9 @@ simplify_rtx (x, op0_mode, last, in_dest)\n #endif\n \n       break;\n+\n+    default:\n+      break;\n     }\n \n   return x;\n@@ -4230,6 +4247,8 @@ simplify_if_then_else (x)\n       case LT:\n       case LE:\n \treturn gen_unary (NEG, mode, mode, gen_unary (ABS, mode, mode, true));\n+    default:\n+      break;\n       }\n \n   /* Look for MIN or MAX.  */\n@@ -4253,6 +4272,8 @@ simplify_if_then_else (x)\n       case LEU:\n       case LTU:\n \treturn gen_binary (UMIN, mode, true, false);\n+      default:\n+\tbreak;\n       }\n   \n   /* If we have (if_then_else COND (OP Z C1) Z) and OP is an identity when its\n@@ -4943,6 +4964,9 @@ simplify_logical (x, last)\n \treturn gen_rtx_combine (reverse_condition (GET_CODE (op0)),\n \t\t\t\tmode, XEXP (op0, 0), XEXP (op0, 1));\n       break;\n+\n+    default:\n+      abort ();\n     }\n \n   return x;\n@@ -5656,6 +5680,9 @@ extract_left_shift (x, count)\n \t\t\t   GEN_INT (INTVAL (XEXP (x, 1)) >> count));\n \n       break;\n+      \n+    default:\n+      break;\n     }\n \n   return 0;\n@@ -5897,6 +5924,10 @@ make_compound_operation (x, in_code)\n \n \t  return newer;\n \t}\n+      break;\n+      \n+    default:\n+      break;\n     }\n \n   if (new)\n@@ -6466,6 +6497,9 @@ force_to_mode (x, mode, mask, reg, just_select)\n \t\t\t\t      force_to_mode (XEXP (x, 2), mode,\n \t\t\t\t\t\t     mask, reg,next_select)));\n       break;\n+      \n+    default:\n+      break;\n     }\n \n   /* Ensure we return a value of the proper mode.  */\n@@ -6688,6 +6722,8 @@ known_cond (x, cond, reg, val)\n       case LT:  case LE:\n \treturn gen_unary (NEG, GET_MODE (XEXP (x, 0)), GET_MODE (XEXP (x, 0)),\n \t\t\t  XEXP (x, 0));\n+      default:\n+\tbreak;\n       }\n \n   /* The only other cases we handle are MIN, MAX, and comparisons if the\n@@ -6724,6 +6760,8 @@ known_cond (x, cond, reg, val)\n \t\t  return unsignedp ? XEXP (x, 1) : x;\n \t\tcase LEU:  case LTU:\n \t\t  return unsignedp ? XEXP (x, 0) : x;\n+\t\tdefault:\n+\t\t  break;\n \t\t}\n \t    }\n \t}\n@@ -7435,6 +7473,8 @@ nonzero_bits (x, mode)\n \t    result_width = MIN (width0, width1);\n \t    result_low = MIN (low0, low1);\n \t    break;\n+\t  default:\n+\t    abort ();\n \t  }\n \n \tif (result_width < mode_width)\n@@ -7537,6 +7577,9 @@ nonzero_bits (x, mode)\n       nonzero &= (nonzero_bits (XEXP (x, 1), mode)\n \t\t  | nonzero_bits (XEXP (x, 2), mode));\n       break;\n+      \n+    default:\n+      break;\n     }\n \n   return nonzero;\n@@ -7578,13 +7621,25 @@ num_sign_bit_copies (x, mode)\n     return MAX (1, (num_sign_bit_copies (x, GET_MODE (x))\n \t\t    - (GET_MODE_BITSIZE (GET_MODE (x)) - bitwidth)));\n      \n+  if (GET_MODE (x) != VOIDmode && bitwidth > GET_MODE_BITSIZE (GET_MODE (x)))\n+    {\n #ifndef WORD_REGISTER_OPERATIONS\n   /* If this machine does not do all register operations on the entire\n      register and MODE is wider than the mode of X, we can say nothing\n      at all about the high-order bits.  */\n-  if (GET_MODE (x) != VOIDmode && bitwidth > GET_MODE_BITSIZE (GET_MODE (x)))\n-    return 1;\n+      return 1;\n+#else\n+      /* Likewise on machines that do, if the mode of the object is smaller\n+\t than a word and loads of that size don't sign extend, we can say\n+\t nothing about the high order bits.  */\n+      if (GET_MODE_BITSIZE (GET_MODE (x)) < BITS_PER_WORD\n+#ifdef LOAD_EXTEND_OP\n+\t  && LOAD_EXTEND_OP (GET_MODE (x)) != SIGN_EXTEND\n+#endif\n+\t  )\n+\treturn 1;\n #endif\n+    }\n \n   switch (code)\n     {\n@@ -7824,6 +7879,10 @@ num_sign_bit_copies (x, mode)\n     case GEU: case GTU: case LEU: case LTU:\n       if (STORE_FLAG_VALUE == -1)\n \treturn bitwidth;\n+      break;\n+      \n+    default:\n+      break;\n     }\n \n   /* If we haven't been able to figure it out by one of the above rules,\n@@ -7935,6 +7994,8 @@ merge_outer_ops (pop0, pconst0, op1, const1, mode, pcomp_p)\n \tcase NEG:\n \t  op0 = NIL;\n \t  break;\n+\tdefault:\n+\t  break;\n \t}\n     }\n \n@@ -7976,6 +8037,8 @@ merge_outer_ops (pop0, pconst0, op1, const1, mode, pcomp_p)\n \t  /* (a ^ b) & b) == (~a) & b */\n \t  *pcomp_p = 1;\n \tbreak;\n+      default:\n+\tbreak;\n       }\n \n   /* Check for NO-OP cases.  */\n@@ -8609,6 +8672,9 @@ simplify_shift_const (x, code, result_mode, varop, count)\n \t      continue;\n \t    }\n \t  break;\n+\t  \n+\tdefault:\n+\t  break;\n \t}\n \n       break;\n@@ -9441,6 +9507,9 @@ simplify_comparison (code, pop0, pop1)\n \t      code = LT;\n \t    }\n \t  break;\n+\n+\tdefault:\n+\t  break;\n \t}\n \n       /* Compute some predicates to simplify code below.  */\n@@ -9973,6 +10042,9 @@ simplify_comparison (code, pop0, pop1)\n \t      continue;\n \t    }\n \t  break;\n+\t  \n+\tdefault:\n+\t  break;\n \t}\n \n       break;\n@@ -10103,9 +10175,10 @@ reversible_comparison_p (x)\n       x = get_last_value (XEXP (x, 0));\n       return (x && GET_CODE (x) == COMPARE\n \t      && ! FLOAT_MODE_P (GET_MODE (XEXP (x, 0))));\n+      \n+    default:\n+      return 0;\n     }\n-\n-  return 0;\n }\n \f\n /* Utility function for following routine.  Called when X is part of a value\n@@ -10712,8 +10785,11 @@ mark_used_regs_combine (x)\n \t  mark_used_regs_combine (XEXP (testreg, 0));\n \n \tmark_used_regs_combine (SET_SRC (x));\n-\treturn;\n       }\n+      return;\n+\n+    default:\n+      break;\n     }\n \n   /* Recursively scan the operands of this expression.  */"}, {"sha": "f7abfb933dda6aec4a9f22fe06e7438166536145", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,9 +1,4 @@\n /* config.in.  Generated automatically from configure.in by autoheader.  */\n-\n-/* Include the old config.h as config2.h to simplify the transition\n-   to autoconf.  */\n-#include \"config2.h\"\n-\n /* Whether malloc must be declared even if <stdlib.h> is included.  */\n #undef NEED_DECLARATION_MALLOC\n \n@@ -28,6 +23,12 @@\n /* Define if you have the strtoul function.  */\n #undef HAVE_STRTOUL\n \n+/* Define if you have the <inttypes.h> header file.  */\n+#undef HAVE_INTTYPES_H\n+\n+/* Define if you have the <limits.h> header file.  */\n+#undef HAVE_LIMITS_H\n+\n /* Define if you have the <stddef.h> header file.  */\n #undef HAVE_STDDEF_H\n "}, {"sha": "213a6d47d67831d733d74e11867cd473c7cfb635", "filename": "gcc/config.sub", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.sub?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -155,6 +155,7 @@ case $basic_machine in\n \t\t| alpha | alphaev5 | alphaev56 | we32k | ns16k | clipper \\\n \t\t| i370 | sh | powerpc | powerpcle | 1750a | dsp16xx | pdp11 \\\n \t\t| mips64 | mipsel | mips64el | mips64orion | mips64orionel \\\n+\t\t| mipstx39 | mipstx39el \\\n \t\t| sparc | sparclet | sparclite | sparc64 | v850)\n \t\tbasic_machine=$basic_machine-unknown\n \t\t;;\n@@ -179,7 +180,9 @@ case $basic_machine in\n \t      | ns16k-* | pn-* | np1-* | xps100-* | clipper-* | orion-* \\\n \t      | sparclite-* | pdp11-* | sh-* | powerpc-* | powerpcle-* \\\n \t      | sparc64-* | mips64-* | mipsel-* \\\n-\t      | mips64el-* | mips64orion-* | mips64orionel-* | f301-*)\n+\t      | mips64el-* | mips64orion-* | mips64orionel-*  \\\n+\t      | mipstx39-* | mipstx39el-* \\\n+\t      | f301-*)\n \t\t;;\n \t# Recognize the various machine names and aliases which stand\n \t# for a CPU type and a company and sometimes even an OS.\n@@ -568,6 +571,12 @@ case $basic_machine in\n \t\tbasic_machine=i386-sequent\n \t\tos=-dynix\n \t\t;;\n+\ttx39)\n+\t\tbasic_machine=mipstx39-unknown\n+\t\t;;\n+\ttx39el)\n+\t\tbasic_machine=mipstx39el-unknown\n+\t\t;;\n \ttower | tower-32)\n \t\tbasic_machine=m68k-ncr\n \t\t;;"}, {"sha": "88771b9396d20bf35b517f52fa69a7be52906a7c", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 112, "deletions": 55, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -20,8 +20,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n@@ -100,38 +100,55 @@ static void add_long_const\tPROTO((FILE *, HOST_WIDE_INT, int, int, int));\n /* Compute the size of the save area in the stack.  */\n static void alpha_sa_mask\tPROTO((unsigned long *imaskP,\n \t\t\t\t       unsigned long *fmaskP));\n-\n-/* Strip type information.  */\n-#define CURRENT_FUNCTION_ARGS_INFO  \\\n-(TARGET_OPEN_VMS ? current_function_args_info & 0xff \\\n- : current_function_args_info)\n-\n-/* Some helpful register info.  */\n-#define REG_PV 27\n-#define REG_RA 26\n-\n+/* Get the number of args of a function in one of two ways.  */\n+#ifdef OPEN_VMS\n+#define NUM_ARGS current_function_args_info.num_args\n+#else\n+#define NUM_ARGS current_function_args_info\n+#endif\n \f\n /* Parse target option strings. */\n \n void\n override_options ()\n {\n   alpha_cpu\n-    = TARGET_CPU_DEFAULT & MASK_CPU_EV5 ? PROCESSOR_EV5 : PROCESSOR_EV4;\n+    = TARGET_CPU_DEFAULT & MASK_CPU_EV6 ? PROCESSOR_EV6\n+      : (TARGET_CPU_DEFAULT & MASK_CPU_EV5 ? PROCESSOR_EV5 : PROCESSOR_EV4);\n \n   if (alpha_cpu_string)\n     {\n       if (! strcmp (alpha_cpu_string, \"ev4\")\n \t  || ! strcmp (alpha_cpu_string, \"21064\"))\n-\talpha_cpu = PROCESSOR_EV4;\n+\t{\n+\t  alpha_cpu = PROCESSOR_EV4;\n+\t  target_flags &= ~ (MASK_BWX | MASK_CIX | MASK_MAX);\n+\t}\n       else if (! strcmp (alpha_cpu_string, \"ev5\")\n \t       || ! strcmp (alpha_cpu_string, \"21164\"))\n-\talpha_cpu = PROCESSOR_EV5;\n+\t{\n+\t  alpha_cpu = PROCESSOR_EV5;\n+\t  target_flags &= ~ (MASK_BWX | MASK_CIX | MASK_MAX);\n+\t}\n       else if (! strcmp (alpha_cpu_string, \"ev56\")\n \t       || ! strcmp (alpha_cpu_string, \"21164a\"))\n \t{\n \t  alpha_cpu = PROCESSOR_EV5;\n-\t  target_flags |= MASK_BYTE_OPS;\n+\t  target_flags |= MASK_BWX;\n+\t  target_flags &= ~ (MASK_CIX | MASK_MAX);\n+\t}\n+      else if (! strcmp (alpha_cpu_string, \"pca56\")\n+\t       || ! strcmp (alpha_cpu_string, \"21164PC\"))\n+\t{\n+\t  alpha_cpu = PROCESSOR_EV5;\n+\t  target_flags |= MASK_BWX | MASK_MAX;\n+\t  target_flags &= ~ MASK_CIX;\n+\t}\n+      else if (! strcmp (alpha_cpu_string, \"ev6\")\n+\t       || ! strcmp (alpha_cpu_string, \"21264\"))\n+\t{\n+\t  alpha_cpu = PROCESSOR_EV6;\n+\t  target_flags |= MASK_BWX | MASK_CIX | MASK_MAX;\n \t}\n       else\n \terror (\"bad value `%s' for -mcpu switch\", alpha_cpu_string);\n@@ -487,7 +504,7 @@ input_operand (op, mode)\n \treturn 1;\n       /* ... fall through ... */\n     case MEM:\n-      return ((TARGET_BYTE_OPS || (mode != HImode && mode != QImode))\n+      return ((TARGET_BWX || (mode != HImode && mode != QImode))\n \t      && general_operand (op, mode));\n \n     case CONST_DOUBLE:\n@@ -1441,12 +1458,12 @@ print_operand (file, x, code)\n \n     case ',':\n       /* Generates single precision instruction suffix.  */\n-      fprintf (file, \"%c\", (TARGET_FLOAT_VAX?'f':'s'));\n+      fprintf (file, \"%c\", (TARGET_FLOAT_VAX ? 'f' : 's'));\n       break;\n \n     case '-':\n       /* Generates double precision instruction suffix.  */\n-      fprintf (file, \"%c\", (TARGET_FLOAT_VAX?'g':'t'));\n+      fprintf (file, \"%c\", (TARGET_FLOAT_VAX ? 'g' : 't'));\n       break;\n \n     case 'r':\n@@ -1673,9 +1690,9 @@ alpha_builtin_saveregs (arglist)\n \n   /* Compute the current position into the args, taking into account\n      both registers and memory.  Both of these are already included in\n-     current_function_args_info.  */\n+     NUM_ARGS.  */\n \n-  argsize = GEN_INT (CURRENT_FUNCTION_ARGS_INFO * UNITS_PER_WORD);\n+  argsize = GEN_INT (NUM_ARGS * UNITS_PER_WORD);\n \n   /* For Unix, SETUP_INCOMING_VARARGS moves the starting address base up by 48,\n      storing fp arg registers in the first 48 bytes, and the integer arg\n@@ -1688,10 +1705,10 @@ alpha_builtin_saveregs (arglist)\n \n   if (TARGET_OPEN_VMS)\n     addr = plus_constant (virtual_incoming_args_rtx,\n-\t\t\t  CURRENT_FUNCTION_ARGS_INFO <= 5 + stdarg\n+\t\t\t  NUM_ARGS <= 5 + stdarg\n \t\t\t  ? UNITS_PER_WORD : - 6 * UNITS_PER_WORD);\n   else\n-    addr = (CURRENT_FUNCTION_ARGS_INFO <= 5 + stdarg\n+    addr = (NUM_ARGS <= 5 + stdarg\n \t    ? plus_constant (virtual_incoming_args_rtx,\n \t\t\t     6 * UNITS_PER_WORD)\n \t    : plus_constant (virtual_incoming_args_rtx,\n@@ -1750,6 +1767,39 @@ alpha_builtin_saveregs (arglist)\n     }\n }\n \f\n+#if OPEN_VMS\n+#define REG_PV 27\n+#define REG_RA 26\n+#else\n+#define REG_RA 26\n+#endif\n+\n+/* Find the current function's return address.\n+\n+   ??? It would be better to arrange things such that if we would ordinarily\n+   have been a leaf function and we didn't spill the hard reg that we\n+   wouldn't have to save the register in the prolog.  But it's not clear\n+   how to get the right information at the right time.  */\n+\n+static rtx alpha_return_addr_rtx;\n+\n+rtx\n+alpha_return_addr ()\n+{\n+  rtx ret;\n+\n+  if ((ret = alpha_return_addr_rtx) == NULL)\n+    {\n+      alpha_return_addr_rtx = ret = gen_reg_rtx (Pmode);\n+\n+      emit_insn_after (gen_rtx (SET, VOIDmode, ret,\n+\t\t\t        gen_rtx (REG, Pmode, REG_RA)),\n+\t\t       get_insns ());\n+    }\n+\n+  return ret;\n+}\n+\n /* This page contains routines that are used to determine what the function\n    prologue and epilogue code will do and write them out.  */\n \n@@ -2316,6 +2366,18 @@ alpha_does_function_need_gp ()\n   return 0;\n }\n \n+int\n+vms_valid_decl_attribute_p (decl, attributes, identifier, args)\n+     tree decl;\n+     tree attributes;\n+     tree identifier;\n+     tree args;\n+{\n+  if (is_attribute_p (\"overlaid\", identifier))\n+    return (args == NULL_TREE);\n+  return 0;\n+}\n+\n void\n output_prolog (file, size)\n      FILE *file;\n@@ -2646,6 +2708,8 @@ output_epilog (file, size)\n \n   /* Show that we know this function if it is called again.  */\n   SYMBOL_REF_FLAG (XEXP (DECL_RTL (current_function_decl), 0)) = 1;\n+\n+  alpha_return_addr_rtx = 0;\n }\n #endif /* !OPEN_VMS */\n \f\n@@ -3124,46 +3188,39 @@ check_float_value (mode, d, overflow)\n \n #if OPEN_VMS\n \n-void *\n-function_arg (cum, mode, type, named)\n-    CUMULATIVE_ARGS *cum;\n-    enum machine_mode mode;\n-    tree type;\n-    int named;\n-{\n-  int arg;\n+/* Return the VMS argument type corresponding to MODE.  */\n \n-  if (mode == VOIDmode)\t\t/* final call, return argument information  */\n+enum avms_arg_type\n+alpha_arg_type (mode)\n+     enum machine_mode mode;\n+{\n+  switch (mode)\n     {\n-      return GEN_INT (*cum);\n+    case SFmode:\n+      return TARGET_FLOAT_VAX ? FF : FS;\n+    case DFmode:\n+      return TARGET_FLOAT_VAX ? FD : FT;\n+    default:\n+      return I64;\n     }\n+}\n \n-  arg = *cum & 0xff;\n+/* Return an rtx for an integer representing the VMS Argument Information\n+   register value.  */\n \n-  switch (mode)\n-    {\n-      case SFmode:\n-\t*cum |= (((TARGET_FLOAT_VAX)?1:4) << ((arg * 3)+8));      /* 4 = AI$K_AR_FS, IEEE single */\n-        break;\n-      case DFmode:\n-        *cum |= (((TARGET_FLOAT_VAX)?3:5) << ((arg * 3)+8));      /* 5 = AI$K_AR_FT, IEEE double */\n-        break;\n-      case TFmode:\n-        *cum |= (7 << ((arg * 3)+8));        /* 5 = AI$K_AR_FT, IEEE double */\n-        break;\n-      default:\n-        break;\n-    }\n+struct rtx_def *\n+alpha_arg_info_reg_val (cum)\n+     CUMULATIVE_ARGS cum;\n+{\n+  unsigned HOST_WIDE_INT regval = cum.num_args;\n+  int i;\n \n-  return (arg < 6 && ! MUST_PASS_IN_STACK (mode, type)\n-\t ? gen_rtx(REG, mode,\n-\t\t   (*cum & 0xff) + 16 + ((TARGET_FPREGS\n-\t\t\t  && (GET_MODE_CLASS (mode) == MODE_COMPLEX_FLOAT\n-\t\t\t      || GET_MODE_CLASS (mode) == MODE_FLOAT))\n-\t\t\t * 32))\n-\t : 0);\n-}\n+  for (i = 0; i < 6; i++)\n+    regval |= ((int) cum.atypes[i]) << (i * 3 + 8);\n \n+  return GEN_INT (regval);\n+}\n+\f\n /* Structure to collect function names for final output\n    in link section.  */\n "}, {"sha": "2618b2221bee89fc88d970a9968865a2842236f6", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 49, "deletions": 27, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -80,7 +80,8 @@ Boston, MA 02111-1307, USA.  */\n \n enum processor_type\n  {PROCESSOR_EV4,\t\t\t/* 2106[46]{a,} */\n-  PROCESSOR_EV5};\t\t\t/* 21164{a,} */\n+  PROCESSOR_EV5,\t\t\t/* 21164{a,pc,} */\n+  PROCESSOR_EV6};\t\t\t/* 21264 */\n \n extern enum processor_type alpha_cpu;\n \n@@ -168,14 +169,31 @@ extern enum alpha_fp_trap_mode alpha_fptm;\n #define MASK_FLOAT_VAX 512\n #define TARGET_FLOAT_VAX (target_flags & MASK_FLOAT_VAX)\n \n-/* This means that the processor has byte and half word loads and stores.  */\n+/* This means that the processor has byte and half word loads and stores\n+   (the BWX extension).  */\n \n-#define MASK_BYTE_OPS 1024\n-#define TARGET_BYTE_OPS\t(target_flags & MASK_BYTE_OPS)\n+#define MASK_BWX 1024\n+#define TARGET_BWX\t(target_flags & MASK_BWX)\n \n-/* This means that the processor is an EV5 or EV56.  This is defined only\n-   in TARGET_CPU_DEFAULT.  */\n-#define MASK_CPU_EV5 2048\n+/* This means that the processor has the CIX extension.  */\n+#define MASK_CIX 2048\n+#define TARGET_CIX\t(target_flags & MASK_CIX)\n+\n+/* This means that the processor has the MAX extension.  */\n+#define MASK_MAX 4096\n+#define TARGET_MAX\t(target_flags & MASK_MAX)\n+\n+/* This means that the processor is an EV5, EV56, or PCA56.  This is defined\n+   only in TARGET_CPU_DEFAULT.  */\n+#define MASK_CPU_EV5 8192\n+\n+/* Likewise for EV6.  */\n+#define MASK_CPU_EV6 16384\n+\n+/* This means we support the .arch directive in the assembler.  Only\n+   defined in TARGET_CPU_DEFAULT.  */\n+#define MASK_SUPPORT_ARCH 32768\n+#define TARGET_SUPPORT_ARCH\t(target_flags & MASK_SUPPORT_ARCH)\n \n /* Macro to define tables used to set the flags.\n    This is a list in braces of pairs in braces,\n@@ -196,8 +214,12 @@ extern enum alpha_fp_trap_mode alpha_fptm;\n     {\"build-constants\", MASK_BUILD_CONSTANTS},  \\\n     {\"float-vax\", MASK_FLOAT_VAX},\t\t\\\n     {\"float-ieee\", -MASK_FLOAT_VAX},\t\t\\\n-    {\"byte\", MASK_BYTE_OPS},\t\t\t\\\n-    {\"no-byte\", -MASK_BYTE_OPS},\t\t\\\n+    {\"bwx\", MASK_BWX},\t\t\t\t\\\n+    {\"no-bwx\", -MASK_BWX},\t\t\t\\\n+    {\"cix\", MASK_CIX},\t\t\t\t\\\n+    {\"no-cix\", -MASK_CIX},\t\t\t\\\n+    {\"max\", MASK_MAX},\t\t\t\t\\\n+    {\"no-max\", -MASK_MAX},\t\t\t\\\n     {\"\", TARGET_DEFAULT | TARGET_CPU_DEFAULT} }\n \n #define TARGET_DEFAULT MASK_FP|MASK_FPREGS\n@@ -403,7 +425,7 @@ extern void override_options ();\n \n /* For atomic access to objects, must have at least 32-bit alignment\n    unless the machine has byte operations.  */\n-#define MINIMUM_ATOMIC_ALIGNMENT (TARGET_BYTE_OPS ? 8 : 32)\n+#define MINIMUM_ATOMIC_ALIGNMENT (TARGET_BWX ? 8 : 32)\n \n /* Align all constants and variables to at least a word boundary so\n    we can pick up pieces of them faster.  */\n@@ -711,7 +733,7 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n   && (((CLASS) == FLOAT_REGS\t\t\t\t\t\t\\\n        && ((MODE) == SImode || (MODE) == HImode || (MODE) == QImode))\t\\\n       || (((MODE) == QImode || (MODE) == HImode)\t\t\t\\\n-\t  && ! TARGET_BYTE_OPS && unaligned_memory_operand (IN, MODE)))) \\\n+\t  && ! TARGET_BWX && unaligned_memory_operand (IN, MODE)))) \\\n  ? GENERAL_REGS\t\t\t\t\t\t\t\t\\\n  : ((CLASS) == FLOAT_REGS && GET_CODE (IN) == MEM\t\t\t\\\n     && GET_CODE (XEXP (IN, 0)) == AND) ? GENERAL_REGS\t\t\t\\\n@@ -727,7 +749,7 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n        && (GET_CODE (SUBREG_REG (OUT)) == MEM\t\t\t\t\\\n \t   || (GET_CODE (SUBREG_REG (OUT)) == REG\t\t\t\\\n \t       && REGNO (SUBREG_REG (OUT)) >= FIRST_PSEUDO_REGISTER)))) \\\n-  && ((((MODE) == HImode || (MODE) == QImode) && ! TARGET_BYTE_OPS\t\\\n+  && ((((MODE) == HImode || (MODE) == QImode) && ! TARGET_BWX\t\t\\\n        || ((MODE) == SImode && (CLASS) == FLOAT_REGS))))\t\t\\\n  ? GENERAL_REGS\t\t\t\t\t\t\t\t\\\n  : ((CLASS) == FLOAT_REGS && GET_CODE (OUT) == MEM\t\t\t\\\n@@ -738,9 +760,10 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n  : NO_REGS)\n \n /* If we are copying between general and FP registers, we need a memory\n-   location.  */\n+   location unless the CIX extension is available.  */\n \n-#define SECONDARY_MEMORY_NEEDED(CLASS1,CLASS2,MODE) ((CLASS1) != (CLASS2))\n+#define SECONDARY_MEMORY_NEEDED(CLASS1,CLASS2,MODE) \\\n+ (! TARGET_CIX && (CLASS1) != (CLASS2))\n \n /* Specify the mode to be used for memory when a secondary memory\n    location is needed.  If MODE is floating-point, use it.  Otherwise,\n@@ -890,7 +913,7 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n \n #define FUNCTION_VALUE(VALTYPE, FUNC)\t\\\n   gen_rtx (REG,\t\t\t\t\t\t\t\\\n-\t   (INTEGRAL_MODE_P (TYPE_MODE (VALTYPE))\t\t\\\n+\t   (INTEGRAL_TYPE_P (VALTYPE)\t\t\t\t\\\n \t    && TYPE_PRECISION (VALTYPE) < BITS_PER_WORD) \t\\\n \t   ? word_mode : TYPE_MODE (VALTYPE),\t\t\t\\\n \t   ((TARGET_FPREGS\t\t\t\t\t\\\n@@ -1538,7 +1561,7 @@ extern void alpha_init_expanders ();\n \n /* Define the value returned by a floating-point comparison instruction.  */\n \n-#define FLOAT_STORE_FLAG_VALUE 2.0\n+#define FLOAT_STORE_FLAG_VALUE (TARGET_FLOAT_VAX ? 0.5 : 2.0)\n \n /* Canonicalize a comparison from one we don't have to one we do have.  */\n \n@@ -1714,14 +1737,6 @@ extern void alpha_init_expanders ();\n \f\n /* Control the assembler format that we output.  */\n \n-/* Emit the .arch pseudo op.  This is separated out, because versions of\n-   OSF before 4.0 do not support it.  */\n-\n-#define ARCH_ASM_FILE_START(FILE)\t\t\t\t\\\n-  fprintf (FILE, \"\\t.arch %s\\n\",\t\t\t\t\\\n-\t   (TARGET_BYTE_OPS ? \"ev56\"\t\t\t\t\\\n-\t    : alpha_cpu == PROCESSOR_EV4 ? \"ev4\" : \"ev5\"));\n-\n /* Output at beginning of assembler file.  */\n \n #define ASM_FILE_START(FILE)\t\t\t\t\t\\\n@@ -1730,7 +1745,13 @@ extern void alpha_init_expanders ();\n   fprintf (FILE, \"\\t.set noreorder\\n\");\t\t\t\t\\\n   fprintf (FILE, \"\\t.set volatile\\n\");                          \\\n   fprintf (FILE, \"\\t.set noat\\n\");\t\t\t\t\\\n-  ARCH_ASM_FILE_START (FILE);\t\t\t\t\t\\\n+  if (TARGET_SUPPORT_ARCH)\t\t\t\t\t\\\n+    fprintf (FILE, \"\\t.arch %s\\n\",\t\t\t\t\\\n+             alpha_cpu == PROCESSOR_EV6 ? \"ev6\"\t\t\t\\\n+\t     : (alpha_cpu == PROCESSOR_EV5\t\t\t\\\n+\t\t? (TARGET_MAX ? \"pca56\" : TARGET_BWX ? \"ev56\" : \"ev5\") \\\n+\t\t: \"ev4\"));\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n   ASM_OUTPUT_SOURCE_FILENAME (FILE, main_input_filename);\t\\\n }\n \n@@ -2268,8 +2289,9 @@ do {\t\t\t\t\t\t\t\\\n    ??? Stricly speaking, we only need -g if the user specifies -g.  Passing\n    it always means that we get slightly larger than necessary object files\n    if the user does not specify -g.  If we don't pass -g, then mips-tfile\n-   will need to be fixed to work in this case.  */\n-#define ASM_SPEC \"%{!mgas:-g} -nocpp %{pg}\"\n+   will need to be fixed to work in this case.  Pass -O0 since some\n+   optimization are broken and don't help us anyway.  */\n+#define ASM_SPEC \"%{!mgas:-g} -nocpp %{pg} -O0\"\n #endif\n \n /* Specify to run a post-processor, mips-tfile after the assembler"}, {"sha": "c12acfbc4a7f9b405c4dbdcdbb341319e96538c4", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 230, "deletions": 64, "changes": 294, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -24,7 +24,7 @@\n ;; Processor type -- this attribute must exactly match the processor_type\n ;; enumeration in alpha.h.\n \n-(define_attr \"cpu\" \"ev4,ev5\"\n+(define_attr \"cpu\" \"ev4,ev5,ev6\"\n   (const (symbol_ref \"alpha_cpu\")))\n \n ;; Define an insn type attribute.  This is used in function unit delay\n@@ -115,100 +115,101 @@\n   64 59)\n \f\n ;; EV5 scheduling.  EV5 can issue 4 insns per clock.\n+;; We consider the EV6 and EV5 for now.\n \n ;; EV5 has two asymetric integer units.  Model this with ebox,e0,e1.\n ;; Everything uses ebox, and those that require particular pipes grab\n ;; those as well.\n \n (define_function_unit \"ev5_ebox\" 2 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"iadd,ilog,icmp,st,shift,imull,imulq,imulh\"))\n   1 1)\n \n ;; Memory takes at least 2 clocks, and load cannot dual issue with stores.\n (define_function_unit \"ev5_ebox\" 2 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"ld,ldsym\"))\n   2 1)\n \n (define_function_unit \"ev5_e0\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"ld,ldsym\"))\n   0 1\n   [(eq_attr \"type\" \"st\")])\n \n ;; Conditional moves always take 2 ticks.\n (define_function_unit \"ev5_ebox\" 2 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"cmov\"))\n   2 1)\n \n ;; Stores, shifts, and multiplies can only issue to E0\n (define_function_unit \"ev5_e0\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"st\"))\n   1 1)\n \n ;; But shifts and multiplies don't conflict with loads.\n (define_function_unit \"ev5_e0\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"shift,imull,imulq,imulh\"))\n   1 1\n   [(eq_attr \"type\" \"st,shift,imull,imulq,imulh\")])\n \n ;; Branches can only issue to E1\n (define_function_unit \"ev5_e1\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"ibr,jsr\"))\n   1 1)\n \n ;; Multiplies also use the integer multiplier.\n (define_function_unit \"ev5_imult\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"imull\"))\n   8 4)\n \n (define_function_unit \"ev5_imult\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"imulq\"))\n   12 8)\n \n (define_function_unit \"ev5_imult\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"imulh\"))\n   14 8)\n \n ;; Similarly for the FPU we have two asymetric units.  But fcpys can issue\n ;; on either so we have to play the game again.\n \n (define_function_unit \"ev5_fpu\" 2 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"fadd,fmul,fcpys,fbr,fdivs,fdivt\"))\n   4 1)\n   \n ;; Multiplies (resp. adds) also use the fmul (resp. fadd) units.\n (define_function_unit \"ev5_fm\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"fmul\"))\n   4 1)\n \n (define_function_unit \"ev5_fa\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"fadd\"))\n   4 1)\n \n (define_function_unit \"ev5_fa\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"fbr\"))\n   1 1)\n \n (define_function_unit \"ev5_fa\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"fdivs\"))\n   15 1)\n \n (define_function_unit \"ev5_fa\" 1 0\n-  (and (eq_attr \"cpu\" \"ev5\")\n+  (and (eq_attr \"cpu\" \"ev5,ev6\")\n        (eq_attr \"type\" \"fdivt\"))\n   22 1)\n \f\n@@ -810,7 +811,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(zero_extend:SI (match_operand:QI 1 \"nonimmediate_operand\" \"r,m\")))]\n-  \"TARGET_BYTE_OPS\"\n+  \"TARGET_BWX\"\n   \"@\n    zapnot %1,1,%0\n    ldbu %0,%1\"\n@@ -819,7 +820,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(zero_extend:SI (match_operand:QI 1 \"register_operand\" \"r\")))]\n-  \"! TARGET_BYTE_OPS\"\n+  \"! TARGET_BWX\"\n   \"zapnot %1,1,%0\"\n   [(set_attr \"type\" \"shift\")])\n \n@@ -832,7 +833,7 @@\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n \t(zero_extend:DI (match_operand:QI 1 \"nonimmediate_operand\" \"r,m\")))]\n-  \"TARGET_BYTE_OPS\"\n+  \"TARGET_BWX\"\n   \"@\n    zapnot %1,1,%0\n    ldbu %0,%1\"\n@@ -841,7 +842,7 @@\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (match_operand:QI 1 \"register_operand\" \"r\")))]\n-  \"! TARGET_BYTE_OPS\"\n+  \"! TARGET_BWX\"\n   \"zapnot %1,1,%0\"\n   [(set_attr \"type\" \"shift\")])\n   \n@@ -854,7 +855,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(zero_extend:SI (match_operand:HI 1 \"nonimmediate_operand\" \"r,m\")))]\n-  \"TARGET_BYTE_OPS\"\n+  \"TARGET_BWX\"\n   \"@\n    zapnot %1,3,%0\n    ldwu %0,%1\"\n@@ -863,7 +864,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(zero_extend:SI (match_operand:HI 1 \"register_operand\" \"r\")))]\n-  \"! TARGET_BYTE_OPS\"\n+  \"! TARGET_BWX\"\n   \"zapnot %1,3,%0\"\n   [(set_attr \"type\" \"shift\")])\n \n@@ -876,7 +877,7 @@\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n \t(zero_extend:DI (match_operand:HI 1 \"nonimmediate_operand\" \"r,m\")))]\n-  \"TARGET_BYTE_OPS\"\n+  \"TARGET_BWX\"\n   \"@\n    zapnot %1,3,%0\n    ldwu %0,%1\"\n@@ -953,6 +954,30 @@\n   \"eqv %r1,%2,%0\"\n   [(set_attr \"type\" \"ilog\")])\n \f\n+;; Handle the FFS insn if we support CIX. \n+\n+(define_expand \"ffsdi2\"\n+  [(set (match_dup 2)\n+\t(unspec [(match_operand:DI 1 \"register_operand\" \"\")] 1))\n+   (set (match_dup 3)\n+\t(plus:DI (match_dup 2) (const_int 1)))\n+   (set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(if_then_else:DI (eq (match_dup 1) (const_int 0))\n+\t\t\t (const_int 0) (match_dup 3)))]\n+  \"TARGET_CIX\"\n+  \"\n+{\n+  operands[2] = gen_reg_rtx (DImode);\n+  operands[3] = gen_reg_rtx (DImode);\n+}\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(unspec [(match_operand:DI 1 \"register_operand\" \"r\")] 1))]\n+  \"TARGET_CIX\"\n+  \"cttz %1,%0\"\n+  [(set_attr \"type\" \"shift\")])\n+\f\n ;; Next come the shifts and the various extract and insert operations.\n \n (define_insn \"ashldi3\"\n@@ -1020,7 +1045,7 @@\n   \"\"\n   \"\n {\n-  if (TARGET_BYTE_OPS)\n+  if (TARGET_BWX)\n     {\n       emit_insn (gen_extendqihi2x (operands[0],\n \t\t\t\t   force_reg (QImode, operands[1])));\n@@ -1046,35 +1071,35 @@\n (define_insn \"extendqidi2x\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(sign_extend:DI (match_operand:QI 1 \"register_operand\" \"r\")))]\n-  \"TARGET_BYTE_OPS\"\n+  \"TARGET_BWX\"\n   \"sextb %1,%0\"\n   [(set_attr \"type\" \"shift\")])\n \n (define_insn \"extendhidi2x\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(sign_extend:DI (match_operand:HI 1 \"register_operand\" \"r\")))]\n-  \"TARGET_BYTE_OPS\"\n+  \"TARGET_BWX\"\n   \"sextw %1,%0\"\n   [(set_attr \"type\" \"shift\")])\n \n (define_insn \"extendqisi2x\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(sign_extend:SI (match_operand:QI 1 \"register_operand\" \"r\")))]\n-  \"TARGET_BYTE_OPS\"\n+  \"TARGET_BWX\"\n   \"sextb %1,%0\"\n   [(set_attr \"type\" \"shift\")])\n \n (define_insn \"extendhisi2x\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(sign_extend:SI (match_operand:HI 1 \"register_operand\" \"r\")))]\n-  \"TARGET_BYTE_OPS\"\n+  \"TARGET_BWX\"\n   \"sextw %1,%0\"\n   [(set_attr \"type\" \"shift\")])\n \n (define_insn \"extendqihi2x\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n \t(sign_extend:HI (match_operand:QI 1 \"register_operand\" \"r\")))]\n-  \"TARGET_BYTE_OPS\"\n+  \"TARGET_BWX\"\n   \"sextb %1,%0\"\n   [(set_attr \"type\" \"shift\")])\n \n@@ -1088,7 +1113,7 @@\n   \"\"\n   \"\n {\n-  if (TARGET_BYTE_OPS)\n+  if (TARGET_BWX)\n     {\n       emit_insn (gen_extendqisi2x (operands[0],\n \t\t\t\t   force_reg (QImode, operands[1])));\n@@ -1122,7 +1147,7 @@\n   \"\n { extern rtx get_unaligned_address ();\n \n-  if (TARGET_BYTE_OPS)\n+  if (TARGET_BWX)\n     {\n       emit_insn (gen_extendqidi2x (operands[0],\n \t\t\t\t   force_reg (QImode, operands[1])));\n@@ -1154,7 +1179,7 @@\n   \"\"\n   \"\n {\n-  if (TARGET_BYTE_OPS)\n+  if (TARGET_BWX)\n     {\n       emit_insn (gen_extendhisi2x (operands[0],\n \t\t\t\t   force_reg (HImode, operands[1])));\n@@ -1188,7 +1213,7 @@\n   \"\n { extern rtx get_unaligned_address ();\n \n-  if (TARGET_BYTE_OPS)\n+  if (TARGET_BWX)\n     {\n       emit_insn (gen_extendhidi2x (operands[0],\n \t\t\t\t   force_reg (HImode, operands[1])));\n@@ -1791,6 +1816,31 @@\n   \"sub%-%)%& %R1,%R2,%0\"\n   [(set_attr \"type\" \"fadd\")\n    (set_attr \"trap\" \"yes\")])\n+\n+(define_insn \"sqrtsf2\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(sqrt:SF (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+  \"TARGET_FP && TARGET_CIX\"\n+  \"sqrt%, %1,%0\"\n+  [(set_attr \"type\" \"fdivs\")\n+   (set_attr \"trap\" \"yes\")])\n+\n+(define_insn \"sqrtdf2\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(sqrt:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"fG\")))]\n+  \"TARGET_FP && TARGET_CIX\"\n+  \"sqrt%- %1,%0\"\n+  [(set_attr \"type\" \"fdivt\")\n+   (set_attr \"trap\" \"yes\")])\n+\n+(define_insn \"\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(sqrt:DF (float_extend:DF\n+\t\t  (match_operand:SF 1 \"reg_or_fp0_operand\" \"fG\"))))]\n+  \"TARGET_FP && TARGET_CIX&& alpha_tp != ALPHA_TP_INSN\"\n+  \"sqrt%- %1,%0\"\n+  [(set_attr \"type\" \"fdivt\")\n+   (set_attr \"trap\" \"yes\")])\n \f\n ;; Next are all the integer comparisons, and conditional moves and branches\n ;; and some of the related define_expand's and define_split's.\n@@ -2013,6 +2063,70 @@\n \t\t\t\t       (match_dup 0) (match_dup 1)))]\n   \"\")\n \n+(define_insn \"sminqi3\"\n+  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n+\t(smin:SI (match_operand:QI 1 \"reg_or_0_operand\" \"%rJ\")\n+\t\t (match_operand:QI 2 \"reg_or_8bit_operand\" \"rI\")))]\n+  \"TARGET_MAX\"\n+  \"minsb8 %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n+\n+(define_insn \"uminqi3\"\n+  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n+\t(umin:SI (match_operand:QI 1 \"reg_or_0_operand\" \"%rJ\")\n+\t\t (match_operand:QI 2 \"reg_or_8bit_operand\" \"rI\")))]\n+  \"TARGET_MAX\"\n+  \"minub8 %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n+\n+(define_insn \"smaxqi3\"\n+  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n+\t(smax:SI (match_operand:QI 1 \"reg_or_0_operand\" \"%rJ\")\n+\t\t (match_operand:QI 2 \"reg_or_8bit_operand\" \"rI\")))]\n+  \"TARGET_MAX\"\n+  \"maxsb8 %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n+\n+(define_insn \"umaxqi3\"\n+  [(set (match_operand:QI 0 \"register_operand\" \"=r\")\n+\t(umax:SI (match_operand:QI 1 \"reg_or_0_operand\" \"%rJ\")\n+\t\t (match_operand:QI 2 \"reg_or_8bit_operand\" \"rI\")))]\n+  \"TARGET_MAX\"\n+  \"maxub8 %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n+\n+(define_insn \"sminhi3\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n+\t(smin:SI (match_operand:HI 1 \"reg_or_0_operand\" \"%rJ\")\n+\t\t (match_operand:HI 2 \"reg_or_8bit_operand\" \"rI\")))]\n+  \"TARGET_MAX\"\n+  \"minsw4 %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n+\n+(define_insn \"uminhi3\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n+\t(umin:SI (match_operand:HI 1 \"reg_or_0_operand\" \"%rJ\")\n+\t\t (match_operand:HI 2 \"reg_or_8bit_operand\" \"rI\")))]\n+  \"TARGET_MAX\"\n+  \"minuw4 %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n+\n+(define_insn \"smaxhi3\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n+\t(smax:SI (match_operand:HI 1 \"reg_or_0_operand\" \"%rJ\")\n+\t\t (match_operand:HI 2 \"reg_or_8bit_operand\" \"rI\")))]\n+  \"TARGET_MAX\"\n+  \"maxsw4 %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n+\n+(define_insn \"umaxhi3\"\n+  [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n+\t(umax:SI (match_operand:HI 1 \"reg_or_0_operand\" \"%rJ\")\n+\t\t (match_operand:HI 2 \"reg_or_8bit_operand\" \"rI\")))]\n+  \"TARGET_MAX\"\n+  \"maxuw4 %r1,%2,%0\"\n+  [(set_attr \"type\" \"shift\")])\n+\n (define_expand \"smaxdi3\"\n   [(set (match_dup 3)\n \t(le:DI (match_operand:DI 1 \"reg_or_0_operand\" \"\")\n@@ -3637,7 +3751,7 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,m,f,f,f,m\")\n \t(match_operand:SI 1 \"input_operand\" \"r,J,I,K,L,m,rJ,f,J,m,fG\"))]\n-  \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS\n+  \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS && ! TARGET_CIX\n    && (register_operand (operands[0], SImode)\n        || reg_or_0_operand (operands[1], SImode))\"\n   \"@\n@@ -3650,16 +3764,38 @@\n    stl %r1,%0\n    cpys %1,%1,%0\n    cpys $f31,$f31,%0\n-   lds %0,%1\n-   sts %R1,%0\"\n+   ld%, %0,%1\n+   st%, %R1,%0\"\n   [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ld,st,fcpys,fcpys,ld,st\")])\n \n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,m,f,f,f,m,r,f\")\n+\t(match_operand:SI 1 \"input_operand\" \"r,J,I,K,L,m,rJ,f,J,m,fG,f,r\"))]\n+  \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS && TARGET_CIX\n+   && (register_operand (operands[0], SImode)\n+       || reg_or_0_operand (operands[1], SImode))\"\n+  \"@\n+   bis %1,%1,%0\n+   bis $31,$31,%0\n+   bis $31,%1,%0\n+   lda %0,%1\n+   ldah %0,%h1\n+   ldl %0,%1\n+   stl %r1,%0\n+   cpys %1,%1,%0\n+   cpys $f31,$f31,%0\n+   ld%, %0,%1\n+   st%, %R1,%0\n+   ftois %1,%0\n+   itof%, %1,%0\"\n+  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ld,st,fcpys,fcpys,ld,st,ld,st\")])\n+\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,r,r,m,f,f,f,m\")\n \t(match_operand:SI 1 \"input_operand\" \"r,J,I,K,L,s,m,rJ,f,J,m,fG\"))]\n   \"(TARGET_WINDOWS_NT || TARGET_OPEN_VMS)\n-\t&& (register_operand (operands[0], SImode)\n-\t\t\t || reg_or_0_operand (operands[1], SImode))\"\n+    && (register_operand (operands[0], SImode)\n+        || reg_or_0_operand (operands[1], SImode))\"\n   \"@\n    bis %1,%1,%0\n    bis $31,$31,%0\n@@ -3671,14 +3807,14 @@\n    stl %r1,%0\n    cpys %1,%1,%0\n    cpys $f31,$f31,%0\n-   lds %0,%1\n-   sts %R1,%0\"\n+   ld%, %0,%1\n+   st%, %R1,%0\"\n   [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ldsym,ld,st,fcpys,fcpys,ld,st\")])\n \n (define_insn \"\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,r,r,f,f\")\n \t(match_operand:HI 1 \"input_operand\" \"r,J,I,n,f,J\"))]\n-  \"! TARGET_BYTE_OPS\n+  \"! TARGET_BWX\n    && (register_operand (operands[0], HImode)\n        || register_operand (operands[1], HImode))\"\n   \"@\n@@ -3693,7 +3829,7 @@\n (define_insn \"\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,m,f,f\")\n \t(match_operand:HI 1 \"input_operand\" \"r,J,I,n,m,rJ,f,J\"))]\n-  \"TARGET_BYTE_OPS\n+  \"TARGET_BWX\n    && (register_operand (operands[0], HImode)\n        || reg_or_0_operand (operands[1], HImode))\"\n   \"@\n@@ -3710,7 +3846,7 @@\n (define_insn \"\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,r,r,f,f\")\n \t(match_operand:QI 1 \"input_operand\" \"r,J,I,n,f,J\"))]\n-  \"! TARGET_BYTE_OPS\n+  \"! TARGET_BWX\n    && (register_operand (operands[0], QImode)\n        || register_operand (operands[1], QImode))\"\n   \"@\n@@ -3725,7 +3861,7 @@\n (define_insn \"\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,m,f,f\")\n \t(match_operand:QI 1 \"input_operand\" \"r,J,I,n,m,rJ,f,J\"))]\n-  \"TARGET_BYTE_OPS\n+  \"TARGET_BWX\n    && (register_operand (operands[0], QImode)\n        || reg_or_0_operand (operands[1], QImode))\"\n   \"@\n@@ -3785,8 +3921,9 @@\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"general_operand\" \"=r,r,r,r,r,r,r,m,f,f,f,Q\")\n \t(match_operand:DI 1 \"input_operand\" \"r,J,I,K,L,s,m,rJ,f,J,Q,fG\"))]\n-  \"register_operand (operands[0], DImode)\n-   || reg_or_0_operand (operands[1], DImode)\"\n+  \"! TARGET_CIX\n+   && (register_operand (operands[0], DImode)\n+       || reg_or_0_operand (operands[1], DImode))\"\n   \"@\n    bis %1,%1,%0\n    bis $31,$31,%0\n@@ -3802,6 +3939,29 @@\n    stt %R1,%0\"\n   [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ldsym,ld,st,fcpys,fcpys,ld,st\")])\n \n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"general_operand\" \"=r,r,r,r,r,r,r,m,f,f,f,Q,r,f\")\n+\t(match_operand:DI 1 \"input_operand\" \"r,J,I,K,L,s,m,rJ,f,J,Q,fG,f,r\"))]\n+  \"TARGET_CIX\n+   && (register_operand (operands[0], DImode)\n+       || reg_or_0_operand (operands[1], DImode))\"\n+  \"@\n+   bis %1,%1,%0\n+   bis $31,$31,%0\n+   bis $31,%1,%0\n+   lda %0,%1\n+   ldah %0,%h1\n+   lda %0,%1\n+   ldq%A1 %0,%1\n+   stq%A0 %r1,%0\n+   cpys %1,%1,%0\n+   cpys $f31,$f31,%0\n+   ldt %0,%1\n+   stt %R1,%0\n+   ftoit %1,%0\n+   itoft %1,%0\"\n+  [(set_attr \"type\" \"ilog,ilog,ilog,iadd,iadd,ldsym,ld,st,fcpys,fcpys,ld,st,ld,st\")])\n+\n ;; We do three major things here: handle mem->mem, put 64-bit constants in\n ;; memory, and construct long 32-bit constants.\n \n@@ -4028,7 +4188,7 @@\n   \"\n { extern rtx get_unaligned_address ();\n \n-  if (TARGET_BYTE_OPS)\n+  if (TARGET_BWX)\n     {\n       if (GET_CODE (operands[0]) == MEM\n \t  && ! reg_or_0_operand (operands[1], QImode))\n@@ -4152,7 +4312,7 @@\n   \"\n { extern rtx get_unaligned_address ();\n \n-  if (TARGET_BYTE_OPS)\n+  if (TARGET_BWX)\n     {\n       if (GET_CODE (operands[0]) == MEM\n \t  && ! reg_or_0_operand (operands[1], HImode))\n@@ -4278,7 +4438,7 @@\n   [(parallel [(match_operand:QI 0 \"register_operand\" \"=r\")\n \t      (match_operand:QI 1 \"unaligned_memory_operand\" \"m\")\n \t      (match_operand:TI 2 \"register_operand\" \"=&r\")])]\n-  \"! TARGET_BYTE_OPS\"\n+  \"! TARGET_BWX\"\n   \"\n { extern rtx get_unaligned_address ();\n   rtx addr, scratch, seq, tmp;\n@@ -4312,7 +4472,7 @@\n   [(parallel [(match_operand:HI 0 \"register_operand\" \"=r\")\n \t      (match_operand:HI 1 \"unaligned_memory_operand\" \"m\")\n \t      (match_operand:TI 2 \"register_operand\" \"=&r\")])]\n-  \"! TARGET_BYTE_OPS\"\n+  \"! TARGET_BWX\"\n   \"\n { extern rtx get_unaligned_address ();\n   rtx scratch, seq, tmp, addr;\n@@ -4346,7 +4506,7 @@\n   [(parallel [(match_operand:QI 0 \"any_memory_operand\" \"=m\")\n \t      (match_operand:QI 1 \"register_operand\" \"r\")\n \t      (match_operand:TI 2 \"register_operand\" \"=&r\")])]\n-  \"! TARGET_BYTE_OPS\"\n+  \"! TARGET_BWX\"\n   \"\n { extern rtx get_unaligned_address ();\n \n@@ -4394,7 +4554,7 @@\n   [(parallel [(match_operand:HI 0 \"any_memory_operand\" \"=m\")\n \t      (match_operand:HI 1 \"register_operand\" \"r\")\n \t      (match_operand:TI 2 \"register_operand\" \"=&r\")])]\n-  \"! TARGET_BYTE_OPS\"\n+  \"! TARGET_BWX\"\n   \"\n { extern rtx get_unaligned_address ();\n \n@@ -4460,29 +4620,32 @@\n (define_expand \"allocate_stack\"\n   [(set (reg:DI 30)\n \t(plus:DI (reg:DI 30)\n-\t\t (match_operand:DI 0 \"reg_or_cint_operand\" \"\")))]\n+\t\t (match_operand:DI 1 \"reg_or_cint_operand\" \"\")))\n+   (set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(match_dup 2))]\n   \"\"\n   \"\n {\n-  if (GET_CODE (operands[0]) == CONST_INT\n-\t   && INTVAL (operands[0]) < 32768)\n+  if (GET_CODE (operands[1]) == CONST_INT\n+      && INTVAL (operands[1]) < 32768)\n     {\n-      if (INTVAL (operands[0]) >= 4096)\n+      if (INTVAL (operands[1]) >= 4096)\n \t{\n \t  /* We do this the same way as in the prologue and generate explicit\n \t     probes.  Then we update the stack by the constant.  */\n \n \t  int probed = 4096;\n \n \t  emit_insn (gen_probe_stack (GEN_INT (- probed)));\n-\t  while (probed + 8192 < INTVAL (operands[0]))\n+\t  while (probed + 8192 < INTVAL (operands[1]))\n \t    emit_insn (gen_probe_stack (GEN_INT (- (probed += 8192))));\n \n-\t  if (probed + 4096 < INTVAL (operands[0]))\n-\t    emit_insn (gen_probe_stack (GEN_INT (- INTVAL(operands[0]))));\n+\t  if (probed + 4096 < INTVAL (operands[1]))\n+\t    emit_insn (gen_probe_stack (GEN_INT (- INTVAL(operands[1]))));\n \t}\n \n-      operands[0] = GEN_INT (- INTVAL (operands[0]));\n+      operands[1] = GEN_INT (- INTVAL (operands[1]));\n+      operands[2] = virtual_stack_dynamic_rtx;\n     }\n   else\n     {\n@@ -4493,10 +4656,10 @@\n       rtx memref;\n \n       emit_insn (gen_subdi3 (want, stack_pointer_rtx,\n-\t\t\t     force_reg (Pmode, operands[0])));\n+\t\t\t     force_reg (Pmode, operands[1])));\n       emit_insn (gen_adddi3 (tmp, stack_pointer_rtx, GEN_INT (-4096)));\n \n-      if (GET_CODE (operands[0]) != CONST_INT)\n+      if (GET_CODE (operands[1]) != CONST_INT)\n \t{\n \t  out_label = gen_label_rtx ();\n \t  emit_insn (gen_cmpdi (want, tmp));\n@@ -4510,6 +4673,9 @@\n       emit_insn (gen_adddi3 (tmp, tmp, GEN_INT(-8192)));\n       emit_insn (gen_cmpdi (tmp, want));\n       emit_jump_insn (gen_bgtu (loop_label));\n+      if (obey_regdecls)\n+\tgen_rtx (USE, VOIDmode, tmp);\n+\n       memref = gen_rtx (MEM, DImode, want);\n       MEM_VOLATILE_P (memref) = 1;\n       emit_move_insn (memref, const0_rtx);\n@@ -4518,7 +4684,7 @@\n \temit_label (out_label);\n \n       emit_move_insn (stack_pointer_rtx, want);\n-\n+      emit_move_insn (operands[0], virtual_stack_dynamic_rtx);\n       DONE;\n     }\n }\")"}, {"sha": "9a8cc36aa722fb4fcfa367677b42718392f4d14c", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for Alpha Linux,\n    using ECOFF.\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Bob Manson.\n \n This file is part of GNU CC.\n@@ -65,7 +65,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* Show that we need a GP when profiling.  */\n #define TARGET_PROFILING_NEEDS_GP\n \n-/* We need that too. */\n+/* We support #pragma.  */\n #define HANDLE_SYSV_PRAGMA\n \n #undef ASM_FINAL_SPEC"}, {"sha": "87e21111f4dc511363f6f5a0241f5b914c884ae4", "filename": "gcc/config/alpha/osf12.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Fosf12.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Fosf12.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fosf12.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -31,7 +31,3 @@ Boston, MA 02111-1307, USA.  */\n #define WCHAR_TYPE \"short unsigned int\"\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 16\n-\n-/* The .arch pseudo op is not supported.  */\n-#undef ARCH_ASM_FILE_START\n-#define ARCH_ASM_FILE_START(FILE)"}, {"sha": "e6c19e5f30c8c59f1b023dd2005df91da7bb3aef", "filename": "gcc/config/alpha/osf2or3.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Fosf2or3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Fosf2or3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fosf2or3.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -21,8 +21,3 @@ Boston, MA 02111-1307, USA.  */\n /* In OSF 2 or 3, linking with -lprof1 doesn't require -lpdf.  */\n \n #undef LIB_SPEC\n-\n-/* The .arch pseudo op is not supported.  */\n-#undef ARCH_ASM_FILE_START\n-#define ARCH_ASM_FILE_START(FILE)\n-#define LIB_SPEC \"%{p:-lprof1} %{pg:-lprof1} %{a:-lprof2} -lc\""}, {"sha": "241ef0bb8580870b86c75d446c870af6b4bbaa08", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 167, "deletions": 35, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -127,19 +127,98 @@ Boston, MA 02111-1307, USA.  */\n   if ((TO) == STACK_POINTER_REGNUM)\t\t\t\t\t\\\n     (OFFSET) += ALPHA_ROUND (current_function_outgoing_args_size);\t\\\n }\n+\f\n+/* Define a data type for recording info about an argument list\n+   during the scan of that argument list.  This data type should\n+   hold all necessary information about the function itself\n+   and about the args processed so far, enough to enable macros\n+   such as FUNCTION_ARG to determine where the next arg should go.\n+\n+   On Alpha/VMS, this is a structure that contains the number of\n+   arguments and, for each argument, the datatype of that argument.\n+\n+   The number of arguments is a number of words of arguments scanned so far.\n+   Thus 6 or more means all following args should go on the stack.  */\n+\n+enum avms_arg_type {I64, FF, FD, FG, FS, FT};\n+typedef struct {char num_args; enum avms_arg_type atypes[6];} avms_arg_info;\n+\n+#undef CUMULATIVE_ARGS\n+#define CUMULATIVE_ARGS avms_arg_info\n+\n+/* Initialize a variable CUM of type CUMULATIVE_ARGS\n+   for a call to a function whose data type is FNTYPE.\n+   For a library call, FNTYPE is 0.  */\n+\n+#undef INIT_CUMULATIVE_ARGS\n+#define INIT_CUMULATIVE_ARGS(CUM,FNTYPE,LIBNAME,INDIRECT) \\\n+  (CUM).num_args = 0;\t\t\t\t\t\t\\\n+  (CUM).atypes[0] = (CUM).atypes[1] = (CUM).atypes[2] = I64;\t\\\n+  (CUM).atypes[3] = (CUM).atypes[4] = (CUM).atypes[5] = I64;\n+\n+/* Update the data in CUM to advance over an argument\n+   of mode MODE and data type TYPE.\n+   (TYPE is null for libcalls where that information may not be available.)  */\n+\n+extern enum avms_arg_type alpha_arg_type ();\n+\n+/* Determine where to put an argument to a function.\n+   Value is zero to push the argument on the stack,\n+   or a hard register in which to store the argument.\n+\n+   MODE is the argument's machine mode (or VOIDmode for no more args).\n+   TYPE is the data type of the argument (as a tree).\n+    This is null for libcalls where that information may\n+    not be available.\n+   CUM is a variable of type CUMULATIVE_ARGS which gives info about\n+    the preceding args and about the function being called.\n+   NAMED is nonzero if this argument is a named parameter\n+    (otherwise it is an extra parameter matching an ellipsis).\n+\n+   On Alpha the first 6 words of args are normally in registers\n+   and the rest are pushed.  */\n+\n+extern struct rtx_def *alpha_arg_info_reg_val ();\n+#undef FUNCTION_ARG\n+#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED)\t\\\n+((MODE) == VOIDmode ? alpha_arg_info_reg_val (CUM)\t\t\\\n+ : ((CUM.num_args) < 6 && ! MUST_PASS_IN_STACK (MODE, TYPE)\t\\\n+    ? gen_rtx(REG, (MODE),\t\t\t\t\t\\\n+\t      ((CUM).num_args + 16\t\t\t\t\\\n+\t       + ((TARGET_FPREGS\t\t\t\t\\\n+\t\t   && (GET_MODE_CLASS (MODE) == MODE_COMPLEX_FLOAT \\\n+\t\t       || GET_MODE_CLASS (MODE) == MODE_FLOAT)) \\\n+\t\t  * 32)))\t\t\t\\\n+    : 0))\n \n #undef FUNCTION_ARG_ADVANCE\n #define FUNCTION_ARG_ADVANCE(CUM, MODE, TYPE, NAMED)\t\t\t\\\n   if (MUST_PASS_IN_STACK (MODE, TYPE))\t\t\t\t\t\\\n-    (CUM) = (CUM & ~0xff) + 6;\t\t\t\t\t\t\\\n+    (CUM).num_args += 6;\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n-    (CUM) += ALPHA_ARG_SIZE (MODE, TYPE, NAMED)\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if ((CUM).num_args < 6)\t\t\t\t\t\t\\\n+        (CUM).atypes[(CUM).num_args] = alpha_arg_type (MODE);\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+     (CUM).num_args += ALPHA_ARG_SIZE (MODE, TYPE, NAMED);\t\t\\\n+    }\n+\n+/* For an arg passed partly in registers and partly in memory,\n+   this is the number of registers used.\n+   For args passed entirely in registers or entirely in memory, zero.  */\n \n #undef FUNCTION_ARG_PARTIAL_NREGS\n #define FUNCTION_ARG_PARTIAL_NREGS(CUM, MODE, TYPE, NAMED)\t\t\\\n-((CUM & 0xff) < 6 && 6 < (CUM & 0xff)\t\t\t\t\t\\\n+((CUM).num_args < 6 && 6 < (CUM).num_args\t\t\t\t\\\n    + ALPHA_ARG_SIZE (MODE, TYPE, NAMED)\t\t\t\t\t\\\n- ? 6 - (CUM & 0xff) : 0)\n+ ? 6 - (CUM).num_args : 0)\n+\n+#undef ENCODE_SECTION_INFO\n+#define ENCODE_SECTION_INFO(DECL)\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\\\n+  if (TREE_CODE (DECL) == FUNCTION_DECL && ! TREE_PUBLIC (DECL)) \\\n+    SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 1;\t\t\\\n+} while (0)\n \n /* Perform any needed actions needed for a function that is receiving a\n    variable number of arguments. \n@@ -164,7 +243,7 @@ Boston, MA 02111-1307, USA.  */\n \n #undef SETUP_INCOMING_VARARGS\n #define SETUP_INCOMING_VARARGS(CUM,MODE,TYPE,PRETEND_SIZE,NO_RTL)\t\\\n-{ if ((CUM) < 6)\t\t\t\t\t\\\n+{ if ((CUM).num_args < 6)\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       if (! (NO_RTL))\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\\\n@@ -206,11 +285,11 @@ Boston, MA 02111-1307, USA.  */\n   }\n \n #define LINK_SECTION_ASM_OP \".link\"\n-\n #define READONLY_SECTION_ASM_OP \".rdata\"\n+#define LITERALS_SECTION_ASM_OP \".literals\"\n \n #undef EXTRA_SECTIONS\n-#define EXTRA_SECTIONS\tin_link, in_rdata\n+#define EXTRA_SECTIONS\tin_link, in_rdata, in_literals\n \n #undef EXTRA_SECTION_FUNCTIONS\n #define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\\\n@@ -231,6 +310,15 @@ link_section ()\t\t\t\t\t\t\t\\\n       fprintf (asm_out_file, \"%s\\n\", LINK_SECTION_ASM_OP); \t\\\n       in_section = in_link;\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n+}                                                               \\\n+void\t\t\t\t\t\t\t\t\\\n+literals_section ()\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (in_section != in_literals)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"%s\\n\", LITERALS_SECTION_ASM_OP); \t\\\n+      in_section = in_literals;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n }\n \n #undef ASM_OUTPUT_ADDR_DIFF_ELT\n@@ -245,10 +333,6 @@ link_section ()\t\t\t\t\t\t\t\\\n \n #define ASM_FILE_END(FILE) alpha_write_linkage (FILE);\n \n-#undef FUNCTION_ARG\n-void *function_arg ();\n-#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED)\tfunction_arg (&CUM, MODE, TYPE, NAMED)\n-\n #undef CASE_VECTOR_MODE\n #define CASE_VECTOR_MODE DImode\n #undef CASE_VECTOR_PC_RELATIVE\n@@ -273,46 +357,101 @@ void *function_arg ();\n {\t\t\t\t\t\t\\\n   fprintf (FILE, \"\\t.quad 0\\n\");\t\t\\\n   fprintf (FILE, \"\\t.linkage __tramp\\n\");\t\\\n+  fprintf (FILE, \"\\t.quad 0\\n\");\t\t\\\n }\n \n /* Length in units of the trampoline for entering a nested function.  */\n \n #undef TRAMPOLINE_SIZE\n-#define TRAMPOLINE_SIZE    24\n+#define TRAMPOLINE_SIZE    32\n \n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code.\n    CXT is an RTX for the static chain value for the function.  */\n \n #undef INITIALIZE_TRAMPOLINE\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  emit_move_insn (gen_rtx (MEM, Pmode, (TRAMP)), (FNADDR));\t\t\\\n-  emit_move_insn (gen_rtx (MEM, Pmode,\t\t\t\t\t\\\n-\t\t\t   memory_address (Pmode,\t\t\t\\\n+#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t  \\\n+{\t\t\t\t\t\t\t\t\t  \\\n+  emit_move_insn (gen_rtx (MEM, Pmode,                                    \\\n+\t\t\t   memory_address (Pmode,\t\t\t  \\\n \t\t\t\t\t   plus_constant ((TRAMP), 16))), \\\n-\t\t  (CXT));\t\t\t\t\t\t\\\n+\t\t  (FNADDR));\t\t                                  \\\n+  emit_move_insn (gen_rtx (MEM, Pmode,\t\t\t\t\t  \\\n+\t\t\t   memory_address (Pmode,\t\t\t  \\\n+\t\t\t\t\t   plus_constant ((TRAMP), 24))), \\\n+\t\t  (CXT));\t\t\t\t\t\t  \\\n }\n \n #undef TRANSFER_FROM_TRAMPOLINE\n \n+#define VALID_MACHINE_DECL_ATTRIBUTE(DECL, ATTRIBUTES, NAME, ARGS) \\\n+  (vms_valid_decl_attribute_p (DECL, ATTRIBUTES, NAME, ARGS))\n+extern int vms_valid_decl_attribute_p ();\n+\n #undef SDB_DEBUGGING_INFO\n #undef MIPS_DEBUGGING_INFO\n-\n-#ifndef DBX_DEBUGGING_INFO\n-#define DBX_DEBUGGING_INFO\n-#endif\n+#undef DBX_DEBUGGING_INFO\n \n #define DWARF2_DEBUGGING_INFO\n \n-#ifdef PREFERRED_DEBUGGING_TYPE\n+/* This is how to output an assembler line\n+   that says to advance the location counter\n+   to a multiple of 2**LOG bytes.  */\n+\n+#undef ASM_OUTPUT_ALIGN\n+#define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\\n+    fprintf (FILE, \"\\t.align %d\\n\", LOG);\n+\n+#define UNALIGNED_SHORT_ASM_OP\t\".word\"\n+#define UNALIGNED_INT_ASM_OP\t\".long\"\n+#define UNALIGNED_DOUBLE_INT_ASM_OP\t\".quad\"\n+\n+#undef ASM_OUTPUT_ALIGNED_COMMON\n+#define ASM_OUTPUT_ALIGNED_COMMON(FILE, NAME, SIZE, ALIGN)\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  fprintf ((FILE), \"\\t.comm\\t\");\t\t\t\t\t\\\n+  assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n+  fprintf ((FILE), \",%u,%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n+} while (0)\n+\n+#define ASM_OUTPUT_SECTION(FILE,SECTION)\t\t\t\\\n+   (strcmp (SECTION, \".text\") == 0)\t\t\t\t\\\n+     ? text_section ()\t\t\t\t\t\t\\\n+     : named_section (NULL_TREE, SECTION, 0),\t\t\t\\\n+       ASM_OUTPUT_ALIGN (FILE, 0)\t\t\t\t\\\n+\n+#define ASM_OUTPUT_SECTION_NAME(FILE,DECL,NAME,RELOC)\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      char *flags;\t\t\t\t\t \t\\\n+      int ovr = 0;\t\t\t\t\t\t\\\n+      if (DECL && DECL_MACHINE_ATTRIBUTES (DECL)\t\t\\\n+\t  && lookup_attribute\t\t\t\t\t\\\n+\t      (\"overlaid\", DECL_MACHINE_ATTRIBUTES (DECL)))\t\\\n+\tflags = \",OVR\", ovr = 1;\t\t\t\t\\\n+      else if (strncmp (NAME,\".debug\", 6) == 0)\t\t\t\\\n+\tflags = \",NOWRT\";\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\\\n+\tflags = \"\";\t\t\t\t\t\t\\\n+      fputc ('\\n', (FILE));\t\t\t\t\t\\\n+      fprintf (FILE, \".section\\t%s%s\\n\", NAME, flags);\t\t\\\n+      if (ovr)\t\t\t\t\t\t\t\\\n+        (NAME) = \"\";\t\t\t\t\t\t\\\n+    } while (0)\n+\n+#define ASM_OUTPUT_DEF(FILE,LABEL1,LABEL2)\t\t\t\t\\\n+  do {\tliterals_section();                                             \\\n+\tfprintf ((FILE), \"\\t\");\t\t\t\t\t\t\\\n+\tassemble_name (FILE, LABEL1);\t\t\t\t\t\\\n+\tfprintf (FILE, \" = \");\t\t\t\t\t\t\\\n+\tassemble_name (FILE, LABEL2);\t\t\t\t\t\\\n+\tfprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n+  } while (0)\n+\n #undef PREFERRED_DEBUGGING_TYPE\n-#endif\n-#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n-#ifdef ASM_FORMAT_PRIVATE_NAME\n #undef ASM_FORMAT_PRIVATE_NAME\n-#endif\n #define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n ( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 12),\t\\\n   sprintf ((OUTPUT), \"%s___%d\", (NAME), (LABELNO)))\n@@ -322,9 +461,6 @@ void *function_arg ();\n \n #undef ASM_FINAL_SPEC\n \n-#undef LIBGCC_SPEC\n-#define LIBGCC_SPEC \"-lgcc2 -lgcclib\"\n-\n #define OPTIMIZATION_OPTIONS                       \\\n {                                                  \\\n    write_symbols = PREFERRED_DEBUGGING_TYPE;       \\\n@@ -340,13 +476,9 @@ void *function_arg ();\n }\n \n #undef LINK_SPEC\n-#define LINK_SPEC \"%{g3:-g3} %{g0:-g0}\"\n+#define LINK_SPEC \"%{g3:-g3} %{g0:-g0} %{shared:-shared} %{v:-v}\"\n \n #undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"\"\n-\n-#undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \"gnu:[000000]crt0.obj\"\n \n /* Define the names of the division and modulus functions.  */\n #define DIVSI3_LIBCALL \"OTS$DIV_I\""}, {"sha": "81595854e7ec5766cf1017010801bf4a1160268f", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,4 +1,4 @@\n-/* Subroutines used for code generation on the ARC cpu.\n+/* Subroutines used for code generation on the Argonaut ARC cpu.\n    Copyright (C) 1994, 1995, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC."}, {"sha": "4257efaee3ba19311ab243db12ea516e973ce24a", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions of target machine for GNU compiler, for the ARC cpu.\n+/* Definitions of target machine for GNU compiler, Argonaut ARC cpu.\n    Copyright (C) 1994, 1995, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n@@ -27,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n    - print active compiler options in assembler output\n */\n \n-/* FIXME: Create elf.h and have svr4.h include it.  */\n+/* ??? Create elf.h and have svr4.h include it.  */\n #include \"svr4.h\"\n \n #undef ASM_SPEC\n@@ -589,7 +589,7 @@ extern enum reg_class arc_regno_reg_class[];\n    If you don't define this macro, the default is to return the value\n    of FRAMEADDR--that is, the stack frame address is also the address\n    of the stack word that points to the previous frame.  */\n-/* FIXME: unfinished */\n+/* ??? unfinished */\n /*define DYNAMIC_CHAIN_ADDRESS (FRAMEADDR)*/\n \n /* A C expression whose value is RTL representing the value of the\n@@ -989,7 +989,7 @@ do { \\\n \n /* local to this file */\n #define RTX_OK_FOR_INDEX_P(X) \\\n-(0 && /*FIXME*/ REG_P (X) && REG_OK_FOR_INDEX_P (X))\n+(0 && /*???*/ REG_P (X) && REG_OK_FOR_INDEX_P (X))\n \n /* local to this file */\n /* ??? Loads can handle any constant, stores can only handle small ones.  */\n@@ -1060,7 +1060,7 @@ arc_select_cc_mode (OP, X, Y)\n \n /* Return non-zero if SELECT_CC_MODE will never return MODE for a\n    floating point inequality comparison.  */\n-#define REVERSIBLE_CC_MODE(MODE) 1 /*FIXME*/\n+#define REVERSIBLE_CC_MODE(MODE) 1 /*???*/\n \f\n /* Costs.  */\n "}, {"sha": "328b1ebd991a2f46352ce5bfd44f29e2e7495d10", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,4 +1,4 @@\n-;; Machine description of the ARC cpu for GNU C compiler\n+;; Machine description of the Argonaut ARC cpu for GNU C compiler\n ;; Copyright (C) 1994, 1997 Free Software Foundation, Inc.\n \n ;; This file is part of GNU CC."}, {"sha": "9aeb5aebcafa65a3ed357ab355e4959cca95c45a", "filename": "gcc/config/i386/freebsd.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler for Intel 80386\n    running FreeBSD.\n-   Copyright (C) 1988, 1992, 1994, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1992, 1994, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Poul-Henning Kamp <phk@login.dkuug.dk>\n \n This file is part of GNU CC.\n@@ -229,9 +229,9 @@ do {                                                                    \\\n #ifdef FREEBSD_NATIVE\n \n #define INCLUDE_DEFAULTS { \\\n-\t{ \"/usr/include\", 0 }, \\\n-\t{ \"/usr/include/g++\", 1 }, \\\n-\t{ 0, 0} \\\n+\t{ \"/usr/include\", 0, 0, 0 }, \\\n+\t{ \"/usr/include/g++\", \"G++\", 1, 1 }, \\\n+\t{ 0, 0, 0, 0} \\\n \t}\n \n #undef MD_EXEC_PREFIX"}, {"sha": "8516911dd1d6576ee4bb6949967e94e481569e27", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 914, "deletions": 852, "changes": 1766, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "105bce1ea803a11e1d976d8f60a0facc3e8b72cd", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -2626,7 +2626,6 @@ extern char *qi_high_reg_name[];\n    we can use for operand syntax in the extended asm */\n \n #define ASM_OPERAND_LETTER '#'\n-\f\n #define RET return \"\"\n #define AT_SP(mode) (gen_rtx (MEM, (mode), stack_pointer_rtx))\n \f"}, {"sha": "64edb555dfb91c42f264727802b8297aa55e7289", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -6530,7 +6530,7 @@ byte_xor_operation:\n     }\n   else  \n     {\n-      sprintf (buffer, \\\"addl %s+[.-.L%d],%%0\\\", XSTR (operands[1], 0), INTVAL (operands[2]));\n+      sprintf (buffer, \\\"addl %s+[.-%%P2],%%0\\\", XSTR (operands[1], 0));\n       output_asm_insn (buffer, operands);\n     }    \n   RET;\n@@ -6547,7 +6547,7 @@ byte_xor_operation:\n   output_asm_insn (AS1 (call,%P1), operands);\n   if (! TARGET_DEEP_BRANCH_PREDICTION) \n     {\n-      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", INTVAL (operands[1]));\n+      ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\", CODE_LABEL_NUMBER (operands[1]));\n     }    \n   RET;\n }\")\n@@ -6615,8 +6615,8 @@ byte_xor_operation:\n   operands[5] = addr0;\n   operands[6] = addr1;\n \n-  operands[0] = gen_rtx (MEM, BLKmode, addr0);\n-  operands[1] = gen_rtx (MEM, BLKmode, addr1);\n+  operands[0] = change_address (operands[0], VOIDmode, addr0);\n+  operands[1] = change_address (operands[1], VOIDmode, addr1);\n }\")\n \n ;; It might seem that operands 0 & 1 could use predicate register_operand.\n@@ -7656,20 +7656,31 @@ byte_xor_operation:\n   \"* return AS1(call,__alloca);\")\n \n (define_expand \"allocate_stack\"\n-  [(set (reg:SI 7)\n-\t(minus:SI (reg:SI 7) (match_operand:SI 0 \"general_operand\" \"\")))]\n-  \"TARGET_STACK_PROBE\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+  \t(minus:SI (reg:SI 7) (match_operand:SI 1 \"general_operand\" \"\")))\n+   (set (reg:SI 7) (minus:SI (reg:SI 7) (match_dup 1)))]\n+   \"TARGET_STACK_PROBE\"\n   \"\n {\n #ifdef CHECK_STACK_LIMIT\n-  if (GET_CODE (operands[0]) == CONST_INT\n-      && INTVAL (operands[0]) < CHECK_STACK_LIMIT)\n+  if (GET_CODE (operands[1]) == CONST_INT\n+      && INTVAL (operands[1]) < CHECK_STACK_LIMIT)\n     emit_insn (gen_subsi3 (stack_pointer_rtx, stack_pointer_rtx,\n-\t\t\t   operands[0]));\n+\t\t\t   operands[1]));\n   else \n #endif\n     emit_insn (gen_allocate_stack_worker (copy_to_mode_reg (SImode,\n-\t\t\t\t\t\t\t    operands[0])));\n+\t\t\t\t\t\t\t    operands[1])));\n \n+  emit_move_insn (operands[0], virtual_stack_dynamic_rtx);\n+  DONE;\n+}\")\n+\n+(define_expand \"nonlocal_goto_receiver\"\n+  [(const_int 0)]\n+  \"flag_pic\"\n+  \"\n+{\n+  load_pic_register (1);\n   DONE;\n }\")"}, {"sha": "ada2d9f4ff7660513eff16400bae2be41829ce1b", "filename": "gcc/config/i386/rtems.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtems.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,6 +1,5 @@\n /* Definitions for rtems targetting an Intel i386 using coff.\n-\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -27,5 +26,3 @@ Boston, MA 02111-1307, USA.  */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Di386 -Drtems -D__rtems__ \\\n    -Asystem(rtems) -Acpu(i386) -Amachine(i386)\"\n-\n-/* end of i386/rtems.h */"}, {"sha": "14f14c497b08d70f524ecac5c1bf9a58e6c1a781", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel 386 running SCO Unix System V 3.2 Version 5.\n-   Copyright (C) 1992, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Kean Johnston (hug@netcom.com)\n \n This file is part of GNU CC."}, {"sha": "af83917f073d4970970c0851257f2551290896bf", "filename": "gcc/config/i960/i960.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi960%2Fi960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi960%2Fi960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -81,7 +81,7 @@ Boston, MA 02111-1307, USA.  */\n #define LINK_SPEC \\\n \t\"%{mka:-AKA}%{mkb:-AKB}%{msa:-ASA}%{msb:-ASB}\\\n \t%{mmc:-AMC}%{mca:-ACA}%{mcc:-ACC}%{mcf:-ACF}\\\n-\t%{mja:-AJX}%{mjd:-AJX}%{mjf:-AJX}%{mrp:-AJX}\\\n+        %{mja:-AJX}%{mjd:-AJX}%{mjf:-AJX}%{mrp:-AJX}\\\n \t%{mbout:-Fbout}%{mcoff:-Fcoff}\\\n \t%{mlink-relax:-relax}\"\n "}, {"sha": "0c52cef5c453ed12dde54334e378bc397d4a0969", "filename": "gcc/config/i960/rtems.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi960%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fi960%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Frtems.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,6 +1,5 @@\n /* Definitions for rtems targetting an Intel i960.\n-\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -27,5 +26,3 @@ Boston, MA 02111-1307, USA.  */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Di960 -Di80960 -DI960 -DI80960 -Drtems -D__rtems__ \\\n    -Asystem(rtems) -Acpu(i960) -Amachine(i960)\"\n-\n-/* end of i960/rtems.h */"}, {"sha": "c332065685eb8879f8c9a4f1dcab82e7476af3d4", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -20,8 +20,8 @@ Boston, MA 02111-1307, USA.  */\n \n \n /* Some output-actions in m68k.md need these.  */\n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n@@ -3049,7 +3049,11 @@ print_operand_address (file, addr)\n \t      {\n \t\toutput_addr_const (file, addr);\n \t        if (flag_pic && (breg == pic_offset_table_rtx))\n-\t          fprintf (file, \"@GOT\");\n+\t\t  {\n+\t\t    fprintf (file, \"@GOT\");\n+\t\t    if (flag_pic == 1)\n+\t\t      fprintf (file, \".w\");\n+\t\t  }\n \t      }\n \t    fprintf (file, \"(%s\", reg_names[REGNO (breg)]);\n \t    if (ireg != 0)"}, {"sha": "ddcac6555be730a76e12e570d3cf5f2113089a81", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 50, "deletions": 30, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -5813,28 +5813,34 @@\n   else\n     operands[3] = adj_offsettable_operand (operands[0], 4);\n   if (! ADDRESS_REG_P (operands[0]))\n+    {\n #ifdef MOTOROLA\n-    return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jbeq %l1\\\";\n+      return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jbeq %l1\\\";\n #else\n-    return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jeq %l1\\\";\n+      return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jeq %l1\\\";\n #endif\n+    }\n   operands[4] = gen_label_rtx();\n   if (TARGET_68020 || TARGET_5200)\n+    {\n #ifdef MOTOROLA\n-    output_asm_insn (\\\"tst%.l %0\\;jbne %l4\\;tst%.l %3\\;jbeq %l1\\\", operands);\n+      output_asm_insn (\\\"tst%.l %0\\;jbne %l4\\;tst%.l %3\\;jbeq %l1\\\", operands);\n #else\n-    output_asm_insn (\\\"tst%.l %0\\;jne %l4\\;tst%.l %3\\;jeq %l1\\\", operands);\n+      output_asm_insn (\\\"tst%.l %0\\;jne %l4\\;tst%.l %3\\;jeq %l1\\\", operands);\n #endif\n+    }\n   else\n+    {\n #ifdef MOTOROLA\n #ifdef SGS_CMP_ORDER\n-    output_asm_insn (\\\"cmp%.w %0,%#0\\;jbne %l4\\;cmp%.w %3,%#0\\;jbeq %l1\\\", operands);\n+      output_asm_insn (\\\"cmp%.w %0,%#0\\;jbne %l4\\;cmp%.w %3,%#0\\;jbeq %l1\\\", operands);\n #else\n-    output_asm_insn (\\\"cmp%.w %#0,%0\\;jbne %l4\\;cmp%.w %#0,%3\\;jbeq %l1\\\", operands);\n+      output_asm_insn (\\\"cmp%.w %#0,%0\\;jbne %l4\\;cmp%.w %#0,%3\\;jbeq %l1\\\", operands);\n #endif\n #else\n-    output_asm_insn (\\\"cmp%.w %#0,%0\\;jne %l4\\;cmp%.w %#0,%3\\;jeq %l1\\\", operands);\n+      output_asm_insn (\\\"cmp%.w %#0,%0\\;jne %l4\\;cmp%.w %#0,%3\\;jeq %l1\\\", operands);\n #endif\n+    }\n   ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n \t\t\t\tCODE_LABEL_NUMBER (operands[4]));\n   return \\\"\\\";\n@@ -5868,27 +5874,33 @@\n   else\n     operands[3] = adj_offsettable_operand (operands[0], 4);\n   if (!ADDRESS_REG_P (operands[0]))\n+    {\n #ifdef MOTOROLA\n-    return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jbne %l1\\\";\n+      return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jbne %l1\\\";\n #else\n-    return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jne %l1\\\";\n+      return \\\"move%.l %0,%2\\;or%.l %3,%2\\;jne %l1\\\";\n #endif\n+    }\n   if (TARGET_68020 || TARGET_5200)\n+    {\n #ifdef MOTOROLA\n-    return \\\"tst%.l %0\\;jbne %l1\\;tst%.l %3\\;jbne %l1\\\";\n+      return \\\"tst%.l %0\\;jbne %l1\\;tst%.l %3\\;jbne %l1\\\";\n #else\n-    return \\\"tst%.l %0\\;jne %l1\\;tst%.l %3\\;jne %l1\\\";\n+      return \\\"tst%.l %0\\;jne %l1\\;tst%.l %3\\;jne %l1\\\";\n #endif\n+    }\n   else\n+    {\n #ifdef MOTOROLA\n #ifdef SGS_CMP_ORDER\n-    return \\\"cmp%.w %0,%#0\\;jbne %l1\\;cmp%.w %3,%#0\\;jbne %l1\\\";\n+      return \\\"cmp%.w %0,%#0\\;jbne %l1\\;cmp%.w %3,%#0\\;jbne %l1\\\";\n #else\n-    return \\\"cmp%.w %#0,%0\\;jbne %l1\\;cmp%.w %#0,%3\\;jbne %l1\\\";\n+      return \\\"cmp%.w %#0,%0\\;jbne %l1\\;cmp%.w %#0,%3\\;jbne %l1\\\";\n #endif\n #else\n-    return \\\"cmp%.w %#0,%0\\;jne %l1\\;cmp%.w %#0,%3\\;jne %l1\\\";\n+      return \\\"cmp%.w %#0,%0\\;jne %l1\\;cmp%.w %#0,%3\\;jne %l1\\\";\n #endif\n+    }\n } \")\n \n (define_insn \"bge0_di\"\n@@ -5927,17 +5939,19 @@\n   if (TARGET_68020 || TARGET_5200 || ! ADDRESS_REG_P (operands[0]))\n     output_asm_insn(\\\"tst%.l %0\\\", operands);\n   else\n-    /* On an address reg, cmpw may replace cmpl.  */\n+    {\n+      /* On an address reg, cmpw may replace cmpl.  */\n #ifdef SGS_CMP_ORDER\n-    output_asm_insn(\\\"cmp%.w %0,%#0\\\", operands);\n+      output_asm_insn(\\\"cmp%.w %0,%#0\\\", operands);\n #else\n-    output_asm_insn(\\\"cmp%.w %#0,%0\\\", operands);\n+      output_asm_insn(\\\"cmp%.w %#0,%0\\\", operands);\n #endif\n+    }\n \n #ifdef MOTOROLA\n-    return \\\"jbpl %l1\\\";\n+  return \\\"jbpl %l1\\\";\n #else\n-    return \\\"jpl %l1\\\";\n+  return \\\"jpl %l1\\\";\n #endif\n } \")\n \n@@ -5977,12 +5991,14 @@\n   if (TARGET_68020 || TARGET_5200 || ! ADDRESS_REG_P (operands[0]))\n     output_asm_insn(\\\"tst%.l %0\\\", operands);\n   else\n-    /* On an address reg, cmpw may replace cmpl.  */\n+    {\n+      /* On an address reg, cmpw may replace cmpl.  */\n #ifdef SGS_CMP_ORDER\n-    output_asm_insn(\\\"cmp%.w %0,%#0\\\", operands);\n+      output_asm_insn(\\\"cmp%.w %0,%#0\\\", operands);\n #else\n-    output_asm_insn(\\\"cmp%.w %#0,%0\\\", operands);\n+      output_asm_insn(\\\"cmp%.w %#0,%0\\\", operands);\n #endif\n+    }\n \n #ifdef MOTOROLA\n   return \\\"jbmi %l1\\\";\n@@ -6732,21 +6748,23 @@\n   \"*\n   if (GET_CODE (operands[1]) == MEM\n       && GET_CODE (XEXP (operands[1], 0)) == SYMBOL_REF)\n+    {\n #ifdef MOTOROLA\n #ifdef HPUX_ASM\n-    return \\\"bsr.l %1\\\";\n+      return \\\"bsr.l %1\\\";\n #else\n #ifdef USE_GAS\n-    return \\\"bsr.l %1@PLTPC\\\";\n+      return \\\"bsr.l %1@PLTPC\\\";\n #else\n-    return \\\"bsr %1@PLTPC\\\";\n+      return \\\"bsr %1@PLTPC\\\";\n #endif\n #endif\n #else\n-    /* The ',a1' is a dummy argument telling the Sun assembler we want PIC\n-       GAS just plain ignores it.  */\n-    return \\\"jbsr %1,a1\\\";\n+      /* The ',a1' is a dummy argument telling the Sun assembler we want PIC\n+         GAS just plain ignores it.  */\n+      return \\\"jbsr %1,a1\\\";\n #endif\n+    }\n   return \\\"jsr %1\\\";\n \")\n \n@@ -6971,11 +6989,13 @@\n \t  if (TARGET_68040)\n \t    output_asm_insn (\\\"add%.w %1,%0\\\", xoperands);\n \t  else\n+\t    {\n #ifdef MOTOROLA  \n-\t    output_asm_insn (\\\"lea (%c1,%0),%0\\\", xoperands);\n+\t      output_asm_insn (\\\"lea (%c1,%0),%0\\\", xoperands);\n #else\n-\t    output_asm_insn (\\\"lea %0@(%c1),%0\\\", xoperands);\n+\t      output_asm_insn (\\\"lea %0@(%c1),%0\\\", xoperands);\n #endif\n+\t    }\n         }\n       else\n         output_asm_insn (\\\"add%.l %1,%0\\\", xoperands);"}, {"sha": "74723466c30d2963150582d1d438bcab0448a564", "filename": "gcc/config/m68k/rtems.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm68k%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm68k%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Frtems.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for rtems targetting a Motorola m68k using coff.\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -26,5 +26,3 @@ Boston, MA 02111-1307, USA.  */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Dmc68000 -Drtems -D__rtems__ \\\n    -Asystem(rtems) -Acpu(mc68000) -Acpu(m68k) -Amachine(m68k)\"\n-\n-/* end of m68k/rtems.h */"}, {"sha": "bd772273d3f229976a0df7c86fbbccc92472e345", "filename": "gcc/config/m88k/dolph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm88k%2Fdolph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm88k%2Fdolph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdolph.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola m88100 running the Dolphin UNIX System V/88 Release 3.2,\n    Version 3.8/7.83 and 3.6/5.86\n-   Copyright (C) 1992, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "2fd082475ddbe93d6cc233a8a18ef66d2c4ee470", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -20,13 +20,14 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#include \"config.h\"\n+\n #include <stdio.h>\n #include <sys/types.h>\n #include <time.h>\n #include <ctype.h>\n \n #include \"assert.h\"\n-#include \"config.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "ef35189739805e67ffa8d21d3e34220566f3a8e3", "filename": "gcc/config/m88k/sysv3.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm88k%2Fsysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fm88k%2Fsysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fsysv3.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola m88100 running the AT&T/Unisoft/Motorola V.3 reference port.\n-   Copyright (C) 1990, 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1990, 1991, 1997 Free Software Foundation, Inc.\n    Contributed by Ray Essick (ressick@mot.com)\n    Enhanced by Tom Wood (Tom_Wood@NeXT.com)\n "}, {"sha": "e66481f30e9e327b60d4d30e87fd4a9b8ee826a0", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -30,9 +30,8 @@ Boston, MA 02111-1307, USA.  */\n #include \"mips/iris5.h\"\n #include \"mips/abi64.h\"\n \n-/* For Irix 6, -mips3 implies TARGET_LONG64.  */\n-#undef TARGET_LONG64\n-#define TARGET_LONG64\t\t(mips_abi == ABI_64)\n+/* For Irix 6, -mabi=64 implies TARGET_LONG64.  */\n+/* This is handled in override_options.  */\n \n #undef SUBTARGET_CC1_SPEC\n #define SUBTARGET_CC1_SPEC \"%{static: -mno-abicalls}\"\n@@ -500,18 +499,18 @@ do {\t\t\t\t\t\t\t\t\t \\\n          %{!pg:%{p:/usr/lib32/mips3/nonshared/mcrt1.o%s \\\n              /usr/lib32/mips3/nonshared/libprof1.a%s} \\\n            %{!p:/usr/lib32/mips3/nonshared/crt1.o%s}}}}}} \\\n-   %{mabi=n32: %{mips4:-L/usr/lib32/mips4} %{!mips4:-L/usr/lib32/mips3} \\\n+   crtbegin.o%s\"\n+\n+#undef LIB_SPEC\n+#define LIB_SPEC \\\n+  \"%{mabi=n32: %{mips4:-L/usr/lib32/mips4} %{!mips4:-L/usr/lib32/mips3} \\\n      -L/usr/lib32} \\\n    %{mabi=64: %{mips4:-L/usr/lib64/mips4} %{!mips4:-L/usr/lib64/mips3} \\\n      -L/usr/lib64} \\\n    %{!mabi*: %{mips4:-L/usr/lib32/mips4} %{!mips4:-L/usr/lib32/mips3} \\\n      -L/usr/lib32} \\\n-   crtbegin.o%s\"\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"\\\n-%{!shared: \\\n-  -dont_warn_unused %{p:libprof1.a%s}%{pg:libprof1.a%s} -lc -warn_unused}\"\n+   %{!shared: \\\n+     -dont_warn_unused %{p:libprof1.a%s}%{pg:libprof1.a%s} -lc -warn_unused}\"\n \n /* Avoid getting two warnings for libgcc.a everytime we link.  */\n #undef LIBGCC_SPEC"}, {"sha": "85164356d887379b4fce9637eeddafd495899e14", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 42, "deletions": 30, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for MIPS\n-   Copyright (C) 1989, 90, 91, 93-95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 90, 91, 93-96, 1997 Free Software Foundation, Inc.\n    Contributed by A. Lichnewsky, lich@inria.inria.fr.\n    Changes by Michael Meissner, meissner@osf.org.\n    64 bit r4000 support by Ian Lance Taylor, ian@cygnus.com, and\n@@ -27,6 +27,9 @@ Boston, MA 02111-1307, USA.  */\n    be replaced with something better designed.  */\n \n #include \"config.h\"\n+\n+#include <stdio.h>\n+\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n@@ -42,7 +45,6 @@ Boston, MA 02111-1307, USA.  */\n #undef MAX\t\t\t/* sys/param.h may also define these */\n #undef MIN\n \n-#include <stdio.h>\n #include <signal.h>\n #include <sys/types.h>\n #include <sys/file.h>\n@@ -3208,6 +3210,8 @@ function_arg (cum, mode, type, named)\n \t\t    % BITS_PER_WORD == 0))\n \t      break;\n \n+\t  /* If the whole struct fits a DFmode register,\n+\t     we don't need the PARALLEL.  */\n \t  if (! field || mode == DFmode)\n \t    ret = gen_rtx (REG, mode, regbase + *arg_words + bias);\n \t  else\n@@ -3222,11 +3226,6 @@ function_arg (cum, mode, type, named)\n \t      /* ??? If this is a packed structure, then the last hunk won't\n \t\t be 64 bits.  */\n \n-\t      /* ??? If this is a structure with a single double field,\n-\t\t it would be more convenient to return (REG:DI %fX) than\n-\t\t a parallel.  However, we would have to modify the mips\n-\t\t backend to allow DImode values in fp registers.  */\n-\n \t      chunks = TREE_INT_CST_LOW (TYPE_SIZE (type)) / BITS_PER_WORD;\n \t      if (chunks + *arg_words + bias > MAX_ARGS_IN_REGISTERS)\n \t\tchunks = MAX_ARGS_IN_REGISTERS - *arg_words - bias;\n@@ -3479,8 +3478,10 @@ override_options ()\n   if (mips_abi == ABI_32)\n     target_flags &= ~ (MASK_FLOAT64|MASK_64BIT);\n \n-  /* In the EABI in 64 bit mode, longs and pointers are 64 bits.  */\n-  if (mips_abi == ABI_EABI && TARGET_64BIT)\n+  /* In the EABI in 64 bit mode, longs and pointers are 64 bits.  Likewise\n+   for the SGI Irix6 N64 ABI.  */\n+  if ((mips_abi == ABI_EABI && TARGET_64BIT)\n+      || mips_abi == ABI_64)\n     target_flags |= MASK_LONG64;\n \n   /* ??? This doesn't work yet, so don't let people try to use it.  */\n@@ -3555,6 +3556,8 @@ override_options ()\n \tcase '3':\n \t  if (!strcmp (p, \"3000\") || !strcmp (p, \"3k\") || !strcmp (p, \"3K\"))\n \t    mips_cpu = PROCESSOR_R3000;\n+\t  else if (!strcmp (p, \"3900\"))\n+\t    mips_cpu = PROCESSOR_R3900;\n \t  break;\n \n \tcase '4':\n@@ -5212,29 +5215,35 @@ function_prologue (file, size)\n      exactly matches the name used in ASM_DECLARE_FUNCTION_NAME.  */\n   fnname = XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0);\n \n-  fputs (\"\\t.ent\\t\", file);\n-  assemble_name (file, fnname);\n-  fputs (\"\\n\", file);\n+  if (!flag_inhibit_size_directive)\n+    {\n+      fputs (\"\\t.ent\\t\", file);\n+      assemble_name (file, fnname);\n+      fputs (\"\\n\", file);\n+    }\n \n   assemble_name (file, fnname);\n   fputs (\":\\n\", file);\n #endif\n \n-  fprintf (file, \"\\t.frame\\t%s,%d,%s\\t\\t# vars= %d, regs= %d/%d, args= %d, extra= %d\\n\",\n-\t   reg_names[ (frame_pointer_needed) ? FRAME_POINTER_REGNUM : STACK_POINTER_REGNUM ],\n-\t   tsize,\n-\t   reg_names[31 + GP_REG_FIRST],\n-\t   current_frame_info.var_size,\n-\t   current_frame_info.num_gp,\n-\t   current_frame_info.num_fp,\n-\t   current_function_outgoing_args_size,\n-\t   current_frame_info.extra_size);\n-\n-  fprintf (file, \"\\t.mask\\t0x%08lx,%d\\n\\t.fmask\\t0x%08lx,%d\\n\",\n-\t   current_frame_info.mask,\n-\t   current_frame_info.gp_save_offset,\n-\t   current_frame_info.fmask,\n-\t   current_frame_info.fp_save_offset);\n+  if (!flag_inhibit_size_directive)\n+    {\n+      fprintf (file, \"\\t.frame\\t%s,%d,%s\\t\\t# vars= %d, regs= %d/%d, args= %d, extra= %d\\n\",\n+\t      reg_names[ (frame_pointer_needed) ? FRAME_POINTER_REGNUM : STACK_POINTER_REGNUM ],\n+\t      tsize,\n+\t      reg_names[31 + GP_REG_FIRST],\n+\t      current_frame_info.var_size,\n+\t      current_frame_info.num_gp,\n+\t      current_frame_info.num_fp,\n+\t      current_function_outgoing_args_size,\n+\t      current_frame_info.extra_size);\n+\n+      fprintf (file, \"\\t.mask\\t0x%08lx,%d\\n\\t.fmask\\t0x%08lx,%d\\n\",\n+\t       current_frame_info.mask,\n+\t       current_frame_info.gp_save_offset,\n+\t       current_frame_info.fmask,\n+\t       current_frame_info.fp_save_offset);\n+    }\n \n   if (TARGET_ABICALLS && mips_abi == ABI_32)\n     {\n@@ -5478,9 +5487,12 @@ function_epilogue (file, size)\n      exactly matches the name used in ASM_DECLARE_FUNCTION_NAME.  */\n   fnname = XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0);\n \n-  fputs (\"\\t.end\\t\", file);\n-  assemble_name (file, fnname);\n-  fputs (\"\\n\", file);\n+  if (!flag_inhibit_size_directive)\n+    {\n+      fputs (\"\\t.end\\t\", file);\n+      assemble_name (file, fnname);\n+      fputs (\"\\n\", file);\n+    }\n #endif\n \n   if (TARGET_STATS)"}, {"sha": "be5b8527ceae0d8d7d7270f7895b5011d991e09b", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -28,11 +28,8 @@ Boston, MA 02111-1307, USA.  */\n extern char    *asm_file_name;\n extern char\tcall_used_regs[];\n extern int\tcurrent_function_calls_alloca;\n-extern int\tflag_omit_frame_pointer;\n-extern int\tframe_pointer_needed;\n extern char    *language_string;\n extern int\tmay_call_alloca;\n-extern int\toptimize;\n extern char   **save_argv;\n extern int\ttarget_flags;\n extern char    *version_string;\n@@ -64,6 +61,7 @@ enum delay_type {\n enum processor_type {\n   PROCESSOR_DEFAULT,\n   PROCESSOR_R3000,\n+  PROCESSOR_R3900,\n   PROCESSOR_R6000,\n   PROCESSOR_R4000,\n   PROCESSOR_R4100,\n@@ -276,6 +274,7 @@ extern void\t\ttext_section ();\n #define MASK_SINGLE_FLOAT 0x00020000\t/* Only single precision FPU.  */\n #define MASK_MAD\t0x00040000\t/* Generate mad/madu as on 4650.  */\n #define MASK_4300_MUL_FIX 0x00080000    /* Work-around early Vr4300 CPU bug */\n+#define MASK_MIPS3900\t0x00100000\t/* like -mips1 only 3900 */\n \n \t\t\t\t\t/* Dummy switches used only in spec's*/\n #define MASK_MIPS_TFILE\t0x00000000\t/* flag for mips-tfile usage */\n@@ -291,7 +290,6 @@ extern void\t\ttext_section ();\n #define MASK_DEBUG_G\t0x00800000\t/* don't support 64 bit arithmetic */\n #define MASK_DEBUG_H\t0x00400000\t/* allow ints in FP registers */\n #define MASK_DEBUG_I\t0x00200000\t/* unused */\n-#define MASK_DEBUG_J\t0x00100000\t/* unused */\n \n \t\t\t\t\t/* r4000 64 bit sizes */\n #define TARGET_INT64\t\t(target_flags & MASK_INT64)\n@@ -302,6 +300,9 @@ extern void\t\ttext_section ();\n \t\t\t\t\t/* Mips vs. GNU linker */\n #define TARGET_SPLIT_ADDRESSES\t(target_flags & MASK_SPLIT_ADDR)\n \n+/* generate mips 3900 insns */\n+#define TARGET_MIPS3900         (target_flags & MASK_MIPS3900)\n+\n \t\t\t\t\t/* Mips vs. GNU assembler */\n #define TARGET_GAS\t\t(target_flags & MASK_GAS)\n #define TARGET_UNIX_ASM\t\t(!TARGET_GAS)\n@@ -318,7 +319,6 @@ extern void\t\ttext_section ();\n #define TARGET_DEBUG_G_MODE\t(target_flags & MASK_DEBUG_G)\n #define TARGET_DEBUG_H_MODE\t(target_flags & MASK_DEBUG_H)\n #define TARGET_DEBUG_I_MODE\t(target_flags & MASK_DEBUG_I)\n-#define TARGET_DEBUG_J_MODE\t(target_flags & MASK_DEBUG_J)\n \n \t\t\t\t\t/* Reg. Naming in .s ($21 vs. $a0) */\n #define TARGET_NAME_REGS\t(target_flags & MASK_NAME_REGS)\n@@ -425,6 +425,7 @@ extern void\t\ttext_section ();\n   {\"fix4300\",             MASK_4300_MUL_FIX},\t\t\t\t\\\n   {\"no-fix4300\",         -MASK_4300_MUL_FIX},\t\t\t\t\\\n   {\"4650\",\t\t  MASK_MAD | MASK_SINGLE_FLOAT},\t\t\\\n+  {\"3900\",\t\t  MASK_MIPS3900},                               \\\n   {\"debug\",\t\t  MASK_DEBUG},\t\t\t\t\t\\\n   {\"debuga\",\t\t  MASK_DEBUG_A},\t\t\t\t\\\n   {\"debugb\",\t\t  MASK_DEBUG_B},\t\t\t\t\\\n@@ -435,7 +436,6 @@ extern void\t\ttext_section ();\n   {\"debugg\",\t\t  MASK_DEBUG_G},\t\t\t\t\\\n   {\"debugh\",\t\t  MASK_DEBUG_H},\t\t\t\t\\\n   {\"debugi\",\t\t  MASK_DEBUG_I},\t\t\t\t\\\n-  {\"debugj\",\t\t  MASK_DEBUG_J},\t\t\t\t\\\n   {\"\",\t\t\t  (TARGET_DEFAULT\t\t\t\t\\\n \t\t\t   | TARGET_CPU_DEFAULT\t\t\t\t\\\n \t\t\t   | TARGET_ENDIAN_DEFAULT)}\t\t\t\\\n@@ -507,10 +507,16 @@ extern void\t\ttext_section ();\n /* This is meant to be redefined in the host dependent files.  */\n #define SUBTARGET_TARGET_OPTIONS\n \n+#define GENERATE_BRANCHLIKELY  (TARGET_MIPS3900 || (mips_isa >= 2))\n+#define GENERATE_MULT3         (TARGET_MIPS3900)\n+#define GENERATE_MADD          (TARGET_MIPS3900)\n+\n+\n+\n /* Macros to decide whether certain features are available or not,\n    depending on the instruction set architecture level.  */\n \n-#define BRANCH_LIKELY_P()\t(mips_isa >= 2)\n+#define BRANCH_LIKELY_P()\tGENERATE_BRANCHLIKELY\n #define HAVE_SQRT_P()\t\t(mips_isa >= 2)\n \n /* CC1_SPEC causes -mips3 and -mips4 to set -mfp64 and -mgp64; -mips1 or\n@@ -664,7 +670,7 @@ while (0)\n /* GAS_ASM_SPEC is passed when using gas, rather than the MIPS\n    assembler.  */\n \n-#define GAS_ASM_SPEC \"%{mcpu=*} %{m4650} %{mmad:-m4650} %{v}\"\n+#define GAS_ASM_SPEC \"%{mcpu=*} %{m4650} %{mmad:-m4650} %{m3900} %{v}\"\n \n /* TARGET_ASM_SPEC is used to select either MIPS_AS_ASM_SPEC or\n    GAS_ASM_SPEC as the default, depending upon the value of\n@@ -791,6 +797,7 @@ while (0)\n %{mfp64:%{msingle-float:%emay not use both -mfp64 and -msingle-float}} \\\n %{mfp64:%{m4650:%emay not use both -mfp64 and -m4650}} \\\n %{m4650:-mcpu=r4650} \\\n+%{m3900:-mips1 -mcpu=r3900 -mfp32 -mgp32} \\\n %{G*} %{EB:-meb} %{EL:-mel} %{EB:%{EL:%emay not use both -EB and -EL}} \\\n %{pic-none:   -mno-half-pic} \\\n %{pic-lib:    -mhalf-pic} \\\n@@ -2980,7 +2987,8 @@ while (0)\n       enum machine_mode xmode = GET_MODE (X);\t\t\t\t\\\n       if (xmode == SFmode || xmode == DFmode)\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n-\t  if (mips_cpu == PROCESSOR_R3000)\t\t\t\t\\\n+\t  if (mips_cpu == PROCESSOR_R3000\t\t\t\t\\\n+              || mips_cpu == PROCESSOR_R3900)\t\t\t\t\\\n \t    return COSTS_N_INSNS (2);\t\t\t\t\t\\\n \t  else if (mips_cpu == PROCESSOR_R6000)\t\t\t\t\\\n \t    return COSTS_N_INSNS (3);\t\t\t\t\t\\\n@@ -3003,6 +3011,7 @@ while (0)\n       if (xmode == SFmode)\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  if (mips_cpu == PROCESSOR_R3000\t\t\t\t\\\n+\t      || mips_cpu == PROCESSOR_R3900\t\t\t\t\\\n \t      || mips_cpu == PROCESSOR_R5000)\t\t\t\t\\\n \t    return COSTS_N_INSNS (4);\t\t\t\t\t\\\n \t  else if (mips_cpu == PROCESSOR_R6000)\t\t\t\t\\\n@@ -3014,6 +3023,7 @@ while (0)\n       if (xmode == DFmode)\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  if (mips_cpu == PROCESSOR_R3000\t\t\t\t\\\n+\t      || mips_cpu == PROCESSOR_R3900\t\t\t\t\\\n \t      || mips_cpu == PROCESSOR_R5000)\t\t\t\t\\\n \t    return COSTS_N_INSNS (5);\t\t\t\t\t\\\n \t  else if (mips_cpu == PROCESSOR_R6000)\t\t\t\t\\\n@@ -3024,6 +3034,8 @@ while (0)\n \t\t\t\t\t\t\t\t\t\\\n       if (mips_cpu == PROCESSOR_R3000)\t\t\t\t\t\\\n \treturn COSTS_N_INSNS (12);\t\t\t\t\t\\\n+      else if (mips_cpu == PROCESSOR_R3900)\t\t\t\t\\\n+\treturn COSTS_N_INSNS (2);\t\t\t\t\t\\\n       else if (mips_cpu == PROCESSOR_R6000)\t\t\t\t\\\n \treturn COSTS_N_INSNS (17);\t\t\t\t\t\\\n       else if (mips_cpu == PROCESSOR_R5000)\t\t\t\t\\\n@@ -3038,7 +3050,8 @@ while (0)\n       enum machine_mode xmode = GET_MODE (X);\t\t\t\t\\\n       if (xmode == SFmode)\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n-\t  if (mips_cpu == PROCESSOR_R3000)\t\t\t\t\\\n+\t  if (mips_cpu == PROCESSOR_R3000\t\t\t\t\\\n+              || mips_cpu == PROCESSOR_R3900)\t\t\t\t\\\n \t    return COSTS_N_INSNS (12);\t\t\t\t\t\\\n \t  else if (mips_cpu == PROCESSOR_R6000)\t\t\t\t\\\n \t    return COSTS_N_INSNS (15);\t\t\t\t\t\\\n@@ -3048,7 +3061,8 @@ while (0)\n \t\t\t\t\t\t\t\t\t\\\n       if (xmode == DFmode)\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n-\t  if (mips_cpu == PROCESSOR_R3000)\t\t\t\t\\\n+\t  if (mips_cpu == PROCESSOR_R3000\t\t\t\t\\\n+              || mips_cpu == PROCESSOR_R3900)\t\t\t\t\\\n \t    return COSTS_N_INSNS (19);\t\t\t\t\t\\\n \t  else if (mips_cpu == PROCESSOR_R6000)\t\t\t\t\\\n \t    return COSTS_N_INSNS (16);\t\t\t\t\t\\\n@@ -3060,7 +3074,8 @@ while (0)\n \t\t\t\t\t\t\t\t\t\\\n   case UDIV:\t\t\t\t\t\t\t\t\\\n   case UMOD:\t\t\t\t\t\t\t\t\\\n-    if (mips_cpu == PROCESSOR_R3000)\t\t\t\t\t\\\n+    if (mips_cpu == PROCESSOR_R3000\t\t\t\t\t\\\n+        || mips_cpu == PROCESSOR_R3900)\t\t\t\t\t\\\n       return COSTS_N_INSNS (35);\t\t\t\t\t\\\n     else if (mips_cpu == PROCESSOR_R6000)\t\t\t\t\\\n       return COSTS_N_INSNS (38);\t\t\t\t\t\\"}, {"sha": "3e4382f5d2e5cc0fa700ba534f553399c1087901", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 68, "deletions": 34, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -88,15 +88,14 @@\n \n ;; ??? Fix everything that tests this attribute.\n (define_attr \"cpu\"\n-  \"default,r3000,r6000,r4000,r4100,r4300,r4600,r4650,r5000,r8000\"\n+  \"default,r3000,r3900,r6000,r4000,r4100,r4300,r4600,r4650,r5000,r8000\"\n   (const (symbol_ref \"mips_cpu_attr\")))\n \n ;; Attribute defining whether or not we can use the branch-likely instructions\n-;; (MIPS ISA level 2)\n \n (define_attr \"branch_likely\" \"no,yes\"\n   (const\n-   (if_then_else (ge (symbol_ref \"mips_isa\") (const_int 2))\n+   (if_then_else (ne (symbol_ref \"GENERATE_BRANCHLIKELY\") (const_int 0))\n \t\t (const_string \"yes\")\n \t\t (const_string \"no\"))))\n \n@@ -147,12 +146,12 @@\n \n (define_function_unit \"memory\" 1 0\n   (and (eq_attr \"type\" \"load\")\n-       (eq_attr \"cpu\" \"!r3000,r4600,r4650,r4100,r4300,r5000\"))\n+       (eq_attr \"cpu\" \"!r3000,r3900,r4600,r4650,r4100,r4300,r5000\"))\n   3 0)\n \n (define_function_unit \"memory\" 1 0\n   (and (eq_attr \"type\" \"load\")\n-       (eq_attr \"cpu\" \"r3000,r4600,r4650,r4100,r4300,r5000\"))\n+       (eq_attr \"cpu\" \"r3000,r3900,r4600,r4650,r4100,r4300,r5000\"))\n   2 0)\n \n (define_function_unit \"memory\"   1 0 (eq_attr \"type\" \"store\") 1 0)\n@@ -165,11 +164,11 @@\n \n (define_function_unit \"imuldiv\"  1 0\n   (and (eq_attr \"type\" \"imul\")\n-       (eq_attr \"cpu\" \"!r3000,r4000,r4600,r4650,r4100,r4300,r5000\"))\n+       (eq_attr \"cpu\" \"!r3000,r3900,r4000,r4600,r4650,r4100,r4300,r5000\"))\n   17 17)\n \n (define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"imul\") (eq_attr \"cpu\" \"r3000\"))\n+  (and (eq_attr \"type\" \"imul\") (eq_attr \"cpu\" \"r3000,r3900\"))\n   12 12)\n \n (define_function_unit \"imuldiv\"  1 0\n@@ -207,11 +206,11 @@\n \n (define_function_unit \"imuldiv\"  1 0\n   (and (eq_attr \"type\" \"idiv\")\n-       (eq_attr \"cpu\" \"!r3000,r4000,r4600,r4650,r4100,r4300,r5000\"))\n+       (eq_attr \"cpu\" \"!r3000,r3900,r4000,r4600,r4650,r4100,r4300,r5000\"))\n   38 38)\n \n (define_function_unit \"imuldiv\"  1 0\n-  (and (eq_attr \"type\" \"idiv\") (eq_attr \"cpu\" \"r3000\"))\n+  (and (eq_attr \"type\" \"idiv\") (eq_attr \"cpu\" \"r3000,r3900\"))\n   35 35)\n \n (define_function_unit \"imuldiv\"  1 0\n@@ -264,23 +263,23 @@\n ;; instructions to be processed in the \"imuldiv\" unit.\n \n (define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fcmp\") (eq_attr \"cpu\" \"!r3000,r6000,r4300,r5000\"))\n+  (and (eq_attr \"type\" \"fcmp\") (eq_attr \"cpu\" \"!r3000,r3900,r6000,r4300,r5000\"))\n   3 0)\n \n (define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fcmp\") (eq_attr \"cpu\" \"r3000,r6000\"))\n+  (and (eq_attr \"type\" \"fcmp\") (eq_attr \"cpu\" \"r3000,r3900,r6000\"))\n   2 0)\n \n (define_function_unit \"adder\" 1 1\n   (and (eq_attr \"type\" \"fcmp\") (eq_attr \"cpu\" \"r5000\"))\n   1 0)\n \n (define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fadd\") (eq_attr \"cpu\" \"!r3000,r6000,r4300\"))\n+  (and (eq_attr \"type\" \"fadd\") (eq_attr \"cpu\" \"!r3000,r3900,r6000,r4300\"))\n   4 0)\n \n (define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fadd\") (eq_attr \"cpu\" \"r3000\"))\n+  (and (eq_attr \"type\" \"fadd\") (eq_attr \"cpu\" \"r3000,r3900\"))\n   2 0)\n \n (define_function_unit \"adder\" 1 1\n@@ -289,22 +288,22 @@\n \n (define_function_unit \"adder\" 1 1\n   (and (eq_attr \"type\" \"fabs,fneg\")\n-       (eq_attr \"cpu\" \"!r3000,r4600,r4650,r4300,r5000\"))\n+       (eq_attr \"cpu\" \"!r3000,r3900,r4600,r4650,r4300,r5000\"))\n   2 0)\n \n (define_function_unit \"adder\" 1 1\n-  (and (eq_attr \"type\" \"fabs,fneg\") (eq_attr \"cpu\" \"r3000,r4600,r4650,r5000\"))\n+  (and (eq_attr \"type\" \"fabs,fneg\") (eq_attr \"cpu\" \"r3000,r3900,r4600,r4650,r5000\"))\n   1 0)\n \n (define_function_unit \"mult\" 1 1\n   (and (eq_attr \"type\" \"fmul\")\n        (and (eq_attr \"mode\" \"SF\")\n-\t    (eq_attr \"cpu\" \"!r3000,r6000,r4600,r4650,r4300,r5000\")))\n+\t    (eq_attr \"cpu\" \"!r3000,r3900,r6000,r4600,r4650,r4300,r5000\")))\n   7 0)\n \n (define_function_unit \"mult\" 1 1\n   (and (eq_attr \"type\" \"fmul\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r3000,r5000\")))\n+       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r3000,r3900,r5000\")))\n   4 0)\n \n (define_function_unit \"mult\" 1 1\n@@ -319,12 +318,12 @@\n \n (define_function_unit \"mult\" 1 1\n   (and (eq_attr \"type\" \"fmul\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"!r3000,r6000,r4300,r5000\")))\n+       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"!r3000,r3900,r6000,r4300,r5000\")))\n   8 0)\n \n (define_function_unit \"mult\" 1 1\n   (and (eq_attr \"type\" \"fmul\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r3000,r5000\")))\n+       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r3000,r3900,r5000\")))\n   5 0)\n \n (define_function_unit \"mult\" 1 1\n@@ -335,12 +334,12 @@\n (define_function_unit \"divide\" 1 1\n   (and (eq_attr \"type\" \"fdiv\")\n        (and (eq_attr \"mode\" \"SF\")\n-\t    (eq_attr \"cpu\" \"!r3000,r6000,r4600,r4650,r4300,r5000\")))\n+\t    (eq_attr \"cpu\" \"!r3000,r3900,r6000,r4600,r4650,r4300,r5000\")))\n   23 0)\n \n (define_function_unit \"divide\" 1 1\n   (and (eq_attr \"type\" \"fdiv\")\n-       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r3000\")))\n+       (and (eq_attr \"mode\" \"SF\") (eq_attr \"cpu\" \"r3000,r3900\")))\n   12 0)\n \n (define_function_unit \"divide\" 1 1\n@@ -361,12 +360,12 @@\n (define_function_unit \"divide\" 1 1\n   (and (eq_attr \"type\" \"fdiv\")\n        (and (eq_attr \"mode\" \"DF\")\n-\t    (eq_attr \"cpu\" \"!r3000,r6000,r4600,r4650,r4300\")))\n+\t    (eq_attr \"cpu\" \"!r3000,r3900,r6000,r4600,r4650,r4300\")))\n   36 0)\n \n (define_function_unit \"divide\" 1 1\n   (and (eq_attr \"type\" \"fdiv\")\n-       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r3000\")))\n+       (and (eq_attr \"mode\" \"DF\") (eq_attr \"cpu\" \"r3000,r3900\")))\n   19 0)\n \n (define_function_unit \"divide\" 1 1\n@@ -1031,7 +1030,9 @@\n   \"\"\n   \"\n {\n-  if (TARGET_MAD)\n+  if (GENERATE_MULT3)\n+    emit_insn (gen_mulsi3_mult3 (operands[0], operands[1], operands[2]));\n+  else if (TARGET_MAD)\n     emit_insn (gen_mulsi3_r4650 (operands[0], operands[1], operands[2]));\n   else if (mips_cpu != PROCESSOR_R4000)\n     emit_insn (gen_mulsi3_internal (operands[0], operands[1], operands[2]));\n@@ -1040,6 +1041,19 @@\n   DONE;\n }\")\n \n+(define_insn \"mulsi3_mult3\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(mult:SI (match_operand:SI 1 \"register_operand\" \"d\")\n+\t\t (match_operand:SI 2 \"register_operand\" \"d\")))\n+   (clobber (match_scratch:SI 3 \"=h\"))\n+   (clobber (match_scratch:SI 4 \"=l\"))\n+   (clobber (match_scratch:SI 5 \"=a\"))]\n+  \"GENERATE_MULT3\"\n+  \"mult\\\\t%0,%1,%2\"\n+  [(set_attr \"type\"\t\"imul\")\n+   (set_attr \"mode\"\t\"SI\")\n+   (set_attr \"length\"\t\"1\")])\n+\n (define_insn \"mulsi3_internal\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=l\")\n \t(mult:SI (match_operand:SI 1 \"register_operand\" \"d\")\n@@ -1286,8 +1300,14 @@\n \t\t (match_dup 0)))\n    (clobber (match_scratch:SI 3 \"=h\"))\n    (clobber (match_scratch:SI 4 \"=a\"))]\n-  \"TARGET_MAD\"\n-  \"mad\\\\t%1,%2\"\n+  \"TARGET_MAD || GENERATE_MADD\"\n+  \"*\n+{\n+  if (TARGET_MAD)\n+    return \\\"mad\\\\t%1,%2\\\";\n+  else\n+    return \\\"madd\\\\t%1,%2\\\";\n+}\"\n   [(set_attr \"type\"\t\"imul\")\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"   \"1\")])\n@@ -1350,6 +1370,20 @@\n    (set_attr \"mode\"\t\"SI\")\n    (set_attr \"length\"   \"1\")])\n \n+(define_insn \"madd3\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(plus:SI (mult:SI (match_operand:SI 1 \"register_operand\" \"d\")\n+\t\t\t  (match_operand:SI 2 \"register_operand\" \"d\"))\n+\t\t (match_operand:SI 3 \"register_operand\" \"l\")))\n+   (clobber (match_scratch:SI 4 \"=l\"))\n+   (clobber (match_scratch:SI 5 \"=h\"))\n+   (clobber (match_scratch:SI 6 \"=a\"))]\n+  \"GENERATE_MADD\"\n+  \"madd\\\\t%0,%1,%2\"\n+  [(set_attr \"type\"\t\"imul\")\n+   (set_attr \"mode\"\t\"SI\")\n+   (set_attr \"length\"   \"1\")])\n+\n ;; Floating point multiply accumulate instructions.\n \n (define_insn \"\"\n@@ -1775,7 +1809,7 @@\n \n   if (REGNO (operands[0]) == REGNO (operands[1]))\n     {\n-      if (mips_isa >= 2)\n+      if (GENERATE_BRANCHLIKELY)\n \treturn \\\"%(bltzl\\\\t%1,1f\\\\n\\\\tsubu\\\\t%0,%z2,%0\\\\n1:%)\\\";\n       else\n \treturn \\\"bgez\\\\t%1,1f%#\\\\n\\\\tsubu\\\\t%0,%z2,%0\\\\n1:\\\";\n@@ -3175,7 +3209,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"movsi_ulw\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&d,&d\")\n-\t(unspec [(match_operand:QI 1 \"general_operand\" \"R,o\")] 0))]\n+\t(unspec:SI [(match_operand:QI 1 \"general_operand\" \"R,o\")] 0))]\n   \"\"\n   \"*\n {\n@@ -3204,7 +3238,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"movsi_usw\"\n   [(set (match_operand:QI 0 \"memory_operand\" \"=R,o\")\n-\t(unspec [(match_operand:SI 1 \"reg_or_0_operand\" \"dJ,dJ\")] 1))]\n+\t(unspec:QI [(match_operand:SI 1 \"reg_or_0_operand\" \"dJ,dJ\")] 1))]\n   \"\"\n   \"*\n {\n@@ -4026,7 +4060,7 @@ move\\\\t%0,%z4\\\\n\\\\\n \n (define_insn \"loadgp\"\n   [(set (reg:DI 28)\n-\t(unspec_volatile [(match_operand:DI 0 \"address_operand\" \"\")] 2))\n+\t(unspec_volatile:DI [(match_operand:DI 0 \"address_operand\" \"\")] 2))\n    (clobber (reg:DI 1))]\n   \"\"\n   \"%[lui\\\\t$1,%%hi(%%neg(%%gp_rel(%a0)))\\\\n\\\\taddiu\\\\t$1,$1,%%lo(%%neg(%%gp_rel(%a0)))\\\\n\\\\tdaddu\\\\t$gp,$1,$25%]\"\n@@ -4041,8 +4075,8 @@ move\\\\t%0,%z4\\\\n\\\\\n ;; Argument 3 is the alignment\n \n (define_expand \"movstrsi\"\n-  [(parallel [(set (mem:BLK (match_operand:BLK 0 \"general_operand\" \"\"))\n-\t\t   (mem:BLK (match_operand:BLK 1 \"general_operand\" \"\")))\n+  [(parallel [(set (match_operand:BLK 0 \"general_operand\" \"\")\n+\t\t   (match_operand:BLK 1 \"general_operand\" \"\"))\n \t      (use (match_operand:SI 2 \"arith32_operand\" \"\"))\n \t      (use (match_operand:SI 3 \"immediate_operand\" \"\"))])]\n   \"\"\n@@ -4069,7 +4103,7 @@ move\\\\t%0,%z4\\\\n\\\\\n    (use (const_int 0))]\t\t\t\t\t;; normal block move\n   \"\"\n   \"* return output_block_move (insn, operands, 4, BLOCK_MOVE_NORMAL);\"\n-  [(set_attr \"type\"\t\"multi\")\n+  [(set_attr \"type\"\t\"store\")\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"20\")])\n \n@@ -4128,7 +4162,7 @@ move\\\\t%0,%z4\\\\n\\\\\n    (use (const_int 1))]\t\t\t\t\t;; all but last store\n   \"\"\n   \"* return output_block_move (insn, operands, 4, BLOCK_MOVE_NOT_LAST);\"\n-  [(set_attr \"type\"\t\"multi\")\n+  [(set_attr \"type\"\t\"store\")\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"20\")])\n "}, {"sha": "dd21562a47ea9ae00397a1f9ad3ca76821258c6a", "filename": "gcc/config/mips/rtems64.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmips%2Frtems64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmips%2Frtems64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Frtems64.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,6 +1,5 @@\n /* Definitions for rtems targetting a MIPS ORION using ecoff.\n-\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -27,5 +26,3 @@ Boston, MA 02111-1307, USA.  */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Dmips -DMIPSEB -DR4000 -D_mips -D_MIPSEB -D_R4000 \\\n    -Drtems -D__rtems__ -Asystem(rtems)\"\n-\n-/* end of mips/rtems64.h */"}, {"sha": "c177607fe2735be38fb33648171a610c13167119", "filename": "gcc/config/mn10200/mn10200.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmn10200%2Fmn10200.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmn10200%2Fmn10200.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "58220588010d1e79c0c9c7bcaee80766a31baca9", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "1d65fcb872e2cc36ef8fa2007bf6b73d6442d123", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -19,8 +19,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "f5f0f131461691e905425912bd3422af9419b558", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,6 +1,5 @@\n ;;- Machine description for HP PA-RISC architecture for GNU C compiler\n-;;   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997\n-;;   Free Software Foundation, Inc.\n+;;   Copyright (C) 1992, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n ;;   Contributed by the Center for Software Science at the University\n ;;   of Utah.\n \n@@ -2059,18 +2058,20 @@\n ;; that anything generated as this insn will be recognized as one\n ;; and that it will not successfully combine with anything.\n (define_expand \"movstrsi\"\n-  [(parallel [(set (mem:BLK (match_operand:BLK 0 \"\" \"\"))\n-\t\t   (mem:BLK (match_operand:BLK 1 \"\" \"\")))\n-\t      (clobber (match_dup 0))\n-\t      (clobber (match_dup 1))\n+  [(parallel [(set (match_operand:BLK 0 \"\" \"\")\n+\t\t   (match_operand:BLK 1 \"\" \"\"))\n+\t      (clobber (match_dup 7))\n+\t      (clobber (match_dup 8))\n \t      (clobber (match_dup 4))\n \t      (clobber (match_dup 5))\n+\t      (clobber (match_dup 6))\n \t      (use (match_operand:SI 2 \"arith_operand\" \"\"))\n \t      (use (match_operand:SI 3 \"const_int_operand\" \"\"))])]\n   \"\"\n   \"\n {\n   int size, align;\n+\n   /* HP provides very fast block move library routine for the PA;\n      this routine includes:\n \n@@ -2103,22 +2104,25 @@\n \n   /* If size/alignment > 8 (eg size is large in respect to alignment),\n      then use the library routines.  */\n-  if (size/align > 16)\n+  if (size / align > 16)\n     FAIL;\n \n   /* This does happen, but not often enough to worry much about.  */\n-  if (size/align < MOVE_RATIO)\n+  if (size / align < MOVE_RATIO)\n     FAIL;\n   \n   /* Fall through means we're going to use our block move pattern.  */\n-  operands[0] = copy_to_mode_reg (SImode, XEXP (operands[0], 0));\n-  operands[1] = copy_to_mode_reg (SImode, XEXP (operands[1], 0));\n+  operands[0]\n+    = change_address (operands[0], VOIDmode,\n+\t\t      copy_to_mode_reg (SImode, XEXP (operands[0], 0)));\n+  operands[1]\n+    = change_address (operands[1], VOIDmode,\n+\t\t      copy_to_mode_reg (SImode, XEXP (operands[1], 0)));\n   operands[4] = gen_reg_rtx (SImode);\n   operands[5] = gen_reg_rtx (SImode);\n-  emit_insn (gen_movstrsi_internal (operands[0], operands[1], operands[4],\n-\t\t\t\t     operands[5], operands[2], operands[3],\n-\t\t\t\t     gen_reg_rtx (SImode)));\n-  DONE;\n+  operands[6] = gen_reg_rtx (SImode);\n+  operands[7] = XEXP (operands[0], 0);\n+  operands[8] = XEXP (operands[1], 0);\n }\")\n \n ;; The operand constraints are written like this to support both compile-time"}, {"sha": "eebfd4f5cc17d79d65b442487e8e59b09e62c63e", "filename": "gcc/config/pa/rtems.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fpa%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fpa%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Frtems.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -24,5 +24,3 @@ Boston, MA 02111-1307, USA.  */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-Dhppa -DPWB -Acpu(hppa) -Amachine(hppa) \\\n    -Drtems -D__rtems__ -Asystem(rtems)\"\n-\n-/* end of pa/rtems.h */"}, {"sha": "4c250477358e432c6f264ef98c00e91110d99f68", "filename": "gcc/config/pa/x-pa", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fpa%2Fx-pa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fpa%2Fx-pa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fx-pa?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,3 +1,3 @@\n # BSD on the PA already has ANSI include files which are c++ compatible.\n-USER_H =  $(EXTRA_HEADERS) $(LANG_EXTRA_HEADERS)\n+USER_H = $(EXTRA_HEADERS) $(LANG_EXTRA_HEADERS)\n STMP_FIXPROTO="}, {"sha": "64d5e0b5752fec035da8b99e847a307c4ac7fdb4", "filename": "gcc/config/ptx4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fptx4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fptx4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fptx4.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,6 +1,6 @@\n /* Operating system specific defines to be used when targeting GCC for some\n    generic System V Release 4 system.\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com).\n    Renamed and changed to suit Dynix/ptx v4 and later.\n    Modified by Tim Wright (timw@sequent.com)."}, {"sha": "aa128019dc539b95b6cd7010ed3014c04f3e615c", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -19,9 +19,9 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#include \"config.h\"\n #include <stdio.h>\n #include <ctype.h>\n-#include \"config.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\""}, {"sha": "29b6f22e98e50007a95363ebd02d288559300535", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -7112,8 +7112,10 @@\n ;; We move the back-chain and decrement the stack pointer.\n \n (define_expand \"allocate_stack\"\n-  [(set (reg:SI 1)\n-\t(minus:SI (reg:SI 1) (match_operand:SI 0 \"reg_or_short_operand\" \"\")))]\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(minus:SI (reg:SI 1) (match_operand:SI 1 \"reg_or_short_operand\" \"\")))\n+   (set (reg:SI 1)\n+\t(minus:SI (reg:SI 1) (match_dup 1)))]\n   \"\"\n   \"\n { rtx chain = gen_reg_rtx (Pmode);\n@@ -7122,31 +7124,32 @@\n \n   emit_move_insn (chain, stack_bot);\n \n-  /* Under Windows NT, we need to add stack probes for large/variable allocations,\n-     so do it via a call to the external function alloca, instead of doing it\n-     inline.  */\n+  /* Under Windows NT, we need to add stack probes for large/variable\n+     allocations, so do it via a call to the external function alloca\n+     instead of doing it inline.  */\n   if (DEFAULT_ABI == ABI_NT\n-      && (GET_CODE (operands[0]) != CONST_INT || INTVAL (operands[0]) > 4096))\n+      && (GET_CODE (operands[1]) != CONST_INT || INTVAL (operands[1]) > 4096))\n     {\n       rtx tmp = gen_reg_rtx (SImode);\n       emit_library_call_value (gen_rtx (SYMBOL_REF, Pmode, \\\"__allocate_stack\\\"),\n-\t\t\t       tmp, 0, SImode, 1, operands[0], Pmode);\n+\t\t\t       tmp, 0, SImode, 1, operands[1], Pmode);\n       emit_insn (gen_set_sp (tmp));\n+      emit_move_insn (operands[0], tmp);\n       DONE;\n     }\n \n-  if (GET_CODE (operands[0]) != CONST_INT\n-      || INTVAL (operands[0]) < -32767\n-      || INTVAL (operands[0]) > 32768)\n+  if (GET_CODE (operands[1]) != CONST_INT\n+      || INTVAL (operands[1]) < -32767\n+      || INTVAL (operands[1]) > 32768)\n     {\n       neg_op0 = gen_reg_rtx (Pmode);\n       if (TARGET_32BIT)\n-\temit_insn (gen_negsi2 (neg_op0, operands[0]));\n+\temit_insn (gen_negsi2 (neg_op0, operands[1]));\n       else\n-\temit_insn (gen_negdi2 (neg_op0, operands[0]));\n+\temit_insn (gen_negdi2 (neg_op0, operands[1]));\n     }\n   else\n-    neg_op0 = GEN_INT (- INTVAL (operands[0]));\n+    neg_op0 = GEN_INT (- INTVAL (operands[1]));\n \n   if (TARGET_UPDATE)\n     emit_insn ((* ((TARGET_32BIT) ? gen_movsi_update : gen_movdi_update))\n@@ -7160,6 +7163,8 @@\n \t\t\t       stack_pointer_rtx),\n \t\t      chain);\n     }\n+\n+  emit_move_insn (operands[0], virtual_stack_dynamic_rtx);\n   DONE;\n }\")\n \n@@ -7234,7 +7239,7 @@\n \n (define_insn \"nonlocal_goto_receiver\"\n   [(unspec_volatile [(const_int 0)] 1)]\n-  \"TARGET_TOC && TARGET_MINIMAL_TOC && get_pool_size () != 0\"\n+  \"TARGET_TOC && TARGET_MINIMAL_TOC\"\n   \"*\n {\n   rs6000_output_load_toc_table (asm_out_file, 30);"}, {"sha": "287da251268b40b293025aa5245da1c83a528d94", "filename": "gcc/config/rs6000/rtems.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Frs6000%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Frs6000%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frtems.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,4 @@\n /* Definitions for rtems targetting a PowerPC using elf.\n-\n    Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n "}, {"sha": "dace38028effe16838bef29389a59108a6013314", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 91, "deletions": 12, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -91,6 +91,8 @@ extern enum rs6000_sdata_type rs6000_sdata;\n   { \"sdata\",\t\t 0 },\t\t\t\t\t\t\\\n   { \"no-sdata\",\t\t 0 },\t\t\t\t\t\t\\\n   { \"sim\",\t\t 0 },\t\t\t\t\t\t\\\n+  { \"ads\",\t\t 0 },\t\t\t\t\t\t\\\n+  { \"yellowknife\",\t 0 },\t\t\t\t\t\t\\\n   { \"mvme\",\t\t 0 },\t\t\t\t\t\t\\\n   { \"emb\",\t\t 0 },\t\t\t\t\t\t\\\n   { \"solaris-cclib\",\t 0 },\t\t\t\t\t\t\\\n@@ -327,6 +329,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #undef ASM_OUTPUT_EXTERNAL\n \n+/* Put jump tables in read-only memory, rather than in .text.  */\n+#undef JUMP_TABLES_IN_TEXT_SECTION\n+\n /* Undefine some things which are defined by the generic svr4.h.  */\n \n #undef ASM_FILE_END\n@@ -995,11 +1000,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Default starting address if specified */\n #ifndef LINK_START_SPEC\n #define LINK_START_SPEC \"\\\n+%{mads: %(link_start_ads) } \\\n+%{myellowknife: %(link_start_yellowknife) } \\\n %{mmvme: %(link_start_mvme) } \\\n %{msim: %(link_start_sim) } \\\n %{mcall-linux: %(link_start_linux) } \\\n %{mcall-solaris: %(link_start_solaris) } \\\n-%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(link_start_default) }}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(link_start_default) }}}}}}\"\n #endif\n \n #ifndef\tLINK_START_DEFAULT_SPEC\n@@ -1050,11 +1057,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Any specific OS flags */\n #ifndef LINK_OS_SPEC\n #define LINK_OS_SPEC \"\\\n+%{mads: %(link_os_ads) } \\\n+%{myellowknife: %(link_os_yellowknife) } \\\n %{mmvme: %(link_os_mvme) } \\\n %{msim: %(link_os_sim) } \\\n %{mcall-linux: %(link_os_linux) } \\\n %{mcall-solaris: %(link_os_solaris) } \\\n-%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(link_os_default) }}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(link_os_default) }}}}}}\"\n #endif\n \n #ifndef\tLINK_OS_DEFAULT_SPEC\n@@ -1105,34 +1114,40 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #undef CPP_SPEC\n #define CPP_SPEC \"%{posix: -D_POSIX_SOURCE} %(cpp_sysv) %(cpp_endian) %(cpp_cpu) \\\n+%{mads: %(cpp_os_ads) } \\\n+%{myellowknife: %(cpp_os_yellowknife) } \\\n %{mmvme: %(cpp_os_mvme) } \\\n %{msim: %(cpp_os_sim) } \\\n %{mcall-linux: %(cpp_os_linux) } \\\n %{mcall-solaris: %(cpp_os_solaris) } \\\n-%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(cpp_os_default) }}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(cpp_os_default) }}}}}}\"\n \n #ifndef CPP_OS_DEFAULT_SPEC\n #define CPP_OS_DEFAULT_SPEC \"\"\n #endif\n \n #undef  STARTFILE_SPEC\n #define\tSTARTFILE_SPEC \"\\\n+%{mads: %(startfile_ads) } \\\n+%{myellowknife: %(startfile_yellowknife) } \\\n %{mmvme: %(startfile_mvme) } \\\n %{msim: %(startfile_sim) } \\\n %{mcall-linux: %(startfile_linux) } \\\n %{mcall-solaris: %(startfile_solaris) } \\\n-%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(startfile_default) }}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(startfile_default) }}}}}}\"\n \n #undef\tSTARTFILE_DEFAULT_SPEC\n #define\tSTARTFILE_DEFAULT_SPEC \"\"\n \n #undef\tLIB_SPEC\n #define\tLIB_SPEC \"\\\n+%{mads: %(lib_ads) } \\\n+%{myellowknife: %(lib_yellowknife) } \\\n %{mmvme: %(lib_mvme) } \\\n %{msim: %(lib_sim) } \\\n %{mcall-linux: %(lib_linux) } \\\n %{mcall-solaris: %(lib_solaris) } \\\n-%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(lib_default) }}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(lib_default) }}}}}}\"\n \n #undef\tLIBGCC_SPEC\n #define\tLIBGCC_SPEC \"libgcc.a%s\"\n@@ -1143,30 +1158,82 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #undef\tENDFILE_SPEC\n #define\tENDFILE_SPEC \"\\\n+%{mads: ecrtn.o%s} \\\n+%{myellowknife: ecrtn.o%s} \\\n %{mmvme: ecrtn.o%s} \\\n %{msim: ecrtn.o%s} \\\n %{mcall-linux: } \\\n %{mcall-solaris: scrtn.o%s} \\\n-%{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(endfile_default) }}}}\"\n+%{!mads: %{!myellowknife: %{!mmvme: %{!msim: %{!mcall-linux: %{!mcall-solaris: %(endfile_default) }}}}}}\"\n \n #undef\tENDFILE_DEFAULT_SPEC\n #define\tENDFILE_DEFAULT_SPEC \"\"\n \n+/* Motorola ADS support.  */\n+#ifndef\tLIB_ADS_SPEC\n+#define LIB_ADS_SPEC \"--start-group -lads -lc --end-group\"\n+#endif\n+\n+#ifndef\tSTARTFILE_ADS_SPEC\n+#define\tSTARTFILE_ADS_SPEC \"ecrti.o%s crt0.o%s\"\n+#endif\n+\n+#ifndef\tENDFILE_ADS_SPEC\n+#define\tENDFILE_ADS_SPEC \"ecrtn.o%s\"\n+#endif\n+\n+#ifndef LINK_START_ADS_SPEC\n+#define LINK_START_ADS_SPEC \"-T ads.ld%s\"\n+#endif\n+\n+#ifndef LINK_OS_ADS_SPEC\n+#define LINK_OS_ADS_SPEC \"\"\n+#endif\n+\n+#ifndef CPP_OS_ADS_SPEC\n+#define CPP_OS_ADS_SPEC \"\"\n+#endif\n+\n+/* Motorola Yellowknife support.  */\n+#ifndef\tLIB_YELLOWKNIFE_SPEC\n+#define LIB_YELLOWKNIFE_SPEC \"--start-group -lyk -lc --end-group\"\n+#endif\n+\n+#ifndef\tSTARTFILE_YELLOWKNIFE_SPEC\n+#define\tSTARTFILE_YELLOWKNIFE_SPEC \"ecrti.o%s crt0.o%s\"\n+#endif\n+\n+#ifndef\tENDFILE_YELLOWKNIFE_SPEC\n+#define\tENDFILE_YELLOWKNIFE_SPEC \"ecrtn.o%s\"\n+#endif\n+\n+#ifndef LINK_START_YELLOWKNIFE_SPEC\n+#define LINK_START_YELLOWKNIFE_SPEC \"-T yellowknife.ld%s\"\n+#endif\n+\n+#ifndef LINK_OS_YELLOWKNIFE_SPEC\n+#define LINK_OS_YELLOWKNIFE_SPEC \"\"\n+#endif\n+\n+#ifndef CPP_OS_YELLOWKNIFE_SPEC\n+#define CPP_OS_YELLOWKNIFE_SPEC \"\"\n+#endif\n+\n /* Motorola MVME support.  */\n #ifndef\tLIB_MVME_SPEC\n-#define LIB_MVME_SPEC \"-( -lmvme -lc -)\"\n+#define LIB_MVME_SPEC \"--start-group -lmvme -lc --end-group\"\n #endif\n \n #ifndef\tSTARTFILE_MVME_SPEC\n-#define\tSTARTFILE_MVME_SPEC \"ecrti.o%s mvme-crt0.o%s\"\n+#define\tSTARTFILE_MVME_SPEC \"ecrti.o%s crt0.o%s\"\n #endif\n \n #ifndef\tENDFILE_MVME_SPEC\n #define\tENDFILE_MVME_SPEC \"ecrtn.o%s\"\n #endif\n \n #ifndef LINK_START_MVME_SPEC\n-#define LINK_START_MVME_SPEC \"\"\n+#define LINK_START_MVME_SPEC \"%{!Wl,-T*: %{!T*: -Ttext 0x40000}}\"\n #endif\n \n #ifndef LINK_OS_MVME_SPEC\n@@ -1179,7 +1246,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* PowerPC simulator based on netbsd system calls support.  */\n #ifndef\tLIB_SIM_SPEC\n-#define LIB_SIM_SPEC \"-( -lsim -lc -)\"\n+#define LIB_SIM_SPEC \"--start-group -lsim -lc --end-group\"\n #endif\n \n #ifndef\tSTARTFILE_SIM_SPEC\n@@ -1204,7 +1271,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Linux support.  */\n #ifndef\tLIB_LINUX_SPEC\n-#define LIB_LINUX_SPEC \"%{mnewlib: -( -llinux -lc -) } %{!mnewlib: -lc }\"\n+#define LIB_LINUX_SPEC \"%{mnewlib: --start-group -llinux -lc --end-group } %{!mnewlib: -lc }\"\n #endif\n \n #ifndef\tSTARTFILE_LINUX_SPEC\n@@ -1252,7 +1319,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #ifndef\tLIB_SOLARIS_SPEC\n #define LIB_SOLARIS_SPEC \"\\\n-%{mnewlib: -( -lsolaris -lc -) } \\\n+%{mnewlib: --start-group -lsolaris -lc --end-group } \\\n %{!mnewlib: \\\n     %{ansi:values-Xc.o%s} \\\n     %{!ansi: \\\n@@ -1296,16 +1363,22 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Define any extra SPECS that the compiler needs to generate.  */\n #undef\tSUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS\t\t\t\t\t\t\\\n+  { \"lib_ads\",\t\t\tLIB_ADS_SPEC },\t\t\t\t\\\n+  { \"lib_yellowknife\",\t\tLIB_YELLOWKNIFE_SPEC },\t\t\t\\\n   { \"lib_mvme\",\t\t\tLIB_MVME_SPEC },\t\t\t\\\n   { \"lib_sim\",\t\t\tLIB_SIM_SPEC },\t\t\t\t\\\n   { \"lib_linux\",\t\tLIB_LINUX_SPEC },\t\t\t\\\n   { \"lib_solaris\",\t\tLIB_SOLARIS_SPEC },\t\t\t\\\n   { \"lib_default\",\t\tLIB_DEFAULT_SPEC },\t\t\t\\\n+  { \"startfile_ads\",\t\tSTARTFILE_ADS_SPEC },\t\t\t\\\n+  { \"startfile_yellowknife\",\tSTARTFILE_YELLOWKNIFE_SPEC },\t\t\\\n   { \"startfile_mvme\",\t\tSTARTFILE_MVME_SPEC },\t\t\t\\\n   { \"startfile_sim\",\t\tSTARTFILE_SIM_SPEC },\t\t\t\\\n   { \"startfile_linux\",\t\tSTARTFILE_LINUX_SPEC },\t\t\t\\\n   { \"startfile_solaris\",\tSTARTFILE_SOLARIS_SPEC },\t\t\\\n   { \"startfile_default\",\tSTARTFILE_DEFAULT_SPEC },\t\t\\\n+  { \"endfile_ads\",\t\tENDFILE_ADS_SPEC },\t\t\t\\\n+  { \"endfile_yellowknife\",\tENDFILE_YELLOWKNIFE_SPEC },\t\t\\\n   { \"endfile_mvme\",\t\tENDFILE_MVME_SPEC },\t\t\t\\\n   { \"endfile_sim\",\t\tENDFILE_SIM_SPEC },\t\t\t\\\n   { \"endfile_linux\",\t\tENDFILE_LINUX_SPEC },\t\t\t\\\n@@ -1315,12 +1388,16 @@ do {\t\t\t\t\t\t\t\t\t\\\n   { \"link_shlib\",\t\tLINK_SHLIB_SPEC },\t\t\t\\\n   { \"link_target\",\t\tLINK_TARGET_SPEC },\t\t\t\\\n   { \"link_start\",\t\tLINK_START_SPEC },\t\t\t\\\n+  { \"link_start_ads\",\t\tLINK_START_ADS_SPEC },\t\t\t\\\n+  { \"link_start_yellowknife\",\tLINK_START_YELLOWKNIFE_SPEC },\t\t\\\n   { \"link_start_mvme\",\t\tLINK_START_MVME_SPEC },\t\t\t\\\n   { \"link_start_sim\",\t\tLINK_START_SIM_SPEC },\t\t\t\\\n   { \"link_start_linux\",\t\tLINK_START_LINUX_SPEC },\t\t\\\n   { \"link_start_solaris\",\tLINK_START_SOLARIS_SPEC },\t\t\\\n   { \"link_start_default\",\tLINK_START_DEFAULT_SPEC },\t\t\\\n   { \"link_os\",\t\t\tLINK_OS_SPEC },\t\t\t\t\\\n+  { \"link_os_ads\",\t\tLINK_OS_ADS_SPEC },\t\t\t\\\n+  { \"link_os_yellowknife\",\tLINK_OS_YELLOWKNIFE_SPEC },\t\t\\\n   { \"link_os_mvme\",\t\tLINK_OS_MVME_SPEC },\t\t\t\\\n   { \"link_os_sim\",\t\tLINK_OS_SIM_SPEC },\t\t\t\\\n   { \"link_os_linux\",\t\tLINK_OS_LINUX_SPEC },\t\t\t\\\n@@ -1329,6 +1406,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n   { \"cpp_endian_big\",\t\tCPP_ENDIAN_BIG_SPEC },\t\t\t\\\n   { \"cpp_endian_little\",\tCPP_ENDIAN_LITTLE_SPEC },\t\t\\\n   { \"cpp_endian_solaris\",\tCPP_ENDIAN_SOLARIS_SPEC },\t\t\\\n+  { \"cpp_os_ads\",\t\tCPP_OS_ADS_SPEC },\t\t\t\\\n+  { \"cpp_os_yellowknife\",\tCPP_OS_YELLOWKNIFE_SPEC },\t\t\\\n   { \"cpp_os_mvme\",\t\tCPP_OS_MVME_SPEC },\t\t\t\\\n   { \"cpp_os_sim\",\t\tCPP_OS_SIM_SPEC },\t\t\t\\\n   { \"cpp_os_linux\",\t\tCPP_OS_LINUX_SPEC },\t\t\t\\"}, {"sha": "be9d8f2a8c46e6edd622380ea1497f47f4f78e52", "filename": "gcc/config/sh/rtems.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsh%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsh%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Frtems.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,6 +1,5 @@\n /* Definitions for rtems targetting a SH using elf.\n-\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1997 Free Software Foundation, Inc.\n    Contributed by Joel Sherrill (joel@OARcorp.com).\n \n This file is part of GNU CC.\n@@ -27,5 +26,3 @@ Boston, MA 02111-1307, USA.  */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \"-D__sh__ -D__ELF__ -Drtems -D__rtems__ \\\n   -Asystem(rtems) -Acpu(sh) -Amachine(sh)\"\n-\n-/* end of sparc/rtems.h */"}, {"sha": "a08c125cfb70226d8a9269650942aaa13961b08d", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 279, "deletions": 206, "changes": 485, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler for Hitachi Super-H.\n-   Copyright (C) 1993, 1994, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com).\n    Improved by Jim Wilson (wilson@cygnus.com).\n \n@@ -24,6 +24,10 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_VERSION \\\n   fputs (\" (Hitachi SH)\", stderr);\n \n+/* Unfortunately, insn-attrtab.c doesn't include insn-codes.h.  We can't\n+  include it here, because hconfig.h is also included by gencodes.c .  */\n+extern int code_for_indirect_jump_scratch;\n+\n /* Generate SDB debugging information.  */\n \n #define SDB_DEBUGGING_INFO\n@@ -38,7 +42,8 @@ Boston, MA 02111-1307, USA.  */\n %{m1:-D__sh1__} \\\n %{m2:-D__sh2__} \\\n %{m3:-D__sh3__} \\\n-%{m3e:-D__SH3E__}\"\n+%{m3e:-D__SH3E__} \\\n+%{!m1:%{!m2:%{!m3:%{!m3e:-D__sh1__}}}}\"\n \n #define CPP_PREDEFINES \"-D__sh__ -Acpu(sh) -Amachine(sh)\"\n \n@@ -55,6 +60,7 @@ Boston, MA 02111-1307, USA.  */\n       int regno;\t\t\t\t\t\t\\\n       for (regno = FIRST_FP_REG; regno <= LAST_FP_REG; regno++)\t\\\n \tfixed_regs[regno] = call_used_regs[regno] = 1;\t\t\\\n+      fixed_regs[FPUL_REG] = call_used_regs[FPUL_REG] = 1;\t\\\n     }\t\t\t\t\t\t\t\t\\\n   /* Hitachi saves and restores mac registers on call.  */\t\\\n   if (TARGET_HITACHI)\t\t\t\t\t\t\\\n@@ -71,7 +77,6 @@ Boston, MA 02111-1307, USA.  */\n extern int target_flags;\n #define ISIZE_BIT      \t(1<<1)\n #define DALIGN_BIT     \t(1<<6)\n-#define SH0_BIT\t       \t(1<<7)\n #define SH1_BIT\t       \t(1<<8)\n #define SH2_BIT\t       \t(1<<9)\n #define SH3_BIT\t       \t(1<<10)\n@@ -82,18 +87,14 @@ extern int target_flags;\n #define HITACHI_BIT     (1<<22)\n #define PADSTRUCT_BIT  (1<<28)\n #define LITTLE_ENDIAN_BIT (1<<29)\n+#define IEEE_BIT (1<<30)\n \n /* Nonzero if we should dump out instruction size info.  */\n #define TARGET_DUMPISIZE  (target_flags & ISIZE_BIT)\n \n /* Nonzero to align doubles on 64 bit boundaries.  */\n #define TARGET_ALIGN_DOUBLE (target_flags & DALIGN_BIT)\n \n-/* Nonzero if we should generate code using type 0 insns.  */\n-/* ??? Is there such a thing as SH0?  If not, we should delete all\n-   references to it.  */\n-#define TARGET_SH0 (target_flags & SH0_BIT)\n-\n /* Nonzero if we should generate code using type 1 insns.  */\n #define TARGET_SH1 (target_flags & SH1_BIT)\n \n@@ -106,6 +107,9 @@ extern int target_flags;\n /* Nonzero if we should generate code using type 3E insns.  */\n #define TARGET_SH3E (target_flags & SH3E_BIT)\n \n+/* Nonzero if we respect NANs.  */\n+#define TARGET_IEEE (target_flags & IEEE_BIT)\n+\n /* Nonzero if we should generate smaller code rather than faster code.  */\n #define TARGET_SMALLCODE   (target_flags & SPACE_BIT)\n \n@@ -130,17 +134,18 @@ extern int target_flags;\n #define TARGET_LITTLE_ENDIAN     (target_flags & LITTLE_ENDIAN_BIT)\n \n #define TARGET_SWITCHES  \t\t\t\\\n-{ {\"0\",\t        SH0_BIT},\t\t\t\\\n-  {\"1\",\t        SH1_BIT},\t\t\t\\\n+{ {\"1\",\t        SH1_BIT},\t\t\t\\\n   {\"2\",\t        SH2_BIT},\t\t\t\\\n   {\"3\",\t        SH3_BIT|SH2_BIT},\t\t\\\n   {\"3e\",\tSH3E_BIT|SH3_BIT|SH2_BIT},\t\\\n   {\"b\",\t\t-LITTLE_ENDIAN_BIT},  \t\t\\\n   {\"bigtable\", \tBIGTABLE_BIT},\t\t\t\\\n   {\"dalign\",  \tDALIGN_BIT},\t\t\t\\\n   {\"hitachi\",\tHITACHI_BIT},\t\t\t\\\n+  {\"ieee\",  \tIEEE_BIT},\t\t\t\\\n   {\"isize\", \tISIZE_BIT},\t\t\t\\\n   {\"l\",\t\tLITTLE_ENDIAN_BIT},  \t\t\\\n+  {\"no-ieee\",  \t-IEEE_BIT},\t\t\t\\\n   {\"padstruct\", PADSTRUCT_BIT},    \t\t\\\n   {\"relax\",\tRELAX_BIT},\t\t\t\\\n   {\"space\", \tSPACE_BIT},\t\t\t\\\n@@ -155,11 +160,10 @@ extern int target_flags;\n \n #define PRESERVE_DEATH_INFO_REGNO_P(regno) (TARGET_RELAX || optimize)\n \n+#define ASSEMBLER_DIALECT 0 /* will allow to distinguish b[tf].s and b[tf]/s .  */\n #define OVERRIDE_OPTIONS \t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\\\n-  sh_cpu = CPU_SH0;\t\t\t\t\t\t\\\n-  if (TARGET_SH1)\t\t\t\t\t\t\\\n-    sh_cpu = CPU_SH1;\t\t\t\t\t\t\\\n+  sh_cpu = CPU_SH1;\t\t\t\t\t\t\\\n   if (TARGET_SH2)\t\t\t\t\t\t\\\n     sh_cpu = CPU_SH2;\t\t\t\t\t\t\\\n   if (TARGET_SH3)\t\t\t\t\t\t\\\n@@ -171,6 +175,7 @@ do {\t\t\t\t\t\t\t\t\\\n      break global alloc, and generates slower code anyway due\t\\\n      to the pressure on R0.  */\t\t\t\t\t\\\n   flag_schedule_insns = 0;\t\t\t\t\t\\\n+  sh_addr_diff_vec_mode = TARGET_BIGTABLE ? SImode : HImode;\t\\\n } while (0)\n \f\n /* Target machine storage layout.  */\n@@ -222,10 +227,14 @@ do {\t\t\t\t\t\t\t\t\\\n /* Boundary (in *bits*) on which stack pointer should be aligned.  */\n #define STACK_BOUNDARY  32\n \n+/* The log (base 2) of the cache line size, in bytes.  Processors prior to\n+   SH3 have no actual cache, but they fetch code in chunks of 4 bytes.  */\n+#define CACHE_LOG (TARGET_SH3 ? 4 : 2)\n+\n /* Allocation boundary (in *bits*) for the code of a function.\n    32 bit alignment is faster, because instructions are always fetched as a\n    pair from a longword boundary.  */\n-#define FUNCTION_BOUNDARY  (TARGET_SMALLCODE ? 16 : 32)\n+#define FUNCTION_BOUNDARY  (TARGET_SMALLCODE ? 16 : (1 << CACHE_LOG) * 8)\n \n /* Alignment of field after `int : 0' in a structure.  */\n #define EMPTY_FIELD_BOUNDARY  32\n@@ -311,11 +320,11 @@ do {\t\t\t\t\t\t\t\t\\\n     0,  0,  0,  0, \t\t\\\n     0,  0,  0,  1, \t\t\\\n     1,  1,  1,  1, \t\t\\\n-    1,  1,  1,  1,\t\t\\\n+    1,  1,  0,  1,\t\t\\\n+    0,  0,  0,  0,\t\t\\\n     0,  0,  0,  0,\t\t\\\n     0,  0,  0,  0,\t\t\\\n     0,  0,  0,  0,\t\t\\\n-    0,  0,  0,  0\t\t\\\n }\n \n /* 1 for registers not available across function calls.\n@@ -335,7 +344,7 @@ do {\t\t\t\t\t\t\t\t\\\n     1,  1,  1,  1,\t\t\\\n     1,  1,  1,  1,\t\t\\\n     1,  1,  1,  1,\t\t\\\n-    0,  0,  0,  0\t\t\\\n+    0,  0,  0,  0,\t\t\\\n }\n \n /* Return number of consecutive hard regs needed starting at reg REGNO\n@@ -428,7 +437,7 @@ do {\t\t\t\t\t\t\t\t\\\n    its replacement, at the start of a routine.  */\n \n #define INITIAL_ELIMINATION_OFFSET(FROM, TO, OFFSET) \\\n-  OFFSET = initial_elimination_offset (FROM, TO)\n+  OFFSET = initial_elimination_offset ((FROM), (TO))\n \n /* Base register for access to arguments of the function.  */\n #define ARG_POINTER_REGNUM\t16\n@@ -476,6 +485,14 @@ do {\t\t\t\t\t\t\t\t\\\n    be used as the destination of some of the arithmetic ops. There are\n    also some special purpose registers; the T bit register, the\n    Procedure Return Register and the Multiply Accumulate Registers.  */\n+/* Place GENERAL_REGS after FPUL_REGS so that it will be preferred by\n+   reg_class_subunion.  We don't want to have an actual union class\n+   of these, because it would only be used when both classes are calculated\n+   to give the same cost, but there is only one FPUL register.\n+   Besides, regclass fails to notice the different REGISTER_MOVE_COSTS\n+   applying to the actual instruction alternative considered.  E.g., the\n+   y/r alternative of movsi_ie is considered to have no more cost that\n+   the r/r alternative, which is patently untrue.  */\n \n enum reg_class\n {\n@@ -484,8 +501,8 @@ enum reg_class\n   PR_REGS,\n   T_REGS,\n   MAC_REGS,\n-  GENERAL_REGS,\n   FPUL_REGS,\n+  GENERAL_REGS,\n   FP0_REGS,\n   FP_REGS,\n   GENERAL_FP_REGS,\n@@ -503,8 +520,8 @@ enum reg_class\n   \"PR_REGS\",\t\t\\\n   \"T_REGS\",\t\t\\\n   \"MAC_REGS\",\t\t\\\n-  \"GENERAL_REGS\",\t\\\n   \"FPUL_REGS\",\t\t\\\n+  \"GENERAL_REGS\",\t\\\n   \"FP0_REGS\",\t\t\\\n   \"FP_REGS\",\t\t\\\n   \"GENERAL_FP_REGS\",\t\\\n@@ -522,8 +539,8 @@ enum reg_class\n   { 0x00020000, 0x00000000 }, /* PR_REGS\t*/\t\\\n   { 0x00040000, 0x00000000 }, /* T_REGS\t\t*/\t\\\n   { 0x00300000, 0x00000000 }, /* MAC_REGS\t*/\t\\\n-  { 0x0081FFFF, 0x00000000 }, /* GENERAL_REGS\t*/\t\\\n   { 0x00400000, 0x00000000 }, /* FPUL_REGS\t*/\t\\\n+  { 0x0081FFFF, 0x00000000 }, /* GENERAL_REGS\t*/\t\\\n   { 0x01000000, 0x00000000 }, /* FP0_REGS\t*/\t\\\n   { 0xFF000000, 0x000000FF }, /* FP_REGS\t*/\t\\\n   { 0xFF81FFFF, 0x000000FF }, /* GENERAL_FP_REGS */\t\\\n@@ -536,7 +553,7 @@ enum reg_class\n    or could index an array.  */\n \n extern int regno_reg_class[];\n-#define REGNO_REG_CLASS(REGNO) regno_reg_class[REGNO]\n+#define REGNO_REG_CLASS(REGNO) regno_reg_class[(REGNO)]\n \n /* When defined, the compiler allows registers explicitly used in the\n    rtl to be used as spill registers but prevents the compiler from\n@@ -545,9 +562,12 @@ extern int regno_reg_class[];\n #define SMALL_REGISTER_CLASSES 1\n \n /* The order in which register should be allocated.  */\n+/* Sometimes FP0_REGS becomes the preferred class of a floating point pseudo,\n+   and GENERAL_FP_REGS the alternate class.  Since FP0 is likely to be\n+   spilled or used otherwise, we better have the FP_REGS allocated first.  */\n #define REG_ALLOC_ORDER \\\n-  { 1,2,3,7,6,5,4,0,8,9,10,11,12,13,14,\t\t\t\\\n-    24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,\t\\\n+  { 25,26,27,28,29,30,31,24,32,33,34,35,36,37,38,39,\t\\\n+    1,2,3,7,6,5,4,0,8,9,10,11,12,13,14,\t\t\t\\\n     22,15,16,17,18,19,20,21,23 }\n \n /* The class value for index registers, and the one for base regs.  */\n@@ -598,22 +618,30 @@ extern enum reg_class reg_class_from_letter[];\n    In general this is just CLASS; but on some machines\n    in some cases it is preferable to use a more restrictive class.  */\n \n-#define PREFERRED_RELOAD_CLASS(X, CLASS) CLASS\n+#define PREFERRED_RELOAD_CLASS(X, CLASS) (CLASS)\n \n-/* ??? Should make FPUL register a nn-fixed register and make it's\n-   use explicit in the rtl; then change this definition here to\n-   ...  ? FPUL_REGS : NO_REGS) .  */\n #define SECONDARY_OUTPUT_RELOAD_CLASS(CLASS,MODE,X) \\\n-  ((((CLASS == FP_REGS || CLASS == FP0_REGS)\t\t\t\t\\\n-     && GET_CODE (X) == REG && REGNO (X) <= AP_REG)\t\t\t\\\n-    || (CLASS == GENERAL_REGS && GET_CODE (X) == REG\t\t\t\\\n-\t&& REGNO (X) <= FIRST_FP_REG && REGNO (X) >= LAST_FP_REG))\t\\\n-   ? /* FPUL_REGS */ NO_REGS : NO_REGS)\n+  ((((((CLASS) == FP_REGS || (CLASS) == FP0_REGS)\t\t\t\\\n+      && (GET_CODE (X) == REG && REGNO (X) <= AP_REG))\t\t\t\\\n+     || (((CLASS) == GENERAL_REGS || (CLASS) == R0_REGS)\t\t\\\n+\t && GET_CODE (X) == REG\t\t\t\t\t\t\\\n+\t && REGNO (X) >= FIRST_FP_REG && REGNO (X) <= LAST_FP_REG))\t\\\n+    && MODE == SFmode)\t\t\t\t\t\t\t\\\n+   ? FPUL_REGS\t\t\t\t\t\t\t\t\\\n+   : ((CLASS) == FPUL_REGS\t\t\t\t\t\t\\\n+      && (GET_CODE (X) == MEM\t\t\t\t\t\t\\\n+\t  || GET_CODE (X) == REG && REGNO (X) >= FIRST_PSEUDO_REGISTER))\\\n+   ? GENERAL_REGS\t\t\t\t\t\t\t\\\n+   : (((CLASS) == MAC_REGS || (CLASS) == PR_REGS)\t\t\t\\\n+      && GET_CODE (X) == REG && REGNO (X) > 15\t\t\t\t\\\n+      && (CLASS) != REGNO_REG_CLASS (REGNO (X)))\t\t\t\\\n+   ? GENERAL_REGS : NO_REGS)\n \n #define SECONDARY_INPUT_RELOAD_CLASS(CLASS,MODE,X)  \\\n-  (((CLASS == FP_REGS || CLASS == FP0_REGS) && immediate_operand (X, MODE)\\\n-    && ! (fp_one_operand (X) || fp_one_operand (X)))\t\t\t\\\n-   ? R0_REGS : SECONDARY_OUTPUT_RELOAD_CLASS(CLASS,MODE,X))\n+  ((((CLASS) == FP_REGS || (CLASS) == FP0_REGS)\t\t\t\t\\\n+    && immediate_operand ((X), (MODE))\t\t\t\t\t\\\n+    && ! (fp_zero_operand (X) || fp_one_operand (X)))\t\t\t\\\n+   ? R0_REGS : SECONDARY_OUTPUT_RELOAD_CLASS((CLASS),(MODE),(X)))\n \n /* Return the maximum number of consecutive registers\n    needed to represent mode MODE in a register of class CLASS.\n@@ -628,7 +656,9 @@ extern enum reg_class reg_class_from_letter[];\n    These macros are used only in other macro definitions below.  */\n \n #define NPARM_REGS(MODE) \\\n-  ((TARGET_SH3E && ((MODE) == SFmode)) ? 8 : 4)\n+  (TARGET_SH3E && (MODE) == SFmode \\\n+   ? 8 \\\n+   : 4)\n \n #define FIRST_PARM_REG 4\n #define FIRST_RET_REG  0\n@@ -652,7 +682,12 @@ extern enum reg_class reg_class_from_letter[];\n \n /* If we generate an insn to push BYTES bytes,\n    this says how many the stack pointer really advances by.  */\n+/* Don't define PUSH_ROUNDING, since the hardware doesn't do this.\n+   When PUSH_ROUNDING is not defined, PARM_BOUNDARY will cause gcc to\n+   do correct alignment.  */\n+#if 0\n #define PUSH_ROUNDING(NPUSHED)  (((NPUSHED) + 3) & ~3)\n+#endif\n \n /* Offset of first parameter from the argument pointer register value.  */\n #define FIRST_PARM_OFFSET(FNDECL)  0\n@@ -691,16 +726,16 @@ extern enum reg_class reg_class_from_letter[];\n /* Define how to find the value returned by a library function\n    assuming the value has mode MODE.  */\n #define LIBCALL_VALUE(MODE) \\\n-  gen_rtx (REG, MODE, BASE_RETURN_VALUE_REG (MODE));\n+  gen_rtx (REG, (MODE), BASE_RETURN_VALUE_REG (MODE));\n \n /* 1 if N is a possible register number for a function value. */\n #define FUNCTION_VALUE_REGNO_P(REGNO) \\\n   ((REGNO) == FIRST_RET_REG || (TARGET_SH3E && (REGNO) == FIRST_FP_RET_REG))\n \n /* 1 if N is a possible register number for function argument passing.  */\n #define FUNCTION_ARG_REGNO_P(REGNO) \\\n-  (((REGNO) >= FIRST_PARM_REG && (REGNO) < (FIRST_PARM_REG + 4))\t\\\n-   || (TARGET_SH3E\t\t\t\t\t\t\t\\\n+  (((REGNO) >= FIRST_PARM_REG && (REGNO) < (FIRST_PARM_REG + 4))        \\\n+   || (TARGET_SH3E                                                      \\\n        && (REGNO) >= FIRST_FP_PARM_REG && (REGNO) < (FIRST_FP_PARM_REG + 8)))\n \f\n /* Define a data type for recording info about an argument list\n@@ -725,7 +760,7 @@ struct sh_args {\n   ((TARGET_SH3E && ((MODE) == SFmode)) ? SH_ARG_FLOAT : SH_ARG_INT)\n \n #define ROUND_ADVANCE(SIZE) \\\n-  ((SIZE + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n+  (((SIZE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n \n /* Round a register number up to a proper boundary for an arg of mode\n    MODE.\n@@ -745,7 +780,7 @@ struct sh_args {\n    For a library call, FNTYPE is 0.\n \n    On SH, the offset always starts at 0: the first parm reg is always\n-   the same reg.  */\n+   the same reg for a given argument class.  */\n \n #define INIT_CUMULATIVE_ARGS(CUM, FNTYPE, LIBNAME, INDIRECT) \\\n   do {\t\t\t\t\t\t\t\t\\\n@@ -792,9 +827,9 @@ struct sh_args {\n    its data type forbids.  */\n \n #define FUNCTION_ARG(CUM, MODE, TYPE, NAMED) \\\n-  ((PASS_IN_REG_P ((CUM), (MODE), (TYPE))\t\t\t\\\n-    && (NAMED || TARGET_SH3E))\t\t\t\t\t\\\n-   ? gen_rtx (REG, (MODE), \t\t\t\t\t\\\n+  ((PASS_IN_REG_P ((CUM), (MODE), (TYPE))\t\t\t\t\\\n+    && ((NAMED) || TARGET_SH3E))\t\t\t\t\t\\\n+   ? gen_rtx (REG, (MODE),\t\t\t\t\t\t\\\n \t      (BASE_ARG_REG (MODE) + ROUND_REG ((CUM), (MODE)))) \\\n    : 0)\n \n@@ -806,7 +841,7 @@ struct sh_args {\n \n #define FUNCTION_ARG_PARTIAL_NREGS(CUM, MODE, TYPE, NAMED) \\\n   ((PASS_IN_REG_P ((CUM), (MODE), (TYPE))\t\t\t\\\n-    && (NAMED || TARGET_SH3E)\t\t\t\t\t\\\n+    && ((NAMED) || TARGET_SH3E)\t\t\t\t\t\\\n     && (ROUND_REG ((CUM), (MODE))\t\t\t\t\\\n \t+ (MODE != BLKmode\t\t\t\t\t\\\n \t   ? ROUND_ADVANCE (GET_MODE_SIZE (MODE))\t\t\\\n@@ -830,10 +865,10 @@ extern int current_function_anonymous_args;\n \n #define FUNCTION_PROFILER(STREAM,LABELNO)\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n- \tfprintf(STREAM, \"\t.align\t2\\n\");\t\t\t\\\n-\tfprintf(STREAM, \"\ttrapa\t#33\\n\");\t\t\\\n- \tfprintf(STREAM, \"\t.align\t2\\n\");\t\t\t\\\n-\tfprintf(STREAM, \"\t.long\tLP%d\\n\", (LABELNO));\t\\\n+\tfprintf((STREAM), \"\\t.align\\t2\\n\");\t\t\t\\\n+\tfprintf((STREAM), \"\\ttrapa\\t#33\\n\");\t\t\t\\\n+ \tfprintf((STREAM), \"\\t.align\\t2\\n\");\t\t\t\\\n+\tasm_fprintf((STREAM), \"\\t.long\\t%LLP%d\\n\", (LABELNO));\t\\\n }\n \n /* Define this macro if the code for function profiling should come\n@@ -852,40 +887,34 @@ extern int current_function_anonymous_args;\n /* Generate the assembly code for function exit\n    Just dump out any accumulated constant table.  */\n \n-#define FUNCTION_EPILOGUE(STREAM, SIZE)  function_epilogue (STREAM, SIZE)\n-\n-/* Output assembler code for a block containing the constant parts\n-   of a trampoline, leaving space for the variable parts.\n+#define FUNCTION_EPILOGUE(STREAM, SIZE)  function_epilogue ((STREAM), (SIZE))\n \n+/* \n    On the SH, the trampoline looks like\n-   1 0000 D301     \t\tmov.l\tl1,r3\n    2 0002 DD02     \t   \tmov.l\tl2,r13\n+   1 0000 D301     \t\tmov.l\tl1,r3\n    3 0004 4D2B     \t\tjmp\t@r13\n-   4 0006 200B     \t\tor\tr0,r0\n+   4 0006 0009     \t\tnop\n    5 0008 00000000 \tl1:  \t.long   function\n    6 000c 00000000 \tl2:\t.long   area  */\n-#define TRAMPOLINE_TEMPLATE(FILE)  \t\t\\\n-{\t\t\t\t\t\t\\\n-  fprintf ((FILE), \"\t.word\t0xd301\\n\");\t\\\n-  fprintf ((FILE), \"\t.word\t0xdd02\\n\");\t\\\n-  fprintf ((FILE), \"\t.word\t0x4d2b\\n\");\t\\\n-  fprintf ((FILE), \"\t.word\t0x200b\\n\");\t\\\n-  fprintf ((FILE), \"\t.long\t0\\n\");\t\t\\\n-  fprintf ((FILE), \"\t.long\t0\\n\");\t\t\\\n-}\n \n /* Length in units of the trampoline for entering a nested function.  */\n #define TRAMPOLINE_SIZE  16\n \n-/* Alignment required for a trampoline in units.  */\n-#define TRAMPOLINE_ALIGN  4\n+/* Alignment required for a trampoline in bits .  */\n+#define TRAMPOLINE_ALIGNMENT \\\n+  ((CACHE_LOG < 3 || TARGET_SMALLCODE) ? 32 : 64) \\\n \n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code.\n    CXT is an RTX for the static chain value for the function.  */\n \n #define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n+  emit_move_insn (gen_rtx (MEM, SImode, (TRAMP)),\t\t\t\\\n+\t\t  GEN_INT (TARGET_LITTLE_ENDIAN ? 0xd301dd02 : 0xdd02d301));\\\n+  emit_move_insn (gen_rtx (MEM, SImode, plus_constant ((TRAMP), 4)),\t\\\n+\t\t  GEN_INT (TARGET_LITTLE_ENDIAN ? 0x00094d2b : 0x4d2b0009));\\\n   emit_move_insn (gen_rtx (MEM, SImode, plus_constant ((TRAMP), 8)),\t\\\n \t\t  (CXT));\t\t\t\t\t\t\\\n   emit_move_insn (gen_rtx (MEM, SImode, plus_constant ((TRAMP), 12)),\t\\\n@@ -898,7 +927,7 @@ extern int current_function_anonymous_args;\n    can ignore COUNT.  */\n \n #define RETURN_ADDR_RTX(COUNT, FRAME)\t\\\n-  ((COUNT == 0)\t\t\t\t\\\n+  (((COUNT) == 0)\t\t\t\t\\\n    ? gen_rtx (MEM, Pmode, gen_rtx (REG, Pmode, RETURN_ADDRESS_POINTER_REGNUM)) \\\n    : (rtx) 0)\n \f\n@@ -978,18 +1007,18 @@ extern struct rtx_def *sh_builtin_saveregs ();\n \n /* Nonzero if X/OFFSET is a hard reg that can be used as an index.  */\n #define SUBREG_OK_FOR_INDEX_P(X, OFFSET) \\\n-  (REGNO_OK_FOR_INDEX_P (REGNO (X)) && OFFSET == 0)\n+  (REGNO_OK_FOR_INDEX_P (REGNO (X)) && (OFFSET) == 0)\n \n #endif\n \n /* The 'Q' constraint is a pc relative load operand.  */\n #define EXTRA_CONSTRAINT_Q(OP)                          \t\t\\\n   (GET_CODE (OP) == MEM && \t\t\t\t\t\t\\\n-   ((GET_CODE (XEXP (OP, 0)) == LABEL_REF)\t\t\t\t\\\n-    || (GET_CODE (XEXP (OP, 0)) == CONST                \t\t\\\n-\t&& GET_CODE (XEXP (XEXP (OP, 0), 0)) == PLUS \t\t\t\\\n-\t&& GET_CODE (XEXP (XEXP (XEXP (OP, 0), 0), 0)) == LABEL_REF\t\\\n-\t&& GET_CODE (XEXP (XEXP (XEXP (OP, 0), 0), 1)) == CONST_INT)))\n+   ((GET_CODE (XEXP ((OP), 0)) == LABEL_REF)\t\t\t\t\\\n+    || (GET_CODE (XEXP ((OP), 0)) == CONST                \t\t\\\n+\t&& GET_CODE (XEXP (XEXP ((OP), 0), 0)) == PLUS \t\t\t\\\n+\t&& GET_CODE (XEXP (XEXP (XEXP ((OP), 0), 0), 0)) == LABEL_REF\t\\\n+\t&& GET_CODE (XEXP (XEXP (XEXP ((OP), 0), 0), 1)) == CONST_INT)))\n \n #define EXTRA_CONSTRAINT(OP, C)\t\t\\\n   ((C) == 'Q' ? EXTRA_CONSTRAINT_Q (OP)\t\\\n@@ -1004,7 +1033,7 @@ extern struct rtx_def *sh_builtin_saveregs ();\n \n #define MODE_DISP_OK_4(X,MODE) \\\n (GET_MODE_SIZE (MODE) == 4 && (unsigned) INTVAL (X) < 64\t\\\n- && ! (INTVAL (X) & 3) && ! (TARGET_SH3E && MODE == SFmode))\n+ && ! (INTVAL (X) & 3) && ! (TARGET_SH3E && (MODE) == SFmode))\n #define MODE_DISP_OK_8(X,MODE) ((GET_MODE_SIZE(MODE)==8) && ((unsigned)INTVAL(X)<60) && (!(INTVAL(X) &3)))\n \n #define BASE_REGISTER_RTX_P(X)\t\t\t\t\\\n@@ -1048,8 +1077,8 @@ extern struct rtx_def *sh_builtin_saveregs ();\n   do {\t\t\t\t\t\t\t\t\t\\\n     if (GET_CODE (OP) == CONST_INT) \t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\tif (MODE_DISP_OK_4 (OP, MODE))  goto LABEL;\t\t      \t\\\n-\tif (MODE_DISP_OK_8 (OP, MODE))  goto LABEL;\t\t      \t\\\n+\tif (MODE_DISP_OK_4 ((OP), (MODE)))  goto LABEL;\t\t      \t\\\n+\tif (MODE_DISP_OK_8 ((OP), (MODE)))  goto LABEL;\t\t      \t\\\n       }\t\t\t\t\t\t\t\t\t\\\n   } while(0)\n \n@@ -1058,14 +1087,14 @@ extern struct rtx_def *sh_builtin_saveregs ();\n   if (BASE_REGISTER_RTX_P (X))\t\t\t\t\t\t\\\n     goto LABEL;\t\t\t\t\t\t\t\t\\\n   else if ((GET_CODE (X) == POST_INC || GET_CODE (X) == PRE_DEC)\t\\\n-\t   && BASE_REGISTER_RTX_P (XEXP (X, 0)))\t\t\t\\\n+\t   && BASE_REGISTER_RTX_P (XEXP ((X), 0)))\t\t\t\\\n     goto LABEL;\t\t\t\t\t\t\t\t\\\n-  else if (GET_CODE (X) == PLUS)\t\t\t\t\t\\\n+  else if (GET_CODE (X) == PLUS && MODE != PSImode)\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      rtx xop0 = XEXP (X, 0);\t\t\t\t\t\t\\\n-      rtx xop1 = XEXP (X, 1);\t\t\t\t\t\t\\\n+      rtx xop0 = XEXP ((X), 0);\t\t\t\t\t\t\\\n+      rtx xop1 = XEXP ((X), 1);\t\t\t\t\t\t\\\n       if (GET_MODE_SIZE (MODE) <= 8 && BASE_REGISTER_RTX_P (xop0))\t\\\n-\tGO_IF_LEGITIMATE_INDEX (MODE, xop1, LABEL);\t\t\t\\\n+\tGO_IF_LEGITIMATE_INDEX ((MODE), xop1, LABEL);\t\t\t\\\n       if (GET_MODE_SIZE (MODE) <= 4)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  if (BASE_REGISTER_RTX_P (xop1) && INDEX_REGISTER_RTX_P (xop0))\\\n@@ -1098,15 +1127,15 @@ extern struct rtx_def *sh_builtin_saveregs ();\n   if (GET_CODE (X) == PLUS\t\t\t\t\t\\\n       && (GET_MODE_SIZE (MODE) == 4\t\t\t\t\\\n \t  || GET_MODE_SIZE (MODE) == 8)\t\t\t\t\\\n-      && GET_CODE (XEXP (X, 1)) == CONST_INT\t\t\t\\\n-      && BASE_REGISTER_RTX_P (XEXP (X, 0))\t\t\t\\\n-      && ! (TARGET_SH3E && MODE == SFmode))\t\t\t\\\n+      && GET_CODE (XEXP ((X), 1)) == CONST_INT\t\t\t\\\n+      && BASE_REGISTER_RTX_P (XEXP ((X), 0))\t\t\t\\\n+      && ! (TARGET_SH3E && (MODE) == SFmode))\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n-      rtx index_rtx = XEXP (X, 1);\t\t\t\t\\\n+      rtx index_rtx = XEXP ((X), 1);\t\t\t\t\\\n       HOST_WIDE_INT offset = INTVAL (index_rtx), offset_base;\t\\\n       rtx sum;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n-      GO_IF_LEGITIMATE_INDEX (MODE, index_rtx, WIN);\t\t\\\n+      GO_IF_LEGITIMATE_INDEX ((MODE), index_rtx, WIN);\t\t\\\n       /* On rare occasions, we might get an unaligned pointer\t\\\n \t that is indexed in a way to give an aligned address.\t\\\n \t Therefore, keep the lower two bits in offset_base.  */ \\\n@@ -1124,7 +1153,7 @@ extern struct rtx_def *sh_builtin_saveregs ();\n \t prevalent.  */\t\t\t\t\t\t\\\n       if (GET_MODE_SIZE (MODE) + offset - offset_base <= 64)\t\\\n \t{\t\t\t\t\t\t\t\\\n-\t  sum = expand_binop (Pmode, add_optab, XEXP (X, 0),\t\\\n+\t  sum = expand_binop (Pmode, add_optab, XEXP ((X), 0),\t\\\n \t\t\t      GEN_INT (offset_base), NULL_RTX, 0, \\\n \t\t\t      OPTAB_LIB_WIDEN);\t\t\t\\\n                                                                 \\\n@@ -1135,7 +1164,13 @@ extern struct rtx_def *sh_builtin_saveregs ();\n }\n \n /* Go to LABEL if ADDR (a legitimate address expression)\n-   has an effect that depends on the machine mode it is used for.  */\n+   has an effect that depends on the machine mode it is used for.\n+\n+   ??? Strictly speaking, we should also include all indexed addressing,\n+   because the index scale factor is the length of the operand.\n+   However, the impact of GO_IF_MODE_DEPENDENT_ADDRESS would be to\n+   high if we did that.  So we rely on reload to fix things up.  */\n+\n #define GO_IF_MODE_DEPENDENT_ADDRESS(ADDR,LABEL)\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   if (GET_CODE(ADDR) == PRE_DEC || GET_CODE(ADDR) == POST_INC)\t\t\\\n@@ -1207,14 +1242,11 @@ extern struct rtx_def *sh_builtin_saveregs ();\n    that the native compiler puts too large (> 32) immediate shift counts\n    into a register and shifts by the register, letting the SH decide what\n    to do instead of doing that itself.  */\n-/* ??? This is defined, but the library routines in lib1funcs.asm do not\n-   truncate the shift count.  This may result in incorrect results for\n-   unusual cases.  Truncating the shift counts in the library routines would\n-   make them faster.  However, the SH3 has hardware shifts that do not\n-   truncate, so it appears that we need to leave this undefined for correct\n-   SH3 code.  We can still using truncation in the library routines though to\n-   make them faster.  */\n-#define SHIFT_COUNT_TRUNCATED 1\n+/* ??? The library routines in lib1funcs.asm truncate the shift count.\n+   However, the SH3 has hardware shifts that do not truncate exactly as gcc\n+   expects - the sign bit is significant - so it appears that we need to\n+   leave this zero for correct SH3 code.  */\n+#define SHIFT_COUNT_TRUNCATED (! TARGET_SH3)\n \n /* All integers have the same format so truncation is easy.  */\n #define TRULY_NOOP_TRUNCATION(OUTPREC,INPREC)  1\n@@ -1241,7 +1273,7 @@ extern struct rtx_def *sh_builtin_saveregs ();\n       return 0;\t\t\t\t\t\\\n     else if (CONST_OK_FOR_I (INTVAL (RTX)))\t\\\n       return 1;\t\t\t\t\t\\\n-    else if ((OUTER_CODE == AND || OUTER_CODE == IOR || OUTER_CODE == XOR) \\\n+    else if (((OUTER_CODE) == AND || (OUTER_CODE) == IOR || (OUTER_CODE) == XOR) \\\n \t     && CONST_OK_FOR_L (INTVAL (RTX)))\t\\\n       return 1;\t\t\t\t\t\\\n     else\t\t\t\t\t\\\n@@ -1307,15 +1339,12 @@ extern struct rtx_def *sh_builtin_saveregs ();\n #define ADDRESS_COST(RTX) 1\n \n /* Compute extra cost of moving data between one register class\n-   and another.\n-\n-   On the SH it is hard to move into the T reg, but simple to load\n-   from it.  */\n+   and another.  */\n \n #define REGISTER_MOVE_COST(SRCCLASS, DSTCLASS) \\\n-  (((DSTCLASS == T_REGS) || (DSTCLASS == PR_REG)) ? 10\t\t\\\n-   : ((DSTCLASS == FP_REGS && SRCCLASS == GENERAL_REGS)\t\t\\\n-      || (DSTCLASS == GENERAL_REGS && SRCCLASS == FP_REGS)) ? 4\t\\\n+  ((DSTCLASS) == PR_REG ? 10\t\t\\\n+   : (((DSTCLASS) == FP_REGS && (SRCCLASS) == GENERAL_REGS)\t\t\\\n+      || ((DSTCLASS) == GENERAL_REGS && (SRCCLASS) == FP_REGS)) ? 4\t\\\n    : 1)\n \n /* ??? Perhaps make MEMORY_MOVE_COST depend on compiler option?  This\n@@ -1381,10 +1410,10 @@ dtors_section()\t\t\t\t\t\t\t\\\n    do { fprintf (FILE, \".section\\t%s\\n\", NAME); } while (0)\n \n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME) \\\n-   do { ctors_section();  fprintf(FILE,\"\\t.long\\t_%s\\n\", NAME); } while (0)\n+   do { ctors_section();  asm_fprintf((FILE),\"\\t.long\\t%U%s\\n\", (NAME)); } while (0)\n \n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME) \\\n-   do {  dtors_section();  fprintf(FILE,\"\\t.long\\t_%s\\n\", NAME); } while (0)\n+   do {  dtors_section();  asm_fprintf((FILE),\"\\t.long\\t%U%s\\n\", (NAME)); } while (0)\n \n #undef DO_GLOBAL_CTORS_BODY\n \n@@ -1414,10 +1443,10 @@ dtors_section()\t\t\t\t\t\t\t\\\n }\n \n #define ASM_OUTPUT_REG_PUSH(file, v) \\\n-  fprintf (file, \"\\tmov.l\tr%s,-@r15\\n\", v);\n+  fprintf ((file), \"\\tmov.l\\tr%s,-@r15\\n\", (v));\n \n #define ASM_OUTPUT_REG_POP(file, v) \\\n-  fprintf (file, \"\\tmov.l\t@r15+,r%s\\n\", v);\n+  fprintf ((file), \"\\tmov.l\\t@r15+,r%s\\n\", (v));\n \n /* The assembler's names for the registers.  RFP need not always be used as\n    the Real framepointer; it can also be used as a normal general register.\n@@ -1440,37 +1469,41 @@ dtors_section()\t\t\t\t\t\t\t\\\n \n /* Output a label definition.  */\n #define ASM_OUTPUT_LABEL(FILE,NAME) \\\n-  do { assemble_name (FILE, NAME); fputs (\":\\n\", FILE); } while (0)\n+  do { assemble_name ((FILE), (NAME)); fputs (\":\\n\", (FILE)); } while (0)\n \n /* This is how to output an assembler line\n    that says to advance the location counter\n    to a multiple of 2**LOG bytes.  */\n \n #define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\\n   if ((LOG) != 0)\t\t\t\\\n-    fprintf (FILE, \"\\t.align %d\\n\", LOG)\n+    fprintf ((FILE), \"\\t.align %d\\n\", (LOG))\n \n /* Output a function label definition.  */\n #define ASM_DECLARE_FUNCTION_NAME(STREAM,NAME,DECL) \\\n-    ASM_OUTPUT_LABEL(STREAM, NAME)\n+    ASM_OUTPUT_LABEL((STREAM), (NAME))\n \n /* Output a globalising directive for a label.  */\n #define ASM_GLOBALIZE_LABEL(STREAM,NAME)\t\\\n-  (fprintf (STREAM, \"\\t.global\\t\"),\t\t\\\n-   assemble_name (STREAM, NAME),\t\t\\\n-   fputc ('\\n',STREAM))\n+  (fprintf ((STREAM), \"\\t.global\\t\"),\t\t\\\n+   assemble_name ((STREAM), (NAME)),\t\t\\\n+   fputc ('\\n', (STREAM)))\n \n /* The prefix to add to user-visible assembler symbols. */\n \n #define USER_LABEL_PREFIX \"_\"\n \n+/* The prefix to add to an internally generated label. */\n+\n+#define LOCAL_LABEL_PREFIX \"\"\n+\n /* Make an internal label into a string.  */\n #define ASM_GENERATE_INTERNAL_LABEL(STRING, PREFIX, NUM) \\\n-  sprintf (STRING, \"*%s%d\", PREFIX, NUM)\n+  sprintf ((STRING), \"*%s%s%d\", LOCAL_LABEL_PREFIX, (PREFIX), (NUM))\n \n /* Output an internal label definition.  */\n #define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM) \\\n-  fprintf (FILE, \"%s%d:\\n\", PREFIX, NUM)\n+  asm_fprintf ((FILE), \"%L%s%d:\\n\", (PREFIX), (NUM))\n \n /* #define ASM_OUTPUT_CASE_END(STREAM,NUM,TABLE)\t    */\n \n@@ -1481,23 +1514,31 @@ dtors_section()\t\t\t\t\t\t\t\\\n \n /* Jump tables must be 32 bit aligned, no matter the size of the element.  */\n #define ASM_OUTPUT_CASE_LABEL(STREAM,PREFIX,NUM,TABLE) \\\n-  fprintf (STREAM, \"\\t.align 2\\n%s%d:\\n\",  PREFIX, NUM);\n+  fprintf ((STREAM), \"\\t.align 2\\n%s%d:\\n\",  (PREFIX), (NUM));\n \n /* Output a relative address table.  */\n \n #define ASM_OUTPUT_ADDR_DIFF_ELT(STREAM,VALUE,REL)  \t\t\t\\\n-  if (TARGET_BIGTABLE) \t\t\t\t\t\t\t\\\n-    fprintf (STREAM, \"\\t.long\tL%d-L%d\\n\", VALUE,REL); \t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    fprintf (STREAM, \"\\t.word\tL%d-L%d\\n\", VALUE,REL); \t\t\\\n+  switch (sh_addr_diff_vec_mode)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+    case SImode:\t\t\t\t\t\t\t\\\n+      asm_fprintf ((STREAM), \"\\t.long\\t%LL%d-%LL%d\\n\", (VALUE),(REL));\t\\\n+      break;\t\t\t\t\t\t\t\t\\\n+    case HImode:\t\t\t\t\t\t\t\\\n+      asm_fprintf ((STREAM), \"\\t.word\\t%LL%d-%LL%d\\n\", (VALUE),(REL));\t\\\n+      break;\t\t\t\t\t\t\t\t\\\n+    case QImode:\t\t\t\t\t\t\t\\\n+      asm_fprintf ((STREAM), \"\\t.byte\\t%LL%d-%LL%d\\n\", (VALUE),(REL));\t\\\n+      break;\t\t\t\t\t\t\t\t\\\n+    }\n \n /* Output an absolute table element.  */\n \n #define ASM_OUTPUT_ADDR_VEC_ELT(STREAM,VALUE)  \t\t\t\t\\\n   if (TARGET_BIGTABLE) \t\t\t\t\t\t\t\\\n-    fprintf (STREAM, \"\\t.long\tL%d\\n\", VALUE); \t\t\t\\\n+    asm_fprintf ((STREAM), \"\\t.long\\t%LL%d\\n\", (VALUE)); \t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n-    fprintf (STREAM, \"\\t.word\tL%d\\n\", VALUE); \t\t\t\\\n+    asm_fprintf ((STREAM), \"\\t.word\\t%LL%d\\n\", (VALUE)); \t\t\t\\\n \n /* Output various types of constants.  */\n \n@@ -1506,50 +1547,46 @@ dtors_section()\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_DOUBLE(FILE,VALUE)\t\t\t\\\n do { char dstr[30];\t\t\t\t\t\\\n      REAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", dstr);\t\\\n-     fprintf (FILE, \"\\t.double %s\\n\", dstr);\t\t\\\n+     fprintf ((FILE), \"\\t.double %s\\n\", dstr);\t\t\\\n    } while (0)\n \n /* This is how to output an assembler line defining a `float' constant.  */\n #define ASM_OUTPUT_FLOAT(FILE,VALUE)\t\t\t\\\n do { char dstr[30];\t\t\t\t\t\\\n      REAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", dstr);\t\\\n-     fprintf (FILE, \"\\t.float %s\\n\", dstr);\t\t\\\n+     fprintf ((FILE), \"\\t.float %s\\n\", dstr);\t\t\\\n    } while (0)\n \n-#define ASM_OUTPUT_INT(STREAM, EXP)  \t\\\n-  (fprintf (STREAM, \"\\t.long\\t\"),      \t\\\n-   output_addr_const (STREAM, (EXP)),  \t\\\n-   fputc ('\\n', STREAM))\n+#define ASM_OUTPUT_INT(STREAM, EXP)\t\t\\\n+  (fprintf ((STREAM), \"\\t.long\\t\"),      \t\\\n+   output_addr_const ((STREAM), (EXP)),  \t\\\n+   fputc ('\\n', (STREAM)))\n \n #define ASM_OUTPUT_SHORT(STREAM, EXP)\t\\\n-  (fprintf (STREAM, \"\\t.short\\t\"),\t\\\n-   output_addr_const (STREAM, (EXP)),\t\\\n-   fputc ('\\n', STREAM))\n+  (fprintf ((STREAM), \"\\t.short\\t\"),\t\\\n+   output_addr_const ((STREAM), (EXP)),\t\\\n+   fputc ('\\n', (STREAM)))\n \n-#define ASM_OUTPUT_CHAR(STREAM, EXP)  \t\\\n-  (fprintf (STREAM, \"\\t.byte\\t\"),      \t\\\n-   output_addr_const (STREAM, (EXP)),  \t\\\n-   fputc ('\\n', STREAM))\n+#define ASM_OUTPUT_CHAR(STREAM, EXP)\t\t\\\n+  (fprintf ((STREAM), \"\\t.byte\\t\"),      \t\\\n+   output_addr_const ((STREAM), (EXP)),  \t\\\n+   fputc ('\\n', (STREAM)))\n \n #define ASM_OUTPUT_BYTE(STREAM, VALUE)  \t\\\n-  fprintf (STREAM, \"\\t.byte\\t%d\\n\", VALUE)  \t\\\n+  fprintf ((STREAM), \"\\t.byte\\t%d\\n\", (VALUE)) \t\\\n \n-/* Align loops and labels after unconditional branches to get faster\n-   code.  */\n+/* The next two are used for debug info when compiling with -gdwarf.  */\n+#define UNALIGNED_SHORT_ASM_OP\t\".uaword\"\n+#define UNALIGNED_INT_ASM_OP\t\".ualong\"\n \n-#define ASM_OUTPUT_LOOP_ALIGN(FILE)\t\\\n-  if (! TARGET_SMALLCODE)\t\t\\\n-    ASM_OUTPUT_ALIGN ((FILE), 2)\n-\n-#define ASM_OUTPUT_ALIGN_CODE(FILE)\t\\\n-  if (! TARGET_SMALLCODE)\t\t\\\n-    ASM_OUTPUT_ALIGN ((FILE), (TARGET_SH3 || TARGET_SH3E) ? 4 : 2)\n+/* Loop alignment is now done in machine_dependent_reorg, so that\n+   branch shortening can know about it.  */\n \n /* This is how to output an assembler line\n    that says to advance the location counter by SIZE bytes.  */\n \n #define ASM_OUTPUT_SKIP(FILE,SIZE) \\\n-  fprintf (FILE, \"\\t.space %d\\n\", (SIZE))\n+  fprintf ((FILE), \"\\t.space %d\\n\", (SIZE))\n \n /* This says how to output an assembler line\n    to define a global common symbol.  */\n@@ -1562,7 +1599,7 @@ do { char dstr[30];\t\t\t\t\t\\\n /* This says how to output an assembler line\n    to define a local common symbol.  */\n \n-#define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE,ROUNDED)\t\\\n+#define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)\t\\\n ( fputs (\"\\t.lcomm \", (FILE)),\t\t\t\t\\\n   assemble_name ((FILE), (NAME)),\t\t\t\\\n   fprintf ((FILE), \",%d\\n\", (SIZE)))\n@@ -1580,23 +1617,33 @@ do { char dstr[30];\t\t\t\t\t\\\n #define TARGET_FF\t014\n #define TARGET_CR\t015\n \f\n-/* Only perform branch elimination (by making instructions conditional) if\n-   we're optimizing.  Otherwise it's of no use anyway.  */\n+/* A C statement to be executed just prior to the output of\n+   assembler code for INSN, to modify the extracted operands so\n+   they will be output differently.\n+\n+   Here the argument OPVEC is the vector containing the operands\n+   extracted from INSN, and NOPERANDS is the number of elements of\n+   the vector which contain meaningful data for this insn.\n+   The contents of this vector are what will be used to convert the insn\n+   template into assembler code, so you can change the assembler output\n+   by changing the contents of the vector.  */\n+\n #define FINAL_PRESCAN_INSN(INSN, OPVEC, NOPERANDS) \\\n-  final_prescan_insn (INSN, OPVEC, NOPERANDS)\n+  final_prescan_insn ((INSN), (OPVEC), (NOPERANDS))\n \n /* Print operand X (an rtx) in assembler syntax to file FILE.\n    CODE is a letter or dot (`z' in `%z0') or 0 if no letter was specified.\n    For `%' followed by punctuation, CODE is the punctuation and X is null.  */\n \n-#define PRINT_OPERAND(STREAM, X, CODE)  print_operand (STREAM, X, CODE)\n+#define PRINT_OPERAND(STREAM, X, CODE)  print_operand ((STREAM), (X), (CODE))\n \n /* Print a memory address as an operand to reference that memory location.  */\n \n-#define PRINT_OPERAND_ADDRESS(STREAM,X)  print_operand_address (STREAM, X)\n+#define PRINT_OPERAND_ADDRESS(STREAM,X)  print_operand_address ((STREAM), (X))\n \n #define PRINT_OPERAND_PUNCT_VALID_P(CHAR) \\\n-  ((CHAR)=='.' || (CHAR) == '#' || (CHAR)=='@')\n+  ((CHAR) == '.' || (CHAR) == '#' || (CHAR) == '@' || (CHAR) == ','\t\\\n+   || (CHAR) == '$')\n \f\n extern struct rtx_def *sh_compare_op0;\n extern struct rtx_def *sh_compare_op1;\n@@ -1606,7 +1653,6 @@ extern struct rtx_def *prepare_scc_operands();\n    match exactly the cpu attribute in the sh.md file.  */\n \n enum processor_type {\n-  PROCESSOR_SH0,\n   PROCESSOR_SH1,\n   PROCESSOR_SH2,\n   PROCESSOR_SH3,\n@@ -1616,15 +1662,39 @@ enum processor_type {\n #define sh_cpu_attr ((enum attr_cpu)sh_cpu)\n extern enum processor_type sh_cpu;\n \n+extern enum machine_mode sh_addr_diff_vec_mode;\n+\n+extern int optimize; /* needed for gen_casesi, and addr_diff_vec_adjust.  */\n+\n /* Declare functions defined in sh.c and used in templates.  */\n \n extern char *output_branch();\n+extern char *output_ieee_ccmpeq();\n+extern char *output_branchy_insn();\n extern char *output_shift();\n extern char *output_movedouble();\n extern char *output_movepcrel();\n extern char *output_jump_label_table();\n extern char *output_far_jump();\n \n+enum mdep_reorg_phase_e\n+{\n+  SH_BEFORE_MDEP_REORG,\n+  SH_INSERT_USES_LABELS,\n+  SH_SHORTEN_BRANCHES0,\n+  SH_FIXUP_PCLOAD,\n+  SH_SHORTEN_BRANCHES1,\n+  SH_AFTER_MDEP_REORG\n+};\n+\n+void machine_dependent_reorg ();\n+int short_cbranch_p ();\n+int med_branch_p ();\n+int braf_branch_p ();\n+int align_length ();\n+int addr_diff_vec_adjust ();\n+struct rtx_def *sfunc_uses_reg ();\n+\n #define MACHINE_DEPENDENT_REORG(X) machine_dependent_reorg(X)\n \n /* Generate calls to memcpy, memcmp and memset.  */\n@@ -1637,7 +1707,7 @@ extern char *output_far_jump();\n    text can be read.  CH is the first character after the #pragma.  The\n    result of the expression is the terminating character found\n    (newline or EOF).  */\n-#define HANDLE_PRAGMA(FILE, NODE) handle_pragma (FILE, NODE)\n+#define HANDLE_PRAGMA(FILE, NODE) handle_pragma ((FILE), (NODE))\n \n /* Set when processing a function with pragma interrupt turned on.  */\n \n@@ -1666,58 +1736,42 @@ sh_valid_machine_decl_attribute (DECL, ATTRIBUTES, IDENTIFIER, ARGS)\n \n #define ADJUST_INSN_LENGTH(X, LENGTH)\t\t\t\t\\\n   if (((GET_CODE (X) == INSN\t\t\t\t\t\\\n-\t&& GET_CODE (PATTERN (X)) != SEQUENCE\t\t\t\\\n \t&& GET_CODE (PATTERN (X)) != USE\t\t\t\\\n \t&& GET_CODE (PATTERN (X)) != CLOBBER)\t\t\t\\\n        || GET_CODE (X) == CALL_INSN\t\t\t\t\\\n        || (GET_CODE (X) == JUMP_INSN\t\t\t\t\\\n \t   && GET_CODE (PATTERN (X)) != ADDR_DIFF_VEC\t\t\\\n \t   && GET_CODE (PATTERN (X)) != ADDR_VEC))\t\t\\\n+      && GET_CODE (PATTERN (NEXT_INSN (PREV_INSN (X)))) != SEQUENCE \\\n       && get_attr_needs_delay_slot (X) == NEEDS_DELAY_SLOT_YES)\t\\\n-    LENGTH += 2;\t\t\t\t\t\t\\\n-  if (! TARGET_SMALLCODE)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      /* After the folowing loop,  PAD will be an upper bound\t\\\n-\t for the number of padding bytes the alignment will\t\\\n-\t require.  */\t\t\t\t\t\t\\\n-       rtx aip;\t\t\t\t\t\t\t\\\n-       int pad = 0;\t\t\t\t\t\t\\\n-       for (aip = PREV_INSN (X); aip; aip = PREV_INSN (aip))\t\\\n-\t {\t\t\t\t\t\t\t\\\n-\t   if (GET_CODE (aip) == BARRIER)\t\t\t\\\n-\t     {\t\t\t\t\t\t\t\\\n-\t       if (TARGET_SH3 || TARGET_SH3E)\t\t\t\\\n-\t\t pad = 14;\t\t\t\t\t\\\n-\t       else\t\t\t\t\t\t\\\n-\t\t pad = 2;\t\t\t\t\t\\\n-\t       break;\t\t\t\t\t\t\\\n-\t     }\t\t\t\t\t\t\t\\\n-\t   else if ((GET_CODE (aip) == NOTE\t\t\t\\\n-\t\t     && NOTE_LINE_NUMBER (aip) == NOTE_INSN_LOOP_BEG)) \\\n-\t     {\t\t\t\t\t\t\t\\\n-\t       pad = 2;\t\t\t\t\t\\\n-\t       /* Don't break here, because there might be a\t\\\n-\t\t  preceding BARRIER, which requires mores\t\\\n-\t\t  alignment for SH3[E] .  */\t\t\t\\\n-\t     }\t\t\t\t\t\t\t\\\n-\t   else if (GET_CODE (aip) != NOTE\t\t\t\\\n-\t\t    && GET_CODE (aip) != CODE_LABEL)\t\t\\\n-\t     break;\t\t\t\t\t\t\\\n-\t }\t\t\t\t\t\t\t\\\n-       LENGTH += pad;\t\t\t\t\t\t\\\n-    }\n+    (LENGTH) += 2;\t\t\t\t\t\t\\\n+  if (GET_CODE (X) == INSN\t\t\t\t\t\\\n+      && GET_CODE (PATTERN (X)) == UNSPEC_VOLATILE\t\t\\\n+      && XINT (PATTERN (X), 1) == 7)\t\t\t\t\\\n+    (LENGTH) -= addr_diff_vec_adjust (X, LENGTH);\t\t\\\n+  if (GET_CODE (X) == INSN\t\t\t\t\t\\\n+      && GET_CODE (PATTERN (X)) == UNSPEC_VOLATILE\t\t\\\n+      && XINT (PATTERN (X), 1) == 1)\t\t\t\t\\\n+    (LENGTH) = align_length (X);\t\t\t\t\\\n+  if (GET_CODE (X) == JUMP_INSN\t\t\t\t\t\\\n+      && GET_CODE (PATTERN (X)) == ADDR_DIFF_VEC)\t\t\\\n+    /* The code before an ADDR_DIFF_VEC is even aligned, thus\t\\\n+       any odd estimate is wrong.  */\t\t\t\t\\\n+    (LENGTH) &= ~1;\n \n /* Enable a bug fix for the shorten_branches pass.  */\n #define SHORTEN_WITH_ADJUST_INSN_LENGTH\n \f\n /* Define the codes that are matched by predicates in sh.c.  */\n #define PREDICATE_CODES \\\n-  {\"arith_reg_operand\", {SUBREG, REG}},\t\t\t\t\t\\\n   {\"arith_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\t\\\n+  {\"arith_reg_operand\", {SUBREG, REG}},\t\t\t\t\t\\\n   {\"arith_reg_or_0_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\\\n-  {\"logical_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\\\n+  {\"braf_label_ref_operand\", {LABEL_REF}},\t\t\t\t\\\n   {\"general_movsrc_operand\", {SUBREG, REG, CONST_INT, MEM}},\t\t\\\n-  {\"general_movdst_operand\", {SUBREG, REG, CONST_INT, MEM}},\n+  {\"general_movdst_operand\", {SUBREG, REG, CONST_INT, MEM}},\t\t\\\n+  {\"logical_operand\", {SUBREG, REG, CONST_INT}},\t\t\t\\\n+  {\"register_operand\", {SUBREG, REG}},\n \n /* Define this macro if it is advisable to hold scalars in registers\n    in a wider mode than that declared by the program.  In such cases, \n@@ -1731,7 +1785,7 @@ sh_valid_machine_decl_attribute (DECL, ATTRIBUTES, IDENTIFIER, ARGS)\n #define PROMOTE_MODE(MODE, UNSIGNEDP, TYPE) \\\n   if (GET_MODE_CLASS (MODE) == MODE_INT\t\t\t\\\n       && GET_MODE_SIZE (MODE) < UNITS_PER_WORD)\t\t\\\n-    MODE = SImode;\n+    (MODE) = SImode;\n \n /* Defining PROMOTE_FUNCTION_ARGS eliminates some unnecessary zero/sign\n    extensions applied to char/short functions arguments.  Defining\n@@ -1753,11 +1807,10 @@ sh_valid_machine_decl_attribute (DECL, ATTRIBUTES, IDENTIFIER, ARGS)\n    the scheduler that an output- or anti-dependence does not incur\n    the same cost as a data-dependence.  */\n \n-/* ??? Should anticipate the effect of delayed branch scheduling\n-   and arrange for a second instruction to be put between the\n-   load of the function's address and the call.  */\n-\n #define ADJUST_COST(insn,link,dep_insn,cost)\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\t\\\n+  rtx reg;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n   if (GET_CODE(insn) == CALL_INSN)\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       /* The only input for a call that is timing-critical is the\t\\\n@@ -1768,14 +1821,32 @@ sh_valid_machine_decl_attribute (DECL, ATTRIBUTES, IDENTIFIER, ARGS)\n \tcall = XVECEXP (call, 0 ,0);\t\t\t\t\t\\\n       if (GET_CODE (call) == SET)\t\t\t\t\t\\\n \tcall = SET_SRC (call);\t\t\t\t\t\t\\\n-      if (GET_CODE (call) == CALL && GET_CODE (XEXP (call, 0)) == MEM)\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  rtx set = single_set (dep_insn);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\t  if (set && ! rtx_equal_p (SET_DEST (set), XEXP (XEXP (call, 0), 0)))\\\n-\t    (cost) = 0;\t\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      }\n+      if (GET_CODE (call) == CALL && GET_CODE (XEXP (call, 0)) == MEM\t\\\n+\t  && ! reg_set_p (XEXP (XEXP (call, 0), 0), dep_insn))\t\t\\\n+\t(cost) = 0;\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  /* All sfunc calls are parallels with at least four components.\t\\\n+     Exploit this to avoid unnecessary calls to sfunc_uses_reg.  */\t\\\n+  else if (GET_CODE (PATTERN (insn)) == PARALLEL\t\t\t\\\n+\t   && XVECLEN (PATTERN (insn), 0) >= 4\t\t\t\t\\\n+\t   && (reg = sfunc_uses_reg (insn)))\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      /* Likewise, the most timing critical input for an sfuncs call\t\\\n+\t is the function address.  However, sfuncs typically start\t\\\n+\t using their arguments pretty quickly.\t\t\t\t\\\n+\t Assume a four cycle delay before they are needed.  */\t\t\\\n+      if (! reg_set_p (reg, dep_insn))\t\t\t\t\t\\\n+\tcost -= 4;\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  /* Adjust load_si / pcload_si type insns latency.  Use the known\t\\\n+     nominal latency and form of the insn to speed up the check.  */\t\\\n+  else if (cost == 3\t\t\t\t\t\t\t\\\n+\t   && GET_CODE (PATTERN (dep_insn)) == SET\t\t\t\\\n+\t   /* Latency for dmpy type insns is also 3, so check the that\t\\\n+\t      it's actually a move insn.  */\t\t\t\t\\\n+\t   && general_movsrc_operand (SET_SRC (PATTERN (dep_insn)), SImode))\\\n+    cost = 2;\t\t\t\t\t\t\t\t\\\n+} while (0)\t\t\t\t\t\t\t\t\\\n \n /* Since the SH architecture lacks negative address offsets,\n    the givs should be sorted smallest to largest so combine_givs\n@@ -1787,3 +1858,5 @@ sh_valid_machine_decl_attribute (DECL, ATTRIBUTES, IDENTIFIER, ARGS)\n \n /* For the sake of libgcc2.c, indicate target supports atexit.  */\n #define HAVE_ATEXIT\n+\n+#define SH_DYNAMIC_SHIFT_COST (TARGET_SH3 ? (TARGET_SMALLCODE ? 1 : 2) : 20)"}, {"sha": "fe4e98c3c039aadedfb8a5e14b842449910e7ecc", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for SPARC running Solaris 2\n-   Copyright 1992, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright 1992, 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@netcom.com).\n    Additional changes by David V. Henkel-Wallace (gumby@cygnus.com).\n \n@@ -174,3 +174,8 @@ Boston, MA 02111-1307, USA.  */\n /* Define for support of TFmode long double and REAL_ARITHMETIC.\n    Sparc ABI says that long double is 4 words.  */\n #define LONG_DOUBLE_TYPE_SIZE 128\n+\n+/* But indicate that it isn't supported by the hardware.  */\n+#define WIDEST_HARDWARE_FP_SIZE 64\n+\n+#define STDC_0_IN_SYSTEM_HEADERS"}, {"sha": "a96bbf962d6222cbcbf958df81be1009fbdbf046", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -21,8 +21,8 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"regs.h\"\n@@ -102,6 +102,10 @@ static int frame_base_offset;\n \n static rtx find_addr_reg ();\n static void sparc_init_modes ();\n+\n+#ifdef DWARF2_DEBUGGING_INFO\n+extern char *dwarf2out_cfi_label ();\n+#endif\n \f\n /* Option handling.  */\n "}, {"sha": "b1afbcd003ce90b1c5cf1750966cabe1bc17fd74", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1519,15 +1519,15 @@\n \n (define_insn \"pic_lo_sum_di\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(lo_sum:SI (match_operand:DI 1 \"register_operand\" \"r\")\n-\t\t   (unspec:SI [(match_operand:DI 2 \"immediate_operand\" \"in\")] 0)))]\n+        (lo_sum:SI (match_operand:DI 1 \"register_operand\" \"r\")\n+                   (unspec:SI [(match_operand:DI 2 \"immediate_operand\" \"in\")] 0)))]\n   \"TARGET_ARCH64 && flag_pic\"\n   \"add %1,%%lo(%a2),%0\"\n   [(set_attr \"length\" \"1\")])\n \n (define_insn \"pic_sethi_di\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(high:SI (unspec:SI [(match_operand 1 \"\" \"\")] 0)))]\n+        (high:SI (unspec:SI [(match_operand 1 \"\" \"\")] 0)))]\n   \"TARGET_ARCH64 && flag_pic && check_pic (1)\"\n   \"sethi %%hi(%a1),%0\"\n   [(set_attr \"type\" \"move\")"}, {"sha": "e8a9a603b6fe63e97202dddd008d4ec090c13636", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for Sparc running System V.4\n-   Copyright (C) 1991, 1992, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1992, 1995, 1996, 1997 Free Software Foundation, Inc.\n \n    Written by Ron Guilmette (rfg@netcom.com).\n "}, {"sha": "df09c56d129302131200b91d0df803884debc9a8", "filename": "gcc/configure", "status": "modified", "additions": 295, "deletions": 98, "changes": 393, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -771,13 +771,212 @@ test \"$host_alias\" != \"$target_alias\" &&\n   program_prefix=${target_alias}-\n \n \n+# Find the native compiler\n+# Extract the first word of \"gcc\", so it can be a program name with args.\n+set dummy gcc; ac_word=$2\n+echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n+echo \"configure:779: checking for $ac_word\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  if test -n \"$CC\"; then\n+  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\n+else\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n+  for ac_dir in $PATH; do\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f $ac_dir/$ac_word; then\n+      ac_cv_prog_CC=\"gcc\"\n+      break\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+fi\n+fi\n+CC=\"$ac_cv_prog_CC\"\n+if test -n \"$CC\"; then\n+  echo \"$ac_t\"\"$CC\" 1>&6\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+\n+if test -z \"$CC\"; then\n+  # Extract the first word of \"cc\", so it can be a program name with args.\n+set dummy cc; ac_word=$2\n+echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n+echo \"configure:808: checking for $ac_word\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  if test -n \"$CC\"; then\n+  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\n+else\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n+  ac_prog_rejected=no\n+  for ac_dir in $PATH; do\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f $ac_dir/$ac_word; then\n+      if test \"$ac_dir/$ac_word\" = \"/usr/ucb/cc\"; then\n+        ac_prog_rejected=yes\n+\tcontinue\n+      fi\n+      ac_cv_prog_CC=\"cc\"\n+      break\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+if test $ac_prog_rejected = yes; then\n+  # We found a bogon in the path, so make sure we never use it.\n+  set dummy $ac_cv_prog_CC\n+  shift\n+  if test $# -gt 0; then\n+    # We chose a different compiler from the bogus one.\n+    # However, it has the same basename, so the bogon will be chosen\n+    # first if we set CC to just the basename; use the full file name.\n+    shift\n+    set dummy \"$ac_dir/$ac_word\" \"$@\"\n+    shift\n+    ac_cv_prog_CC=\"$@\"\n+  fi\n+fi\n+fi\n+fi\n+CC=\"$ac_cv_prog_CC\"\n+if test -n \"$CC\"; then\n+  echo \"$ac_t\"\"$CC\" 1>&6\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+\n+  test -z \"$CC\" && { echo \"configure: error: no acceptable cc found in \\$PATH\" 1>&2; exit 1; }\n+fi\n+\n+echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\"\"... $ac_c\" 1>&6\n+echo \"configure:856: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n+\n+ac_ext=c\n+# CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'\n+ac_link='${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'\n+cross_compiling=$ac_cv_prog_cc_cross\n+\n+cat > conftest.$ac_ext <<EOF\n+#line 866 \"configure\"\n+#include \"confdefs.h\"\n+main(){return(0);}\n+EOF\n+if { (eval echo configure:870: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+  ac_cv_prog_cc_works=yes\n+  # If we can't run a trivial program, we are probably using a cross compiler.\n+  if (./conftest; exit) 2>/dev/null; then\n+    ac_cv_prog_cc_cross=no\n+  else\n+    ac_cv_prog_cc_cross=yes\n+  fi\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  ac_cv_prog_cc_works=no\n+fi\n+rm -fr conftest*\n+\n+echo \"$ac_t\"\"$ac_cv_prog_cc_works\" 1>&6\n+if test $ac_cv_prog_cc_works = no; then\n+  { echo \"configure: error: installation or configuration problem: C compiler cannot create executables.\" 1>&2; exit 1; }\n+fi\n+echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\"\"... $ac_c\" 1>&6\n+echo \"configure:890: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n+echo \"$ac_t\"\"$ac_cv_prog_cc_cross\" 1>&6\n+cross_compiling=$ac_cv_prog_cc_cross\n+\n+echo $ac_n \"checking whether we are using GNU C\"\"... $ac_c\" 1>&6\n+echo \"configure:895: checking whether we are using GNU C\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_prog_gcc'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.c <<EOF\n+#ifdef __GNUC__\n+  yes;\n+#endif\n+EOF\n+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:904: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+  ac_cv_prog_gcc=yes\n+else\n+  ac_cv_prog_gcc=no\n+fi\n+fi\n+\n+echo \"$ac_t\"\"$ac_cv_prog_gcc\" 1>&6\n+\n+if test $ac_cv_prog_gcc = yes; then\n+  GCC=yes\n+  ac_test_CFLAGS=\"${CFLAGS+set}\"\n+  ac_save_CFLAGS=\"$CFLAGS\"\n+  CFLAGS=\n+  echo $ac_n \"checking whether ${CC-cc} accepts -g\"\"... $ac_c\" 1>&6\n+echo \"configure:919: checking whether ${CC-cc} accepts -g\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_g'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  echo 'void f(){}' > conftest.c\n+if test -z \"`${CC-cc} -g -c conftest.c 2>&1`\"; then\n+  ac_cv_prog_cc_g=yes\n+else\n+  ac_cv_prog_cc_g=no\n+fi\n+rm -f conftest*\n+\n+fi\n+\n+echo \"$ac_t\"\"$ac_cv_prog_cc_g\" 1>&6\n+  if test \"$ac_test_CFLAGS\" = set; then\n+    CFLAGS=\"$ac_save_CFLAGS\"\n+  elif test $ac_cv_prog_cc_g = yes; then\n+    CFLAGS=\"-g -O2\"\n+  else\n+    CFLAGS=\"-O2\"\n+  fi\n+else\n+  GCC=\n+  test \"${CFLAGS+set}\" = set || CFLAGS=\"-g\"\n+fi\n+\n+echo $ac_n \"checking whether ${MAKE-make} sets \\${MAKE}\"\"... $ac_c\" 1>&6\n+echo \"configure:947: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n+set dummy ${MAKE-make}; ac_make=`echo \"$2\" | sed 'y%./+-%__p_%'`\n+if eval \"test \\\"`echo '$''{'ac_cv_prog_make_${ac_make}_set'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftestmake <<\\EOF\n+all:\n+\t@echo 'ac_maketemp=\"${MAKE}\"'\n+EOF\n+# GNU make sometimes prints \"make[1]: Entering...\", which would confuse us.\n+eval `${MAKE-make} -f conftestmake 2>/dev/null | grep temp=`\n+if test -n \"$ac_maketemp\"; then\n+  eval ac_cv_prog_make_${ac_make}_set=yes\n+else\n+  eval ac_cv_prog_make_${ac_make}_set=no\n+fi\n+rm -f conftestmake\n+fi\n+if eval \"test \\\"`echo '$ac_cv_prog_make_'${ac_make}_set`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+  SET_MAKE=\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+  SET_MAKE=\"MAKE=${MAKE-make}\"\n+fi\n+\n+\n # Find some useful tools\n for ac_prog in mawk gawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:781: checking for $ac_word\" >&5\n+echo \"configure:980: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_AWK'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -808,7 +1007,7 @@ done\n # Extract the first word of \"flex\", so it can be a program name with args.\n set dummy flex; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:812: checking for $ac_word\" >&5\n+echo \"configure:1011: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_LEX'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -841,15 +1040,15 @@ then\n   *) ac_lib=l ;;\n   esac\n   echo $ac_n \"checking for yywrap in -l$ac_lib\"\"... $ac_c\" 1>&6\n-echo \"configure:845: checking for yywrap in -l$ac_lib\" >&5\n+echo \"configure:1044: checking for yywrap in -l$ac_lib\" >&5\n ac_lib_var=`echo $ac_lib'_'yywrap | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-l$ac_lib  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 853 \"configure\"\n+#line 1052 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -860,7 +1059,7 @@ int main() {\n yywrap()\n ; return 0; }\n EOF\n-if { (eval echo configure:864: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1063: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -883,7 +1082,7 @@ fi\n fi\n \n echo $ac_n \"checking whether ln works\"\"... $ac_c\" 1>&6\n-echo \"configure:887: checking whether ln works\" >&5\n+echo \"configure:1086: checking whether ln works\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_prog_LN'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -915,7 +1114,7 @@ else\n fi\n \n echo $ac_n \"checking whether ln -s works\"\"... $ac_c\" 1>&6\n-echo \"configure:919: checking whether ln -s works\" >&5\n+echo \"configure:1118: checking whether ln -s works\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_prog_LN_S'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -949,7 +1148,7 @@ fi\n # Extract the first word of \"ranlib\", so it can be a program name with args.\n set dummy ranlib; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:953: checking for $ac_word\" >&5\n+echo \"configure:1152: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -980,7 +1179,7 @@ do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:984: checking for $ac_word\" >&5\n+echo \"configure:1183: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_YACC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1020,7 +1219,7 @@ test -n \"$YACC\" || YACC=\"yacc\"\n # SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n # ./install, which can be erroneously created by make from ./install.sh.\n echo $ac_n \"checking for a BSD compatible install\"\"... $ac_c\" 1>&6\n-echo \"configure:1024: checking for a BSD compatible install\" >&5\n+echo \"configure:1223: checking for a BSD compatible install\" >&5\n if test -z \"$INSTALL\"; then\n if eval \"test \\\"`echo '$''{'ac_cv_path_install'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -1074,7 +1273,7 @@ test -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n # Extract the first word of \"gcc\", so it can be a program name with args.\n set dummy gcc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1078: checking for $ac_word\" >&5\n+echo \"configure:1277: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1103,7 +1302,7 @@ if test -z \"$CC\"; then\n   # Extract the first word of \"cc\", so it can be a program name with args.\n set dummy cc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1107: checking for $ac_word\" >&5\n+echo \"configure:1306: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1151,7 +1350,7 @@ fi\n fi\n \n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\"\"... $ac_c\" 1>&6\n-echo \"configure:1155: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n+echo \"configure:1354: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n \n ac_ext=c\n # CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n@@ -1161,11 +1360,11 @@ ac_link='${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS\n cross_compiling=$ac_cv_prog_cc_cross\n \n cat > conftest.$ac_ext <<EOF\n-#line 1165 \"configure\"\n+#line 1364 \"configure\"\n #include \"confdefs.h\"\n main(){return(0);}\n EOF\n-if { (eval echo configure:1169: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1368: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   ac_cv_prog_cc_works=yes\n   # If we can't run a trivial program, we are probably using a cross compiler.\n   if (./conftest; exit) 2>/dev/null; then\n@@ -1185,12 +1384,12 @@ if test $ac_cv_prog_cc_works = no; then\n   { echo \"configure: error: installation or configuration problem: C compiler cannot create executables.\" 1>&2; exit 1; }\n fi\n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\"\"... $ac_c\" 1>&6\n-echo \"configure:1189: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n+echo \"configure:1388: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n echo \"$ac_t\"\"$ac_cv_prog_cc_cross\" 1>&6\n cross_compiling=$ac_cv_prog_cc_cross\n \n echo $ac_n \"checking whether we are using GNU C\"\"... $ac_c\" 1>&6\n-echo \"configure:1194: checking whether we are using GNU C\" >&5\n+echo \"configure:1393: checking whether we are using GNU C\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gcc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1199,7 +1398,7 @@ else\n   yes;\n #endif\n EOF\n-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1203: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1402: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n   ac_cv_prog_gcc=yes\n else\n   ac_cv_prog_gcc=no\n@@ -1214,7 +1413,7 @@ if test $ac_cv_prog_gcc = yes; then\n   ac_save_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\n   echo $ac_n \"checking whether ${CC-cc} accepts -g\"\"... $ac_c\" 1>&6\n-echo \"configure:1218: checking whether ${CC-cc} accepts -g\" >&5\n+echo \"configure:1417: checking whether ${CC-cc} accepts -g\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_g'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1242,7 +1441,7 @@ else\n fi\n \n echo $ac_n \"checking whether ${MAKE-make} sets \\${MAKE}\"\"... $ac_c\" 1>&6\n-echo \"configure:1246: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n+echo \"configure:1445: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n set dummy ${MAKE-make}; ac_make=`echo \"$2\" | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_prog_make_${ac_make}_set'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -1270,7 +1469,7 @@ fi\n \n \n echo $ac_n \"checking how to run the C preprocessor\"\"... $ac_c\" 1>&6\n-echo \"configure:1274: checking how to run the C preprocessor\" >&5\n+echo \"configure:1473: checking how to run the C preprocessor\" >&5\n # On Suns, sometimes $CPP names a directory.\n if test -n \"$CPP\" && test -d \"$CPP\"; then\n   CPP=\n@@ -1285,13 +1484,13 @@ else\n   # On the NeXT, cc -E runs the code through the compiler's parser,\n   # not just through cpp.\n   cat > conftest.$ac_ext <<EOF\n-#line 1289 \"configure\"\n+#line 1488 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1295: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1494: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   :\n@@ -1302,13 +1501,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -E -traditional-cpp\"\n   cat > conftest.$ac_ext <<EOF\n-#line 1306 \"configure\"\n+#line 1505 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1312: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1511: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   :\n@@ -1330,21 +1529,21 @@ else\n fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n-for ac_hdr in stddef.h string.h strings.h stdlib.h time.h unistd.h varargs.h sys/varargs.h\n+for ac_hdr in inttypes.h limits.h stddef.h string.h strings.h stdlib.h time.h unistd.h varargs.h sys/varargs.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:1338: checking for $ac_hdr\" >&5\n+echo \"configure:1537: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1343 \"configure\"\n+#line 1542 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1348: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1547: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -1372,12 +1571,12 @@ done\n \n \n echo $ac_n \"checking whether malloc must be declared\"\"... $ac_c\" 1>&6\n-echo \"configure:1376: checking whether malloc must be declared\" >&5\n+echo \"configure:1575: checking whether malloc must be declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_malloc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1381 \"configure\"\n+#line 1580 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -1398,7 +1597,7 @@ int main() {\n char *(*pfn) = (char *(*)) malloc\n ; return 0; }\n EOF\n-if { (eval echo configure:1402: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1601: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_decl_needed_malloc=no\n else\n@@ -1420,12 +1619,12 @@ EOF\n fi\n \n echo $ac_n \"checking whether realloc must be declared\"\"... $ac_c\" 1>&6\n-echo \"configure:1424: checking whether realloc must be declared\" >&5\n+echo \"configure:1623: checking whether realloc must be declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_realloc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1429 \"configure\"\n+#line 1628 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -1446,7 +1645,7 @@ int main() {\n char *(*pfn) = (char *(*)) realloc\n ; return 0; }\n EOF\n-if { (eval echo configure:1450: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1649: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_decl_needed_realloc=no\n else\n@@ -1468,12 +1667,12 @@ EOF\n fi\n \n echo $ac_n \"checking whether calloc must be declared\"\"... $ac_c\" 1>&6\n-echo \"configure:1472: checking whether calloc must be declared\" >&5\n+echo \"configure:1671: checking whether calloc must be declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_calloc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1477 \"configure\"\n+#line 1676 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -1494,7 +1693,7 @@ int main() {\n char *(*pfn) = (char *(*)) calloc\n ; return 0; }\n EOF\n-if { (eval echo configure:1498: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1697: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_decl_needed_calloc=no\n else\n@@ -1516,12 +1715,12 @@ EOF\n fi\n \n echo $ac_n \"checking whether free must be declared\"\"... $ac_c\" 1>&6\n-echo \"configure:1520: checking whether free must be declared\" >&5\n+echo \"configure:1719: checking whether free must be declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_free'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1525 \"configure\"\n+#line 1724 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -1542,7 +1741,7 @@ int main() {\n char *(*pfn) = (char *(*)) free\n ; return 0; }\n EOF\n-if { (eval echo configure:1546: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1745: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_decl_needed_free=no\n else\n@@ -1565,12 +1764,12 @@ fi\n \n \n echo $ac_n \"checking for sys_siglist declaration in signal.h or unistd.h\"\"... $ac_c\" 1>&6\n-echo \"configure:1569: checking for sys_siglist declaration in signal.h or unistd.h\" >&5\n+echo \"configure:1768: checking for sys_siglist declaration in signal.h or unistd.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_decl_sys_siglist'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1574 \"configure\"\n+#line 1773 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <signal.h>\n@@ -1582,7 +1781,7 @@ int main() {\n char *msg = *(sys_siglist + 1);\n ; return 0; }\n EOF\n-if { (eval echo configure:1586: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1785: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_decl_sys_siglist=yes\n else\n@@ -1606,12 +1805,12 @@ fi\n for ac_func in strerror strtoul bsearch\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1610: checking for $ac_func\" >&5\n+echo \"configure:1809: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1615 \"configure\"\n+#line 1814 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1634,7 +1833,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1638: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1837: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1816,7 +2015,7 @@ for machine in $build $host $target; do\n  \t\t\tthread_file='posix'\n  \t\tfi\n \t\t;;\n-\talpha*-dec-osf[456789]*)\n+\talpha*-dec-osf*)\n \t\tif [ x$stabs = xyes ]\n \t\tthen\n \t\t\ttm_file=\"${tm_file} dbx.h\"\n@@ -1826,48 +2025,24 @@ for machine in $build $host $target; do\n \t\t\textra_passes=\"mips-tfile mips-tdump\"\n \t\tfi\n \t\tuse_collect2=yes\n-\t\t# Some versions of OSF4 (specifically X4.0-9 296.7) have\n-\t\t# a broken tar, so we use cpio instead.\n \t\tcase $machine in\n-\t\t  alpha*-dec-osf4*)\n+\t\t  *-*-osf1.2)\n+\t\t    tm_file=\"${tm_file} alpha/osf12.h alpha/osf2or3.h\"\n+\t\t    ;;\n+\t\t  *-*-osf[23]*)\n+\t\t    tm_file=\"${tm_file} alpha/osf2or3.h\"\n+\t\t    ;;\n+\t\t  *-*-osf4*)\n+\t\t    # Some versions of OSF4 (specifically X4.0-9 296.7) have\n+\t\t    # a broken tar, so we use cpio instead.\n \t\t    install_headers_dir=install-headers-cpio\n \t\t    ;;\n \t\tesac\n-\t\t;;\n-\talpha*-dec-osf[23]*)\n-\t\ttm_file=\"${tm_file} alpha/osf2or3.h\"\n-\t\tif [ x$stabs = xyes ]\n-\t\tthen\n-\t\t\ttm_file=\"${tm_file} dbx.h\"\n-\t\tfi\n-\t\tif [ x$gas != xyes ]\n-\t\tthen\n-\t\t\textra_passes=\"mips-tfile mips-tdump\"\n-\t\tfi\n-\t\tuse_collect2=yes\n-\t\t;;\n-\talpha*-dec-osf1.2)\n-\t\ttm_file=\"${tm_file} alpha/osf12.h\"\n-\t\tif [ x$stabs = xyes ]\n-\t\tthen\n-\t\t\ttm_file=\"${tm_file} dbx.h\"\n-\t\tfi\n-\t\tif [ x$gas != xyes ]\n-\t\tthen\n-\t\t\textra_passes=\"mips-tfile mips-tdump\"\n-\t\tfi\n-\t\tuse_collect2=yes\n-\t\t;;\n-\talpha*-*-osf*)\n-\t\tif [ x$stabs = xyes ]\n-\t\tthen\n-\t\t\ttm_file=\"${tm_file} dbx.h\"\n-\t\tfi\n-\t\tif [ x$gas != xyes ]\n-\t\tthen\n-\t\t\textra_passes=\"mips-tfile mips-tdump\"\n-\t\tfi\n-\t\tuse_collect2=yes\n+\t\tcase $machine in\n+\t\t  *-*-osf4.0[b-z] | *-*-osf4.[1-9]*)\n+\t\t    target_cpu_default=MASK_SUPPORT_ARCH\n+\t\t    ;;\n+\t\tesac\n \t\t;;\n \talpha*-*-winnt3*)\n \t\ttm_file=\"${tm_file} alpha/win-nt.h\"\n@@ -1927,7 +2102,7 @@ for machine in $build $host $target; do\n \tarm-*-netbsd*)\n \t\ttm_file=arm/netbsd.h\n \t\txm_file=arm/xm-netbsd.h\n-\t\ttmake_file=arm/t-netbsd\n+\t\ttmake_file=\"t-netbsd arm/t-netbsd\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\tuse_collect2=yes\n@@ -1943,6 +2118,7 @@ for machine in $build $host $target; do\n \t\t;;\n \tarm-*-aout)\n \t\ttm_file=arm/aout.h\n+\t\ttmake_file=arm/t-bare\n \t\t;;\n \tc1-convex-*)\t\t\t# Convex C1\n \t\ttarget_cpu_default=1\n@@ -2499,6 +2675,7 @@ for machine in $build $host $target; do\n \t\textra_parts=\"crt1.o crti.o crtn.o crtbegin.o crtend.o\"\n \t\txmake_file=x-svr4\n \t\tfixincludes=fixinc.svr4\n+\t\tbroken_install=yes\n  \t\tif [ x$enable_threads = xyes ]; then\n \t\t\tthread_file='solaris'\n \t\tfi\n@@ -3526,6 +3703,14 @@ for machine in $build $host $target; do\n \t\ttm_file=mips/rtems64.h\n \t\ttmake_file=\"mips/t-ecoff t-rtems\"\n \t\t;;\n+\tmipstx39el-*-elf*)\n+\t\ttm_file=\"mips/r3900.h mips/elfl.h mips/abi64.h libgloss.h\"\n+\t\ttmake_file=mips/t-ecoff\n+\t\t;;\n+\tmipstx39-*-elf*)\n+\t\ttm_file=\"mips/r3900.h mips/elf.h mips/abi64.h libgloss.h\"\n+\t\ttmake_file=mips/t-ecoff\n+\t\t;;\n \tmips-*-*)\t\t\t\t# Default MIPS RISC-OS 4.0.\n \t\tif [ x$stabs = xyes ]; then\n \t\t\ttm_file=\"${tm_file} dbx.h\"\n@@ -3752,7 +3937,7 @@ for machine in $build $host $target; do\n \t\t\ttmake_file=\"rs6000/t-ppc rs6000/t-ppccomm\"\n \t\tfi\n \t\txmake_file=rs6000/x-sysv4\n-\t\tfixincludes=fixinc.svr4\n+\t\tfixincludes=fixinc.math\n \t\textra_headers=ppc-asm.h\n \t\t;;\n \trs6000-ibm-aix3.[01]*)\n@@ -3892,6 +4077,8 @@ for machine in $build $host $target; do\n \t\txmake_file=sparc/x-sysv4\n \t\textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n \t\tfixincludes=fixinc.svr4\n+\t\tfloat_format=i128\n+\t\tbroken_install=yes\n  \t\tif [ x$enable_threads = xyes ]; then\n \t\t\tthread_file='solaris'\n \t\tfi\n@@ -4062,8 +4249,14 @@ for machine in $build $host $target; do\n \t\t;;\n \talpha*-*-*)\n \t\tcase $machine in\n+\t\t\talphaev6*)\n+\t\t\t\ttarget_cpu_default2=\"MASK_CPU_EV6|MASK_BXW|MASK_CIX|MASK_MAX\"\n+\t\t\t\t;;\n+\t\t\talphapca56*)\n+\t\t\t\ttarget_cpu_default2=\"MASK_CPU_EV5|MASK_BWX|TASK_MAX\"\n+\t\t\t\t;;\n \t\t\talphaev56*)\n-\t\t\t\ttarget_cpu_default2=\"MASK_CPU_EV5|MASK_BYTE_OPS\"\n+\t\t\t\ttarget_cpu_default2=\"MASK_CPU_EV5|MASK_BWX\"\n \t\t\t\t;;\n \t\t\talphaev5*)\n \t\t\t\ttarget_cpu_default2=\"MASK_CPU_EV5\"\n@@ -4260,10 +4453,11 @@ fi\n # Set up the header files.\n # $links is the list of header files to create.\n # $vars is the list of shell variables with file names to include.\n-# config2.h is the old config.h.  It is included by the new config.h which\n-# created from config.in.  The goal is to simplify the transition to autoconf.\n+# auto-conf.h is the file containing items generated by autoconf and is\n+# the first file included by config.h.\n+host_xm_file=\"auto-config.h ${host_xm_file}\"\n vars=\"host_xm_file tm_file xm_file build_xm_file\"\n-links=\"config2.h tm.h tconfig.h hconfig.h\"\n+links=\"config.h tm.h tconfig.h hconfig.h\"\n \n rm -f config.bak\n if [ -f config.status ]; then mv -f config.status config.bak; fi\n@@ -4338,6 +4532,7 @@ then\n \tcc_set_by_configure=\"\\$(CC)\"\n \tstage_prefix_set_by_configure=\"\\$(STAGE_PREFIX)\"\n else\n+\tsymbolic_link=\"cp -p\"\n \tcc_set_by_configure=\"\\`case '\\$(CC)' in stage*) echo '\\$(CC)' | sed -e 's|stage|../stage|g';; *) echo '\\$(CC)';; esac\\`\"\n \tstage_prefix_set_by_configure=\"\\`case '\\$(STAGE_PREFIX)' in stage*) echo '\\$(STAGE_PREFIX)' | sed -e 's|stage|../stage|g';; *) echo '\\$(STAGE_PREFIX)';; esac\\`\"\n fi\n@@ -4648,6 +4843,7 @@ ${CONFIG_SHELL-/bin/sh} $srcdir/configure.frag $srcdir \"$subdirs\" \"$dep_host_xma\n \n \n \n+\n \n \n # Echo that links are built\n@@ -4704,7 +4900,7 @@ EOF\n # Ultrix sh set writes to stderr and can't be redirected directly,\n # and sets the high bit in the cache file unless we assign to the vars.\n (set) 2>&1 |\n-  case `(ac_space=' '; set) 2>&1` in\n+  case `(ac_space=' '; set) 2>&1 | grep ac_space` in\n   *ac_space=\\ *)\n     # `set' does not quote correctly, so add quotes (double-quote substitution\n     # turns \\\\\\\\ into \\\\, and sed turns \\\\ into \\).\n@@ -4781,7 +4977,7 @@ done\n \n ac_given_srcdir=$srcdir\n \n-trap 'rm -fr `echo \"$all_outputs config.h:config.in\" | sed \"s/:[^ ]*//g\"` conftest*; exit 1' 1 2 15\n+trap 'rm -fr `echo \"$all_outputs auto-config.h:config.in\" | sed \"s/:[^ ]*//g\"` conftest*; exit 1' 1 2 15\n EOF\n cat >> $CONFIG_STATUS <<EOF\n \n@@ -4827,6 +5023,8 @@ s%@build_alias@%$build_alias%g\n s%@build_cpu@%$build_cpu%g\n s%@build_vendor@%$build_vendor%g\n s%@build_os@%$build_os%g\n+s%@CC@%$CC%g\n+s%@SET_MAKE@%$SET_MAKE%g\n s%@AWK@%$AWK%g\n s%@LEX@%$LEX%g\n s%@LEXLIB@%$LEXLIB%g\n@@ -4837,8 +5035,6 @@ s%@YACC@%$YACC%g\n s%@INSTALL@%$INSTALL%g\n s%@INSTALL_PROGRAM@%$INSTALL_PROGRAM%g\n s%@INSTALL_DATA@%$INSTALL_DATA%g\n-s%@CC@%$CC%g\n-s%@SET_MAKE@%$SET_MAKE%g\n s%@CPP@%$CPP%g\n s%@manext@%$manext%g\n s%@objext@%$objext%g\n@@ -4885,6 +5081,7 @@ s%@maybe_use_collect2@%$maybe_use_collect2%g\n s%@cc_set_by_configure@%$cc_set_by_configure%g\n s%@stage_prefix_set_by_configure@%$stage_prefix_set_by_configure%g\n s%@install@%$install%g\n+s%@symbolic_link@%$symbolic_link%g\n /@target_overrides@/r $target_overrides\n s%@target_overrides@%%g\n /@host_overrides@/r $host_overrides\n@@ -5015,7 +5212,7 @@ ac_eD='%g'\n if test \"${CONFIG_HEADERS+set}\" != set; then\n EOF\n cat >> $CONFIG_STATUS <<EOF\n-  CONFIG_HEADERS=\"config.h:config.in\"\n+  CONFIG_HEADERS=\"auto-config.h:config.in\"\n EOF\n cat >> $CONFIG_STATUS <<\\EOF\n fi\n@@ -5137,7 +5334,7 @@ cat >> $CONFIG_STATUS <<\\EOF\n \n . $srcdir/configure.lang\n case x$CONFIG_HEADERS in\n-xconfig.h:config.in)\n+xauto-config.h:config.in)\n echo > cstamp-h ;;\n esac\n # If the host supports symlinks, point stage[1234] at ../stage[1234] so"}, {"sha": "368fa90f0b3c8f838e4ade8790209ab3685a475d", "filename": "gcc/configure.in", "status": "modified", "additions": 49, "deletions": 48, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -22,7 +22,7 @@\n \n # Initialization and defaults\n AC_INIT(tree.c)\n-AC_CONFIG_HEADER(config.h:config.in)\n+AC_CONFIG_HEADER(auto-config.h:config.in)\n \n remove=rm\n hard_link=ln\n@@ -120,6 +120,10 @@ esac\n # Determine the host, build, and target systems\n AC_CANONICAL_SYSTEM\n \n+# Find the native compiler\n+AC_PROG_CC\n+AC_PROG_MAKE_SET\n+\n # Find some useful tools\n AC_PROG_AWK\n AC_PROG_LEX\n@@ -133,7 +137,7 @@ EGCS_PROG_INSTALL\n AC_PROG_CC\n AC_PROG_MAKE_SET\n \n-AC_CHECK_HEADERS(stddef.h string.h strings.h stdlib.h time.h unistd.h varargs.h sys/varargs.h)\n+AC_CHECK_HEADERS(inttypes.h limits.h stddef.h string.h strings.h stdlib.h time.h unistd.h varargs.h sys/varargs.h)\n \n GCC_NEED_DECLARATION(malloc)\n GCC_NEED_DECLARATION(realloc)\n@@ -301,7 +305,7 @@ for machine in $build $host $target; do\n  \t\t\tthread_file='posix'\n  \t\tfi\n \t\t;;\n-\talpha*-dec-osf[[456789]]*)\n+\talpha*-dec-osf*)\n \t\tif [[ x$stabs = xyes ]]\n \t\tthen\n \t\t\ttm_file=\"${tm_file} dbx.h\"\n@@ -311,48 +315,24 @@ for machine in $build $host $target; do\n \t\t\textra_passes=\"mips-tfile mips-tdump\"\n \t\tfi\n \t\tuse_collect2=yes\n-\t\t# Some versions of OSF4 (specifically X4.0-9 296.7) have\n-\t\t# a broken tar, so we use cpio instead.\n \t\tcase $machine in\n-\t\t  alpha*-dec-osf4*)\n+\t\t  *-*-osf1.2)\n+\t\t    tm_file=\"${tm_file} alpha/osf12.h alpha/osf2or3.h\"\n+\t\t    ;;\n+\t\t  *-*-osf[[23]]*)\n+\t\t    tm_file=\"${tm_file} alpha/osf2or3.h\"\n+\t\t    ;;\n+\t\t  *-*-osf4*)\n+\t\t    # Some versions of OSF4 (specifically X4.0-9 296.7) have\n+\t\t    # a broken tar, so we use cpio instead.\n \t\t    install_headers_dir=install-headers-cpio\n \t\t    ;;\n \t\tesac\n-\t\t;;\n-\talpha*-dec-osf[[23]]*)\n-\t\ttm_file=\"${tm_file} alpha/osf2or3.h\"\n-\t\tif [[ x$stabs = xyes ]]\n-\t\tthen\n-\t\t\ttm_file=\"${tm_file} dbx.h\"\n-\t\tfi\n-\t\tif [[ x$gas != xyes ]]\n-\t\tthen\n-\t\t\textra_passes=\"mips-tfile mips-tdump\"\n-\t\tfi\n-\t\tuse_collect2=yes\n-\t\t;;\n-\talpha*-dec-osf1.2)\n-\t\ttm_file=\"${tm_file} alpha/osf12.h\"\n-\t\tif [[ x$stabs = xyes ]]\n-\t\tthen\n-\t\t\ttm_file=\"${tm_file} dbx.h\"\n-\t\tfi\n-\t\tif [[ x$gas != xyes ]]\n-\t\tthen\n-\t\t\textra_passes=\"mips-tfile mips-tdump\"\n-\t\tfi\n-\t\tuse_collect2=yes\n-\t\t;;\n-\talpha*-*-osf*)\n-\t\tif [[ x$stabs = xyes ]]\n-\t\tthen\n-\t\t\ttm_file=\"${tm_file} dbx.h\"\n-\t\tfi\n-\t\tif [[ x$gas != xyes ]]\n-\t\tthen\n-\t\t\textra_passes=\"mips-tfile mips-tdump\"\n-\t\tfi\n-\t\tuse_collect2=yes\n+\t\tcase $machine in\n+\t\t  *-*-osf4.0[[b-z]] | *-*-osf4.[[1-9]]*)\n+\t\t    target_cpu_default=MASK_SUPPORT_ARCH\n+\t\t    ;;\n+\t\tesac\n \t\t;;\n \talpha*-*-winnt3*)\n \t\ttm_file=\"${tm_file} alpha/win-nt.h\"\n@@ -412,7 +392,7 @@ for machine in $build $host $target; do\n \tarm-*-netbsd*)\n \t\ttm_file=arm/netbsd.h\n \t\txm_file=arm/xm-netbsd.h\n-\t\ttmake_file=arm/t-netbsd\n+\t\ttmake_file=\"t-netbsd arm/t-netbsd\"\n \t\t# On NetBSD, the headers are already okay, except for math.h.\n \t\tfixincludes=fixinc.math\n \t\tuse_collect2=yes\n@@ -428,6 +408,7 @@ for machine in $build $host $target; do\n \t\t;;\n \tarm-*-aout)\n \t\ttm_file=arm/aout.h\n+\t\ttmake_file=arm/t-bare\n \t\t;;\n \tc1-convex-*)\t\t\t# Convex C1\n \t\ttarget_cpu_default=1\n@@ -984,6 +965,7 @@ for machine in $build $host $target; do\n \t\textra_parts=\"crt1.o crti.o crtn.o crtbegin.o crtend.o\"\n \t\txmake_file=x-svr4\n \t\tfixincludes=fixinc.svr4\n+\t\tbroken_install=yes\n  \t\tif [[ x$enable_threads = xyes ]]; then\n \t\t\tthread_file='solaris'\n \t\tfi\n@@ -2011,6 +1993,14 @@ for machine in $build $host $target; do\n \t\ttm_file=mips/rtems64.h\n \t\ttmake_file=\"mips/t-ecoff t-rtems\"\n \t\t;;\n+\tmipstx39el-*-elf*)\n+\t\ttm_file=\"mips/r3900.h mips/elfl.h mips/abi64.h libgloss.h\"\n+\t\ttmake_file=mips/t-ecoff\n+\t\t;;\n+\tmipstx39-*-elf*)\n+\t\ttm_file=\"mips/r3900.h mips/elf.h mips/abi64.h libgloss.h\"\n+\t\ttmake_file=mips/t-ecoff\n+\t\t;;\n \tmips-*-*)\t\t\t\t# Default MIPS RISC-OS 4.0.\n \t\tif [[ x$stabs = xyes ]]; then\n \t\t\ttm_file=\"${tm_file} dbx.h\"\n@@ -2237,7 +2227,7 @@ for machine in $build $host $target; do\n \t\t\ttmake_file=\"rs6000/t-ppc rs6000/t-ppccomm\"\n \t\tfi\n \t\txmake_file=rs6000/x-sysv4\n-\t\tfixincludes=fixinc.svr4\n+\t\tfixincludes=fixinc.math\n \t\textra_headers=ppc-asm.h\n \t\t;;\n \trs6000-ibm-aix3.[[01]]*)\n@@ -2377,6 +2367,8 @@ for machine in $build $host $target; do\n \t\txmake_file=sparc/x-sysv4\n \t\textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n \t\tfixincludes=fixinc.svr4\n+\t\tfloat_format=i128\n+\t\tbroken_install=yes\n  \t\tif [[ x$enable_threads = xyes ]]; then\n \t\t\tthread_file='solaris'\n \t\tfi\n@@ -2547,8 +2539,14 @@ for machine in $build $host $target; do\n \t\t;;\n \talpha*-*-*)\n \t\tcase $machine in\n+\t\t\talphaev6*)\n+\t\t\t\ttarget_cpu_default2=\"MASK_CPU_EV6|MASK_BXW|MASK_CIX|MASK_MAX\"\n+\t\t\t\t;;\n+\t\t\talphapca56*)\n+\t\t\t\ttarget_cpu_default2=\"MASK_CPU_EV5|MASK_BWX|TASK_MAX\"\n+\t\t\t\t;;\n \t\t\talphaev56*)\n-\t\t\t\ttarget_cpu_default2=\"MASK_CPU_EV5|MASK_BYTE_OPS\"\n+\t\t\t\ttarget_cpu_default2=\"MASK_CPU_EV5|MASK_BWX\"\n \t\t\t\t;;\n \t\t\talphaev5*)\n \t\t\t\ttarget_cpu_default2=\"MASK_CPU_EV5\"\n@@ -2745,10 +2743,11 @@ fi\n # Set up the header files.\n # $links is the list of header files to create.\n # $vars is the list of shell variables with file names to include.\n-# config2.h is the old config.h.  It is included by the new config.h which\n-# created from config.in.  The goal is to simplify the transition to autoconf.\n+# auto-conf.h is the file containing items generated by autoconf and is\n+# the first file included by config.h.\n+host_xm_file=\"auto-config.h ${host_xm_file}\"\n vars=\"host_xm_file tm_file xm_file build_xm_file\"\n-links=\"config2.h tm.h tconfig.h hconfig.h\"\n+links=\"config.h tm.h tconfig.h hconfig.h\"\n \n rm -f config.bak\n if [[ -f config.status ]]; then mv -f config.status config.bak; fi\n@@ -2823,6 +2822,7 @@ then\n \tcc_set_by_configure=\"\\$(CC)\"\n \tstage_prefix_set_by_configure=\"\\$(STAGE_PREFIX)\"\n else\n+\tsymbolic_link=\"cp -p\"\n \tcc_set_by_configure=\"\\`case '\\$(CC)' in stage*) echo '\\$(CC)' | sed -e 's|stage|../stage|g';; *) echo '\\$(CC)';; esac\\`\"\n \tstage_prefix_set_by_configure=\"\\`case '\\$(STAGE_PREFIX)' in stage*) echo '\\$(STAGE_PREFIX)' | sed -e 's|stage|../stage|g';; *) echo '\\$(STAGE_PREFIX)';; esac\\`\"\n fi\n@@ -3126,6 +3126,7 @@ AC_SUBST(maybe_use_collect2)\n AC_SUBST(cc_set_by_configure)\n AC_SUBST(stage_prefix_set_by_configure)\n AC_SUBST(install)\n+AC_SUBST(symbolic_link)\n \n AC_SUBST_FILE(target_overrides)\n AC_SUBST_FILE(host_overrides)\n@@ -3170,7 +3171,7 @@ AC_OUTPUT($all_outputs,\n [\n . $srcdir/configure.lang\n case x$CONFIG_HEADERS in\n-xconfig.h:config.in)\n+xauto-config.h:config.in)\n echo > cstamp-h ;;\n esac\n # If the host supports symlinks, point stage[1234] at ../stage[1234] so"}, {"sha": "bb27b8c9a20da525bcce8a4a0e85009c9dfb811d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -77,6 +77,15 @@ Mon Oct 20 10:52:22 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \t(common_type): Likewise.\n \t* error.c (args_as_string): Recognize null_node.\n \n+Sun Oct 19 09:13:01 1997  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* typeck.c (rationalize_conditional_expr): Handle {MIN,MAX}_EXPR.\n+\t(unary_complex_lvalue): Call it for {MIN,MAX}_EXPR.\n+\n+\t* decl.c (init_decl_processing): Call using_eh_for_cleanups.\n+\n+\t* Make-lang.in (g++): Include prefix.o.\n+\n Thu Oct 16 15:31:09 1997  Judy Goldberg <judygold@sanwafp.com>\n \n \t* pt.c (determine_explicit_specialization): Initialize \"dummy\""}, {"sha": "78123ef40b055a95770e4bc69e1652bd5a3cfc8d", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -90,8 +90,8 @@ g++.o: $(CONFIG_H) multilib.h config.status $(lang_specs_files) g++.c\n   -c g++.c\n \n # Create the compiler driver for g++.\n-g++$(exeext): g++.o g++spec.o version.o choose-temp.o pexecute.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ g++.o g++spec.o version.o \\\n+g++$(exeext): g++.o g++spec.o version.o choose-temp.o pexecute.o prefix.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ g++.o g++spec.o prefix.o version.o \\\n \t  choose-temp.o pexecute.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Create a version of the g++ driver which calls the cross-compiler."}, {"sha": "77f5fd5061013f5d211719f483054ba7100eb3b1", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -5585,6 +5585,9 @@ init_decl_processing ()\n \n   /* Prepare to check format strings against argument lists.  */\n   init_function_format_info ();\n+\n+  /* Show we use EH for cleanups.  */\n+  using_eh_for_cleanups ();\n }\n \n /* initialize type descriptor type node of various rtti type.  */"}, {"sha": "9aa05f3508639f69b444fbf59e2a90a3b8ea61eb", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -3495,7 +3495,7 @@ static const short yycheck[] = {     4,\n     78,    79,    80,    81,    82,    83,    84,    85\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/lib/bison.simple\"\n+#line 3 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -3688,7 +3688,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/lib/bison.simple\"\n+#line 196 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -8425,7 +8425,7 @@ case 830:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/lib/bison.simple\"\n+#line 498 \"/usr/cygnus/latest-940103/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;"}, {"sha": "4ebcff210426eb86f0953d1fa22c275838d18a09", "filename": "gcc/cp/parse.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -89,4 +89,5 @@ typedef union {long itype; tree ttype; char *strtype; enum tree_code code; flagg\n \n \n extern YYSTYPE yylval;\n-#define YYEMPTY\t\t-2\n+#define YYEMPTY         -2\n+"}, {"sha": "4b774d23220eac9dd7fc943c938782ca9faeaa65", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1681,18 +1681,33 @@ build_component_ref_1 (datum, field, protect)\n     (build_component_ref (datum, field, NULL_TREE, protect));\n }\n \n-/* Given a COND_EXPR in T, return it in a form that we can, for\n-   example, use as an lvalue.  This code used to be in unary_complex_lvalue,\n-   but we needed it to deal with `a = (d == c) ? b : c' expressions, where\n-   we're dealing with aggregates.  So, we now call this in unary_complex_lvalue,\n-   and in build_modify_expr.  The case (in particular) that led to this was\n-   with CODE == ADDR_EXPR, since it's not an lvalue when we'd get it there.  */\n+/* Given a COND_EXPR, MIN_EXPR, or MAX_EXPR in T, return it in a form that we\n+   can, for example, use as an lvalue.  This code used to be in\n+   unary_complex_lvalue, but we needed it to deal with `a = (d == c) ? b : c'\n+   expressions, where we're dealing with aggregates.  But now it's again only\n+   called from unary_complex_lvalue.  The case (in particular) that led to\n+   this was with CODE == ADDR_EXPR, since it's not an lvalue when we'd\n+   get it there.  */\n \n static tree\n rationalize_conditional_expr (code, t)\n      enum tree_code code;\n      tree t;\n {\n+  /* For MIN_EXPR or MAX_EXPR, fold-const.c has arranged things so that\n+     the first operand is always the one to be used if both operands\n+     are equal, so we know what conditional expression this used to be.  */\n+  if (TREE_CODE (t) == MIN_EXPR || TREE_CODE (t) == MAX_EXPR)\n+    {\n+      return\n+\tbuild_conditional_expr (build_x_binary_op ((TREE_CODE (t) == MIN_EXPR\n+\t\t\t\t\t\t    ? LE_EXPR : GE_EXPR),\n+\t\t\t\t\t\t   TREE_OPERAND (t, 0),\n+\t\t\t\t\t\t   TREE_OPERAND (t, 1)),\n+\t\t\t    build_unary_op (code, TREE_OPERAND (t, 0), 0),\n+\t\t\t    build_unary_op (code, TREE_OPERAND (t, 1), 0));\n+    }\n+\n   return\n     build_conditional_expr (TREE_OPERAND (t, 0),\n \t\t\t    build_unary_op (code, TREE_OPERAND (t, 1), 0),\n@@ -4584,7 +4599,8 @@ unary_complex_lvalue (code, arg)\n     }\n \n   /* Handle (a ? b : c) used as an \"lvalue\".  */\n-  if (TREE_CODE (arg) == COND_EXPR)\n+  if (TREE_CODE (arg) == COND_EXPR\n+      || TREE_CODE (arg) == MIN_EXPR || TREE_CODE (arg) == MAX_EXPR)\n     return rationalize_conditional_expr (code, arg);\n \n   if (TREE_CODE (arg) == MODIFY_EXPR"}, {"sha": "ed16c8680cd0d06af719623997bdd4de5a3ddb7a", "filename": "gcc/cplus-dem.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcplus-dem.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -2426,7 +2426,7 @@ demangle_fund_type (work, mangled, result)\n \tcase 'J':\n \t  (*mangled)++;\n \t  APPEND_BLANK (result);\n-\t  string_append (result, \"complex\");\n+\t  string_append (result, \"__complex\");\n \t  break;\n \tdefault:\n \t  done = 1;"}, {"sha": "f20aef96e1f143d9243eb0871ed1850631f86530", "filename": "gcc/cpp.info", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fcpp.info", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fcpp.info", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.info?ref=bb84e66919817020267815eed4304e543688e722", "patch": "@@ -1,75 +0,0 @@\n-This is Info file cpp.info, produced by Makeinfo version 1.67 from the\n-input file cpp.texi.\n-\n-   This file documents the GNU C Preprocessor.\n-\n-   Copyright 1987, 1989, 1991, 1992, 1993, 1994, 1995 Free Software\n-Foundation, Inc.\n-\n-   Permission is granted to make and distribute verbatim copies of this\n-manual provided the copyright notice and this permission notice are\n-preserved on all copies.\n-\n-   Permission is granted to copy and distribute modified versions of\n-this manual under the conditions for verbatim copying, provided also\n-that the entire resulting derived work is distributed under the terms\n-of a permission notice identical to this one.\n-\n-   Permission is granted to copy and distribute translations of this\n-manual into another language, under the above conditions for modified\n-versions.\n-\n-\u001f\n-Indirect:\n-cpp.info-1: 798\n-cpp.info-2: 50062\n-cpp.info-3: 91249\n-\u001f\n-Tag Table:\n-(Indirect)\n-Node: Top\u007f798\n-Node: Global Actions\u007f3707\n-Node: Directives\u007f6227\n-Node: Header Files\u007f7914\n-Node: Header Uses\u007f8573\n-Node: Include Syntax\u007f10065\n-Node: Include Operation\u007f13207\n-Node: Once-Only\u007f15069\n-Node: Inheritance\u007f17494\n-Node: Macros\u007f20027\n-Node: Simple Macros\u007f20941\n-Node: Argument Macros\u007f23929\n-Node: Predefined\u007f29727\n-Node: Standard Predefined\u007f30157\n-Node: Nonstandard Predefined\u007f37948\n-Node: Stringification\u007f41524\n-Node: Concatenation\u007f44450\n-Node: Undefining\u007f47723\n-Node: Redefining\u007f48762\n-Node: Macro Pitfalls\u007f50062\n-Node: Misnesting\u007f51166\n-Node: Macro Parentheses\u007f52180\n-Node: Swallow Semicolon\u007f54048\n-Node: Side Effects\u007f55948\n-Node: Self-Reference\u007f57646\n-Node: Argument Prescan\u007f59922\n-Node: Cascaded Macros\u007f64924\n-Node: Newlines in Args\u007f66069\n-Node: Conditionals\u007f67414\n-Node: Conditional Uses\u007f68766\n-Node: Conditional Syntax\u007f70189\n-Node: #if Directive\u007f70775\n-Node: #else Directive\u007f73064\n-Node: #elif Directive\u007f73731\n-Node: Deleted Code\u007f75109\n-Node: Conditionals-Macros\u007f76170\n-Node: Assertions\u007f79855\n-Node: #error Directive\u007f84090\n-Node: Combining Sources\u007f85575\n-Node: Other Directives\u007f88486\n-Node: Output\u007f89940\n-Node: Invocation\u007f91249\n-Node: Concept Index\u007f103346\n-Node: Index\u007f106199\n-\u001f\n-End Tag Table"}, {"sha": "aa15a021fec87a8f07205d7a739366707eef3f25", "filename": "gcc/cpp.info-1", "status": "removed", "additions": 0, "deletions": 1182, "changes": 1182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fcpp.info-1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fcpp.info-1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.info-1?ref=bb84e66919817020267815eed4304e543688e722", "patch": "@@ -1,1182 +0,0 @@\n-This is Info file cpp.info, produced by Makeinfo version 1.67 from the\n-input file cpp.texi.\n-\n-   This file documents the GNU C Preprocessor.\n-\n-   Copyright 1987, 1989, 1991, 1992, 1993, 1994, 1995 Free Software\n-Foundation, Inc.\n-\n-   Permission is granted to make and distribute verbatim copies of this\n-manual provided the copyright notice and this permission notice are\n-preserved on all copies.\n-\n-   Permission is granted to copy and distribute modified versions of\n-this manual under the conditions for verbatim copying, provided also\n-that the entire resulting derived work is distributed under the terms\n-of a permission notice identical to this one.\n-\n-   Permission is granted to copy and distribute translations of this\n-manual into another language, under the above conditions for modified\n-versions.\n-\n-\u001f\n-File: cpp.info,  Node: Top,  Next: Global Actions,  Up: (DIR)\n-\n-The C Preprocessor\n-******************\n-\n-   The C preprocessor is a \"macro processor\" that is used automatically\n-by the C compiler to transform your program before actual compilation.\n-It is called a macro processor because it allows you to define \"macros\",\n-which are brief abbreviations for longer constructs.\n-\n-   The C preprocessor provides four separate facilities that you can\n-use as you see fit:\n-\n-   * Inclusion of header files.  These are files of declarations that\n-     can be substituted into your program.\n-\n-   * Macro expansion.  You can define \"macros\", which are abbreviations\n-     for arbitrary fragments of C code, and then the C preprocessor will\n-     replace the macros with their definitions throughout the program.\n-\n-   * Conditional compilation.  Using special preprocessing directives,\n-     you can include or exclude parts of the program according to\n-     various conditions.\n-\n-   * Line control.  If you use a program to combine or rearrange source\n-     files into an intermediate file which is then compiled, you can\n-     use line control to inform the compiler of where each source line\n-     originally came from.\n-\n-   C preprocessors vary in some details.  This manual discusses the GNU\n-C preprocessor, the C Compatible Compiler Preprocessor.  The GNU C\n-preprocessor provides a superset of the features of ANSI Standard C.\n-\n-   ANSI Standard C requires the rejection of many harmless constructs\n-commonly used by today's C programs.  Such incompatibility would be\n-inconvenient for users, so the GNU C preprocessor is configured to\n-accept these constructs by default.  Strictly speaking, to get ANSI\n-Standard C, you must use the options `-trigraphs', `-undef' and\n-`-pedantic', but in practice the consequences of having strict ANSI\n-Standard C make it undesirable to do this.  *Note Invocation::.\n-\n-   The C preprocessor is designed for C-like languages; you may run into\n-problems if you apply it to other kinds of languages, because it assumes\n-that it is dealing with C.  For example, the C preprocessor sometimes\n-outputs extra white space to avoid inadvertent C token concatenation,\n-and this may cause problems with other languages.\n-\n-* Menu:\n-\n-* Global Actions::    Actions made uniformly on all input files.\n-* Directives::        General syntax of preprocessing directives.\n-* Header Files::      How and why to use header files.\n-* Macros::            How and why to use macros.\n-* Conditionals::      How and why to use conditionals.\n-* Combining Sources:: Use of line control when you combine source files.\n-* Other Directives::  Miscellaneous preprocessing directives.\n-* Output::            Format of output from the C preprocessor.\n-* Invocation::        How to invoke the preprocessor; command options.\n-* Concept Index::     Index of concepts and terms.\n-* Index::             Index of directives, predefined macros and options.\n-\n-\u001f\n-File: cpp.info,  Node: Global Actions,  Next: Directives,  Prev: Top,  Up: Top\n-\n-Transformations Made Globally\n-=============================\n-\n-   Most C preprocessor features are inactive unless you give specific\n-directives to request their use.  (Preprocessing directives are lines\n-starting with `#'; *note Directives::.).  But there are three\n-transformations that the preprocessor always makes on all the input it\n-receives, even in the absence of directives.\n-\n-   * All C comments are replaced with single spaces.\n-\n-   * Backslash-Newline sequences are deleted, no matter where.  This\n-     feature allows you to break long lines for cosmetic purposes\n-     without changing their meaning.\n-\n-   * Predefined macro names are replaced with their expansions (*note\n-     Predefined::.).\n-\n-   The first two transformations are done *before* nearly all other\n-parsing and before preprocessing directives are recognized.  Thus, for\n-example, you can split a line cosmetically with Backslash-Newline\n-anywhere (except when trigraphs are in use; see below).\n-\n-     /*\n-     */ # /*\n-     */ defi\\\n-     ne FO\\\n-     O 10\\\n-     20\n-\n-is equivalent into `#define FOO 1020'.  You can split even an escape\n-sequence with Backslash-Newline.  For example, you can split `\"foo\\bar\"'\n-between the `\\' and the `b' to get\n-\n-     \"foo\\\\\n-     bar\"\n-\n-This behavior is unclean: in all other contexts, a Backslash can be\n-inserted in a string constant as an ordinary character by writing a\n-double Backslash, and this creates an exception.  But the ANSI C\n-standard requires it.  (Strict ANSI C does not allow Newlines in string\n-constants, so they do not consider this a problem.)\n-\n-   But there are a few exceptions to all three transformations.\n-\n-   * C comments and predefined macro names are not recognized inside a\n-     `#include' directive in which the file name is delimited with `<'\n-     and `>'.\n-\n-   * C comments and predefined macro names are never recognized within a\n-     character or string constant.  (Strictly speaking, this is the\n-     rule, not an exception, but it is worth noting here anyway.)\n-\n-   * Backslash-Newline may not safely be used within an ANSI \"trigraph\".\n-     Trigraphs are converted before Backslash-Newline is deleted.  If\n-     you write what looks like a trigraph with a Backslash-Newline\n-     inside, the Backslash-Newline is deleted as usual, but it is then\n-     too late to recognize the trigraph.\n-\n-     This exception is relevant only if you use the `-trigraphs' option\n-     to enable trigraph processing.  *Note Invocation::.\n-\n-\u001f\n-File: cpp.info,  Node: Directives,  Next: Header Files,  Prev: Global Actions,  Up: Top\n-\n-Preprocessing Directives\n-========================\n-\n-   Most preprocessor features are active only if you use preprocessing\n-directives to request their use.\n-\n-   Preprocessing directives are lines in your program that start with\n-`#'.  The `#' is followed by an identifier that is the \"directive name\".\n-For example, `#define' is the directive that defines a macro.\n-Whitespace is also allowed before and after the `#'.\n-\n-   The set of valid directive names is fixed.  Programs cannot define\n-new preprocessing directives.\n-\n-   Some directive names require arguments; these make up the rest of\n-the directive line and must be separated from the directive name by\n-whitespace.  For example, `#define' must be followed by a macro name\n-and the intended expansion of the macro.  *Note Simple Macros::.\n-\n-   A preprocessing directive cannot be more than one line in normal\n-circumstances.  It may be split cosmetically with Backslash-Newline,\n-but that has no effect on its meaning.  Comments containing Newlines\n-can also divide the directive into multiple lines, but the comments are\n-changed to Spaces before the directive is interpreted.  The only way a\n-significant Newline can occur in a preprocessing directive is within a\n-string constant or character constant.  Note that most C compilers that\n-might be applied to the output from the preprocessor do not accept\n-string or character constants containing Newlines.\n-\n-   The `#' and the directive name cannot come from a macro expansion.\n-For example, if `foo' is defined as a macro expanding to `define', that\n-does not make `#foo' a valid preprocessing directive.\n-\n-\u001f\n-File: cpp.info,  Node: Header Files,  Next: Macros,  Prev: Directives,  Up: Top\n-\n-Header Files\n-============\n-\n-   A header file is a file containing C declarations and macro\n-definitions (*note Macros::.) to be shared between several source\n-files.  You request the use of a header file in your program with the C\n-preprocessing directive `#include'.\n-\n-* Menu:\n-\n-* Header Uses::         What header files are used for.\n-* Include Syntax::      How to write `#include' directives.\n-* Include Operation::   What `#include' does.\n-* Once-Only::\t\tPreventing multiple inclusion of one header file.\n-* Inheritance::         Including one header file in another header file.\n-\n-\u001f\n-File: cpp.info,  Node: Header Uses,  Next: Include Syntax,  Prev: Header Files,  Up: Header Files\n-\n-Uses of Header Files\n---------------------\n-\n-   Header files serve two kinds of purposes.\n-\n-   * System header files declare the interfaces to parts of the\n-     operating system.  You include them in your program to supply the\n-     definitions and declarations you need to invoke system calls and\n-     libraries.\n-\n-   * Your own header files contain declarations for interfaces between\n-     the source files of your program.  Each time you have a group of\n-     related declarations and macro definitions all or most of which\n-     are needed in several different source files, it is a good idea to\n-     create a header file for them.\n-\n-   Including a header file produces the same results in C compilation as\n-copying the header file into each source file that needs it.  But such\n-copying would be time-consuming and error-prone.  With a header file,\n-the related declarations appear in only one place.  If they need to be\n-changed, they can be changed in one place, and programs that include\n-the header file will automatically use the new version when next\n-recompiled.  The header file eliminates the labor of finding and\n-changing all the copies as well as the risk that a failure to find one\n-copy will result in inconsistencies within a program.\n-\n-   The usual convention is to give header files names that end with\n-`.h'.  Avoid unusual characters in header file names, as they reduce\n-portability.\n-\n-\u001f\n-File: cpp.info,  Node: Include Syntax,  Next: Include Operation,  Prev: Header Uses,  Up: Header Files\n-\n-The `#include' Directive\n-------------------------\n-\n-   Both user and system header files are included using the\n-preprocessing directive `#include'.  It has three variants:\n-\n-`#include <FILE>'\n-     This variant is used for system header files.  It searches for a\n-     file named FILE in a list of directories specified by you, then in\n-     a standard list of system directories.  You specify directories to\n-     search for header files with the command option `-I' (*note\n-     Invocation::.).  The option `-nostdinc' inhibits searching the\n-     standard system directories; in this case only the directories you\n-     specify are searched.\n-\n-     The parsing of this form of `#include' is slightly special because\n-     comments are not recognized within the `<...>'.  Thus, in\n-     `#include <x/*y>' the `/*' does not start a comment and the\n-     directive specifies inclusion of a system header file named\n-     `x/*y'.  Of course, a header file with such a name is unlikely to\n-     exist on Unix, where shell wildcard features would make it hard to\n-     manipulate.\n-\n-     The argument FILE may not contain a `>' character.  It may,\n-     however, contain a `<' character.\n-\n-`#include \"FILE\"'\n-     This variant is used for header files of your own program.  It\n-     searches for a file named FILE first in the current directory,\n-     then in the same directories used for system header files.  The\n-     current directory is the directory of the current input file.  It\n-     is tried first because it is presumed to be the location of the\n-     files that the current input file refers to.  (If the `-I-' option\n-     is used, the special treatment of the current directory is\n-     inhibited.)\n-\n-     The argument FILE may not contain `\"' characters.  If backslashes\n-     occur within FILE, they are considered ordinary text characters,\n-     not escape characters.  None of the character escape sequences\n-     appropriate to string constants in C are processed.  Thus,\n-     `#include \"x\\n\\\\y\"' specifies a filename containing three\n-     backslashes.  It is not clear why this behavior is ever useful, but\n-     the ANSI standard specifies it.\n-\n-`#include ANYTHING ELSE'\n-     This variant is called a \"computed #include\".  Any `#include'\n-     directive whose argument does not fit the above two forms is a\n-     computed include.  The text ANYTHING ELSE is checked for macro\n-     calls, which are expanded (*note Macros::.).  When this is done,\n-     the result must fit one of the above two variants--in particular,\n-     the expanded text must in the end be surrounded by either quotes\n-     or angle braces.\n-\n-     This feature allows you to define a macro which controls the file\n-     name to be used at a later point in the program.  One application\n-     of this is to allow a site-specific configuration file for your\n-     program to specify the names of the system include files to be\n-     used.  This can help in porting the program to various operating\n-     systems in which the necessary system header files are found in\n-     different places.\n-\n-\u001f\n-File: cpp.info,  Node: Include Operation,  Next: Once-Only,  Prev: Include Syntax,  Up: Header Files\n-\n-How `#include' Works\n---------------------\n-\n-   The `#include' directive works by directing the C preprocessor to\n-scan the specified file as input before continuing with the rest of the\n-current file.  The output from the preprocessor contains the output\n-already generated, followed by the output resulting from the included\n-file, followed by the output that comes from the text after the\n-`#include' directive.  For example, given a header file `header.h' as\n-follows,\n-\n-     char *test ();\n-\n-and a main program called `program.c' that uses the header file, like\n-this,\n-\n-     int x;\n-     #include \"header.h\"\n-     \n-     main ()\n-     {\n-       printf (test ());\n-     }\n-\n-the output generated by the C preprocessor for `program.c' as input\n-would be\n-\n-     int x;\n-     char *test ();\n-     \n-     main ()\n-     {\n-       printf (test ());\n-     }\n-\n-   Included files are not limited to declarations and macro\n-definitions; those are merely the typical uses.  Any fragment of a C\n-program can be included from another file.  The include file could even\n-contain the beginning of a statement that is concluded in the\n-containing file, or the end of a statement that was started in the\n-including file.  However, a comment or a string or character constant\n-may not start in the included file and finish in the including file.\n-An unterminated comment, string constant or character constant in an\n-included file is considered to end (with an error message) at the end\n-of the file.\n-\n-   It is possible for a header file to begin or end a syntactic unit\n-such as a function definition, but that would be very confusing, so\n-don't do it.\n-\n-   The line following the `#include' directive is always treated as a\n-separate line by the C preprocessor even if the included file lacks a\n-final newline.\n-\n-\u001f\n-File: cpp.info,  Node: Once-Only,  Next: Inheritance,  Prev: Include Operation,  Up: Header Files\n-\n-Once-Only Include Files\n------------------------\n-\n-   Very often, one header file includes another.  It can easily result\n-that a certain header file is included more than once.  This may lead\n-to errors, if the header file defines structure types or typedefs, and\n-is certainly wasteful.  Therefore, we often wish to prevent multiple\n-inclusion of a header file.\n-\n-   The standard way to do this is to enclose the entire real contents\n-of the file in a conditional, like this:\n-\n-     #ifndef FILE_FOO_SEEN\n-     #define FILE_FOO_SEEN\n-     \n-     THE ENTIRE FILE\n-     \n-     #endif /* FILE_FOO_SEEN */\n-\n-   The macro `FILE_FOO_SEEN' indicates that the file has been included\n-once already.  In a user header file, the macro name should not begin\n-with `_'.  In a system header file, this name should begin with `__' to\n-avoid conflicts with user programs.  In any kind of header file, the\n-macro name should contain the name of the file and some additional\n-text, to avoid conflicts with other header files.\n-\n-   The GNU C preprocessor is programmed to notice when a header file\n-uses this particular construct and handle it efficiently.  If a header\n-file is contained entirely in a `#ifndef' conditional, then it records\n-that fact.  If a subsequent `#include' specifies the same file, and the\n-macro in the `#ifndef' is already defined, then the file is entirely\n-skipped, without even reading it.\n-\n-   There is also an explicit directive to tell the preprocessor that it\n-need not include a file more than once.  This is called `#pragma once',\n-and was used *in addition to* the `#ifndef' conditional around the\n-contents of the header file.  `#pragma once' is now obsolete and should\n-not be used at all.\n-\n-   In the Objective C language, there is a variant of `#include' called\n-`#import' which includes a file, but does so at most once.  If you use\n-`#import' *instead of* `#include', then you don't need the conditionals\n-inside the header file to prevent multiple execution of the contents.\n-\n-   `#import' is obsolete because it is not a well designed feature.  It\n-requires the users of a header file--the applications programmers--to\n-know that a certain header file should only be included once.  It is\n-much better for the header file's implementor to write the file so that\n-users don't need to know this.  Using `#ifndef' accomplishes this goal.\n-\n-\u001f\n-File: cpp.info,  Node: Inheritance,  Prev: Once-Only,  Up: Header Files\n-\n-Inheritance and Header Files\n-----------------------------\n-\n-   \"Inheritance\" is what happens when one object or file derives some\n-of its contents by virtual copying from another object or file.  In the\n-case of C header files, inheritance means that one header file includes\n-another header file and then replaces or adds something.\n-\n-   If the inheriting header file and the base header file have different\n-names, then inheritance is straightforward: simply write `#include\n-\"BASE\"' in the inheriting file.\n-\n-   Sometimes it is necessary to give the inheriting file the same name\n-as the base file.  This is less straightforward.\n-\n-   For example, suppose an application program uses the system header\n-`sys/signal.h', but the version of `/usr/include/sys/signal.h' on a\n-particular system doesn't do what the application program expects.  It\n-might be convenient to define a \"local\" version, perhaps under the name\n-`/usr/local/include/sys/signal.h', to override or add to the one\n-supplied by the system.\n-\n-   You can do this by compiling with the option `-I.', and writing a\n-file `sys/signal.h' that does what the application program expects.\n-But making this file include the standard `sys/signal.h' is not so\n-easy--writing `#include <sys/signal.h>' in that file doesn't work,\n-because it includes your own version of the file, not the standard\n-system version.  Used in that file itself, this leads to an infinite\n-recursion and a fatal error in compilation.\n-\n-   `#include </usr/include/sys/signal.h>' would find the proper file,\n-but that is not clean, since it makes an assumption about where the\n-system header file is found.  This is bad for maintenance, since it\n-means that any change in where the system's header files are kept\n-requires a change somewhere else.\n-\n-   The clean way to solve this problem is to use `#include_next', which\n-means, \"Include the *next* file with this name.\"  This directive works\n-like `#include' except in searching for the specified file: it starts\n-searching the list of header file directories *after* the directory in\n-which the current file was found.\n-\n-   Suppose you specify `-I /usr/local/include', and the list of\n-directories to search also includes `/usr/include'; and suppose both\n-directories contain `sys/signal.h'.  Ordinary `#include <sys/signal.h>'\n-finds the file under `/usr/local/include'.  If that file contains\n-`#include_next <sys/signal.h>', it starts searching after that\n-directory, and finds the file in `/usr/include'.\n-\n-\u001f\n-File: cpp.info,  Node: Macros,  Next: Conditionals,  Prev: Header Files,  Up: Top\n-\n-Macros\n-======\n-\n-   A macro is a sort of abbreviation which you can define once and then\n-use later.  There are many complicated features associated with macros\n-in the C preprocessor.\n-\n-* Menu:\n-\n-* Simple Macros::    Macros that always expand the same way.\n-* Argument Macros::  Macros that accept arguments that are substituted\n-                       into the macro expansion.\n-* Predefined::       Predefined macros that are always available.\n-* Stringification::  Macro arguments converted into string constants.\n-* Concatenation::    Building tokens from parts taken from macro arguments.\n-* Undefining::       Cancelling a macro's definition.\n-* Redefining::       Changing a macro's definition.\n-* Macro Pitfalls::   Macros can confuse the unwary.  Here we explain\n-                       several common problems and strange features.\n-\n-\u001f\n-File: cpp.info,  Node: Simple Macros,  Next: Argument Macros,  Prev: Macros,  Up: Macros\n-\n-Simple Macros\n--------------\n-\n-   A \"simple macro\" is a kind of abbreviation.  It is a name which\n-stands for a fragment of code.  Some people refer to these as \"manifest\n-constants\".\n-\n-   Before you can use a macro, you must \"define\" it explicitly with the\n-`#define' directive.  `#define' is followed by the name of the macro\n-and then the code it should be an abbreviation for.  For example,\n-\n-     #define BUFFER_SIZE 1020\n-\n-defines a macro named `BUFFER_SIZE' as an abbreviation for the text\n-`1020'.  If somewhere after this `#define' directive there comes a C\n-statement of the form\n-\n-     foo = (char *) xmalloc (BUFFER_SIZE);\n-\n-then the C preprocessor will recognize and \"expand\" the macro\n-`BUFFER_SIZE', resulting in\n-\n-     foo = (char *) xmalloc (1020);\n-\n-   The use of all upper case for macro names is a standard convention.\n-Programs are easier to read when it is possible to tell at a glance\n-which names are macros.\n-\n-   Normally, a macro definition must be a single line, like all C\n-preprocessing directives.  (You can split a long macro definition\n-cosmetically with Backslash-Newline.)  There is one exception: Newlines\n-can be included in the macro definition if within a string or character\n-constant.  This is because it is not possible for a macro definition to\n-contain an unbalanced quote character; the definition automatically\n-extends to include the matching quote character that ends the string or\n-character constant.  Comments within a macro definition may contain\n-Newlines, which make no difference since the comments are entirely\n-replaced with Spaces regardless of their contents.\n-\n-   Aside from the above, there is no restriction on what can go in a\n-macro body.  Parentheses need not balance.  The body need not resemble\n-valid C code.  (But if it does not, you may get error messages from the\n-C compiler when you use the macro.)\n-\n-   The C preprocessor scans your program sequentially, so macro\n-definitions take effect at the place you write them.  Therefore, the\n-following input to the C preprocessor\n-\n-     foo = X;\n-     #define X 4\n-     bar = X;\n-\n-produces as output\n-\n-     foo = X;\n-     \n-     bar = 4;\n-\n-   After the preprocessor expands a macro name, the macro's definition\n-body is appended to the front of the remaining input, and the check for\n-macro calls continues.  Therefore, the macro body can contain calls to\n-other macros.  For example, after\n-\n-     #define BUFSIZE 1020\n-     #define TABLESIZE BUFSIZE\n-\n-the name `TABLESIZE' when used in the program would go through two\n-stages of expansion, resulting ultimately in `1020'.\n-\n-   This is not at all the same as defining `TABLESIZE' to be `1020'.\n-The `#define' for `TABLESIZE' uses exactly the body you specify--in\n-this case, `BUFSIZE'--and does not check to see whether it too is the\n-name of a macro.  It's only when you *use* `TABLESIZE' that the result\n-of its expansion is checked for more macro names.  *Note Cascaded\n-Macros::.\n-\n-\u001f\n-File: cpp.info,  Node: Argument Macros,  Next: Predefined,  Prev: Simple Macros,  Up: Macros\n-\n-Macros with Arguments\n----------------------\n-\n-   A simple macro always stands for exactly the same text, each time it\n-is used.  Macros can be more flexible when they accept \"arguments\".\n-Arguments are fragments of code that you supply each time the macro is\n-used.  These fragments are included in the expansion of the macro\n-according to the directions in the macro definition.  A macro that\n-accepts arguments is called a \"function-like macro\" because the syntax\n-for using it looks like a function call.\n-\n-   To define a macro that uses arguments, you write a `#define'\n-directive with a list of \"argument names\" in parentheses after the name\n-of the macro.  The argument names may be any valid C identifiers,\n-separated by commas and optionally whitespace.  The open-parenthesis\n-must follow the macro name immediately, with no space in between.\n-\n-   For example, here is a macro that computes the minimum of two numeric\n-values, as it is defined in many C programs:\n-\n-     #define min(X, Y)  ((X) < (Y) ? (X) : (Y))\n-\n-(This is not the best way to define a \"minimum\" macro in GNU C.  *Note\n-Side Effects::, for more information.)\n-\n-   To use a macro that expects arguments, you write the name of the\n-macro followed by a list of \"actual arguments\" in parentheses,\n-separated by commas.  The number of actual arguments you give must\n-match the number of arguments the macro expects.   Examples of use of\n-the macro `min' include `min (1, 2)' and `min (x + 28, *p)'.\n-\n-   The expansion text of the macro depends on the arguments you use.\n-Each of the argument names of the macro is replaced, throughout the\n-macro definition, with the corresponding actual argument.  Using the\n-same macro `min' defined above, `min (1, 2)' expands into\n-\n-     ((1) < (2) ? (1) : (2))\n-\n-where `1' has been substituted for `X' and `2' for `Y'.\n-\n-   Likewise, `min (x + 28, *p)' expands into\n-\n-     ((x + 28) < (*p) ? (x + 28) : (*p))\n-\n-   Parentheses in the actual arguments must balance; a comma within\n-parentheses does not end an argument.  However, there is no requirement\n-for brackets or braces to balance, and they do not prevent a comma from\n-separating arguments.  Thus,\n-\n-     macro (array[x = y, x + 1])\n-\n-passes two arguments to `macro': `array[x = y' and `x + 1]'.  If you\n-want to supply `array[x = y, x + 1]' as an argument, you must write it\n-as `array[(x = y, x + 1)]', which is equivalent C code.\n-\n-   After the actual arguments are substituted into the macro body, the\n-entire result is appended to the front of the remaining input, and the\n-check for macro calls continues.  Therefore, the actual arguments can\n-contain calls to other macros, either with or without arguments, or\n-even to the same macro.  The macro body can also contain calls to other\n-macros.  For example, `min (min (a, b), c)' expands into this text:\n-\n-     ((((a) < (b) ? (a) : (b))) < (c)\n-      ? (((a) < (b) ? (a) : (b)))\n-      : (c))\n-\n-(Line breaks shown here for clarity would not actually be generated.)\n-\n-   If a macro `foo' takes one argument, and you want to supply an empty\n-argument, you must write at least some whitespace between the\n-parentheses, like this: `foo ( )'.  Just `foo ()' is providing no\n-arguments, which is an error if `foo' expects an argument.  But `foo0\n-()' is the correct way to call a macro defined to take zero arguments,\n-like this:\n-\n-     #define foo0() ...\n-\n-   If you use the macro name followed by something other than an\n-open-parenthesis (after ignoring any spaces, tabs and comments that\n-follow), it is not a call to the macro, and the preprocessor does not\n-change what you have written.  Therefore, it is possible for the same\n-name to be a variable or function in your program as well as a macro,\n-and you can choose in each instance whether to refer to the macro (if\n-an actual argument list follows) or the variable or function (if an\n-argument list does not follow).\n-\n-   Such dual use of one name could be confusing and should be avoided\n-except when the two meanings are effectively synonymous: that is, when\n-the name is both a macro and a function and the two have similar\n-effects.  You can think of the name simply as a function; use of the\n-name for purposes other than calling it (such as, to take the address)\n-will refer to the function, while calls will expand the macro and\n-generate better but equivalent code.  For example, you can use a\n-function named `min' in the same source file that defines the macro.\n-If you write `&min' with no argument list, you refer to the function.\n-If you write `min (x, bb)', with an argument list, the macro is\n-expanded.  If you write `(min) (a, bb)', where the name `min' is not\n-followed by an open-parenthesis, the macro is not expanded, so you wind\n-up with a call to the function `min'.\n-\n-   You may not define the same name as both a simple macro and a macro\n-with arguments.\n-\n-   In the definition of a macro with arguments, the list of argument\n-names must follow the macro name immediately with no space in between.\n-If there is a space after the macro name, the macro is defined as\n-taking no arguments, and all the rest of the line is taken to be the\n-expansion.  The reason for this is that it is often useful to define a\n-macro that takes no arguments and whose definition begins with an\n-identifier in parentheses.  This rule about spaces makes it possible\n-for you to do either this:\n-\n-     #define FOO(x) - 1 / (x)\n-\n-(which defines `FOO' to take an argument and expand into minus the\n-reciprocal of that argument) or this:\n-\n-     #define BAR (x) - 1 / (x)\n-\n-(which defines `BAR' to take no argument and always expand into `(x) -\n-1 / (x)').\n-\n-   Note that the *uses* of a macro with arguments can have spaces before\n-the left parenthesis; it's the *definition* where it matters whether\n-there is a space.\n-\n-\u001f\n-File: cpp.info,  Node: Predefined,  Next: Stringification,  Prev: Argument Macros,  Up: Macros\n-\n-Predefined Macros\n------------------\n-\n-   Several simple macros are predefined.  You can use them without\n-giving definitions for them.  They fall into two classes: standard\n-macros and system-specific macros.\n-\n-* Menu:\n-\n-* Standard Predefined::     Standard predefined macros.\n-* Nonstandard Predefined::  Nonstandard predefined macros.\n-\n-\u001f\n-File: cpp.info,  Node: Standard Predefined,  Next: Nonstandard Predefined,  Prev: Predefined,  Up: Predefined\n-\n-Standard Predefined Macros\n-..........................\n-\n-   The standard predefined macros are available with the same meanings\n-regardless of the machine or operating system on which you are using\n-GNU C.  Their names all start and end with double underscores.  Those\n-preceding `__GNUC__' in this table are standardized by ANSI C; the rest\n-are GNU C extensions.\n-\n-`__FILE__'\n-     This macro expands to the name of the current input file, in the\n-     form of a C string constant.  The precise name returned is the one\n-     that was specified in `#include' or as the input file name\n-     argument.\n-\n-`__LINE__'\n-     This macro expands to the current input line number, in the form\n-     of a decimal integer constant.  While we call it a predefined\n-     macro, it's a pretty strange macro, since its \"definition\" changes\n-     with each new line of source code.\n-\n-     This and `__FILE__' are useful in generating an error message to\n-     report an inconsistency detected by the program; the message can\n-     state the source line at which the inconsistency was detected.\n-     For example,\n-\n-          fprintf (stderr, \"Internal error: \"\n-                           \"negative string length \"\n-                           \"%d at %s, line %d.\",\n-                   length, __FILE__, __LINE__);\n-\n-     A `#include' directive changes the expansions of `__FILE__' and\n-     `__LINE__' to correspond to the included file.  At the end of that\n-     file, when processing resumes on the input file that contained the\n-     `#include' directive, the expansions of `__FILE__' and `__LINE__'\n-     revert to the values they had before the `#include' (but\n-     `__LINE__' is then incremented by one as processing moves to the\n-     line after the `#include').\n-\n-     The expansions of both `__FILE__' and `__LINE__' are altered if a\n-     `#line' directive is used.  *Note Combining Sources::.\n-\n-`__DATE__'\n-     This macro expands to a string constant that describes the date on\n-     which the preprocessor is being run.  The string constant contains\n-     eleven characters and looks like `\"Feb  1 1996\"'.\n-\n-`__TIME__'\n-     This macro expands to a string constant that describes the time at\n-     which the preprocessor is being run.  The string constant contains\n-     eight characters and looks like `\"23:59:01\"'.\n-\n-`__STDC__'\n-     This macro expands to the constant 1, to signify that this is ANSI\n-     Standard C.  (Whether that is actually true depends on what C\n-     compiler will operate on the output from the preprocessor.)\n-\n-     On some hosts, system include files use a different convention,\n-     where `__STDC__' is normally 0, but is 1 if the user specifies\n-     strict conformance to the C Standard.  The preprocessor follows\n-     the host convention when processing system include files, but when\n-     processing user files it follows the usual GNU C convention.\n-\n-     This macro is not defined if the `-traditional' option is used.\n-\n-`__STDC_VERSION__'\n-     This macro expands to the C Standard's version number, a long\n-     integer constant of the form `YYYYMML' where YYYY and MM are the\n-     year and month of the Standard version.  This signifies which\n-     version of the C Standard the preprocessor conforms to.  Like\n-     `__STDC__', whether this version number is accurate for the entire\n-     implementation depends on what C compiler will operate on the\n-     output from the preprocessor.\n-\n-     This macro is not defined if the `-traditional' option is used.\n-\n-`__GNUC__'\n-     This macro is defined if and only if this is GNU C.  This macro is\n-     defined only when the entire GNU C compiler is in use; if you\n-     invoke the preprocessor directly, `__GNUC__' is undefined.  The\n-     value identifies the major version number of GNU CC (`1' for GNU CC\n-     version 1, which is now obsolete, and `2' for version 2).\n-\n-`__GNUC_MINOR__'\n-     The macro contains the minor version number of the compiler.  This\n-     can be used to work around differences between different releases\n-     of the compiler (for example, if gcc 2.6.3 is known to support a\n-     feature, you can test for `__GNUC__ > 2 || (__GNUC__ == 2 &&\n-     __GNUC_MINOR__ >= 6)').  The last number, `3' in the example\n-     above, denotes the bugfix level of the compiler; no macro contains\n-     this value.\n-\n-`__GNUG__'\n-     The GNU C compiler defines this when the compilation language is\n-     C++; use `__GNUG__' to distinguish between GNU C and GNU C++.\n-\n-`__cplusplus'\n-     The draft ANSI standard for C++ used to require predefining this\n-     variable.  Though it is no longer required, GNU C++ continues to\n-     define it, as do other popular C++ compilers.  You can use\n-     `__cplusplus' to test whether a header is compiled by a C compiler\n-     or a C++ compiler.\n-\n-`__STRICT_ANSI__'\n-     This macro is defined if and only if the `-ansi' switch was\n-     specified when GNU C was invoked.  Its definition is the null\n-     string.  This macro exists primarily to direct certain GNU header\n-     files not to define certain traditional Unix constructs which are\n-     incompatible with ANSI C.\n-\n-`__BASE_FILE__'\n-     This macro expands to the name of the main input file, in the form\n-     of a C string constant.  This is the source file that was specified\n-     as an argument when the C compiler was invoked.\n-\n-`__INCLUDE_LEVEL__'\n-     This macro expands to a decimal integer constant that represents\n-     the depth of nesting in include files.  The value of this macro is\n-     incremented on every `#include' directive and decremented at every\n-     end of file.  For input files specified by command line arguments,\n-     the nesting level is zero.\n-\n-`__VERSION__'\n-     This macro expands to a string which describes the version number\n-     of GNU C.  The string is normally a sequence of decimal numbers\n-     separated by periods, such as `\"2.6.0\"'.  The only reasonable use\n-     of this macro is to incorporate it into a string constant.\n-\n-`__OPTIMIZE__'\n-     This macro is defined in optimizing compilations.  It causes\n-     certain GNU header files to define alternative macro definitions\n-     for some system library functions.  It is unwise to refer to or\n-     test the definition of this macro unless you make very sure that\n-     programs will execute with the same effect regardless.\n-\n-`__CHAR_UNSIGNED__'\n-     This macro is defined if and only if the data type `char' is\n-     unsigned on the target machine.  It exists to cause the standard\n-     header file `limits.h' to work correctly.  It is bad practice to\n-     refer to this macro yourself; instead, refer to the standard\n-     macros defined in `limits.h'.  The preprocessor uses this macro to\n-     determine whether or not to sign-extend large character constants\n-     written in octal; see *Note The `#if' Directive: #if Directive.\n-\n-`__REGISTER_PREFIX__'\n-     This macro expands to a string describing the prefix applied to cpu\n-     registers in assembler code.  It can be used to write assembler\n-     code that is usable in multiple environments.  For example, in the\n-     `m68k-aout' environment it expands to the string `\"\"', but in the\n-     `m68k-coff' environment it expands to the string `\"%\"'.\n-\n-`__USER_LABEL_PREFIX__'\n-     This macro expands to a string describing the prefix applied to\n-     user generated labels in assembler code.  It can be used to write\n-     assembler code that is usable in multiple environments.  For\n-     example, in the `m68k-aout' environment it expands to the string\n-     `\"_\"', but in the `m68k-coff' environment it expands to the string\n-     `\"\"'.  This does not work with the `-mno-underscores' option that\n-     the i386 OSF/rose and m88k targets provide nor with the `-mcall*'\n-     options of the rs6000 System V Release 4 target.\n-\n-\u001f\n-File: cpp.info,  Node: Nonstandard Predefined,  Prev: Standard Predefined,  Up: Predefined\n-\n-Nonstandard Predefined Macros\n-.............................\n-\n-   The C preprocessor normally has several predefined macros that vary\n-between machines because their purpose is to indicate what type of\n-system and machine is in use.  This manual, being for all systems and\n-machines, cannot tell you exactly what their names are; instead, we\n-offer a list of some typical ones.  You can use `cpp -dM' to see the\n-values of predefined macros; see *Note Invocation::.\n-\n-   Some nonstandard predefined macros describe the operating system in\n-use, with more or less specificity.  For example,\n-\n-`unix'\n-     `unix' is normally predefined on all Unix systems.\n-\n-`BSD'\n-     `BSD' is predefined on recent versions of Berkeley Unix (perhaps\n-     only in version 4.3).\n-\n-   Other nonstandard predefined macros describe the kind of CPU, with\n-more or less specificity.  For example,\n-\n-`vax'\n-     `vax' is predefined on Vax computers.\n-\n-`mc68000'\n-     `mc68000' is predefined on most computers whose CPU is a Motorola\n-     68000, 68010 or 68020.\n-\n-`m68k'\n-     `m68k' is also predefined on most computers whose CPU is a 68000,\n-     68010 or 68020; however, some makers use `mc68000' and some use\n-     `m68k'.  Some predefine both names.  What happens in GNU C depends\n-     on the system you are using it on.\n-\n-`M68020'\n-     `M68020' has been observed to be predefined on some systems that\n-     use 68020 CPUs--in addition to `mc68000' and `m68k', which are\n-     less specific.\n-\n-`_AM29K'\n-`_AM29000'\n-     Both `_AM29K' and `_AM29000' are predefined for the AMD 29000 CPU\n-     family.\n-\n-`ns32000'\n-     `ns32000' is predefined on computers which use the National\n-     Semiconductor 32000 series CPU.\n-\n-   Yet other nonstandard predefined macros describe the manufacturer of\n-the system.  For example,\n-\n-`sun'\n-     `sun' is predefined on all models of Sun computers.\n-\n-`pyr'\n-     `pyr' is predefined on all models of Pyramid computers.\n-\n-`sequent'\n-     `sequent' is predefined on all models of Sequent computers.\n-\n-   These predefined symbols are not only nonstandard, they are contrary\n-to the ANSI standard because their names do not start with underscores.\n-Therefore, the option `-ansi' inhibits the definition of these symbols.\n-\n-   This tends to make `-ansi' useless, since many programs depend on the\n-customary nonstandard predefined symbols.  Even system header files\n-check them and will generate incorrect declarations if they do not find\n-the names that are expected.  You might think that the header files\n-supplied for the Uglix computer would not need to test what machine\n-they are running on, because they can simply assume it is the Uglix;\n-but often they do, and they do so using the customary names.  As a\n-result, very few C programs will compile with `-ansi'.  We intend to\n-avoid such problems on the GNU system.\n-\n-   What, then, should you do in an ANSI C program to test the type of\n-machine it will run on?\n-\n-   GNU C offers a parallel series of symbols for this purpose, whose\n-names are made from the customary ones by adding `__' at the beginning\n-and end.  Thus, the symbol `__vax__' would be available on a Vax, and\n-so on.\n-\n-   The set of nonstandard predefined names in the GNU C preprocessor is\n-controlled (when `cpp' is itself compiled) by the macro\n-`CPP_PREDEFINES', which should be a string containing `-D' options,\n-separated by spaces.  For example, on the Sun 3, we use the following\n-definition:\n-\n-     #define CPP_PREDEFINES \"-Dmc68000 -Dsun -Dunix -Dm68k\"\n-\n-This macro is usually specified in `tm.h'.\n-\n-\u001f\n-File: cpp.info,  Node: Stringification,  Next: Concatenation,  Prev: Predefined,  Up: Macros\n-\n-Stringification\n----------------\n-\n-   \"Stringification\" means turning a code fragment into a string\n-constant whose contents are the text for the code fragment.  For\n-example, stringifying `foo (z)' results in `\"foo (z)\"'.\n-\n-   In the C preprocessor, stringification is an option available when\n-macro arguments are substituted into the macro definition.  In the body\n-of the definition, when an argument name appears, the character `#'\n-before the name specifies stringification of the corresponding actual\n-argument when it is substituted at that point in the definition.  The\n-same argument may be substituted in other places in the definition\n-without stringification if the argument name appears in those places\n-with no `#'.\n-\n-   Here is an example of a macro definition that uses stringification:\n-\n-     #define WARN_IF(EXP) \\\n-     do { if (EXP) \\\n-             fprintf (stderr, \"Warning: \" #EXP \"\\n\"); } \\\n-     while (0)\n-\n-Here the actual argument for `EXP' is substituted once as given, into\n-the `if' statement, and once as stringified, into the argument to\n-`fprintf'.  The `do' and `while (0)' are a kludge to make it possible\n-to write `WARN_IF (ARG);', which the resemblance of `WARN_IF' to a\n-function would make C programmers want to do; see *Note Swallow\n-Semicolon::.\n-\n-   The stringification feature is limited to transforming one macro\n-argument into one string constant: there is no way to combine the\n-argument with other text and then stringify it all together.  But the\n-example above shows how an equivalent result can be obtained in ANSI\n-Standard C using the feature that adjacent string constants are\n-concatenated as one string constant.  The preprocessor stringifies the\n-actual value of `EXP' into a separate string constant, resulting in\n-text like\n-\n-     do { if (x == 0) \\\n-             fprintf (stderr, \"Warning: \" \"x == 0\" \"\\n\"); } \\\n-     while (0)\n-\n-but the C compiler then sees three consecutive string constants and\n-concatenates them into one, producing effectively\n-\n-     do { if (x == 0) \\\n-             fprintf (stderr, \"Warning: x == 0\\n\"); } \\\n-     while (0)\n-\n-   Stringification in C involves more than putting doublequote\n-characters around the fragment; it is necessary to put backslashes in\n-front of all doublequote characters, and all backslashes in string and\n-character constants, in order to get a valid C string constant with the\n-proper contents.  Thus, stringifying `p = \"foo\\n\";' results in `\"p =\n-\\\"foo\\\\n\\\";\"'.  However, backslashes that are not inside of string or\n-character constants are not duplicated: `\\n' by itself stringifies to\n-`\"\\n\"'.\n-\n-   Whitespace (including comments) in the text being stringified is\n-handled according to precise rules.  All leading and trailing\n-whitespace is ignored.  Any sequence of whitespace in the middle of the\n-text is converted to a single space in the stringified result.\n-\n-\u001f\n-File: cpp.info,  Node: Concatenation,  Next: Undefining,  Prev: Stringification,  Up: Macros\n-\n-Concatenation\n--------------\n-\n-   \"Concatenation\" means joining two strings into one.  In the context\n-of macro expansion, concatenation refers to joining two lexical units\n-into one longer one.  Specifically, an actual argument to the macro can\n-be concatenated with another actual argument or with fixed text to\n-produce a longer name.  The longer name might be the name of a function,\n-variable or type, or a C keyword; it might even be the name of another\n-macro, in which case it will be expanded.\n-\n-   When you define a macro, you request concatenation with the special\n-operator `##' in the macro body.  When the macro is called, after\n-actual arguments are substituted, all `##' operators are deleted, and\n-so is any whitespace next to them (including whitespace that was part\n-of an actual argument).  The result is to concatenate the syntactic\n-tokens on either side of the `##'.\n-\n-   Consider a C program that interprets named commands.  There probably\n-needs to be a table of commands, perhaps an array of structures\n-declared as follows:\n-\n-     struct command\n-     {\n-       char *name;\n-       void (*function) ();\n-     };\n-     \n-     struct command commands[] =\n-     {\n-       { \"quit\", quit_command},\n-       { \"help\", help_command},\n-       ...\n-     };\n-\n-   It would be cleaner not to have to give each command name twice,\n-once in the string constant and once in the function name.  A macro\n-which takes the name of a command as an argument can make this\n-unnecessary.  The string constant can be created with stringification,\n-and the function name by concatenating the argument with `_command'.\n-Here is how it is done:\n-\n-     #define COMMAND(NAME)  { #NAME, NAME ## _command }\n-     \n-     struct command commands[] =\n-     {\n-       COMMAND (quit),\n-       COMMAND (help),\n-       ...\n-     };\n-\n-   The usual case of concatenation is concatenating two names (or a\n-name and a number) into a longer name.  But this isn't the only valid\n-case.  It is also possible to concatenate two numbers (or a number and\n-a name, such as `1.5' and `e3') into a number.  Also, multi-character\n-operators such as `+=' can be formed by concatenation.  In some cases\n-it is even possible to piece together a string constant.  However, two\n-pieces of text that don't together form a valid lexical unit cannot be\n-concatenated.  For example, concatenation with `x' on one side and `+'\n-on the other is not meaningful because those two characters can't fit\n-together in any lexical unit of C.  The ANSI standard says that such\n-attempts at concatenation are undefined, but in the GNU C preprocessor\n-it is well defined: it puts the `x' and `+' side by side with no\n-particular special results.\n-\n-   Keep in mind that the C preprocessor converts comments to whitespace\n-before macros are even considered.  Therefore, you cannot create a\n-comment by concatenating `/' and `*': the `/*' sequence that starts a\n-comment is not a lexical unit, but rather the beginning of a \"long\"\n-space character.  Also, you can freely use comments next to a `##' in a\n-macro definition, or in actual arguments that will be concatenated,\n-because the comments will be converted to spaces at first sight, and\n-concatenation will later discard the spaces.\n-\n-\u001f\n-File: cpp.info,  Node: Undefining,  Next: Redefining,  Prev: Concatenation,  Up: Macros\n-\n-Undefining Macros\n------------------\n-\n-   To \"undefine\" a macro means to cancel its definition.  This is done\n-with the `#undef' directive.  `#undef' is followed by the macro name to\n-be undefined.\n-\n-   Like definition, undefinition occurs at a specific point in the\n-source file, and it applies starting from that point.  The name ceases\n-to be a macro name, and from that point on it is treated by the\n-preprocessor as if it had never been a macro name.\n-\n-   For example,\n-\n-     #define FOO 4\n-     x = FOO;\n-     #undef FOO\n-     x = FOO;\n-\n-expands into\n-\n-     x = 4;\n-     \n-     x = FOO;\n-\n-In this example, `FOO' had better be a variable or function as well as\n-(temporarily) a macro, in order for the result of the expansion to be\n-valid C code.\n-\n-   The same form of `#undef' directive will cancel definitions with\n-arguments or definitions that don't expect arguments.  The `#undef'\n-directive has no effect when used on a name not currently defined as a\n-macro.\n-\n-\u001f\n-File: cpp.info,  Node: Redefining,  Next: Macro Pitfalls,  Prev: Undefining,  Up: Macros\n-\n-Redefining Macros\n------------------\n-\n-   \"Redefining\" a macro means defining (with `#define') a name that is\n-already defined as a macro.\n-\n-   A redefinition is trivial if the new definition is transparently\n-identical to the old one.  You probably wouldn't deliberately write a\n-trivial redefinition, but they can happen automatically when a header\n-file is included more than once (*note Header Files::.), so they are\n-accepted silently and without effect.\n-\n-   Nontrivial redefinition is considered likely to be an error, so it\n-provokes a warning message from the preprocessor.  However, sometimes it\n-is useful to change the definition of a macro in mid-compilation.  You\n-can inhibit the warning by undefining the macro with `#undef' before the\n-second definition.\n-\n-   In order for a redefinition to be trivial, the new definition must\n-exactly match the one already in effect, with two possible exceptions:\n-\n-   * Whitespace may be added or deleted at the beginning or the end.\n-\n-   * Whitespace may be changed in the middle (but not inside strings).\n-     However, it may not be eliminated entirely, and it may not be added\n-     where there was no whitespace at all.\n-\n-   Recall that a comment counts as whitespace.\n-"}, {"sha": "b98ab2d0f292f2da74d4e1dcbc2198a2bfd300fe", "filename": "gcc/cpp.info-2", "status": "removed", "additions": 0, "deletions": 1058, "changes": 1058, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fcpp.info-2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fcpp.info-2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.info-2?ref=bb84e66919817020267815eed4304e543688e722", "patch": "@@ -1,1058 +0,0 @@\n-This is Info file cpp.info, produced by Makeinfo version 1.67 from the\n-input file cpp.texi.\n-\n-   This file documents the GNU C Preprocessor.\n-\n-   Copyright 1987, 1989, 1991, 1992, 1993, 1994, 1995 Free Software\n-Foundation, Inc.\n-\n-   Permission is granted to make and distribute verbatim copies of this\n-manual provided the copyright notice and this permission notice are\n-preserved on all copies.\n-\n-   Permission is granted to copy and distribute modified versions of\n-this manual under the conditions for verbatim copying, provided also\n-that the entire resulting derived work is distributed under the terms\n-of a permission notice identical to this one.\n-\n-   Permission is granted to copy and distribute translations of this\n-manual into another language, under the above conditions for modified\n-versions.\n-\n-\u001f\n-File: cpp.info,  Node: Macro Pitfalls,  Prev: Redefining,  Up: Macros\n-\n-Pitfalls and Subtleties of Macros\n----------------------------------\n-\n-   In this section we describe some special rules that apply to macros\n-and macro expansion, and point out certain cases in which the rules have\n-counterintuitive consequences that you must watch out for.\n-\n-* Menu:\n-\n-* Misnesting::        Macros can contain unmatched parentheses.\n-* Macro Parentheses:: Why apparently superfluous parentheses\n-                         may be necessary to avoid incorrect grouping.\n-* Swallow Semicolon:: Macros that look like functions\n-                         but expand into compound statements.\n-* Side Effects::      Unsafe macros that cause trouble when\n-                         arguments contain side effects.\n-* Self-Reference::    Macros whose definitions use the macros' own names.\n-* Argument Prescan::  Actual arguments are checked for macro calls\n-                         before they are substituted.\n-* Cascaded Macros::   Macros whose definitions use other macros.\n-* Newlines in Args::  Sometimes line numbers get confused.\n-\n-\u001f\n-File: cpp.info,  Node: Misnesting,  Next: Macro Parentheses,  Prev: Macro Pitfalls,  Up: Macro Pitfalls\n-\n-Improperly Nested Constructs\n-............................\n-\n-   Recall that when a macro is called with arguments, the arguments are\n-substituted into the macro body and the result is checked, together with\n-the rest of the input file, for more macro calls.\n-\n-   It is possible to piece together a macro call coming partially from\n-the macro body and partially from the actual arguments.  For example,\n-\n-     #define double(x) (2*(x))\n-     #define call_with_1(x) x(1)\n-\n-would expand `call_with_1 (double)' into `(2*(1))'.\n-\n-   Macro definitions do not have to have balanced parentheses.  By\n-writing an unbalanced open parenthesis in a macro body, it is possible\n-to create a macro call that begins inside the macro body but ends\n-outside of it.  For example,\n-\n-     #define strange(file) fprintf (file, \"%s %d\",\n-     ...\n-     strange(stderr) p, 35)\n-\n-This bizarre example expands to `fprintf (stderr, \"%s %d\", p, 35)'!\n-\n-\u001f\n-File: cpp.info,  Node: Macro Parentheses,  Next: Swallow Semicolon,  Prev: Misnesting,  Up: Macro Pitfalls\n-\n-Unintended Grouping of Arithmetic\n-.................................\n-\n-   You may have noticed that in most of the macro definition examples\n-shown above, each occurrence of a macro argument name had parentheses\n-around it.  In addition, another pair of parentheses usually surround\n-the entire macro definition.  Here is why it is best to write macros\n-that way.\n-\n-   Suppose you define a macro as follows,\n-\n-     #define ceil_div(x, y) (x + y - 1) / y\n-\n-whose purpose is to divide, rounding up.  (One use for this operation is\n-to compute how many `int' objects are needed to hold a certain number\n-of `char' objects.)  Then suppose it is used as follows:\n-\n-     a = ceil_div (b & c, sizeof (int));\n-\n-This expands into\n-\n-     a = (b & c + sizeof (int) - 1) / sizeof (int);\n-\n-which does not do what is intended.  The operator-precedence rules of C\n-make it equivalent to this:\n-\n-     a = (b & (c + sizeof (int) - 1)) / sizeof (int);\n-\n-But what we want is this:\n-\n-     a = ((b & c) + sizeof (int) - 1)) / sizeof (int);\n-\n-Defining the macro as\n-\n-     #define ceil_div(x, y) ((x) + (y) - 1) / (y)\n-\n-provides the desired result.\n-\n-   Unintended grouping can result in another way.  Consider `sizeof\n-ceil_div(1, 2)'.  That has the appearance of a C expression that would\n-compute the size of the type of `ceil_div (1, 2)', but in fact it means\n-something very different.  Here is what it expands to:\n-\n-     sizeof ((1) + (2) - 1) / (2)\n-\n-This would take the size of an integer and divide it by two.  The\n-precedence rules have put the division outside the `sizeof' when it was\n-intended to be inside.\n-\n-   Parentheses around the entire macro definition can prevent such\n-problems.  Here, then, is the recommended way to define `ceil_div':\n-\n-     #define ceil_div(x, y) (((x) + (y) - 1) / (y))\n-\n-\u001f\n-File: cpp.info,  Node: Swallow Semicolon,  Next: Side Effects,  Prev: Macro Parentheses,  Up: Macro Pitfalls\n-\n-Swallowing the Semicolon\n-........................\n-\n-   Often it is desirable to define a macro that expands into a compound\n-statement.  Consider, for example, the following macro, that advances a\n-pointer (the argument `p' says where to find it) across whitespace\n-characters:\n-\n-     #define SKIP_SPACES (p, limit)  \\\n-     { register char *lim = (limit); \\\n-       while (p != lim) {            \\\n-         if (*p++ != ' ') {          \\\n-           p--; break; }}}\n-\n-Here Backslash-Newline is used to split the macro definition, which must\n-be a single line, so that it resembles the way such C code would be\n-laid out if not part of a macro definition.\n-\n-   A call to this macro might be `SKIP_SPACES (p, lim)'.  Strictly\n-speaking, the call expands to a compound statement, which is a complete\n-statement with no need for a semicolon to end it.  But it looks like a\n-function call.  So it minimizes confusion if you can use it like a\n-function call, writing a semicolon afterward, as in `SKIP_SPACES (p,\n-lim);'\n-\n-   But this can cause trouble before `else' statements, because the\n-semicolon is actually a null statement.  Suppose you write\n-\n-     if (*p != 0)\n-       SKIP_SPACES (p, lim);\n-     else ...\n-\n-The presence of two statements--the compound statement and a null\n-statement--in between the `if' condition and the `else' makes invalid C\n-code.\n-\n-   The definition of the macro `SKIP_SPACES' can be altered to solve\n-this problem, using a `do ... while' statement.  Here is how:\n-\n-     #define SKIP_SPACES (p, limit)     \\\n-     do { register char *lim = (limit); \\\n-          while (p != lim) {            \\\n-            if (*p++ != ' ') {          \\\n-              p--; break; }}}           \\\n-     while (0)\n-\n-   Now `SKIP_SPACES (p, lim);' expands into\n-\n-     do {...} while (0);\n-\n-which is one statement.\n-\n-\u001f\n-File: cpp.info,  Node: Side Effects,  Next: Self-Reference,  Prev: Swallow Semicolon,  Up: Macro Pitfalls\n-\n-Duplication of Side Effects\n-...........................\n-\n-   Many C programs define a macro `min', for \"minimum\", like this:\n-\n-     #define min(X, Y)  ((X) < (Y) ? (X) : (Y))\n-\n-   When you use this macro with an argument containing a side effect,\n-as shown here,\n-\n-     next = min (x + y, foo (z));\n-\n-it expands as follows:\n-\n-     next = ((x + y) < (foo (z)) ? (x + y) : (foo (z)));\n-\n-where `x + y' has been substituted for `X' and `foo (z)' for `Y'.\n-\n-   The function `foo' is used only once in the statement as it appears\n-in the program, but the expression `foo (z)' has been substituted twice\n-into the macro expansion.  As a result, `foo' might be called two times\n-when the statement is executed.  If it has side effects or if it takes\n-a long time to compute, the results might not be what you intended.  We\n-say that `min' is an \"unsafe\" macro.\n-\n-   The best solution to this problem is to define `min' in a way that\n-computes the value of `foo (z)' only once.  The C language offers no\n-standard way to do this, but it can be done with GNU C extensions as\n-follows:\n-\n-     #define min(X, Y)                     \\\n-     ({ typeof (X) __x = (X), __y = (Y);   \\\n-        (__x < __y) ? __x : __y; })\n-\n-   If you do not wish to use GNU C extensions, the only solution is to\n-be careful when *using* the macro `min'.  For example, you can\n-calculate the value of `foo (z)', save it in a variable, and use that\n-variable in `min':\n-\n-     #define min(X, Y)  ((X) < (Y) ? (X) : (Y))\n-     ...\n-     {\n-       int tem = foo (z);\n-       next = min (x + y, tem);\n-     }\n-\n-(where we assume that `foo' returns type `int').\n-\n-\u001f\n-File: cpp.info,  Node: Self-Reference,  Next: Argument Prescan,  Prev: Side Effects,  Up: Macro Pitfalls\n-\n-Self-Referential Macros\n-.......................\n-\n-   A \"self-referential\" macro is one whose name appears in its\n-definition.  A special feature of ANSI Standard C is that the\n-self-reference is not considered a macro call.  It is passed into the\n-preprocessor output unchanged.\n-\n-   Let's consider an example:\n-\n-     #define foo (4 + foo)\n-\n-where `foo' is also a variable in your program.\n-\n-   Following the ordinary rules, each reference to `foo' will expand\n-into `(4 + foo)'; then this will be rescanned and will expand into `(4\n-+ (4 + foo))'; and so on until it causes a fatal error (memory full) in\n-the preprocessor.\n-\n-   However, the special rule about self-reference cuts this process\n-short after one step, at `(4 + foo)'.  Therefore, this macro definition\n-has the possibly useful effect of causing the program to add 4 to the\n-value of `foo' wherever `foo' is referred to.\n-\n-   In most cases, it is a bad idea to take advantage of this feature.  A\n-person reading the program who sees that `foo' is a variable will not\n-expect that it is a macro as well.  The reader will come across the\n-identifier `foo' in the program and think its value should be that of\n-the variable `foo', whereas in fact the value is four greater.\n-\n-   The special rule for self-reference applies also to \"indirect\"\n-self-reference.  This is the case where a macro X expands to use a\n-macro `y', and the expansion of `y' refers to the macro `x'.  The\n-resulting reference to `x' comes indirectly from the expansion of `x',\n-so it is a self-reference and is not further expanded.  Thus, after\n-\n-     #define x (4 + y)\n-     #define y (2 * x)\n-\n-`x' would expand into `(4 + (2 * x))'.  Clear?\n-\n-   But suppose `y' is used elsewhere, not from the definition of `x'.\n-Then the use of `x' in the expansion of `y' is not a self-reference\n-because `x' is not \"in progress\".  So it does expand.  However, the\n-expansion of `x' contains a reference to `y', and that is an indirect\n-self-reference now because `y' is \"in progress\".  The result is that\n-`y' expands to `(2 * (4 + y))'.\n-\n-   It is not clear that this behavior would ever be useful, but it is\n-specified by the ANSI C standard, so you may need to understand it.\n-\n-\u001f\n-File: cpp.info,  Node: Argument Prescan,  Next: Cascaded Macros,  Prev: Self-Reference,  Up: Macro Pitfalls\n-\n-Separate Expansion of Macro Arguments\n-.....................................\n-\n-   We have explained that the expansion of a macro, including the\n-substituted actual arguments, is scanned over again for macro calls to\n-be expanded.\n-\n-   What really happens is more subtle: first each actual argument text\n-is scanned separately for macro calls.  Then the results of this are\n-substituted into the macro body to produce the macro expansion, and the\n-macro expansion is scanned again for macros to expand.\n-\n-   The result is that the actual arguments are scanned *twice* to expand\n-macro calls in them.\n-\n-   Most of the time, this has no effect.  If the actual argument\n-contained any macro calls, they are expanded during the first scan.\n-The result therefore contains no macro calls, so the second scan does\n-not change it.  If the actual argument were substituted as given, with\n-no prescan, the single remaining scan would find the same macro calls\n-and produce the same results.\n-\n-   You might expect the double scan to change the results when a\n-self-referential macro is used in an actual argument of another macro\n-(*note Self-Reference::.): the self-referential macro would be expanded\n-once in the first scan, and a second time in the second scan.  But this\n-is not what happens.  The self-references that do not expand in the\n-first scan are marked so that they will not expand in the second scan\n-either.\n-\n-   The prescan is not done when an argument is stringified or\n-concatenated.  Thus,\n-\n-     #define str(s) #s\n-     #define foo 4\n-     str (foo)\n-\n-expands to `\"foo\"'.  Once more, prescan has been prevented from having\n-any noticeable effect.\n-\n-   More precisely, stringification and concatenation use the argument as\n-written, in un-prescanned form.  The same actual argument would be used\n-in prescanned form if it is substituted elsewhere without\n-stringification or concatenation.\n-\n-     #define str(s) #s lose(s)\n-     #define foo 4\n-     str (foo)\n-\n-   expands to `\"foo\" lose(4)'.\n-\n-   You might now ask, \"Why mention the prescan, if it makes no\n-difference?  And why not skip it and make the preprocessor faster?\"\n-The answer is that the prescan does make a difference in three special\n-cases:\n-\n-   * Nested calls to a macro.\n-\n-   * Macros that call other macros that stringify or concatenate.\n-\n-   * Macros whose expansions contain unshielded commas.\n-\n-   We say that \"nested\" calls to a macro occur when a macro's actual\n-argument contains a call to that very macro.  For example, if `f' is a\n-macro that expects one argument, `f (f (1))' is a nested pair of calls\n-to `f'.  The desired expansion is made by expanding `f (1)' and\n-substituting that into the definition of `f'.  The prescan causes the\n-expected result to happen.  Without the prescan, `f (1)' itself would\n-be substituted as an actual argument, and the inner use of `f' would\n-appear during the main scan as an indirect self-reference and would not\n-be expanded.  Here, the prescan cancels an undesirable side effect (in\n-the medical, not computational, sense of the term) of the special rule\n-for self-referential macros.\n-\n-   But prescan causes trouble in certain other cases of nested macro\n-calls.  Here is an example:\n-\n-     #define foo  a,b\n-     #define bar(x) lose(x)\n-     #define lose(x) (1 + (x))\n-     \n-     bar(foo)\n-\n-We would like `bar(foo)' to turn into `(1 + (foo))', which would then\n-turn into `(1 + (a,b))'.  But instead, `bar(foo)' expands into\n-`lose(a,b)', and you get an error because `lose' requires a single\n-argument.  In this case, the problem is easily solved by the same\n-parentheses that ought to be used to prevent misnesting of arithmetic\n-operations:\n-\n-     #define foo (a,b)\n-     #define bar(x) lose((x))\n-\n-   The problem is more serious when the operands of the macro are not\n-expressions; for example, when they are statements.  Then parentheses\n-are unacceptable because they would make for invalid C code:\n-\n-     #define foo { int a, b; ... }\n-\n-In GNU C you can shield the commas using the `({...})' construct which\n-turns a compound statement into an expression:\n-\n-     #define foo ({ int a, b; ... })\n-\n-   Or you can rewrite the macro definition to avoid such commas:\n-\n-     #define foo { int a; int b; ... }\n-\n-   There is also one case where prescan is useful.  It is possible to\n-use prescan to expand an argument and then stringify it--if you use two\n-levels of macros.  Let's add a new macro `xstr' to the example shown\n-above:\n-\n-     #define xstr(s) str(s)\n-     #define str(s) #s\n-     #define foo 4\n-     xstr (foo)\n-\n-   This expands into `\"4\"', not `\"foo\"'.  The reason for the difference\n-is that the argument of `xstr' is expanded at prescan (because `xstr'\n-does not specify stringification or concatenation of the argument).\n-The result of prescan then forms the actual argument for `str'.  `str'\n-uses its argument without prescan because it performs stringification;\n-but it cannot prevent or undo the prescanning already done by `xstr'.\n-\n-\u001f\n-File: cpp.info,  Node: Cascaded Macros,  Next: Newlines in Args,  Prev: Argument Prescan,  Up: Macro Pitfalls\n-\n-Cascaded Use of Macros\n-......................\n-\n-   A \"cascade\" of macros is when one macro's body contains a reference\n-to another macro.  This is very common practice.  For example,\n-\n-     #define BUFSIZE 1020\n-     #define TABLESIZE BUFSIZE\n-\n-   This is not at all the same as defining `TABLESIZE' to be `1020'.\n-The `#define' for `TABLESIZE' uses exactly the body you specify--in\n-this case, `BUFSIZE'--and does not check to see whether it too is the\n-name of a macro.\n-\n-   It's only when you *use* `TABLESIZE' that the result of its expansion\n-is checked for more macro names.\n-\n-   This makes a difference if you change the definition of `BUFSIZE' at\n-some point in the source file.  `TABLESIZE', defined as shown, will\n-always expand using the definition of `BUFSIZE' that is currently in\n-effect:\n-\n-     #define BUFSIZE 1020\n-     #define TABLESIZE BUFSIZE\n-     #undef BUFSIZE\n-     #define BUFSIZE 37\n-\n-Now `TABLESIZE' expands (in two stages) to `37'.  (The `#undef' is to\n-prevent any warning about the nontrivial redefinition of `BUFSIZE'.)\n-\n-\u001f\n-File: cpp.info,  Node: Newlines in Args,  Prev: Cascaded Macros,  Up: Macro Pitfalls\n-\n-Newlines in Macro Arguments\n----------------------------\n-\n-   Traditional macro processing carries forward all newlines in macro\n-arguments into the expansion of the macro.  This means that, if some of\n-the arguments are substituted more than once, or not at all, or out of\n-order, newlines can be duplicated, lost, or moved around within the\n-expansion.  If the expansion consists of multiple statements, then the\n-effect is to distort the line numbers of some of these statements.  The\n-result can be incorrect line numbers, in error messages or displayed in\n-a debugger.\n-\n-   The GNU C preprocessor operating in ANSI C mode adjusts appropriately\n-for multiple use of an argument--the first use expands all the\n-newlines, and subsequent uses of the same argument produce no newlines.\n-But even in this mode, it can produce incorrect line numbering if\n-arguments are used out of order, or not used at all.\n-\n-   Here is an example illustrating this problem:\n-\n-     #define ignore_second_arg(a,b,c) a; c\n-     \n-     ignore_second_arg (foo (),\n-                        ignored (),\n-                        syntax error);\n-\n-The syntax error triggered by the tokens `syntax error' results in an\n-error message citing line four, even though the statement text comes\n-from line five.\n-\n-\u001f\n-File: cpp.info,  Node: Conditionals,  Next: Combining Sources,  Prev: Macros,  Up: Top\n-\n-Conditionals\n-============\n-\n-   In a macro processor, a \"conditional\" is a directive that allows a\n-part of the program to be ignored during compilation, on some\n-conditions.  In the C preprocessor, a conditional can test either an\n-arithmetic expression or whether a name is defined as a macro.\n-\n-   A conditional in the C preprocessor resembles in some ways an `if'\n-statement in C, but it is important to understand the difference between\n-them.  The condition in an `if' statement is tested during the execution\n-of your program.  Its purpose is to allow your program to behave\n-differently from run to run, depending on the data it is operating on.\n-The condition in a preprocessing conditional directive is tested when\n-your program is compiled.  Its purpose is to allow different code to be\n-included in the program depending on the situation at the time of\n-compilation.\n-\n-* Menu:\n-\n-* Uses: Conditional Uses.       What conditionals are for.\n-* Syntax: Conditional Syntax.   How conditionals are written.\n-* Deletion: Deleted Code.       Making code into a comment.\n-* Macros: Conditionals-Macros.  Why conditionals are used with macros.\n-* Assertions::\t\t        How and why to use assertions.\n-* Errors: #error Directive.     Detecting inconsistent compilation parameters.\n-\n-\u001f\n-File: cpp.info,  Node: Conditional Uses,  Next: Conditional Syntax,  Up: Conditionals\n-\n-Why Conditionals are Used\n--------------------------\n-\n-   Generally there are three kinds of reason to use a conditional.\n-\n-   * A program may need to use different code depending on the machine\n-     or operating system it is to run on.  In some cases the code for\n-     one operating system may be erroneous on another operating system;\n-     for example, it might refer to library routines that do not exist\n-     on the other system.  When this happens, it is not enough to avoid\n-     executing the invalid code: merely having it in the program makes\n-     it impossible to link the program and run it.  With a\n-     preprocessing conditional, the offending code can be effectively\n-     excised from the program when it is not valid.\n-\n-   * You may want to be able to compile the same source file into two\n-     different programs.  Sometimes the difference between the programs\n-     is that one makes frequent time-consuming consistency checks on its\n-     intermediate data, or prints the values of those data for\n-     debugging, while the other does not.\n-\n-   * A conditional whose condition is always false is a good way to\n-     exclude code from the program but keep it as a sort of comment for\n-     future reference.\n-\n-   Most simple programs that are intended to run on only one machine\n-will not need to use preprocessing conditionals.\n-\n-\u001f\n-File: cpp.info,  Node: Conditional Syntax,  Next: Deleted Code,  Prev: Conditional Uses,  Up: Conditionals\n-\n-Syntax of Conditionals\n-----------------------\n-\n-   A conditional in the C preprocessor begins with a \"conditional\n-directive\": `#if', `#ifdef' or `#ifndef'.  *Note Conditionals-Macros::,\n-for information on `#ifdef' and `#ifndef'; only `#if' is explained here.\n-\n-* Menu:\n-\n-* If: #if Directive.     Basic conditionals using `#if' and `#endif'.\n-* Else: #else Directive. Including some text if the condition fails.\n-* Elif: #elif Directive. Testing several alternative possibilities.\n-\n-\u001f\n-File: cpp.info,  Node: #if Directive,  Next: #else Directive,  Up: Conditional Syntax\n-\n-The `#if' Directive\n-...................\n-\n-   The `#if' directive in its simplest form consists of\n-\n-     #if EXPRESSION\n-     CONTROLLED TEXT\n-     #endif /* EXPRESSION */\n-\n-   The comment following the `#endif' is not required, but it is a good\n-practice because it helps people match the `#endif' to the\n-corresponding `#if'.  Such comments should always be used, except in\n-short conditionals that are not nested.  In fact, you can put anything\n-at all after the `#endif' and it will be ignored by the GNU C\n-preprocessor, but only comments are acceptable in ANSI Standard C.\n-\n-   EXPRESSION is a C expression of integer type, subject to stringent\n-restrictions.  It may contain\n-\n-   * Integer constants, which are all regarded as `long' or `unsigned\n-     long'.\n-\n-   * Character constants, which are interpreted according to the\n-     character set and conventions of the machine and operating system\n-     on which the preprocessor is running.  The GNU C preprocessor uses\n-     the C data type `char' for these character constants; therefore,\n-     whether some character codes are negative is determined by the C\n-     compiler used to compile the preprocessor.  If it treats `char' as\n-     signed, then character codes large enough to set the sign bit will\n-     be considered negative; otherwise, no character code is considered\n-     negative.\n-\n-   * Arithmetic operators for addition, subtraction, multiplication,\n-     division, bitwise operations, shifts, comparisons, and logical\n-     operations (`&&' and `||').\n-\n-   * Identifiers that are not macros, which are all treated as zero(!).\n-\n-   * Macro calls.  All macro calls in the expression are expanded before\n-     actual computation of the expression's value begins.\n-\n-   Note that `sizeof' operators and `enum'-type values are not allowed.\n-`enum'-type values, like all other identifiers that are not taken as\n-macro calls and expanded, are treated as zero.\n-\n-   The CONTROLLED TEXT inside of a conditional can include\n-preprocessing directives.  Then the directives inside the conditional\n-are obeyed only if that branch of the conditional succeeds.  The text\n-can also contain other conditional groups.  However, the `#if' and\n-`#endif' directives must balance.\n-\n-\u001f\n-File: cpp.info,  Node: #else Directive,  Next: #elif Directive,  Prev: #if Directive,  Up: Conditional Syntax\n-\n-The `#else' Directive\n-.....................\n-\n-   The `#else' directive can be added to a conditional to provide\n-alternative text to be used if the condition is false.  This is what it\n-looks like:\n-\n-     #if EXPRESSION\n-     TEXT-IF-TRUE\n-     #else /* Not EXPRESSION */\n-     TEXT-IF-FALSE\n-     #endif /* Not EXPRESSION */\n-\n-   If EXPRESSION is nonzero, and thus the TEXT-IF-TRUE is active, then\n-`#else' acts like a failing conditional and the TEXT-IF-FALSE is\n-ignored.  Contrariwise, if the `#if' conditional fails, the\n-TEXT-IF-FALSE is considered included.\n-\n-\u001f\n-File: cpp.info,  Node: #elif Directive,  Prev: #else Directive,  Up: Conditional Syntax\n-\n-The `#elif' Directive\n-.....................\n-\n-   One common case of nested conditionals is used to check for more\n-than two possible alternatives.  For example, you might have\n-\n-     #if X == 1\n-     ...\n-     #else /* X != 1 */\n-     #if X == 2\n-     ...\n-     #else /* X != 2 */\n-     ...\n-     #endif /* X != 2 */\n-     #endif /* X != 1 */\n-\n-   Another conditional directive, `#elif', allows this to be abbreviated\n-as follows:\n-\n-     #if X == 1\n-     ...\n-     #elif X == 2\n-     ...\n-     #else /* X != 2 and X != 1*/\n-     ...\n-     #endif /* X != 2 and X != 1*/\n-\n-   `#elif' stands for \"else if\".  Like `#else', it goes in the middle\n-of a `#if'-`#endif' pair and subdivides it; it does not require a\n-matching `#endif' of its own.  Like `#if', the `#elif' directive\n-includes an expression to be tested.\n-\n-   The text following the `#elif' is processed only if the original\n-`#if'-condition failed and the `#elif' condition succeeds.  More than\n-one `#elif' can go in the same `#if'-`#endif' group.  Then the text\n-after each `#elif' is processed only if the `#elif' condition succeeds\n-after the original `#if' and any previous `#elif' directives within it\n-have failed.  `#else' is equivalent to `#elif 1', and `#else' is\n-allowed after any number of `#elif' directives, but `#elif' may not\n-follow `#else'.\n-\n-\u001f\n-File: cpp.info,  Node: Deleted Code,  Next: Conditionals-Macros,  Prev: Conditional Syntax,  Up: Conditionals\n-\n-Keeping Deleted Code for Future Reference\n------------------------------------------\n-\n-   If you replace or delete a part of the program but want to keep the\n-old code around as a comment for future reference, the easy way to do\n-this is to put `#if 0' before it and `#endif' after it.  This is better\n-than using comment delimiters `/*' and `*/' since those won't work if\n-the code already contains comments (C comments do not nest).\n-\n-   This works even if the code being turned off contains conditionals,\n-but they must be entire conditionals (balanced `#if' and `#endif').\n-\n-   Conversely, do not use `#if 0' for comments which are not C code.\n-Use the comment delimiters `/*' and `*/' instead.  The interior of `#if\n-0' must consist of complete tokens; in particular, singlequote\n-characters must balance.  But comments often contain unbalanced\n-singlequote characters (known in English as apostrophes).  These\n-confuse `#if 0'.  They do not confuse `/*'.\n-\n-\u001f\n-File: cpp.info,  Node: Conditionals-Macros,  Next: Assertions,  Prev: Deleted Code,  Up: Conditionals\n-\n-Conditionals and Macros\n------------------------\n-\n-   Conditionals are useful in connection with macros or assertions,\n-because those are the only ways that an expression's value can vary\n-from one compilation to another.  A `#if' directive whose expression\n-uses no macros or assertions is equivalent to `#if 1' or `#if 0'; you\n-might as well determine which one, by computing the value of the\n-expression yourself, and then simplify the program.\n-\n-   For example, here is a conditional that tests the expression\n-`BUFSIZE == 1020', where `BUFSIZE' must be a macro.\n-\n-     #if BUFSIZE == 1020\n-       printf (\"Large buffers!\\n\");\n-     #endif /* BUFSIZE is large */\n-\n-   (Programmers often wish they could test the size of a variable or\n-data type in `#if', but this does not work.  The preprocessor does not\n-understand `sizeof', or typedef names, or even the type keywords such\n-as `int'.)\n-\n-   The special operator `defined' is used in `#if' expressions to test\n-whether a certain name is defined as a macro.  Either `defined NAME' or\n-`defined (NAME)' is an expression whose value is 1 if NAME is defined\n-as macro at the current point in the program, and 0 otherwise.  For the\n-`defined' operator it makes no difference what the definition of the\n-macro is; all that matters is whether there is a definition.  Thus, for\n-example,\n-\n-     #if defined (vax) || defined (ns16000)\n-\n-would succeed if either of the names `vax' and `ns16000' is defined as\n-a macro.  You can test the same condition using assertions (*note\n-Assertions::.), like this:\n-\n-     #if #cpu (vax) || #cpu (ns16000)\n-\n-   If a macro is defined and later undefined with `#undef', subsequent\n-use of the `defined' operator returns 0, because the name is no longer\n-defined.  If the macro is defined again with another `#define',\n-`defined' will recommence returning 1.\n-\n-   Conditionals that test whether just one name is defined are very\n-common, so there are two special short conditional directives for this\n-case.\n-\n-`#ifdef NAME'\n-     is equivalent to `#if defined (NAME)'.\n-\n-`#ifndef NAME'\n-     is equivalent to `#if ! defined (NAME)'.\n-\n-   Macro definitions can vary between compilations for several reasons.\n-\n-   * Some macros are predefined on each kind of machine.  For example,\n-     on a Vax, the name `vax' is a predefined macro.  On other\n-     machines, it would not be defined.\n-\n-   * Many more macros are defined by system header files.  Different\n-     systems and machines define different macros, or give them\n-     different values.  It is useful to test these macros with\n-     conditionals to avoid using a system feature on a machine where it\n-     is not implemented.\n-\n-   * Macros are a common way of allowing users to customize a program\n-     for different machines or applications.  For example, the macro\n-     `BUFSIZE' might be defined in a configuration file for your\n-     program that is included as a header file in each source file.  You\n-     would use `BUFSIZE' in a preprocessing conditional in order to\n-     generate different code depending on the chosen configuration.\n-\n-   * Macros can be defined or undefined with `-D' and `-U' command\n-     options when you compile the program.  You can arrange to compile\n-     the same source file into two different programs by choosing a\n-     macro name to specify which program you want, writing conditionals\n-     to test whether or how this macro is defined, and then controlling\n-     the state of the macro with compiler command options.  *Note\n-     Invocation::.\n-\n-   Assertions are usually predefined, but can be defined with\n-preprocessor directives or command-line options.\n-\n-\u001f\n-File: cpp.info,  Node: Assertions,  Next: #error Directive,  Prev: Conditionals-Macros,  Up: Conditionals\n-\n-Assertions\n-----------\n-\n-   \"Assertions\" are a more systematic alternative to macros in writing\n-conditionals to test what sort of computer or system the compiled\n-program will run on.  Assertions are usually predefined, but you can\n-define them with preprocessing directives or command-line options.\n-\n-   The macros traditionally used to describe the type of target are not\n-classified in any way according to which question they answer; they may\n-indicate a hardware architecture, a particular hardware model, an\n-operating system, a particular version of an operating system, or\n-specific configuration options.  These are jumbled together in a single\n-namespace.  In contrast, each assertion consists of a named question and\n-an answer.  The question is usually called the \"predicate\".  An\n-assertion looks like this:\n-\n-     #PREDICATE (ANSWER)\n-\n-You must use a properly formed identifier for PREDICATE.  The value of\n-ANSWER can be any sequence of words; all characters are significant\n-except for leading and trailing whitespace, and differences in internal\n-whitespace sequences are ignored.  Thus, `x + y' is different from\n-`x+y' but equivalent to `x + y'.  `)' is not allowed in an answer.\n-\n-   Here is a conditional to test whether the answer ANSWER is asserted\n-for the predicate PREDICATE:\n-\n-     #if #PREDICATE (ANSWER)\n-\n-There may be more than one answer asserted for a given predicate.  If\n-you omit the answer, you can test whether *any* answer is asserted for\n-PREDICATE:\n-\n-     #if #PREDICATE\n-\n-   Most of the time, the assertions you test will be predefined\n-assertions.  GNU C provides three predefined predicates: `system',\n-`cpu', and `machine'.  `system' is for assertions about the type of\n-software, `cpu' describes the type of computer architecture, and\n-`machine' gives more information about the computer.  For example, on a\n-GNU system, the following assertions would be true:\n-\n-     #system (gnu)\n-     #system (mach)\n-     #system (mach 3)\n-     #system (mach 3.SUBVERSION)\n-     #system (hurd)\n-     #system (hurd VERSION)\n-\n-and perhaps others.  The alternatives with more or less version\n-information let you ask more or less detailed questions about the type\n-of system software.\n-\n-   On a Unix system, you would find `#system (unix)' and perhaps one of:\n-`#system (aix)', `#system (bsd)', `#system (hpux)', `#system (lynx)',\n-`#system (mach)', `#system (posix)', `#system (svr3)', `#system\n-(svr4)', or `#system (xpg4)' with possible version numbers following.\n-\n-   Other values for `system' are `#system (mvs)' and `#system (vms)'.\n-\n-   *Portability note:* Many Unix C compilers provide only one answer\n-for the `system' assertion: `#system (unix)', if they support\n-assertions at all.  This is less than useful.\n-\n-   An assertion with a multi-word answer is completely different from\n-several assertions with individual single-word answers.  For example,\n-the presence of `system (mach 3.0)' does not mean that `system (3.0)'\n-is true.  It also does not directly imply `system (mach)', but in GNU\n-C, that last will normally be asserted as well.\n-\n-   The current list of possible assertion values for `cpu' is: `#cpu\n-(a29k)', `#cpu (alpha)', `#cpu (arm)', `#cpu (clipper)', `#cpu\n-(convex)', `#cpu (elxsi)', `#cpu (tron)', `#cpu (h8300)', `#cpu\n-(i370)', `#cpu (i386)', `#cpu (i860)', `#cpu (i960)', `#cpu (m68k)',\n-`#cpu (m88k)', `#cpu (mips)', `#cpu (ns32k)', `#cpu (hppa)', `#cpu\n-(pyr)', `#cpu (ibm032)', `#cpu (rs6000)', `#cpu (sh)', `#cpu (sparc)',\n-`#cpu (spur)', `#cpu (tahoe)', `#cpu (vax)', `#cpu (we32000)'.\n-\n-   You can create assertions within a C program using `#assert', like\n-this:\n-\n-     #assert PREDICATE (ANSWER)\n-\n-(Note the absence of a `#' before PREDICATE.)\n-\n-   Each time you do this, you assert a new true answer for PREDICATE.\n-Asserting one answer does not invalidate previously asserted answers;\n-they all remain true.  The only way to remove an assertion is with\n-`#unassert'.  `#unassert' has the same syntax as `#assert'.  You can\n-also remove all assertions about PREDICATE like this:\n-\n-     #unassert PREDICATE\n-\n-   You can also add or cancel assertions using command options when you\n-run `gcc' or `cpp'.  *Note Invocation::.\n-\n-\u001f\n-File: cpp.info,  Node: #error Directive,  Prev: Assertions,  Up: Conditionals\n-\n-The `#error' and `#warning' Directives\n---------------------------------------\n-\n-   The directive `#error' causes the preprocessor to report a fatal\n-error.  The rest of the line that follows `#error' is used as the error\n-message.  The line must consist of complete tokens.\n-\n-   You would use `#error' inside of a conditional that detects a\n-combination of parameters which you know the program does not properly\n-support.  For example, if you know that the program will not run\n-properly on a Vax, you might write\n-\n-     #ifdef __vax__\n-     #error \"Won't work on Vaxen.  See comments at get_last_object.\"\n-     #endif\n-\n-*Note Nonstandard Predefined::, for why this works.\n-\n-   If you have several configuration parameters that must be set up by\n-the installation in a consistent way, you can use conditionals to detect\n-an inconsistency and report it with `#error'.  For example,\n-\n-     #if HASH_TABLE_SIZE % 2 == 0 || HASH_TABLE_SIZE % 3 == 0 \\\n-         || HASH_TABLE_SIZE % 5 == 0\n-     #error HASH_TABLE_SIZE should not be divisible by a small prime\n-     #endif\n-\n-   The directive `#warning' is like the directive `#error', but causes\n-the preprocessor to issue a warning and continue preprocessing.  The\n-rest of the line that follows `#warning' is used as the warning message.\n-\n-   You might use `#warning' in obsolete header files, with a message\n-directing the user to the header file which should be used instead.\n-\n-\u001f\n-File: cpp.info,  Node: Combining Sources,  Next: Other Directives,  Prev: Conditionals,  Up: Top\n-\n-Combining Source Files\n-======================\n-\n-   One of the jobs of the C preprocessor is to inform the C compiler of\n-where each line of C code came from: which source file and which line\n-number.\n-\n-   C code can come from multiple source files if you use `#include';\n-both `#include' and the use of conditionals and macros can cause the\n-line number of a line in the preprocessor output to be different from\n-the line's number in the original source file.  You will appreciate the\n-value of making both the C compiler (in error messages) and symbolic\n-debuggers such as GDB use the line numbers in your source file.\n-\n-   The C preprocessor builds on this feature by offering a directive by\n-which you can control the feature explicitly.  This is useful when a\n-file for input to the C preprocessor is the output from another program\n-such as the `bison' parser generator, which operates on another file\n-that is the true source file.  Parts of the output from `bison' are\n-generated from scratch, other parts come from a standard parser file.\n-The rest are copied nearly verbatim from the source file, but their\n-line numbers in the `bison' output are not the same as their original\n-line numbers.  Naturally you would like compiler error messages and\n-symbolic debuggers to know the original source file and line number of\n-each line in the `bison' input.\n-\n-   `bison' arranges this by writing `#line' directives into the output\n-file.  `#line' is a directive that specifies the original line number\n-and source file name for subsequent input in the current preprocessor\n-input file.  `#line' has three variants:\n-\n-`#line LINENUM'\n-     Here LINENUM is a decimal integer constant.  This specifies that\n-     the line number of the following line of input, in its original\n-     source file, was LINENUM.\n-\n-`#line LINENUM FILENAME'\n-     Here LINENUM is a decimal integer constant and FILENAME is a\n-     string constant.  This specifies that the following line of input\n-     came originally from source file FILENAME and its line number there\n-     was LINENUM.  Keep in mind that FILENAME is not just a file name;\n-     it is surrounded by doublequote characters so that it looks like a\n-     string constant.\n-\n-`#line ANYTHING ELSE'\n-     ANYTHING ELSE is checked for macro calls, which are expanded.  The\n-     result should be a decimal integer constant followed optionally by\n-     a string constant, as described above.\n-\n-   `#line' directives alter the results of the `__FILE__' and\n-`__LINE__' predefined macros from that point on.  *Note Standard\n-Predefined::.\n-\n-   The output of the preprocessor (which is the input for the rest of\n-the compiler) contains directives that look much like `#line'\n-directives.  They start with just `#' instead of `#line', but this is\n-followed by a line number and file name as in `#line'.  *Note Output::.\n-\n-\u001f\n-File: cpp.info,  Node: Other Directives,  Next: Output,  Prev: Combining Sources,  Up: Top\n-\n-Miscellaneous Preprocessing Directives\n-======================================\n-\n-   This section describes three additional preprocessing directives.\n-They are not very useful, but are mentioned for completeness.\n-\n-   The \"null directive\" consists of a `#' followed by a Newline, with\n-only whitespace (including comments) in between.  A null directive is\n-understood as a preprocessing directive but has no effect on the\n-preprocessor output.  The primary significance of the existence of the\n-null directive is that an input line consisting of just a `#' will\n-produce no output, rather than a line of output containing just a `#'.\n-Supposedly some old C programs contain such lines.\n-\n-   The ANSI standard specifies that the effect of the `#pragma'\n-directive is implementation-defined.  In the GNU C preprocessor,\n-`#pragma' directives are not used, except for `#pragma once' (*note\n-Once-Only::.).  However, they are left in the preprocessor output, so\n-they are available to the compilation pass.\n-\n-   The `#ident' directive is supported for compatibility with certain\n-other systems.  It is followed by a line of text.  On some systems, the\n-text is copied into a special place in the object file; on most systems,\n-the text is ignored and this directive has no effect.  Typically\n-`#ident' is only used in header files supplied with those systems where\n-it is meaningful.\n-\n-\u001f\n-File: cpp.info,  Node: Output,  Next: Invocation,  Prev: Other Directives,  Up: Top\n-\n-C Preprocessor Output\n-=====================\n-\n-   The output from the C preprocessor looks much like the input, except\n-that all preprocessing directive lines have been replaced with blank\n-lines and all comments with spaces.  Whitespace within a line is not\n-altered; however, unless `-traditional' is used, spaces may be inserted\n-into the expansions of macro calls to prevent tokens from being\n-concatenated.\n-\n-   Source file name and line number information is conveyed by lines of\n-the form\n-\n-     # LINENUM FILENAME FLAGS\n-\n-which are inserted as needed into the middle of the input (but never\n-within a string or character constant).  Such a line means that the\n-following line originated in file FILENAME at line LINENUM.\n-\n-   After the file name comes zero or more flags, which are `1', `2',\n-`3', or `4'.  If there are multiple flags, spaces separate them.  Here\n-is what the flags mean:\n-\n-`1'\n-     This indicates the start of a new file.\n-\n-`2'\n-     This indicates returning to a file (after having included another\n-     file).\n-\n-`3'\n-     This indicates that the following text comes from a system header\n-     file, so certain warnings should be suppressed.\n-\n-`4'\n-     This indicates that the following text should be treated as C.\n-"}, {"sha": "9f0fa14b2bf76af4b460852b312450f0565dec21", "filename": "gcc/cpp.info-3", "status": "removed", "additions": 0, "deletions": 478, "changes": 478, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fcpp.info-3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fcpp.info-3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.info-3?ref=bb84e66919817020267815eed4304e543688e722", "patch": "@@ -1,478 +0,0 @@\n-This is Info file cpp.info, produced by Makeinfo version 1.67 from the\n-input file cpp.texi.\n-\n-   This file documents the GNU C Preprocessor.\n-\n-   Copyright 1987, 1989, 1991, 1992, 1993, 1994, 1995 Free Software\n-Foundation, Inc.\n-\n-   Permission is granted to make and distribute verbatim copies of this\n-manual provided the copyright notice and this permission notice are\n-preserved on all copies.\n-\n-   Permission is granted to copy and distribute modified versions of\n-this manual under the conditions for verbatim copying, provided also\n-that the entire resulting derived work is distributed under the terms\n-of a permission notice identical to this one.\n-\n-   Permission is granted to copy and distribute translations of this\n-manual into another language, under the above conditions for modified\n-versions.\n-\n-\u001f\n-File: cpp.info,  Node: Invocation,  Next: Concept Index,  Prev: Output,  Up: Top\n-\n-Invoking the C Preprocessor\n-===========================\n-\n-   Most often when you use the C preprocessor you will not have to\n-invoke it explicitly: the C compiler will do so automatically.\n-However, the preprocessor is sometimes useful on its own.\n-\n-   The C preprocessor expects two file names as arguments, INFILE and\n-OUTFILE.  The preprocessor reads INFILE together with any other files\n-it specifies with `#include'.  All the output generated by the combined\n-input files is written in OUTFILE.\n-\n-   Either INFILE or OUTFILE may be `-', which as INFILE means to read\n-from standard input and as OUTFILE means to write to standard output.\n-Also, if OUTFILE or both file names are omitted, the standard output\n-and standard input are used for the omitted file names.\n-\n-   Here is a table of command options accepted by the C preprocessor.\n-These options can also be given when compiling a C program; they are\n-passed along automatically to the preprocessor when it is invoked by the\n-compiler.\n-\n-`-P'\n-     Inhibit generation of `#'-lines with line-number information in\n-     the output from the preprocessor (*note Output::.).  This might be\n-     useful when running the preprocessor on something that is not C\n-     code and will be sent to a program which might be confused by the\n-     `#'-lines.\n-\n-`-C'\n-     Do not discard comments: pass them through to the output file.\n-     Comments appearing in arguments of a macro call will be copied to\n-     the output before the expansion of the macro call.\n-\n-`-traditional'\n-     Try to imitate the behavior of old-fashioned C, as opposed to ANSI\n-     C.\n-\n-        * Traditional macro expansion pays no attention to singlequote\n-          or doublequote characters; macro argument symbols are\n-          replaced by the argument values even when they appear within\n-          apparent string or character constants.\n-\n-        * Traditionally, it is permissible for a macro expansion to end\n-          in the middle of a string or character constant.  The\n-          constant continues into the text surrounding the macro call.\n-\n-        * However, traditionally the end of the line terminates a\n-          string or character constant, with no error.\n-\n-        * In traditional C, a comment is equivalent to no text at all.\n-          (In ANSI C, a comment counts as whitespace.)\n-\n-        * Traditional C does not have the concept of a \"preprocessing\n-          number\".  It considers `1.0e+4' to be three tokens: `1.0e',\n-          `+', and `4'.\n-\n-        * A macro is not suppressed within its own definition, in\n-          traditional C.  Thus, any macro that is used recursively\n-          inevitably causes an error.\n-\n-        * The character `#' has no special meaning within a macro\n-          definition in traditional C.\n-\n-        * In traditional C, the text at the end of a macro expansion\n-          can run together with the text after the macro call, to\n-          produce a single token.  (This is impossible in ANSI C.)\n-\n-        * Traditionally, `\\' inside a macro argument suppresses the\n-          syntactic significance of the following character.\n-\n-`-trigraphs'\n-     Process ANSI standard trigraph sequences.  These are\n-     three-character sequences, all starting with `??', that are\n-     defined by ANSI C to stand for single characters.  For example,\n-     `??/' stands for `\\', so `'??/n'' is a character constant for a\n-     newline.  Strictly speaking, the GNU C preprocessor does not\n-     support all programs in ANSI Standard C unless `-trigraphs' is\n-     used, but if you ever notice the difference it will be with relief.\n-\n-     You don't want to know any more about trigraphs.\n-\n-`-pedantic'\n-     Issue warnings required by the ANSI C standard in certain cases\n-     such as when text other than a comment follows `#else' or `#endif'.\n-\n-`-pedantic-errors'\n-     Like `-pedantic', except that errors are produced rather than\n-     warnings.\n-\n-`-Wtrigraphs'\n-     Warn if any trigraphs are encountered (assuming they are enabled).\n-\n-`-Wcomment'\n-     Warn whenever a comment-start sequence `/*' appears in a `/*'\n-     comment, or whenever a Backslash-Newline appears in a `//' comment.\n-\n-`-Wall'\n-     Requests both `-Wtrigraphs' and `-Wcomment' (but not\n-     `-Wtraditional' or `-Wundef').\n-\n-`-Wtraditional'\n-     Warn about certain constructs that behave differently in\n-     traditional and ANSI C.\n-\n-`-Wundef'\n-     Warn if an undefined identifier is evaluated in an `#if' directive.\n-\n-`-I DIRECTORY'\n-     Add the directory DIRECTORY to the head of the list of directories\n-     to be searched for header files (*note Include Syntax::.).  This\n-     can be used to override a system header file, substituting your\n-     own version, since these directories are searched before the system\n-     header file directories.  If you use more than one `-I' option,\n-     the directories are scanned in left-to-right order; the standard\n-     system directories come after.\n-\n-`-I-'\n-     Any directories specified with `-I' options before the `-I-'\n-     option are searched only for the case of `#include \"FILE\"'; they\n-     are not searched for `#include <FILE>'.\n-\n-     If additional directories are specified with `-I' options after\n-     the `-I-', these directories are searched for all `#include'\n-     directives.\n-\n-     In addition, the `-I-' option inhibits the use of the current\n-     directory as the first search directory for `#include \"FILE\"'.\n-     Therefore, the current directory is searched only if it is\n-     requested explicitly with `-I.'.  Specifying both `-I-' and `-I.'\n-     allows you to control precisely which directories are searched\n-     before the current one and which are searched after.\n-\n-`-nostdinc'\n-     Do not search the standard system directories for header files.\n-     Only the directories you have specified with `-I' options (and the\n-     current directory, if appropriate) are searched.\n-\n-`-nostdinc++'\n-     Do not search for header files in the C++-specific standard\n-     directories, but do still search the other standard directories.\n-     (This option is used when building libg++.)\n-\n-`-D NAME'\n-     Predefine NAME as a macro, with definition `1'.\n-\n-`-D NAME=DEFINITION'\n-     Predefine NAME as a macro, with definition DEFINITION.  There are\n-     no restrictions on the contents of DEFINITION, but if you are\n-     invoking the preprocessor from a shell or shell-like program you\n-     may need to use the shell's quoting syntax to protect characters\n-     such as spaces that have a meaning in the shell syntax.  If you\n-     use more than one `-D' for the same NAME, the rightmost definition\n-     takes effect.\n-\n-`-U NAME'\n-     Do not predefine NAME.  If both `-U' and `-D' are specified for\n-     one name, the `-U' beats the `-D' and the name is not predefined.\n-\n-`-undef'\n-     Do not predefine any nonstandard macros.\n-\n-`-A PREDICATE(ANSWER)'\n-     Make an assertion with the predicate PREDICATE and answer ANSWER.\n-     *Note Assertions::.\n-\n-     You can use `-A-' to disable all predefined assertions; it also\n-     undefines all predefined macros that identify the type of target\n-     system.\n-\n-`-dM'\n-     Instead of outputting the result of preprocessing, output a list of\n-     `#define' directives for all the macros defined during the\n-     execution of the preprocessor, including predefined macros.  This\n-     gives you a way of finding out what is predefined in your version\n-     of the preprocessor; assuming you have no file `foo.h', the command\n-\n-          touch foo.h; cpp -dM foo.h\n-\n-     will show the values of any predefined macros.\n-\n-`-dD'\n-     Like `-dM' except in two respects: it does *not* include the\n-     predefined macros, and it outputs *both* the `#define' directives\n-     and the result of preprocessing.  Both kinds of output go to the\n-     standard output file.\n-\n-`-dI'\n-     Output `#include' directives in addition to the result of\n-     preprocessing.\n-\n-`-M [-MG]'\n-     Instead of outputting the result of preprocessing, output a rule\n-     suitable for `make' describing the dependencies of the main source\n-     file.  The preprocessor outputs one `make' rule containing the\n-     object file name for that source file, a colon, and the names of\n-     all the included files.  If there are many included files then the\n-     rule is split into several lines using `\\'-newline.\n-\n-     `-MG' says to treat missing header files as generated files and\n-     assume they live in the same directory as the source file.  It\n-     must be specified in addition to `-M'.\n-\n-     This feature is used in automatic updating of makefiles.\n-\n-`-MM [-MG]'\n-     Like `-M' but mention only the files included with `#include\n-     \"FILE\"'.  System header files included with `#include <FILE>' are\n-     omitted.\n-\n-`-MD FILE'\n-     Like `-M' but the dependency information is written to FILE.  This\n-     is in addition to compiling the file as specified--`-MD' does not\n-     inhibit ordinary compilation the way `-M' does.\n-\n-     When invoking gcc, do not specify the FILE argument.  Gcc will\n-     create file names made by replacing \".c\" with \".d\" at the end of\n-     the input file names.\n-\n-     In Mach, you can use the utility `md' to merge multiple dependency\n-     files into a single dependency file suitable for using with the\n-     `make' command.\n-\n-`-MMD FILE'\n-     Like `-MD' except mention only user header files, not system\n-     header files.\n-\n-`-H'\n-     Print the name of each header file used, in addition to other\n-     normal activities.\n-\n-`-imacros FILE'\n-     Process FILE as input, discarding the resulting output, before\n-     processing the regular input file.  Because the output generated\n-     from FILE is discarded, the only effect of `-imacros FILE' is to\n-     make the macros defined in FILE available for use in the main\n-     input.\n-\n-`-include FILE'\n-     Process FILE as input, and include all the resulting output,\n-     before processing the regular input file.\n-\n-`-idirafter DIR'\n-     Add the directory DIR to the second include path.  The directories\n-     on the second include path are searched when a header file is not\n-     found in any of the directories in the main include path (the one\n-     that `-I' adds to).\n-\n-`-iprefix PREFIX'\n-     Specify PREFIX as the prefix for subsequent `-iwithprefix' options.\n-\n-`-iwithprefix DIR'\n-     Add a directory to the second include path.  The directory's name\n-     is made by concatenating PREFIX and DIR, where PREFIX was\n-     specified previously with `-iprefix'.\n-\n-`-isystem DIR'\n-     Add a directory to the beginning of the second include path,\n-     marking it as a system directory, so that it gets the same special\n-     treatment as is applied to the standard system directories.\n-\n-`-lang-c'\n-`-lang-c89'\n-`-lang-c++'\n-`-lang-objc'\n-`-lang-objc++'\n-     Specify the source language.  `-lang-c' is the default; it allows\n-     recognition of C++ comments (comments that begin with `//' and end\n-     at end of line) and hexadecimal floating-point constants, since\n-     these features will most likely appear in the next C standard.\n-     `-lang-c89' disables recognition of C++ comments and hexadecimal\n-     floating-point constants.  `-lang-c++' handles C++ comment syntax\n-     and includes extra default include directories for C++.\n-     `-lang-objc' enables the Objective C `#import' directive.\n-     `-lang-objc++' enables both C++ and Objective C extensions.\n-\n-     These options are generated by the compiler driver `gcc', but not\n-     passed from the `gcc' command line unless you use the driver's\n-     `-Wp' option.\n-\n-`-lint'\n-     Look for commands to the program checker `lint' embedded in\n-     comments, and emit them preceded by `#pragma lint'.  For example,\n-     the comment `/* NOTREACHED */' becomes `#pragma lint NOTREACHED'.\n-\n-     This option is available only when you call `cpp' directly; `gcc'\n-     will not pass it from its command line.\n-\n-`-$'\n-     Forbid the use of `$' in identifiers.  This was formerly required\n-     for strict conformance to the C Standard before the standard was\n-     corrected.\n-\n-     This option is available only when you call `cpp' directly; `gcc'\n-     will not pass it from its command line.\n-\n-\u001f\n-File: cpp.info,  Node: Concept Index,  Next: Index,  Prev: Invocation,  Up: Top\n-\n-Concept Index\n-*************\n-\n-* Menu:\n-\n-* ##:                                    Concatenation.\n-* arguments in macro definitions:        Argument Macros.\n-* assertions:                            Assertions.\n-* assertions, undoing:                   Assertions.\n-* blank macro arguments:                 Argument Macros.\n-* cascaded macros:                       Cascaded Macros.\n-* commenting out code:                   Deleted Code.\n-* computed #include:                     Include Syntax.\n-* concatenation:                         Concatenation.\n-* conditionals:                          Conditionals.\n-* directives:                            Directives.\n-* expansion of arguments:                Argument Prescan.\n-* function-like macro:                   Argument Macros.\n-* header file:                           Header Files.\n-* including just once:                   Once-Only.\n-* inheritance:                           Inheritance.\n-* invocation of the preprocessor:        Invocation.\n-* line control:                          Combining Sources.\n-* macro argument expansion:              Argument Prescan.\n-* macro body uses macro:                 Cascaded Macros.\n-* macros with argument:                  Argument Macros.\n-* manifest constant:                     Simple Macros.\n-* newlines in macro arguments:           Newlines in Args.\n-* null directive:                        Other Directives.\n-* options:                               Invocation.\n-* output format:                         Output.\n-* overriding a header file:              Inheritance.\n-* parentheses in macro bodies:           Macro Parentheses.\n-* pitfalls of macros:                    Macro Pitfalls.\n-* predefined macros:                     Predefined.\n-* predicates:                            Assertions.\n-* preprocessing directives:              Directives.\n-* prescan of macro arguments:            Argument Prescan.\n-* problems with macros:                  Macro Pitfalls.\n-* redefining macros:                     Redefining.\n-* repeated inclusion:                    Once-Only.\n-* retracting assertions:                 Assertions.\n-* second include path:                   Invocation.\n-* self-reference:                        Self-Reference.\n-* semicolons (after macro calls):        Swallow Semicolon.\n-* side effects (in macro arguments):     Side Effects.\n-* simple macro:                          Simple Macros.\n-* space as macro argument:               Argument Macros.\n-* standard predefined macros:            Standard Predefined.\n-* stringification:                       Stringification.\n-* testing predicates:                    Assertions.\n-* unassert:                              Assertions.\n-* undefining macros:                     Undefining.\n-* unsafe macros:                         Side Effects.\n-\n-\u001f\n-File: cpp.info,  Node: Index,  Prev: Concept Index,  Up: Top\n-\n-Index of Directives, Macros and Options\n-***************************************\n-\n-* Menu:\n-\n-* #assert:                               Assertions.\n-* #cpu:                                  Assertions.\n-* #define:                               Argument Macros.\n-* #elif:                                 #elif Directive.\n-* #else:                                 #else Directive.\n-* #error:                                #error Directive.\n-* #ident:                                Other Directives.\n-* #if:                                   Conditional Syntax.\n-* #ifdef:                                Conditionals-Macros.\n-* #ifndef:                               Conditionals-Macros.\n-* #import:                               Once-Only.\n-* #include:                              Include Syntax.\n-* #include_next:                         Inheritance.\n-* #line:                                 Combining Sources.\n-* #machine:                              Assertions.\n-* #pragma:                               Other Directives.\n-* #pragma once:                          Once-Only.\n-* #system:                               Assertions.\n-* #unassert:                             Assertions.\n-* #warning:                              #error Directive.\n-* -$:                                    Invocation.\n-* -A:                                    Invocation.\n-* -C:                                    Invocation.\n-* -D:                                    Invocation.\n-* -dD:                                   Invocation.\n-* -dI:                                   Invocation.\n-* -dM:                                   Invocation.\n-* -H:                                    Invocation.\n-* -I:                                    Invocation.\n-* -idirafter:                            Invocation.\n-* -imacros:                              Invocation.\n-* -include:                              Invocation.\n-* -iprefix:                              Invocation.\n-* -isystem:                              Invocation.\n-* -iwithprefix:                          Invocation.\n-* -lang-c:                               Invocation.\n-* -lang-c++:                             Invocation.\n-* -lang-c89:                             Invocation.\n-* -lang-objc:                            Invocation.\n-* -lang-objc++:                          Invocation.\n-* -M:                                    Invocation.\n-* -MD:                                   Invocation.\n-* -MM:                                   Invocation.\n-* -MMD:                                  Invocation.\n-* -nostdinc:                             Invocation.\n-* -nostdinc++:                           Invocation.\n-* -P:                                    Invocation.\n-* -pedantic:                             Invocation.\n-* -pedantic-errors:                      Invocation.\n-* -traditional:                          Invocation.\n-* -trigraphs:                            Invocation.\n-* -U:                                    Invocation.\n-* -undef:                                Invocation.\n-* -Wall:                                 Invocation.\n-* -Wcomment:                             Invocation.\n-* -Wtraditional:                         Invocation.\n-* -Wtrigraphs:                           Invocation.\n-* -Wundef:                               Invocation.\n-* __BASE_FILE__:                         Standard Predefined.\n-* __CHAR_UNSIGNED__:                     Standard Predefined.\n-* __cplusplus:                           Standard Predefined.\n-* __DATE__:                              Standard Predefined.\n-* __FILE__:                              Standard Predefined.\n-* __GNUC__:                              Standard Predefined.\n-* __GNUC_MINOR__:                        Standard Predefined.\n-* __GNUG__:                              Standard Predefined.\n-* __INCLUDE_LEVEL_:                      Standard Predefined.\n-* __LINE__:                              Standard Predefined.\n-* __OPTIMIZE__:                          Standard Predefined.\n-* __REGISTER_PREFIX__:                   Standard Predefined.\n-* __STDC__:                              Standard Predefined.\n-* __STDC_VERSION__:                      Standard Predefined.\n-* __STRICT_ANSI__:                       Standard Predefined.\n-* __TIME__:                              Standard Predefined.\n-* __USER_LABEL_PREFIX__:                 Standard Predefined.\n-* __VERSION__:                           Standard Predefined.\n-* _AM29000:                              Nonstandard Predefined.\n-* _AM29K:                                Nonstandard Predefined.\n-* BSD:                                   Nonstandard Predefined.\n-* defined:                               Conditionals-Macros.\n-* M68020:                                Nonstandard Predefined.\n-* m68k:                                  Nonstandard Predefined.\n-* mc68000:                               Nonstandard Predefined.\n-* ns32000:                               Nonstandard Predefined.\n-* pyr:                                   Nonstandard Predefined.\n-* sequent:                               Nonstandard Predefined.\n-* sun:                                   Nonstandard Predefined.\n-* system header files:                   Header Uses.\n-* unix:                                  Nonstandard Predefined.\n-* vax:                                   Nonstandard Predefined.\n-\n-"}, {"sha": "0a930367452deacaea574b234ac3141045c5b6ac", "filename": "gcc/cpplib.c", "status": "modified", "additions": 129, "deletions": 103, "changes": 232, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -80,11 +80,16 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #endif /* USG */\n #endif /* not VMS */\n \n+#if HAVE_LIMITS_H\n+# include <limits.h>\n+#endif\n+\n /* This defines \"errno\" properly for VMS, and gives us EACCES.  */\n #include <errno.h>\n \n extern char *index ();\n extern char *rindex ();\n+extern char *update_path ();\n \n #ifndef O_RDONLY\n #define O_RDONLY 0\n@@ -95,18 +100,26 @@ extern char *rindex ();\n #define MIN(X,Y) ((X) < (Y) ? (X) : (Y))\n #define MAX(X,Y) ((X) > (Y) ? (X) : (Y))\n \n-/* Find the largest host integer type and set its size and type.  */\n-\n-#ifndef HOST_BITS_PER_WIDE_INT\n-\n-#if HOST_BITS_PER_LONG > HOST_BITS_PER_INT\n-#define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_LONG\n-#define HOST_WIDE_INT long\n-#else\n-#define HOST_BITS_PER_WIDE_INT HOST_BITS_PER_INT\n-#define HOST_WIDE_INT int\n-#endif\n-\n+/* Find the largest host integer type and set its size and type.\n+   Watch out: on some crazy hosts `long' is shorter than `int'.  */\n+\n+#ifndef HOST_WIDE_INT\n+# if HAVE_INTTYPES_H\n+#  include <inttypes.h>\n+#  define HOST_WIDE_INT intmax_t\n+# else\n+#  if (HOST_BITS_PER_LONG <= HOST_BITS_PER_INT \\\n+       && HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_INT)\n+#   define HOST_WIDE_INT int\n+#  else\n+#  if (HOST_BITS_PER_LONGLONG <= HOST_BITS_PER_LONG \\\n+       || ! (defined LONG_LONG_MAX || defined LLONG_MAX))\n+#   define HOST_WIDE_INT long\n+#  else\n+#   define HOST_WIDE_INT long long\n+#  endif\n+#  endif\n+# endif\n #endif\n \n #ifndef S_ISREG\n@@ -242,36 +255,35 @@ struct cpp_pending {\n \n /* Forward declarations.  */\n \n-extern char *xmalloc ();\n+char *xmalloc ();\n+void cpp_fatal ();\n+void cpp_file_line_for_message PARAMS ((cpp_reader *, char *, int, int));\n+void cpp_hash_cleanup PARAMS ((cpp_reader *));\n+void cpp_message ();\n+void cpp_print_containing_files PARAMS ((cpp_reader *));\n \n static void add_import ();\n static void append_include_chain ();\n-static void make_undef ();\n static void make_assertion ();\n static void path_include ();\n static void initialize_builtins ();\n static void initialize_char_syntax ();\n-static void dump_arg_n ();\n-static void dump_defn_1 ();\n extern void delete_macro ();\n+#if 0\n static void trigraph_pcp ();\n+#endif\n static int finclude ();\n static void validate_else ();\n static int comp_def_part ();\n #ifdef abort\n extern void fancy_abort ();\n #endif\n-static void pipe_closed ();\n-static void print_containing_files ();\n static int lookup_import ();\n static int redundant_include_p ();\n static is_system_include ();\n static struct file_name_map *read_name_map ();\n static char *read_filename_string ();\n static int open_include_file ();\n-static int check_preconditions ();\n-static void pcfinclude ();\n-static void pcstring_used ();\n static int check_macro_name ();\n static int compare_defs ();\n static int compare_token_lists ();\n@@ -352,6 +364,7 @@ struct file_name_list\n /* The */\n static struct default_include {\n   char *fname;\t\t\t/* The name of the directory.  */\n+  char *component;\t\t/* The component containing the directory */\n   int cplusplus;\t\t/* Only look here if we're compiling C++.  */\n   int cxx_aware;\t\t/* Includes in this directory don't need to\n \t\t\t\t   be wrapped in extern \"C\" when compiling\n@@ -362,40 +375,43 @@ static struct default_include {\n #else\n   = {\n     /* Pick up GNU C++ specific include files.  */\n-    { GPLUSPLUS_INCLUDE_DIR, 1, 1 },\n-    { OLD_GPLUSPLUS_INCLUDE_DIR, 1, 1 },\n+    { GPLUSPLUS_INCLUDE_DIR, \"G++\", 1, 1 },\n+    { OLD_GPLUSPLUS_INCLUDE_DIR, 0, 1, 1 },\n #ifdef CROSS_COMPILE\n     /* This is the dir for fixincludes.  Put it just before\n        the files that we fix.  */\n-    { GCC_INCLUDE_DIR, 0, 0 },\n+    { GCC_INCLUDE_DIR, \"GCC\", 0, 0 },\n     /* For cross-compilation, this dir name is generated\n        automatically in Makefile.in.  */\n-    { CROSS_INCLUDE_DIR, 0, 0 },\n+    { CROSS_INCLUDE_DIR, \"GCC\",0, 0 },\n #ifdef TOOL_INCLUDE_DIR\n     /* This is another place that the target system's headers might be.  */\n-    { TOOL_INCLUDE_DIR, 0, 1 },\n+    { TOOL_INCLUDE_DIR, \"BINUTILS\", 0, 1 },\n #endif\n #else /* not CROSS_COMPILE */\n #ifdef LOCAL_INCLUDE_DIR\n     /* This should be /usr/local/include and should come before\n        the fixincludes-fixed header files.  */\n-    { LOCAL_INCLUDE_DIR, 0, 1 },\n+    { LOCAL_INCLUDE_DIR, 0, 0, 1 },\n #endif\n #ifdef TOOL_INCLUDE_DIR\n     /* This is here ahead of GCC_INCLUDE_DIR because assert.h goes here.\n        Likewise, behind LOCAL_INCLUDE_DIR, where glibc puts its assert.h.  */\n-    { TOOL_INCLUDE_DIR, 0, 1 },\n+    { TOOL_INCLUDE_DIR, \"BINUTILS\", 0, 1 },\n #endif\n     /* This is the dir for fixincludes.  Put it just before\n        the files that we fix.  */\n-    { GCC_INCLUDE_DIR, 0, 0 },\n+    { GCC_INCLUDE_DIR, \"GCC\", 0, 0 },\n     /* Some systems have an extra dir of include files.  */\n #ifdef SYSTEM_INCLUDE_DIR\n-    { SYSTEM_INCLUDE_DIR, 0, 0 },\n+    { SYSTEM_INCLUDE_DIR, 0, 0, 0 },\n #endif\n-    { STANDARD_INCLUDE_DIR, 0, 0 },\n+#ifndef STANDARD_INCLUDE_COMPONENT\n+#define STANDARD_INCLUDE_COMPONENT 0\n+#endif\n+    { STANDARD_INCLUDE_DIR, STANDARD_INCLUDE_COMPONENT, 0, 0 },\n #endif /* not CROSS_COMPILE */\n-    { 0, 0, 0 }\n+    { 0, 0, 0, 0 }\n     };\n #endif /* no INCLUDE_DEFAULTS */\n \n@@ -407,15 +423,15 @@ struct directive {\n   char *name;\t\t\t/* Name of directive */\n   enum node_type type;\t\t/* Code which describes which directive.  */\n   char command_reads_line;      /* One if rest of line is read by func.  */\n-  char traditional_comments;\t/* Nonzero: keep comments if -traditional.  */\n-  char pass_thru;\t\t/* Copy preprocessed directive to output file.*/\n };\n \n+#define IS_INCLUDE_DIRECTIVE_TYPE(t) (T_INCLUDE <= (t) && (t) <= T_IMPORT)\n+\n /* Here is the actual list of #-directives, most-often-used first.\n    The initialize_builtins function assumes #define is the very first.  */\n \n static struct directive directive_table[] = {\n-  {  6, do_define, \"define\", T_DEFINE, 0, 1},\n+  {  6, do_define, \"define\", T_DEFINE},\n   {  5, do_xifdef, \"ifdef\", T_IFDEF, 1},\n   {  6, do_xifdef, \"ifndef\", T_IFNDEF, 1},\n   {  7, do_include, \"include\", T_INCLUDE, 1},\n@@ -428,9 +444,9 @@ static struct directive directive_table[] = {\n   {  5, do_undef, \"undef\", T_UNDEF},\n   {  5, do_error, \"error\", T_ERROR},\n   {  7, do_warning, \"warning\", T_WARNING},\n-  {  6, do_pragma, \"pragma\", T_PRAGMA, 0, 0, 1},\n+  {  6, do_pragma, \"pragma\", T_PRAGMA},\n   {  4, do_line, \"line\", T_LINE, 1},\n-  {  5, do_ident, \"ident\", T_IDENT, 1, 0, 1},\n+  {  5, do_ident, \"ident\", T_IDENT, 1},\n #ifdef SCCS_DIRECTIVE\n   {  4, do_sccs, \"sccs\", T_SCCS},\n #endif\n@@ -510,7 +526,7 @@ quote_string (pfile, src)\n \t  CPP_PUTC_Q (pfile, c);\n \telse\n \t  {\n-\t    sprintf ((char *) CPP_PWRITTEN (pfile), \"\\\\%03o\", c);\n+\t    sprintf ((char *)CPP_PWRITTEN (pfile), \"\\\\%03o\", c);\n \t    CPP_ADJUST_WRITTEN (pfile, 4);\n \t  }\n \tbreak;\n@@ -981,7 +997,7 @@ copy_rest_of_line (pfile)\n \t  break;\n \tcase '/':\n \t  nextc = PEEKC();\n-\t  if (nextc == '*' || (opts->cplusplus_comments && nextc == '*'))\n+\t  if (nextc == '*' || (opts->cplusplus_comments && nextc == '/'))\n \t    goto scan_directive_token;\n \t  break;\n \tcase '\\f':\n@@ -1091,45 +1107,47 @@ handle_directive (pfile)\n     {\n       /* Nonzero means do not delete comments within the directive.\n          #define needs this when -traditional.  */\n-\tint comments = CPP_TRADITIONAL (pfile) && kt->traditional_comments; \n+\tint comments = CPP_TRADITIONAL (pfile) && kt->type == T_DEFINE;\n \tint save_put_out_comments = CPP_OPTIONS (pfile)->put_out_comments;\n \tCPP_OPTIONS (pfile)->put_out_comments = comments;\n \tafter_ident = CPP_WRITTEN (pfile);\n \tcopy_rest_of_line (pfile);\n \tCPP_OPTIONS (pfile)->put_out_comments = save_put_out_comments;\n     }\n \n-  /* For #pragma and #define, we may want to pass through the directive.\n+  /* We may want to pass through #define, #pragma, and #include.\n      Other directives may create output, but we don't want the directive\n-     itself out, so we pop it now.  For example #include may write a #line\n-     command (see comment in do_include), and conditionals may emit\n+     itself out, so we pop it now.  For example conditionals may emit\n      #failed ... #endfailed stuff.  But note that popping the buffer\n      means the parameters to kt->func may point after pfile->limit\n      so these parameters are invalid as soon as something gets appended\n      to the token_buffer.  */\n \n   line_end = CPP_PWRITTEN (pfile);\n-  if (!kt->pass_thru && kt->type != T_DEFINE)\n+  if (! (kt->type == T_DEFINE\n+\t || kt->type == T_PRAGMA\n+\t || (IS_INCLUDE_DIRECTIVE_TYPE (kt->type)\n+\t     && CPP_OPTIONS (pfile)->dump_includes)))\n     CPP_SET_WRITTEN (pfile, old_written);\n \n   (*kt->func) (pfile, kt, pfile->token_buffer + after_ident, line_end);\n-  if (kt->pass_thru\n-      || (kt->type == T_DEFINE\n-\t  && CPP_OPTIONS (pfile)->dump_macros == dump_definitions))\n-    {\n-      /* Just leave the entire #define in the output stack.  */\n-    }\n-  else if (kt->type == T_DEFINE\n-\t   && CPP_OPTIONS (pfile)->dump_macros == dump_names)\n+\n+  if (kt->type == T_DEFINE)\n     {\n-      U_CHAR *p = pfile->token_buffer + old_written + 7;  /* Skip \"#define\". */\n-      SKIP_WHITE_SPACE (p);\n-      while (is_idchar[*p]) p++;\n-      pfile->limit = p;\n-      CPP_PUTC (pfile, '\\n');\n+      if (CPP_OPTIONS (pfile)->dump_macros == dump_names)\n+\t{\n+\t  /* Skip \"#define\". */\n+\t  U_CHAR *p = pfile->token_buffer + old_written + 7;\n+\n+\t  SKIP_WHITE_SPACE (p);\n+\t  while (is_idchar[*p]) p++;\n+\t  pfile->limit = p;\n+\t  CPP_PUTC (pfile, '\\n');\n+\t}\n+      else if (CPP_OPTIONS (pfile)->dump_macros != dump_definitions)\n+\tCPP_SET_WRITTEN (pfile, old_written);\n     }\n-  else if (kt->type == T_DEFINE)\n-    CPP_SET_WRITTEN (pfile, old_written);\n+\n  done_a_directive:\n   return 1;\n \n@@ -2133,7 +2151,7 @@ output_line_command (pfile, conditional, file_change)\n     CPP_PUTS_Q (pfile, sharp_line, sizeof(sharp_line)-1);\n   }\n \n-  sprintf ((char *) CPP_PWRITTEN (pfile), \"%d \", line);\n+  sprintf ((char *) CPP_PWRITTEN (pfile), \"%ld \", line);\n   CPP_ADJUST_WRITTEN (pfile, strlen (CPP_PWRITTEN (pfile)));\n \n   quote_string (pfile, ip->nominal_fname); \n@@ -2377,6 +2395,12 @@ special_symbol (hp, pfile)\n   case T_CONST:\n       buf = (char *) alloca (4 * sizeof (int));\n       sprintf (buf, \"%d\", hp->value.ival);\n+#ifdef STDC_0_IN_SYSTEM_HEADERS\n+      if (ip->system_header_p\n+\t  && hp->length == 8 && bcmp (hp->name, \"__STDC__\", 8) == 0\n+\t  && ! cpp_lookup (pfile, (U_CHAR *) \"__STRICT_ANSI__\", -1, -1))\n+\tstrcpy (buf, \"0\");\n+#endif\n #if 0\n       if (pcp_inside_if && pcp_outfile)\n \t/* Output a precondition for this macro use */\n@@ -2391,7 +2415,7 @@ special_symbol (hp, pfile)\n \tadjust_position (CPP_LINE_BASE (ip), ip->cur, &line, &col);\n \n \tbuf = (char *) alloca (10);\n-\tsprintf (buf, \"%d\", line);\n+\tsprintf (buf, \"%ld\", line);\n       }\n       break;\n \n@@ -2498,26 +2522,26 @@ static void\n initialize_builtins (pfile)\n      cpp_reader *pfile;\n {\n-  install (\"__LINE__\", -1, T_SPECLINE, 0, 0, -1);\n-  install (\"__DATE__\", -1, T_DATE, 0, 0, -1);\n-  install (\"__FILE__\", -1, T_FILE, 0, 0, -1);\n-  install (\"__BASE_FILE__\", -1, T_BASE_FILE, 0, 0, -1);\n-  install (\"__INCLUDE_LEVEL__\", -1, T_INCLUDE_LEVEL, 0, 0, -1);\n-  install (\"__VERSION__\", -1, T_VERSION, 0, 0, -1);\n+  install ((U_CHAR *)\"__LINE__\", -1, T_SPECLINE, 0, 0, -1);\n+  install ((U_CHAR *)\"__DATE__\", -1, T_DATE, 0, 0, -1);\n+  install ((U_CHAR *)\"__FILE__\", -1, T_FILE, 0, 0, -1);\n+  install ((U_CHAR *)\"__BASE_FILE__\", -1, T_BASE_FILE, 0, 0, -1);\n+  install ((U_CHAR *)\"__INCLUDE_LEVEL__\", -1, T_INCLUDE_LEVEL, 0, 0, -1);\n+  install ((U_CHAR *)\"__VERSION__\", -1, T_VERSION, 0, 0, -1);\n #ifndef NO_BUILTIN_SIZE_TYPE\n-  install (\"__SIZE_TYPE__\", -1, T_SIZE_TYPE, 0, 0, -1);\n+  install ((U_CHAR *)\"__SIZE_TYPE__\", -1, T_SIZE_TYPE, 0, 0, -1);\n #endif\n #ifndef NO_BUILTIN_PTRDIFF_TYPE\n-  install (\"__PTRDIFF_TYPE__ \", -1, T_PTRDIFF_TYPE, 0, 0, -1);\n+  install ((U_CHAR *)\"__PTRDIFF_TYPE__ \", -1, T_PTRDIFF_TYPE, 0, 0, -1);\n #endif\n-  install (\"__WCHAR_TYPE__\", -1, T_WCHAR_TYPE, 0, 0, -1);\n-  install (\"__USER_LABEL_PREFIX__\", -1, T_USER_LABEL_PREFIX_TYPE, 0, 0, -1);\n-  install (\"__REGISTER_PREFIX__\", -1, T_REGISTER_PREFIX_TYPE, 0, 0, -1);\n-  install (\"__TIME__\", -1, T_TIME, 0, 0, -1);\n+  install ((U_CHAR *)\"__WCHAR_TYPE__\", -1, T_WCHAR_TYPE, 0, 0, -1);\n+  install ((U_CHAR *)\"__USER_LABEL_PREFIX__\", -1, T_USER_LABEL_PREFIX_TYPE, 0, 0, -1);\n+  install ((U_CHAR *)\"__REGISTER_PREFIX__\", -1, T_REGISTER_PREFIX_TYPE, 0, 0, -1);\n+  install ((U_CHAR *)\"__TIME__\", -1, T_TIME, 0, 0, -1);\n   if (!CPP_TRADITIONAL (pfile))\n-    install (\"__STDC__\", -1, T_CONST, STDC_VALUE, 0, -1);\n+    install ((U_CHAR *)\"__STDC__\", -1, T_CONST, STDC_VALUE, 0, -1);\n   if (CPP_OPTIONS (pfile)->objc)\n-    install (\"__OBJC__\", -1, T_CONST, 1, 0, -1);\n+    install ((U_CHAR *)\"__OBJC__\", -1, T_CONST, 1, 0, -1);\n /*  This is supplied using a -D by the compiler driver\n     so that it is present only when truly compiling with GNU C.  */\n /*  install (\"__GNUC__\", -1, T_CONST, 2, 0, -1);  */\n@@ -2809,7 +2833,7 @@ macroexpand (pfile, hp)\n \t\t      else\n \t\t\t{\n \t\t\t  CPP_RESERVE (pfile, 4);\n-\t\t\t  sprintf ((char *) CPP_PWRITTEN (pfile), \"\\\\%03o\",\n+\t\t\t  sprintf ((char *)CPP_PWRITTEN (pfile), \"\\\\%03o\",\n \t\t\t\t   (unsigned int) c);\n \t\t\t  CPP_ADJUST_WRITTEN (pfile, 4);\n \t\t\t}\n@@ -3728,7 +3752,7 @@ do_line (pfile, keyword)\n   /* The Newline at the end of this line remains to be processed.\n      To put the next line at the specified line number,\n      we must store a line number now that is one less.  */\n-  new_lineno = atoi ((char *) pfile->token_buffer + old_written) - 1;\n+  new_lineno = atoi ((char *)(pfile->token_buffer + old_written)) - 1;\n   CPP_SET_WRITTEN (pfile, old_written);\n \n   /* NEW_LINENO is one less than the actual line number here.  */\n@@ -3948,7 +3972,7 @@ do_once (pfile)\n   return 0;\n }\n \n-/* #ident has already been copied to the output file, so just ignore it.  */\n+/* Report program identification.  */\n \n static int\n do_ident (pfile, keyword, buf, limit)\n@@ -4136,7 +4160,7 @@ eval_if_expression (pfile, buf, length)\n   HOST_WIDE_INT value;\n   long old_written = CPP_WRITTEN (pfile);\n \n-  save_defined = install (\"defined\", -1, T_SPEC_DEFINED, 0, 0, -1);\n+  save_defined = install ((U_CHAR *)\"defined\", -1, T_SPEC_DEFINED, 0, 0, -1);\n   pfile->pcp_inside_if = 1;\n \n   value = cpp_parse_expr (pfile);\n@@ -5887,6 +5911,7 @@ cpp_start_read (pfile, fname)\n \t    nstore[endp-startp] = '\\0';\n \n \t  include_defaults[num_dirs].fname = savestring (nstore);\n+\t  include_defaults[num_dirs].component = 0;\n \t  include_defaults[num_dirs].cplusplus = opts->cplusplus;\n \t  include_defaults[num_dirs].cxx_aware = 1;\n \t  num_dirs++;\n@@ -5953,7 +5978,7 @@ cpp_start_read (pfile, fname)\n \t  = (struct file_name_list *) xmalloc (sizeof (struct file_name_list));\n \tnew->control_macro = 0;\n \tnew->c_system_include_path = !p->cxx_aware;\n-\tnew->fname = p->fname;\n+\tnew->fname = update_path (p->fname, p->component);\n \tnew->got_name_map = 0;\n \tappend_include_chain (pfile, new, new);\n \tif (opts->first_system_include == 0)\n@@ -6077,8 +6102,12 @@ cpp_start_read (pfile, fname)\n \tdeps_output (pfile, \"-\", ':');\n       else\n \t{\n-\t  char *p, *q;\n-\t  int len;\n+\t  char *p, *q, *r;\n+\t  int len, x;\n+\t  static char *known_suffixes[] = { \".c\", \".C\", \".s\", \".S\", \".m\",\n+\t\t\t\t     \".cc\", \".cxx\", \".cpp\", \".cp\",\n+\t\t\t\t     \".c++\", 0\n+\t\t\t\t   };\n \n \t  /* Discard all directory prefixes from filename.  */\n \t  if ((q = rindex (opts->in_fname, '/')) != NULL\n@@ -6097,27 +6126,21 @@ cpp_start_read (pfile, fname)\n \t  /* Output P, but remove known suffixes.  */\n \t  len = strlen (p);\n \t  q = p + len;\n-\t  if (len >= 2\n-\t      && p[len - 2] == '.'\n-\t      && index(\"cCsSm\", p[len - 1]))\n-\t    q = p + (len - 2);\n-\t  else if (len >= 3\n-\t\t   && p[len - 3] == '.'\n-\t\t   && p[len - 2] == 'c'\n-\t\t   && p[len - 1] == 'c')\n-\t    q = p + (len - 3);\n-\t  else if (len >= 4\n-\t\t   && p[len - 4] == '.'\n-\t\t   && p[len - 3] == 'c'\n-\t\t   && p[len - 2] == 'x'\n-\t\t   && p[len - 1] == 'x')\n-\t    q = p + (len - 4);\n-\t  else if (len >= 4\n-\t\t   && p[len - 4] == '.'\n-\t\t   && p[len - 3] == 'c'\n-\t\t   && p[len - 2] == 'p'\n-\t\t   && p[len - 1] == 'p')\n-\t    q = p + (len - 4);\n+\t  /* Point to the filename suffix.  */\n+\t  r = rindex (p, '.');\n+\t  /* Compare against the known suffixes.  */\n+\t  x = 0;\n+\t  while (known_suffixes[x] != 0)\n+\t    {\n+\t      if (strncmp (known_suffixes[x], r, q - r) == 0)\n+\t\t{\n+\t\t  /* Make q point to the bit we're going to overwrite\n+\t\t     with an object suffix.  */\n+\t\t  q = r;\n+\t\t  break;\n+\t\t}\n+\t      x++;\n+\t    }\n \n \t  /* Supply our own suffix.  */\n #ifndef VMS\n@@ -6575,6 +6598,9 @@ cpp_handle_options (pfile, argc, argv)\n \t    case 'D':\n \t      opts->dump_macros = dump_definitions;\n \t      break;\n+\t    case 'I':\n+\t      opts->dump_includes = 1;\n+\t      break;\n \t    }\n \t  }\n \t}"}, {"sha": "5ab24441debde65074975ec9114c690bc9162c0f", "filename": "gcc/cse.c", "status": "modified", "additions": 73, "deletions": 8, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -561,7 +561,8 @@ struct cse_basic_block_data {\n \t   || XEXP (X, 0) == hard_frame_pointer_rtx\t\t\\\n \t   || XEXP (X, 0) == arg_pointer_rtx\t\t\t\\\n \t   || XEXP (X, 0) == virtual_stack_vars_rtx\t\t\\\n-\t   || XEXP (X, 0) == virtual_incoming_args_rtx)))\n+\t   || XEXP (X, 0) == virtual_incoming_args_rtx))\t\\\n+   || GET_CODE (X) == ADDRESSOF)\n \n /* Similar, but also allows reference to the stack pointer.\n \n@@ -585,7 +586,8 @@ struct cse_basic_block_data {\n    || (GET_CODE (X) == PLUS && GET_CODE (XEXP (X, 1)) == CONST_INT \\\n        && (XEXP (X, 0) == stack_pointer_rtx\t\t\t\\\n \t   || XEXP (X, 0) == virtual_stack_dynamic_rtx\t\t\\\n-\t   || XEXP (X, 0) == virtual_outgoing_args_rtx)))\n+\t   || XEXP (X, 0) == virtual_outgoing_args_rtx))\t\\\n+   || GET_CODE (X) == ADDRESSOF)\n \n static int notreg_cost\t\tPROTO((rtx));\n static void new_basic_block\tPROTO((void));\n@@ -1871,15 +1873,12 @@ canon_hash (x, mode)\n \n \tif (regno < FIRST_PSEUDO_REGISTER\n \t    && (global_regs[regno]\n-#ifdef SMALL_REGISTER_CLASSES\n \t\t|| (SMALL_REGISTER_CLASSES\n \t\t    && ! fixed_regs[regno]\n \t\t    && regno != FRAME_POINTER_REGNUM\n \t\t    && regno != HARD_FRAME_POINTER_REGNUM\n \t\t    && regno != ARG_POINTER_REGNUM\n-\t\t    && regno != STACK_POINTER_REGNUM)\n-#endif\n-\t\t))\n+\t\t    && regno != STACK_POINTER_REGNUM)))\n \t  {\n \t    do_not_record = 1;\n \t    return 0;\n@@ -1955,6 +1954,10 @@ canon_hash (x, mode)\n \t  do_not_record = 1;\n \t  return 0;\n \t}\n+      break;\n+      \n+    default:\n+      break;\n     }\n \n   i = GET_RTX_LENGTH (code) - 1;\n@@ -1991,6 +1994,8 @@ canon_hash (x, mode)\n \t  register unsigned tem = XINT (x, i);\n \t  hash += tem;\n \t}\n+      else if (fmt[i] == '0')\n+\t/* unused */;\n       else\n \tabort ();\n     }\n@@ -2129,6 +2134,9 @@ exp_equiv_p (x, y, validate, equal_values)\n \t\t\t       validate, equal_values)\n \t\t  && exp_equiv_p (XEXP (x, 1), XEXP (y, 0),\n \t\t\t\t  validate, equal_values)));\n+      \n+    default:\n+      break;\n     }\n \n   /* Compare the elements.  If any pair of corresponding elements\n@@ -2357,6 +2365,9 @@ set_nonvarying_address_components (addr, size, pbase, pstart, pend)\n \t      base = *pbase;\n \t    }\n \t  break;\n+\n+\tdefault:\n+\t  break;\n \t}\n \n       break;\n@@ -2479,6 +2490,9 @@ canon_reg (x, insn)\n \t\t: REGNO_REG_CLASS (first) == NO_REGS ? x\n \t\t: gen_rtx (REG, qty_mode[reg_qty[REGNO (x)]], first));\n       }\n+      \n+    default:\n+      break;\n     }\n \n   fmt = GET_RTX_FORMAT (code);\n@@ -2562,6 +2576,7 @@ find_best_addr (insn, loc)\n \t  && (regno = REGNO (addr), regno == FRAME_POINTER_REGNUM\n \t      || regno == HARD_FRAME_POINTER_REGNUM\n \t      || regno == ARG_POINTER_REGNUM))\n+      || GET_CODE (addr) == ADDRESSOF\n       || CONSTANT_ADDRESS_P (addr))\n     return;\n \n@@ -3322,6 +3337,9 @@ simplify_unary_operation (code, mode, op, op_mode)\n \t    return convert_memory_address (Pmode, op);\n \t  break;\n #endif\n+\t  \n+\tdefault:\n+\t  break;\n \t}\n \n       return 0;\n@@ -4249,6 +4267,9 @@ simplify_plus_minus (code, mode, op0, op1)\n \t    if (negs[i])\n \t      ops[i] = GEN_INT (- INTVAL (ops[i])), negs[i] = 0, changed = 1;\n \t    break;\n+\n+\t  default:\n+\t    break;\n \t  }\n     }\n \n@@ -4574,6 +4595,9 @@ simplify_relational_operation (code, mode, op0, op1)\n \t      && INTEGRAL_MODE_P (mode))\n \t    return const0_rtx;\n \t  break;\n+\t  \n+\tdefault:\n+\t  break;\n \t}\n \n       return 0;\n@@ -4603,9 +4627,9 @@ simplify_relational_operation (code, mode, op0, op1)\n       return equal || op0ltu ? const_true_rtx : const0_rtx;\n     case GEU:\n       return equal || op1ltu ? const_true_rtx : const0_rtx;\n+    default:\n+      abort ();\n     }\n-\n-  abort ();\n }\n \f\n /* Simplify CODE, an operation with result mode MODE and three operands,\n@@ -4994,6 +5018,8 @@ fold_rtx (x, insn)\n \telse if (GET_CODE (addr) == LO_SUM\n \t\t && GET_CODE (XEXP (addr, 1)) == SYMBOL_REF)\n \t  base = XEXP (addr, 1);\n+\telse if (GET_CODE (addr) == ADDRESSOF)\n+\t  XEXP (x, 0) = addr;\n \n \t/* If this is a constant pool reference, we can fold it into its\n \t   constant to allow better value tracking.  */\n@@ -5085,6 +5111,9 @@ fold_rtx (x, insn)\n \tvalidate_change (insn, &XVECEXP (x, 3, i),\n \t\t\t fold_rtx (XVECEXP (x, 3, i), insn), 0);\n       break;\n+      \n+    default:\n+      break;\n     }\n \n   const_arg0 = 0;\n@@ -5420,6 +5449,8 @@ fold_rtx (x, insn)\n \t\t  if (has_sign)\n \t\t    return false;\n \t\t  break;\n+\t\tdefault:\n+\t\t  break;\n \t\t}\n \t    }\n \t}\n@@ -5615,6 +5646,10 @@ fold_rtx (x, insn)\n \n \t      return cse_gen_binary (code, mode, y, new_const);\n \t    }\n+\t  break;\n+\n+\tdefault:\n+\t  break;\n \t}\n \n       new = simplify_binary_operation (code, mode,\n@@ -7678,6 +7713,9 @@ cse_process_notes (x, object)\n \n       /* Otherwise, canonicalize this register.  */\n       return canon_reg (x, NULL_RTX);\n+      \n+    default:\n+      break;\n     }\n \n   for (i = 0; i < GET_RTX_LENGTH (code); i++)\n@@ -8359,6 +8397,7 @@ cse_basic_block (from, to, next_branch, around_loop)\n   register rtx insn;\n   int to_usage = 0;\n   int in_libcall_block = 0;\n+  int num_insns = 0;\n \n   /* Each of these arrays is undefined before max_reg, so only allocate\n      the space actually needed and adjust the start below.  */\n@@ -8391,6 +8430,29 @@ cse_basic_block (from, to, next_branch, around_loop)\n   for (insn = from; insn != to; insn = NEXT_INSN (insn))\n     {\n       register enum rtx_code code;\n+      int i;\n+      struct table_elt *p, *next;\n+\n+      /* If we have processed 1,000 insns, flush the hash table to avoid\n+\t extreme quadratic behavior.\n+\n+\t ??? This is a real kludge and needs to be done some other way.\n+\t Perhaps for 2.9.  */\n+      if (num_insns++ > 1000)\n+\t{\n+\t  for (i = 0; i < NBUCKETS; i++)\n+\t    for (p = table[i]; p; p = next)\n+\t      {\n+\t\tnext = p->next_same_hash;\n+\n+\t\tif (GET_CODE (p->exp) == REG)\n+\t\t  invalidate (p->exp, p->mode);\n+\t\telse\n+\t\t  remove_from_table (p, i);\n+\t      }\n+\n+\t  num_insns = 0;\n+\t}\n \n       /* See if this is a branch that is part of the path.  If so, and it is\n \t to be taken, do so.  */\n@@ -8614,6 +8676,9 @@ count_reg_usage (x, counts, dest, incr)\n \tcount_reg_usage (XEXP (x, 0), counts, NULL_RTX, incr);\n       count_reg_usage (XEXP (x, 1), counts, NULL_RTX, incr);\n       return;\n+      \n+    default:\n+      break;\n     }\n \n   fmt = GET_RTX_FORMAT (code);"}, {"sha": "92557685b3117efeae3060e3490f86d76cff04b7", "filename": "gcc/dbxout.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -67,11 +67,11 @@ Boston, MA 02111-1307, USA.  */\n \n    For more on data type definitions, see `dbxout_type'.  */\n \n-/* Include these first, because they may define MIN and MAX.  */\n+#include \"config.h\"\n+\n #include <stdio.h>\n #include <errno.h>\n \n-#include \"config.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"flags.h\"\n@@ -1870,6 +1870,10 @@ dbxout_symbol (decl, local)\n #endif\n \n       dbxout_symbol_location (decl, type, 0, DECL_RTL (decl));\n+      break;\n+      \n+    default:\n+      break;\n     }\n }\n \f"}, {"sha": "d2a74e0d6de1125a94be4bf12e8b1dccd35dd364", "filename": "gcc/dwarf2.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,6 +1,6 @@\n /* Declarations and definitions of codes relating to the DWARF2 symbolic\n    debugging information format.\n-   Copyright (C) 1992, 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Gary Funck (gary@intrepid.com).  Derived from the\n    DWARF 1 implementation written by Ron Guilmette (rfg@monkeys.com).\n "}, {"sha": "c8a6c74431b8ef3f352f086d1dce444212f404db", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,7 +1,7 @@\n /* Output Dwarf2 format symbol table information from the GNU C compiler.\n    Copyright (C) 1992, 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n-   Contributed by Gary Funck (gary@intrepid.com).  Derived from the\n-   DWARF 1 implementation written by Ron Guilmette (rfg@monkeys.com).\n+   Contributed by Gary Funck (gary@intrepid.com).\n+   Derived from DWARF 1 implementation of Ron Guilmette (rfg@monkeys.com).\n    Extensively modified by Jason Merrill (jason@cygnus.com).\n \n This file is part of GNU CC.\n@@ -743,6 +743,8 @@ lookup_cfa_1 (cfi, regp, offsetp)\n       *regp = cfi->dw_cfi_oprnd1.dw_cfi_reg_num;\n       *offsetp = cfi->dw_cfi_oprnd2.dw_cfi_offset;\n       break;\n+    default:\n+      break;\n     }\n }\n \n@@ -1170,7 +1172,6 @@ dwarf2out_frame_debug (insn)\n \t      assert (XEXP (src, 1) == stack_pointer_rtx);\n \t      assert (GET_CODE (XEXP (src, 0)) == REG\n \t\t      && REGNO (XEXP (src, 0)) == cfa_temp_reg);\n-\t      assert (cfa_store_reg == STACK_POINTER_REGNUM);\n \t      cfa_store_reg = REGNO (dest);\n \t      cfa_store_offset -= cfa_temp_value;\n \t    }\n@@ -1489,13 +1490,6 @@ output_call_frame_info (for_eh)\n   /* Do we want to include a pointer to the exception table?  */\n   int eh_ptr = for_eh && exception_table_p ();\n \n-  /* Only output the info if it will be interesting.  */\n-  for (i = 0; i < fde_table_in_use; ++i)\n-    if (fde_table[i].dw_fde_cfi != NULL)\n-      break;\n-  if (i == fde_table_in_use)\n-    return;\n-\n   fputc ('\\n', asm_out_file);\n \n   /* We're going to be generating comments, so turn on app.  */\n@@ -4094,6 +4088,8 @@ print_die (die, outfile)\n \t  else\n \t    fprintf (outfile, \"<null>\");\n \t  break;\n+\tdefault:\n+\t  break;\n \t}\n \n       fprintf (outfile, \"\\n\");\n@@ -6880,6 +6876,11 @@ add_location_or_const_value_attribute (die, decl)\n \n   switch (GET_CODE (rtl))\n     {\n+    case ADDRESSOF:\n+      /* The address of a variable that was optimized away; don't emit\n+\t anything.  */\n+      break;\n+\n     case CONST_INT:\n     case CONST_DOUBLE:\n     case CONST_STRING:\n@@ -7667,7 +7668,7 @@ gen_enumeration_type_die (type, context_die)\n \n       TREE_ASM_WRITTEN (type) = 1;\n       add_byte_size_attribute (type_die, type);\n-      if (type_tag (type))\n+      if (TYPE_STUB_DECL (type) != NULL_TREE)\n \tadd_src_coords_attributes (type_die, TYPE_STUB_DECL (type));\n \n       /* If the first reference to this type was as the return type of an\n@@ -8542,7 +8543,7 @@ gen_struct_or_union_type_die (type, context_die)\n          this type is expressed in terms of this type itself.  */\n       TREE_ASM_WRITTEN (type) = 1;\n       add_byte_size_attribute (type_die, type);\n-      if (type_tag (type))\n+      if (TYPE_STUB_DECL (type) != NULL_TREE)\n \tadd_src_coords_attributes (type_die, TYPE_STUB_DECL (type));\n \n       /* If the first reference to this type was as the return type of an"}, {"sha": "cdeed4abc6006b5a1cd9e8a1522e38822125413c", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 56, "deletions": 48, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -531,153 +531,153 @@ static void generate_macinfo_entry\tPROTO((char *, char *));\n */\n \n #ifndef TEXT_BEGIN_LABEL\n-#define TEXT_BEGIN_LABEL\t\".L_text_b\"\n+#define TEXT_BEGIN_LABEL\t\"*.L_text_b\"\n #endif\n #ifndef TEXT_END_LABEL\n-#define TEXT_END_LABEL\t\t\".L_text_e\"\n+#define TEXT_END_LABEL\t\t\"*.L_text_e\"\n #endif\n \n #ifndef DATA_BEGIN_LABEL\n-#define DATA_BEGIN_LABEL\t\".L_data_b\"\n+#define DATA_BEGIN_LABEL\t\"*.L_data_b\"\n #endif\n #ifndef DATA_END_LABEL\n-#define DATA_END_LABEL\t\t\".L_data_e\"\n+#define DATA_END_LABEL\t\t\"*.L_data_e\"\n #endif\n \n #ifndef DATA1_BEGIN_LABEL\n-#define DATA1_BEGIN_LABEL\t\".L_data1_b\"\n+#define DATA1_BEGIN_LABEL\t\"*.L_data1_b\"\n #endif\n #ifndef DATA1_END_LABEL\n-#define DATA1_END_LABEL\t\t\".L_data1_e\"\n+#define DATA1_END_LABEL\t\t\"*.L_data1_e\"\n #endif\n \n #ifndef RODATA_BEGIN_LABEL\n-#define RODATA_BEGIN_LABEL\t\".L_rodata_b\"\n+#define RODATA_BEGIN_LABEL\t\"*.L_rodata_b\"\n #endif\n #ifndef RODATA_END_LABEL\n-#define RODATA_END_LABEL\t\".L_rodata_e\"\n+#define RODATA_END_LABEL\t\"*.L_rodata_e\"\n #endif\n \n #ifndef RODATA1_BEGIN_LABEL\n-#define RODATA1_BEGIN_LABEL\t\".L_rodata1_b\"\n+#define RODATA1_BEGIN_LABEL\t\"*.L_rodata1_b\"\n #endif\n #ifndef RODATA1_END_LABEL\n-#define RODATA1_END_LABEL\t\".L_rodata1_e\"\n+#define RODATA1_END_LABEL\t\"*.L_rodata1_e\"\n #endif\n \n #ifndef BSS_BEGIN_LABEL\n-#define BSS_BEGIN_LABEL\t\t\".L_bss_b\"\n+#define BSS_BEGIN_LABEL\t\t\"*.L_bss_b\"\n #endif\n #ifndef BSS_END_LABEL\n-#define BSS_END_LABEL\t\t\".L_bss_e\"\n+#define BSS_END_LABEL\t\t\"*.L_bss_e\"\n #endif\n \n #ifndef LINE_BEGIN_LABEL\n-#define LINE_BEGIN_LABEL\t\".L_line_b\"\n+#define LINE_BEGIN_LABEL\t\"*.L_line_b\"\n #endif\n #ifndef LINE_LAST_ENTRY_LABEL\n-#define LINE_LAST_ENTRY_LABEL\t\".L_line_last\"\n+#define LINE_LAST_ENTRY_LABEL\t\"*.L_line_last\"\n #endif\n #ifndef LINE_END_LABEL\n-#define LINE_END_LABEL\t\t\".L_line_e\"\n+#define LINE_END_LABEL\t\t\"*.L_line_e\"\n #endif\n \n #ifndef DEBUG_BEGIN_LABEL\n-#define DEBUG_BEGIN_LABEL\t\".L_debug_b\"\n+#define DEBUG_BEGIN_LABEL\t\"*.L_debug_b\"\n #endif\n #ifndef SFNAMES_BEGIN_LABEL\n-#define SFNAMES_BEGIN_LABEL\t\".L_sfnames_b\"\n+#define SFNAMES_BEGIN_LABEL\t\"*.L_sfnames_b\"\n #endif\n #ifndef SRCINFO_BEGIN_LABEL\n-#define SRCINFO_BEGIN_LABEL\t\".L_srcinfo_b\"\n+#define SRCINFO_BEGIN_LABEL\t\"*.L_srcinfo_b\"\n #endif\n #ifndef MACINFO_BEGIN_LABEL\n-#define MACINFO_BEGIN_LABEL\t\".L_macinfo_b\"\n+#define MACINFO_BEGIN_LABEL\t\"*.L_macinfo_b\"\n #endif\n \n #ifndef DIE_BEGIN_LABEL_FMT\n-#define DIE_BEGIN_LABEL_FMT\t\".L_D%u\"\n+#define DIE_BEGIN_LABEL_FMT\t\"*.L_D%u\"\n #endif\n #ifndef DIE_END_LABEL_FMT\n-#define DIE_END_LABEL_FMT\t\".L_D%u_e\"\n+#define DIE_END_LABEL_FMT\t\"*.L_D%u_e\"\n #endif\n #ifndef PUB_DIE_LABEL_FMT\n-#define PUB_DIE_LABEL_FMT\t\".L_P%u\"\n+#define PUB_DIE_LABEL_FMT\t\"*.L_P%u\"\n #endif\n #ifndef INSN_LABEL_FMT\n-#define INSN_LABEL_FMT\t\t\".L_I%u_%u\"\n+#define INSN_LABEL_FMT\t\t\"*.L_I%u_%u\"\n #endif\n #ifndef BLOCK_BEGIN_LABEL_FMT\n-#define BLOCK_BEGIN_LABEL_FMT\t\".L_B%u\"\n+#define BLOCK_BEGIN_LABEL_FMT\t\"*.L_B%u\"\n #endif\n #ifndef BLOCK_END_LABEL_FMT\n-#define BLOCK_END_LABEL_FMT\t\".L_B%u_e\"\n+#define BLOCK_END_LABEL_FMT\t\"*.L_B%u_e\"\n #endif\n #ifndef SS_BEGIN_LABEL_FMT\n-#define SS_BEGIN_LABEL_FMT\t\".L_s%u\"\n+#define SS_BEGIN_LABEL_FMT\t\"*.L_s%u\"\n #endif\n #ifndef SS_END_LABEL_FMT\n-#define SS_END_LABEL_FMT\t\".L_s%u_e\"\n+#define SS_END_LABEL_FMT\t\"*.L_s%u_e\"\n #endif\n #ifndef EE_BEGIN_LABEL_FMT\n-#define EE_BEGIN_LABEL_FMT\t\".L_e%u\"\n+#define EE_BEGIN_LABEL_FMT\t\"*.L_e%u\"\n #endif\n #ifndef EE_END_LABEL_FMT\n-#define EE_END_LABEL_FMT\t\".L_e%u_e\"\n+#define EE_END_LABEL_FMT\t\"*.L_e%u_e\"\n #endif\n #ifndef MT_BEGIN_LABEL_FMT\n-#define MT_BEGIN_LABEL_FMT\t\".L_t%u\"\n+#define MT_BEGIN_LABEL_FMT\t\"*.L_t%u\"\n #endif\n #ifndef MT_END_LABEL_FMT\n-#define MT_END_LABEL_FMT\t\".L_t%u_e\"\n+#define MT_END_LABEL_FMT\t\"*.L_t%u_e\"\n #endif\n #ifndef LOC_BEGIN_LABEL_FMT\n-#define LOC_BEGIN_LABEL_FMT\t\".L_l%u\"\n+#define LOC_BEGIN_LABEL_FMT\t\"*.L_l%u\"\n #endif\n #ifndef LOC_END_LABEL_FMT\n-#define LOC_END_LABEL_FMT\t\".L_l%u_e\"\n+#define LOC_END_LABEL_FMT\t\"*.L_l%u_e\"\n #endif\n #ifndef BOUND_BEGIN_LABEL_FMT\n-#define BOUND_BEGIN_LABEL_FMT\t\".L_b%u_%u_%c\"\n+#define BOUND_BEGIN_LABEL_FMT\t\"*.L_b%u_%u_%c\"\n #endif\n #ifndef BOUND_END_LABEL_FMT\n-#define BOUND_END_LABEL_FMT\t\".L_b%u_%u_%c_e\"\n+#define BOUND_END_LABEL_FMT\t\"*.L_b%u_%u_%c_e\"\n #endif\n #ifndef DERIV_BEGIN_LABEL_FMT\n-#define DERIV_BEGIN_LABEL_FMT\t\".L_d%u\"\n+#define DERIV_BEGIN_LABEL_FMT\t\"*.L_d%u\"\n #endif\n #ifndef DERIV_END_LABEL_FMT\n-#define DERIV_END_LABEL_FMT\t\".L_d%u_e\"\n+#define DERIV_END_LABEL_FMT\t\"*.L_d%u_e\"\n #endif\n #ifndef SL_BEGIN_LABEL_FMT\n-#define SL_BEGIN_LABEL_FMT\t\".L_sl%u\"\n+#define SL_BEGIN_LABEL_FMT\t\"*.L_sl%u\"\n #endif\n #ifndef SL_END_LABEL_FMT\n-#define SL_END_LABEL_FMT\t\".L_sl%u_e\"\n+#define SL_END_LABEL_FMT\t\"*.L_sl%u_e\"\n #endif\n #ifndef BODY_BEGIN_LABEL_FMT\n-#define BODY_BEGIN_LABEL_FMT\t\".L_b%u\"\n+#define BODY_BEGIN_LABEL_FMT\t\"*.L_b%u\"\n #endif\n #ifndef BODY_END_LABEL_FMT\n-#define BODY_END_LABEL_FMT\t\".L_b%u_e\"\n+#define BODY_END_LABEL_FMT\t\"*.L_b%u_e\"\n #endif\n #ifndef FUNC_END_LABEL_FMT\n-#define FUNC_END_LABEL_FMT\t\".L_f%u_e\"\n+#define FUNC_END_LABEL_FMT\t\"*.L_f%u_e\"\n #endif\n #ifndef TYPE_NAME_FMT\n-#define TYPE_NAME_FMT\t\t\".L_T%u\"\n+#define TYPE_NAME_FMT\t\t\"*.L_T%u\"\n #endif\n #ifndef DECL_NAME_FMT\n-#define DECL_NAME_FMT\t\t\".L_E%u\"\n+#define DECL_NAME_FMT\t\t\"*.L_E%u\"\n #endif\n #ifndef LINE_CODE_LABEL_FMT\n-#define LINE_CODE_LABEL_FMT\t\".L_LC%u\"\n+#define LINE_CODE_LABEL_FMT\t\"*.L_LC%u\"\n #endif\n #ifndef SFNAMES_ENTRY_LABEL_FMT\n-#define SFNAMES_ENTRY_LABEL_FMT\t\".L_F%u\"\n+#define SFNAMES_ENTRY_LABEL_FMT\t\"*.L_F%u\"\n #endif\n #ifndef LINE_ENTRY_LABEL_FMT\n-#define LINE_ENTRY_LABEL_FMT\t\".L_LE%u\"\n+#define LINE_ENTRY_LABEL_FMT\t\"*.L_LE%u\"\n #endif\n \f\n /* Definitions of defaults for various types of primitive assembly language\n@@ -2403,6 +2403,11 @@ location_or_const_value_attribute (decl)\n \n   switch (GET_CODE (rtl))\n     {\n+    case ADDRESSOF:\n+      /* The address of a variable that was optimized away; don't emit\n+\t anything.  */\n+      break;\n+\n     case CONST_INT:\n     case CONST_DOUBLE:\n     case CONST_STRING:\n@@ -5496,7 +5501,10 @@ dwarfout_start_new_source_file (filename)\n \n   sprintf (label, SFNAMES_ENTRY_LABEL_FMT, lookup_filename (filename));\n   sprintf (type_and_offset, \"0x%08x+%s-%s\",\n-\t   ((unsigned) MACINFO_start << 24), label, SFNAMES_BEGIN_LABEL);\n+\t   ((unsigned) MACINFO_start << 24),\n+\t   /* Hack: skip leading '*' .  */\n+\t   (*label == '*') + label,\n+\t   (*SFNAMES_BEGIN_LABEL == '*') + SFNAMES_BEGIN_LABEL);\n   generate_macinfo_entry (type_and_offset, \"\");\n }\n "}, {"sha": "2204cec03c307eedae7ec87fed2ed0413babe8aa", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -35,6 +35,7 @@ Boston, MA 02111-1307, USA.  */\n    is the kind of rtx's they make and what arguments they use.  */\n \n #include \"config.h\"\n+#include <stdio.h>\n #ifdef __STDC__\n #include <stdarg.h>\n #else\n@@ -48,6 +49,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"expr.h\"\n #include \"regs.h\"\n #include \"insn-config.h\"\n+#include \"recog.h\"\n #include \"real.h\"\n #include \"obstack.h\"\n \n@@ -58,8 +60,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"bc-optab.h\"\n #include \"bc-emit.h\"\n \n-#include <stdio.h>\n-\n /* Opcode names */\n #ifdef BCDEBUG_PRINT_CODE\n char *opcode_name[] =\n@@ -958,6 +958,8 @@ gen_lowpart (mode, x)\n \n       return change_address (x, mode, plus_constant (XEXP (x, 0), offset));\n     }\n+  else if (GET_CODE (x) == ADDRESSOF)\n+    return gen_lowpart (mode, force_reg (GET_MODE (x), x));\n   else\n     abort ();\n }\n@@ -1462,7 +1464,7 @@ gen_inline_header_rtx (first_insn, first_parm_insn, first_labelno,\n \t\t       pops_args, stack_slots, forced_labels, function_flags,\n \t\t       outgoing_args_size, original_arg_vector,\n \t\t       original_decl_initial, regno_rtx, regno_flag,\n-\t\t       regno_align)\n+\t\t       regno_align, parm_reg_stack_loc)\n      rtx first_insn, first_parm_insn;\n      int first_labelno, last_labelno, max_parm_regnum, max_regnum, args_size;\n      int pops_args;\n@@ -1475,6 +1477,7 @@ gen_inline_header_rtx (first_insn, first_parm_insn, first_labelno,\n      rtvec regno_rtx;\n      char *regno_flag;\n      char *regno_align;\n+     rtvec parm_reg_stack_loc;\n {\n   rtx header = gen_rtx (INLINE_HEADER, VOIDmode,\n \t\t\tcur_insn_uid++, NULL_RTX,\n@@ -1484,7 +1487,8 @@ gen_inline_header_rtx (first_insn, first_parm_insn, first_labelno,\n \t\t\tstack_slots, forced_labels, function_flags,\n \t\t\toutgoing_args_size, original_arg_vector,\n \t\t\toriginal_decl_initial,\n-\t\t\tregno_rtx, regno_flag, regno_align);\n+\t\t\tregno_rtx, regno_flag, regno_align,\n+\t\t\tparm_reg_stack_loc);\n   return header;\n }\n \n@@ -1674,6 +1678,10 @@ copy_rtx_if_shared (orig)\n \t  x->used = 1;\n \t  return x;\n \t}\n+      break;\n+\n+    default:\n+      break;\n     }\n \n   /* This rtx may not be shared.  If it has already been seen,\n@@ -1763,6 +1771,9 @@ reset_used_flags (x)\n     case BARRIER:\n       /* The chain of insns is not being copied.  */\n       return;\n+      \n+    default:\n+      break;\n     }\n \n   x->used = 0;"}, {"sha": "bf9cebffca9f730a309e0c1f0e3e0f6e420098dd", "filename": "gcc/except.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,5 @@\n /* Implements exception handling.\n-   Copyright (C) 1989, 92-95, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 92-96, 1997 Free Software Foundation, Inc.\n    Contributed by Mike Stump <mrs@cygnus.com>.\n \n This file is part of GNU CC.\n@@ -45,7 +45,7 @@ Boston, MA 02111-1307, USA.  */\n \n    There are two major codegen options for exception handling.  The\n    flag -fsjlj-exceptions can be used to select the setjmp/longjmp\n-   approach, which is the default.  -fnosjlj-exceptions can be used to\n+   approach, which is the default.  -fno-sjlj-exceptions can be used to\n    get the PC range table approach.  While this is a compile time\n    flag, an entire application must be compiled with the same codegen\n    option.  The first is a PC range table approach, the second is a"}, {"sha": "5a65100d4aa29d928ad474a3cf5eb174af7bbd56", "filename": "gcc/except.h", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,5 +1,5 @@\n /* Exception Handling interface routines.\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Mike Stump <mrs@cygnus.com>.\n \n This file is part of GNU CC.\n@@ -139,8 +139,6 @@ extern rtx catch_clauses;\n \n #endif\n \n-struct function;\n-\n /* Toplevel initialization for EH.  */\n \n extern void init_eh\t\t\t\tPROTO((void));\n@@ -149,14 +147,6 @@ extern void init_eh\t\t\t\tPROTO((void));\n \n extern void init_eh_for_function\t\tPROTO((void));\n \n-/* Saves the current per-function EH data into P.  */\n-\n-extern void save_eh_status\t\t\tPROTO((struct function *p));\n-\n-/* Restores the per-function EH data from P.  */\n-\n-extern void restore_eh_status\t\t\tPROTO((struct function *p));\n-\n /* Adds an EH table entry for EH entry number N. Called from\n    final_scan_insn for NOTE_INSN_EH_REGION_BEG.  */\n "}, {"sha": "20a8d6ab4ca4d6fe4cd7befadafc8673ace3d07d", "filename": "gcc/expmed.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -21,6 +21,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n@@ -2831,13 +2832,13 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n       op0 = convert_modes (compute_mode, mode, op0, unsignedp);\n       op1 = convert_modes (compute_mode, mode, op1, unsignedp);\n \n-      /* convert_modes may have tossed op1 into a register, so we\n-\t absolutely must recompute the following.  */\n+      /* convert_modes may have placed op1 into a register, so we\n+\t must recompute the following.  */\n       op1_is_constant = GET_CODE (op1) == CONST_INT;\n       op1_is_pow2 = (op1_is_constant\n \t\t     && ((EXACT_POWER_OF_2_OR_ZERO_P (INTVAL (op1))\n \t\t\t  || (! unsignedp\n-\t\t\t      && EXACT_POWER_OF_2_OR_ZERO_P (-INTVAL (op1))))));\n+\t\t\t      && EXACT_POWER_OF_2_OR_ZERO_P (-INTVAL (op1)))))) ;\n     }\n \n   /* If one of the operands is a volatile MEM, copy it into a register.  */\n@@ -3640,6 +3641,9 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t    emit_label (label);\n \t  }\n \treturn gen_lowpart (mode, rem_flag ? remainder : quotient);\n+\t\n+      default:\n+\tabort ();\n       }\n \n   if (quotient == 0)\n@@ -3956,6 +3960,8 @@ emit_store_flag (target, code, op0, op1, mode, unsignedp, normalizep)\n       if (op1 == const1_rtx)\n \top1 = const0_rtx, code = EQ;\n       break;\n+    default:\n+      break;\n     }\n \n   /* From now on, we won't change CODE, so set ICODE now.  */"}, {"sha": "2f28be5a3e43200755338dbd7d2fba21e2828772", "filename": "gcc/expr.c", "status": "modified", "additions": 244, "deletions": 99, "changes": 343, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -20,6 +20,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n #include \"config.h\"\n+#include <stdio.h>\n #include \"machmode.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n@@ -528,10 +529,11 @@ queued_subexp_p (x)\n     case MULT:\n     case PLUS:\n     case MINUS:\n-      return queued_subexp_p (XEXP (x, 0))\n-\t|| queued_subexp_p (XEXP (x, 1));\n+      return (queued_subexp_p (XEXP (x, 0))\n+\t      || queued_subexp_p (XEXP (x, 1)));\n+    default:\n+      return 0;\n     }\n-  return 0;\n }\n \n /* Perform all the pending incrementations.  */\n@@ -776,6 +778,9 @@ convert_move (to, from, unsignedp)\n \t    case TFmode:\n \t      libcall = extendsftf2_libfunc;\n \t      break;\n+\t      \n+\t    default:\n+\t      break;\n \t    }\n \t  break;\n \n@@ -793,6 +798,9 @@ convert_move (to, from, unsignedp)\n \t    case TFmode:\n \t      libcall = extenddftf2_libfunc;\n \t      break;\n+\t      \n+\t    default:\n+\t      break;\n \t    }\n \t  break;\n \n@@ -806,6 +814,9 @@ convert_move (to, from, unsignedp)\n \t    case DFmode:\n \t      libcall = truncxfdf2_libfunc;\n \t      break;\n+\t      \n+\t    default:\n+\t      break;\n \t    }\n \t  break;\n \n@@ -819,8 +830,14 @@ convert_move (to, from, unsignedp)\n \t    case DFmode:\n \t      libcall = trunctfdf2_libfunc;\n \t      break;\n+\t      \n+\t    default:\n+\t      break;\n \t    }\n \t  break;\n+\t  \n+\tdefault:\n+\t  break;\n \t}\n \n       if (libcall == (rtx) 0)\n@@ -1567,14 +1584,19 @@ move_by_pieces_1 (genfun, mode, data)\n    with mode BLKmode.\n    SIZE is an rtx that says how long they are.\n    ALIGN is the maximum alignment we can assume they have,\n-   measured in bytes.  */\n+   measured in bytes. \n \n-void\n+   Return the address of the new block, if memcpy is called and returns it,\n+   0 otherwise.  */\n+\n+rtx\n emit_block_move (x, y, size, align)\n      rtx x, y;\n      rtx size;\n      int align;\n {\n+  rtx retval = 0;\n+\n   if (GET_MODE (x) != BLKmode)\n     abort ();\n \n@@ -1639,20 +1661,21 @@ emit_block_move (x, y, size, align)\n \t      if (pat)\n \t\t{\n \t\t  emit_insn (pat);\n-\t\t  return;\n+\t\t  return 0;\n \t\t}\n \t      else\n \t\tdelete_insns_since (last);\n \t    }\n \t}\n \n #ifdef TARGET_MEM_FUNCTIONS\n-      emit_library_call (memcpy_libfunc, 0,\n-\t\t\t VOIDmode, 3, XEXP (x, 0), Pmode,\n-\t\t\t XEXP (y, 0), Pmode,\n-\t\t\t convert_to_mode (TYPE_MODE (sizetype), size,\n-\t\t\t\t\t  TREE_UNSIGNED (sizetype)),\n-\t\t\t TYPE_MODE (sizetype));\n+      retval\n+\t= emit_library_call_value (memcpy_libfunc, NULL_RTX, 0,\n+\t\t\t\t   ptr_mode, 3, XEXP (x, 0), Pmode,\n+\t\t\t\t   XEXP (y, 0), Pmode,\n+\t\t\t\t   convert_to_mode (TYPE_MODE (sizetype), size,\n+\t\t\t\t\t\t    TREE_UNSIGNED (sizetype)),\n+\t\t\t\t   TYPE_MODE (sizetype));\n #else\n       emit_library_call (bcopy_libfunc, 0,\n \t\t\t VOIDmode, 3, XEXP (y, 0), Pmode,\n@@ -1662,6 +1685,8 @@ emit_block_move (x, y, size, align)\n \t\t\t TYPE_MODE (integer_type_node));\n #endif\n     }\n+\n+  return retval;\n }\n \f\n /* Copy all or part of a value X into registers starting at REGNO.\n@@ -1929,7 +1954,7 @@ use_group_regs (call_fusage, regs)\n       /* A NULL entry means the parameter goes both on the stack and in\n \t registers.  This can also be a MEM for targets that pass values\n \t partially on the stack and partially in registers.  */\n-      if (reg && GET_CODE (reg) == REG)\n+      if (reg != 0 && GET_CODE (reg) == REG)\n \tuse_reg (call_fusage, reg);\n     }\n }\n@@ -2066,14 +2091,18 @@ clear_by_pieces_1 (genfun, mode, data)\n \f\n /* Write zeros through the storage of OBJECT.\n    If OBJECT has BLKmode, SIZE is its length in bytes and ALIGN is\n-   the maximum alignment we can is has, measured in bytes.  */\n+   the maximum alignment we can is has, measured in bytes.\n \n-void\n+   If we call a function that returns the length of the block, return it.  */\n+\n+rtx\n clear_storage (object, size, align)\n      rtx object;\n      rtx size;\n      int align;\n {\n+  rtx retval = 0;\n+\n   if (GET_MODE (object) == BLKmode)\n     {\n       object = protect_from_queue (object, 1);\n@@ -2127,7 +2156,7 @@ clear_storage (object, size, align)\n \t\t  if (pat)\n \t\t    {\n \t\t      emit_insn (pat);\n-\t\t      return;\n+\t\t      return 0;\n \t\t    }\n \t\t  else\n \t\t    delete_insns_since (last);\n@@ -2136,26 +2165,31 @@ clear_storage (object, size, align)\n \n \n #ifdef TARGET_MEM_FUNCTIONS\n-\t  emit_library_call (memset_libfunc, 0,\n-\t\t\t     VOIDmode, 3,\n-\t\t\t     XEXP (object, 0), Pmode,\n-\t\t\t     const0_rtx, TYPE_MODE (integer_type_node),\n-\t\t\t     convert_to_mode (TYPE_MODE (sizetype),\n-\t\t\t\t\t      size, TREE_UNSIGNED (sizetype)),\n-\t\t\t     TYPE_MODE (sizetype));\n+\t  retval\n+\t    = emit_library_call_value (memset_libfunc, NULL_RTX, 0,\n+\t\t\t\t       ptr_mode, 3,\n+\t\t\t\t       XEXP (object, 0), Pmode,\n+\t\t\t\t       const0_rtx,\n+\t\t\t\t       TYPE_MODE (integer_type_node),\n+\t\t\t\t       convert_to_mode\n+\t\t\t\t       (TYPE_MODE (sizetype), size,\n+\t\t\t\t\tTREE_UNSIGNED (sizetype)),\n+\t\t\t\t       TYPE_MODE (sizetype));\n #else\n \t  emit_library_call (bzero_libfunc, 0,\n \t\t\t     VOIDmode, 2,\n \t\t\t     XEXP (object, 0), Pmode,\t\n-\t\t\t     convert_to_mode (TYPE_MODE (integer_type_node),\n-\t\t\t\t\t      size,\n-\t\t\t\t\t      TREE_UNSIGNED (integer_type_node)),\n+\t\t\t     convert_to_mode\n+\t\t\t     (TYPE_MODE (integer_type_node), size,\n+\t\t\t      TREE_UNSIGNED (integer_type_node)),\n \t\t\t     TYPE_MODE (integer_type_node));\n #endif\n \t}\n     }\n   else\n     emit_move_insn (object, CONST0_RTX (GET_MODE (object)));\n+\n+  return retval;\n }\n \n /* Generate code to copy Y into X.\n@@ -2940,9 +2974,11 @@ expand_assignment (to, from, want_value, suggest_reg)\n \t  size *= GET_MODE_SIZE (best_mode);\n \n \t  /* Check the access right of the pointer.  */\n-\t  emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3, to_addr,\n-\t\t\t     ptr_mode, GEN_INT (size), TYPE_MODE (sizetype),\n-\t\t\t     GEN_INT (MEMORY_USE_WO), QImode);\n+\t  if (size)\n+\t    emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n+\t\t\t       to_addr, ptr_mode,\n+\t\t\t       GEN_INT (size), TYPE_MODE (sizetype),\n+\t\t\t       GEN_INT (MEMORY_USE_WO), QImode);\n \t}\n \n       result = store_field (to_rtx, bitsize, bitpos, mode1, from,\n@@ -3450,9 +3486,10 @@ is_zeros_p (exp)\n \t  return 0;\n \n       return 1;\n+      \n+    default:\n+      return 0;\n     }\n-\n-  return 0;\n }\n \n /* Return 1 if EXP contains mostly (3/4)  zeros.  */\n@@ -3570,7 +3607,7 @@ store_constructor (exp, target, cleared)\n \t       && GET_MODE_SIZE (GET_MODE (target)) <= UNITS_PER_WORD)\n \t{\n \t  if (! cleared)\n-\t    emit_move_insn (target, const0_rtx);\n+\t    emit_move_insn (target, CONST0_RTX (GET_MODE (target)));\n \n \t  cleared = 1;\n \t}\n@@ -4080,6 +4117,9 @@ store_field (target, bitsize, bitpos, mode, exp, value_mode,\n {\n   HOST_WIDE_INT width_mask = 0;\n \n+  if (TREE_CODE (exp) == ERROR_MARK)\n+    return const0_rtx;\n+\n   if (bitsize < HOST_BITS_PER_WIDE_INT)\n     width_mask = ((HOST_WIDE_INT) 1 << bitsize) - 1;\n \n@@ -4697,6 +4737,9 @@ safe_from_p (x, exp)\n \tcase METHOD_CALL_EXPR:\n \t  /* This takes a rtx argument, but shouldn't appear here.  */\n \t  abort ();\n+\t  \n+\tdefault:\n+\t  break;\n \t}\n \n       /* If we have an rtx, we do not need to scan our operands.  */\n@@ -5215,51 +5258,59 @@ expand_expr (exp, target, tmode, modifier)\n       }\n \n     case PLACEHOLDER_EXPR:\n-      /* If there is an object on the head of the placeholder list,\n-\t see if some object in it's references is of type TYPE.  For\n-\t further information, see tree.def.  */\n-      if (placeholder_list)\n-\t{\n-\t  tree need_type = TYPE_MAIN_VARIANT (type);\n-\t  tree object = 0;\n-\t  tree old_list = placeholder_list;\n-\t  tree elt;\n+      {\n+\ttree placeholder_expr;\n+\n+\t/* If there is an object on the head of the placeholder list,\n+\t   see if some object in it's references is of type TYPE.  For\n+\t   further information, see tree.def.  */\n+\tfor (placeholder_expr = placeholder_list;\n+\t     placeholder_expr != 0;\n+\t     placeholder_expr = TREE_CHAIN (placeholder_expr))\n+\t  {\n+\t    tree need_type = TYPE_MAIN_VARIANT (type);\n+\t    tree object = 0;\n+\t    tree old_list = placeholder_list;\n+\t    tree elt;\n+\n+\t    /* See if the object is the type that we want.  */\n+\t    if ((TYPE_MAIN_VARIANT (TREE_TYPE\n+\t\t\t\t    (TREE_PURPOSE (placeholder_expr)))\n+\t\t == need_type))\n+\t      object = TREE_PURPOSE (placeholder_expr);\n+\n+\t    /* Find the innermost reference that is of the type we want.  */\n+\t    for (elt = TREE_PURPOSE (placeholder_expr);\n+\t\t elt != 0\n+\t\t && (TREE_CODE_CLASS (TREE_CODE (elt)) == 'r'\n+\t\t     || TREE_CODE_CLASS (TREE_CODE (elt)) == '1'\n+\t\t     || TREE_CODE_CLASS (TREE_CODE (elt)) == '2'\n+\t\t     || TREE_CODE_CLASS (TREE_CODE (elt)) == 'e');\n+\t\t elt = ((TREE_CODE (elt) == COMPOUND_EXPR\n+\t\t\t || TREE_CODE (elt) == COND_EXPR)\n+\t\t\t? TREE_OPERAND (elt, 1) : TREE_OPERAND (elt, 0)))\n+\t      if (TREE_CODE_CLASS (TREE_CODE (elt)) == 'r'\n+\t\t  && (TYPE_MAIN_VARIANT (TREE_TYPE (TREE_OPERAND (elt, 0)))\n+\t\t      == need_type))\n+\t\t{\n+\t\t  object = TREE_OPERAND (elt, 0);\n+\t\t  break;\n+\t\t}\n \n-\t  /* See if the object is the type that we want.  */\n-\t  if ((TYPE_MAIN_VARIANT (TREE_TYPE (TREE_PURPOSE (placeholder_list)))\n-\t       == need_type))\n-\t    object = TREE_PURPOSE (placeholder_list);\n-\n-\t  /* Find the innermost reference that is of the type we want.  */\n-\t  for (elt = TREE_PURPOSE (placeholder_list);\n-\t       elt != 0\n-\t       && (TREE_CODE_CLASS (TREE_CODE (elt)) == 'r'\n-\t\t   || TREE_CODE_CLASS (TREE_CODE (elt)) == '1'\n-\t\t   || TREE_CODE_CLASS (TREE_CODE (elt)) == '2'\n-\t\t   || TREE_CODE_CLASS (TREE_CODE (elt)) == 'e');\n-\t       elt = ((TREE_CODE (elt) == COMPOUND_EXPR\n-\t\t       || TREE_CODE (elt) == COND_EXPR)\n-\t\t      ? TREE_OPERAND (elt, 1) : TREE_OPERAND (elt, 0)))\n-\t    if (TREE_CODE_CLASS (TREE_CODE (elt)) == 'r'\n-\t\t&& (TYPE_MAIN_VARIANT (TREE_TYPE (TREE_OPERAND (elt, 0)))\n-\t\t    == need_type))\n+\t    if (object != 0)\n \t      {\n-\t\tobject = TREE_OPERAND (elt, 0);\n-\t\tbreak;\n+\t\t/* Expand this object skipping the list entries before\n+\t\t   it was found in case it is also a PLACEHOLDER_EXPR.\n+\t\t   In that case, we want to translate it using subsequent\n+\t\t   entries.  */\n+\t\tplaceholder_list = TREE_CHAIN (placeholder_expr);\n+\t\ttemp = expand_expr (object, original_target, tmode,\n+\t\t\t\t    ro_modifier);\n+\t\tplaceholder_list = old_list;\n+\t\treturn temp;\n \t      }\n-\n-\t  if (object != 0)\n-\t    {\n-\t      /* Expand this object skipping the list entries before\n-\t\t it was found in case it is also a PLACEHOLDER_EXPR.\n-\t\t In that case, we want to translate it using subsequent\n-\t\t entries.  */\n-\t      placeholder_list = TREE_CHAIN (placeholder_list);\n-\t      temp = expand_expr (object, original_target, tmode, ro_modifier);\n-\t      placeholder_list = old_list;\n-\t      return temp;\n-\t    }\n-\t}\n+\t  }\n+      }\n \n       /* We can't find the object or there was a missing WITH_RECORD_EXPR.  */\n       abort ();\n@@ -5681,11 +5732,12 @@ expand_expr (exp, target, tmode, modifier)\n \t\tsize = (bitpos % BITS_PER_UNIT) + bitsize + BITS_PER_UNIT - 1;\n \n         \t/* Check the access right of the pointer.  */\n-\t\temit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n-\t\t\t\t   to, ptr_mode,\n-\t\t\t\t   GEN_INT (size / BITS_PER_UNIT),\n-\t\t\t\t   TYPE_MODE (sizetype),\n-\t\t\t\t   GEN_INT (memory_usage), QImode);\n+\t\tif (size > BITS_PER_UNIT)\n+\t\t  emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n+\t\t\t\t     to, ptr_mode,\n+\t\t\t\t     GEN_INT (size / BITS_PER_UNIT),\n+\t\t\t\t     TYPE_MODE (sizetype),\n+\t\t\t\t     GEN_INT (memory_usage), QImode);\n \t      }\n \t  }\n \n@@ -6832,7 +6884,8 @@ expand_expr (exp, target, tmode, modifier)\n \t\t && integer_zerop (TREE_OPERAND (TREE_OPERAND (exp, 0), 1))\n \t\t && operand_equal_p (TREE_OPERAND (TREE_OPERAND (exp, 0), 0),\n \t\t\t\t     TREE_OPERAND (exp, 1), 0)\n-\t\t && ! TREE_SIDE_EFFECTS (TREE_OPERAND (exp, 0))\n+\t\t && (! TREE_SIDE_EFFECTS (TREE_OPERAND (exp, 0))\n+\t\t     || TREE_CODE (TREE_OPERAND (exp, 1)) == SAVE_EXPR)\n \t\t && safe_from_p (temp, TREE_OPERAND (exp, 2)))\n \t  {\n \t    if (GET_CODE (temp) == REG && REGNO (temp) < FIRST_PSEUDO_REGISTER)\n@@ -6849,7 +6902,8 @@ expand_expr (exp, target, tmode, modifier)\n \t\t && integer_zerop (TREE_OPERAND (TREE_OPERAND (exp, 0), 1))\n \t\t && operand_equal_p (TREE_OPERAND (TREE_OPERAND (exp, 0), 0),\n \t\t\t\t     TREE_OPERAND (exp, 2), 0)\n-\t\t && ! TREE_SIDE_EFFECTS (TREE_OPERAND (exp, 0))\n+\t\t && (! TREE_SIDE_EFFECTS (TREE_OPERAND (exp, 0))\n+\t\t     || TREE_CODE (TREE_OPERAND (exp, 2)) == SAVE_EXPR)\n \t\t && safe_from_p (temp, TREE_OPERAND (exp, 1)))\n \t  {\n \t    if (GET_CODE (temp) == REG && REGNO (temp) < FIRST_PSEUDO_REGISTER)\n@@ -6928,10 +6982,15 @@ expand_expr (exp, target, tmode, modifier)\n \t      }\n \t    else\n \t      {\n-\t\ttarget = assign_temp (type, 2, 1, 1);\n+\t\ttarget = assign_temp (type, 2, 0, 1);\n \t\t/* All temp slots at this level must not conflict.  */\n \t\tpreserve_temp_slots (target);\n \t\tDECL_RTL (slot) = target;\n+\t\tif (TREE_ADDRESSABLE (slot))\n+\t\t  {\n+\t\t    TREE_ADDRESSABLE (slot) = 0;\n+\t\t    mark_addressable (slot);\n+\t\t  }\n \n \t\t/* Since SLOT is not known to the called function\n \t\t   to belong to its stack frame, we must build an explicit\n@@ -7775,6 +7834,9 @@ bc_expand_expr (exp)\n \t\n \treturn;\n       }\n+      \n+    default:\n+      abort ();\n     }\n   \n   abort ();\n@@ -8672,6 +8734,16 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t\t\t\t\t\tTREE_INT_CST_LOW (TREE_VALUE (arglist)),\n \t\t\t\t\t\thard_frame_pointer_rtx);\n \n+\t  /* Some ports cannot access arbitrary stack frames.  */\n+\t  if (tem == NULL)\n+\t    {\n+\t      if (DECL_FUNCTION_CODE (fndecl) == BUILT_IN_FRAME_ADDRESS)\n+\t\twarning (\"unsupported arg to `__builtin_frame_address'\");\n+\t      else\n+\t\twarning (\"unsupported arg to `__builtin_return_address'\");\n+\t      return const0_rtx;\n+\t    }\n+\n \t  /* For __builtin_frame_address, return what we've got.  */\n \t  if (DECL_FUNCTION_CODE (fndecl) == BUILT_IN_FRAME_ADDRESS)\n \t    return tem;\n@@ -8777,13 +8849,19 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \n \t  if (! (*insn_operand_predicate[(int)icode][0]) (result, insn_mode))\n \t    result = gen_reg_rtx (insn_mode);\n-\n \t  src_rtx = memory_address (BLKmode,\n \t\t\t\t    expand_expr (src, NULL_RTX, ptr_mode,\n \t\t\t\t\t\t EXPAND_NORMAL));\n+\n \t  if (! (*insn_operand_predicate[(int)icode][1]) (src_rtx, Pmode))\n \t    src_rtx = copy_to_mode_reg (Pmode, src_rtx);\n \n+\t  /* Check the string is readable and has an end.  */\n+\t  if (flag_check_memory_usage)\n+\t    emit_library_call (chkr_check_str_libfunc, 1, VOIDmode, 2,\n+\t\t\t       src_rtx, ptr_mode,\n+\t\t\t       GEN_INT (MEMORY_USE_RO), QImode);\n+\n \t  char_rtx = const0_rtx;\n \t  char_mode = insn_operand_mode[(int)icode][2];\n \t  if (! (*insn_operand_predicate[(int)icode][2]) (char_rtx, char_mode))\n@@ -8838,9 +8916,12 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t  /* Arg could be non-pointer if user redeclared this fcn wrong.  */\n \t  || TREE_CODE (TREE_TYPE (TREE_VALUE (arglist))) != POINTER_TYPE\n \t  || TREE_CHAIN (arglist) == 0\n-\t  || TREE_CODE (TREE_TYPE (TREE_VALUE (TREE_CHAIN (arglist)))) != POINTER_TYPE\n+\t  || (TREE_CODE (TREE_TYPE (TREE_VALUE (TREE_CHAIN (arglist))))\n+\t      != POINTER_TYPE)\n \t  || TREE_CHAIN (TREE_CHAIN (arglist)) == 0\n-\t  || TREE_CODE (TREE_TYPE (TREE_VALUE (TREE_CHAIN (TREE_CHAIN (arglist))))) != INTEGER_TYPE)\n+\t  || (TREE_CODE (TREE_TYPE (TREE_VALUE\n+\t\t\t\t    (TREE_CHAIN (TREE_CHAIN (arglist)))))\n+\t      != INTEGER_TYPE))\n \tbreak;\n       else\n \t{\n@@ -8853,7 +8934,7 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t    = get_pointer_alignment (src, BIGGEST_ALIGNMENT) / BITS_PER_UNIT;\n \t  int dest_align\n \t    = get_pointer_alignment (dest, BIGGEST_ALIGNMENT) / BITS_PER_UNIT;\n-\t  rtx dest_rtx, dest_mem, src_mem;\n+\t  rtx dest_rtx, dest_mem, src_mem, src_rtx, dest_addr, len_rtx;\n \n \t  /* If either SRC or DEST is not a pointer type, don't do\n \t     this operation in-line.  */\n@@ -8872,22 +8953,33 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t    dest = TREE_OPERAND (dest, 0);\n \t  type = TREE_TYPE (TREE_TYPE (dest));\n \t  MEM_IN_STRUCT_P (dest_mem) = AGGREGATE_TYPE_P (type);\n+\t  src_rtx = expand_expr (src, NULL_RTX, ptr_mode, EXPAND_SUM);\n \t  src_mem = gen_rtx (MEM, BLKmode,\n-\t\t\t     memory_address (BLKmode,\n-\t\t\t\t\t     expand_expr (src, NULL_RTX,\n-\t\t\t\t\t\t\t  ptr_mode,\n-\t\t\t\t\t\t\t  EXPAND_SUM)));\n+\t\t\t     memory_address (BLKmode, src_rtx));\n+\t  len_rtx = expand_expr (len, NULL_RTX, VOIDmode, 0);\n+\n+\t  /* Just copy the rights of SRC to the rights of DEST.  */\n+\t  if (flag_check_memory_usage)\n+\t    emit_library_call (chkr_copy_bitmap_libfunc, 1, VOIDmode, 3,\n+\t\t\t       src_rtx, ptr_mode,\n+\t\t\t       dest_rtx, ptr_mode,\n+\t\t\t       len_rtx, TYPE_MODE (sizetype));\n+\n \t  /* There could be a void* cast on top of the object.  */\n \t  while (TREE_CODE (src) == NOP_EXPR)\n \t    src = TREE_OPERAND (src, 0);\n \t  type = TREE_TYPE (TREE_TYPE (src));\n \t  MEM_IN_STRUCT_P (src_mem) = AGGREGATE_TYPE_P (type);\n \n \t  /* Copy word part most expediently.  */\n-\t  emit_block_move (dest_mem, src_mem,\n-\t\t\t   expand_expr (len, NULL_RTX, VOIDmode, 0),\n-\t\t\t   MIN (src_align, dest_align));\n-\t  return force_operand (dest_rtx, NULL_RTX);\n+\t  dest_addr\n+\t    = emit_block_move (dest_mem, src_mem, len_rtx,\n+\t\t\t       MIN (src_align, dest_align));\n+\n+\t  if (dest_addr == 0)\n+\t    dest_addr = force_operand (dest_rtx, NULL_RTX);\n+\n+\t  return dest_addr;\n \t}\n \n     case BUILT_IN_MEMSET:\n@@ -8916,7 +9008,7 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \n \t  int dest_align\n \t    = get_pointer_alignment (dest, BIGGEST_ALIGNMENT) / BITS_PER_UNIT;\n-\t  rtx dest_rtx, dest_mem;\n+\t  rtx dest_rtx, dest_mem, dest_addr, len_rtx;\n \n \t  /* If DEST is not a pointer type, don't do this \n \t     operation in-line.  */\n@@ -8930,16 +9022,28 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t  dest_rtx = expand_expr (dest, NULL_RTX, ptr_mode, EXPAND_SUM);\n \t  dest_mem = gen_rtx (MEM, BLKmode,\n \t\t\t      memory_address (BLKmode, dest_rtx));\n+\t  len_rtx = expand_expr (len, NULL_RTX, VOIDmode, 0);\n+\n+\t  /* Just check DST is writable and mark it as readable.  */\n+\t  if (flag_check_memory_usage)\n+\t    emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n+\t\t\t       dest_rtx, ptr_mode,\n+\t\t\t       len_rtx, TYPE_MODE (sizetype),\n+\t\t\t       GEN_INT (MEMORY_USE_WO), QImode);\n+\n+\n \t  /* There could be a void* cast on top of the object.  */\n \t  while (TREE_CODE (dest) == NOP_EXPR)\n \t    dest = TREE_OPERAND (dest, 0);\n \t  type = TREE_TYPE (TREE_TYPE (dest));\n \t  MEM_IN_STRUCT_P (dest_mem) = AGGREGATE_TYPE_P (type);\n \n-\t  clear_storage (dest_mem, expand_expr (len, NULL_RTX, VOIDmode, 0),\n-                           dest_align);\n+\t  dest_addr = clear_storage (dest_mem, len_rtx, dest_align);\n+\n+\t  if (dest_addr == 0)\n+\t    dest_addr = force_operand (dest_rtx, NULL_RTX);\n \n-\t  return force_operand (dest_rtx, NULL_RTX);\n+\t  return dest_addr;\n \t}\n \n /* These comparison functions need an instruction that returns an actual\n@@ -8951,6 +9055,10 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n       if (!optimize && ! CALLED_AS_BUILT_IN (fndecl))\n \tbreak;\n \n+      /* If we need to check memory accesses, call the library function.  */\n+      if (flag_check_memory_usage)\n+\tbreak;\n+\n       if (arglist == 0\n \t  /* Arg could be non-pointer if user redeclared this fcn wrong.  */\n \t  || TREE_CODE (TREE_TYPE (TREE_VALUE (arglist))) != POINTER_TYPE\n@@ -9004,6 +9112,10 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n       if (!optimize && ! CALLED_AS_BUILT_IN (fndecl))\n \tbreak;\n \n+      /* If we need to check memory accesses, call the library function.  */\n+      if (flag_check_memory_usage)\n+\tbreak;\n+\n       if (arglist == 0\n \t  /* Arg could be non-pointer if user redeclared this fcn wrong.  */\n \t  || TREE_CODE (TREE_TYPE (TREE_VALUE (arglist))) != POINTER_TYPE\n@@ -9498,7 +9610,7 @@ expand_builtin_apply (function, arguments, argsize)\n      haven't figured out how the calling convention macros effect this,\n      but it's likely that the source and/or destination addresses in\n      the block copy will need updating in machine specific ways.  */\n-  dest = copy_addr_to_reg (push_block (argsize, 0, 0));\n+  dest = allocate_dynamic_stack_space (argsize, 0, 0);\n   emit_block_move (gen_rtx (MEM, BLKmode, dest),\n \t\t   gen_rtx (MEM, BLKmode, incoming_args),\n \t\t   argsize,\n@@ -9942,6 +10054,9 @@ preexpand_calls (exp)\n     case SAVE_EXPR:\n       if (SAVE_EXPR_RTL (exp) != 0)\n \treturn;\n+      \n+    default:\n+      break;\n     }\n \n   nops = tree_code_length[(int) TREE_CODE (exp)];\n@@ -10566,9 +10681,38 @@ do_jump_by_parts_equality_rtx (op0, if_false_label, if_true_label)\n      rtx if_false_label, if_true_label;\n {\n   int nwords = GET_MODE_SIZE (GET_MODE (op0)) / UNITS_PER_WORD;\n+  rtx part;\n   int i;\n   rtx drop_through_label = 0;\n \n+  /* The fastest way of doing this comparison on almost any machine is to\n+     \"or\" all the words and compare the result.  If all have to be loaded\n+     from memory and this is a very wide item, it's possible this may\n+     be slower, but that's highly unlikely.  */\n+\n+  part = gen_reg_rtx (word_mode);\n+  emit_move_insn (part, operand_subword_force (op0, 0, GET_MODE (op0)));\n+  for (i = 1; i < nwords && part != 0; i++)\n+    part = expand_binop (word_mode, ior_optab, part,\n+\t\t\t operand_subword_force (op0, i, GET_MODE (op0)),\n+\t\t\t part, 1, OPTAB_WIDEN);\n+\n+  if (part != 0)\n+    {\n+      rtx comp = compare_from_rtx (part, const0_rtx, EQ, 1, word_mode,\n+\t\t\t\t   NULL_RTX, 0);\n+\n+      if (comp == const_true_rtx)\n+\temit_jump (if_false_label);\n+      else if (comp == const0_rtx)\n+\temit_jump (if_true_label);\n+      else\n+\tdo_jump_for_compare (comp, if_false_label, if_true_label);\n+\n+      return;\n+    }\n+\n+  /* If we couldn't do the \"or\" simply, do this with a series of compares.  */\n   if (! if_false_label)\n     drop_through_label = if_false_label = gen_label_rtx ();\n \n@@ -10585,6 +10729,7 @@ do_jump_by_parts_equality_rtx (op0, if_false_label, if_true_label)\n \n   if (if_true_label)\n     emit_jump (if_true_label);\n+\n   if (drop_through_label)\n     emit_label (drop_through_label);\n }"}, {"sha": "15f1addb1a52bc731c054db87eac791fe11a3308", "filename": "gcc/expr.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -506,6 +506,7 @@ extern rtx chkr_check_addr_libfunc;\n extern rtx chkr_set_right_libfunc;\n extern rtx chkr_copy_bitmap_libfunc;\n extern rtx chkr_check_exec_libfunc;\n+extern rtx chkr_check_str_libfunc;\n \f\n typedef rtx (*rtxfun) PROTO ((rtx));\n \n@@ -681,7 +682,7 @@ extern rtx convert_to_mode PROTO((enum machine_mode, rtx, int));\n extern rtx convert_modes PROTO((enum machine_mode, enum machine_mode, rtx, int));\n \n /* Emit code to move a block Y to a block X.  */\n-extern void emit_block_move PROTO((rtx, rtx, rtx, int));\n+extern rtx emit_block_move PROTO((rtx, rtx, rtx, int));\n \n /* Copy all or part of a value X into registers starting at REGNO.\n    The number of registers to be filled is NREGS.  */\n@@ -709,7 +710,7 @@ extern void use_group_regs PROTO((rtx *, rtx));\n /* Write zeros through the storage of OBJECT.\n    If OBJECT has BLKmode, SIZE is its length in bytes and ALIGN is its\n    alignment.  */\n-extern void clear_storage PROTO((rtx, rtx, int));\n+extern rtx clear_storage PROTO((rtx, rtx, int));\n \n /* Emit insns to set X from Y.  */\n extern rtx emit_move_insn PROTO((rtx, rtx));\n@@ -919,8 +920,6 @@ extern rtx hard_libcall_value PROTO((enum machine_mode));\n    of STACK_BOUNDARY / BITS_PER_UNIT.  */\n extern rtx round_push PROTO((rtx));\n \n-extern void emit_block_move PROTO((rtx, rtx, rtx, int));\n-\n extern rtx store_bit_field PROTO((rtx, int, int, enum machine_mode, rtx, int, int));\n extern rtx extract_bit_field PROTO((rtx, int, int, int, rtx, enum machine_mode, enum machine_mode, int, int));\n extern rtx expand_mult PROTO((enum machine_mode, rtx, rtx, rtx, int));"}, {"sha": "7c53293455d33c58f4fce4c008a5216b5009d2c5", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -126,8 +126,8 @@ g77.o: $(CONFIG_H) multilib.h config.status $(lang_specs_files) g77.c\n \t-DLANG_SPECIFIC_DRIVER -c g77.c\n \n # Create the compiler driver for g77.\n-g77$(exeext): g77.o g77spec.o version.o choose-temp.o pexecute.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n-\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ g77.o g77spec.o version.o \\\n+g77$(exeext): g77.o g77spec.o version.o choose-temp.o pexecute.o prefix.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+\t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ g77.o g77spec.o prefix.o version.o \\\n \t  choose-temp.o pexecute.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Create a version of the g77 driver which calls the cross-compiler."}, {"sha": "2a17b5abb3426688c642d4e9d086c8e28198ecc4", "filename": "gcc/f/runtime/configure", "status": "modified", "additions": 78, "deletions": 76, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ff%2Fruntime%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ff%2Fruntime%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2Fconfigure?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,7 +1,7 @@\n #! /bin/sh\n \n # Guess values for system-dependent variables and create Makefiles.\n-# Generated automatically using autoconf version 2.12 \n+# Generated automatically using autoconf version 2.12.1 \n # Copyright (C) 1992, 93, 94, 95, 96 Free Software Foundation, Inc.\n #\n # This configure script is free software; the Free Software Foundation\n@@ -49,6 +49,7 @@ mandir='${prefix}/man'\n # Initialize some other variables.\n subdirs=\n MFLAGS= MAKEFLAGS=\n+SHELL=${CONFIG_SHELL-/bin/sh}\n # Maximum number of lines to put in a shell here document.\n ac_max_here_lines=12\n \n@@ -332,7 +333,7 @@ EOF\n     verbose=yes ;;\n \n   -version | --version | --versio | --versi | --vers)\n-    echo \"configure generated by autoconf version 2.12\"\n+    echo \"configure generated by autoconf version 2.12.1\"\n     exit 0 ;;\n \n   -with-* | --with-*)\n@@ -526,7 +527,7 @@ fi\n # Extract the first word of \"gcc\", so it can be a program name with args.\n set dummy gcc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:530: checking for $ac_word\" >&5\n+echo \"configure:531: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -555,7 +556,7 @@ if test -z \"$CC\"; then\n   # Extract the first word of \"cc\", so it can be a program name with args.\n set dummy cc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:559: checking for $ac_word\" >&5\n+echo \"configure:560: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -603,7 +604,7 @@ fi\n fi\n \n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\"\"... $ac_c\" 1>&6\n-echo \"configure:607: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n+echo \"configure:608: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n \n ac_ext=c\n # CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n@@ -613,11 +614,11 @@ ac_link='${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS\n cross_compiling=$ac_cv_prog_cc_cross\n \n cat > conftest.$ac_ext <<EOF\n-#line 617 \"configure\"\n+#line 618 \"configure\"\n #include \"confdefs.h\"\n main(){return(0);}\n EOF\n-if { (eval echo configure:621: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:622: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   ac_cv_prog_cc_works=yes\n   # If we can't run a trivial program, we are probably using a cross compiler.\n   if (./conftest; exit) 2>/dev/null; then\n@@ -637,12 +638,12 @@ if test $ac_cv_prog_cc_works = no; then\n   { echo \"configure: error: installation or configuration problem: C compiler cannot create executables.\" 1>&2; exit 1; }\n fi\n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\"\"... $ac_c\" 1>&6\n-echo \"configure:641: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n+echo \"configure:642: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n echo \"$ac_t\"\"$ac_cv_prog_cc_cross\" 1>&6\n cross_compiling=$ac_cv_prog_cc_cross\n \n echo $ac_n \"checking whether we are using GNU C\"\"... $ac_c\" 1>&6\n-echo \"configure:646: checking whether we are using GNU C\" >&5\n+echo \"configure:647: checking whether we are using GNU C\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gcc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -651,7 +652,7 @@ else\n   yes;\n #endif\n EOF\n-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:655: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:656: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n   ac_cv_prog_gcc=yes\n else\n   ac_cv_prog_gcc=no\n@@ -666,7 +667,7 @@ if test $ac_cv_prog_gcc = yes; then\n   ac_save_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\n   echo $ac_n \"checking whether ${CC-cc} accepts -g\"\"... $ac_c\" 1>&6\n-echo \"configure:670: checking whether ${CC-cc} accepts -g\" >&5\n+echo \"configure:671: checking whether ${CC-cc} accepts -g\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_g'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -711,7 +712,7 @@ else\n   # Extract the first word of \"ranlib\", so it can be a program name with args.\n set dummy ranlib; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:715: checking for $ac_word\" >&5\n+echo \"configure:716: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -744,7 +745,7 @@ fi\n \n # Sanity check for the cross-compilation case:\n echo $ac_n \"checking how to run the C preprocessor\"\"... $ac_c\" 1>&6\n-echo \"configure:748: checking how to run the C preprocessor\" >&5\n+echo \"configure:749: checking how to run the C preprocessor\" >&5\n # On Suns, sometimes $CPP names a directory.\n if test -n \"$CPP\" && test -d \"$CPP\"; then\n   CPP=\n@@ -759,13 +760,13 @@ else\n   # On the NeXT, cc -E runs the code through the compiler's parser,\n   # not just through cpp.\n   cat > conftest.$ac_ext <<EOF\n-#line 763 \"configure\"\n+#line 764 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:769: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:770: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   :\n@@ -776,13 +777,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -E -traditional-cpp\"\n   cat > conftest.$ac_ext <<EOF\n-#line 780 \"configure\"\n+#line 781 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:786: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:787: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   :\n@@ -806,17 +807,17 @@ echo \"$ac_t\"\"$CPP\" 1>&6\n \n ac_safe=`echo \"stdio.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for stdio.h\"\"... $ac_c\" 1>&6\n-echo \"configure:810: checking for stdio.h\" >&5\n+echo \"configure:811: checking for stdio.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 815 \"configure\"\n+#line 816 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:820: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:821: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -844,20 +845,20 @@ fi\n \n \n echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n-echo \"configure:848: checking for ANSI C header files\" >&5\n+echo \"configure:849: checking for ANSI C header files\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 853 \"configure\"\n+#line 854 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <stdarg.h>\n #include <string.h>\n #include <float.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:861: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:862: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -874,7 +875,7 @@ rm -f conftest*\n if test $ac_cv_header_stdc = yes; then\n   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 878 \"configure\"\n+#line 879 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n EOF\n@@ -892,7 +893,7 @@ fi\n if test $ac_cv_header_stdc = yes; then\n   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 896 \"configure\"\n+#line 897 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n EOF\n@@ -913,7 +914,7 @@ if test \"$cross_compiling\" = yes; then\n   :\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 917 \"configure\"\n+#line 918 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n@@ -924,7 +925,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n exit (0); }\n \n EOF\n-if { (eval echo configure:928: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:929: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -950,12 +951,12 @@ fi\n \n \n echo $ac_n \"checking for posix\"\"... $ac_c\" 1>&6\n-echo \"configure:954: checking for posix\" >&5\n+echo \"configure:955: checking for posix\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_header_posix'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 959 \"configure\"\n+#line 960 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <unistd.h>\n@@ -981,12 +982,12 @@ echo \"$ac_t\"\"$g77_cv_header_posix\" 1>&6\n # We can rely on the GNU library being posix-ish.  I guess checking the \n # header isn't actually like checking the functions, though...\n echo $ac_n \"checking for GNU library\"\"... $ac_c\" 1>&6\n-echo \"configure:985: checking for GNU library\" >&5\n+echo \"configure:986: checking for GNU library\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_lib_gnu'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 990 \"configure\"\n+#line 991 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n #ifdef __GNU_LIBRARY__\n@@ -1010,12 +1011,12 @@ echo \"$ac_t\"\"$g77_cv_lib_gnu\" 1>&6\n \n # Apparently cygwin needs to be special-cased.\n echo $ac_n \"checking for cyg\\`win'32\"\"... $ac_c\" 1>&6\n-echo \"configure:1014: checking for cyg\\`win'32\" >&5\n+echo \"configure:1015: checking for cyg\\`win'32\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_sys_cygwin32'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1019 \"configure\"\n+#line 1020 \"configure\"\n #include \"confdefs.h\"\n #ifdef __CYGWIN32__\n   yes\n@@ -1038,17 +1039,17 @@ echo \"$ac_t\"\"$g77_cv_sys_cygwin32\" 1>&6\n \n ac_safe=`echo \"fcntl.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for fcntl.h\"\"... $ac_c\" 1>&6\n-echo \"configure:1042: checking for fcntl.h\" >&5\n+echo \"configure:1043: checking for fcntl.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1047 \"configure\"\n+#line 1048 \"configure\"\n #include \"confdefs.h\"\n #include <fcntl.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1052: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1053: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -1081,12 +1082,12 @@ fi\n \n \n echo $ac_n \"checking for working const\"\"... $ac_c\" 1>&6\n-echo \"configure:1085: checking for working const\" >&5\n+echo \"configure:1086: checking for working const\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_const'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1090 \"configure\"\n+#line 1091 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -1135,7 +1136,7 @@ ccp = (char const *const *) p;\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1139: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1140: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_const=yes\n else\n@@ -1156,12 +1157,12 @@ EOF\n fi\n \n echo $ac_n \"checking for size_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1160: checking for size_t\" >&5\n+echo \"configure:1161: checking for size_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_size_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1165 \"configure\"\n+#line 1166 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -1190,12 +1191,12 @@ fi\n \n \n echo $ac_n \"checking return type of signal handlers\"\"... $ac_c\" 1>&6\n-echo \"configure:1194: checking return type of signal handlers\" >&5\n+echo \"configure:1195: checking return type of signal handlers\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_signal'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1199 \"configure\"\n+#line 1200 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <signal.h>\n@@ -1212,7 +1213,7 @@ int main() {\n int i;\n ; return 0; }\n EOF\n-if { (eval echo configure:1216: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1217: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_type_signal=void\n else\n@@ -1233,12 +1234,12 @@ EOF\n # we'll get atexit by default\n if test $ac_cv_header_stdc != yes; then\n echo $ac_n \"checking for atexit\"\"... $ac_c\" 1>&6\n-echo \"configure:1237: checking for atexit\" >&5\n+echo \"configure:1238: checking for atexit\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_atexit'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1242 \"configure\"\n+#line 1243 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char atexit(); below.  */\n@@ -1261,7 +1262,7 @@ atexit();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1265: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1266: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func_atexit=yes\"\n else\n@@ -1286,12 +1287,12 @@ else\n EOF\n \n   echo $ac_n \"checking for onexit\"\"... $ac_c\" 1>&6\n-echo \"configure:1290: checking for onexit\" >&5\n+echo \"configure:1291: checking for onexit\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_onexit'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1295 \"configure\"\n+#line 1296 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char onexit(); below.  */\n@@ -1314,7 +1315,7 @@ onexit();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1318: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1319: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func_onexit=yes\"\n else\n@@ -1332,12 +1333,12 @@ if eval \"test \\\"`echo '$ac_cv_func_'onexit`\\\" = yes\"; then\n else\n   echo \"$ac_t\"\"no\" 1>&6\n echo $ac_n \"checking for on_exit\"\"... $ac_c\" 1>&6\n-echo \"configure:1336: checking for on_exit\" >&5\n+echo \"configure:1337: checking for on_exit\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_on_exit'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1341 \"configure\"\n+#line 1342 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char on_exit(); below.  */\n@@ -1360,7 +1361,7 @@ on_exit();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1364: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1365: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func_on_exit=yes\"\n else\n@@ -1393,12 +1394,12 @@ fi\n # Apparently positive result on cygwin loses re. NON_UNIX_STDIO\n # (as of cygwin b18).\n echo $ac_n \"checking for fstat\"\"... $ac_c\" 1>&6\n-echo \"configure:1397: checking for fstat\" >&5\n+echo \"configure:1398: checking for fstat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_fstat'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1402 \"configure\"\n+#line 1403 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char fstat(); below.  */\n@@ -1421,7 +1422,7 @@ fstat();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1425: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1426: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func_fstat=yes\"\n else\n@@ -1441,7 +1442,7 @@ else\n fi\n \n echo $ac_n \"checking need for NON_UNIX_STDIO\"\"... $ac_c\" 1>&6\n-echo \"configure:1445: checking need for NON_UNIX_STDIO\" >&5\n+echo \"configure:1446: checking need for NON_UNIX_STDIO\" >&5\n if test $g77_cv_sys_cygwin32 = yes || test $ac_cv_func_fstat = no; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   cat >> confdefs.h <<\\EOF\n@@ -1454,19 +1455,19 @@ fi\n \n # This is necessary for e.g. Linux:\n echo $ac_n \"checking for necessary members of struct FILE\"\"... $ac_c\" 1>&6\n-echo \"configure:1458: checking for necessary members of struct FILE\" >&5\n+echo \"configure:1459: checking for necessary members of struct FILE\" >&5\n if eval \"test \\\"`echo '$''{'g77_cv_struct_FILE'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1463 \"configure\"\n+#line 1464 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n int main() {\n FILE s; s._ptr; s._base; s._flag;\n ; return 0; }\n EOF\n-if { (eval echo configure:1470: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1471: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   g77_cv_struct_FILE=yes\n else\n@@ -1486,15 +1487,15 @@ EOF\n fi\n \n echo $ac_n \"checking for drem in -lm\"\"... $ac_c\" 1>&6\n-echo \"configure:1490: checking for drem in -lm\" >&5\n+echo \"configure:1491: checking for drem in -lm\" >&5\n ac_lib_var=`echo m'_'drem | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lm  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 1498 \"configure\"\n+#line 1499 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -1505,7 +1506,7 @@ int main() {\n drem()\n ; return 0; }\n EOF\n-if { (eval echo configure:1509: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1510: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -1535,19 +1536,19 @@ fi\n # However, on my sunos4/gcc setup unistd.h leads us wrongly to believe\n # we're posix-conformant, so always do the test.\n echo $ac_n \"checking for ansi/posix sprintf result\"\"... $ac_c\" 1>&6\n-echo \"configure:1539: checking for ansi/posix sprintf result\" >&5\n+echo \"configure:1540: checking for ansi/posix sprintf result\" >&5\n if test \"$cross_compiling\" = yes; then\n   g77_cv_sys_sprintf_ansi=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1544 \"configure\"\n+#line 1545 \"configure\"\n #include \"confdefs.h\"\n   #include <stdio.h>\n     /* does sprintf return the number of chars transferred? */\n     main () {char foo[2]; (sprintf(foo, \"1\") == 1) ? exit(0) : exit(1);}\n \n EOF\n-if { (eval echo configure:1551: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:1552: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n then\n   g77_cv_sys_sprintf_ansi=yes\n else\n@@ -1581,9 +1582,9 @@ fi\n \n # define NON_ANSI_RW_MODES on unix (can't hurt)\n echo $ac_n \"checking NON_ANSI_RW_MODES\"\"... $ac_c\" 1>&6\n-echo \"configure:1585: checking NON_ANSI_RW_MODES\" >&5\n+echo \"configure:1586: checking NON_ANSI_RW_MODES\" >&5\n cat > conftest.$ac_ext <<EOF\n-#line 1587 \"configure\"\n+#line 1588 \"configure\"\n #include \"confdefs.h\"\n #ifdef unix\n   yes\n@@ -1624,14 +1625,14 @@ fi\n # (via com.h).  proj.h and com.h are in $srcdir/.., config.h which they need\n # is in ../.. and the config files are in $srcdir/../../config.\n echo $ac_n \"checking f2c integer type\"\"... $ac_c\" 1>&6\n-echo \"configure:1628: checking f2c integer type\" >&5\n+echo \"configure:1629: checking f2c integer type\" >&5\n late_ac_cpp=$ac_cpp\n ac_cpp=\"$late_ac_cpp -I$srcdir/.. -I../.. -I$srcdir/../.. -I$srcdir/../../config\"\n if eval \"test \\\"`echo '$''{'g77_cv_sys_f2cinteger'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1635 \"configure\"\n+#line 1636 \"configure\"\n #include \"confdefs.h\"\n #include \"proj.h\"\n #define FFECOM_DETERMINE_TYPES 1\n@@ -1654,7 +1655,7 @@ rm -f conftest*\n \n if test \"$g77_cv_sys_f2cinteger\" = \"\"; then\n   cat > conftest.$ac_ext <<EOF\n-#line 1658 \"configure\"\n+#line 1659 \"configure\"\n #include \"confdefs.h\"\n #include \"proj.h\"\n #define FFECOM_DETERMINE_TYPES 1\n@@ -1689,14 +1690,14 @@ ac_cpp=$late_ac_cpp\n \n \n echo $ac_n \"checking f2c long int type\"\"... $ac_c\" 1>&6\n-echo \"configure:1693: checking f2c long int type\" >&5\n+echo \"configure:1694: checking f2c long int type\" >&5\n late_ac_cpp=$ac_cpp\n ac_cpp=\"$late_ac_cpp -I$srcdir/.. -I../.. -I$srcdir/../.. -I$srcdir/../../config\"\n if eval \"test \\\"`echo '$''{'g77_cv_sys_f2clongint'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1700 \"configure\"\n+#line 1701 \"configure\"\n #include \"confdefs.h\"\n #include \"proj.h\"\n #define FFECOM_DETERMINE_TYPES 1\n@@ -1719,7 +1720,7 @@ rm -f conftest*\n \n if test \"$g77_cv_sys_f2clongint\" = \"\"; then\n   cat > conftest.$ac_ext <<EOF\n-#line 1723 \"configure\"\n+#line 1724 \"configure\"\n #include \"confdefs.h\"\n #include \"proj.h\"\n #define FFECOM_DETERMINE_TYPES 1\n@@ -1813,7 +1814,7 @@ EOF\n # Ultrix sh set writes to stderr and can't be redirected directly,\n # and sets the high bit in the cache file unless we assign to the vars.\n (set) 2>&1 |\n-  case `(ac_space=' '; set) 2>&1` in\n+  case `(ac_space=' '; set) 2>&1 | grep ac_space` in\n   *ac_space=\\ *)\n     # `set' does not quote correctly, so add quotes (double-quote substitution\n     # turns \\\\\\\\ into \\\\, and sed turns \\\\ into \\).\n@@ -1892,7 +1893,7 @@ do\n     echo \"running \\${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion\"\n     exec \\${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion ;;\n   -version | --version | --versio | --versi | --vers | --ver | --ve | --v)\n-    echo \"$CONFIG_STATUS generated by autoconf version 2.12\"\n+    echo \"$CONFIG_STATUS generated by autoconf version 2.12.1\"\n     exit 0 ;;\n   -help | --help | --hel | --he | --h)\n     echo \"\\$ac_cs_usage\"; exit 0 ;;\n@@ -1911,6 +1912,7 @@ sed 's/%@/@@/; s/@%/@@/; s/%g\\$/@g/; /@g\\$/s/[\\\\\\\\&%]/\\\\\\\\&/g;\n  s/@@/%@/; s/@@/@%/; s/@g\\$/%g/' > conftest.subs <<\\\\CEOF\n $ac_vpsub\n $extrasub\n+s%@SHELL@%$SHELL%g\n s%@CFLAGS@%$CFLAGS%g\n s%@CPPFLAGS@%$CPPFLAGS%g\n s%@CXXFLAGS@%$CXXFLAGS%g"}, {"sha": "4961cf5e92a25fe32df7e3234be90b2bbb63075f", "filename": "gcc/f/runtime/libU77/configure", "status": "modified", "additions": 62, "deletions": 57, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ff%2Fruntime%2FlibU77%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ff%2Fruntime%2FlibU77%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibU77%2Fconfigure?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -1,7 +1,7 @@\n #! /bin/sh\n \n # Guess values for system-dependent variables and create Makefiles.\n-# Generated automatically using autoconf version 2.12 \n+# Generated automatically using autoconf version 2.12.1 \n # Copyright (C) 1992, 93, 94, 95, 96 Free Software Foundation, Inc.\n #\n # This configure script is free software; the Free Software Foundation\n@@ -49,6 +49,7 @@ mandir='${prefix}/man'\n # Initialize some other variables.\n subdirs=\n MFLAGS= MAKEFLAGS=\n+SHELL=${CONFIG_SHELL-/bin/sh}\n # Maximum number of lines to put in a shell here document.\n ac_max_here_lines=12\n \n@@ -332,7 +333,7 @@ EOF\n     verbose=yes ;;\n \n   -version | --version | --versio | --versi | --vers)\n-    echo \"configure generated by autoconf version 2.12\"\n+    echo \"configure generated by autoconf version 2.12.1\"\n     exit 0 ;;\n \n   -with-* | --with-*)\n@@ -525,7 +526,7 @@ fi\n # Extract the first word of \"gcc\", so it can be a program name with args.\n set dummy gcc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:529: checking for $ac_word\" >&5\n+echo \"configure:530: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -554,7 +555,7 @@ if test -z \"$CC\"; then\n   # Extract the first word of \"cc\", so it can be a program name with args.\n set dummy cc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:558: checking for $ac_word\" >&5\n+echo \"configure:559: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -602,7 +603,7 @@ fi\n fi\n \n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\"\"... $ac_c\" 1>&6\n-echo \"configure:606: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n+echo \"configure:607: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n \n ac_ext=c\n # CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n@@ -612,11 +613,11 @@ ac_link='${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS\n cross_compiling=$ac_cv_prog_cc_cross\n \n cat > conftest.$ac_ext <<EOF\n-#line 616 \"configure\"\n+#line 617 \"configure\"\n #include \"confdefs.h\"\n main(){return(0);}\n EOF\n-if { (eval echo configure:620: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:621: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   ac_cv_prog_cc_works=yes\n   # If we can't run a trivial program, we are probably using a cross compiler.\n   if (./conftest; exit) 2>/dev/null; then\n@@ -636,12 +637,12 @@ if test $ac_cv_prog_cc_works = no; then\n   { echo \"configure: error: installation or configuration problem: C compiler cannot create executables.\" 1>&2; exit 1; }\n fi\n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\"\"... $ac_c\" 1>&6\n-echo \"configure:640: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n+echo \"configure:641: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n echo \"$ac_t\"\"$ac_cv_prog_cc_cross\" 1>&6\n cross_compiling=$ac_cv_prog_cc_cross\n \n echo $ac_n \"checking whether we are using GNU C\"\"... $ac_c\" 1>&6\n-echo \"configure:645: checking whether we are using GNU C\" >&5\n+echo \"configure:646: checking whether we are using GNU C\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gcc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -650,7 +651,7 @@ else\n   yes;\n #endif\n EOF\n-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:654: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:655: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n   ac_cv_prog_gcc=yes\n else\n   ac_cv_prog_gcc=no\n@@ -665,7 +666,7 @@ if test $ac_cv_prog_gcc = yes; then\n   ac_save_CFLAGS=\"$CFLAGS\"\n   CFLAGS=\n   echo $ac_n \"checking whether ${CC-cc} accepts -g\"\"... $ac_c\" 1>&6\n-echo \"configure:669: checking whether ${CC-cc} accepts -g\" >&5\n+echo \"configure:670: checking whether ${CC-cc} accepts -g\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_g'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -701,14 +702,17 @@ fi\n # Extract the first word of \"chmod\", so it can be a program name with args.\n set dummy chmod; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:705: checking for $ac_word\" >&5\n+echo \"configure:706: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_path_ac_cv_prog_chmod'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   case \"$ac_cv_prog_chmod\" in\n   /*)\n   ac_cv_path_ac_cv_prog_chmod=\"$ac_cv_prog_chmod\" # Let the user override the test with a path.\n   ;;\n+  ?:/*)\t\t\t \n+  ac_cv_path_ac_cv_prog_chmod=\"$ac_cv_prog_chmod\" # Let the user override the test with a dos path.\n+  ;;\n   *)\n   IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n   for ac_dir in $PATH; do\n@@ -748,7 +752,7 @@ else\n   # Extract the first word of \"ranlib\", so it can be a program name with args.\n set dummy ranlib; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:752: checking for $ac_word\" >&5\n+echo \"configure:756: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -781,7 +785,7 @@ fi\n \n \n echo $ac_n \"checking how to run the C preprocessor\"\"... $ac_c\" 1>&6\n-echo \"configure:785: checking how to run the C preprocessor\" >&5\n+echo \"configure:789: checking how to run the C preprocessor\" >&5\n # On Suns, sometimes $CPP names a directory.\n if test -n \"$CPP\" && test -d \"$CPP\"; then\n   CPP=\n@@ -796,13 +800,13 @@ else\n   # On the NeXT, cc -E runs the code through the compiler's parser,\n   # not just through cpp.\n   cat > conftest.$ac_ext <<EOF\n-#line 800 \"configure\"\n+#line 804 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:806: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:810: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   :\n@@ -813,13 +817,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -E -traditional-cpp\"\n   cat > conftest.$ac_ext <<EOF\n-#line 817 \"configure\"\n+#line 821 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:823: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:827: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   :\n@@ -842,20 +846,20 @@ fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n-echo \"configure:846: checking for ANSI C header files\" >&5\n+echo \"configure:850: checking for ANSI C header files\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 851 \"configure\"\n+#line 855 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <stdarg.h>\n #include <string.h>\n #include <float.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:859: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:863: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -872,7 +876,7 @@ rm -f conftest*\n if test $ac_cv_header_stdc = yes; then\n   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 876 \"configure\"\n+#line 880 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n EOF\n@@ -890,7 +894,7 @@ fi\n if test $ac_cv_header_stdc = yes; then\n   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 894 \"configure\"\n+#line 898 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n EOF\n@@ -911,7 +915,7 @@ if test \"$cross_compiling\" = yes; then\n   :\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 915 \"configure\"\n+#line 919 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n@@ -922,7 +926,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n exit (0); }\n \n EOF\n-if { (eval echo configure:926: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:930: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -947,12 +951,12 @@ fi\n \n \n echo $ac_n \"checking whether time.h and sys/time.h may both be included\"\"... $ac_c\" 1>&6\n-echo \"configure:951: checking whether time.h and sys/time.h may both be included\" >&5\n+echo \"configure:955: checking whether time.h and sys/time.h may both be included\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_time'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 956 \"configure\"\n+#line 960 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/time.h>\n@@ -961,7 +965,7 @@ int main() {\n struct tm *tp;\n ; return 0; }\n EOF\n-if { (eval echo configure:965: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:969: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_header_time=yes\n else\n@@ -985,17 +989,17 @@ for ac_hdr in limits.h unistd.h sys/time.h string.h stdlib.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:989: checking for $ac_hdr\" >&5\n+echo \"configure:993: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 994 \"configure\"\n+#line 998 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:999: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1003: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -1023,12 +1027,12 @@ done\n \n \n echo $ac_n \"checking for working const\"\"... $ac_c\" 1>&6\n-echo \"configure:1027: checking for working const\" >&5\n+echo \"configure:1031: checking for working const\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_const'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1032 \"configure\"\n+#line 1036 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -1077,7 +1081,7 @@ ccp = (char const *const *) p;\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1081: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1085: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_const=yes\n else\n@@ -1098,12 +1102,12 @@ EOF\n fi\n \n echo $ac_n \"checking for size_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1102: checking for size_t\" >&5\n+echo \"configure:1106: checking for size_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_size_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1107 \"configure\"\n+#line 1111 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -1131,12 +1135,12 @@ EOF\n fi\n \n echo $ac_n \"checking for mode_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1135: checking for mode_t\" >&5\n+echo \"configure:1139: checking for mode_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_mode_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1140 \"configure\"\n+#line 1144 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -1165,12 +1169,12 @@ fi\n \n \n echo $ac_n \"checking for pid_t\"\"... $ac_c\" 1>&6\n-echo \"configure:1169: checking for pid_t\" >&5\n+echo \"configure:1173: checking for pid_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_pid_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1174 \"configure\"\n+#line 1178 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -1198,20 +1202,20 @@ EOF\n fi\n \n echo $ac_n \"checking for st_blksize in struct stat\"\"... $ac_c\" 1>&6\n-echo \"configure:1202: checking for st_blksize in struct stat\" >&5\n+echo \"configure:1206: checking for st_blksize in struct stat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_st_blksize'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1207 \"configure\"\n+#line 1211 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/stat.h>\n int main() {\n struct stat s; s.st_blksize;\n ; return 0; }\n EOF\n-if { (eval echo configure:1215: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1219: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_st_blksize=yes\n else\n@@ -1232,20 +1236,20 @@ EOF\n fi\n \n echo $ac_n \"checking for st_blocks in struct stat\"\"... $ac_c\" 1>&6\n-echo \"configure:1236: checking for st_blocks in struct stat\" >&5\n+echo \"configure:1240: checking for st_blocks in struct stat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_st_blocks'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1241 \"configure\"\n+#line 1245 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/stat.h>\n int main() {\n struct stat s; s.st_blocks;\n ; return 0; }\n EOF\n-if { (eval echo configure:1249: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1253: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_st_blocks=yes\n else\n@@ -1268,20 +1272,20 @@ else\n fi\n \n echo $ac_n \"checking for st_rdev in struct stat\"\"... $ac_c\" 1>&6\n-echo \"configure:1272: checking for st_rdev in struct stat\" >&5\n+echo \"configure:1276: checking for st_rdev in struct stat\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_st_rdev'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1277 \"configure\"\n+#line 1281 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/stat.h>\n int main() {\n struct stat s; s.st_rdev;\n ; return 0; }\n EOF\n-if { (eval echo configure:1285: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1289: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_st_rdev=yes\n else\n@@ -1302,20 +1306,20 @@ EOF\n fi\n \n echo $ac_n \"checking whether struct tm is in sys/time.h or time.h\"\"... $ac_c\" 1>&6\n-echo \"configure:1306: checking whether struct tm is in sys/time.h or time.h\" >&5\n+echo \"configure:1310: checking whether struct tm is in sys/time.h or time.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_struct_tm'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1311 \"configure\"\n+#line 1315 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <time.h>\n int main() {\n struct tm *tp; tp->tm_sec;\n ; return 0; }\n EOF\n-if { (eval echo configure:1319: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1323: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_struct_tm=time.h\n else\n@@ -1340,12 +1344,12 @@ fi\n for ac_func in symlink getcwd getwd lstat gethostname strerror clock getrusage\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1344: checking for $ac_func\" >&5\n+echo \"configure:1348: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1349 \"configure\"\n+#line 1353 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1368,7 +1372,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1372: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1376: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1426,7 +1430,7 @@ EOF\n # Ultrix sh set writes to stderr and can't be redirected directly,\n # and sets the high bit in the cache file unless we assign to the vars.\n (set) 2>&1 |\n-  case `(ac_space=' '; set) 2>&1` in\n+  case `(ac_space=' '; set) 2>&1 | grep ac_space` in\n   *ac_space=\\ *)\n     # `set' does not quote correctly, so add quotes (double-quote substitution\n     # turns \\\\\\\\ into \\\\, and sed turns \\\\ into \\).\n@@ -1493,7 +1497,7 @@ do\n     echo \"running \\${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion\"\n     exec \\${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion ;;\n   -version | --version | --versio | --versi | --vers | --ver | --ve | --v)\n-    echo \"$CONFIG_STATUS generated by autoconf version 2.12\"\n+    echo \"$CONFIG_STATUS generated by autoconf version 2.12.1\"\n     exit 0 ;;\n   -help | --help | --hel | --he | --h)\n     echo \"\\$ac_cs_usage\"; exit 0 ;;\n@@ -1512,6 +1516,7 @@ sed 's/%@/@@/; s/@%/@@/; s/%g\\$/@g/; /@g\\$/s/[\\\\\\\\&%]/\\\\\\\\&/g;\n  s/@@/%@/; s/@@/@%/; s/@g\\$/%g/' > conftest.subs <<\\\\CEOF\n $ac_vpsub\n $extrasub\n+s%@SHELL@%$SHELL%g\n s%@CFLAGS@%$CFLAGS%g\n s%@CPPFLAGS@%$CPPFLAGS%g\n s%@CXXFLAGS@%$CXXFLAGS%g"}, {"sha": "7faaf2d72859c09a87b4dbf226cf4c34ccabb51b", "filename": "gcc/final.c", "status": "modified", "additions": 35, "deletions": 10, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -284,10 +284,14 @@ static void add_bb\t\tPROTO((FILE *));\n static int add_bb_string\tPROTO((char *, int));\n static void output_source_line\tPROTO((FILE *, rtx));\n static rtx walk_alter_subreg\tPROTO((rtx));\n-static int alter_cond\t\tPROTO((rtx));\n static void output_asm_name\tPROTO((void));\n static void output_operand\tPROTO((rtx, int));\n+#ifdef LEAF_REGISTERS\n static void leaf_renumber_regs\tPROTO((rtx));\n+#endif\n+#ifdef HAVE_cc0\n+static int alter_cond\t\tPROTO((rtx));\n+#endif\n \n extern char *getpwd ();\n \f\n@@ -455,11 +459,16 @@ end_final (filename)\n \t    ASM_OUTPUT_SHARED_LOCAL (asm_out_file, name, size, rounded);\n \t  else\n #endif\n+#ifdef ASM_OUTPUT_ALIGNED_DECL_LOCAL\n+\t    ASM_OUTPUT_ALIGNED_DECL_LOCAL (asm_out_file, NULL_TREE, name, size,\n+\t\t\t\t\t      BIGGEST_ALIGNMENT);\n+#else\n #ifdef ASM_OUTPUT_ALIGNED_LOCAL\n \t    ASM_OUTPUT_ALIGNED_LOCAL (asm_out_file, name, size,\n \t\t\t\t      BIGGEST_ALIGNMENT);\n #else\n \t    ASM_OUTPUT_LOCAL (asm_out_file, name, size, rounded);\n+#endif\n #endif\n \t}\n \n@@ -672,6 +681,10 @@ get_attr_length (insn)\n \t    length += get_attr_length (XVECEXP (body, 0, i));\n \telse\n \t  length = insn_default_length (insn);\n+\tbreak;\n+\n+      default:\n+\tbreak;\n       }\n \n #ifdef ADJUST_INSN_LENGTH\n@@ -753,6 +766,7 @@ shorten_branches (first)\n \t     to determine how much padding we need at this point.  Therefore,\n \t     assume worst possible alignment.  */\n \t  insn_lengths[uid] += unitsize - 1;\n+\n #else\n \t  ;\n #endif\n@@ -2041,9 +2055,12 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t\t      PUT_CODE (insn, NOTE);\n \t\t      NOTE_LINE_NUMBER (insn) = NOTE_INSN_DELETED;\n \t\t      NOTE_SOURCE_FILE (insn) = 0;\n-\t\t      break;\n \t\t    }\n \t\t}\n+\t\tbreak;\n+\n+\t      default:\n+\t\tbreak;\n \t      }\n \t  }\n \n@@ -2327,6 +2344,9 @@ walk_alter_subreg (x)\n \n     case SUBREG:\n       return alter_subreg (x);\n+      \n+    default:\n+      break;\n     }\n \n   return x;\n@@ -2385,6 +2405,9 @@ alter_cond (cond)\n \tPUT_CODE (cond, NE);\n \tvalue = 2;\n \tbreak;\n+\t\n+      default:\n+\tbreak;\n       }\n \n   if (cc_status.flags & CC_NOT_NEGATIVE)\n@@ -2411,6 +2434,9 @@ alter_cond (cond)\n \tPUT_CODE (cond, NE);\n \tvalue = 2;\n \tbreak;\n+\t\n+      default:\n+\tbreak;\n       }\n \n   if (cc_status.flags & CC_NO_OVERFLOW)\n@@ -2433,19 +2459,15 @@ alter_cond (cond)\n       case LTU:\n \t/* Jump becomes no-op.  */\n \treturn -1;\n+\t\n+      default:\n+\tbreak;\n       }\n \n   if (cc_status.flags & (CC_Z_IN_NOT_N | CC_Z_IN_N))\n     switch (GET_CODE (cond))\n       {\n-      case LE:\n-      case LEU:\n-      case GE:\n-      case GEU:\n-      case LT:\n-      case LTU:\n-      case GT:\n-      case GTU:\n+      default:\n \tabort ();\n \n       case NE:\n@@ -2483,6 +2505,9 @@ alter_cond (cond)\n \tPUT_CODE (cond, GEU);\n \tvalue = 2;\n \tbreak;\n+\n+      default:\n+\tbreak;\n       }\n \n   return value;"}, {"sha": "a8a9fe7e4d3f86418bc73074df7998d0e08707b6", "filename": "gcc/fixinc.math", "status": "modified", "additions": 24, "deletions": 82, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ffixinc.math", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ffixinc.math", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc.math?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -2,7 +2,7 @@\n # Fix struct exception in /usr/include/math.h.\n #\n # We expect several systems which did not need fixincludes in the past\n-# to need to fix just math.h.  So we created a separate fixinc.mathh\n+# to need to fix just math.h.  So we created a separate fixinc.math\n # script to fix just that problem.\n # See README-fixinc for more information.\n \n@@ -13,99 +13,41 @@ INPUT=${2-${INPUT-/usr/include}}\n # Directory in which to store the results.\n LIB=${1?\"fixincludes: output directory not specified\"}\n \n-# Define PWDCMD as a command to use to get the working dir\n-# in the form that we want.\n-PWDCMD=pwd\n-case \"`pwd`\" in\n-//*)\n-\t# On an Apollo, discard everything before `/usr'.\n-\tPWDCMD=\"eval pwd | sed -e 's,.*/usr/,/usr/,'\"\n-\t;;\n-esac\n-\n-# Original directory.\n-ORIGDIR=`${PWDCMD}`\n-\n # Make sure it exists.\n if [ ! -d $LIB ]; then\n   mkdir $LIB || exit 1\n fi\n \n-# Make LIB absolute only if needed to avoid problems with the amd.\n-case $LIB in\n-/*)\n-\t;;\n-*)\n-\tcd $LIB; LIB=`${PWDCMD}`\n-\t;;\n-esac\n-\n-# Fail if no arg to specify a directory for the output.\n-if [ x$1 = x ]\n-then echo fixincludes: no output directory specified\n-exit 1\n-fi\n-\n echo Building fixed headers in ${LIB}\n \n-# Determine whether this system has symbolic links.\n-if ln -s X $LIB/ShouldNotExist 2>/dev/null; then\n-  rm -f $LIB/ShouldNotExist\n-  LINKS=true\n-elif ln -s X /tmp/ShouldNotExist 2>/dev/null; then\n-  rm -f /tmp/ShouldNotExist\n-  LINKS=true\n-else\n-  LINKS=false\n-fi\n-\n-cd ${INPUT}\n-\n # Some math.h files define struct exception, which conflicts with\n # the class exception defined in the C++ file std/stdexcept.h.  We\n # redefine it to __math_exception.  This is not a great fix, but I\n # haven't been able to think of anything better.\n file=math.h\n-if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n-  cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n-  chmod +w ${LIB}/$file 2>/dev/null\n-  chmod a+r ${LIB}/$file 2>/dev/null\n-fi\n-\n-if [ -r ${LIB}/$file ]; then\n-  echo Fixing $file, exception\n-  sed -e '/struct exception/i\\\n-#ifdef __cplusplus\\\n-#define exception __math_exception\\\n-#endif\\\n-'\\\n-      -e '/struct exception/a\\\n-#ifdef __cplusplus\\\n-#undef exception\\\n-#endif\\\n-' ${LIB}/$file > ${LIB}/${file}.sed\n-  rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n-  if egrep 'matherr()' ${LIB}/$file >/dev/null 2>&1; then\n-    sed -e '/matherr/i\\\n-#ifdef __cplusplus\\\n-#define exception __math_exception\\\n-#endif\\\n-'\\\n-        -e '/matherr/a\\\n-#ifdef __cplusplus\\\n-#undef exception\\\n-#endif\\\n-' ${LIB}/$file > ${LIB}/${file}.sed\n-    rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n-  fi\n-  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n-    rm -f ${LIB}/$file\n-  else\n-    # Find any include directives that use \"file\".\n-    for include in `egrep '^[       ]*#[    ]*include[      ]*\"[^/]' ${LIB}/$file | sed -e 's/^[    ]*#[    ]*include[      ]*\"\\([^\"]*\\)\".*$/\\1/'`; do\n-      dir=`echo $file | sed -e s'|/[^/]*$||'`\n-      required=\"$required ${INPUT} $dir/$include ${LIB}/$dir/$include\"\n-    done\n+if [ -r $INPUT/$file ]; then\n+  echo Checking $INPUT/$file\n+  if grep 'struct exception' $INPUT/$file >/dev/null\n+  then\n+    echo Fixed $file\n+    rm -f $LIB/$file\n+    cat <<'__EOF__' >$LIB/$file\n+#ifndef _MATH_H_WRAPPER\n+#ifdef __cplusplus\n+# define exception __math_exception\n+#endif\n+#include_next <math.h>\n+#ifdef __cplusplus\n+# undef exception\n+#endif\n+#define _MATH_H_WRAPPER\n+#endif /* _MATH_H_WRAPPER */\n+__EOF__\n+    # Define _MATH_H_WRAPPER at the end of the wrapper, not the start,\n+    # so that if #include_next gets another instance of the wrapper,\n+    # this will follow the #include_next chain until we arrive at\n+    # the real <math.h>.\n+    chmod a+r $LIB/$file\n   fi\n fi\n exit 0"}, {"sha": "dfe50d592e24b1b026a160650ba97f08f4806921", "filename": "gcc/fixincludes", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ffixincludes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ffixincludes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixincludes?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -2901,6 +2901,43 @@ for file in curses.h dbm.h locale.h stdio.h stdlib.h string.h time.h unistd.h sy\n   fi\n done\n \n+# HPUX 10.x sys/param.h defines MAXINT which clashes with values.h\n+file=sys/param.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed -e '/[  ]MAXINT[        ]/i\\\n+#ifndef MAXINT\n+'\\\n+      -e '/[  ]MAXINT[        ]/a\\\n+#endif\n+' $file_to_fix > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    true\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    chmod a+r ${LIB}/$file\n+    # Find any include directives that use \"file\".\n+    for include in `egrep '^[       ]*#[    ]*include[      ]*\"[^/]' ${LIB}/$file | sed -e 's/^[    ]*#[    ]*include[ \t]*\"\\([^\"]*\\)\".*$/\\1/'`; do\n+      dir=`echo $file | sed -e s'|/[^/]*$||'`\n+      required=\"$required ${INPUT} $dir/$include ${LIB}/$dir/$include\"\n+    done\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+\n # This loop does not appear to do anything, because it uses file\n # rather than $file when setting target.  It also appears to be\n # unnecessary, since the main loop processes symbolic links.\n@@ -2960,4 +2997,5 @@ for file in $files; do\n   rmdir $LIB/$file > /dev/null 2>&1\n done\n \n+\n exit 0"}, {"sha": "d6e666cee12ecfd9b971f58a3f31f92cbd8b1904", "filename": "gcc/flow.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -108,8 +108,8 @@ Boston, MA 02111-1307, USA.  */\n    register usage: reg_n_refs, reg_n_deaths, reg_n_sets, reg_live_length,\n    reg_n_calls_crosses and reg_basic_block.  */\n \f\n-#include <stdio.h>\n #include \"config.h\"\n+#include <stdio.h>\n #include \"rtl.h\"\n #include \"basic-block.h\"\n #include \"insn-config.h\"\n@@ -2616,6 +2616,9 @@ mark_used_regs (needed, live, x, final, insn)\n \t    )\n \t  SET_REGNO_REG_SET (live, i);\n       break;\n+\n+    default:\n+      break;\n     }\n \n   /* Recursively scan the operands of this expression.  */"}, {"sha": "3ce114bb4ade80602780b33f5736cfc71f0da1b5", "filename": "gcc/fold-const.c", "status": "modified", "additions": 265, "deletions": 175, "changes": 440, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -42,9 +42,9 @@ Boston, MA 02111-1307, USA.  */\n    force_fit_type takes a constant and prior overflow indicator, and\n    forces the value to fit the type.  It returns an overflow indicator.  */\n \n+#include \"config.h\"\n #include <stdio.h>\n #include <setjmp.h>\n-#include \"config.h\"\n #include \"flags.h\"\n #include \"tree.h\"\n \n@@ -62,6 +62,7 @@ int div_and_round_double\tPROTO((enum tree_code, int, HOST_WIDE_INT,\n \t\t\t\t       HOST_WIDE_INT *));\n static int split_tree\t\tPROTO((tree, enum tree_code, tree *,\n \t\t\t\t       tree *, int *));\n+static tree int_const_binop\tPROTO((enum tree_code, tree, tree, int, int));\n static tree const_binop\t\tPROTO((enum tree_code, tree, tree, int));\n static tree fold_convert\tPROTO((tree, tree));\n static enum tree_code invert_tree_comparison PROTO((enum tree_code));\n@@ -1051,192 +1052,215 @@ split_tree (in, code, varp, conp, varsignp)\n   return 0;\n }\n \f\n-/* Combine two constants ARG1 and ARG2 under operation CODE\n+/* Combine two integer constants ARG1 and ARG2 under operation CODE\n    to produce a new constant.\n-   We assume ARG1 and ARG2 have the same data type,\n-   or at least are the same kind of constant and the same machine mode.\n \n-   If NOTRUNC is nonzero, do not truncate the result to fit the data type.  */\n+   If NOTRUNC is nonzero, do not truncate the result to fit the data type.\n+   If FORSIZE is nonzero, compute overflow for unsigned types.  */\n \n static tree\n-const_binop (code, arg1, arg2, notrunc)\n+int_const_binop (code, arg1, arg2, notrunc, forsize)\n      enum tree_code code;\n      register tree arg1, arg2;\n-     int notrunc;\n+     int notrunc, forsize;\n {\n-  STRIP_NOPS (arg1); STRIP_NOPS (arg2);\n+  HOST_WIDE_INT int1l, int1h, int2l, int2h;\n+  HOST_WIDE_INT low, hi;\n+  HOST_WIDE_INT garbagel, garbageh;\n+  register tree t;\n+  int uns = TREE_UNSIGNED (TREE_TYPE (arg1));\n+  int overflow = 0;\n+  int no_overflow = 0;\n \n-  if (TREE_CODE (arg1) == INTEGER_CST)\n+  int1l = TREE_INT_CST_LOW (arg1);\n+  int1h = TREE_INT_CST_HIGH (arg1);\n+  int2l = TREE_INT_CST_LOW (arg2);\n+  int2h = TREE_INT_CST_HIGH (arg2);\n+\n+  switch (code)\n     {\n-      register HOST_WIDE_INT int1l = TREE_INT_CST_LOW (arg1);\n-      register HOST_WIDE_INT int1h = TREE_INT_CST_HIGH (arg1);\n-      HOST_WIDE_INT int2l = TREE_INT_CST_LOW (arg2);\n-      HOST_WIDE_INT int2h = TREE_INT_CST_HIGH (arg2);\n-      HOST_WIDE_INT low, hi;\n-      HOST_WIDE_INT garbagel, garbageh;\n-      register tree t;\n-      int uns = TREE_UNSIGNED (TREE_TYPE (arg1));\n-      int overflow = 0;\n-      int no_overflow = 0;\n+    case BIT_IOR_EXPR:\n+      low = int1l | int2l, hi = int1h | int2h;\n+      break;\n \n-      switch (code)\n-\t{\n-\tcase BIT_IOR_EXPR:\n-\t  low = int1l | int2l, hi = int1h | int2h;\n-\t  break;\n+    case BIT_XOR_EXPR:\n+      low = int1l ^ int2l, hi = int1h ^ int2h;\n+      break;\n \n-\tcase BIT_XOR_EXPR:\n-\t  low = int1l ^ int2l, hi = int1h ^ int2h;\n-\t  break;\n+    case BIT_AND_EXPR:\n+      low = int1l & int2l, hi = int1h & int2h;\n+      break;\n \n-\tcase BIT_AND_EXPR:\n-\t  low = int1l & int2l, hi = int1h & int2h;\n-\t  break;\n+    case BIT_ANDTC_EXPR:\n+      low = int1l & ~int2l, hi = int1h & ~int2h;\n+      break;\n \n-\tcase BIT_ANDTC_EXPR:\n-\t  low = int1l & ~int2l, hi = int1h & ~int2h;\n-\t  break;\n+    case RSHIFT_EXPR:\n+      int2l = - int2l;\n+    case LSHIFT_EXPR:\n+      /* It's unclear from the C standard whether shifts can overflow.\n+\t The following code ignores overflow; perhaps a C standard\n+\t interpretation ruling is needed.  */\n+      lshift_double (int1l, int1h, int2l,\n+\t\t     TYPE_PRECISION (TREE_TYPE (arg1)),\n+\t\t     &low, &hi,\n+\t\t     !uns);\n+      no_overflow = 1;\n+      break;\n \n-\tcase RSHIFT_EXPR:\n-\t  int2l = - int2l;\n-\tcase LSHIFT_EXPR:\n-\t  /* It's unclear from the C standard whether shifts can overflow.\n-\t     The following code ignores overflow; perhaps a C standard\n-\t     interpretation ruling is needed.  */\n-\t  lshift_double (int1l, int1h, int2l,\n-\t\t\t TYPE_PRECISION (TREE_TYPE (arg1)),\n-\t\t\t &low, &hi,\n-\t\t\t !uns);\n-\t  no_overflow = 1;\n-\t  break;\n+    case RROTATE_EXPR:\n+      int2l = - int2l;\n+    case LROTATE_EXPR:\n+      lrotate_double (int1l, int1h, int2l,\n+\t\t      TYPE_PRECISION (TREE_TYPE (arg1)),\n+\t\t      &low, &hi);\n+      break;\n \n-\tcase RROTATE_EXPR:\n-\t  int2l = - int2l;\n-\tcase LROTATE_EXPR:\n-\t  lrotate_double (int1l, int1h, int2l,\n-\t\t\t  TYPE_PRECISION (TREE_TYPE (arg1)),\n-\t\t\t  &low, &hi);\n-\t  break;\n+    case PLUS_EXPR:\n+      overflow = add_double (int1l, int1h, int2l, int2h, &low, &hi);\n+      break;\n \n-\tcase PLUS_EXPR:\n-\t  overflow = add_double (int1l, int1h, int2l, int2h, &low, &hi);\n-\t  break;\n+    case MINUS_EXPR:\n+      neg_double (int2l, int2h, &low, &hi);\n+      add_double (int1l, int1h, low, hi, &low, &hi);\n+      overflow = overflow_sum_sign (hi, int2h, int1h);\n+      break;\n \n-\tcase MINUS_EXPR:\n-\t  neg_double (int2l, int2h, &low, &hi);\n-\t  add_double (int1l, int1h, low, hi, &low, &hi);\n-\t  overflow = overflow_sum_sign (hi, int2h, int1h);\n-\t  break;\n+    case MULT_EXPR:\n+      overflow = mul_double (int1l, int1h, int2l, int2h, &low, &hi);\n+      break;\n \n-\tcase MULT_EXPR:\n-\t  overflow = mul_double (int1l, int1h, int2l, int2h, &low, &hi);\n+    case TRUNC_DIV_EXPR:\n+    case FLOOR_DIV_EXPR: case CEIL_DIV_EXPR:\n+    case EXACT_DIV_EXPR:\n+      /* This is a shortcut for a common special case.  */\n+      if (int2h == 0 && int2l > 0\n+\t  && ! TREE_CONSTANT_OVERFLOW (arg1)\n+\t  && ! TREE_CONSTANT_OVERFLOW (arg2)\n+\t  && int1h == 0 && int1l >= 0)\n+\t{\n+\t  if (code == CEIL_DIV_EXPR)\n+\t    int1l += int2l - 1;\n+\t  low = int1l / int2l, hi = 0;\n \t  break;\n+\t}\n \n-\tcase TRUNC_DIV_EXPR:\n-\tcase FLOOR_DIV_EXPR: case CEIL_DIV_EXPR:\n-\tcase EXACT_DIV_EXPR:\n-\t  /* This is a shortcut for a common special case.  */\n-\t  if (int2h == 0 && int2l > 0\n-\t      && ! TREE_CONSTANT_OVERFLOW (arg1)\n-\t      && ! TREE_CONSTANT_OVERFLOW (arg2)\n-\t      && int1h == 0 && int1l >= 0)\n-\t    {\n-\t      if (code == CEIL_DIV_EXPR)\n-\t\tint1l += int2l - 1;\n-\t      low = int1l / int2l, hi = 0;\n-\t      break;\n-\t    }\n-\n-\t  /* ... fall through ... */\n+      /* ... fall through ... */\n \n-\tcase ROUND_DIV_EXPR: \n-\t  if (int2h == 0 && int2l == 1)\n-\t    {\n-\t      low = int1l, hi = int1h;\n-\t      break;\n-\t    }\n-\t  if (int1l == int2l && int1h == int2h\n-\t      && ! (int1l == 0 && int1h == 0))\n-\t    {\n-\t      low = 1, hi = 0;\n-\t      break;\n-\t    }\n-\t  overflow = div_and_round_double (code, uns,\n-\t\t\t\t\t   int1l, int1h, int2l, int2h,\n-\t\t\t\t\t   &low, &hi, &garbagel, &garbageh);\n+    case ROUND_DIV_EXPR: \n+      if (int2h == 0 && int2l == 1)\n+\t{\n+\t  low = int1l, hi = int1h;\n \t  break;\n-\n-\tcase TRUNC_MOD_EXPR:\n-\tcase FLOOR_MOD_EXPR: case CEIL_MOD_EXPR:\n-\t  /* This is a shortcut for a common special case.  */\n-\t  if (int2h == 0 && int2l > 0\n-\t      && ! TREE_CONSTANT_OVERFLOW (arg1)\n-\t      && ! TREE_CONSTANT_OVERFLOW (arg2)\n-\t      && int1h == 0 && int1l >= 0)\n-\t    {\n-\t      if (code == CEIL_MOD_EXPR)\n-\t\tint1l += int2l - 1;\n-\t      low = int1l % int2l, hi = 0;\n-\t      break;\n-\t    }\n-\n-\t  /* ... fall through ... */\n-\n-\tcase ROUND_MOD_EXPR: \n-\t  overflow = div_and_round_double (code, uns,\n-\t\t\t\t\t   int1l, int1h, int2l, int2h,\n-\t\t\t\t\t   &garbagel, &garbageh, &low, &hi);\n+\t}\n+      if (int1l == int2l && int1h == int2h\n+\t  && ! (int1l == 0 && int1h == 0))\n+\t{\n+\t  low = 1, hi = 0;\n \t  break;\n+\t}\n+      overflow = div_and_round_double (code, uns,\n+\t\t\t\t       int1l, int1h, int2l, int2h,\n+\t\t\t\t       &low, &hi, &garbagel, &garbageh);\n+      break;\n \n-\tcase MIN_EXPR:\n-\tcase MAX_EXPR:\n-\t  if (uns)\n-\t    {\n-\t      low = (((unsigned HOST_WIDE_INT) int1h\n-\t\t      < (unsigned HOST_WIDE_INT) int2h)\n-\t\t     || (((unsigned HOST_WIDE_INT) int1h\n-\t\t\t  == (unsigned HOST_WIDE_INT) int2h)\n-\t\t\t && ((unsigned HOST_WIDE_INT) int1l\n-\t\t\t     < (unsigned HOST_WIDE_INT) int2l)));\n-\t    }\n-\t  else\n-\t    {\n-\t      low = ((int1h < int2h)\n-\t\t     || ((int1h == int2h)\n-\t\t\t && ((unsigned HOST_WIDE_INT) int1l\n-\t\t\t     < (unsigned HOST_WIDE_INT) int2l)));\n-\t    }\n-\t  if (low == (code == MIN_EXPR))\n-\t    low = int1l, hi = int1h;\n-\t  else\n-\t    low = int2l, hi = int2h;\n+    case TRUNC_MOD_EXPR:\n+    case FLOOR_MOD_EXPR: case CEIL_MOD_EXPR:\n+      /* This is a shortcut for a common special case.  */\n+      if (int2h == 0 && int2l > 0\n+\t  && ! TREE_CONSTANT_OVERFLOW (arg1)\n+\t  && ! TREE_CONSTANT_OVERFLOW (arg2)\n+\t  && int1h == 0 && int1l >= 0)\n+\t{\n+\t  if (code == CEIL_MOD_EXPR)\n+\t    int1l += int2l - 1;\n+\t  low = int1l % int2l, hi = 0;\n \t  break;\n+\t}\n \n-\tdefault:\n-\t  abort ();\n+      /* ... fall through ... */\n+\n+    case ROUND_MOD_EXPR: \n+      overflow = div_and_round_double (code, uns,\n+\t\t\t\t       int1l, int1h, int2l, int2h,\n+\t\t\t\t       &garbagel, &garbageh, &low, &hi);\n+      break;\n+\n+    case MIN_EXPR:\n+    case MAX_EXPR:\n+      if (uns)\n+\t{\n+\t  low = (((unsigned HOST_WIDE_INT) int1h\n+\t\t  < (unsigned HOST_WIDE_INT) int2h)\n+\t\t || (((unsigned HOST_WIDE_INT) int1h\n+\t\t      == (unsigned HOST_WIDE_INT) int2h)\n+\t\t     && ((unsigned HOST_WIDE_INT) int1l\n+\t\t\t < (unsigned HOST_WIDE_INT) int2l)));\n \t}\n-    got_it:\n-      if (TREE_TYPE (arg1) == sizetype && hi == 0\n-\t  && low >= 0 && low <= TREE_INT_CST_LOW (TYPE_MAX_VALUE (sizetype))\n-\t  && ! overflow\n-\t  && ! TREE_OVERFLOW (arg1) && ! TREE_OVERFLOW (arg2))\n-\tt = size_int (low);\n       else\n \t{\n-\t  t = build_int_2 (low, hi);\n-\t  TREE_TYPE (t) = TREE_TYPE (arg1);\n+\t  low = ((int1h < int2h)\n+\t\t || ((int1h == int2h)\n+\t\t     && ((unsigned HOST_WIDE_INT) int1l\n+\t\t\t < (unsigned HOST_WIDE_INT) int2l)));\n \t}\n+      if (low == (code == MIN_EXPR))\n+\tlow = int1l, hi = int1h;\n+      else\n+\tlow = int2l, hi = int2h;\n+      break;\n \n-      TREE_OVERFLOW (t)\n-\t= ((notrunc ? !uns && overflow\n-\t    : force_fit_type (t, overflow && !uns) && ! no_overflow)\n-\t   | TREE_OVERFLOW (arg1)\n-\t   | TREE_OVERFLOW (arg2));\n-      TREE_CONSTANT_OVERFLOW (t) = (TREE_OVERFLOW (t)\n-\t\t\t\t    | TREE_CONSTANT_OVERFLOW (arg1)\n-\t\t\t\t    | TREE_CONSTANT_OVERFLOW (arg2));\n-      return t;\n+    default:\n+      abort ();\n     }\n+\n+  if (TREE_TYPE (arg1) == sizetype && hi == 0\n+      && low >= 0 && low <= TREE_INT_CST_LOW (TYPE_MAX_VALUE (sizetype))\n+      && ! overflow\n+      && ! TREE_OVERFLOW (arg1) && ! TREE_OVERFLOW (arg2))\n+    t = size_int (low);\n+  else\n+    {\n+      t = build_int_2 (low, hi);\n+      TREE_TYPE (t) = TREE_TYPE (arg1);\n+    }\n+\n+  TREE_OVERFLOW (t)\n+    = ((notrunc ? (!uns || forsize) && overflow\n+\t: force_fit_type (t, (!uns || forsize) && overflow) && ! no_overflow)\n+       | TREE_OVERFLOW (arg1)\n+       | TREE_OVERFLOW (arg2));\n+  /* If we're doing a size calculation, unsigned arithmetic does overflow.\n+     So check if force_fit_type truncated the value.  */\n+  if (forsize\n+      && ! TREE_OVERFLOW (t)\n+      && (TREE_INT_CST_HIGH (t) != hi\n+\t  || TREE_INT_CST_LOW (t) != low))\n+    TREE_OVERFLOW (t) = 1;\n+  TREE_CONSTANT_OVERFLOW (t) = (TREE_OVERFLOW (t)\n+\t\t\t\t| TREE_CONSTANT_OVERFLOW (arg1)\n+\t\t\t\t| TREE_CONSTANT_OVERFLOW (arg2));\n+  return t;\n+}\n+\n+/* Combine two constants ARG1 and ARG2 under operation CODE\n+   to produce a new constant.\n+   We assume ARG1 and ARG2 have the same data type,\n+   or at least are the same kind of constant and the same machine mode.\n+\n+   If NOTRUNC is nonzero, do not truncate the result to fit the data type.  */\n+\n+static tree\n+const_binop (code, arg1, arg2, notrunc)\n+     enum tree_code code;\n+     register tree arg1, arg2;\n+     int notrunc;\n+{\n+  STRIP_NOPS (arg1); STRIP_NOPS (arg2);\n+\n+  if (TREE_CODE (arg1) == INTEGER_CST)\n+    return int_const_binop (code, arg1, arg2, notrunc, 0);\n+\n #if ! defined (REAL_IS_NOT_DOUBLE) || defined (REAL_ARITHMETIC)\n   if (TREE_CODE (arg1) == REAL_CST)\n     {\n@@ -1450,7 +1474,7 @@ size_binop (code, arg0, arg1)\n \treturn arg1;\n \n       /* Handle general case of two integer constants.  */\n-      return const_binop (code, arg0, arg1, 0);\n+      return int_const_binop (code, arg0, arg1, 0, 1);\n     }\n \n   if (arg0 == error_mark_node || arg1 == error_mark_node)\n@@ -1790,6 +1814,8 @@ operand_equal_p (arg0, arg1, only_const)\n       case ADDR_EXPR:\n \treturn operand_equal_p (TREE_OPERAND (arg0, 0), TREE_OPERAND (arg1, 0),\n \t\t\t\t0);\n+      default:\n+\tbreak;\n       }\n \n   if (only_const)\n@@ -1847,11 +1873,13 @@ operand_equal_p (arg0, arg1, only_const)\n \t\t\t\t      TREE_OPERAND (arg1, 1), 0)\n \t\t  && operand_equal_p (TREE_OPERAND (arg0, 2),\n \t\t\t\t      TREE_OPERAND (arg1, 2), 0));\n+\tdefault:\n+\t  return 0;\n \t}\n-      break;\n+      \n+    default:\n+      return 0;\n     }\n-\n-  return 0;\n }\n \f\n /* Similar to operand_equal_p, but see if ARG0 might have been made by\n@@ -2002,9 +2030,10 @@ twoval_comparison_p (arg, cval1, cval2, save_p)\n \treturn 0;\n \n       return 1;\n-    }\n \n-  return 0;\n+    default:\n+      return 0;\n+    }\n }\n \f\n /* ARG is a tree that is known to contain just arithmetic operations and\n@@ -2059,7 +2088,10 @@ eval_subst (arg, old0, new0, old1, new1)\n \t\t\t\t\t  old0, new0, old1, new1),\n \t\t\t      eval_subst (TREE_OPERAND (arg, 2),\n \t\t\t\t\t  old0, new0, old1, new1)));\n+\tdefault:\n+\t  break;\n \t}\n+      /* fall through (???) */\n \n     case '<':\n       {\n@@ -2082,9 +2114,10 @@ eval_subst (arg, old0, new0, old1, new1)\n \n \treturn fold (build (code, type, arg0, arg1));\n       }\n-    }\n \n-  return arg;\n+    default:\n+      return arg;\n+    }\n }\n \f\n /* Return a tree for the case when the result of an expression is RESULT\n@@ -2222,6 +2255,9 @@ invert_truthvalue (arg)\n     case CLEANUP_POINT_EXPR:\n       return build1 (CLEANUP_POINT_EXPR, type,\n \t\t     invert_truthvalue (TREE_OPERAND (arg, 0)));\n+\n+    default:\n+      break;\n     }\n   if (TREE_CODE (TREE_TYPE (arg)) != BOOLEAN_TYPE)\n     abort ();\n@@ -2704,6 +2740,8 @@ range_binop (code, type, arg0, upper0_p, arg1, upper1_p)\n     case GT_EXPR:  case GE_EXPR:\n       result = sgn0 > sgn1;\n       break;\n+    default:\n+      abort ();\n     }\n \n   return convert (type, result ? integer_one_node : integer_zero_node);\n@@ -2780,6 +2818,8 @@ make_range (exp, pin_p, plow, phigh)\n \t    case LE_EXPR:  /* + [-, c] */\n \t      in_p = ! in_p, low = 0, high = arg1;\n \t      break;\n+\t    default:\n+\t      abort ();\n \t    }\n \n \t  exp = arg0;\n@@ -5114,13 +5154,16 @@ fold (expr)\n \t      arg1 = const_binop (MINUS_EXPR, arg1, integer_one_node, 0);\n \t      t = build (code, type, TREE_OPERAND (t, 0), arg1);\n \t      break;\n+\n+\t    default:\n+\t      break;\n \t    }\n \t}\n \n       /* If this is an EQ or NE comparison with zero and ARG0 is\n \t (1 << foo) & bar, convert it to (bar >> foo) & 1.  Both require\n \t two operations, but the latter can be done in one less insn\n-\t one machine that have only two-operand insns or on which a\n+\t on machines that have only two-operand insns or on which a\n \t constant cannot be the first operand.  */\n       if (integer_zerop (arg1) && (code == EQ_EXPR || code == NE_EXPR)\n \t  && TREE_CODE (arg0) == BIT_AND_EXPR)\n@@ -5246,6 +5289,8 @@ fold (expr)\n \t      t = build_int_2 (0, 0);\n \t      TREE_TYPE (t) = type;\n \t      return t;\n+\t    default:\n+\t      abort ();\n \t    }\n \t}\n \n@@ -5273,9 +5318,41 @@ fold (expr)\n \t      return omit_one_operand (type,\n \t\t\t\t       convert (type, integer_zero_node),\n \t\t\t\t       arg0);\n+\t    default:\n+\t      break;\n \t    }\n \t}\n \n+      /* An unsigned <= 0x7fffffff can be simplified.  */\n+      {\n+\tint width = TYPE_PRECISION (TREE_TYPE (arg1));\n+\tif (TREE_CODE (arg1) == INTEGER_CST\n+\t    && ! TREE_CONSTANT_OVERFLOW (arg1)\n+\t    && width <= HOST_BITS_PER_WIDE_INT\n+\t    && TREE_INT_CST_LOW (arg1) == ((HOST_WIDE_INT) 1 << (width - 1)) - 1\n+\t    && TREE_INT_CST_HIGH (arg1) == 0\n+\t    && (INTEGRAL_TYPE_P (TREE_TYPE (arg1))\n+\t\t|| TREE_CODE (TREE_TYPE (arg1)) == POINTER_TYPE)\n+\t    && TREE_UNSIGNED (TREE_TYPE (arg1)))\n+\t  {\n+\t    switch (TREE_CODE (t))\n+\t      {\n+\t      case LE_EXPR:\n+\t\treturn fold (build (GE_EXPR, type,\n+\t\t\t\t    convert (signed_type (TREE_TYPE (arg0)),\n+\t\t\t\t\t     arg0),\n+\t\t\t\t    convert (signed_type (TREE_TYPE (arg1)),\n+\t\t\t\t\t     integer_zero_node)));\n+\t      case GT_EXPR:\n+\t\treturn fold (build (LT_EXPR, type,\n+\t\t\t\t    convert (signed_type (TREE_TYPE (arg0)),\n+\t\t\t\t\t     arg0),\n+\t\t\t\t    convert (signed_type (TREE_TYPE (arg1)),\n+\t\t\t\t\t     integer_zero_node)));\n+\t      }\n+\t  }\n+      }\n+\n       /* If we are comparing an expression that just has comparisons\n \t of two integer values, arithmetic expressions of those comparisons,\n \t and constants, we can simplify it.  There are only three cases\n@@ -5577,6 +5654,8 @@ fold (expr)\n \t\t\t\t\t  fold (build1 (ABS_EXPR,\n \t\t\t\t\t\t\tTREE_TYPE (arg1),\n \t\t\t\t\t\t\targ1))))));\n+\t      default:\n+\t\tabort ();\n \t      }\n \n \t  /* If this is A != 0 ? A : 0, this is simply A.  For ==, it is\n@@ -5608,21 +5687,28 @@ fold (expr)\n \t\t  return pedantic_non_lvalue (convert (type, arg1));\n \t\tcase LE_EXPR:\n \t\tcase LT_EXPR:\n-\t\t  /* In C++ a ?: expression can be an lvalue, so we can't\n-\t\t     do this; we would lose the distinction between\n-\t\t     LT and LE.  */\n-\t\t  if (pedantic_lvalues)\n-\t\t    return pedantic_non_lvalue\n-\t\t      (convert (type, (fold (build (MIN_EXPR, comp_type,\n-\t\t\t\t\t\t    comp_op0, comp_op1)))));\n+\t\t  /* In C++ a ?: expression can be an lvalue, so put the\n+\t\t     operand which will be used if they are equal first\n+\t\t     so that we can convert this back to the \n+\t\t     corresponding COND_EXPR.  */\n+\t\t  return pedantic_non_lvalue\n+\t\t    (convert (type, (fold (build (MIN_EXPR, comp_type,\n+\t\t\t\t\t\t  (comp_code == LE_EXPR\n+\t\t\t\t\t\t   ? comp_op0 : comp_op1),\n+\t\t\t\t\t\t  (comp_code == LE_EXPR\n+\t\t\t\t\t\t   ? comp_op1 : comp_op0))))));\n \t\t  break;\n \t\tcase GE_EXPR:\n \t\tcase GT_EXPR:\n-\t\t  if (pedantic_lvalues)\n-\t\t    return pedantic_non_lvalue\n-\t\t      (convert (type, fold (build (MAX_EXPR, comp_type,\n-\t\t\t\t\t\t   comp_op0, comp_op1))));\n+\t\t  return pedantic_non_lvalue\n+\t\t    (convert (type, fold (build (MAX_EXPR, comp_type,\n+\t\t\t\t\t\t (comp_code == GE_EXPR\n+\t\t\t\t\t\t  ? comp_op0 : comp_op1),\n+\t\t\t\t\t\t (comp_code == GE_EXPR\n+\t\t\t\t\t\t  ? comp_op1 : comp_op0)))));\n \t\t  break;\n+\t\tdefault:\n+\t\t  abort ();\n \t\t}\n \t    }\n \n@@ -5683,6 +5769,10 @@ fold (expr)\n \t\t  return pedantic_non_lvalue\n \t\t    (fold (build (MAX_EXPR, type, arg1, arg2)));\n \t\tbreak;\n+\t      case NE_EXPR:\n+\t\tbreak;\n+\t      default:\n+\t\tabort ();\n \t      }\n \t}\n "}, {"sha": "acc78a2381eb9faec733a3262a8bea65eea49cbe", "filename": "gcc/frame.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -35,6 +35,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"defaults.h\"\n \n #ifdef DWARF2_UNWIND_INFO\n+#include \"gansidecl.h\"\n #include \"dwarf2.h\"\n #include \"frame.h\"\n #include <stddef.h>"}, {"sha": "f7d49717e8ba01626d5fe394f148ab74ada894c5", "filename": "gcc/function.c", "status": "modified", "additions": 283, "deletions": 53, "changes": 336, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -300,14 +300,15 @@ static int invalid_stack_slot;\n /* Last insn of those whose job was to put parms into their nominal homes.  */\n static rtx last_parm_insn;\n \n-/* 1 + last pseudo register number used for loading a copy\n-   of a parameter of this function.  */\n-static int max_parm_reg;\n+/* 1 + last pseudo register number possibly used for loading a copy\n+   of a parameter of this function. */\n+int max_parm_reg;\n \n /* Vector indexed by REGNO, containing location on stack in which\n    to put the parm which is nominally in pseudo register REGNO,\n-   if we discover that that parm must go in the stack.  */\n-static rtx *parm_reg_stack_loc;\n+   if we discover that that parm must go in the stack.  The highest\n+   element in this vector is one less than MAX_PARM_REG, above.  */\n+rtx *parm_reg_stack_loc;\n \n /* Nonzero once virtual register instantiation has been done.\n    assign_stack_local uses frame_pointer_rtx when this is nonzero.  */\n@@ -423,7 +424,7 @@ struct fixup_replacement\n static struct temp_slot *find_temp_slot_from_address  PROTO((rtx));\n static void put_reg_into_stack\tPROTO((struct function *, rtx, tree,\n \t\t\t\t       enum machine_mode, enum machine_mode,\n-\t\t\t\t       int));\n+\t\t\t\t       int, int));\n static void fixup_var_refs\tPROTO((rtx, enum machine_mode, int));\n static struct fixup_replacement\n   *find_fixup_replacement\tPROTO((struct fixup_replacement **, rtx));\n@@ -449,6 +450,8 @@ static tree blocks_nreverse\tPROTO((tree));\n static int all_blocks\t\tPROTO((tree, tree *));\n static int *record_insns\tPROTO((rtx));\n static int contains\t\tPROTO((rtx, int *));\n+static void put_addressof_into_stack PROTO((rtx));\n+static void purge_addressof_1\tPROTO((rtx *, rtx, int));\n \f\n /* Pointer to chain of `struct function' for containing functions.  */\n struct function *outer_function_chain;\n@@ -536,7 +539,7 @@ push_function_context_to (context)\n   init_emit ();\n   save_expr_status (p);\n   save_stmt_status (p);\n-  save_varasm_status (p);\n+  save_varasm_status (p, context);\n \n   if (save_machine_status)\n     (*save_machine_status) (p);\n@@ -1307,6 +1310,7 @@ put_var_into_stack (decl)\n   enum machine_mode promoted_mode, decl_mode;\n   struct function *function = 0;\n   tree context;\n+  int can_use_addressof;\n \n   if (output_bytecode)\n     return;\n@@ -1346,11 +1350,35 @@ put_var_into_stack (decl)\n       decl_mode = promoted_mode = GET_MODE (reg);\n     }\n \n+  can_use_addressof\n+    = (function == 0\n+       /* FIXME make it work for promoted modes too */\n+       && decl_mode == promoted_mode\n+#ifdef NON_SAVING_SETJMP\n+       && ! (NON_SAVING_SETJMP && current_function_calls_setjmp)\n+#endif\n+       );\n+\n+  /* If we can't use ADDRESSOF, make sure we see through one we already\n+     generated.  */\n+  if (! can_use_addressof && GET_CODE (reg) == MEM\n+      && GET_CODE (XEXP (reg, 0)) == ADDRESSOF)\n+    reg = XEXP (XEXP (reg, 0), 0);\n+\n   /* Now we should have a value that resides in one or more pseudo regs.  */\n \n   if (GET_CODE (reg) == REG)\n-    put_reg_into_stack (function, reg, TREE_TYPE (decl),\n-\t\t\tpromoted_mode, decl_mode, TREE_SIDE_EFFECTS (decl));\n+    {\n+      /* If this variable lives in the current function and we don't need\n+\t to put things in the stack for the sake of setjmp, try to keep it\n+\t in a register until we know we actually need the address.  */\n+      if (can_use_addressof)\n+\tgen_mem_addressof (reg, decl);\n+      else\n+\tput_reg_into_stack (function, reg, TREE_TYPE (decl),\n+\t\t\t    promoted_mode, decl_mode,\n+\t\t\t    TREE_SIDE_EFFECTS (decl), 0);\n+    }\n   else if (GET_CODE (reg) == CONCAT)\n     {\n       /* A CONCAT contains two pseudos; put them both in the stack.\n@@ -1360,14 +1388,14 @@ put_var_into_stack (decl)\n #ifdef FRAME_GROWS_DOWNWARD\n       /* Since part 0 should have a lower address, do it second.  */\n       put_reg_into_stack (function, XEXP (reg, 1), part_type, part_mode,\n-\t\t\t  part_mode, TREE_SIDE_EFFECTS (decl));\n+\t\t\t  part_mode, TREE_SIDE_EFFECTS (decl), 0);\n       put_reg_into_stack (function, XEXP (reg, 0), part_type, part_mode,\n-\t\t\t  part_mode, TREE_SIDE_EFFECTS (decl));\n+\t\t\t  part_mode, TREE_SIDE_EFFECTS (decl), 0);\n #else\n       put_reg_into_stack (function, XEXP (reg, 0), part_type, part_mode,\n-\t\t\t  part_mode, TREE_SIDE_EFFECTS (decl));\n+\t\t\t  part_mode, TREE_SIDE_EFFECTS (decl), 0);\n       put_reg_into_stack (function, XEXP (reg, 1), part_type, part_mode,\n-\t\t\t  part_mode, TREE_SIDE_EFFECTS (decl));\n+\t\t\t  part_mode, TREE_SIDE_EFFECTS (decl), 0);\n #endif\n \n       /* Change the CONCAT into a combined MEM for both parts.  */\n@@ -1399,27 +1427,33 @@ put_var_into_stack (decl)\n    VOLATILE_P is nonzero if this is for a \"volatile\" decl.  */\n \n static void\n-put_reg_into_stack (function, reg, type, promoted_mode, decl_mode, volatile_p)\n+put_reg_into_stack (function, reg, type, promoted_mode, decl_mode, volatile_p,\n+\t\t    original_regno)\n      struct function *function;\n      rtx reg;\n      tree type;\n      enum machine_mode promoted_mode, decl_mode;\n      int volatile_p;\n+     int original_regno;\n {\n   rtx new = 0;\n+  int regno = original_regno;\n+\n+  if (regno == 0)\n+    regno = REGNO (reg);\n \n   if (function)\n     {\n-      if (REGNO (reg) < function->max_parm_reg)\n-\tnew = function->parm_reg_stack_loc[REGNO (reg)];\n+      if (regno < function->max_parm_reg)\n+\tnew = function->parm_reg_stack_loc[regno];\n       if (new == 0)\n \tnew = assign_outer_stack_local (decl_mode, GET_MODE_SIZE (decl_mode),\n \t\t\t\t\t0, function);\n     }\n   else\n     {\n-      if (REGNO (reg) < max_parm_reg)\n-\tnew = parm_reg_stack_loc[REGNO (reg)];\n+      if (regno < max_parm_reg)\n+\tnew = parm_reg_stack_loc[regno];\n       if (new == 0)\n \tnew = assign_stack_local (decl_mode, GET_MODE_SIZE (decl_mode), 0);\n     }\n@@ -1591,22 +1625,21 @@ fixup_var_refs_insns (var, promoted_mode, unsignedp, insn, toplevel)\n \t      struct fixup_replacement *replacements = 0;\n \t      rtx next_insn = NEXT_INSN (insn);\n \n-#ifdef SMALL_REGISTER_CLASSES\n-\t      /* If the insn that copies the results of a CALL_INSN\n-\t\t into a pseudo now references VAR, we have to use an\n-\t\t intermediate pseudo since we want the life of the\n-\t\t return value register to be only a single insn.\n+\t      if (SMALL_REGISTER_CLASSES)\n+\t\t{\n+\t\t  /* If the insn that copies the results of a CALL_INSN\n+\t\t     into a pseudo now references VAR, we have to use an\n+\t\t     intermediate pseudo since we want the life of the\n+\t\t     return value register to be only a single insn.\n \n-\t\t If we don't use an intermediate pseudo, such things as\n-\t\t address computations to make the address of VAR valid\n-\t\t if it is not can be placed between the CALL_INSN and INSN.\n+\t\t     If we don't use an intermediate pseudo, such things as\n+\t\t     address computations to make the address of VAR valid\n+\t\t     if it is not can be placed between the CALL_INSN and INSN.\n \n-\t\t To make sure this doesn't happen, we record the destination\n-\t\t of the CALL_INSN and see if the next insn uses both that\n-\t\t and VAR.  */\n+\t\t     To make sure this doesn't happen, we record the destination\n+\t\t     of the CALL_INSN and see if the next insn uses both that\n+\t\t     and VAR.  */\n \n-\t      if (SMALL_REGISTER_CLASSES)\n-\t\t{\n \t\t  if (call_dest != 0 && GET_CODE (insn) == INSN\n \t\t      && reg_mentioned_p (var, PATTERN (insn))\n \t\t      && reg_mentioned_p (call_dest, PATTERN (insn)))\n@@ -1629,7 +1662,6 @@ fixup_var_refs_insns (var, promoted_mode, unsignedp, insn, toplevel)\n \t\t  else\n \t\t    call_dest = 0;\n \t\t}\n-#endif\n \n \t      /* See if we have to do anything to INSN now that VAR is in\n \t\t memory.  If it needs to be loaded into a pseudo, use a single\n@@ -1732,6 +1764,16 @@ fixup_var_refs_1 (var, promoted_mode, loc, insn, replacements)\n \n   switch (code)\n     {\n+    case ADDRESSOF:\n+      if (XEXP (x, 0) == var)\n+\t{\n+\t  start_sequence ();\n+\t  *loc = force_operand (XEXP (var, 0), NULL_RTX);\n+\t  emit_insn_before (gen_sequence (), insn);\n+\t  end_sequence ();\n+\t}\n+      return;\n+\n     case MEM:\n       if (var == x)\n \t{\n@@ -2206,6 +2248,9 @@ fixup_var_refs_1 (var, promoted_mode, loc, insn, replacements)\n \t    SET_DEST (x) = temp;\n \t  }\n       }\n+\n+    default:\n+      break;\n     }\n \n   /* Nothing special about this RTX; fix its operands.  */\n@@ -2331,6 +2376,11 @@ fixup_stack_1 (x, insn)\n \t  && GET_CODE (XEXP (ad, 0)) == REG\n \t  && ((REGNO (XEXP (ad, 0)) >= FIRST_VIRTUAL_REGISTER\n \t       && REGNO (XEXP (ad, 0)) <= LAST_VIRTUAL_REGISTER)\n+\t      || REGNO (XEXP (ad, 0)) == FRAME_POINTER_REGNUM\n+#if HARD_FRAME_POINTER_REGNUM != FRAME_POINTER_REGNUM\n+\t      || REGNO (XEXP (ad, 0)) == HARD_FRAME_POINTER_REGNUM\n+#endif\n+\t      || REGNO (XEXP (ad, 0)) == STACK_POINTER_REGNUM\n \t      || XEXP (ad, 0) == current_function_internal_arg_pointer)\n \t  && GET_CODE (XEXP (ad, 1)) == CONST_INT)\n \t{\n@@ -2571,6 +2621,158 @@ static int out_arg_offset;\n #endif\n #endif\n \n+/* Build up a (MEM (ADDRESSOF (REG))) rtx for a register REG that just had\n+   its address taken.  DECL is the decl for the object stored in the\n+   register, for later use if we do need to force REG into the stack.\n+   REG is overwritten by the MEM like in put_reg_into_stack.  */\n+\n+rtx\n+gen_mem_addressof (reg, decl)\n+     rtx reg;\n+     tree decl;\n+{\n+  tree type = TREE_TYPE (decl);\n+\n+  rtx r = gen_rtx (ADDRESSOF, Pmode, gen_reg_rtx (GET_MODE (reg)));\n+  ADDRESSOF_REGNO (r) = REGNO (reg);\n+  SET_ADDRESSOF_DECL (r, decl);\n+\n+  XEXP (reg, 0) = r;\n+  PUT_CODE (reg, MEM);\n+  PUT_MODE (reg, DECL_MODE (decl));\n+  MEM_VOLATILE_P (reg) = TREE_SIDE_EFFECTS (decl);\n+  MEM_IN_STRUCT_P (reg) = AGGREGATE_TYPE_P (type);\n+\n+  fixup_var_refs (reg, GET_MODE (reg), TREE_UNSIGNED (type));\n+  return reg;\n+}\n+\n+/* If DECL has an RTL that is an ADDRESSOF rtx, put it into the stack.  */\n+\n+void\n+flush_addressof (decl)\n+     tree decl;\n+{\n+  if ((TREE_CODE (decl) == PARM_DECL || TREE_CODE (decl) == VAR_DECL)\n+      && DECL_RTL (decl) != 0\n+      && GET_CODE (DECL_RTL (decl)) == MEM\n+      && GET_CODE (XEXP (DECL_RTL (decl), 0)) == ADDRESSOF\n+      && GET_CODE (XEXP (XEXP (DECL_RTL (decl), 0), 0)) == REG)\n+    put_addressof_into_stack (XEXP (DECL_RTL (decl), 0));\n+}\n+\n+/* Force the register pointed to by R, an ADDRESSOF rtx, into the stack.  */\n+\n+static void\n+put_addressof_into_stack (r)\n+     rtx r;\n+{\n+  tree decl = ADDRESSOF_DECL (r);\n+  rtx reg = XEXP (r, 0);\n+\n+  if (GET_CODE (reg) != REG)\n+    abort ();\n+\n+  put_reg_into_stack (0, reg, TREE_TYPE (decl), GET_MODE (reg),\n+\t\t      DECL_MODE (decl), TREE_SIDE_EFFECTS (decl),\n+\t\t      ADDRESSOF_REGNO (r));\n+}\n+\n+/* Helper function for purge_addressof.  See if the rtx expression at *LOC\n+   in INSN needs to be changed.  If FORCE, always put any ADDRESSOFs into\n+   the stack.  */\n+\n+static void\n+purge_addressof_1 (loc, insn, force)\n+     rtx *loc;\n+     rtx insn;\n+     int force;\n+{\n+  rtx x;\n+  RTX_CODE code;\n+  int i, j;\n+  char *fmt;\n+\n+  /* Re-start here to avoid recursion in common cases.  */\n+ restart:\n+\n+  x = *loc;\n+  if (x == 0)\n+    return;\n+\n+  code = GET_CODE (x);\n+\n+  if (code == ADDRESSOF && GET_CODE (XEXP (x, 0)) == MEM)\n+    {\n+      rtx insns;\n+\n+      if (validate_change (insn, loc, XEXP (XEXP (x, 0), 0), 0))\n+\treturn;\n+\n+      start_sequence ();\n+      if (! validate_change (insn, loc,\n+\t\t\t     force_operand (XEXP (XEXP (x, 0), 0), NULL_RTX),\n+\t\t\t     0))\n+\tabort ();\n+\n+      insns = get_insns ();\n+      end_sequence ();\n+      emit_insns_before (insns, insn);\n+      return;\n+    }\n+  else if (code == MEM && GET_CODE (XEXP (x, 0)) == ADDRESSOF && ! force)\n+    {\n+      rtx sub = XEXP (XEXP (x, 0), 0);\n+      if (GET_CODE (sub) == REG && GET_MODE (x) != GET_MODE (sub))\n+\t{\n+\t  if (! BYTES_BIG_ENDIAN && ! WORDS_BIG_ENDIAN)\n+\t    {\n+\t      rtx sub2 = gen_rtx (SUBREG, GET_MODE (x), sub, 0);\n+\t      if (validate_change (insn, loc, sub2, 0))\n+\t\tgoto restart;\n+\t    }\n+\t}\n+      else if (validate_change (insn, loc, sub, 0))\n+\tgoto restart;\n+      /* else give up and put it into the stack */\n+    }\n+  else if (code == ADDRESSOF)\n+    {\n+      put_addressof_into_stack (x);\n+      return;\n+    }\n+\n+  /* Scan all subexpressions. */\n+  fmt = GET_RTX_FORMAT (code);\n+  for (i = 0; i < GET_RTX_LENGTH (code); i++, fmt++)\n+    {\n+      if (*fmt == 'e')\n+\tpurge_addressof_1 (&XEXP (x, i), insn, force);\n+      else if (*fmt == 'E')\n+\tfor (j = 0; j < XVECLEN (x, i); j++)\n+\t  purge_addressof_1 (&XVECEXP (x, i, j), insn, force);\n+    }\n+}\n+\n+/* Eliminate all occurrences of ADDRESSOF from INSNS.  Elide any remaining\n+   (MEM (ADDRESSOF)) patterns, and force any needed registers into the\n+   stack.  */\n+\n+void\n+purge_addressof (insns)\n+     rtx insns;\n+{\n+  rtx insn;\n+  for (insn = insns; insn; insn = NEXT_INSN (insn))\n+    if (GET_CODE (insn) == INSN || GET_CODE (insn) == JUMP_INSN\n+\t|| GET_CODE (insn) == CALL_INSN)\n+      {\n+\tpurge_addressof_1 (&PATTERN (insn), insn,\n+\t\t\t   asm_noperands (PATTERN (insn)) > 0);\n+\tpurge_addressof_1 (&REG_NOTES (insn), NULL_RTX, 0);\n+      }\n+}\n+\f\n /* Pass through the INSNS of function FNDECL and convert virtual register\n    references to hard register references.  */\n \n@@ -2580,6 +2782,7 @@ instantiate_virtual_regs (fndecl, insns)\n      rtx insns;\n {\n   rtx insn;\n+  int i;\n \n   /* Compute the offsets to use for this function.  */\n   in_arg_offset = FIRST_PARM_OFFSET (fndecl);\n@@ -2606,6 +2809,12 @@ instantiate_virtual_regs (fndecl, insns)\n \tinstantiate_virtual_regs_1 (&REG_NOTES (insn), NULL_RTX, 0);\n       }\n \n+  /* Instantiate the stack slots for the parm registers, for later use in\n+     addressof elimination.  */\n+  for (i = 0; i < max_parm_reg; ++i)\n+    if (parm_reg_stack_loc[i])\n+      instantiate_virtual_regs_1 (&parm_reg_stack_loc[i], NULL_RTX, 0);\n+\n   /* Now instantiate the remaining register equivalences for debugging info.\n      These will not be valid addresses.  */\n   instantiate_decls (fndecl, 0);\n@@ -2703,6 +2912,7 @@ instantiate_decl (x, size, valid_only)\n \n   addr = XEXP (x, 0);\n   if (CONSTANT_P (addr)\n+      || GET_CODE (addr) == ADDRESSOF\n       || (GET_CODE (addr) == REG\n \t  && (REGNO (addr) < FIRST_VIRTUAL_REGISTER\n \t      || REGNO (addr) > LAST_VIRTUAL_REGISTER)))\n@@ -2832,7 +3042,7 @@ instantiate_virtual_regs_1 (loc, object, extra_insns)\n \t  emit_insns_before (seq, object);\n \t  SET_DEST (x) = new;\n \n-\t  if (!validate_change (object, &SET_SRC (x), temp, 0)\n+\t  if (! validate_change (object, &SET_SRC (x), temp, 0)\n \t      || ! extra_insns)\n \t    abort ();\n \n@@ -3110,6 +3320,23 @@ instantiate_virtual_regs_1 (loc, object, extra_insns)\n \t}\n \n       return 1;\n+\n+    case ADDRESSOF:\n+      if (GET_CODE (XEXP (x, 0)) == REG)\n+\treturn 1;\n+\n+      else if (GET_CODE (XEXP (x, 0)) == MEM)\n+\t{\n+\t  /* If we have a (addressof (mem ..)), do any instantiation inside\n+\t     since we know we'll be making the inside valid when we finally\n+\t     remove the ADDRESSOF.  */\n+\t  instantiate_virtual_regs_1 (&XEXP (XEXP (x, 0), 0), NULL_RTX, 0);\n+\t  return 1;\n+\t}\n+      break;\n+      \n+    default:\n+      break;\n     }\n \n   /* Scan all subexpressions.  */\n@@ -3336,7 +3563,6 @@ assign_parms (fndecl, second_time)\n   /* This is a dummy PARM_DECL that we used for the function result if \n      the function returns a structure.  */\n   tree function_result_decl = 0;\n-  int nparmregs = list_length (fnargs) + LAST_VIRTUAL_REGISTER + 1;\n   int varargs_setup = 0;\n   rtx conversion_insns = 0;\n \n@@ -3394,8 +3620,9 @@ assign_parms (fndecl, second_time)\n       fnargs = function_result_decl;\n     }\n \t\t\t       \n-  parm_reg_stack_loc = (rtx *) oballoc (nparmregs * sizeof (rtx));\n-  bzero ((char *) parm_reg_stack_loc, nparmregs * sizeof (rtx));\n+  max_parm_reg = LAST_VIRTUAL_REGISTER + 1;\n+  parm_reg_stack_loc = (rtx *) savealloc (max_parm_reg * sizeof (rtx));\n+  bzero ((char *) parm_reg_stack_loc, max_parm_reg * sizeof (rtx));\n \n #ifdef INIT_CUMULATIVE_INCOMING_ARGS\n   INIT_CUMULATIVE_INCOMING_ARGS (args_so_far, fntype, NULL_RTX);\n@@ -3924,6 +4151,7 @@ assign_parms (fndecl, second_time)\n \t\tcopy = assign_stack_temp (TYPE_MODE (type),\n \t\t\t\t\t  int_size_in_bytes (type), 1);\n \t      MEM_IN_STRUCT_P (copy) = AGGREGATE_TYPE_P (type);\n+\t      RTX_UNCHANGING_P (copy) = TREE_READONLY (parm);\n \n \t      store_expr (parm, copy, 0);\n \t      emit_move_insn (parmreg, XEXP (copy, 0));\n@@ -3950,17 +4178,20 @@ assign_parms (fndecl, second_time)\n \t  else\n \t    regno = REGNO (parmreg);\n \n-\t  if (regno >= nparmregs)\n+\t  if (regno >= max_parm_reg)\n \t    {\n \t      rtx *new;\n-\t      int old_nparmregs = nparmregs;\n+\t      int old_max_parm_reg = max_parm_reg;\n \n-\t      nparmregs = regno + 5;\n-\t      new = (rtx *) oballoc (nparmregs * sizeof (rtx));\n+\t      /* It's slow to expand this one register at a time,\n+\t\t but it's also rare and we need max_parm_reg to be\n+\t\t precisely correct.  */\n+\t      max_parm_reg = regno + 1;\n+\t      new = (rtx *) savealloc (max_parm_reg * sizeof (rtx));\n \t      bcopy ((char *) parm_reg_stack_loc, (char *) new,\n-\t\t     old_nparmregs * sizeof (rtx));\n-\t      bzero ((char *) (new + old_nparmregs),\n-\t\t     (nparmregs - old_nparmregs) * sizeof (rtx));\n+\t\t     old_max_parm_reg * sizeof (rtx));\n+\t      bzero ((char *) (new + old_max_parm_reg),\n+\t\t     (max_parm_reg - old_max_parm_reg) * sizeof (rtx));\n \t      parm_reg_stack_loc = new;\n \t    }\n \n@@ -4127,7 +4358,6 @@ assign_parms (fndecl, second_time)\n      now that all parameters have been copied out of hard registers.  */\n   emit_insns (conversion_insns);\n \n-  max_parm_reg = max_reg_num ();\n   last_parm_insn = get_last_insn ();\n \n   current_function_args_size = stack_args_size.constant;\n@@ -4486,7 +4716,9 @@ setjmp_protect (block)\n     if ((TREE_CODE (decl) == VAR_DECL\n \t || TREE_CODE (decl) == PARM_DECL)\n \t&& DECL_RTL (decl) != 0\n-\t&& GET_CODE (DECL_RTL (decl)) == REG\n+\t&& (GET_CODE (DECL_RTL (decl)) == REG\n+\t    || (GET_CODE (DECL_RTL (decl)) == MEM\n+\t\t&& GET_CODE (XEXP (DECL_RTL (decl), 0)) == ADDRESSOF))\n \t/* If this variable came from an inline function, it must be\n \t   that it's life doesn't overlap the setjmp.  If there was a\n \t   setjmp in the function, it would already be in memory.  We\n@@ -4517,7 +4749,9 @@ setjmp_protect_args ()\n     if ((TREE_CODE (decl) == VAR_DECL\n \t || TREE_CODE (decl) == PARM_DECL)\n \t&& DECL_RTL (decl) != 0\n-\t&& GET_CODE (DECL_RTL (decl)) == REG\n+\t&& (GET_CODE (DECL_RTL (decl)) == REG\n+\t    || (GET_CODE (DECL_RTL (decl)) == MEM\n+\t\t&& GET_CODE (XEXP (DECL_RTL (decl), 0)) == ADDRESSOF))\n \t&& (\n \t    /* If longjmp doesn't restore the registers,\n \t       don't put anything in them.  */\n@@ -4583,6 +4817,9 @@ fix_lexical_addr (addr, var)\n   if (fp == 0)\n     abort ();\n \n+  if (GET_CODE (addr) == ADDRESSOF && GET_CODE (XEXP (addr, 0)) == MEM)\n+    addr = XEXP (XEXP (addr, 0), 0);\n+\n   /* Decode given address as base reg plus displacement.  */\n   if (GET_CODE (addr) == REG)\n     basereg = addr, displacement = 0;\n@@ -5247,12 +5484,10 @@ expand_function_start (subr, parms_have_cleanups)\n     {\n       last_ptr = assign_stack_local (Pmode, GET_MODE_SIZE (Pmode), 0);\n \n-#ifdef SMALL_REGISTER_CLASSES\n       /* Delay copying static chain if it is not a register to avoid\n \t conflicts with regs used for parameters.  */\n       if (! SMALL_REGISTER_CLASSES\n \t  || GET_CODE (static_chain_incoming_rtx) == REG)\n-#endif\n         emit_move_insn (last_ptr, static_chain_incoming_rtx);\n     }\n \n@@ -5361,14 +5596,12 @@ expand_function_start (subr, parms_have_cleanups)\n \n   assign_parms (subr, 0);\n \n-#ifdef SMALL_REGISTER_CLASSES\n   /* Copy the static chain now if it wasn't a register.  The delay is to\n      avoid conflicts with the parameter passing registers.  */\n \n   if (SMALL_REGISTER_CLASSES && current_function_needs_context)\n       if (GET_CODE (static_chain_incoming_rtx) != REG)\n         emit_move_insn (last_ptr, static_chain_incoming_rtx);\n-#endif\n \n   /* The following was moved from init_function_start.\n      The move is supposed to make sdb output more accurate.  */\n@@ -5403,15 +5636,12 @@ expand_function_start (subr, parms_have_cleanups)\n \t generated above.  */\n       if (tem && ! obey_regdecls)\n \t{\n-#ifdef SMALL_REGISTER_CLASSES\n \t  /* If the static chain originally came in a register, put it back\n \t     there, then move it out in the next insn.  The reason for\n \t     this peculiar code is to satisfy function integration.  */\n \t  if (SMALL_REGISTER_CLASSES\n \t      && GET_CODE (static_chain_incoming_rtx) == REG)\n \t    emit_move_insn (static_chain_incoming_rtx, last_ptr);\n-#endif\n-\n \t  last_ptr = copy_to_reg (static_chain_incoming_rtx);\n \t}\n "}, {"sha": "7f1cd00448d5fa5240b3316809bbb3e29e5242de", "filename": "gcc/gcc.c", "status": "modified", "additions": 134, "deletions": 81, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a", "patch": "@@ -31,6 +31,8 @@ CC recognizes how to compile each input file by suffixes in the file names.\n Once it knows which kind of compilation to perform, the procedure for\n compilation is specified by a string called a \"spec\".  */\n \f\n+#include \"config.h\"\n+\n #include <sys/types.h>\n #include <ctype.h>\n #include <signal.h>\n@@ -41,7 +43,6 @@ compilation is specified by a string called a \"spec\".  */\n #include <sys/file.h>   /* May get R_OK, etc. on some systems.  */\n #endif\n \n-#include \"config.h\"\n #include \"obstack.h\"\n #include \"gansidecl.h\"\n \n@@ -62,6 +63,7 @@ compilation is specified by a string called a \"spec\".  */\n extern int pexecute PROTO ((const char *, char * const *, const char *,\n \t\t\t    const char *, char **, char **, int));\n extern int pwait PROTO ((int, int *, int));\n+extern char *update_path PROTO((char *, char *));\n /* Flag arguments to pexecute.  */\n #define PEXECUTE_FIRST   1\n #define PEXECUTE_LAST    2\n@@ -234,7 +236,8 @@ static struct compiler *lookup_compiler PROTO((char *, int, char *));\n static char *build_search_list\tPROTO((struct path_prefix *, char *, int));\n static void putenv_from_prefixes PROTO((struct path_prefix *, char *));\n static char *find_a_file\tPROTO((struct path_prefix *, char *, int));\n-static void add_prefix\t\tPROTO((struct path_prefix *, char *, int, int, int *));\n+static void add_prefix\t\tPROTO((struct path_prefix *, char *, char *,\n+\t\t\t\t       int, int, int *));\n static char *skip_whitespace\tPROTO((char *));\n static void record_temp_file\tPROTO((char *, int, int));\n static void delete_if_ordinary\tPROTO((char *));\n@@ -577,13 +580,14 @@ static int n_compilers;\n static struct compiler default_compilers[] =\n {\n   /* Add lists of suffixes of known languages here.  If those languages\n-     were no present when we built the driver, we will hit these copies\n-     and given a more meaningful error than \"file not used since\n+     were not present when we built the driver, we will hit these copies\n+     and be given a more meaningful error than \"file not used since\n      linking is not done\".  */\n   {\".cc\", \"#C++\"}, {\".cxx\", \"#C++\"}, {\".cpp\", \"#C++\"}, {\".c++\", \"#C++\"},\n   {\".C\", \"#C++\"}, {\".ads\", \"#Ada\"}, {\".adb\", \"#Ada\"}, {\".ada\", \"#Ada\"},\n   {\".f\", \"#Fortran\"}, {\".for\", \"#Fortran\"}, {\".F\", \"#Fortran\"},\n   {\".fpp\", \"#Fortran\"},\n+  {\".p\", \"#Pascal\"}, {\".pas\", \"#Pascal\"},\n   /* Next come the entries for C.  */\n   {\".c\", \"@c\"},\n   {\"@c\",\n@@ -1157,7 +1161,8 @@ set_spec (name, spec)\n   if (!specs)\n     {\n       struct spec_list *next = (struct spec_list *)0;\n-      for (i = (sizeof (static_specs) / sizeof (static_specs[0])) - 1; i >= 0; i--)\n+      for (i = (sizeof (static_specs) / sizeof (static_specs[0])) - 1;\n+\t   i >= 0; i--)\n \t{\n \t  sl = &static_specs[i];\n \t  sl->next = next;\n@@ -1347,9 +1352,8 @@ store_arg (arg, delete_always, delete_failure)\n      int delete_always, delete_failure;\n {\n   if (argbuf_index + 1 == argbuf_length)\n-    {\n-      argbuf = (char **) xrealloc (argbuf, (argbuf_length *= 2) * sizeof (char *));\n-    }\n+    argbuf\n+      = (char **) xrealloc (argbuf, (argbuf_length *= 2) * sizeof (char *));\n \n   argbuf[argbuf_index++] = arg;\n   argbuf[argbuf_index] = 0;\n@@ -1417,17 +1421,20 @@ read_specs (filename, main_p)\n       if (*p == '%' && !main_p)\n \t{\n \t  p1 = p;\n-\t  while (*p && *p != '\\n') p++;\n-\t  p++;\t\t\t/* skip \\n */\n+\t  while (*p && *p != '\\n')\n+\t    p++;\n+\n+\t  p++;\t\t\t/* Skip '\\n' */\n \n \t  if (!strncmp (p1, \"%include\", sizeof (\"%include\")-1)\n-\t      && (p1[ sizeof (\"%include\")-1 ] == ' '\n-\t\t  || p1[ sizeof (\"%include\")-1 ] == '\\t'))\n+\t      && (p1[sizeof \"%include\" - 1] == ' '\n+\t\t  || p1[sizeof \"%include\" - 1] == '\\t'))\n \t    {\n \t      char *new_filename;\n \n \t      p1 += sizeof (\"%include\");\n-\t      while (*p1 == ' ' || *p1 == '\\t') p1++;\n+\t      while (*p1 == ' ' || *p1 == '\\t')\n+\t\tp1++;\n \n \t      if (*p1++ != '<' || p[-2] != '>')\n \t\tfatal (\"specs %%include syntax malformed after %d characters\",\n@@ -1438,13 +1445,13 @@ read_specs (filename, main_p)\n \t      read_specs (new_filename ? new_filename : p1, FALSE);\n \t      continue;\n \t    }\n-\t  else if (!strncmp (p1, \"%include_noerr\", sizeof (\"%include_noerr\")-1)\n-\t      && (p1[ sizeof (\"%include_noerr\")-1 ] == ' '\n-\t\t  || p1[ sizeof (\"%include_noerr\")-1 ] == '\\t'))\n+\t  else if (!strncmp (p1, \"%include_noerr\", sizeof \"%include_noerr\" - 1)\n+\t\t   && (p1[sizeof \"%include_noerr\" - 1] == ' '\n+\t\t       || p1[sizeof \"%include_noerr\" - 1] == '\\t'))\n \t    {\n \t      char *new_filename;\n \n-\t      p1 += sizeof (\"%include_noerr\");\n+\t      p1 += sizeof \"%include_noerr\";\n \t      while (*p1 == ' ' || *p1 == '\\t') p1++;\n \n \t      if (*p1++ != '<' || p[-2] != '>')\n@@ -1459,36 +1466,44 @@ read_specs (filename, main_p)\n \t\tfprintf (stderr, \"Could not find specs file %s\\n\", p1);\n \t      continue;\n \t    }\n-\t  else if (!strncmp (p1, \"%rename\", sizeof (\"%rename\")-1)\n-\t\t   && (p1[ sizeof (\"%rename\")-1 ] == ' '\n-\t\t       || p1[ sizeof (\"%rename\")-1 ] == '\\t'))\n+\t  else if (!strncmp (p1, \"%rename\", sizeof \"%rename\" - 1)\n+\t\t   && (p1[sizeof \"%rename\" - 1] == ' '\n+\t\t       || p1[sizeof \"%rename\" - 1] == '\\t'))\n \t    {\n \t      int name_len;\n \t      struct spec_list *sl;\n \n \t      /* Get original name */\n-\t      p1 += sizeof (\"%rename\");\n-\t      while (*p1 == ' ' || *p1 == '\\t') p1++;\n-\t      if (!isalpha (*p1))\n+\t      p1 += sizeof \"%rename\";\n+\t      while (*p1 == ' ' || *p1 == '\\t')\n+\t\tp1++;\n+\n+\t      if (! isalpha (*p1))\n \t\tfatal (\"specs %%rename syntax malformed after %d characters\",\n \t\t       p1 - buffer);\n \n \t      p2 = p1;\n-\t      while (*p2 && !isspace (*p2)) p2++;\n+\t      while (*p2 && !isspace (*p2))\n+\t\tp2++;\n+\n \t      if (*p2 != ' ' && *p2 != '\\t')\n \t\tfatal (\"specs %%rename syntax malformed after %d characters\",\n \t\t       p2 - buffer);\n \n \t      name_len = p2 - p1;\n \t      *p2++ = '\\0';\n-\t      while (*p2 == ' ' || *p2 == '\\t') p2++;\n-\t      if (!isalpha (*p2))\n+\t      while (*p2 == ' ' || *p2 == '\\t')\n+\t\tp2++;\n+\n+\t      if (! isalpha (*p2))\n \t\tfatal (\"specs %%rename syntax malformed after %d characters\",\n \t\t       p2 - buffer);\n \n \t      /* Get new spec name */\n \t      p3 = p2;\n-\t      while (*p3 && !isspace (*p3)) p3++;\n+\t      while (*p3 && !isspace (*p3))\n+\t\tp3++;\n+\n \t      if (p3 != p-1)\n \t\tfatal (\"specs %%rename syntax malformed after %d characters\",\n \t\t       p3 - buffer);\n@@ -1501,7 +1516,7 @@ read_specs (filename, main_p)\n \t      if (!sl)\n \t\tfatal (\"specs %s spec was not found to be renamed\", p1);\n \n-\t      if (!strcmp (p1, p2))\n+\t      if (strcmp (p1, p2) == 0)\n \t\tcontinue;\n \n \t      if (verbose_flag)\n@@ -1527,22 +1542,30 @@ read_specs (filename, main_p)\n \n       /* Find the colon that should end the suffix.  */\n       p1 = p;\n-      while (*p1 && *p1 != ':' && *p1 != '\\n') p1++;\n+      while (*p1 && *p1 != ':' && *p1 != '\\n')\n+\tp1++;\n+\n       /* The colon shouldn't be missing.  */\n       if (*p1 != ':')\n \tfatal (\"specs file malformed after %d characters\", p1 - buffer);\n+\n       /* Skip back over trailing whitespace.  */\n       p2 = p1;\n-      while (p2 > buffer && (p2[-1] == ' ' || p2[-1] == '\\t')) p2--;\n+      while (p2 > buffer && (p2[-1] == ' ' || p2[-1] == '\\t'))\n+\tp2--;\n+\n       /* Copy the suffix to a string.  */\n       suffix = save_string (p, p2 - p);\n       /* Find the next line.  */\n       p = skip_whitespace (p1 + 1);\n       if (p[1] == 0)\n \tfatal (\"specs file malformed after %d characters\", p - buffer);\n+\n       p1 = p;\n       /* Find next blank line.  */\n-      while (*p1 && !(*p1 == '\\n' && p1[1] == '\\n')) p1++;\n+      while (*p1 && !(*p1 == '\\n' && p1[1] == '\\n'))\n+\tp1++;\n+\n       /* Specs end at the blank line and do not include the newline.  */\n       spec = save_string (p, p1 - p);\n       p = p1;\n@@ -1555,9 +1578,9 @@ read_specs (filename, main_p)\n \t  if (in[0] == '\\\\' && in[1] == '\\n')\n \t    in += 2;\n \t  else if (in[0] == '#')\n-\t    {\n-\t      while (*in && *in != '\\n') in++;\n-\t    }\n+\t    while (*in && *in != '\\n')\n+\t      in++;\n+\n \t  else\n \t    *out++ = *in++;\n \t}\n@@ -1575,7 +1598,9 @@ read_specs (filename, main_p)\n \t  /* Add this pair to the vector.  */\n \t  compilers\n \t    = ((struct compiler *)\n-\t       xrealloc (compilers, (n_compilers + 2) * sizeof (struct compiler)));\n+\t       xrealloc (compilers,\n+\t\t\t (n_compilers + 2) * sizeof (struct compiler)));\n+\n \t  compilers[n_compilers].suffix = suffix;\n \t  bzero ((char *) compilers[n_compilers].spec,\n \t\t sizeof compilers[n_compilers].spec);\n@@ -1648,10 +1673,12 @@ record_temp_file (filename, always_delete, fail_delete)\n       for (temp = always_delete_queue; temp; temp = temp->next)\n \tif (! strcmp (name, temp->name))\n \t  goto already1;\n+\n       temp = (struct temp_file *) xmalloc (sizeof (struct temp_file));\n       temp->next = always_delete_queue;\n       temp->name = name;\n       always_delete_queue = temp;\n+\n     already1:;\n     }\n \n@@ -1661,10 +1688,12 @@ record_temp_file (filename, always_delete, fail_delete)\n       for (temp = failure_delete_queue; temp; temp = temp->next)\n \tif (! strcmp (name, temp->name))\n \t  goto already2;\n+\n       temp = (struct temp_file *) xmalloc (sizeof (struct temp_file));\n       temp->next = failure_delete_queue;\n       temp->name = name;\n       failure_delete_queue = temp;\n+\n     already2:;\n     }\n }\n@@ -1683,7 +1712,9 @@ delete_if_ordinary (name)\n   fflush (stdout);\n   i = getchar ();\n   if (i != '\\n')\n-    while ((c = getchar ()) != '\\n' && c != EOF) ;\n+    while ((c = getchar ()) != '\\n' && c != EOF)\n+      ;\n+\n   if (i == 'y' || i == 'Y')\n #endif /* DEBUG */\n     if (stat (name, &st) >= 0 && S_ISREG (st.st_mode))\n@@ -1799,7 +1830,7 @@ build_search_list (paths, prefix, check_dir_p)\n       int len = strlen (pprefix->prefix);\n \n       if (machine_suffix\n-\t  && (!check_dir_p\n+\t  && (! check_dir_p\n \t      || is_directory (pprefix->prefix, machine_suffix, 0)))\n \t{\n \t  if (!first_time)\n@@ -1812,10 +1843,10 @@ build_search_list (paths, prefix, check_dir_p)\n \n       if (just_machine_suffix\n \t  && pprefix->require_machine_suffix == 2\n-\t  && (!check_dir_p\n+\t  && (! check_dir_p\n \t      || is_directory (pprefix->prefix, just_machine_suffix, 0)))\n \t{\n-\t  if (!first_time)\n+\t  if (! first_time)\n \t    obstack_1grow (&collect_obstack, PATH_SEPARATOR);\n \t    \n \t  first_time = FALSE;\n@@ -1824,15 +1855,16 @@ build_search_list (paths, prefix, check_dir_p)\n \t\t\tjust_suffix_len);\n \t}\n \n-      if (!pprefix->require_machine_suffix)\n+      if (! pprefix->require_machine_suffix)\n \t{\n-\t  if (!first_time)\n+\t  if (! first_time)\n \t    obstack_1grow (&collect_obstack, PATH_SEPARATOR);\n \n \t  first_time = FALSE;\n \t  obstack_grow (&collect_obstack, pprefix->prefix, len);\n \t}\n     }\n+\n   obstack_1grow (&collect_obstack, '\\0');\n   return obstack_finish (&collect_obstack);\n }\n@@ -1870,7 +1902,10 @@ find_a_file (pprefix, name, mode)\n \n   /* Determine the filename to execute (special case for absolute paths).  */\n \n-  if (*name == '/' || *name == DIR_SEPARATOR)\n+  if (*name == '/' || *name == DIR_SEPARATOR\n+      /* Check for disk name on MS-DOS-based systems.  */\n+      || (DIR_SEPARATOR == '\\\\' && name[1] == ':'\n+\t  && (name[2] == DIR_SEPARATOR || name[2] == '/')))\n     {\n       if (access (name, mode))\n \t{\n@@ -1944,7 +1979,7 @@ find_a_file (pprefix, name, mode)\n \n \t/* Certain prefixes can't be used without the machine suffix\n \t   when the machine or version is explicitly specified.  */\n-\tif (!pl->require_machine_suffix)\n+\tif (! pl->require_machine_suffix)\n \t  {\n \t    /* Some systems have a suffix for executable files.\n \t       So try appending that first.  */\n@@ -1983,22 +2018,25 @@ find_a_file (pprefix, name, mode)\n    through this prefix.  WARN should point to an int\n    which will be set to 1 if this entry is used.\n \n+   COMPONENT is the value to be passed to update_path.\n+\n    REQUIRE_MACHINE_SUFFIX is 1 if this prefix can't be used without\n    the complete value of machine_suffix.\n    2 means try both machine_suffix and just_machine_suffix.  */\n \n static void\n-add_prefix (pprefix, prefix, first, require_machine_suffix, warn)\n+add_prefix (pprefix, prefix, component, first, require_machine_suffix, warn)\n      struct path_prefix *pprefix;\n      char *prefix;\n+     char *component;\n      int first;\n      int require_machine_suffix;\n      int *warn;\n {\n   struct prefix_list *pl, **prev;\n   int len;\n \n-  if (!first && pprefix->plist)\n+  if (! first && pprefix->plist)\n     {\n       for (pl = pprefix->plist; pl->next; pl = pl->next)\n \t;\n@@ -2009,6 +2047,7 @@ add_prefix (pprefix, prefix, first, require_machine_suffix, warn)\n \n   /* Keep track of the longest prefix */\n \n+  prefix = update_path (prefix, component);\n   len = strlen (prefix);\n   if (len > pprefix->max_len)\n     pprefix->max_len = len;\n@@ -2048,6 +2087,7 @@ unused_prefix_warnings (pprefix)\n \t  /* Prevent duplicate warnings.  */\n \t  *pl->used_flag_ptr = 1;\n \t}\n+\n       pl = pl->next;\n     }\n }\n@@ -2068,6 +2108,7 @@ free_path_prefix (pprefix)\n       free (temp->prefix);\n       free ((char *) temp);\n     }\n+\n   pprefix->plist = (struct prefix_list *) 0;\n }\n \f\n@@ -2114,7 +2155,7 @@ execute ()\n   for (n_commands = 1, i = 0; i < argbuf_index; i++)\n     if (strcmp (argbuf[i], \"|\") == 0)\n       {\t\t\t\t/* each command.  */\n-#if defined (__MSDOS__) || (defined (_WIN32) && ! defined (__CYGWIN32__)) || defined (OS2)\n+#if defined (__MSDOS__) || (defined (_WIN32) && ! defined (__CYGWIN32__)) || defined (OS2) || defined (VMS)\n         fatal (\"-pipe not supported\");\n #endif\n \targbuf[i] = 0;\t/* termination of command args.  */\n@@ -2151,7 +2192,9 @@ execute ()\n       fflush (stderr);\n       i = getchar ();\n       if (i != '\\n')\n-\twhile (getchar () != '\\n') ;\n+\twhile (getchar () != '\\n')\n+\t  ;\n+\n       if (i != 'y' && i != 'Y')\n \treturn 0;\n #endif /* DEBUG */\n@@ -2359,8 +2402,8 @@ process_command (argc, argv)\n \n   if (gcc_exec_prefix)\n     {\n-      add_prefix (&exec_prefixes, gcc_exec_prefix, 0, 0, NULL_PTR);\n-      add_prefix (&startfile_prefixes, gcc_exec_prefix, 0, 0, NULL_PTR);\n+      add_prefix (&exec_prefixes, gcc_exec_prefix, \"GCC\", 0, 0, NULL_PTR);\n+      add_prefix (&startfile_prefixes, gcc_exec_prefix, \"GCC\", 0, 0, NULL_PTR);\n     }\n \n   /* COMPILER_PATH and LIBRARY_PATH have values\n@@ -2387,10 +2430,10 @@ process_command (argc, argv)\n \t\t}\n \t      else\n \t\tnstore[endp-startp] = 0;\n-\t      add_prefix (&exec_prefixes, nstore, 0, 0, NULL_PTR);\n+\t      add_prefix (&exec_prefixes, nstore, 0, 0, 0, NULL_PTR);\n \t      add_prefix (&include_prefixes,\n \t\t\t  concat (nstore, \"include\", NULL_PTR),\n-\t\t\t  0, 0, NULL_PTR);\n+\t\t\t  0, 0, 0, NULL_PTR);\n \t      if (*endp == 0)\n \t\tbreak;\n \t      endp = startp = endp + 1;\n@@ -2421,7 +2464,8 @@ process_command (argc, argv)\n \t\t}\n \t      else\n \t\tnstore[endp-startp] = 0;\n-\t      add_prefix (&startfile_prefixes, nstore, 0, 0, NULL_PTR);\n+\t      add_prefix (&startfile_prefixes, nstore, NULL_PTR,\n+\t\t\t  0, 0, NULL_PTR);\n \t      if (*endp == 0)\n \t\tbreak;\n \t      endp = startp = endp + 1;\n@@ -2453,7 +2497,8 @@ process_command (argc, argv)\n \t\t}\n \t      else\n \t\tnstore[endp-startp] = 0;\n-\t      add_prefix (&startfile_prefixes, nstore, 0, 0, NULL_PTR);\n+\t      add_prefix (&startfile_prefixes, nstore, NULL_PTR,\n+\t\t\t  0, 0, NULL_PTR);\n \t      if (*endp == 0)\n \t\tbreak;\n \t      endp = startp = endp + 1;\n@@ -2651,10 +2696,12 @@ process_command (argc, argv)\n \t\t  value = argv[++i];\n \t\telse\n \t\t  value = p + 1;\n-\t\tadd_prefix (&exec_prefixes, value, 1, 0, &warn_B);\n-\t\tadd_prefix (&startfile_prefixes, value, 1, 0, &warn_B);\n-\t\tadd_prefix (&include_prefixes, concat (value, \"include\", NULL_PTR),\n-\t\t\t    1, 0, NULL_PTR);\n+\t\tadd_prefix (&exec_prefixes, value, NULL_PTR, 1, 0, &warn_B);\n+\t\tadd_prefix (&startfile_prefixes, value, NULL_PTR,\n+\t\t\t    1, 0, &warn_B);\n+\t\tadd_prefix (&include_prefixes, concat (value, \"include\",\n+\t\t\t\t\t\t       NULL_PTR),\n+\t\t\t    NULL_PTR, 1, 0, NULL_PTR);\n \n \t\t/* As a kludge, if the arg is \"[foo/]stageN/\", just add\n \t\t   \"[foo/]include\" to the include prefix.  */\n@@ -2670,14 +2717,14 @@ process_command (argc, argv)\n \t\t\t  || value[len - 1] == DIR_SEPARATOR))\n \t\t    {\n \t\t      if (len == 7)\n-\t\t\tadd_prefix (&include_prefixes, \"include\",\n+\t\t\tadd_prefix (&include_prefixes, \"include\", NULL_PTR,\n \t\t\t\t    1, 0, NULL_PTR);\n \t\t      else\n \t\t\t{\n \t\t\t  char *string = xmalloc (len + 1);\n \t\t\t  strncpy (string, value, len-7);\n \t\t\t  strcpy (string+len-7, \"include\");\n-\t\t\t  add_prefix (&include_prefixes, string,\n+\t\t\t  add_prefix (&include_prefixes, string, NULL_PTR,\n \t\t\t\t      1, 0, NULL_PTR);\n \t\t\t}\n \t\t    }\n@@ -2752,12 +2799,16 @@ process_command (argc, argv)\n   /* Use 2 as fourth arg meaning try just the machine as a suffix,\n      as well as trying the machine and the version.  */\n #ifndef OS2\n-  add_prefix (&exec_prefixes, standard_exec_prefix, 0, 2, warn_std_ptr);\n-  add_prefix (&exec_prefixes, standard_exec_prefix_1, 0, 2, warn_std_ptr);\n+  add_prefix (&exec_prefixes, standard_exec_prefix, \"BINUTILS\",\n+\t      0, 2, warn_std_ptr);\n+  add_prefix (&exec_prefixes, standard_exec_prefix_1, \"BINUTILS\",\n+\t      0, 2, warn_std_ptr);\n #endif\n \n-  add_prefix (&startfile_prefixes, standard_exec_prefix, 0, 1, warn_std_ptr);\n-  add_prefix (&startfile_prefixes, standard_exec_prefix_1, 0, 1, warn_std_ptr);\n+  add_prefix (&startfile_prefixes, standard_exec_prefix, \"BINUTILS\",\n+\t      0, 1, warn_std_ptr);\n+  add_prefix (&startfile_prefixes, standard_exec_prefix_1, \"BINUTILS\",\n+\t      0, 1, warn_std_ptr);\n \n   tooldir_prefix = concat (tooldir_base_prefix, spec_machine, \n \t\t\t   dir_separator_str, NULL_PTR);\n@@ -2780,11 +2831,11 @@ process_command (argc, argv)\n \t  add_prefix (&exec_prefixes,\n \t\t      concat (gcc_exec_tooldir_prefix, \"bin\", \n \t\t\t      dir_separator_str, NULL_PTR),\n-\t\t      0, 0, NULL_PTR);\n+\t\t      NULL_PTR, 0, 0, NULL_PTR);\n \t  add_prefix (&startfile_prefixes,\n \t\t      concat (gcc_exec_tooldir_prefix, \"lib\", \n \t\t\t      dir_separator_str, NULL_PTR),\n-\t\t      0, 0, NULL_PTR);\n+\t\t      NULL_PTR, 0, 0, NULL_PTR);\n \t}\n \n       tooldir_prefix = concat (standard_exec_prefix, spec_machine,\n@@ -2794,10 +2845,10 @@ process_command (argc, argv)\n \n   add_prefix (&exec_prefixes, \n               concat (tooldir_prefix, \"bin\", dir_separator_str, NULL_PTR),\n-\t      0, 0, NULL_PTR);\n+\t      \"BINUTILS\", 0, 0, NULL_PTR);\n   add_prefix (&startfile_prefixes,\n \t      concat (tooldir_prefix, \"lib\", dir_separator_str, NULL_PTR),\n-\t      0, 0, NULL_PTR);\n+\t      \"BINUTILS\", 0, 0, NULL_PTR);\n \n   /* More prefixes are enabled in main, after we read the specs file\n      and determine whether this is cross-compilation or not.  */\n@@ -4465,16 +4516,18 @@ main (argc, argv)\n   if (*cross_compile == '0')\n     {\n #ifdef MD_EXEC_PREFIX\n-      add_prefix (&exec_prefixes, md_exec_prefix, 0, 0, NULL_PTR);\n-      add_prefix (&startfile_prefixes, md_exec_prefix, 0, 0, NULL_PTR);\n+      add_prefix (&exec_prefixes, md_exec_prefix, \"GCC\", 0, 0, NULL_PTR);\n+      add_prefix (&startfile_prefixes, md_exec_prefix, \"GCC\", 0, 0, NULL_PTR);\n #endif\n \n #ifdef MD_STARTFILE_PREFIX\n-      add_prefix (&startfile_prefixes, md_startfile_prefix, 0, 0, NULL_PTR);\n+      add_prefix (&startfile_prefixes, md_startfile_prefix, \"GCC\",\n+\t\t  0, 0, NULL_PTR);\n #endif\n \n #ifdef MD_STARTFILE_PREFIX_1\n-      add_prefix (&startfile_prefixes, md_startfile_prefix_1, 0, 0, NULL_PTR);\n+      add_prefix (&startfile_prefixes, md_startfile_prefix_1, \"GCC\",\n+\t\t  0, 0, NULL_PTR);\n #endif\n \n       /* If standard_startfile_prefix is relative, base it on\n@@ -4483,28 +4536,28 @@ main (argc, argv)\n \t standard_startfile_prefix on that as well.  */\n       if (*standard_startfile_prefix == '/'\n \t  || *standard_startfile_prefix == DIR_SEPARATOR)\n-\tadd_prefix (&startfile_prefixes, standard_startfile_prefix, 0, 0,\n-\t\t    NULL_PTR);\n+\tadd_prefix (&startfile_prefixes, standard_startfile_prefix, \"BINUTILS\",\n+\t\t    0, 0, NULL_PTR);\n       else\n \t{\n \t  if (gcc_exec_prefix)\n \t    add_prefix (&startfile_prefixes,\n \t\t\tconcat (gcc_exec_prefix, machine_suffix,\n \t\t\t\tstandard_startfile_prefix, NULL_PTR),\n-\t\t\t0, 0, NULL_PTR);\n+\t\t\tNULL_PTR, 0, 0, NULL_PTR);\n \t  add_prefix (&startfile_prefixes,\n \t\t      concat (standard_exec_prefix,\n \t\t\t      machine_suffix,\n \t\t\t      standard_startfile_prefix, NULL_PTR),\n-\t\t      0, 0, NULL_PTR);\n+\t\t      NULL_PTR, 0, 0, NULL_PTR);\n \t}\t\t       \n \n-      add_prefix (&startfile_prefixes, standard_startfile_prefix_1, 0, 0,\n-\t\t  NULL_PTR);\n-      add_prefix (&startfile_prefixes, standard_startfile_prefix_2, 0, 0,\n-\t\t  NULL_PTR);\n+      add_prefix (&startfile_prefixes, standard_startfile_prefix_1,\n+\t\t  \"BINUTILS\", 0, 0, NULL_PTR);\n+      add_prefix (&startfile_prefixes, standard_startfile_prefix_2,\n+\t\t  \"BINUTILS\", 0, 0, NULL_PTR);\n #if 0 /* Can cause surprises, and one can use -B./ instead.  */\n-      add_prefix (&startfile_prefixes, \"./\", 0, 1, NULL_PTR);\n+      add_prefix (&startfile_prefixes, \"./\", NULL_PTR, 0, 1, NULL_PTR);\n #endif\n     }\n   else\n@@ -4513,7 +4566,7 @@ main (argc, argv)\n \tadd_prefix (&startfile_prefixes,\n \t\t    concat (gcc_exec_prefix, machine_suffix,\n \t\t\t    standard_startfile_prefix, NULL_PTR),\n-\t\t    0, 0, NULL_PTR);\n+\t\t    \"BINUTILS\", 0, 0, NULL_PTR);\n     }\n \n   /* If we have a GCC_EXEC_PREFIX envvar, modify it for cpp's sake.  */"}, {"sha": "e47bfc2f8f1c5b72b37c80cdbd343acab34e9f77", "filename": "gcc/gcc.info", "status": "removed", "additions": 0, "deletions": 312, "changes": 312, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info?ref=bb84e66919817020267815eed4304e543688e722", "patch": "@@ -1,312 +0,0 @@\n-This is Info file gcc.info, produced by Makeinfo version 1.68 from the\n-input file gcc.texi.\n-\n-   This file documents the use and the internals of the GNU compiler.\n-\n-   Published by the Free Software Foundation 59 Temple Place - Suite 330\n-Boston, MA 02111-1307 USA\n-\n-   Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997 Free\n-Software Foundation, Inc.\n-\n-   Permission is granted to make and distribute verbatim copies of this\n-manual provided the copyright notice and this permission notice are\n-preserved on all copies.\n-\n-   Permission is granted to copy and distribute modified versions of\n-this manual under the conditions for verbatim copying, provided also\n-that the sections entitled \"GNU General Public License,\" \"Funding for\n-Free Software,\" and \"Protect Your Freedom--Fight `Look And Feel'\" are\n-included exactly as in the original, and provided that the entire\n-resulting derived work is distributed under the terms of a permission\n-notice identical to this one.\n-\n-   Permission is granted to copy and distribute translations of this\n-manual into another language, under the above conditions for modified\n-versions, except that the sections entitled \"GNU General Public\n-License,\" \"Funding for Free Software,\" and \"Protect Your Freedom--Fight\n-`Look And Feel'\", and this permission notice, may be included in\n-translations approved by the Free Software Foundation instead of in the\n-original English.\n-\n-\u001f\n-Indirect:\n-gcc.info-1: 1402\n-gcc.info-2: 50964\n-gcc.info-3: 96983\n-gcc.info-4: 143917\n-gcc.info-5: 192350\n-gcc.info-6: 225344\n-gcc.info-7: 249300\n-gcc.info-8: 295618\n-gcc.info-9: 344449\n-gcc.info-10: 393730\n-gcc.info-11: 441350\n-gcc.info-12: 491094\n-gcc.info-13: 534183\n-gcc.info-14: 572713\n-gcc.info-15: 622155\n-gcc.info-16: 665863\n-gcc.info-17: 713227\n-gcc.info-18: 751237\n-gcc.info-19: 796779\n-gcc.info-20: 841999\n-gcc.info-21: 891870\n-gcc.info-22: 937562\n-gcc.info-23: 982612\n-gcc.info-24: 1026075\n-gcc.info-25: 1072705\n-gcc.info-26: 1121544\n-gcc.info-27: 1162761\n-gcc.info-28: 1187258\n-\u001f\n-Tag Table:\n-(Indirect)\n-Node: Top\u007f1402\n-Node: G++ and GCC\u007f3216\n-Node: Invoking GCC\u007f5423\n-Node: Option Summary\u007f8802\n-Node: Overall Options\u007f20950\n-Node: Invoking G++\u007f25513\n-Node: C Dialect Options\u007f27386\n-Node: C++ Dialect Options\u007f38688\n-Node: Warning Options\u007f50964\n-Node: Debugging Options\u007f68134\n-Node: Optimize Options\u007f84249\n-Node: Preprocessor Options\u007f96983\n-Node: Assembler Options\u007f103446\n-Node: Link Options\u007f103813\n-Node: Directory Options\u007f109086\n-Node: Target Options\u007f112951\n-Node: Submodel Options\u007f116608\n-Node: M680x0 Options\u007f118040\n-Node: VAX Options\u007f122970\n-Node: SPARC Options\u007f123505\n-Node: Convex Options\u007f132591\n-Node: AMD29K Options\u007f134772\n-Node: ARM Options\u007f137997\n-Node: M32R/D Options\u007f141571\n-Node: M88K Options\u007f143917\n-Node: RS/6000 and PowerPC Options\u007f151867\n-Node: RT Options\u007f170743\n-Node: MIPS Options\u007f172447\n-Node: i386 Options\u007f180547\n-Node: HPPA Options\u007f185990\n-Node: Intel 960 Options\u007f189810\n-Node: DEC Alpha Options\u007f192350\n-Node: Clipper Options\u007f199428\n-Node: H8/300 Options\u007f199827\n-Node: SH Options\u007f200641\n-Node: System V Options\u007f201237\n-Node: V850 Options\u007f202046\n-Node: Code Gen Options\u007f204031\n-Node: Environment Variables\u007f214892\n-Node: Running Protoize\u007f219115\n-Node: Installation\u007f225344\n-Node: Configurations\u007f249300\n-Node: Other Dir\u007f287877\n-Node: Cross-Compiler\u007f289593\n-Node: Steps of Cross\u007f291424\n-Node: Configure Cross\u007f292542\n-Node: Tools and Libraries\u007f293179\n-Node: Cross Runtime\u007f295618\n-Node: Cross Headers\u007f299699\n-Node: Build Cross\u007f301698\n-Node: Sun Install\u007f303574\n-Node: VMS Install\u007f305042\n-Node: Collect2\u007f314971\n-Node: Header Dirs\u007f317680\n-Node: C Extensions\u007f319094\n-Node: Statement Exprs\u007f322450\n-Node: Local Labels\u007f324344\n-Node: Labels as Values\u007f326406\n-Node: Nested Functions\u007f328270\n-Node: Constructing Calls\u007f332126\n-Node: Naming Types\u007f334183\n-Node: Typeof\u007f335277\n-Node: Lvalues\u007f337142\n-Node: Conditionals\u007f339582\n-Node: Long Long\u007f340473\n-Node: Complex\u007f341913\n-Node: Zero Length\u007f343775\n-Node: Variable Length\u007f344449\n-Node: Macro Varargs\u007f346974\n-Node: Subscripting\u007f349077\n-Node: Pointer Arith\u007f349560\n-Node: Initializers\u007f350125\n-Node: Constructors\u007f350590\n-Node: Labeled Elements\u007f352284\n-Node: Case Ranges\u007f354913\n-Node: Cast to Union\u007f355594\n-Node: Function Attributes\u007f356672\n-Node: Function Prototypes\u007f371569\n-Node: C++ Comments\u007f373371\n-Node: Dollar Signs\u007f373907\n-Node: Character Escapes\u007f374365\n-Node: Alignment\u007f374652\n-Node: Variable Attributes\u007f376124\n-Node: Type Attributes\u007f384657\n-Node: Inline\u007f393730\n-Node: Extended Asm\u007f397607\n-Node: Asm Labels\u007f408173\n-Node: Explicit Reg Vars\u007f409492\n-Node: Global Reg Vars\u007f410740\n-Node: Local Reg Vars\u007f415305\n-Node: Alternate Keywords\u007f416897\n-Node: Incomplete Enums\u007f418299\n-Node: Function Names\u007f419055\n-Node: Return Address\u007f420329\n-Node: C++ Extensions\u007f422349\n-Node: Naming Results\u007f423583\n-Node: Min and Max\u007f426897\n-Node: Destructors and Goto\u007f428337\n-Node: C++ Interface\u007f428813\n-Node: Template Instantiation\u007f434047\n-Node: C++ Signatures\u007f441350\n-Node: Gcov\u007f445694\n-Node: Gcov Intro\u007f446217\n-Node: Invoking Gcov\u007f448898\n-Node: Gcov and Optimization\u007f454509\n-Node: Gcov Data Files\u007f455933\n-Node: Trouble\u007f459503\n-Node: Actual Bugs\u007f461204\n-Node: Installation Problems\u007f462473\n-Node: Cross-Compiler Problems\u007f476259\n-Node: Interoperation\u007f477730\n-Node: External Bugs\u007f491094\n-Node: Incompatibilities\u007f493226\n-Node: Fixed Headers\u007f501776\n-Node: Standard Libraries\u007f504118\n-Node: Disappointments\u007f505365\n-Node: C++ Misunderstandings\u007f509922\n-Node: Static Definitions\u007f510569\n-Node: Temporaries\u007f511623\n-Node: Protoize Caveats\u007f513827\n-Node: Non-bugs\u007f517783\n-Node: Warnings and Errors\u007f527210\n-Node: Bugs\u007f528980\n-Node: Bug Criteria\u007f530340\n-Node: Bug Lists\u007f532770\n-Node: Bug Reporting\u007f534183\n-Node: Sending Patches\u007f546601\n-Node: Service\u007f551988\n-Node: Contributing\u007f552558\n-Node: VMS\u007f553394\n-Node: Include Files and VMS\u007f553792\n-Node: Global Declarations\u007f557682\n-Node: VMS Misc\u007f561991\n-Node: Portability\u007f566317\n-Node: Interface\u007f568080\n-Node: Passes\u007f572713\n-Node: RTL\u007f590056\n-Node: RTL Objects\u007f591944\n-Node: Accessors\u007f594988\n-Node: Flags\u007f600314\n-Node: Machine Modes\u007f609333\n-Node: Constants\u007f616967\n-Node: Regs and Memory\u007f622155\n-Node: Arithmetic\u007f634208\n-Node: Comparisons\u007f640106\n-Node: Bit Fields\u007f644169\n-Node: Conversions\u007f645581\n-Node: RTL Declarations\u007f648469\n-Node: Side Effects\u007f649278\n-Node: Incdec\u007f661825\n-Node: Assembler\u007f664341\n-Node: Insns\u007f665863\n-Node: Calls\u007f688341\n-Node: Sharing\u007f690936\n-Node: Reading RTL\u007f694012\n-Node: Machine Desc\u007f694951\n-Node: Patterns\u007f696804\n-Node: Example\u007f699748\n-Node: RTL Template\u007f700876\n-Node: Output Template\u007f713227\n-Node: Output Statement\u007f717209\n-Node: Constraints\u007f720922\n-Node: Simple Constraints\u007f721925\n-Node: Multi-Alternative\u007f733837\n-Node: Class Preferences\u007f736673\n-Node: Modifiers\u007f737553\n-Node: Machine Constraints\u007f741097\n-Node: No Constraints\u007f750116\n-Node: Standard Names\u007f751237\n-Node: Pattern Ordering\u007f783426\n-Node: Dependent Patterns\u007f784653\n-Node: Jump Patterns\u007f787468\n-Node: Insn Canonicalizations\u007f793284\n-Node: Peephole Definitions\u007f796779\n-Node: Expander Definitions\u007f803697\n-Node: Insn Splitting\u007f811143\n-Node: Insn Attributes\u007f818158\n-Node: Defining Attributes\u007f819205\n-Node: Expressions\u007f821217\n-Node: Tagging Insns\u007f827525\n-Node: Attr Example\u007f831888\n-Node: Insn Lengths\u007f834264\n-Node: Constant Attributes\u007f837628\n-Node: Delay Slots\u007f838788\n-Node: Function Units\u007f841999\n-Node: Target Macros\u007f847669\n-Node: Driver\u007f849552\n-Node: Run-time Target\u007f863850\n-Node: Storage Layout\u007f869736\n-Node: Type Layout\u007f885097\n-Node: Registers\u007f891870\n-Node: Register Basics\u007f892850\n-Node: Allocation Order\u007f896887\n-Node: Values in Registers\u007f898305\n-Node: Leaf Functions\u007f902931\n-Node: Stack Registers\u007f905406\n-Node: Obsolete Register Macros\u007f906239\n-Node: Register Classes\u007f908822\n-Node: Stack and Calling\u007f928897\n-Node: Frame Layout\u007f929352\n-Node: Stack Checking\u007f933982\n-Node: Frame Registers\u007f937562\n-Node: Elimination\u007f941977\n-Node: Stack Arguments\u007f946233\n-Node: Register Arguments\u007f952841\n-Node: Scalar Return\u007f962634\n-Node: Aggregate Return\u007f966872\n-Node: Caller Saves\u007f970587\n-Node: Function Entry\u007f971737\n-Node: Profiling\u007f982612\n-Node: Varargs\u007f989691\n-Node: Trampolines\u007f997101\n-Node: Library Calls\u007f1003819\n-Node: Addressing Modes\u007f1011877\n-Node: Condition Code\u007f1019876\n-Node: Costs\u007f1026075\n-Node: Sections\u007f1034786\n-Node: PIC\u007f1040969\n-Node: Assembler Format\u007f1043679\n-Node: File Framework\u007f1044745\n-Node: Data Output\u007f1049443\n-Node: Uninitialized Data\u007f1056637\n-Node: Label Output\u007f1062043\n-Node: Initialization\u007f1072705\n-Node: Macros for Initialization\u007f1078848\n-Node: Instruction Output\u007f1083445\n-Node: Dispatch Tables\u007f1091632\n-Node: Exception Region Output\u007f1094079\n-Node: Alignment Output\u007f1097073\n-Node: Debugging Info\u007f1098821\n-Node: All Debuggers\u007f1099430\n-Node: DBX Options\u007f1101875\n-Node: DBX Hooks\u007f1107158\n-Node: File Names and DBX\u007f1110798\n-Node: SDB and DWARF\u007f1112771\n-Node: Cross-compilation\u007f1114978\n-Node: Misc\u007f1121544\n-Node: Config\u007f1139585\n-Node: Fragments\u007f1147323\n-Node: Target Fragment\u007f1147922\n-Node: Host Fragment\u007f1152088\n-Node: Funding\u007f1152690\n-Node: Look and Feel\u007f1155184\n-Node: Copying\u007f1162761\n-Node: Contributors\u007f1181953\n-Node: Index\u007f1187258\n-\u001f\n-End Tag Table"}, {"sha": "12ce102eabbac556afab3815e5ecc8f1e2ab6695", "filename": "gcc/gcc.info-1", "status": "removed", "additions": 0, "deletions": 1154, "changes": 1154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-1?ref=bb84e66919817020267815eed4304e543688e722", "patch": "@@ -1,1154 +0,0 @@\n-This is Info file gcc.info, produced by Makeinfo version 1.68 from the\n-input file gcc.texi.\n-\n-   This file documents the use and the internals of the GNU compiler.\n-\n-   Published by the Free Software Foundation 59 Temple Place - Suite 330\n-Boston, MA 02111-1307 USA\n-\n-   Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997 Free\n-Software Foundation, Inc.\n-\n-   Permission is granted to make and distribute verbatim copies of this\n-manual provided the copyright notice and this permission notice are\n-preserved on all copies.\n-\n-   Permission is granted to copy and distribute modified versions of\n-this manual under the conditions for verbatim copying, provided also\n-that the sections entitled \"GNU General Public License,\" \"Funding for\n-Free Software,\" and \"Protect Your Freedom--Fight `Look And Feel'\" are\n-included exactly as in the original, and provided that the entire\n-resulting derived work is distributed under the terms of a permission\n-notice identical to this one.\n-\n-   Permission is granted to copy and distribute translations of this\n-manual into another language, under the above conditions for modified\n-versions, except that the sections entitled \"GNU General Public\n-License,\" \"Funding for Free Software,\" and \"Protect Your Freedom--Fight\n-`Look And Feel'\", and this permission notice, may be included in\n-translations approved by the Free Software Foundation instead of in the\n-original English.\n-\n-\u001f\n-File: gcc.info,  Node: Top,  Next: G++ and GCC,  Up: (DIR)\n-\n-Introduction\n-************\n-\n-   This manual documents how to run, install and port the GNU compiler,\n-as well as its new features and incompatibilities, and how to report\n-bugs.  It corresponds to GNU CC version 2.7.2.\n-\n-* Menu:\n-\n-\n-* G++ and GCC::     You can compile C or C++ programs.\n-* Invoking GCC::    Command options supported by `gcc'.\n-* Installation::    How to configure, compile and install GNU CC.\n-* C Extensions::    GNU extensions to the C language family.\n-* C++ Extensions::  GNU extensions to the C++ language.\n-* Gcov::\t    gcov: a GNU CC test coverage program.\n-* Trouble::         If you have trouble installing GNU CC.\n-* Bugs::            How, why and where to report bugs.\n-* Service::         How to find suppliers of support for GNU CC.\n-* Contributing::    How to contribute to testing and developing GNU CC.\n-* VMS::             Using GNU CC on VMS.\n-\n-* Portability::     Goals of GNU CC's portability features.\n-* Interface::       Function-call interface of GNU CC output.\n-* Passes::          Order of passes, what they do, and what each file is for.\n-* RTL::             The intermediate representation that most passes work on.\n-* Machine Desc::    How to write machine description instruction patterns.\n-* Target Macros::   How to write the machine description C macros.\n-* Config::          Writing the `xm-MACHINE.h' file.\n-* Fragments::       Writing the `t-TARGET' and `x-HOST' files.\n-\n-* Funding::         How to help assure funding for free software.\n-* Look and Feel::   Protect your freedom--fight \"look and feel\".\n-\n-* Copying::         GNU General Public License says\n-                     how you can copy and share GNU CC.\n-* Contributors::    People who have contributed to GNU CC.\n-\n-* Index::\t    Index of concepts and symbol names.\n-\n-\u001f\n-File: gcc.info,  Node: G++ and GCC,  Next: Invoking GCC,  Prev: Top,  Up: Top\n-\n-Compile C, C++, or Objective C\n-******************************\n-\n-   The C, C++, and Objective C versions of the compiler are integrated;\n-the GNU C compiler can compile programs written in C, C++, or Objective\n-C.\n-\n-   \"GCC\" is a common shorthand term for the GNU C compiler.  This is\n-both the most general name for the compiler, and the name used when the\n-emphasis is on compiling C programs.\n-\n-   When referring to C++ compilation, it is usual to call the compiler\n-\"G++\".  Since there is only one compiler, it is also accurate to call\n-it \"GCC\" no matter what the language context; however, the term \"G++\"\n-is more useful when the emphasis is on compiling C++ programs.\n-\n-   We use the name \"GNU CC\" to refer to the compilation system as a\n-whole, and more specifically to the language-independent part of the\n-compiler.  For example, we refer to the optimization options as\n-affecting the behavior of \"GNU CC\" or sometimes just \"the compiler\".\n-\n-   Front ends for other languages, such as Ada 9X, Fortran, Modula-3,\n-and Pascal, are under development.  These front-ends, like that for\n-C++, are built in subdirectories of GNU CC and link to it.  The result\n-is an integrated compiler that can compile programs written in C, C++,\n-Objective C, or any of the languages for which you have installed front\n-ends.\n-\n-   In this manual, we only discuss the options for the C, Objective-C,\n-and C++ compilers and those of the GNU CC core.  Consult the\n-documentation of the other front ends for the options to use when\n-compiling programs written in other languages.\n-\n-   G++ is a *compiler*, not merely a preprocessor.  G++ builds object\n-code directly from your C++ program source.  There is no intermediate C\n-version of the program.  (By contrast, for example, some other\n-implementations use a program that generates a C program from your C++\n-source.)  Avoiding an intermediate C representation of the program means\n-that you get better object code, and better debugging information.  The\n-GNU debugger, GDB, works with this information in the object code to\n-give you comprehensive C++ source-level editing capabilities (*note C\n-and C++: (gdb.info)C.).\n-\n-\u001f\n-File: gcc.info,  Node: Invoking GCC,  Next: Installation,  Prev: G++ and GCC,  Up: Top\n-\n-GNU CC Command Options\n-**********************\n-\n-   When you invoke GNU CC, it normally does preprocessing, compilation,\n-assembly and linking.  The \"overall options\" allow you to stop this\n-process at an intermediate stage.  For example, the `-c' option says\n-not to run the linker.  Then the output consists of object files output\n-by the assembler.\n-\n-   Other options are passed on to one stage of processing.  Some options\n-control the preprocessor and others the compiler itself.  Yet other\n-options control the assembler and linker; most of these are not\n-documented here, since you rarely need to use any of them.\n-\n-   Most of the command line options that you can use with GNU CC are\n-useful for C programs; when an option is only useful with another\n-language (usually C++), the explanation says so explicitly.  If the\n-description for a particular option does not mention a source language,\n-you can use that option with all supported languages.\n-\n-   *Note Compiling C++ Programs: Invoking G++, for a summary of special\n-options for compiling C++ programs.\n-\n-   The `gcc' program accepts options and file names as operands.  Many\n-options have multiletter names; therefore multiple single-letter options\n-may *not* be grouped: `-dr' is very different from `-d -r'.\n-\n-   You can mix options and other arguments.  For the most part, the\n-order you use doesn't matter.  Order does matter when you use several\n-options of the same kind; for example, if you specify `-L' more than\n-once, the directories are searched in the order specified.\n-\n-   Many options have long names starting with `-f' or with `-W'--for\n-example, `-fforce-mem', `-fstrength-reduce', `-Wformat' and so on.\n-Most of these have both positive and negative forms; the negative form\n-of `-ffoo' would be `-fno-foo'.  This manual documents only one of\n-these two forms, whichever one is not the default.\n-\n-* Menu:\n-\n-* Option Summary::\tBrief list of all options, without explanations.\n-* Overall Options::     Controlling the kind of output:\n-                        an executable, object files, assembler files,\n-                        or preprocessed source.\n-* Invoking G++::\tCompiling C++ programs.\n-* C Dialect Options::   Controlling the variant of C language compiled.\n-* C++ Dialect Options:: Variations on C++.\n-* Warning Options::     How picky should the compiler be?\n-* Debugging Options::   Symbol tables, measurements, and debugging dumps.\n-* Optimize Options::    How much optimization?\n-* Preprocessor Options:: Controlling header files and macro definitions.\n-                         Also, getting dependency information for Make.\n-* Assembler Options::   Passing options to the assembler.\n-* Link Options::        Specifying libraries and so on.\n-* Directory Options::   Where to find header files and libraries.\n-                        Where to find the compiler executable files.\n-* Target Options::      Running a cross-compiler, or an old version of GNU CC.\n-* Submodel Options::    Specifying minor hardware or convention variations,\n-                        such as 68010 vs 68020.\n-* Code Gen Options::    Specifying conventions for function calls, data layout\n-                        and register usage.\n-* Environment Variables:: Env vars that affect GNU CC.\n-* Running Protoize::    Automatically adding or removing function prototypes.\n-\n-\u001f\n-File: gcc.info,  Node: Option Summary,  Next: Overall Options,  Up: Invoking GCC\n-\n-Option Summary\n-==============\n-\n-   Here is a summary of all the options, grouped by type.  Explanations\n-are in the following sections.\n-\n-*Overall Options*\n-     *Note Options Controlling the Kind of Output: Overall Options.\n-          -c  -S  -E  -o FILE  -pipe  -v  -x LANGUAGE\n-\n-*C Language Options*\n-     *Note Options Controlling C Dialect: C Dialect Options.\n-          -ansi  -fallow-single-precision  -fcond-mismatch  -fno-asm\n-          -fno-builtin  -ffreestanding  -fhosted  -fsigned-bitfields  -fsigned-char\n-          -funsigned-bitfields  -funsigned-char  -fwritable-strings\n-          -traditional  -traditional-cpp  -trigraphs\n-\n-*C++ Language Options*\n-     *Note Options Controlling C++ Dialect: C++ Dialect Options.\n-          -fall-virtual  -fdollars-in-identifiers  -felide-constructors\n-          -fenum-int-equiv  -fexternal-templates  -ffor-scope  -fno-for-scope\n-          -fhandle-signatures  -fmemoize-lookups  -fname-mangling-version-N\n-          -fno-default-inline  -fno-gnu-keywords -fnonnull-objects -fguiding-decls\n-          -foperator-names  -fstrict-prototype  -fthis-is-variable\n-          -ftemplate-depth-N  -nostdinc++  -traditional  +eN\n-\n-*Warning Options*\n-     *Note Options to Request or Suppress Warnings: Warning Options.\n-          -fsyntax-only  -pedantic  -pedantic-errors\n-          -w  -W  -Wall  -Waggregate-return  -Wbad-function-cast\n-          -Wcast-align  -Wcast-qual  -Wchar-subscript  -Wcomment\n-          -Wconversion  -Werror  -Wformat\n-          -Wid-clash-LEN  -Wimplicit -Wimplicit-int\n-          -Wimplicit-function-declarations -Wimport  -Winline\n-          -Wlarger-than-LEN  -Wmain  -Wmissing-declarations\n-          -Wmissing-prototypes  -Wnested-externs\n-          -Wno-import  -Woverloaded-virtual  -Wparentheses\n-          -Wpointer-arith  -Wredundant-decls  -Wreorder  -Wreturn-type  -Wshadow\n-          -Wsign-compare  -Wstrict-prototypes  -Wswitch  -Wsynth\n-          -Wtemplate-debugging  -Wtraditional  -Wtrigraphs\n-          -Wundef  -Wuninitialized  -Wunused  -Wwrite-strings\n-\n-*Debugging Options*\n-     *Note Options for Debugging Your Program or GCC: Debugging Options.\n-          -a  -ax  -dLETTERS  -fpretend-float\n-          -fprofile-arcs  -ftest-coverage\n-          -g  -gLEVEL  -gcoff  -gdwarf  -gdwarf-1  -gdwarf-1+  -gdwarf-2\n-          -ggdb  -gstabs  -gstabs+  -gxcoff  -gxcoff+\n-          -p  -pg  -print-file-name=LIBRARY  -print-libgcc-file-name\n-          -print-prog-name=PROGRAM  -print-search-dirs  -save-temps\n-\n-*Optimization Options*\n-     *Note Options that Control Optimization: Optimize Options.\n-          -fbranch-probabilities\n-          -fcaller-saves  -fcse-follow-jumps  -fcse-skip-blocks\n-          -fdelayed-branch   -fexpensive-optimizations\n-          -ffast-math  -ffloat-store  -fforce-addr  -fforce-mem\n-          -ffunction-sections  -finline-functions\n-          -fkeep-inline-functions  -fno-default-inline\n-          -fno-defer-pop  -fno-function-cse\n-          -fno-inline  -fno-peephole  -fomit-frame-pointer\n-          -frerun-cse-after-loop  -fschedule-insns\n-          -fschedule-insns2  -fstrength-reduce  -fthread-jumps\n-          -funroll-all-loops  -funroll-loops\n-          -O  -O0  -O1  -O2  -O3\n-\n-*Preprocessor Options*\n-     *Note Options Controlling the Preprocessor: Preprocessor Options.\n-          -AQUESTION(ANSWER)  -C  -dD  -dM  -dN\n-          -DMACRO[=DEFN]  -E  -H\n-          -idirafter DIR\n-          -include FILE  -imacros FILE\n-          -iprefix FILE  -iwithprefix DIR\n-          -iwithprefixbefore DIR  -isystem DIR\n-          -M  -MD  -MM  -MMD  -MG  -nostdinc  -P  -trigraphs\n-          -undef  -UMACRO  -Wp,OPTION\n-\n-*Assembler Option*\n-     *Note Passing Options to the Assembler: Assembler Options.\n-          -Wa,OPTION\n-\n-*Linker Options*\n-     *Note Options for Linking: Link Options.\n-          OBJECT-FILE-NAME  -lLIBRARY\n-          -nostartfiles  -nodefaultlibs  -nostdlib\n-          -s  -static  -shared  -symbolic\n-          -Wl,OPTION  -Xlinker OPTION\n-          -u SYMBOL\n-\n-*Directory Options*\n-     *Note Options for Directory Search: Directory Options.\n-          -BPREFIX  -IDIR  -I-  -LDIR  -specs=FILE\n-\n-*Target Options*\n-     *Note Target Options::.\n-          -b MACHINE  -V VERSION\n-\n-*Machine Dependent Options*\n-     *Note Hardware Models and Configurations: Submodel Options.\n-          *M680x0 Options*\n-          -m68000  -m68020  -m68020-40  -m68020-60  -m68030  -m68040\n-          -m68060  -m5200  -m68881  -mbitfield  -mc68000  -mc68020  -mfpa\n-          -mnobitfield  -mrtd  -mshort  -msoft-float  -malign-int\n-          \n-          *VAX Options*\n-          -mg  -mgnu  -munix\n-          \n-          *SPARC Options*\n-          -mcpu=CPU TYPE\n-          -mtune=CPU TYPE\n-          -mcmodel=CODE MODEL\n-          -malign-jumps=NUM  -malign-loops=NUM\n-          -malign-functions=NUM\n-          -m32  -m64\n-          -mapp-regs  -mbroken-saverestore  -mcypress  -mepilogue\n-          -mflat  -mfpu  -mhard-float  -mhard-quad-float\n-          -mimpure-text  -mlive-g0  -mno-app-regs  -mno-epilogue\n-          -mno-flat  -mno-fpu  -mno-impure-text\n-          -mno-stack-bias  -mno-unaligned-doubles\n-          -msoft-float  -msoft-quad-float  -msparclite  -mstack-bias\n-          -msupersparc  -munaligned-doubles  -mv8\n-          \n-          *Convex Options*\n-          -mc1  -mc2  -mc32  -mc34  -mc38\n-          -margcount  -mnoargcount\n-          -mlong32  -mlong64\n-          -mvolatile-cache  -mvolatile-nocache\n-          \n-          *AMD29K Options*\n-          -m29000  -m29050  -mbw  -mnbw  -mdw  -mndw\n-          -mlarge  -mnormal  -msmall\n-          -mkernel-registers  -mno-reuse-arg-regs\n-          -mno-stack-check  -mno-storem-bug\n-          -mreuse-arg-regs  -msoft-float  -mstack-check\n-          -mstorem-bug  -muser-registers\n-          \n-          *ARM Options*\n-          -mapcs-frame  -mapcs-26  -mapcs-32\n-          -mlittle-endian  -mbig-endian  -mwords-little-endian\n-          -mshort-load-bytes  -mno-short-load-bytes\n-          -msoft-float  -mhard-float\n-          -mbsd  -mxopen  -mno-symrename\n-          \n-          *M32R/D Options*\n-          -mcode-model=MODEL TYPE  -msdata=SDATA TYPE\n-          -G NUM\n-          \n-          *M88K Options*\n-          -m88000  -m88100  -m88110  -mbig-pic\n-          -mcheck-zero-division  -mhandle-large-shift\n-          -midentify-revision  -mno-check-zero-division\n-          -mno-ocs-debug-info  -mno-ocs-frame-position\n-          -mno-optimize-arg-area  -mno-serialize-volatile\n-          -mno-underscores  -mocs-debug-info\n-          -mocs-frame-position  -moptimize-arg-area\n-          -mserialize-volatile  -mshort-data-NUM  -msvr3\n-          -msvr4  -mtrap-large-shift  -muse-div-instruction\n-          -mversion-03.00  -mwarn-passed-structs\n-          \n-          *RS/6000 and PowerPC Options*\n-          -mcpu=CPU TYPE\n-          -mtune=CPU TYPE\n-          -mpower  -mno-power  -mpower2  -mno-power2\n-          -mpowerpc  -mno-powerpc\n-          -mpowerpc-gpopt  -mno-powerpc-gpopt\n-          -mpowerpc-gfxopt  -mno-powerpc-gfxopt\n-          -mnew-mnemonics  -mno-new-mnemonics\n-          -mfull-toc   -mminimal-toc  -mno-fop-in-toc  -mno-sum-in-toc\n-          -mxl-call  -mno-xl-call  -mthreads  -mpe\n-          -msoft-float  -mhard-float  -mmultiple  -mno-multiple\n-          -mstring  -mno-string  -mupdate  -mno-update\n-          -mfused-madd  -mno-fused-madd  -mbit-align  -mno-bit-align\n-          -mstrict-align  -mno-strict-align  -mrelocatable\n-          -mno-relocatable  -mrelocatable-lib  -mno-relocatable-lib\n-          -mtoc  -mno-toc  -mtraceback  -mno-traceback\n-          -mlittle  -mlittle-endian  -mbig  -mbig-endian\n-          -mcall-aix  -mcall-sysv  -mprototype  -mno-prototype\n-          -msim  -mmvme  -mads  -myellowknife  -memb\n-          -msdata  -msdata=OPT  -G NUM\n-          \n-          *RT Options*\n-          -mcall-lib-mul  -mfp-arg-in-fpregs  -mfp-arg-in-gregs\n-          -mfull-fp-blocks  -mhc-struct-return  -min-line-mul\n-          -mminimum-fp-blocks  -mnohc-struct-return\n-          \n-          *MIPS Options*\n-          -mabicalls  -mcpu=CPU TYPE  -membedded-data\n-          -membedded-pic  -mfp32  -mfp64  -mgas  -mgp32  -mgp64\n-          -mgpopt  -mhalf-pic  -mhard-float  -mint64  -mips1\n-          -mips2  -mips3  -mlong64  -mlong-calls  -mmemcpy\n-          -mmips-as  -mmips-tfile  -mno-abicalls\n-          -mno-embedded-data  -mno-embedded-pic\n-          -mno-gpopt  -mno-long-calls\n-          -mno-memcpy  -mno-mips-tfile  -mno-rnames  -mno-stats\n-          -mrnames  -msoft-float\n-          -m4650  -msingle-float  -mmad\n-          -mstats  -EL  -EB  -G NUM  -nocpp\n-          \n-          *i386 Options*\n-          -m486  -m386  -mieee-fp  -mno-fancy-math-387\n-          -mno-fp-ret-in-387  -msoft-float  -msvr3-shlib\n-          -mno-wide-multiply  -mrtd  -malign-double\n-          -mreg-alloc=LIST  -mregparm=NUM\n-          -malign-jumps=NUM  -malign-loops=NUM\n-          -malign-functions=NUM\n-          \n-          *HPPA Options*\n-          -mbig-switch  -mdisable-fpregs  -mdisable-indexing  -mfast-indirect-calls\n-          -mgas  -mjump-in-delay  -mlong-load-store  -mno-big-switch  -mno-disable-fpregs\n-          -mno-disable-indexing  -mno-fast-indirect-calls  -mno-gas\n-          -mno-jump-in-delay\n-          -mno-long-load-store\n-          -mno-portable-runtime  -mno-soft-float  -mno-space  -mno-space-regs\n-          -msoft-float\n-          -mpa-risc-1-0  -mpa-risc-1-1  -mportable-runtime\n-          -mschedule=LIST  -mspace  -mspace-regs\n-          \n-          *Intel 960 Options*\n-          -mCPU TYPE  -masm-compat  -mclean-linkage\n-          -mcode-align  -mcomplex-addr  -mleaf-procedures\n-          -mic-compat  -mic2.0-compat  -mic3.0-compat\n-          -mintel-asm  -mno-clean-linkage  -mno-code-align\n-          -mno-complex-addr  -mno-leaf-procedures\n-          -mno-old-align  -mno-strict-align  -mno-tail-call\n-          -mnumerics  -mold-align  -msoft-float  -mstrict-align\n-          -mtail-call\n-          \n-          *DEC Alpha Options*\n-          -mfp-regs  -mno-fp-regs\n-          -mno-soft-float  -msoft-float\n-          -mieee  -mieee-with-inexact  -mieee-conformant\n-          -mfp-trap-mode  -mfp-rounding-mode  -mtrap-precision\n-          -mbuild-constants\n-          \n-          *Clipper Options*\n-          -mc300  -mc400\n-          \n-          *H8/300 Options*\n-          -mrelax  -mh -ms -mint32  -malign-300\n-          \n-          *SH Options*\n-          -m1  -m2  -m3  -m3e  -mb  -ml  -mrelax\n-          \n-          *System V Options*\n-          -Qy  -Qn  -YP,PATHS  -Ym,DIR\n-          \n-          *V850 Options*\n-          -mlong-calls -mno-long-calls -mep -mno-ep\n-          -mprolog-function -mno-prolog-function -mspace\n-          -mtda=N -msda=N -mzda=N\n-          -mv850 -mbig-switch\n-\n-*Code Generation Options*\n-     *Note Options for Code Generation Conventions: Code Gen Options.\n-          -fcall-saved-REG  -fcall-used-REG\n-          -ffixed-REG  -finhibit-size-directive\n-          -fcheck-memory-usage  -fprefix-function-name\n-          -fno-common  -fno-ident  -fno-gnu-linker\n-          -fpcc-struct-return  -fpic  -fPIC\n-          -freg-struct-return  -fshared-data  -fshort-enums\n-          -fshort-double  -fvolatile  -fvolatile-global\n-          -fverbose-asm  -fpack-struct  -fstack-check  +e0  +e1\n-\n-* Menu:\n-\n-* Overall Options::     Controlling the kind of output:\n-                        an executable, object files, assembler files,\n-                        or preprocessed source.\n-* C Dialect Options::   Controlling the variant of C language compiled.\n-* C++ Dialect Options:: Variations on C++.\n-* Warning Options::     How picky should the compiler be?\n-* Debugging Options::   Symbol tables, measurements, and debugging dumps.\n-* Optimize Options::    How much optimization?\n-* Preprocessor Options:: Controlling header files and macro definitions.\n-                         Also, getting dependency information for Make.\n-* Assembler Options::   Passing options to the assembler.\n-* Link Options::        Specifying libraries and so on.\n-* Directory Options::   Where to find header files and libraries.\n-                        Where to find the compiler executable files.\n-* Target Options::      Running a cross-compiler, or an old version of GNU CC.\n-\n-\u001f\n-File: gcc.info,  Node: Overall Options,  Next: Invoking G++,  Prev: Option Summary,  Up: Invoking GCC\n-\n-Options Controlling the Kind of Output\n-======================================\n-\n-   Compilation can involve up to four stages: preprocessing, compilation\n-proper, assembly and linking, always in that order.  The first three\n-stages apply to an individual source file, and end by producing an\n-object file; linking combines all the object files (those newly\n-compiled, and those specified as input) into an executable file.\n-\n-   For any given input file, the file name suffix determines what kind\n-of compilation is done:\n-\n-`FILE.c'\n-     C source code which must be preprocessed.\n-\n-`FILE.i'\n-     C source code which should not be preprocessed.\n-\n-`FILE.ii'\n-     C++ source code which should not be preprocessed.\n-\n-`FILE.m'\n-     Objective-C source code.  Note that you must link with the library\n-     `libobjc.a' to make an Objective-C program work.\n-\n-`FILE.h'\n-     C header file (not to be compiled or linked).\n-\n-`FILE.cc'\n-`FILE.cxx'\n-`FILE.cpp'\n-`FILE.C'\n-     C++ source code which must be preprocessed.  Note that in `.cxx',\n-     the last two letters must both be literally `x'.  Likewise, `.C'\n-     refers to a literal capital C.\n-\n-`FILE.s'\n-     Assembler code.\n-\n-`FILE.S'\n-     Assembler code which must be preprocessed.\n-\n-`OTHER'\n-     An object file to be fed straight into linking.  Any file name\n-     with no recognized suffix is treated this way.\n-\n-   You can specify the input language explicitly with the `-x' option:\n-\n-`-x LANGUAGE'\n-     Specify explicitly the LANGUAGE for the following input files\n-     (rather than letting the compiler choose a default based on the\n-     file name suffix).  This option applies to all following input\n-     files until the next `-x' option.  Possible values for LANGUAGE\n-     are:\n-          c  objective-c  c++\n-          c-header  cpp-output  c++-cpp-output\n-          assembler  assembler-with-cpp\n-\n-`-x none'\n-     Turn off any specification of a language, so that subsequent files\n-     are handled according to their file name suffixes (as they are if\n-     `-x' has not been used at all).\n-\n-   If you only want some of the stages of compilation, you can use `-x'\n-(or filename suffixes) to tell `gcc' where to start, and one of the\n-options `-c', `-S', or `-E' to say where `gcc' is to stop.  Note that\n-some combinations (for example, `-x cpp-output -E' instruct `gcc' to do\n-nothing at all.\n-\n-`-c'\n-     Compile or assemble the source files, but do not link.  The linking\n-     stage simply is not done.  The ultimate output is in the form of an\n-     object file for each source file.\n-\n-     By default, the object file name for a source file is made by\n-     replacing the suffix `.c', `.i', `.s', etc., with `.o'.\n-\n-     Unrecognized input files, not requiring compilation or assembly,\n-     are ignored.\n-\n-`-S'\n-     Stop after the stage of compilation proper; do not assemble.  The\n-     output is in the form of an assembler code file for each\n-     non-assembler input file specified.\n-\n-     By default, the assembler file name for a source file is made by\n-     replacing the suffix `.c', `.i', etc., with `.s'.\n-\n-     Input files that don't require compilation are ignored.\n-\n-`-E'\n-     Stop after the preprocessing stage; do not run the compiler\n-     proper.  The output is in the form of preprocessed source code,\n-     which is sent to the standard output.\n-\n-     Input files which don't require preprocessing are ignored.\n-\n-`-o FILE'\n-     Place output in file FILE.  This applies regardless to whatever\n-     sort of output is being produced, whether it be an executable file,\n-     an object file, an assembler file or preprocessed C code.\n-\n-     Since only one output file can be specified, it does not make\n-     sense to use `-o' when compiling more than one input file, unless\n-     you are producing an executable file as output.\n-\n-     If `-o' is not specified, the default is to put an executable file\n-     in `a.out', the object file for `SOURCE.SUFFIX' in `SOURCE.o', its\n-     assembler file in `SOURCE.s', and all preprocessed C source on\n-     standard output.\n-\n-`-v'\n-     Print (on standard error output) the commands executed to run the\n-     stages of compilation.  Also print the version number of the\n-     compiler driver program and of the preprocessor and the compiler\n-     proper.\n-\n-`-pipe'\n-     Use pipes rather than temporary files for communication between the\n-     various stages of compilation.  This fails to work on some systems\n-     where the assembler is unable to read from a pipe; but the GNU\n-     assembler has no trouble.\n-\n-\u001f\n-File: gcc.info,  Node: Invoking G++,  Next: C Dialect Options,  Prev: Overall Options,  Up: Invoking GCC\n-\n-Compiling C++ Programs\n-======================\n-\n-   C++ source files conventionally use one of the suffixes `.C', `.cc',\n-`cpp', or `.cxx'; preprocessed C++ files use the suffix `.ii'.  GNU CC\n-recognizes files with these names and compiles them as C++ programs\n-even if you call the compiler the same way as for compiling C programs\n-(usually with the name `gcc').\n-\n-   However, C++ programs often require class libraries as well as a\n-compiler that understands the C++ language--and under some\n-circumstances, you might want to compile programs from standard input,\n-or otherwise without a suffix that flags them as C++ programs.  `g++'\n-is a program that calls GNU CC with the default language set to C++,\n-and automatically specifies linking against the GNU class library\n-libg++.  (1) On many systems, the script `g++' is also installed with\n-the name `c++'.\n-\n-   When you compile C++ programs, you may specify many of the same\n-command-line options that you use for compiling programs in any\n-language; or command-line options meaningful for C and related\n-languages; or options that are meaningful only for C++ programs.  *Note\n-Options Controlling C Dialect: C Dialect Options, for explanations of\n-options for languages related to C.  *Note Options Controlling C++\n-Dialect: C++ Dialect Options, for explanations of options that are\n-meaningful only for C++ programs.\n-\n-   ---------- Footnotes ----------\n-\n-   (1) Prior to release 2 of the compiler, there was a separate `g++'\n-compiler.  That version was based on GNU CC, but not integrated with\n-it.  Versions of `g++' with a `1.XX' version number--for example, `g++'\n-version 1.37 or 1.42--are much less reliable than the versions\n-integrated with GCC 2.  Moreover, combining G++ `1.XX' with a version 2\n-GCC will simply not work.\n-\n-\u001f\n-File: gcc.info,  Node: C Dialect Options,  Next: C++ Dialect Options,  Prev: Invoking G++,  Up: Invoking GCC\n-\n-Options Controlling C Dialect\n-=============================\n-\n-   The following options control the dialect of C (or languages derived\n-from C, such as C++ and Objective C) that the compiler accepts:\n-\n-`-ansi'\n-     Support all ANSI standard C programs.\n-\n-     This turns off certain features of GNU C that are incompatible\n-     with ANSI C, such as the `asm', `inline' and `typeof' keywords, and\n-     predefined macros such as `unix' and `vax' that identify the type\n-     of system you are using.  It also enables the undesirable and\n-     rarely used ANSI trigraph feature, and it disables recognition of\n-     C++ style `//' comments.\n-\n-     The alternate keywords `__asm__', `__extension__', `__inline__'\n-     and `__typeof__' continue to work despite `-ansi'.  You would not\n-     want to use them in an ANSI C program, of course, but it is useful\n-     to put them in header files that might be included in compilations\n-     done with `-ansi'.  Alternate predefined macros such as `__unix__'\n-     and `__vax__' are also available, with or without `-ansi'.\n-\n-     The `-ansi' option does not cause non-ANSI programs to be rejected\n-     gratuitously.  For that, `-pedantic' is required in addition to\n-     `-ansi'.  *Note Warning Options::.\n-\n-     The macro `__STRICT_ANSI__' is predefined when the `-ansi' option\n-     is used.  Some header files may notice this macro and refrain from\n-     declaring certain functions or defining certain macros that the\n-     ANSI standard doesn't call for; this is to avoid interfering with\n-     any programs that might use these names for other things.\n-\n-     The functions `alloca', `abort', `exit', and `_exit' are not\n-     builtin functions when `-ansi' is used.\n-\n-`-fno-asm'\n-     Do not recognize `asm', `inline' or `typeof' as a keyword, so that\n-     code can use these words as identifiers.  You can use the keywords\n-     `__asm__', `__inline__' and `__typeof__' instead.  `-ansi' implies\n-     `-fno-asm'.\n-\n-     In C++, this switch only affects the `typeof' keyword, since `asm'\n-     and `inline' are standard keywords.  You may want to use the\n-     `-fno-gnu-keywords' flag instead, as it also disables the other,\n-     C++-specific, extension keywords such as `headof'.\n-\n-`-fno-builtin'\n-     Don't recognize builtin functions that do not begin with two\n-     leading underscores.  Currently, the functions affected include\n-     `abort', `abs', `alloca', `cos', `exit', `fabs', `ffs', `labs',\n-     `memcmp', `memcpy', `sin', `sqrt', `strcmp', `strcpy', and\n-     `strlen'.\n-\n-     GCC normally generates special code to handle certain builtin\n-     functions more efficiently; for instance, calls to `alloca' may\n-     become single instructions that adjust the stack directly, and\n-     calls to `memcpy' may become inline copy loops.  The resulting\n-     code is often both smaller and faster, but since the function\n-     calls no longer appear as such, you cannot set a breakpoint on\n-     those calls, nor can you change the behavior of the functions by\n-     linking with a different library.\n-\n-     The `-ansi' option prevents `alloca' and `ffs' from being builtin\n-     functions, since these functions do not have an ANSI standard\n-     meaning.\n-\n-`-fhosted'\n-     Assert that compilation takes place in a hosted environment.  This\n-     implies `-fbuiltin'.  A hosted environment is one in which the\n-     entire standard library is available, and in which `main' has a\n-     return type of `int'.  Examples are nearly everything except a\n-     kernel.  This is equivalent to `-fno-freestanding'.\n-\n-`-ffreestanding'\n-     Assert that compilation takes place in a freestanding environment.\n-     This implies `-fno-builtin'.  A freestanding environment is one\n-     in which the standard library may not exist, and program startup\n-     may not necessarily be at `main'.  The most obvious example is an\n-     OS kernel.  This is equivalent to `-fno-hosted'.\n-\n-`-trigraphs'\n-     Support ANSI C trigraphs.  You don't want to know about this\n-     brain-damage.  The `-ansi' option implies `-trigraphs'.\n-\n-`-traditional'\n-     Attempt to support some aspects of traditional C compilers.\n-     Specifically:\n-\n-        * All `extern' declarations take effect globally even if they\n-          are written inside of a function definition.  This includes\n-          implicit declarations of functions.\n-\n-        * The newer keywords `typeof', `inline', `signed', `const' and\n-          `volatile' are not recognized.  (You can still use the\n-          alternative keywords such as `__typeof__', `__inline__', and\n-          so on.)\n-\n-        * Comparisons between pointers and integers are always allowed.\n-\n-        * Integer types `unsigned short' and `unsigned char' promote to\n-          `unsigned int'.\n-\n-        * Out-of-range floating point literals are not an error.\n-\n-        * Certain constructs which ANSI regards as a single invalid\n-          preprocessing number, such as `0xe-0xd', are treated as\n-          expressions instead.\n-\n-        * String \"constants\" are not necessarily constant; they are\n-          stored in writable space, and identical looking constants are\n-          allocated separately.  (This is the same as the effect of\n-          `-fwritable-strings'.)\n-\n-        * All automatic variables not declared `register' are preserved\n-          by `longjmp'.  Ordinarily, GNU C follows ANSI C: automatic\n-          variables not declared `volatile' may be clobbered.\n-\n-        * The character escape sequences `\\x' and `\\a' evaluate as the\n-          literal characters `x' and `a' respectively.  Without\n-          `-traditional', `\\x' is a prefix for the hexadecimal\n-          representation of a character, and `\\a' produces a bell.\n-\n-        * In C++ programs, assignment to `this' is permitted with\n-          `-traditional'.  (The option `-fthis-is-variable' also has\n-          this effect.)\n-\n-     You may wish to use `-fno-builtin' as well as `-traditional' if\n-     your program uses names that are normally GNU C builtin functions\n-     for other purposes of its own.\n-\n-     You cannot use `-traditional' if you include any header files that\n-     rely on ANSI C features.  Some vendors are starting to ship\n-     systems with ANSI C header files and you cannot use `-traditional'\n-     on such systems to compile files that include any system headers.\n-\n-     The `-traditional' option also enables the `-traditional-cpp'\n-     option, which is described next.\n-\n-`-traditional-cpp'\n-     Attempt to support some aspects of traditional C preprocessors.\n-     Specifically:\n-\n-        * Comments convert to nothing at all, rather than to a space.\n-          This allows traditional token concatenation.\n-\n-        * In a preprocessing directive, the `#' symbol must appear as\n-          the first character of a line.\n-\n-        * Macro arguments are recognized within string constants in a\n-          macro definition (and their values are stringified, though\n-          without additional quote marks, when they appear in such a\n-          context).  The preprocessor always considers a string\n-          constant to end at a newline.\n-\n-        * The predefined macro `__STDC__' is not defined when you use\n-          `-traditional', but `__GNUC__' is (since the GNU extensions\n-          which `__GNUC__' indicates are not affected by\n-          `-traditional').  If you need to write header files that work\n-          differently depending on whether `-traditional' is in use, by\n-          testing both of these predefined macros you can distinguish\n-          four situations: GNU C, traditional GNU C, other ANSI C\n-          compilers, and other old C compilers.  The predefined macro\n-          `__STDC_VERSION__' is also not defined when you use\n-          `-traditional'.  *Note Standard Predefined Macros:\n-          (cpp.info)Standard Predefined, for more discussion of these\n-          and other predefined macros.\n-\n-        * The preprocessor considers a string constant to end at a\n-          newline (unless the newline is escaped with `\\').  (Without\n-          `-traditional', string constants can contain the newline\n-          character as typed.)\n-\n-`-fcond-mismatch'\n-     Allow conditional expressions with mismatched types in the second\n-     and third arguments.  The value of such an expression is void.\n-\n-`-funsigned-char'\n-     Let the type `char' be unsigned, like `unsigned char'.\n-\n-     Each kind of machine has a default for what `char' should be.  It\n-     is either like `unsigned char' by default or like `signed char' by\n-     default.\n-\n-     Ideally, a portable program should always use `signed char' or\n-     `unsigned char' when it depends on the signedness of an object.\n-     But many programs have been written to use plain `char' and expect\n-     it to be signed, or expect it to be unsigned, depending on the\n-     machines they were written for.  This option, and its inverse, let\n-     you make such a program work with the opposite default.\n-\n-     The type `char' is always a distinct type from each of `signed\n-     char' or `unsigned char', even though its behavior is always just\n-     like one of those two.\n-\n-`-fsigned-char'\n-     Let the type `char' be signed, like `signed char'.\n-\n-     Note that this is equivalent to `-fno-unsigned-char', which is the\n-     negative form of `-funsigned-char'.  Likewise, the option\n-     `-fno-signed-char' is equivalent to `-funsigned-char'.\n-\n-     You may wish to use `-fno-builtin' as well as `-traditional' if\n-     your program uses names that are normally GNU C builtin functions\n-     for other purposes of its own.\n-\n-     You cannot use `-traditional' if you include any header files that\n-     rely on ANSI C features.  Some vendors are starting to ship\n-     systems with ANSI C header files and you cannot use `-traditional'\n-     on such systems to compile files that include any system headers.\n-\n-`-fsigned-bitfields'\n-`-funsigned-bitfields'\n-`-fno-signed-bitfields'\n-`-fno-unsigned-bitfields'\n-     These options control whether a bitfield is signed or unsigned,\n-     when the declaration does not use either `signed' or `unsigned'.\n-     By default, such a bitfield is signed, because this is consistent:\n-     the basic integer types such as `int' are signed types.\n-\n-     However, when `-traditional' is used, bitfields are all unsigned\n-     no matter what.\n-\n-`-fwritable-strings'\n-     Store string constants in the writable data segment and don't\n-     uniquize them.  This is for compatibility with old programs which\n-     assume they can write into string constants.  The option\n-     `-traditional' also has this effect.\n-\n-     Writing into string constants is a very bad idea; \"constants\"\n-     should be constant.\n-\n-`-fallow-single-precision'\n-     Do not promote single precision math operations to double\n-     precision, even when compiling with `-traditional'.\n-\n-     Traditional K&R C promotes all floating point operations to double\n-     precision, regardless of the sizes of the operands.   On the\n-     architecture for which you are compiling, single precision may be\n-     faster than double precision.   If you must use `-traditional',\n-     but want to use single precision operations when the operands are\n-     single precision, use this option.   This option has no effect\n-     when compiling with ANSI or GNU C conventions (the default).\n-\n-\u001f\n-File: gcc.info,  Node: C++ Dialect Options,  Next: Warning Options,  Prev: C Dialect Options,  Up: Invoking GCC\n-\n-Options Controlling C++ Dialect\n-===============================\n-\n-   This section describes the command-line options that are only\n-meaningful for C++ programs; but you can also use most of the GNU\n-compiler options regardless of what language your program is in.  For\n-example, you might compile a file `firstClass.C' like this:\n-\n-     g++ -g -felide-constructors -O -c firstClass.C\n-\n-In this example, only `-felide-constructors' is an option meant only\n-for C++ programs; you can use the other options with any language\n-supported by GNU CC.\n-\n-   Here is a list of options that are *only* for compiling C++ programs:\n-\n-`-fno-access-control'\n-     Turn off all access checking.  This switch is mainly useful for\n-     working around bugs in the access control code.\n-\n-`-fall-virtual'\n-     Treat all possible member functions as virtual, implicitly.  All\n-     member functions (except for constructor functions and `new' or\n-     `delete' member operators) are treated as virtual functions of the\n-     class where they appear.\n-\n-     This does not mean that all calls to these member functions will\n-     be made through the internal table of virtual functions.  Under\n-     some circumstances, the compiler can determine that a call to a\n-     given virtual function can be made directly; in these cases the\n-     calls are direct in any case.\n-\n-`-fcheck-new'\n-     Check that the pointer returned by `operator new' is non-null\n-     before attempting to modify the storage allocated.  The current\n-     Working Paper requires that `operator new' never return a null\n-     pointer, so this check is normally unnecessary.\n-\n-`-fconserve-space'\n-     Put uninitialized or runtime-initialized global variables into the\n-     common segment, as C does.  This saves space in the executable at\n-     the cost of not diagnosing duplicate definitions.  If you compile\n-     with this flag and your program mysteriously crashes after\n-     `main()' has completed, you may have an object that is being\n-     destroyed twice because two definitions were merged.\n-\n-`-fdollars-in-identifiers'\n-     Accept `$' in identifiers.  You can also explicitly prohibit use of\n-     `$' with the option `-fno-dollars-in-identifiers'.  (GNU C allows\n-     `$' by default on most target systems, but there are a few\n-     exceptions.)  Traditional C allowed the character `$' to form part\n-     of identifiers.  However, ANSI C and C++ forbid `$' in identifiers.\n-\n-`-fenum-int-equiv'\n-     Anachronistically permit implicit conversion of `int' to\n-     enumeration types.  Current C++ allows conversion of `enum' to\n-     `int', but not the other way around.\n-\n-`-fexternal-templates'\n-     Cause template instantiations to obey `#pragma interface' and\n-     `implementation'; template instances are emitted or not according\n-     to the location of the template definition.  *Note Template\n-     Instantiation::, for more information.\n-\n-     This option is deprecated.\n-\n-`-falt-external-templates'\n-     Similar to -fexternal-templates, but template instances are\n-     emitted or not according to the place where they are first\n-     instantiated.  *Note Template Instantiation::, for more\n-     information.\n-\n-     This option is deprecated.\n-\n-`-ffor-scope'\n-`-fno-for-scope'\n-     If -ffor-scope is specified, the scope of variables declared in a\n-     for-init-statement is limited to the `for' loop itself, as\n-     specified by the draft C++ standard.  If -fno-for-scope is\n-     specified, the scope of variables declared in a for-init-statement\n-     extends to the end of the enclosing scope, as was the case in old\n-     versions of gcc, and other (traditional) implementations of C++.\n-\n-     The default if neither flag is given to follow the standard, but\n-     to allow and give a warning for old-style code that would\n-     otherwise be invalid, or have different behavior.\n-\n-`-fno-gnu-keywords'\n-     Do not recognize `classof', `headof', `signature', `sigof' or\n-     `typeof' as a keyword, so that code can use these words as\n-     identifiers.  You can use the keywords `__classof__',\n-     `__headof__', `__signature__', `__sigof__', and `__typeof__'\n-     instead.  `-ansi' implies `-fno-gnu-keywords'.\n-\n-`-fguiding-decls'\n-     Treat a function declaration with the same type as a potential\n-     function template instantiation as though it declares that\n-     instantiation, not a normal function.  If a definition is given\n-     for the function later in the translation unit (or another\n-     translation unit if the target supports weak symbols), that\n-     definition will be used; otherwise the template will be\n-     instantiated.  This behavior reflects the C++ language prior to\n-     September 1996, when guiding declarations were removed.\n-\n-     This option implies `-fname-mangling-version-0', and will not work\n-     with other name mangling versions.\n-\n-`-fno-implicit-templates'\n-     Never emit code for templates which are instantiated implicitly\n-     (i.e. by use); only emit code for explicit instantiations.  *Note\n-     Template Instantiation::, for more information.\n-\n-`-fhandle-signatures'\n-     Recognize the `signature' and `sigof' keywords for specifying\n-     abstract types.  The default (`-fno-handle-signatures') is not to\n-     recognize them.  *Note Type Abstraction using Signatures: C++\n-     Signatures.\n-\n-`-fhuge-objects'\n-     Support virtual function calls for objects that exceed the size\n-     representable by a `short int'.  Users should not use this flag by\n-     default; if you need to use it, the compiler will tell you so.  If\n-     you compile any of your code with this flag, you must compile\n-     *all* of your code with this flag (including libg++, if you use\n-     it).\n-\n-     This flag is not useful when compiling with -fvtable-thunks.\n-\n-`-fno-implement-inlines'\n-     To save space, do not emit out-of-line copies of inline functions\n-     controlled by `#pragma implementation'.  This will cause linker\n-     errors if these functions are not inlined everywhere they are\n-     called.\n-\n-`-fmemoize-lookups'\n-`-fsave-memoized'\n-     Use heuristics to compile faster.  These heuristics are not\n-     enabled by default, since they are only effective for certain\n-     input files.  Other input files compile more slowly.\n-\n-     The first time the compiler must build a call to a member function\n-     (or reference to a data member), it must (1) determine whether the\n-     class implements member functions of that name; (2) resolve which\n-     member function to call (which involves figuring out what sorts of\n-     type conversions need to be made); and (3) check the visibility of\n-     the member function to the caller.  All of this adds up to slower\n-     compilation.  Normally, the second time a call is made to that\n-     member function (or reference to that data member), it must go\n-     through the same lengthy process again.  This means that code like\n-     this:\n-\n-          cout << \"This \" << p << \" has \" << n << \" legs.\\n\";\n-\n-     makes six passes through all three steps.  By using a software\n-     cache, a \"hit\" significantly reduces this cost.  Unfortunately,\n-     using the cache introduces another layer of mechanisms which must\n-     be implemented, and so incurs its own overhead.\n-     `-fmemoize-lookups' enables the software cache.\n-\n-     Because access privileges (visibility) to members and member\n-     functions may differ from one function context to the next, G++\n-     may need to flush the cache.  With the `-fmemoize-lookups' flag,\n-     the cache is flushed after every function that is compiled.  The\n-     `-fsave-memoized' flag enables the same software cache, but when\n-     the compiler determines that the context of the last function\n-     compiled would yield the same access privileges of the next\n-     function to compile, it preserves the cache.  This is most helpful\n-     when defining many member functions for the same class: with the\n-     exception of member functions which are friends of other classes,\n-     each member function has exactly the same access privileges as\n-     every other, and the cache need not be flushed.\n-\n-     The code that implements these flags has rotted; you should\n-     probably avoid using them.\n-\n-`-fstrict-prototype'\n-     Within an `extern \"C\"' linkage specification, treat a function\n-     declaration with no arguments, such as `int foo ();', as declaring\n-     the function to take no arguments.  Normally, such a declaration\n-     means that the function `foo' can take any combination of\n-     arguments, as in C.  `-pedantic' implies `-fstrict-prototype'\n-     unless overridden with `-fno-strict-prototype'.\n-\n-     This flag no longer affects declarations with C++ linkage.\n-\n-`-fname-mangling-version-N'\n-     Control the way in which names are mangled.  Version 0 is\n-     compatible with versions of g++ before 2.8.  Version 1 is the\n-     default.  Version 1 will allow correct mangling of function\n-     templates.  For example, version 0 mangling does not mangle\n-     foo<int, double> and foo<int, char> given this declaration:\n-\n-          template <class T, class U> void foo(T t);\n-\n-`-fno-nonnull-objects'\n-     Don't assume that a reference is initialized to refer to a valid\n-     object.  Although the current C++ Working Paper prohibits null\n-     references, some old code may rely on them, and you can use\n-     `-fno-nonnull-objects' to turn on checking.\n-\n-     At the moment, the compiler only does this checking for\n-     conversions to virtual base classes.\n-\n-`-foperator-names'\n-     Recognize the operator name keywords `and', `bitand', `bitor',\n-     `compl', `not', `or' and `xor' as synonyms for the symbols they\n-     refer to.  `-ansi' implies `-foperator-names'.\n-\n-`-fthis-is-variable'\n-     Permit assignment to `this'.  The incorporation of user-defined\n-     free store management into C++ has made assignment to `this' an\n-     anachronism.  Therefore, by default it is invalid to assign to\n-     `this' within a class member function; that is, GNU C++ treats\n-     `this' in a member function of class `X' as a non-lvalue of type\n-     `X *'.  However, for backwards compatibility, you can make it\n-     valid with `-fthis-is-variable'.\n-\n-`-fvtable-thunks'\n-     Use `thunks' to implement the virtual function dispatch table\n-     (`vtable').  The traditional (cfront-style) approach to\n-     implementing vtables was to store a pointer to the function and two\n-     offsets for adjusting the `this' pointer at the call site.  Newer\n-     implementations store a single pointer to a `thunk' function which\n-     does any necessary adjustment and then calls the target function.\n-\n-     This option also enables a heuristic for controlling emission of\n-     vtables; if a class has any non-inline virtual functions, the\n-     vtable will be emitted in the translation unit containing the\n-     first one of those.\n-\n-`-ftemplate-depth-N'\n-     Set the maximum instantiation depth for template classes to N.  A\n-     limit on the template instantiation depth is needed to detect\n-     endless recursions during template class instantiation. ANSI/ISO\n-     C++ conforming programs must not rely on a maximum depth greater\n-     than 17.\n-\n-`-nostdinc++'\n-     Do not search for header files in the standard directories\n-     specific to C++, but do still search the other standard\n-     directories.  (This option is used when building libg++.)\n-\n-`-traditional'\n-     For C++ programs (in addition to the effects that apply to both C\n-     and C++), this has the same effect as `-fthis-is-variable'.  *Note\n-     Options Controlling C Dialect: C Dialect Options.\n-\n-   In addition, these optimization, warning, and code generation options\n-have meanings only for C++ programs:\n-\n-`-fno-default-inline'\n-     Do not assume `inline' for functions defined inside a class scope.\n-     *Note Options That Control Optimization: Optimize Options.\n-\n-`-Woverloaded-virtual'\n-`-Wtemplate-debugging'\n-     Warnings that apply only to C++ programs.  *Note Options to\n-     Request or Suppress Warnings: Warning Options.\n-\n-`-Weffc++'\n-     Warn about violation of some style rules from Effective C++ by\n-     Scott Myers.\n-\n-`+eN'\n-     Control how virtual function definitions are used, in a fashion\n-     compatible with `cfront' 1.x.  *Note Options for Code Generation\n-     Conventions: Code Gen Options.\n-"}, {"sha": "a7a7c0cfa119ecafdf11e476e9bc4ee98dffa22e", "filename": "gcc/gcc.info-10", "status": "removed", "additions": 0, "deletions": 1079, "changes": 1079, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-10", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-10", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-10?ref=bb84e66919817020267815eed4304e543688e722", "patch": "@@ -1,1079 +0,0 @@\n-This is Info file gcc.info, produced by Makeinfo version 1.68 from the\n-input file gcc.texi.\n-\n-   This file documents the use and the internals of the GNU compiler.\n-\n-   Published by the Free Software Foundation 59 Temple Place - Suite 330\n-Boston, MA 02111-1307 USA\n-\n-   Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997 Free\n-Software Foundation, Inc.\n-\n-   Permission is granted to make and distribute verbatim copies of this\n-manual provided the copyright notice and this permission notice are\n-preserved on all copies.\n-\n-   Permission is granted to copy and distribute modified versions of\n-this manual under the conditions for verbatim copying, provided also\n-that the sections entitled \"GNU General Public License,\" \"Funding for\n-Free Software,\" and \"Protect Your Freedom--Fight `Look And Feel'\" are\n-included exactly as in the original, and provided that the entire\n-resulting derived work is distributed under the terms of a permission\n-notice identical to this one.\n-\n-   Permission is granted to copy and distribute translations of this\n-manual into another language, under the above conditions for modified\n-versions, except that the sections entitled \"GNU General Public\n-License,\" \"Funding for Free Software,\" and \"Protect Your Freedom--Fight\n-`Look And Feel'\", and this permission notice, may be included in\n-translations approved by the Free Software Foundation instead of in the\n-original English.\n-\n-\u001f\n-File: gcc.info,  Node: Inline,  Next: Extended Asm,  Prev: Alignment,  Up: C Extensions\n-\n-An Inline Function is As Fast As a Macro\n-========================================\n-\n-   By declaring a function `inline', you can direct GNU CC to integrate\n-that function's code into the code for its callers.  This makes\n-execution faster by eliminating the function-call overhead; in\n-addition, if any of the actual argument values are constant, their known\n-values may permit simplifications at compile time so that not all of the\n-inline function's code needs to be included.  The effect on code size is\n-less predictable; object code may be larger or smaller with function\n-inlining, depending on the particular case.  Inlining of functions is an\n-optimization and it really \"works\" only in optimizing compilation.  If\n-you don't use `-O', no function is really inline.\n-\n-   To declare a function inline, use the `inline' keyword in its\n-declaration, like this:\n-\n-     inline int\n-     inc (int *a)\n-     {\n-       (*a)++;\n-     }\n-\n-   (If you are writing a header file to be included in ANSI C programs,\n-write `__inline__' instead of `inline'.  *Note Alternate Keywords::.)\n-\n-   You can also make all \"simple enough\" functions inline with the\n-option `-finline-functions'.  Note that certain usages in a function\n-definition can make it unsuitable for inline substitution.\n-\n-   Note that in C and Objective C, unlike C++, the `inline' keyword\n-does not affect the linkage of the function.\n-\n-   GNU CC automatically inlines member functions defined within the\n-class body of C++ programs even if they are not explicitly declared\n-`inline'.  (You can override this with `-fno-default-inline'; *note\n-Options Controlling C++ Dialect: C++ Dialect Options..)\n-\n-   When a function is both inline and `static', if all calls to the\n-function are integrated into the caller, and the function's address is\n-never used, then the function's own assembler code is never referenced.\n-In this case, GNU CC does not actually output assembler code for the\n-function, unless you specify the option `-fkeep-inline-functions'.\n-Some calls cannot be integrated for various reasons (in particular,\n-calls that precede the function's definition cannot be integrated, and\n-neither can recursive calls within the definition).  If there is a\n-nonintegrated call, then the function is compiled to assembler code as\n-usual.  The function must also be compiled as usual if the program\n-refers to its address, because that can't be inlined.\n-\n-   When an inline function is not `static', then the compiler must\n-assume that there may be calls from other source files; since a global\n-symbol can be defined only once in any program, the function must not\n-be defined in the other source files, so the calls therein cannot be\n-integrated.  Therefore, a non-`static' inline function is always\n-compiled on its own in the usual fashion.\n-\n-   If you specify both `inline' and `extern' in the function\n-definition, then the definition is used only for inlining.  In no case\n-is the function compiled on its own, not even if you refer to its\n-address explicitly.  Such an address becomes an external reference, as\n-if you had only declared the function, and had not defined it.\n-\n-   This combination of `inline' and `extern' has almost the effect of a\n-macro.  The way to use it is to put a function definition in a header\n-file with these keywords, and put another copy of the definition\n-(lacking `inline' and `extern') in a library file.  The definition in\n-the header file will cause most calls to the function to be inlined.\n-If any uses of the function remain, they will refer to the single copy\n-in the library.\n-\n-   GNU C does not inline any functions when not optimizing.  It is not\n-clear whether it is better to inline or not, in this case, but we found\n-that a correct implementation when not optimizing was difficult.  So we\n-did the easy thing, and turned it off.\n-\n-\u001f\n-File: gcc.info,  Node: Extended Asm,  Next: Asm Labels,  Prev: Inline,  Up: C Extensions\n-\n-Assembler Instructions with C Expression Operands\n-=================================================\n-\n-   In an assembler instruction using `asm', you can now specify the\n-operands of the instruction using C expressions.  This means no more\n-guessing which registers or memory locations will contain the data you\n-want to use.\n-\n-   You must specify an assembler instruction template much like what\n-appears in a machine description, plus an operand constraint string for\n-each operand.\n-\n-   For example, here is how to use the 68881's `fsinx' instruction:\n-\n-     asm (\"fsinx %1,%0\" : \"=f\" (result) : \"f\" (angle));\n-\n-Here `angle' is the C expression for the input operand while `result'\n-is that of the output operand.  Each has `\"f\"' as its operand\n-constraint, saying that a floating point register is required.  The `='\n-in `=f' indicates that the operand is an output; all output operands'\n-constraints must use `='.  The constraints use the same language used\n-in the machine description (*note Constraints::.).\n-\n-   Each operand is described by an operand-constraint string followed\n-by the C expression in parentheses.  A colon separates the assembler\n-template from the first output operand, and another separates the last\n-output operand from the first input, if any.  Commas separate output\n-operands and separate inputs.  The total number of operands is limited\n-to ten or to the maximum number of operands in any instruction pattern\n-in the machine description, whichever is greater.\n-\n-   If there are no output operands, and there are input operands, then\n-there must be two consecutive colons surrounding the place where the\n-output operands would go.\n-\n-   Output operand expressions must be lvalues; the compiler can check\n-this.  The input operands need not be lvalues.  The compiler cannot\n-check whether the operands have data types that are reasonable for the\n-instruction being executed.  It does not parse the assembler\n-instruction template and does not know what it means, or whether it is\n-valid assembler input.  The extended `asm' feature is most often used\n-for machine instructions that the compiler itself does not know exist.\n-If the output expression cannot be directly addressed (for example, it\n-is a bit field), your constraint must allow a register.  In that case,\n-GNU CC will use the register as the output of the `asm', and then store\n-that register into the output.\n-\n-   The ordinary output operands must be write-only; GNU CC will assume\n-that the values in these operands before the instruction are dead and\n-need not be generated.  Extended asm supports input-output or\n-read-write operands.  Use the constraint character `+' to indicate such\n-an operand and list it with the output operands.\n-\n-   When the constraints for the read-write operand (or the operand in\n-which only some of the bits are to be changed) allows a register, you\n-may, as an alternative, logically split its function into two separate\n-operands, one input operand and one write-only output operand.  The\n-connection between them is expressed by constraints which say they need\n-to be in the same location when the instruction executes.  You can use\n-the same C expression for both operands, or different expressions.  For\n-example, here we write the (fictitious) `combine' instruction with\n-`bar' as its read-only source operand and `foo' as its read-write\n-destination:\n-\n-     asm (\"combine %2,%0\" : \"=r\" (foo) : \"0\" (foo), \"g\" (bar));\n-\n-The constraint `\"0\"' for operand 1 says that it must occupy the same\n-location as operand 0.  A digit in constraint is allowed only in an\n-input operand, and it must refer to an output operand.\n-\n-   Only a digit in the constraint can guarantee that one operand will\n-be in the same place as another.  The mere fact that `foo' is the value\n-of both operands is not enough to guarantee that they will be in the\n-same place in the generated assembler code.  The following would not\n-work:\n-\n-     asm (\"combine %2,%0\" : \"=r\" (foo) : \"r\" (foo), \"g\" (bar));\n-\n-   Various optimizations or reloading could cause operands 0 and 1 to\n-be in different registers; GNU CC knows no reason not to do so.  For\n-example, the compiler might find a copy of the value of `foo' in one\n-register and use it for operand 1, but generate the output operand 0 in\n-a different register (copying it afterward to `foo''s own address).  Of\n-course, since the register for operand 1 is not even mentioned in the\n-assembler code, the result will not work, but GNU CC can't tell that.\n-\n-   Some instructions clobber specific hard registers.  To describe\n-this, write a third colon after the input operands, followed by the\n-names of the clobbered hard registers (given as strings).  Here is a\n-realistic example for the Vax:\n-\n-     asm volatile (\"movc3 %0,%1,%2\"\n-                   : /* no outputs */\n-                   : \"g\" (from), \"g\" (to), \"g\" (count)\n-                   : \"r0\", \"r1\", \"r2\", \"r3\", \"r4\", \"r5\");\n-\n-   If you refer to a particular hardware register from the assembler\n-code, then you will probably have to list the register after the third\n-colon to tell the compiler that the register's value is modified.  In\n-many assemblers, the register names begin with `%'; to produce one `%'\n-in the assembler code, you must write `%%' in the input.\n-\n-   If your assembler instruction can alter the condition code register,\n-add `cc' to the list of clobbered registers.  GNU CC on some machines\n-represents the condition codes as a specific hardware register; `cc'\n-serves to name this register.  On other machines, the condition code is\n-handled differently, and specifying `cc' has no effect.  But it is\n-valid no matter what the machine.\n-\n-   If your assembler instruction modifies memory in an unpredictable\n-fashion, add `memory' to the list of clobbered registers.  This will\n-cause GNU CC to not keep memory values cached in registers across the\n-assembler instruction.\n-\n-   You can put multiple assembler instructions together in a single\n-`asm' template, separated either with newlines (written as `\\n') or with\n-semicolons if the assembler allows such semicolons.  The GNU assembler\n-allows semicolons and all Unix assemblers seem to do so.  The input\n-operands are guaranteed not to use any of the clobbered registers, and\n-neither will the output operands' addresses, so you can read and write\n-the clobbered registers as many times as you like.  Here is an example\n-of multiple instructions in a template; it assumes that the subroutine\n-`_foo' accepts arguments in registers 9 and 10:\n-\n-     asm (\"movl %0,r9;movl %1,r10;call _foo\"\n-          : /* no outputs */\n-          : \"g\" (from), \"g\" (to)\n-          : \"r9\", \"r10\");\n-\n-   Unless an output operand has the `&' constraint modifier, GNU CC may\n-allocate it in the same register as an unrelated input operand, on the\n-assumption that the inputs are consumed before the outputs are produced.\n-This assumption may be false if the assembler code actually consists of\n-more than one instruction.  In such a case, use `&' for each output\n-operand that may not overlap an input.  *Note Modifiers::.\n-\n-   If you want to test the condition code produced by an assembler\n-instruction, you must include a branch and a label in the `asm'\n-construct, as follows:\n-\n-     asm (\"clr %0;frob %1;beq 0f;mov #1,%0;0:\"\n-          : \"g\" (result)\n-          : \"g\" (input));\n-\n-This assumes your assembler supports local labels, as the GNU assembler\n-and most Unix assemblers do.\n-\n-   Speaking of labels, jumps from one `asm' to another are not\n-supported.  The compiler's optimizers do not know about these jumps,\n-and therefore they cannot take account of them when deciding how to\n-optimize.\n-\n-   Usually the most convenient way to use these `asm' instructions is to\n-encapsulate them in macros that look like functions.  For example,\n-\n-     #define sin(x)       \\\n-     ({ double __value, __arg = (x);   \\\n-        asm (\"fsinx %1,%0\": \"=f\" (__value): \"f\" (__arg));  \\\n-        __value; })\n-\n-Here the variable `__arg' is used to make sure that the instruction\n-operates on a proper `double' value, and to accept only those arguments\n-`x' which can convert automatically to a `double'.\n-\n-   Another way to make sure the instruction operates on the correct\n-data type is to use a cast in the `asm'.  This is different from using a\n-variable `__arg' in that it converts more different types.  For\n-example, if the desired type were `int', casting the argument to `int'\n-would accept a pointer with no complaint, while assigning the argument\n-to an `int' variable named `__arg' would warn about using a pointer\n-unless the caller explicitly casts it.\n-\n-   If an `asm' has output operands, GNU CC assumes for optimization\n-purposes that the instruction has no side effects except to change the\n-output operands.  This does not mean that instructions with a side\n-effect cannot be used, but you must be careful, because the compiler\n-may eliminate them if the output operands aren't used, or move them out\n-of loops, or replace two with one if they constitute a common\n-subexpression.  Also, if your instruction does have a side effect on a\n-variable that otherwise appears not to change, the old value of the\n-variable may be reused later if it happens to be found in a register.\n-\n-   You can prevent an `asm' instruction from being deleted, moved\n-significantly, or combined, by writing the keyword `volatile' after the\n-`asm'.  For example:\n-\n-     #define set_priority(x)  \\\n-     asm volatile (\"set_priority %0\": /* no outputs */ : \"g\" (x))\n-\n-An instruction without output operands will not be deleted or moved\n-significantly, regardless, unless it is unreachable.\n-\n-   Note that even a volatile `asm' instruction can be moved in ways\n-that appear insignificant to the compiler, such as across jump\n-instructions.  You can't expect a sequence of volatile `asm'\n-instructions to remain perfectly consecutive.  If you want consecutive\n-output, use a single `asm'.\n-\n-   It is a natural idea to look for a way to give access to the\n-condition code left by the assembler instruction.  However, when we\n-attempted to implement this, we found no way to make it work reliably.\n-The problem is that output operands might need reloading, which would\n-result in additional following \"store\" instructions.  On most machines,\n-these instructions would alter the condition code before there was time\n-to test it.  This problem doesn't arise for ordinary \"test\" and\n-\"compare\" instructions because they don't have any output operands.\n-\n-   If you are writing a header file that should be includable in ANSI C\n-programs, write `__asm__' instead of `asm'.  *Note Alternate Keywords::.\n-\n-\u001f\n-File: gcc.info,  Node: Asm Labels,  Next: Explicit Reg Vars,  Prev: Extended Asm,  Up: C Extensions\n-\n-Controlling Names Used in Assembler Code\n-========================================\n-\n-   You can specify the name to be used in the assembler code for a C\n-function or variable by writing the `asm' (or `__asm__') keyword after\n-the declarator as follows:\n-\n-     int foo asm (\"myfoo\") = 2;\n-\n-This specifies that the name to be used for the variable `foo' in the\n-assembler code should be `myfoo' rather than the usual `_foo'.\n-\n-   On systems where an underscore is normally prepended to the name of\n-a C function or variable, this feature allows you to define names for\n-the linker that do not start with an underscore.\n-\n-   You cannot use `asm' in this way in a function *definition*; but you\n-can get the same effect by writing a declaration for the function\n-before its definition and putting `asm' there, like this:\n-\n-     extern func () asm (\"FUNC\");\n-     \n-     func (x, y)\n-          int x, y;\n-     ...\n-\n-   It is up to you to make sure that the assembler names you choose do\n-not conflict with any other assembler symbols.  Also, you must not use a\n-register name; that would produce completely invalid assembler code.\n-GNU CC does not as yet have the ability to store static variables in\n-registers.  Perhaps that will be added.\n-\n-\u001f\n-File: gcc.info,  Node: Explicit Reg Vars,  Next: Alternate Keywords,  Prev: Asm Labels,  Up: C Extensions\n-\n-Variables in Specified Registers\n-================================\n-\n-   GNU C allows you to put a few global variables into specified\n-hardware registers.  You can also specify the register in which an\n-ordinary register variable should be allocated.\n-\n-   * Global register variables reserve registers throughout the program.\n-     This may be useful in programs such as programming language\n-     interpreters which have a couple of global variables that are\n-     accessed very often.\n-\n-   * Local register variables in specific registers do not reserve the\n-     registers.  The compiler's data flow analysis is capable of\n-     determining where the specified registers contain live values, and\n-     where they are available for other uses.\n-\n-     These local variables are sometimes convenient for use with the\n-     extended `asm' feature (*note Extended Asm::.), if you want to\n-     write one output of the assembler instruction directly into a\n-     particular register.  (This will work provided the register you\n-     specify fits the constraints specified for that operand in the\n-     `asm'.)\n-\n-* Menu:\n-\n-* Global Reg Vars::\n-* Local Reg Vars::\n-\n-\u001f\n-File: gcc.info,  Node: Global Reg Vars,  Next: Local Reg Vars,  Up: Explicit Reg Vars\n-\n-Defining Global Register Variables\n-----------------------------------\n-\n-   You can define a global register variable in GNU C like this:\n-\n-     register int *foo asm (\"a5\");\n-\n-Here `a5' is the name of the register which should be used.  Choose a\n-register which is normally saved and restored by function calls on your\n-machine, so that library routines will not clobber it.\n-\n-   Naturally the register name is cpu-dependent, so you would need to\n-conditionalize your program according to cpu type.  The register `a5'\n-would be a good choice on a 68000 for a variable of pointer type.  On\n-machines with register windows, be sure to choose a \"global\" register\n-that is not affected magically by the function call mechanism.\n-\n-   In addition, operating systems on one type of cpu may differ in how\n-they name the registers; then you would need additional conditionals.\n-For example, some 68000 operating systems call this register `%a5'.\n-\n-   Eventually there may be a way of asking the compiler to choose a\n-register automatically, but first we need to figure out how it should\n-choose and how to enable you to guide the choice.  No solution is\n-evident.\n-\n-   Defining a global register variable in a certain register reserves\n-that register entirely for this use, at least within the current\n-compilation.  The register will not be allocated for any other purpose\n-in the functions in the current compilation.  The register will not be\n-saved and restored by these functions.  Stores into this register are\n-never deleted even if they would appear to be dead, but references may\n-be deleted or moved or simplified.\n-\n-   It is not safe to access the global register variables from signal\n-handlers, or from more than one thread of control, because the system\n-library routines may temporarily use the register for other things\n-(unless you recompile them specially for the task at hand).\n-\n-   It is not safe for one function that uses a global register variable\n-to call another such function `foo' by way of a third function `lose'\n-that was compiled without knowledge of this variable (i.e. in a\n-different source file in which the variable wasn't declared).  This is\n-because `lose' might save the register and put some other value there.\n-For example, you can't expect a global register variable to be\n-available in the comparison-function that you pass to `qsort', since\n-`qsort' might have put something else in that register.  (If you are\n-prepared to recompile `qsort' with the same global register variable,\n-you can solve this problem.)\n-\n-   If you want to recompile `qsort' or other source files which do not\n-actually use your global register variable, so that they will not use\n-that register for any other purpose, then it suffices to specify the\n-compiler option `-ffixed-REG'.  You need not actually add a global\n-register declaration to their source code.\n-\n-   A function which can alter the value of a global register variable\n-cannot safely be called from a function compiled without this variable,\n-because it could clobber the value the caller expects to find there on\n-return.  Therefore, the function which is the entry point into the part\n-of the program that uses the global register variable must explicitly\n-save and restore the value which belongs to its caller.\n-\n-   On most machines, `longjmp' will restore to each global register\n-variable the value it had at the time of the `setjmp'.  On some\n-machines, however, `longjmp' will not change the value of global\n-register variables.  To be portable, the function that called `setjmp'\n-should make other arrangements to save the values of the global register\n-variables, and to restore them in a `longjmp'.  This way, the same\n-thing will happen regardless of what `longjmp' does.\n-\n-   All global register variable declarations must precede all function\n-definitions.  If such a declaration could appear after function\n-definitions, the declaration would be too late to prevent the register\n-from being used for other purposes in the preceding functions.\n-\n-   Global register variables may not have initial values, because an\n-executable file has no means to supply initial contents for a register.\n-\n-   On the Sparc, there are reports that g3 ... g7 are suitable\n-registers, but certain library functions, such as `getwd', as well as\n-the subroutines for division and remainder, modify g3 and g4.  g1 and\n-g2 are local temporaries.\n-\n-   On the 68000, a2 ... a5 should be suitable, as should d2 ... d7.  Of\n-course, it will not do to use more than a few of those.\n-\n-\u001f\n-File: gcc.info,  Node: Local Reg Vars,  Prev: Global Reg Vars,  Up: Explicit Reg Vars\n-\n-Specifying Registers for Local Variables\n-----------------------------------------\n-\n-   You can define a local register variable with a specified register\n-like this:\n-\n-     register int *foo asm (\"a5\");\n-\n-Here `a5' is the name of the register which should be used.  Note that\n-this is the same syntax used for defining global register variables,\n-but for a local variable it would appear within a function.\n-\n-   Naturally the register name is cpu-dependent, but this is not a\n-problem, since specific registers are most often useful with explicit\n-assembler instructions (*note Extended Asm::.).  Both of these things\n-generally require that you conditionalize your program according to cpu\n-type.\n-\n-   In addition, operating systems on one type of cpu may differ in how\n-they name the registers; then you would need additional conditionals.\n-For example, some 68000 operating systems call this register `%a5'.\n-\n-   Eventually there may be a way of asking the compiler to choose a\n-register automatically, but first we need to figure out how it should\n-choose and how to enable you to guide the choice.  No solution is\n-evident.\n-\n-   Defining such a register variable does not reserve the register; it\n-remains available for other uses in places where flow control determines\n-the variable's value is not live.  However, these registers are made\n-unavailable for use in the reload pass.  I would not be surprised if\n-excessive use of this feature leaves the compiler too few available\n-registers to compile certain functions.\n-\n-\u001f\n-File: gcc.info,  Node: Alternate Keywords,  Next: Incomplete Enums,  Prev: Explicit Reg Vars,  Up: C Extensions\n-\n-Alternate Keywords\n-==================\n-\n-   The option `-traditional' disables certain keywords; `-ansi'\n-disables certain others.  This causes trouble when you want to use GNU C\n-extensions, or ANSI C features, in a general-purpose header file that\n-should be usable by all programs, including ANSI C programs and\n-traditional ones.  The keywords `asm', `typeof' and `inline' cannot be\n-used since they won't work in a program compiled with `-ansi', while\n-the keywords `const', `volatile', `signed', `typeof' and `inline' won't\n-work in a program compiled with `-traditional'.\n-\n-   The way to solve these problems is to put `__' at the beginning and\n-end of each problematical keyword.  For example, use `__asm__' instead\n-of `asm', `__const__' instead of `const', and `__inline__' instead of\n-`inline'.\n-\n-   Other C compilers won't accept these alternative keywords; if you\n-want to compile with another compiler, you can define the alternate\n-keywords as macros to replace them with the customary keywords.  It\n-looks like this:\n-\n-     #ifndef __GNUC__\n-     #define __asm__ asm\n-     #endif\n-\n-   `-pedantic' causes warnings for many GNU C extensions.  You can\n-prevent such warnings within one expression by writing `__extension__'\n-before the expression.  `__extension__' has no effect aside from this.\n-\n-\u001f\n-File: gcc.info,  Node: Incomplete Enums,  Next: Function Names,  Prev: Alternate Keywords,  Up: C Extensions\n-\n-Incomplete `enum' Types\n-=======================\n-\n-   You can define an `enum' tag without specifying its possible values.\n-This results in an incomplete type, much like what you get if you write\n-`struct foo' without describing the elements.  A later declaration\n-which does specify the possible values completes the type.\n-\n-   You can't allocate variables or storage using the type while it is\n-incomplete.  However, you can work with pointers to that type.\n-\n-   This extension may not be very useful, but it makes the handling of\n-`enum' more consistent with the way `struct' and `union' are handled.\n-\n-   This extension is not supported by GNU C++.\n-\n-\u001f\n-File: gcc.info,  Node: Function Names,  Next: Return Address,  Prev: Incomplete Enums,  Up: C Extensions\n-\n-Function Names as Strings\n-=========================\n-\n-   GNU CC predefines two string variables to be the name of the current\n-function.  The variable `__FUNCTION__' is the name of the function as\n-it appears in the source.  The variable `__PRETTY_FUNCTION__' is the\n-name of the function pretty printed in a language specific fashion.\n-\n-   These names are always the same in a C function, but in a C++\n-function they may be different.  For example, this program:\n-\n-     extern \"C\" {\n-     extern int printf (char *, ...);\n-     }\n-     \n-     class a {\n-      public:\n-       sub (int i)\n-         {\n-           printf (\"__FUNCTION__ = %s\\n\", __FUNCTION__);\n-           printf (\"__PRETTY_FUNCTION__ = %s\\n\", __PRETTY_FUNCTION__);\n-         }\n-     };\n-     \n-     int\n-     main (void)\n-     {\n-       a ax;\n-       ax.sub (0);\n-       return 0;\n-     }\n-\n-gives this output:\n-\n-     __FUNCTION__ = sub\n-     __PRETTY_FUNCTION__ = int  a::sub (int)\n-\n-   These names are not macros: they are predefined string variables.\n-For example, `#ifdef __FUNCTION__' does not have any special meaning\n-inside a function, since the preprocessor does not do anything special\n-with the identifier `__FUNCTION__'.\n-\n-\u001f\n-File: gcc.info,  Node: Return Address,  Prev: Function Names,  Up: C Extensions\n-\n-Getting the Return or Frame Address of a Function\n-=================================================\n-\n-   These functions may be used to get information about the callers of a\n-function.\n-\n-`__builtin_return_address (LEVEL)'\n-     This function returns the return address of the current function,\n-     or of one of its callers.  The LEVEL argument is number of frames\n-     to scan up the call stack.  A value of `0' yields the return\n-     address of the current function, a value of `1' yields the return\n-     address of the caller of the current function, and so forth.\n-\n-     The LEVEL argument must be a constant integer.\n-\n-     On some machines it may be impossible to determine the return\n-     address of any function other than the current one; in such cases,\n-     or when the top of the stack has been reached, this function will\n-     return `0'.\n-\n-     This function should only be used with a non-zero argument for\n-     debugging purposes.\n-\n-`__builtin_frame_address (LEVEL)'\n-     This function is similar to `__builtin_return_address', but it\n-     returns the address of the function frame rather than the return\n-     address of the function.  Calling `__builtin_frame_address' with a\n-     value of `0' yields the frame address of the current function, a\n-     value of `1' yields the frame address of the caller of the current\n-     function, and so forth.\n-\n-     The frame is the area on the stack which holds local variables and\n-     saved registers.  The frame address is normally the address of the\n-     first word pushed on to the stack by the function.  However, the\n-     exact definition depends upon the processor and the calling\n-     convention.  If the processor has a dedicated frame pointer\n-     register, and the function has a frame, then\n-     `__builtin_frame_address' will return the value of the frame\n-     pointer register.\n-\n-     The caveats that apply to `__builtin_return_address' apply to this\n-     function as well.\n-\n-\u001f\n-File: gcc.info,  Node: C++ Extensions,  Next: Gcov,  Prev: C Extensions,  Up: Top\n-\n-Extensions to the C++ Language\n-******************************\n-\n-   The GNU compiler provides these extensions to the C++ language (and\n-you can also use most of the C language extensions in your C++\n-programs).  If you want to write code that checks whether these\n-features are available, you can test for the GNU compiler the same way\n-as for C programs: check for a predefined macro `__GNUC__'.  You can\n-also use `__GNUG__' to test specifically for GNU C++ (*note Standard\n-Predefined Macros: (cpp.info)Standard Predefined.).\n-\n-* Menu:\n-\n-* Naming Results::      Giving a name to C++ function return values.\n-* Min and Max::\t\tC++ Minimum and maximum operators.\n-* Destructors and Goto:: Goto is safe to use in C++ even when destructors\n-                           are needed.\n-* C++ Interface::       You can use a single C++ header file for both\n-                         declarations and definitions.\n-* Template Instantiation:: Methods for ensuring that exactly one copy of\n-                         each needed template instantiation is emitted.\n-* C++ Signatures::\tYou can specify abstract types to get subtype\n-\t\t\t polymorphism independent from inheritance.\n-\n-\u001f\n-File: gcc.info,  Node: Naming Results,  Next: Min and Max,  Up: C++ Extensions\n-\n-Named Return Values in C++\n-==========================\n-\n-   GNU C++ extends the function-definition syntax to allow you to\n-specify a name for the result of a function outside the body of the\n-definition, in C++ programs:\n-\n-     TYPE\n-     FUNCTIONNAME (ARGS) return RESULTNAME;\n-     {\n-       ...\n-       BODY\n-       ...\n-     }\n-\n-   You can use this feature to avoid an extra constructor call when a\n-function result has a class type.  For example, consider a function\n-`m', declared as `X v = m ();', whose result is of class `X':\n-\n-     X\n-     m ()\n-     {\n-       X b;\n-       b.a = 23;\n-       return b;\n-     }\n-\n-   Although `m' appears to have no arguments, in fact it has one\n-implicit argument: the address of the return value.  At invocation, the\n-address of enough space to hold `v' is sent in as the implicit argument.\n-Then `b' is constructed and its `a' field is set to the value 23.\n-Finally, a copy constructor (a constructor of the form `X(X&)') is\n-applied to `b', with the (implicit) return value location as the\n-target, so that `v' is now bound to the return value.\n-\n-   But this is wasteful.  The local `b' is declared just to hold\n-something that will be copied right out.  While a compiler that\n-combined an \"elision\" algorithm with interprocedural data flow analysis\n-could conceivably eliminate all of this, it is much more practical to\n-allow you to assist the compiler in generating efficient code by\n-manipulating the return value explicitly, thus avoiding the local\n-variable and copy constructor altogether.\n-\n-   Using the extended GNU C++ function-definition syntax, you can avoid\n-the temporary allocation and copying by naming `r' as your return value\n-at the outset, and assigning to its `a' field directly:\n-\n-     X\n-     m () return r;\n-     {\n-       r.a = 23;\n-     }\n-\n-The declaration of `r' is a standard, proper declaration, whose effects\n-are executed *before* any of the body of `m'.\n-\n-   Functions of this type impose no additional restrictions; in\n-particular, you can execute `return' statements, or return implicitly by\n-reaching the end of the function body (\"falling off the edge\").  Cases\n-like\n-\n-     X\n-     m () return r (23);\n-     {\n-       return;\n-     }\n-\n-(or even `X m () return r (23); { }') are unambiguous, since the return\n-value `r' has been initialized in either case.  The following code may\n-be hard to read, but also works predictably:\n-\n-     X\n-     m () return r;\n-     {\n-       X b;\n-       return b;\n-     }\n-\n-   The return value slot denoted by `r' is initialized at the outset,\n-but the statement `return b;' overrides this value.  The compiler deals\n-with this by destroying `r' (calling the destructor if there is one, or\n-doing nothing if there is not), and then reinitializing `r' with `b'.\n-\n-   This extension is provided primarily to help people who use\n-overloaded operators, where there is a great need to control not just\n-the arguments, but the return values of functions.  For classes where\n-the copy constructor incurs a heavy performance penalty (especially in\n-the common case where there is a quick default constructor), this is a\n-major savings.  The disadvantage of this extension is that you do not\n-control when the default constructor for the return value is called: it\n-is always called at the beginning.\n-\n-\u001f\n-File: gcc.info,  Node: Min and Max,  Next: Destructors and Goto,  Prev: Naming Results,  Up: C++ Extensions\n-\n-Minimum and Maximum Operators in C++\n-====================================\n-\n-   It is very convenient to have operators which return the \"minimum\"\n-or the \"maximum\" of two arguments.  In GNU C++ (but not in GNU C),\n-\n-`A <? B'\n-     is the \"minimum\", returning the smaller of the numeric values A\n-     and B;\n-\n-`A >? B'\n-     is the \"maximum\", returning the larger of the numeric values A and\n-     B.\n-\n-   These operations are not primitive in ordinary C++, since you can\n-use a macro to return the minimum of two things in C++, as in the\n-following example.\n-\n-     #define MIN(X,Y) ((X) < (Y) ? : (X) : (Y))\n-\n-You might then use `int min = MIN (i, j);' to set MIN to the minimum\n-value of variables I and J.\n-\n-   However, side effects in `X' or `Y' may cause unintended behavior.\n-For example, `MIN (i++, j++)' will fail, incrementing the smaller\n-counter twice.  A GNU C extension allows you to write safe macros that\n-avoid this kind of problem (*note Naming an Expression's Type: Naming\n-Types.).  However, writing `MIN' and `MAX' as macros also forces you to\n-use function-call notation for a fundamental arithmetic operation.\n-Using GNU C++ extensions, you can write `int min = i <? j;' instead.\n-\n-   Since `<?' and `>?' are built into the compiler, they properly\n-handle expressions with side-effects;  `int min = i++ <? j++;' works\n-correctly.\n-\n-\u001f\n-File: gcc.info,  Node: Destructors and Goto,  Next: C++ Interface,  Prev: Min and Max,  Up: C++ Extensions\n-\n-`goto' and Destructors in GNU C++\n-=================================\n-\n-   In C++ programs, you can safely use the `goto' statement.  When you\n-use it to exit a block which contains aggregates requiring destructors,\n-the destructors will run before the `goto' transfers control.\n-\n-   The compiler still forbids using `goto' to *enter* a scope that\n-requires constructors.\n-\n-\u001f\n-File: gcc.info,  Node: C++ Interface,  Next: Template Instantiation,  Prev: Destructors and Goto,  Up: C++ Extensions\n-\n-Declarations and Definitions in One Header\n-==========================================\n-\n-   C++ object definitions can be quite complex.  In principle, your\n-source code will need two kinds of things for each object that you use\n-across more than one source file.  First, you need an \"interface\"\n-specification, describing its structure with type declarations and\n-function prototypes.  Second, you need the \"implementation\" itself.  It\n-can be tedious to maintain a separate interface description in a header\n-file, in parallel to the actual implementation.  It is also dangerous,\n-since separate interface and implementation definitions may not remain\n-parallel.\n-\n-   With GNU C++, you can use a single header file for both purposes.\n-\n-     *Warning:* The mechanism to specify this is in transition.  For the\n-     nonce, you must use one of two `#pragma' commands; in a future\n-     release of GNU C++, an alternative mechanism will make these\n-     `#pragma' commands unnecessary.\n-\n-   The header file contains the full definitions, but is marked with\n-`#pragma interface' in the source code.  This allows the compiler to\n-use the header file only as an interface specification when ordinary\n-source files incorporate it with `#include'.  In the single source file\n-where the full implementation belongs, you can use either a naming\n-convention or `#pragma implementation' to indicate this alternate use\n-of the header file.\n-\n-`#pragma interface'\n-`#pragma interface \"SUBDIR/OBJECTS.h\"'\n-     Use this directive in *header files* that define object classes,\n-     to save space in most of the object files that use those classes.\n-     Normally, local copies of certain information (backup copies of\n-     inline member functions, debugging information, and the internal\n-     tables that implement virtual functions) must be kept in each\n-     object file that includes class definitions.  You can use this\n-     pragma to avoid such duplication.  When a header file containing\n-     `#pragma interface' is included in a compilation, this auxiliary\n-     information will not be generated (unless the main input source\n-     file itself uses `#pragma implementation').  Instead, the object\n-     files will contain references to be resolved at link time.\n-\n-     The second form of this directive is useful for the case where you\n-     have multiple headers with the same name in different directories.\n-     If you use this form, you must specify the same string to `#pragma\n-     implementation'.\n-\n-`#pragma implementation'\n-`#pragma implementation \"OBJECTS.h\"'\n-     Use this pragma in a *main input file*, when you want full output\n-     from included header files to be generated (and made globally\n-     visible).  The included header file, in turn, should use `#pragma\n-     interface'.  Backup copies of inline member functions, debugging\n-     information, and the internal tables used to implement virtual\n-     functions are all generated in implementation files.\n-\n-     If you use `#pragma implementation' with no argument, it applies to\n-     an include file with the same basename(1) as your source file.\n-     For example, in `allclass.cc', giving just `#pragma implementation'\n-     by itself is equivalent to `#pragma implementation \"allclass.h\"'.\n-\n-     In versions of GNU C++ prior to 2.6.0 `allclass.h' was treated as\n-     an implementation file whenever you would include it from\n-     `allclass.cc' even if you never specified `#pragma\n-     implementation'.  This was deemed to be more trouble than it was\n-     worth, however, and disabled.\n-\n-     If you use an explicit `#pragma implementation', it must appear in\n-     your source file *before* you include the affected header files.\n-\n-     Use the string argument if you want a single implementation file to\n-     include code from multiple header files.  (You must also use\n-     `#include' to include the header file; `#pragma implementation'\n-     only specifies how to use the file--it doesn't actually include\n-     it.)\n-\n-     There is no way to split up the contents of a single header file\n-     into multiple implementation files.\n-\n-   `#pragma implementation' and `#pragma interface' also have an effect\n-on function inlining.\n-\n-   If you define a class in a header file marked with `#pragma\n-interface', the effect on a function defined in that class is similar to\n-an explicit `extern' declaration--the compiler emits no code at all to\n-define an independent version of the function.  Its definition is used\n-only for inlining with its callers.\n-\n-   Conversely, when you include the same header file in a main source\n-file that declares it as `#pragma implementation', the compiler emits\n-code for the function itself; this defines a version of the function\n-that can be found via pointers (or by callers compiled without\n-inlining).  If all calls to the function can be inlined, you can avoid\n-emitting the function by compiling with `-fno-implement-inlines'.  If\n-any calls were not inlined, you will get linker errors.\n-\n-   ---------- Footnotes ----------\n-\n-   (1) A file's \"basename\" was the name stripped of all leading path\n-information and of trailing suffixes, such as `.h' or `.C' or `.cc'.\n-\n-\u001f\n-File: gcc.info,  Node: Template Instantiation,  Next: C++ Signatures,  Prev: C++ Interface,  Up: C++ Extensions\n-\n-Where's the Template?\n-=====================\n-\n-   C++ templates are the first language feature to require more\n-intelligence from the environment than one usually finds on a UNIX\n-system.  Somehow the compiler and linker have to make sure that each\n-template instance occurs exactly once in the executable if it is needed,\n-and not at all otherwise.  There are two basic approaches to this\n-problem, which I will refer to as the Borland model and the Cfront\n-model.\n-\n-Borland model\n-     Borland C++ solved the template instantiation problem by adding\n-     the code equivalent of common blocks to their linker; the compiler\n-     emits template instances in each translation unit that uses them,\n-     and the linker collapses them together.  The advantage of this\n-     model is that the linker only has to consider the object files\n-     themselves; there is no external complexity to worry about.  This\n-     disadvantage is that compilation time is increased because the\n-     template code is being compiled repeatedly.  Code written for this\n-     model tends to include definitions of all templates in the header\n-     file, since they must be seen to be instantiated.\n-\n-Cfront model\n-     The AT&T C++ translator, Cfront, solved the template instantiation\n-     problem by creating the notion of a template repository, an\n-     automatically maintained place where template instances are\n-     stored.  A more modern version of the repository works as follows:\n-     As individual object files are built, the compiler places any\n-     template definitions and instantiations encountered in the\n-     repository.  At link time, the link wrapper adds in the objects in\n-     the repository and compiles any needed instances that were not\n-     previously emitted.  The advantages of this model are more optimal\n-     compilation speed and the ability to use the system linker; to\n-     implement the Borland model a compiler vendor also needs to\n-     replace the linker.  The disadvantages are vastly increased\n-     complexity, and thus potential for error; for some code this can be\n-     just as transparent, but in practice it can been very difficult to\n-     build multiple programs in one directory and one program in\n-     multiple directories.  Code written for this model tends to\n-     separate definitions of non-inline member templates into a\n-     separate file, which should be compiled separately.\n-\n-   When used with GNU ld version 2.8 or later on an ELF system such as\n-Linux/GNU or Solaris 2, or on Microsoft Windows, g++ supports the\n-Borland model.  On other systems, g++ implements neither automatic\n-model.\n-\n-   A future version of g++ will support a hybrid model whereby the\n-compiler will emit any instantiations for which the template definition\n-is included in the compile, and store template definitions and\n-instantiation context information into the object file for the rest.\n-The link wrapper will extract that information as necessary and invoke\n-the compiler to produce the remaining instantiations.  The linker will\n-then combine duplicate instantiations.\n-\n-   In the mean time, you have the following options for dealing with\n-template instantiations:\n-\n-  1. Compile your code with `-fno-implicit-templates' to disable the\n-     implicit generation of template instances, and explicitly\n-     instantiate all the ones you use.  This approach requires more\n-     knowledge of exactly which instances you need than do the others,\n-     but it's less mysterious and allows greater control.  You can\n-     scatter the explicit instantiations throughout your program,\n-     perhaps putting them in the translation units where the instances\n-     are used or the translation units that define the templates\n-     themselves; you can put all of the explicit instantiations you\n-     need into one big file; or you can create small files like\n-\n-          #include \"Foo.h\"\n-          #include \"Foo.cc\"\n-          \n-          template class Foo<int>;\n-          template ostream& operator <<\n-                          (ostream&, const Foo<int>&);\n-\n-     for each of the instances you need, and create a template\n-     instantiation library from those.\n-\n-     If you are using Cfront-model code, you can probably get away with\n-     not using `-fno-implicit-templates' when compiling files that don't\n-     `#include' the member template definitions.\n-\n-     If you use one big file to do the instantiations, you may want to\n-     compile it without `-fno-implicit-templates' so you get all of the\n-     instances required by your explicit instantiations (but not by any\n-     other files) without having to specify them as well.\n-\n-     g++ has extended the template instantiation syntax outlined in the\n-     Working Paper to allow forward declaration of explicit\n-     instantiations, explicit instantiation of members of template\n-     classes and instantiation of the compiler support data for a\n-     template class (i.e. the vtable) without instantiating any of its\n-     members:\n-\n-          extern template int max (int, int);\n-          template void Foo<int>::f ();\n-          inline template class Foo<int>;\n-\n-  2. Do nothing.  Pretend g++ does implement automatic instantiation\n-     management.  Code written for the Borland model will work fine, but\n-     each translation unit will contain instances of each of the\n-     templates it uses.  In a large program, this can lead to an\n-     unacceptable amount of code duplication.\n-\n-  3. Add `#pragma interface' to all files containing template\n-     definitions.  For each of these files, add `#pragma implementation\n-     \"FILENAME\"' to the top of some `.C' file which `#include's it.\n-     Then compile everything with `-fexternal-templates'.  The\n-     templates will then only be expanded in the translation unit which\n-     implements them (i.e. has a `#pragma implementation' line for the\n-     file where they live); all other files will use external\n-     references.  If you're lucky, everything should work properly.  If\n-     you get undefined symbol errors, you need to make sure that each\n-     template instance which is used in the program is used in the file\n-     which implements that template.  If you don't have any use for a\n-     particular instance in that file, you can just instantiate it\n-     explicitly, using the syntax from the latest C++ working paper:\n-\n-          template class A<int>;\n-          template ostream& operator << (ostream&, const A<int>&);\n-\n-     This strategy will work with code written for either model.  If\n-     you are using code written for the Cfront model, the file\n-     containing a class template and the file containing its member\n-     templates should be implemented in the same translation unit.\n-\n-     A slight variation on this approach is to instead use the flag\n-     `-falt-external-templates'; this flag causes template instances to\n-     be emitted in the translation unit that implements the header\n-     where they are first instantiated, rather than the one which\n-     implements the file where the templates are defined.  This header\n-     must be the same in all translation units, or things are likely to\n-     break.\n-\n-     *Note Declarations and Definitions in One Header: C++ Interface,\n-     for more discussion of these pragmas.\n-"}, {"sha": "a23d4dc5123325d3b4313a94b0ebf73fbdf98550", "filename": "gcc/gcc.info-11", "status": "removed", "additions": 0, "deletions": 1162, "changes": 1162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-11", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-11", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-11?ref=bb84e66919817020267815eed4304e543688e722", "patch": "@@ -1,1162 +0,0 @@\n-This is Info file gcc.info, produced by Makeinfo version 1.68 from the\n-input file gcc.texi.\n-\n-   This file documents the use and the internals of the GNU compiler.\n-\n-   Published by the Free Software Foundation 59 Temple Place - Suite 330\n-Boston, MA 02111-1307 USA\n-\n-   Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997 Free\n-Software Foundation, Inc.\n-\n-   Permission is granted to make and distribute verbatim copies of this\n-manual provided the copyright notice and this permission notice are\n-preserved on all copies.\n-\n-   Permission is granted to copy and distribute modified versions of\n-this manual under the conditions for verbatim copying, provided also\n-that the sections entitled \"GNU General Public License,\" \"Funding for\n-Free Software,\" and \"Protect Your Freedom--Fight `Look And Feel'\" are\n-included exactly as in the original, and provided that the entire\n-resulting derived work is distributed under the terms of a permission\n-notice identical to this one.\n-\n-   Permission is granted to copy and distribute translations of this\n-manual into another language, under the above conditions for modified\n-versions, except that the sections entitled \"GNU General Public\n-License,\" \"Funding for Free Software,\" and \"Protect Your Freedom--Fight\n-`Look And Feel'\", and this permission notice, may be included in\n-translations approved by the Free Software Foundation instead of in the\n-original English.\n-\n-\u001f\n-File: gcc.info,  Node: C++ Signatures,  Prev: Template Instantiation,  Up: C++ Extensions\n-\n-Type Abstraction using Signatures\n-=================================\n-\n-   In GNU C++, you can use the keyword `signature' to define a\n-completely abstract class interface as a datatype.  You can connect this\n-abstraction with actual classes using signature pointers.  If you want\n-to use signatures, run the GNU compiler with the `-fhandle-signatures'\n-command-line option.  (With this option, the compiler reserves a second\n-keyword `sigof' as well, for a future extension.)\n-\n-   Roughly, signatures are type abstractions or interfaces of classes.\n-Some other languages have similar facilities.  C++ signatures are\n-related to ML's signatures, Haskell's type classes, definition modules\n-in Modula-2, interface modules in Modula-3, abstract types in Emerald,\n-type modules in Trellis/Owl, categories in Scratchpad II, and types in\n-POOL-I.  For a more detailed discussion of signatures, see `Signatures:\n-A Language Extension for Improving Type Abstraction and Subtype\n-Polymorphism in C++' by Gerald Baumgartner and Vincent F. Russo (Tech\n-report CSD-TR-95-051, Dept. of Computer Sciences, Purdue University,\n-August 1995, a slightly improved version appeared in\n-*Software--Practice & Experience*, 25(8), pp. 863-889, August 1995).\n-You can get the tech report by anonymous FTP from `ftp.cs.purdue.edu'\n-in `pub/gb/Signature-design.ps.gz'.\n-\n-   Syntactically, a signature declaration is a collection of member\n-function declarations and nested type declarations.  For example, this\n-signature declaration defines a new abstract type `S' with member\n-functions `int foo ()' and `int bar (int)':\n-\n-     signature S\n-     {\n-       int foo ();\n-       int bar (int);\n-     };\n-\n-   Since signature types do not include implementation definitions, you\n-cannot write an instance of a signature directly.  Instead, you can\n-define a pointer to any class that contains the required interfaces as a\n-\"signature pointer\".  Such a class \"implements\" the signature type.\n-\n-   To use a class as an implementation of `S', you must ensure that the\n-class has public member functions `int foo ()' and `int bar (int)'.\n-The class can have other member functions as well, public or not; as\n-long as it offers what's declared in the signature, it is suitable as\n-an implementation of that signature type.\n-\n-   For example, suppose that `C' is a class that meets the requirements\n-of signature `S' (`C' \"conforms to\" `S').  Then\n-\n-     C obj;\n-     S * p = &obj;\n-\n-defines a signature pointer `p' and initializes it to point to an\n-object of type `C'.  The member function call `int i = p->foo ();'\n-executes `obj.foo ()'.\n-\n-   Abstract virtual classes provide somewhat similar facilities in\n-standard C++.  There are two main advantages to using signatures\n-instead:\n-\n-  1. Subtyping becomes independent from inheritance.  A class or\n-     signature type `T' is a subtype of a signature type `S'\n-     independent of any inheritance hierarchy as long as all the member\n-     functions declared in `S' are also found in `T'.  So you can\n-     define a subtype hierarchy that is completely independent from any\n-     inheritance (implementation) hierarchy, instead of being forced to\n-     use types that mirror the class inheritance hierarchy.\n-\n-  2. Signatures allow you to work with existing class hierarchies as\n-     implementations of a signature type.  If those class hierarchies\n-     are only available in compiled form, you're out of luck with\n-     abstract virtual classes, since an abstract virtual class cannot\n-     be retrofitted on top of existing class hierarchies.  So you would\n-     be required to write interface classes as subtypes of the abstract\n-     virtual class.\n-\n-   There is one more detail about signatures.  A signature declaration\n-can contain member function *definitions* as well as member function\n-declarations.  A signature member function with a full definition is\n-called a *default implementation*; classes need not contain that\n-particular interface in order to conform.  For example, a class `C' can\n-conform to the signature\n-\n-     signature T\n-     {\n-       int f (int);\n-       int f0 () { return f (0); };\n-     };\n-\n-whether or not `C' implements the member function `int f0 ()'.  If you\n-define `C::f0', that definition takes precedence; otherwise, the\n-default implementation `S::f0' applies.\n-\n-\u001f\n-File: gcc.info,  Node: Gcov,  Next: Trouble,  Prev: C++ Extensions,  Up: Top\n-\n-`gcov': a Test Coverage Program\n-*******************************\n-\n-   `gcov' is a tool you can use in conjunction with GNU CC to test code\n-coverage in your programs.\n-\n-   This chapter describes version 1.5 of `gcov'.\n-\n-* Menu:\n-\n-* Gcov Intro::         \t        Introduction to gcov.\n-* Invoking Gcov::       \tHow to use gcov.\n-* Gcov and Optimization::       Using gcov with GCC optimization.\n-* Gcov Data Files::             The files used by gcov.\n-\n-\u001f\n-File: gcc.info,  Node: Gcov Intro,  Next: Invoking Gcov,  Up: Gcov\n-\n-Introduction to `gcov'\n-======================\n-\n-   `gcov' is a test coverage program.  Use it in concert with GNU CC to\n-analyze your programs to help create more efficient, faster running\n-code.  You can use `gcov' as a profiling tool to help discover where\n-your optimization efforts will best affect your code.  You can also use\n-`gcov' along with the other profiling tool, `gprof', to assess which\n-parts of your code use the greatest amount of computing time.\n-\n-   Profiling tools help you analyze your code's performance.  Using a\n-profiler such as `gcov' or `gprof', you can find out some basic\n-performance statistics, such as:\n-\n-   * how often each line of code executes\n-\n-   * what lines of code are actually executed\n-\n-   * how much computing time each section of code uses\n-\n-   Once you know these things about how your code works when compiled,\n-you can look at each module to see which modules should be optimized.\n-`gcov' helps you determine where to work on optimization.\n-\n-   Software developers also use coverage testing in concert with\n-testsuites, to make sure software is actually good enough for a release.\n-Testsuites can verify that a program works as expected; a coverage\n-program tests to see how much of the program is exercised by the\n-testsuite.  Developers can then determine what kinds of test cases need\n-to be added to the testsuites to create both better testing and a better\n-final product.\n-\n-   You should compile your code without optimization if you plan to use\n-`gcov' because the optimization, by combining some lines of code into\n-one function, may not give you as much information as you need to look\n-for `hot spots' where the code is using a great deal of computer time.\n-Likewise, because `gcov' accumulates statistics by line (at the lowest\n-resolution), it works best with a programming style that places only\n-one statement on each line.  If you use complicated macros that expand\n-to loops or to other control structures, the statistics are less\n-helpful--they only report on the line where the macro call appears.  If\n-your complex macros behave like functions, you can replace them with\n-inline functions to solve this problem.\n-\n-   `gcov' creates a logfile called `SOURCEFILE.gcov' which indicates\n-how many times each line of a source file `SOURCEFILE.c' has executed.\n-You can use these logfiles along with `gprof' to aid in fine-tuning the\n-performance of your programs.  `gprof' gives timing information you can\n-use along with the information you get from `gcov'.\n-\n-   `gcov' works only on code compiled with GNU CC.  It is not\n-compatible with any other profiling or test coverage mechanism.\n-\n-\u001f\n-File: gcc.info,  Node: Invoking Gcov,  Next: Gcov and Optimization,  Prev: Gcov Intro,  Up: Gcov\n-\n-Invoking gcov\n-=============\n-\n-     gcov [-b] [-v] [-n] [-l] [-f] [-o directory] SOURCEFILE\n-\n-`-b'\n-     Write branch frequencies to the output file, and write branch\n-     summary info to the standard output.  This option allows you to\n-     see how often each branch in your program was taken.\n-\n-`-v'\n-     Display the `gcov' version number (on the standard error stream).\n-\n-`-n'\n-     Do not create the `gcov' output file.\n-\n-`-l'\n-     Create long file names for included source files.  For example, if\n-     the header file `x.h' contains code, and was included in the file\n-     `a.c', then running `gcov' on the file `a.c' will produce an\n-     output file called `a.c.x.h.gcov' instead of `x.h.gcov'.  This can\n-     be useful if `x.h' is included in multiple source files.\n-\n-`-f'\n-     Output summaries for each function in addition to the file level\n-     summary.\n-\n-`-o'\n-     The directory where the object files live.  Gcov will search for\n-     `.bb', `.bbg', and `.da' files in this directory.\n-\n-   When using `gcov', you must first compile your program with two\n-special GNU CC options: `-fprofile-arcs -ftest-coverage'.  This tells\n-the compiler to generate additional information needed by gcov\n-(basically a flow graph of the program) and also includes additional\n-code in the object files for generating the extra profiling information\n-needed by gcov.  These additional files are placed in the directory\n-where the source code is located.\n-\n-   Running the program will cause profile output to be generated.  For\n-each source file compiled with -fprofile-arcs, an accompanying `.da'\n-file will be placed in the source directory.\n-\n-   Running `gcov' with your program's source file names as arguments\n-will now produce a listing of the code along with frequency of execution\n-for each line.  For example, if your program is called `tmp.c', this is\n-what you see when you use the basic `gcov' facility:\n-\n-     $ gcc -fprofile-arcs -ftest-coverage tmp.c\n-     $ a.out\n-     $ gcov tmp.c\n-      87.50% of 8 source lines executed in file tmp.c\n-     Creating tmp.c.gcov.\n-\n-   The file `tmp.c.gcov' contains output from `gcov'.  Here is a sample:\n-\n-                     main()\n-                     {\n-                1      int i, total;\n-     \n-                1      total = 0;\n-     \n-               11      for (i = 0; i < 10; i++)\n-               10        total += i;\n-     \n-                1      if (total != 45)\n-           ######        printf (\"Failure\\n\");\n-                       else\n-                1        printf (\"Success\\n\");\n-                1    }\n-\n-   When you use the `-b' option, your output looks like this:\n-\n-     $ gcov -b tmp.c\n-      87.50% of 8 source lines executed in file tmp.c\n-      80.00% of 5 branches executed in file tmp.c\n-      80.00% of 5 branches taken at least once in file tmp.c\n-      50.00% of 2 calls executed in file tmp.c\n-     Creating tmp.c.gcov.\n-\n-   Here is a sample of a resulting `tmp.c.gcov' file:\n-\n-                     main()\n-                     {\n-                1      int i, total;\n-     \n-                1      total = 0;\n-     \n-               11      for (i = 0; i < 10; i++)\n-     branch 0 taken = 91%\n-     branch 1 taken = 100%\n-     branch 2 taken = 100%\n-               10        total += i;\n-     \n-                1      if (total != 45)\n-     branch 0 taken = 100%\n-           ######        printf (\"Failure\\n\");\n-     call 0 never executed\n-     branch 1 never executed\n-                       else\n-                1        printf (\"Success\\n\");\n-     call 0 returns = 100%\n-                1    }\n-\n-   For each basic block, a line is printed after the last line of the\n-basic block describing the branch or call that ends the basic block.\n-There can be multiple branches and calls listed for a single source\n-line if there are multiple basic blocks that end on that line.  In this\n-case, the branches and calls are each given a number.  There is no\n-simple way to map these branches and calls back to source constructs.\n-In general, though, the lowest numbered branch or call will correspond\n-to the leftmost construct on the source line.\n-\n-   For a branch, if it was executed at least once, then a percentage\n-indicating the number of times the branch was taken divided by the\n-number of times the branch was executed will be printed.  Otherwise, the\n-message \"never executed\" is printed.\n-\n-   For a call, if it was executed at least once, then a percentage\n-indicating the number of times the call returned divided by the number\n-of times the call was executed will be printed.  This will usually be\n-100%, but may be less for functions call `exit' or `longjmp', and thus\n-may not return everytime they are called.\n-\n-   The execution counts are cumulative.  If the example program were\n-executed again without removing the `.da' file, the count for the\n-number of times each line in the source was executed would be added to\n-the results of the previous run(s).  This is potentially useful in\n-several ways.  For example, it could be used to accumulate data over a\n-number of program runs as part of a test verification suite, or to\n-provide more accurate long-term information over a large number of\n-program runs.\n-\n-   The data in the `.da' files is saved immediately before the program\n-exits.  For each source file compiled with -fprofile-arcs, the profiling\n-code first attempts to read in an existing `.da' file; if the file\n-doesn't match the executable (differing number of basic block counts) it\n-will ignore the contents of the file.  It then adds in the new execution\n-counts and finally writes the data to the file.\n-\n-\u001f\n-File: gcc.info,  Node: Gcov and Optimization,  Next: Gcov Data Files,  Prev: Invoking Gcov,  Up: Gcov\n-\n-Using `gcov' with GCC Optimization\n-==================================\n-\n-   If you plan to use `gcov' to help optimize your code, you must first\n-compile your program with two special GNU CC options: `-fprofile-arcs\n--ftest-coverage'.  Aside from that, you can use any other GNU CC\n-options; but if you want to prove that every single line in your\n-program was executed, you should not compile with optimization at the\n-same time.  On some machines the optimizer can eliminate some simple\n-code lines by combining them with other lines.  For example, code like\n-this:\n-\n-     if (a != b)\n-       c = 1;\n-     else\n-       c = 0;\n-\n-can be compiled into one instruction on some machines.  In this case,\n-there is no way for `gcov' to calculate separate execution counts for\n-each line because there isn't separate code for each line.  Hence the\n-`gcov' output looks like this if you compiled the program with\n-optimization:\n-\n-           100  if (a != b)\n-           100    c = 1;\n-           100  else\n-           100    c = 0;\n-\n-   The output shows that this block of code, combined by optimization,\n-executed 100 times.  In one sense this result is correct, because there\n-was only one instruction representing all four of these lines.  However,\n-the output does not indicate how many times the result was 0 and how\n-many times the result was 1.\n-\n-\u001f\n-File: gcc.info,  Node: Gcov Data Files,  Prev: Gcov and Optimization,  Up: Gcov\n-\n-Brief description of `gcov' data files\n-======================================\n-\n-   `gcov' uses three files for doing profiling.  The names of these\n-files are derived from the original *source* file by substituting the\n-file suffix with either `.bb', `.bbg', or `.da'.  All of these files\n-are placed in the same directory as the source file, and contain data\n-stored in a platform-independent method.\n-\n-   The `.bb' and `.bbg' files are generated when the source file is\n-compiled with the GNU CC `-ftest-coverage' option.  The `.bb' file\n-contains a list of source files (including headers), functions within\n-those files, and line numbers corresponding to each basic block in the\n-source file.\n-\n-   The `.bb' file format consists of several lists of 4-byte integers\n-which correspond to the line numbers of each basic block in the file.\n-Each list is terminated by a line number of 0.  A line number of -1 is\n-used to designate that the source file name (padded to a 4-byte\n-boundary and followed by another -1) follows.  In addition, a line\n-number of -2 is used to designate that the name of a function (also\n-padded to a 4-byte boundary and followed by a -2) follows.\n-\n-   The `.bbg' file is used to reconstruct the program flow graph for\n-the source file.  It contains a list of the program flow arcs (possible\n-branches taken from one basic block to another) for each function which,\n-in combination with the `.bb' file, enables gcov to reconstruct the\n-program flow.\n-\n-   In the `.bbg' file, the format is:\n-             number of basic blocks for function #0 (4-byte number)\n-             total number of arcs for function #0 (4-byte number)\n-             count of arcs in basic block #0 (4-byte number)\n-             destination basic block of arc #0 (4-byte number)\n-             flag bits (4-byte number)\n-             destination basic block of arc #1 (4-byte number)\n-             flag bits (4-byte number)\n-             ...\n-             destination basic block of arc #N (4-byte number)\n-             flag bits (4-byte number)\n-             count of arcs in basic block #1 (4-byte number)\n-             destination basic block of arc #0 (4-byte number)\n-             flag bits (4-byte number)\n-             ...\n-\n-   A -1 (stored as a 4-byte number) is used to separate each function's\n-list of basic blocks, and to verify that the file has been read\n-correctly.\n-\n-   The `.da' file is generated when a program containing object files\n-built with the GNU CC `-fprofile-arcs' option is executed.  A separate\n-`.da' file is created for each source file compiled with this option,\n-and the name of the `.da' file is stored as an absolute pathname in the\n-resulting object file.  This path name is derived from the source file\n-name by substituting a `.da' suffix.\n-\n-   The format of the `.da' file is fairly simple.  The first 8-byte\n-number is the number of counts in the file, followed by the counts\n-(stored as 8-byte numbers).  Each count corresponds to the number of\n-times each arc in the program is executed.  The counts are cumulative;\n-each time the program is executed, it attemps to combine the existing\n-`.da' files with the new counts for this invocation of the program.  It\n-ignores the contents of any `.da' files whose number of arcs doesn't\n-correspond to the current program, and merely overwrites them instead.\n-\n-   All three of these files use the functions in `gcov-io.h' to store\n-integers; the functions in this header provide a machine-independent\n-mechanism for storing and retrieving data from a stream.\n-\n-\u001f\n-File: gcc.info,  Node: Trouble,  Next: Bugs,  Prev: Gcov,  Up: Top\n-\n-Known Causes of Trouble with GNU CC\n-***********************************\n-\n-   This section describes known problems that affect users of GNU CC.\n-Most of these are not GNU CC bugs per se--if they were, we would fix\n-them.  But the result for a user may be like the result of a bug.\n-\n-   Some of these problems are due to bugs in other software, some are\n-missing features that are too much work to add, and some are places\n-where people's opinions differ as to what is best.\n-\n-* Menu:\n-\n-* Actual Bugs::\t\t      Bugs we will fix later.\n-* Installation Problems::     Problems that manifest when you install GNU CC.\n-* Cross-Compiler Problems::   Common problems of cross compiling with GNU CC.\n-* Interoperation::      Problems using GNU CC with other compilers,\n-\t\t\t   and with certain linkers, assemblers and debuggers.\n-* External Bugs::\tProblems compiling certain programs.\n-* Incompatibilities::   GNU CC is incompatible with traditional C.\n-* Fixed Headers::       GNU C uses corrected versions of system header files.\n-                           This is necessary, but doesn't always work smoothly.\n-* Standard Libraries::  GNU C uses the system C library, which might not be\n-                           compliant with the ISO/ANSI C standard.\n-* Disappointments::     Regrettable things we can't change, but not quite bugs.\n-* C++ Misunderstandings::     Common misunderstandings with GNU C++.\n-* Protoize Caveats::    Things to watch out for when using `protoize'.\n-* Non-bugs::\t\tThings we think are right, but some others disagree.\n-* Warnings and Errors:: Which problems in your code get warnings,\n-                         and which get errors.\n-\n-\u001f\n-File: gcc.info,  Node: Actual Bugs,  Next: Installation Problems,  Up: Trouble\n-\n-Actual Bugs We Haven't Fixed Yet\n-================================\n-\n-   * The `fixincludes' script interacts badly with automounters; if the\n-     directory of system header files is automounted, it tends to be\n-     unmounted while `fixincludes' is running.  This would seem to be a\n-     bug in the automounter.  We don't know any good way to work around\n-     it.\n-\n-   * The `fixproto' script will sometimes add prototypes for the\n-     `sigsetjmp' and `siglongjmp' functions that reference the\n-     `jmp_buf' type before that type is defined.  To work around this,\n-     edit the offending file and place the typedef in front of the\n-     prototypes.\n-\n-   * There are several obscure case of mis-using struct, union, and\n-     enum tags that are not detected as errors by the compiler.\n-\n-   * When `-pedantic-errors' is specified, GNU C will incorrectly give\n-     an error message when a function name is specified in an expression\n-     involving the comma operator.\n-\n-   * Loop unrolling doesn't work properly for certain C++ programs.\n-     This is a bug in the C++ front end.  It sometimes emits incorrect\n-     debug info, and the loop unrolling code is unable to recover from\n-     this error.\n-\n-\u001f\n-File: gcc.info,  Node: Installation Problems,  Next: Cross-Compiler Problems,  Prev: Actual Bugs,  Up: Trouble\n-\n-Installation Problems\n-=====================\n-\n-   This is a list of problems (and some apparent problems which don't\n-really mean anything is wrong) that show up during installation of GNU\n-CC.\n-\n-   * On certain systems, defining certain environment variables such as\n-     `CC' can interfere with the functioning of `make'.\n-\n-   * If you encounter seemingly strange errors when trying to build the\n-     compiler in a directory other than the source directory, it could\n-     be because you have previously configured the compiler in the\n-     source directory.  Make sure you have done all the necessary\n-     preparations.  *Note Other Dir::.\n-\n-   * If you build GNU CC on a BSD system using a directory stored in a\n-     System V file system, problems may occur in running `fixincludes'\n-     if the System V file system doesn't support symbolic links.  These\n-     problems result in a failure to fix the declaration of `size_t' in\n-     `sys/types.h'.  If you find that `size_t' is a signed type and\n-     that type mismatches occur, this could be the cause.\n-\n-     The solution is not to use such a directory for building GNU CC.\n-\n-   * In previous versions of GNU CC, the `gcc' driver program looked for\n-     `as' and `ld' in various places; for example, in files beginning\n-     with `/usr/local/lib/gcc-'.  GNU CC version 2 looks for them in\n-     the directory `/usr/local/lib/gcc-lib/TARGET/VERSION'.\n-\n-     Thus, to use a version of `as' or `ld' that is not the system\n-     default, for example `gas' or GNU `ld', you must put them in that\n-     directory (or make links to them from that directory).\n-\n-   * Some commands executed when making the compiler may fail (return a\n-     non-zero status) and be ignored by `make'.  These failures, which\n-     are often due to files that were not found, are expected, and can\n-     safely be ignored.\n-\n-   * It is normal to have warnings in compiling certain files about\n-     unreachable code and about enumeration type clashes.  These files'\n-     names begin with `insn-'.  Also, `real.c' may get some warnings\n-     that you can ignore.\n-\n-   * Sometimes `make' recompiles parts of the compiler when installing\n-     the compiler.  In one case, this was traced down to a bug in\n-     `make'.  Either ignore the problem or switch to GNU Make.\n-\n-   * If you have installed a program known as purify, you may find that\n-     it causes errors while linking `enquire', which is part of building\n-     GNU CC.  The fix is to get rid of the file `real-ld' which purify\n-     installs--so that GNU CC won't try to use it.\n-\n-   * On Linux SLS 1.01, there is a problem with `libc.a': it does not\n-     contain the obstack functions.  However, GNU CC assumes that the\n-     obstack functions are in `libc.a' when it is the GNU C library.\n-     To work around this problem, change the `__GNU_LIBRARY__'\n-     conditional around line 31 to `#if 1'.\n-\n-   * On some 386 systems, building the compiler never finishes because\n-     `enquire' hangs due to a hardware problem in the motherboard--it\n-     reports floating point exceptions to the kernel incorrectly.  You\n-     can install GNU CC except for `float.h' by patching out the\n-     command to run `enquire'.  You may also be able to fix the problem\n-     for real by getting a replacement motherboard.  This problem was\n-     observed in Revision E of the Micronics motherboard, and is fixed\n-     in Revision F.  It has also been observed in the MYLEX MXA-33\n-     motherboard.\n-\n-     If you encounter this problem, you may also want to consider\n-     removing the FPU from the socket during the compilation.\n-     Alternatively, if you are running SCO Unix, you can reboot and\n-     force the FPU to be ignored.  To do this, type `hd(40)unix auto\n-     ignorefpu'.\n-\n-   * On some 386 systems, GNU CC crashes trying to compile `enquire.c'.\n-     This happens on machines that don't have a 387 FPU chip.  On 386\n-     machines, the system kernel is supposed to emulate the 387 when you\n-     don't have one.  The crash is due to a bug in the emulator.\n-\n-     One of these systems is the Unix from Interactive Systems: 386/ix.\n-     On this system, an alternate emulator is provided, and it does\n-     work.  To use it, execute this command as super-user:\n-\n-          ln /etc/emulator.rel1 /etc/emulator\n-\n-     and then reboot the system.  (The default emulator file remains\n-     present under the name `emulator.dflt'.)\n-\n-     Try using `/etc/emulator.att', if you have such a problem on the\n-     SCO system.\n-\n-     Another system which has this problem is Esix.  We don't know\n-     whether it has an alternate emulator that works.\n-\n-     On NetBSD 0.8, a similar problem manifests itself as these error\n-     messages:\n-\n-          enquire.c: In function `fprop':\n-          enquire.c:2328: floating overflow\n-\n-   * On SCO systems, when compiling GNU CC with the system's compiler,\n-     do not use `-O'.  Some versions of the system's compiler miscompile\n-     GNU CC with `-O'.\n-\n-   * Sometimes on a Sun 4 you may observe a crash in the program\n-     `genflags' or `genoutput' while building GNU CC.  This is said to\n-     be due to a bug in `sh'.  You can probably get around it by running\n-     `genflags' or `genoutput' manually and then retrying the `make'.\n-\n-   * On Solaris 2, executables of GNU CC version 2.0.2 are commonly\n-     available, but they have a bug that shows up when compiling current\n-     versions of GNU CC: undefined symbol errors occur during assembly\n-     if you use `-g'.\n-\n-     The solution is to compile the current version of GNU CC without\n-     `-g'.  That makes a working compiler which you can use to recompile\n-     with `-g'.\n-\n-   * Solaris 2 comes with a number of optional OS packages.  Some of\n-     these packages are needed to use GNU CC fully.  If you did not\n-     install all optional packages when installing Solaris, you will\n-     need to verify that the packages that GNU CC needs are installed.\n-\n-     To check whether an optional package is installed, use the\n-     `pkginfo' command.  To add an optional package, use the `pkgadd'\n-     command.  For further details, see the Solaris documentation.\n-\n-     For Solaris 2.0 and 2.1, GNU CC needs six packages: `SUNWarc',\n-     `SUNWbtool', `SUNWesu', `SUNWhea', `SUNWlibm', and `SUNWtoo'.\n-\n-     For Solaris 2.2, GNU CC needs an additional seventh package:\n-     `SUNWsprot'.\n-\n-   * On Solaris 2, trying to use the linker and other tools in\n-     `/usr/ucb' to install GNU CC has been observed to cause trouble.\n-     For example, the linker may hang indefinitely.  The fix is to\n-     remove `/usr/ucb' from your `PATH'.\n-\n-   * If you use the 1.31 version of the MIPS assembler (such as was\n-     shipped with Ultrix 3.1), you will need to use the\n-     -fno-delayed-branch switch when optimizing floating point code.\n-     Otherwise, the assembler will complain when the GCC compiler fills\n-     a branch delay slot with a floating point instruction, such as\n-     `add.d'.\n-\n-   * If on a MIPS system you get an error message saying \"does not have\n-     gp sections for all it's [sic] sectons [sic]\", don't worry about\n-     it.  This happens whenever you use GAS with the MIPS linker, but\n-     there is not really anything wrong, and it is okay to use the\n-     output file.  You can stop such warnings by installing the GNU\n-     linker.\n-\n-     It would be nice to extend GAS to produce the gp tables, but they\n-     are optional, and there should not be a warning about their\n-     absence.\n-\n-   * In Ultrix 4.0 on the MIPS machine, `stdio.h' does not work with GNU\n-     CC at all unless it has been fixed with `fixincludes'.  This causes\n-     problems in building GNU CC.  Once GNU CC is installed, the\n-     problems go away.\n-\n-     To work around this problem, when making the stage 1 compiler,\n-     specify this option to Make:\n-\n-          GCC_FOR_TARGET=\"./xgcc -B./ -I./include\"\n-\n-     When making stage 2 and stage 3, specify this option:\n-\n-          CFLAGS=\"-g -I./include\"\n-\n-   * Users have reported some problems with version 2.0 of the MIPS\n-     compiler tools that were shipped with Ultrix 4.1.  Version 2.10\n-     which came with Ultrix 4.2 seems to work fine.\n-\n-     Users have also reported some problems with version 2.20 of the\n-     MIPS compiler tools that were shipped with RISC/os 4.x.  The\n-     earlier version 2.11 seems to work fine.\n-\n-   * Some versions of the MIPS linker will issue an assertion failure\n-     when linking code that uses `alloca' against shared libraries on\n-     RISC-OS 5.0, and DEC's OSF/1 systems.  This is a bug in the\n-     linker, that is supposed to be fixed in future revisions.  To\n-     protect against this, GNU CC passes `-non_shared' to the linker\n-     unless you pass an explicit `-shared' or `-call_shared' switch.\n-\n-   * On System V release 3, you may get this error message while\n-     linking:\n-\n-          ld fatal: failed to write symbol name SOMETHING\n-           in strings table for file WHATEVER\n-\n-     This probably indicates that the disk is full or your ULIMIT won't\n-     allow the file to be as large as it needs to be.\n-\n-     This problem can also result because the kernel parameter `MAXUMEM'\n-     is too small.  If so, you must regenerate the kernel and make the\n-     value much larger.  The default value is reported to be 1024; a\n-     value of 32768 is said to work.  Smaller values may also work.\n-\n-   * On System V, if you get an error like this,\n-\n-          /usr/local/lib/bison.simple: In function `yyparse':\n-          /usr/local/lib/bison.simple:625: virtual memory exhausted\n-\n-     that too indicates a problem with disk space, ULIMIT, or `MAXUMEM'.\n-\n-   * Current GNU CC versions probably do not work on version 2 of the\n-     NeXT operating system.\n-\n-   * On NeXTStep 3.0, the Objective C compiler does not work, due,\n-     apparently, to a kernel bug that it happens to trigger.  This\n-     problem does not happen on 3.1.\n-\n-   * On the Tower models 4N0 and 6N0, by default a process is not\n-     allowed to have more than one megabyte of memory.  GNU CC cannot\n-     compile itself (or many other programs) with `-O' in that much\n-     memory.\n-\n-     To solve this problem, reconfigure the kernel adding the following\n-     line to the configuration file:\n-\n-          MAXUMEM = 4096\n-\n-   * On HP 9000 series 300 or 400 running HP-UX release 8.0, there is a\n-     bug in the assembler that must be fixed before GNU CC can be\n-     built.  This bug manifests itself during the first stage of\n-     compilation, while building `libgcc2.a':\n-\n-          _floatdisf\n-          cc1: warning: `-g' option not supported on this version of GCC\n-          cc1: warning: `-g1' option not supported on this version of GCC\n-          ./xgcc: Internal compiler error: program as got fatal signal 11\n-\n-     A patched version of the assembler is available by anonymous ftp\n-     from `altdorf.ai.mit.edu' as the file\n-     `archive/cph/hpux-8.0-assembler'.  If you have HP software support,\n-     the patch can also be obtained directly from HP, as described in\n-     the following note:\n-\n-          This is the patched assembler, to patch SR#1653-010439, where\n-          the assembler aborts on floating point constants.\n-\n-          The bug is not really in the assembler, but in the shared\n-          library version of the function \"cvtnum(3c)\".  The bug on\n-          \"cvtnum(3c)\" is SR#4701-078451.  Anyway, the attached\n-          assembler uses the archive library version of \"cvtnum(3c)\"\n-          and thus does not exhibit the bug.\n-\n-     This patch is also known as PHCO_4484.\n-\n-   * On HP-UX version 8.05, but not on 8.07 or more recent versions,\n-     the `fixproto' shell script triggers a bug in the system shell.\n-     If you encounter this problem, upgrade your operating system or\n-     use BASH (the GNU shell) to run `fixproto'.\n-\n-   * Some versions of the Pyramid C compiler are reported to be unable\n-     to compile GNU CC.  You must use an older version of GNU CC for\n-     bootstrapping.  One indication of this problem is if you get a\n-     crash when GNU CC compiles the function `muldi3' in file\n-     `libgcc2.c'.\n-\n-     You may be able to succeed by getting GNU CC version 1, installing\n-     it, and using it to compile GNU CC version 2.  The bug in the\n-     Pyramid C compiler does not seem to affect GNU CC version 1.\n-\n-   * There may be similar problems on System V Release 3.1 on 386\n-     systems.\n-\n-   * On the Intel Paragon (an i860 machine), if you are using operating\n-     system version 1.0, you will get warnings or errors about\n-     redefinition of `va_arg' when you build GNU CC.\n-\n-     If this happens, then you need to link most programs with the\n-     library `iclib.a'.  You must also modify `stdio.h' as follows:\n-     before the lines\n-\n-          #if     defined(__i860__) && !defined(_VA_LIST)\n-          #include <va_list.h>\n-\n-     insert the line\n-\n-          #if __PGC__\n-\n-     and after the lines\n-\n-          extern int  vprintf(const char *, va_list );\n-          extern int  vsprintf(char *, const char *, va_list );\n-          #endif\n-\n-     insert the line\n-\n-          #endif /* __PGC__ */\n-\n-     These problems don't exist in operating system version 1.1.\n-\n-   * On the Altos 3068, programs compiled with GNU CC won't work unless\n-     you fix a kernel bug.  This happens using system versions V.2.2\n-     1.0gT1 and V.2.2 1.0e and perhaps later versions as well.  See the\n-     file `README.ALTOS'.\n-\n-   * You will get several sorts of compilation and linking errors on the\n-     we32k if you don't follow the special instructions.  *Note\n-     Configurations::.\n-\n-   * A bug in the HP-UX 8.05 (and earlier) shell will cause the fixproto\n-     program to report an error of the form:\n-\n-          ./fixproto: sh internal 1K buffer overflow\n-\n-     To fix this, change the first line of the fixproto script to look\n-     like:\n-\n-          #!/bin/ksh\n-\n-\u001f\n-File: gcc.info,  Node: Cross-Compiler Problems,  Next: Interoperation,  Prev: Installation Problems,  Up: Trouble\n-\n-Cross-Compiler Problems\n-=======================\n-\n-   You may run into problems with cross compilation on certain machines,\n-for several reasons.\n-\n-   * Cross compilation can run into trouble for certain machines because\n-     some target machines' assemblers require floating point numbers to\n-     be written as *integer* constants in certain contexts.\n-\n-     The compiler writes these integer constants by examining the\n-     floating point value as an integer and printing that integer,\n-     because this is simple to write and independent of the details of\n-     the floating point representation.  But this does not work if the\n-     compiler is running on a different machine with an incompatible\n-     floating point format, or even a different byte-ordering.\n-\n-     In addition, correct constant folding of floating point values\n-     requires representing them in the target machine's format.  (The C\n-     standard does not quite require this, but in practice it is the\n-     only way to win.)\n-\n-     It is now possible to overcome these problems by defining macros\n-     such as `REAL_VALUE_TYPE'.  But doing so is a substantial amount of\n-     work for each target machine.  *Note Cross-compilation::.\n-\n-   * At present, the program `mips-tfile' which adds debug support to\n-     object files on MIPS systems does not work in a cross compile\n-     environment.\n-\n-\u001f\n-File: gcc.info,  Node: Interoperation,  Next: External Bugs,  Prev: Cross-Compiler Problems,  Up: Trouble\n-\n-Interoperation\n-==============\n-\n-   This section lists various difficulties encountered in using GNU C or\n-GNU C++ together with other compilers or with the assemblers, linkers,\n-libraries and debuggers on certain systems.\n-\n-   * Objective C does not work on the RS/6000.\n-\n-   * GNU C++ does not do name mangling in the same way as other C++\n-     compilers.  This means that object files compiled with one compiler\n-     cannot be used with another.\n-\n-     This effect is intentional, to protect you from more subtle\n-     problems.  Compilers differ as to many internal details of C++\n-     implementation, including: how class instances are laid out, how\n-     multiple inheritance is implemented, and how virtual function\n-     calls are handled.  If the name encoding were made the same, your\n-     programs would link against libraries provided from other\n-     compilers--but the programs would then crash when run.\n-     Incompatible libraries are then detected at link time, rather than\n-     at run time.\n-\n-   * Older GDB versions sometimes fail to read the output of GNU CC\n-     version 2.  If you have trouble, get GDB version 4.4 or later.\n-\n-   * DBX rejects some files produced by GNU CC, though it accepts\n-     similar constructs in output from PCC.  Until someone can supply a\n-     coherent description of what is valid DBX input and what is not,\n-     there is nothing I can do about these problems.  You are on your\n-     own.\n-\n-   * The GNU assembler (GAS) does not support PIC.  To generate PIC\n-     code, you must use some other assembler, such as `/bin/as'.\n-\n-   * On some BSD systems, including some versions of Ultrix, use of\n-     profiling causes static variable destructors (currently used only\n-     in C++) not to be run.\n-\n-   * Use of `-I/usr/include' may cause trouble.\n-\n-     Many systems come with header files that won't work with GNU CC\n-     unless corrected by `fixincludes'.  The corrected header files go\n-     in a new directory; GNU CC searches this directory before\n-     `/usr/include'.  If you use `-I/usr/include', this tells GNU CC to\n-     search `/usr/include' earlier on, before the corrected headers.\n-     The result is that you get the uncorrected header files.\n-\n-     Instead, you should use these options (when compiling C programs):\n-\n-          -I/usr/local/lib/gcc-lib/TARGET/VERSION/include -I/usr/include\n-\n-     For C++ programs, GNU CC also uses a special directory that\n-     defines C++ interfaces to standard C subroutines.  This directory\n-     is meant to be searched *before* other standard include\n-     directories, so that it takes precedence.  If you are compiling\n-     C++ programs and specifying include directories explicitly, use\n-     this option first, then the two options above:\n-\n-          -I/usr/local/lib/g++-include\n-\n-   * On some SGI systems, when you use `-lgl_s' as an option, it gets\n-     translated magically to `-lgl_s -lX11_s -lc_s'.  Naturally, this\n-     does not happen when you use GNU CC.  You must specify all three\n-     options explicitly.\n-\n-   * On a Sparc, GNU CC aligns all values of type `double' on an 8-byte\n-     boundary, and it expects every `double' to be so aligned.  The Sun\n-     compiler usually gives `double' values 8-byte alignment, with one\n-     exception: function arguments of type `double' may not be aligned.\n-\n-     As a result, if a function compiled with Sun CC takes the address\n-     of an argument of type `double' and passes this pointer of type\n-     `double *' to a function compiled with GNU CC, dereferencing the\n-     pointer may cause a fatal signal.\n-\n-     One way to solve this problem is to compile your entire program\n-     with GNU CC.  Another solution is to modify the function that is\n-     compiled with Sun CC to copy the argument into a local variable;\n-     local variables are always properly aligned.  A third solution is\n-     to modify the function that uses the pointer to dereference it via\n-     the following function `access_double' instead of directly with\n-     `*':\n-\n-          inline double\n-          access_double (double *unaligned_ptr)\n-          {\n-            union d2i { double d; int i[2]; };\n-          \n-            union d2i *p = (union d2i *) unaligned_ptr;\n-            union d2i u;\n-          \n-            u.i[0] = p->i[0];\n-            u.i[1] = p->i[1];\n-          \n-            return u.d;\n-          }\n-\n-     Storing into the pointer can be done likewise with the same union.\n-\n-   * On Solaris, the `malloc' function in the `libmalloc.a' library may\n-     allocate memory that is only 4 byte aligned.  Since GNU CC on the\n-     Sparc assumes that doubles are 8 byte aligned, this may result in a\n-     fatal signal if doubles are stored in memory allocated by the\n-     `libmalloc.a' library.\n-\n-     The solution is to not use the `libmalloc.a' library.  Use instead\n-     `malloc' and related functions from `libc.a'; they do not have\n-     this problem.\n-\n-   * Sun forgot to include a static version of `libdl.a' with some\n-     versions of SunOS (mainly 4.1).  This results in undefined symbols\n-     when linking static binaries (that is, if you use `-static').  If\n-     you see undefined symbols `_dlclose', `_dlsym' or `_dlopen' when\n-     linking, compile and link against the file `mit/util/misc/dlsym.c'\n-     from the MIT version of X windows.\n-\n-   * The 128-bit long double format that the Sparc port supports\n-     currently works by using the architecturally defined quad-word\n-     floating point instructions.  Since there is no hardware that\n-     supports these instructions they must be emulated by the operating\n-     system.  Long doubles do not work in Sun OS versions 4.0.3 and\n-     earlier, because the kernel emulator uses an obsolete and\n-     incompatible format.  Long doubles do not work in Sun OS version\n-     4.1.1 due to a problem in a Sun library.  Long doubles do work on\n-     Sun OS versions 4.1.2 and higher, but GNU CC does not enable them\n-     by default.  Long doubles appear to work in Sun OS 5.x (Solaris\n-     2.x).\n-\n-   * On HP-UX version 9.01 on the HP PA, the HP compiler `cc' does not\n-     compile GNU CC correctly.  We do not yet know why.  However, GNU CC\n-     compiled on earlier HP-UX versions works properly on HP-UX 9.01\n-     and can compile itself properly on 9.01.\n-\n-   * On the HP PA machine, ADB sometimes fails to work on functions\n-     compiled with GNU CC.  Specifically, it fails to work on functions\n-     that use `alloca' or variable-size arrays.  This is because GNU CC\n-     doesn't generate HP-UX unwind descriptors for such functions.  It\n-     may even be impossible to generate them.\n-\n-   * Debugging (`-g') is not supported on the HP PA machine, unless you\n-     use the preliminary GNU tools (*note Installation::.).\n-\n-   * Taking the address of a label may generate errors from the HP-UX\n-     PA assembler.  GAS for the PA does not have this problem.\n-\n-   * Using floating point parameters for indirect calls to static\n-     functions will not work when using the HP assembler.  There simply\n-     is no way for GCC to specify what registers hold arguments for\n-     static functions when using the HP assembler.  GAS for the PA does\n-     not have this problem.\n-\n-   * In extremely rare cases involving some very large functions you may\n-     receive errors from the HP linker complaining about an out of\n-     bounds unconditional branch offset.  This used to occur more often\n-     in previous versions of GNU CC, but is now exceptionally rare.  If\n-     you should run into it, you can work around by making your\n-     function smaller.\n-\n-   * GNU CC compiled code sometimes emits warnings from the HP-UX\n-     assembler of the form:\n-\n-          (warning) Use of GR3 when\n-            frame >= 8192 may cause conflict.\n-\n-     These warnings are harmless and can be safely ignored.\n-\n-   * The current version of the assembler (`/bin/as') for the RS/6000\n-     has certain problems that prevent the `-g' option in GCC from\n-     working.  Note that `Makefile.in' uses `-g' by default when\n-     compiling `libgcc2.c'.\n-\n-     IBM has produced a fixed version of the assembler.  The upgraded\n-     assembler unfortunately was not included in any of the AIX 3.2\n-     update PTF releases (3.2.2, 3.2.3, or 3.2.3e).  Users of AIX 3.1\n-     should request PTF U403044 from IBM and users of AIX 3.2 should\n-     request PTF U416277.  See the file `README.RS6000' for more\n-     details on these updates.\n-\n-     You can test for the presense of a fixed assembler by using the\n-     command\n-\n-          as -u < /dev/null\n-\n-     If the command exits normally, the assembler fix already is\n-     installed.  If the assembler complains that \"-u\" is an unknown\n-     flag, you need to order the fix.\n-\n-   * On the IBM RS/6000, compiling code of the form\n-\n-          extern int foo;\n-          \n-          ... foo ...\n-          \n-          static int foo;\n-\n-     will cause the linker to report an undefined symbol `foo'.\n-     Although this behavior differs from most other systems, it is not a\n-     bug because redefining an `extern' variable as `static' is\n-     undefined in ANSI C.\n-\n-   * AIX on the RS/6000 provides support (NLS) for environments outside\n-     of the United States.  Compilers and assemblers use NLS to support\n-     locale-specific representations of various objects including\n-     floating-point numbers (\".\" vs \",\" for separating decimal\n-     fractions).  There have been problems reported where the library\n-     linked with GCC does not produce the same floating-point formats\n-     that the assembler accepts.  If you have this problem, set the\n-     LANG environment variable to \"C\" or \"En_US\".\n-\n-   * Even if you specify `-fdollars-in-identifiers', you cannot\n-     successfully use `$' in identifiers on the RS/6000 due to a\n-     restriction in the IBM assembler.  GAS supports these identifiers.\n-\n-   * On the RS/6000, XLC version 1.3.0.0 will miscompile `jump.c'.  XLC\n-     version 1.3.0.1 or later fixes this problem.  You can obtain\n-     XLC-1.3.0.2 by requesting PTF 421749 from IBM.\n-\n-   * There is an assembler bug in versions of DG/UX prior to 5.4.2.01\n-     that occurs when the `fldcr' instruction is used.  GNU CC uses\n-     `fldcr' on the 88100 to serialize volatile memory references.  Use\n-     the option `-mno-serialize-volatile' if your version of the\n-     assembler has this bug.\n-\n-   * On VMS, GAS versions 1.38.1 and earlier may cause spurious warning\n-     messages from the linker.  These warning messages complain of\n-     mismatched psect attributes.  You can ignore them.  *Note VMS\n-     Install::.\n-\n-   * On NewsOS version 3, if you include both of the files `stddef.h'\n-     and `sys/types.h', you get an error because there are two typedefs\n-     of `size_t'.  You should change `sys/types.h' by adding these\n-     lines around the definition of `size_t':\n-\n-          #ifndef _SIZE_T\n-          #define _SIZE_T\n-          ACTUAL TYPEDEF HERE\n-          #endif\n-\n-   * On the Alliant, the system's own convention for returning\n-     structures and unions is unusual, and is not compatible with GNU\n-     CC no matter what options are used.\n-\n-   * On the IBM RT PC, the MetaWare HighC compiler (hc) uses a different\n-     convention for structure and union returning.  Use the option\n-     `-mhc-struct-return' to tell GNU CC to use a convention compatible\n-     with it.\n-\n-   * On Ultrix, the Fortran compiler expects registers 2 through 5 to\n-     be saved by function calls.  However, the C compiler uses\n-     conventions compatible with BSD Unix: registers 2 through 5 may be\n-     clobbered by function calls.\n-\n-     GNU CC uses the same convention as the Ultrix C compiler.  You can\n-     use these options to produce code compatible with the Fortran\n-     compiler:\n-\n-          -fcall-saved-r2 -fcall-saved-r3 -fcall-saved-r4 -fcall-saved-r5\n-\n-   * On the WE32k, you may find that programs compiled with GNU CC do\n-     not work with the standard shared C library.  You may need to link\n-     with the ordinary C compiler.  If you do so, you must specify the\n-     following options:\n-\n-          -L/usr/local/lib/gcc-lib/we32k-att-sysv/2.7.1 -lgcc -lc_s\n-\n-     The first specifies where to find the library `libgcc.a' specified\n-     with the `-lgcc' option.\n-\n-     GNU CC does linking by invoking `ld', just as `cc' does, and there\n-     is no reason why it *should* matter which compilation program you\n-     use to invoke `ld'.  If someone tracks this problem down, it can\n-     probably be fixed easily.\n-\n-   * On the Alpha, you may get assembler errors about invalid syntax as\n-     a result of floating point constants.  This is due to a bug in the\n-     C library functions `ecvt', `fcvt' and `gcvt'.  Given valid\n-     floating point numbers, they sometimes print `NaN'.\n-\n-   * On Irix 4.0.5F (and perhaps in some other versions), an assembler\n-     bug sometimes reorders instructions incorrectly when optimization\n-     is turned on.  If you think this may be happening to you, try\n-     using the GNU assembler; GAS version 2.1 supports ECOFF on Irix.\n-\n-     Or use the `-noasmopt' option when you compile GNU CC with itself,\n-     and then again when you compile your program.  (This is a temporary\n-     kludge to turn off assembler optimization on Irix.)  If this\n-     proves to be what you need, edit the assembler spec in the file\n-     `specs' so that it unconditionally passes `-O0' to the assembler,\n-     and never passes `-O2' or `-O3'.\n-"}, {"sha": "7cc8309c09c6d4b0cf76fae90db78f0facb7e372", "filename": "gcc/gcc.info-12", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-12", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-12", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-12?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "baeaa8a80fe6ad1fe5e80dcd0549c94d1e2d5650", "filename": "gcc/gcc.info-13", "status": "removed", "additions": 0, "deletions": 853, "changes": 853, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-13", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-13", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-13?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "c7bf8502727b407a078c15ec4892dd1566262190", "filename": "gcc/gcc.info-14", "status": "removed", "additions": 0, "deletions": 1161, "changes": 1161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-14", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-14", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-14?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "ef51ab57459351dcf425d240af9716f9e3030d4d", "filename": "gcc/gcc.info-15", "status": "removed", "additions": 0, "deletions": 1010, "changes": 1010, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-15", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-15", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-15?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "ab7aa3c8d039ef6c2f1f651458990ba89332f003", "filename": "gcc/gcc.info-16", "status": "removed", "additions": 0, "deletions": 1053, "changes": 1053, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-16", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-16", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-16?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "ec0d511435c30ca8bb51dedae33e5e4f6dd9e119", "filename": "gcc/gcc.info-17", "status": "removed", "additions": 0, "deletions": 1112, "changes": 1112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-17", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-17", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-17?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "abec34e35deca23e7d1f89db7501f6de74cd4957", "filename": "gcc/gcc.info-18", "status": "removed", "additions": 0, "deletions": 1031, "changes": 1031, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-18", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-18", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-18?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "3ba2b75ada781bab73e8e5a1c2e0e4430e005ee4", "filename": "gcc/gcc.info-19", "status": "removed", "additions": 0, "deletions": 1072, "changes": 1072, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-19", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-19", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-19?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "1e15a3090ebff86179b293401fe842e962f4aa6a", "filename": "gcc/gcc.info-2", "status": "removed", "additions": 0, "deletions": 1142, "changes": 1142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-2?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "cf674a47b20bc442d2ae2206a3fc8fe687014f95", "filename": "gcc/gcc.info-20", "status": "removed", "additions": 0, "deletions": 1207, "changes": 1207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-20", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-20", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-20?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "72ee0b7fa806d545eb045067207ff271e656f2e6", "filename": "gcc/gcc.info-21", "status": "removed", "additions": 0, "deletions": 1028, "changes": 1028, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-21", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-21", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-21?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "686333944da1f079306557ecd1acd2bc9adeda63", "filename": "gcc/gcc.info-22", "status": "removed", "additions": 0, "deletions": 961, "changes": 961, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-22", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-22", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-22?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "79c4ab94fdf5a2054163f460da0f152d76968407", "filename": "gcc/gcc.info-23", "status": "removed", "additions": 0, "deletions": 972, "changes": 972, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-23", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-23", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-23?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "f33b78f422e6d14fd048507784e89c836d613c45", "filename": "gcc/gcc.info-24", "status": "removed", "additions": 0, "deletions": 1043, "changes": 1043, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-24", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-24", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-24?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "fc5e5a7655b77009a65a3a873bd40358016afbc7", "filename": "gcc/gcc.info-25", "status": "removed", "additions": 0, "deletions": 1143, "changes": 1143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-25", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-25", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-25?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "f70a06ecec4ad09265423100a3704e4fa5447824", "filename": "gcc/gcc.info-26", "status": "removed", "additions": 0, "deletions": 973, "changes": 973, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-26", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-26", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-26?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "d486a64c257ef616c46fad1a7e24123120a043f1", "filename": "gcc/gcc.info-27", "status": "removed", "additions": 0, "deletions": 534, "changes": 534, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-27", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-27", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-27?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "c90dd644f077f9ada71d344c3223be8426006594", "filename": "gcc/gcc.info-28", "status": "removed", "additions": 0, "deletions": 2030, "changes": 2030, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-28", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-28", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-28?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "d60f8139c929c10cd62872e6ec3c59059ea6ac8f", "filename": "gcc/gcc.info-3", "status": "removed", "additions": 0, "deletions": 1198, "changes": 1198, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-3?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "8a3d1fbdbf6473f101328e53a7d7309f231afb6e", "filename": "gcc/gcc.info-4", "status": "removed", "additions": 0, "deletions": 1171, "changes": 1171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-4?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "dcf6541be8c213d55e2cbf747730b1273f4165f3", "filename": "gcc/gcc.info-5", "status": "removed", "additions": 0, "deletions": 836, "changes": 836, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-5", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-5", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-5?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "e8e391957c80b6d89464aa9fc2535ea3753d8732", "filename": "gcc/gcc.info-6", "status": "removed", "additions": 0, "deletions": 537, "changes": 537, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-6", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-6", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-6?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "35bf202f11f1b4b59089b37f462a58de78583273", "filename": "gcc/gcc.info-7", "status": "removed", "additions": 0, "deletions": 1100, "changes": 1100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-7", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-7", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-7?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "3f490970f76e30c113e42b657f60a1c28cadf706", "filename": "gcc/gcc.info-8", "status": "removed", "additions": 0, "deletions": 1202, "changes": 1202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-8", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-8", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-8?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "822751e6d8a1b4b1aa06cdaf62bf527d122dd6f7", "filename": "gcc/gcc.info-9", "status": "removed", "additions": 0, "deletions": 1225, "changes": 1225, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-9", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb84e66919817020267815eed4304e543688e722/gcc%2Fgcc.info-9", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.info-9?ref=bb84e66919817020267815eed4304e543688e722"}, {"sha": "83ac13bbf3f4dc21afe1ebe968e208ac6fe5b6ed", "filename": "gcc/gcc.texi", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.texi?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "bef1c59bcba04081b8530e900c9289e5e11e29bc", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 44, "deletions": 6, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "24f3383198d4aad8b455397cb6634e792b32c03f", "filename": "gcc/ginclude/stdarg.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fginclude%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fginclude%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdarg.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "96da6d5a3dea4bbbae20f8ce1b9c5ed4ef5aa050", "filename": "gcc/ginclude/va-v850.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fginclude%2Fva-v850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fginclude%2Fva-v850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-v850.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "410d06aac69bc629dbfd238bda8966887af63df3", "filename": "gcc/ginclude/varargs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fginclude%2Fvarargs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fginclude%2Fvarargs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fvarargs.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "3ab4d708af65391fbb2957084cefc41c93bf9333", "filename": "gcc/global.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "22166230b9382c32331099bc67de7565fba0538d", "filename": "gcc/install.texi", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finstall.texi?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "3931dee279d9b527d84fa6c3d22383060922f47d", "filename": "gcc/integrate.c", "status": "modified", "additions": 67, "deletions": 15, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "1880143f5934b60f249b4cdb963f3eb992283d35", "filename": "gcc/invoke.texi", "status": "modified", "additions": 80, "deletions": 16, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "f72dedf387bd2a60d1a5158deeb8e755783d8927", "filename": "gcc/jump.c", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "ab7fc98f39da016a1444185eea7b0c4eed9b0291", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "70f15513cc9345b6442f72713e0d9cf656545637", "filename": "gcc/loop.c", "status": "modified", "additions": 72, "deletions": 22, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "b87a8ac5e49576b70781d38912ee1ce0ea37765e", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "0dcd59c12abcf0b3aa63888088186907433726f9", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 25, "deletions": 18, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "3734a97fb663b1fa91bb2152de7abc61cd279ef2", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 27, "deletions": 34, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "5ad3e5ef12b8aeaa06440f06d720a1f4ddab7ab8", "filename": "gcc/obstack.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fobstack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fobstack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobstack.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "39fe9c7d5db04d2486069d191cff23e63699ff98", "filename": "gcc/pexecute.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fpexecute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fpexecute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpexecute.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "4de616625f1d5a42e37b73deaeb3bb144d7f2d6d", "filename": "gcc/profile.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "2f3ec1ba02ce5acd0292f768551d2b8418f061d6", "filename": "gcc/real.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "530a88659f72c5d890456e8d4246e69114a1aa95", "filename": "gcc/real.h", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "aea3cdb93fdcddbb3acf9d2da2fa34f9eee15bc1", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "db29999aee1d944c4b090a91f56ffd5a5672094c", "filename": "gcc/regclass.c", "status": "modified", "additions": 10, "deletions": 40, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "f26cb5800cbbb40ccc95e1073eba6df7815befd3", "filename": "gcc/reload.c", "status": "modified", "additions": 49, "deletions": 52, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "4281800b65a934ace4d7829467ece88501dc5caf", "filename": "gcc/reload1.c", "status": "modified", "additions": 381, "deletions": 94, "changes": 475, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "5ae579a88a1f3d7500449498d1f57fb801769c5c", "filename": "gcc/reorg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "a386f84cd0a8fb15ee19eee83adc4975c1ff2f12", "filename": "gcc/rtl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "16de2806d0336ac0b8be3a85e57da77caefacc21", "filename": "gcc/rtl.h", "status": "modified", "additions": 53, "deletions": 16, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "3a4de0c67c1633949cf616437c7c98b568fa09e4", "filename": "gcc/rtl.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.texi?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "d311652d2ef715e67bea706d9c7e380fcd450a1e", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 49, "deletions": 12, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "a06044e2d295ecbdfa9cdc01103a61c617835548", "filename": "gcc/sched.c", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fsched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fsched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "c42afdb28ca1676b1929fd8e0ad0ff219041e9bb", "filename": "gcc/sdbout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "b7a2c52f43c237f88d57b0687a30bf94564cac08", "filename": "gcc/stmt.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "21a8f4404aeb815ba291d080e244ca3a08acf25a", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "e3337d9ea13a3c64cfde7770a0dd4cee7fc5c63c", "filename": "gcc/tm.texi", "status": "modified", "additions": 106, "deletions": 41, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "956d78e09be6217ea8c829af1d23c1656014e07e", "filename": "gcc/toplev.c", "status": "modified", "additions": 56, "deletions": 3, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "2129f8491e18593091ede447b5355ebec5983f08", "filename": "gcc/tree.c", "status": "modified", "additions": 104, "deletions": 33, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "bfde55ef0db489e966595a678bf3ed9379c7f184", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "10dfb8a9277f6f9f7bf51e80adc41532cbc99476", "filename": "gcc/unroll.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "1161837cec39ca013a245714cfd9e8b65b87558f", "filename": "gcc/varasm.c", "status": "modified", "additions": 42, "deletions": 8, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}, {"sha": "f8640f972f811d47010ae3f885ab7bd4bad4db50", "filename": "gcc/version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9a25f70a0a7b82881b56cb3dfa7422b2968682a/gcc%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fversion.c?ref=e9a25f70a0a7b82881b56cb3dfa7422b2968682a"}]}