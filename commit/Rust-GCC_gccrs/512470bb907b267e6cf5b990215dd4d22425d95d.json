{"sha": "512470bb907b267e6cf5b990215dd4d22425d95d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEyNDcwYmI5MDdiMjY3ZTZjZjViOTkwMjE1ZGQ0ZDIyNDI1ZDk1ZA==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-04-02T08:15:49Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-04-02T08:15:49Z"}, "message": "re PR driver/65444 (-z bndplt isn't passed to linker for -mmpx when building dynamic objects)\n\ngcc/\n\tPR driver/65444\n\t* config/i386/linux-common.h (MPX_SPEC): New.\n\t(CHKP_SPEC): Add MPX_SPEC.\n\t* doc/invoke.texi (-fcheck-pointer-boudns): Document\n\tpossible issues with '-z bndplt' support in linker.\n\nlibmpx/\n\n\tPR driver/65444\n\t* configure.ac: Add check for '-z bndplt' support\n\tby linker. Add link_mpx output variable.\n\t* libmpx.spec.in (link_mpx): New.\n\t* configure: Regenerate.\n\nFrom-SVN: r221831", "tree": {"sha": "bd4f3ce6c25d8977eb5decebecb83a4ec07c4ca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd4f3ce6c25d8977eb5decebecb83a4ec07c4ca3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/512470bb907b267e6cf5b990215dd4d22425d95d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512470bb907b267e6cf5b990215dd4d22425d95d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/512470bb907b267e6cf5b990215dd4d22425d95d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512470bb907b267e6cf5b990215dd4d22425d95d/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8caf3514910c6d8513910e9c9d4c8e6b1b3ad0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8caf3514910c6d8513910e9c9d4c8e6b1b3ad0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8caf3514910c6d8513910e9c9d4c8e6b1b3ad0f"}], "stats": {"total": 73, "additions": 68, "deletions": 5}, "files": [{"sha": "4c832e7f1dd8fe7111fe3f432a733fa4f1ae43b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512470bb907b267e6cf5b990215dd4d22425d95d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512470bb907b267e6cf5b990215dd4d22425d95d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=512470bb907b267e6cf5b990215dd4d22425d95d", "patch": "@@ -1,3 +1,11 @@\n+2015-04-02  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR driver/65444\n+\t* config/i386/linux-common.h (MPX_SPEC): New.\n+\t(CHKP_SPEC): Add MPX_SPEC.\n+\t* doc/invoke.texi (-fcheck-pointer-boudns): Document\n+\tpossible issues with '-z bndplt' support in linker.\n+\n 2015-04-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sync.md (UNSPEC_FILD_ATOMIC, UNSPEC_FIST_ATOMIC): New."}, {"sha": "dd79ec663e9a7b7ccdb7f28ec3302afc1a1afcbb", "filename": "gcc/config/i386/linux-common.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512470bb907b267e6cf5b990215dd4d22425d95d/gcc%2Fconfig%2Fi386%2Flinux-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512470bb907b267e6cf5b990215dd4d22425d95d/gcc%2Fconfig%2Fi386%2Flinux-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-common.h?ref=512470bb907b267e6cf5b990215dd4d22425d95d", "patch": "@@ -59,6 +59,11 @@ along with GCC; see the file COPYING3.  If not see\n  %:include(libmpx.spec)%(link_libmpx)\"\n #endif\n \n+#ifndef MPX_SPEC\n+#define MPX_SPEC \"\\\n+ %{mmpx:%{fcheck-pointer-bounds:%{!static:%:include(libmpx.spec)%(link_mpx)}}}\"\n+#endif\n+\n #ifndef LIBMPX_SPEC\n #if defined(HAVE_LD_STATIC_DYNAMIC)\n #define LIBMPX_SPEC \"\\\n@@ -89,5 +94,5 @@ along with GCC; see the file COPYING3.  If not see\n \n #ifndef CHKP_SPEC\n #define CHKP_SPEC \"\\\n-%{!nostdlib:%{!nodefaultlibs:\" LIBMPX_SPEC LIBMPXWRAPPERS_SPEC \"}}\"\n+%{!nostdlib:%{!nodefaultlibs:\" LIBMPX_SPEC LIBMPXWRAPPERS_SPEC \"}}\" MPX_SPEC\n #endif"}, {"sha": "c05871023482f8087544887cc21f76dccd149032", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512470bb907b267e6cf5b990215dd4d22425d95d/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512470bb907b267e6cf5b990215dd4d22425d95d/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=512470bb907b267e6cf5b990215dd4d22425d95d", "patch": "@@ -5857,7 +5857,16 @@ MPX-based instrumentation requires\n a runtime library to enable MPX in hardware and handle bounds\n violation signals.  By default when @option{-fcheck-pointer-bounds}\n and @option{-mmpx} options are used to link a program, the GCC driver\n-links against the @file{libmpx} runtime library.  MPX-based instrumentation\n+links against the @file{libmpx} runtime library and @file{libmpxwrappers}\n+library.  It also passes '-z bndplt' to a linker in case it supports this\n+option (which is checked on libmpx configuration).  Note that old versions\n+of linker may ignore option.  Gold linker doesn't support '-z bndplt'\n+option.  With no '-z bndplt' support in linker all calls to dynamic libraries\n+lose passed bounds reducing overall protection level.  It's highly\n+recommended to use linker with '-z bndplt' support.  In case such linker\n+is not available it is adviced to always use @option{-static-libmpxwrappers}\n+for better protection level or use @option{-static} to completely avoid\n+external calls to dynamic libraries.  MPX-based instrumentation\n may be used for debugging and also may be included in production code\n to increase program security.  Depending on usage, you may\n have different requirements for the runtime library.  The current version"}, {"sha": "6b05278b0d05f495afa1c53dca83dc0f4c68152e", "filename": "libmpx/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512470bb907b267e6cf5b990215dd4d22425d95d/libmpx%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512470bb907b267e6cf5b990215dd4d22425d95d/libmpx%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FChangeLog?ref=512470bb907b267e6cf5b990215dd4d22425d95d", "patch": "@@ -1,3 +1,11 @@\n+2015-04-02  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR driver/65444\n+\t* configure.ac: Add check for '-z bndplt' support\n+\tby linker. Add link_mpx output variable.\n+\t* libmpx.spec.in (link_mpx): New.\n+\t* configure: Regenerate.\n+\n 2015-03-12  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR other/65384"}, {"sha": "aeaa483935245f84eb9d18813b64840146c50201", "filename": "libmpx/configure", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512470bb907b267e6cf5b990215dd4d22425d95d/libmpx%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512470bb907b267e6cf5b990215dd4d22425d95d/libmpx%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure?ref=512470bb907b267e6cf5b990215dd4d22425d95d", "patch": "@@ -670,6 +670,7 @@ am__isrc\n INSTALL_DATA\n INSTALL_SCRIPT\n INSTALL_PROGRAM\n+link_mpx\n link_libmpx\n LIBMPX_SUPPORTED_FALSE\n LIBMPX_SUPPORTED_TRUE\n@@ -2523,6 +2524,25 @@ fi\n \n \n link_libmpx=\"-lpthread\"\n+link_mpx=\"\"\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether ld accepts -z bndplt\" >&5\n+$as_echo_n \"checking whether ld accepts -z bndplt... \" >&6; }\n+echo \"int main() {};\" > conftest.c\n+if { ac_try='${CC} ${CFLAGS} -Wl,-z,bndplt -o conftest conftest.c 1>&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+    link_mpx=\"$link_mpx -z bndplt\"\n+else\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n \n \n am__api_version='1.11'\n@@ -11648,7 +11668,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11651 \"configure\"\n+#line 11671 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11754,7 +11774,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11757 \"configure\"\n+#line 11777 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "3f8b50f8eba850bcda8c0ed463fb86e42ebb22bc", "filename": "libmpx/configure.ac", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512470bb907b267e6cf5b990215dd4d22425d95d/libmpx%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512470bb907b267e6cf5b990215dd4d22425d95d/libmpx%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure.ac?ref=512470bb907b267e6cf5b990215dd4d22425d95d", "patch": "@@ -40,7 +40,18 @@ AC_MSG_RESULT($LIBMPX_SUPPORTED)\n AM_CONDITIONAL(LIBMPX_SUPPORTED, [test \"x$LIBMPX_SUPPORTED\" = \"xyes\"])\n \n link_libmpx=\"-lpthread\"\n+link_mpx=\"\"\n+AC_MSG_CHECKING([whether ld accepts -z bndplt])\n+echo \"int main() {};\" > conftest.c\n+if AC_TRY_COMMAND([${CC} ${CFLAGS} -Wl,-z,bndplt -o conftest conftest.c 1>&AS_MESSAGE_LOG_FD])\n+then\n+    AC_MSG_RESULT([yes])\n+    link_mpx=\"$link_mpx -z bndplt\"\n+else\n+    AC_MSG_RESULT([no])\n+fi\n AC_SUBST(link_libmpx)\n+AC_SUBST(link_mpx)\n \n AM_INIT_AUTOMAKE(foreign no-dist no-dependencies)\n AM_ENABLE_MULTILIB(, ..)"}, {"sha": "34d0bdf165a8ac6d16ac730b7c4127312630df06", "filename": "libmpx/libmpx.spec.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512470bb907b267e6cf5b990215dd4d22425d95d/libmpx%2Flibmpx.spec.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512470bb907b267e6cf5b990215dd4d22425d95d/libmpx%2Flibmpx.spec.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Flibmpx.spec.in?ref=512470bb907b267e6cf5b990215dd4d22425d95d", "patch": "@@ -1,3 +1,5 @@\n # This spec file is read by gcc when linking.  It is used to specify the\n-# standard libraries we need in order to link with libcilkrts.\n+# standard libraries we need in order to link with libmpx.\n *link_libmpx: @link_libmpx@\n+\n+*link_mpx: @link_mpx@"}]}