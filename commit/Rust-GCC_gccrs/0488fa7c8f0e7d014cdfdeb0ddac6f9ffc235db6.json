{"sha": "0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ4OGZhN2M4ZjBlN2QwMTRjZGZkZWIwZGRhYzZmOWZmYzIzNWRiNg==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-10-11T09:59:06Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-10-11T09:59:06Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r58050", "tree": {"sha": "f1b7dd6ee730b907128000deff13e31ed77a885a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1b7dd6ee730b907128000deff13e31ed77a885a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6/comments", "author": null, "committer": null, "parents": [{"sha": "d92b6b949d1e674672f93bb618efb8da3cb14bf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d92b6b949d1e674672f93bb618efb8da3cb14bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d92b6b949d1e674672f93bb618efb8da3cb14bf1"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "c2c29c58b03f3ccc9fdbbea5510b0ba5390986fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6", "patch": "@@ -1,3 +1,8 @@\n+Fri Oct 11 10:56:17 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* emit-rtl.c (gen_lowpart_common): When asked to make a vector from\n+\tan integer, use simplify_gen_subreg.\n+\n 2002-10-10  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* extend.texi (Vector Extensions): Remove comment about single"}, {"sha": "2cf410706d8993d431c5bd858773ff192f773ec1", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6", "patch": "@@ -999,6 +999,10 @@ gen_lowpart_common (mode, x)\n   else if (GET_CODE (x) == SUBREG || GET_CODE (x) == REG\n \t   || GET_CODE (x) == CONCAT || GET_CODE (x) == CONST_VECTOR)\n     return simplify_gen_subreg (mode, x, GET_MODE (x), offset);\n+  else if ((GET_MODE_CLASS (mode) == MODE_VECTOR_INT\n+\t    || GET_MODE_CLASS (mode) == MODE_VECTOR_FLOAT)\n+\t   && GET_MODE (x) == VOIDmode)\n+    return simplify_gen_subreg (mode, x, int_mode_for_mode (mode), offset);\n   /* If X is a CONST_INT or a CONST_DOUBLE, extract the appropriate bits\n      from the low-order part of the constant.  */\n   else if ((GET_MODE_CLASS (mode) == MODE_INT"}, {"sha": "d54efb19c9aa5c5a7aeb49c2587c30eeb6cda16b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6", "patch": "@@ -1,3 +1,7 @@\n+Fri Oct 11 10:56:49 2002  Richard Shann  <richard.shann@superh.com>\n+\n+\t* gcc.c-torture/compile/simd-5.c: New test.\n+\n 2002-10-10  Jim Wilson  <wilson@redhat.com>\n \n \t* gcc.c-torture/execute/20021010-1.c: New test."}, {"sha": "016cccd1e9faee96150d40855ca4aee190145c24", "filename": "gcc/testsuite/gcc.c-torture/compile/simd-5.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsimd-5.c?ref=0488fa7c8f0e7d014cdfdeb0ddac6f9ffc235db6", "patch": "@@ -0,0 +1,12 @@\n+#define vector64 __attribute__((vector_size(8)))\n+\n+main(){\n+\n+ vector64 int  c;\n+vector64 int a = {1, -1};\n+vector64 int b = {2, -2};\n+c = -a + b*b*(-1LL);\n+/* c is now {5, 3} */\n+\n+ printf(\"result is %llx\\n\", (long long)c); \n+}"}]}