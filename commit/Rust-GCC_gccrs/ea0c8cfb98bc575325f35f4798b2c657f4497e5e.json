{"sha": "ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEwYzhjZmI5OGJjNTc1MzI1ZjM1ZjQ3OThiMmM2NTdmNDQ5N2U1ZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-08-01T08:17:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T08:17:20Z"}, "message": "gnatchop.adb, [...]: Minor reformatting.\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* gnatchop.adb, gnatcmd.adb, make.adb, mlib-prj.adb, bindgen.adb,\n\tmlib.ads, butil.adb, clean.adb, binde.adb, gnatls.adb, gnatname.adb,\n\tosint.adb, krunch.adb: Minor reformatting.\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* inline.adb, inline.ads, fe.h, einfo.adb, einfo.ads, sem_util.adb,\n\tsem_util.ads, exp_ch4.adb, exp_ch11.adb, exp_ch6.adb, cstand.adb,\n\tsem_mech.adb, sem_ch6.adb, sem_ch8.adb, sem_ch11.adb, snames.ads-tmpl:\n\tRemove VMS-specific code.\n\nFrom-SVN: r213414", "tree": {"sha": "f67b75102f9fc406e9089148d3ba4caef87238c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f67b75102f9fc406e9089148d3ba4caef87238c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/comments", "author": null, "committer": null, "parents": [{"sha": "62883e6b17b85341fbc9b35c51bc076d39dcec23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62883e6b17b85341fbc9b35c51bc076d39dcec23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62883e6b17b85341fbc9b35c51bc076d39dcec23"}], "stats": {"total": 701, "additions": 144, "deletions": 557}, "files": [{"sha": "83ae8cd72a2c817836cf11388a5f435ceee076ab", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -1,3 +1,16 @@\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnatchop.adb, gnatcmd.adb, make.adb, mlib-prj.adb, bindgen.adb,\n+\tmlib.ads, butil.adb, clean.adb, binde.adb, gnatls.adb, gnatname.adb,\n+\tosint.adb, krunch.adb: Minor reformatting.\n+\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* inline.adb, inline.ads, fe.h, einfo.adb, einfo.ads, sem_util.adb,\n+\tsem_util.ads, exp_ch4.adb, exp_ch11.adb, exp_ch6.adb, cstand.adb,\n+\tsem_mech.adb, sem_ch6.adb, sem_ch8.adb, sem_ch11.adb, snames.ads-tmpl:\n+\tRemove VMS-specific code.\n+\n 2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n \n \t* binde.adb, bindgen.adb, butil.adb, clean.adb, gnatbind.adb,"}, {"sha": "6c43ab8fdf9d71f21a1b84600a3b8d8a93dd1d4a", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -1085,8 +1085,7 @@ package body Binde is\n \n       --  Output warning if -p used with no -gnatE units\n \n-      if Pessimistic_Elab_Order\n-        and not Dynamic_Elaboration_Checks_Specified\n+      if Pessimistic_Elab_Order and not Dynamic_Elaboration_Checks_Specified\n       then\n          Error_Msg (\"?use of -p switch questionable\");\n          Error_Msg (\"?since all units compiled with static elaboration model\");\n@@ -1105,7 +1104,6 @@ package body Binde is\n       --  Initialize the no predecessor list\n \n       No_Pred := No_Unit_Id;\n-\n       for U in UNR.First .. UNR.Last loop\n          if UNR.Table (U).Num_Pred = 0 then\n             UNR.Table (U).Nextnp := No_Pred;\n@@ -1216,8 +1214,7 @@ package body Binde is\n          --  interfaces to stand-alone libraries.\n \n          if not Units.Table (U).SAL_Interface then\n-            for\n-              W in Units.Table (U).First_With .. Units.Table (U).Last_With\n+            for W in Units.Table (U).First_With .. Units.Table (U).Last_With\n             loop\n                if Withs.Table (W).Sfile /= No_File\n                  and then (not Withs.Table (W).SAL_Interface)"}, {"sha": "553542ef5293272d996a27ef14815855584daecf", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -321,16 +321,16 @@ package body Bindgen is\n    --  Move routine for sorting linker options\n \n    procedure Resolve_Binder_Options;\n-   --  Set the value of With_GNARL.\n+   --  Set the value of With_GNARL\n \n    procedure Set_Char (C : Character);\n    --  Set given character in Statement_Buffer at the Last + 1 position\n    --  and increment Last by one to reflect the stored character.\n \n    procedure Set_Int (N : Int);\n-   --  Set given value in decimal in Statement_Buffer with no spaces\n-   --  starting at the Last + 1 position, and updating Last past the value.\n-   --  A minus sign is output for a negative value.\n+   --  Set given value in decimal in Statement_Buffer with no spaces starting\n+   --  at the Last + 1 position, and updating Last past the value. A minus sign\n+   --  is output for a negative value.\n \n    procedure Set_Boolean (B : Boolean);\n    --  Set given boolean value in Statement_Buffer at the Last + 1 position\n@@ -340,9 +340,9 @@ package body Bindgen is\n    --  Initializes contents of IS_Pragma_Settings table from ALI table\n \n    procedure Set_Main_Program_Name;\n-   --  Given the main program name in Name_Buffer (length in Name_Len)\n-   --  generate the name of the routine to be used in the call. The name\n-   --  is generated starting at Last + 1, and Last is updated past it.\n+   --  Given the main program name in Name_Buffer (length in Name_Len) generate\n+   --  the name of the routine to be used in the call. The name is generated\n+   --  starting at Last + 1, and Last is updated past it.\n \n    procedure Set_Name_Buffer;\n    --  Set the value stored in positions 1 .. Name_Len of the Name_Buffer\n@@ -355,9 +355,9 @@ package body Bindgen is\n    --  Last + 1 position, and updating last past the string value.\n \n    procedure Set_String_Replace (S : String);\n-   --  Replaces the last S'Length characters in the Statement_Buffer with\n-   --  the characters of S. The caller must ensure that these characters do\n-   --  in fact exist in the Statement_Buffer.\n+   --  Replaces the last S'Length characters in the Statement_Buffer with the\n+   --  characters of S. The caller must ensure that these characters do in fact\n+   --  exist in the Statement_Buffer.\n \n    type Qualification_Mode is (Dollar_Sign, Dot, Double_Underscores);\n \n@@ -368,9 +368,9 @@ package body Bindgen is\n    --  underscores (__), a dollar sign ($) or left as is.\n \n    procedure Set_Unit_Number (U : Unit_Id);\n-   --  Sets unit number (first unit is 1, leading zeroes output to line\n-   --  up all output unit numbers nicely as required by the value, and\n-   --  by the total number of units.\n+   --  Sets unit number (first unit is 1, leading zeroes output to line up all\n+   --  output unit numbers nicely as required by the value, and by the total\n+   --  number of units.\n \n    procedure Write_Statement_Buffer;\n    --  Write out contents of statement buffer up to Last, and reset Last to 0"}, {"sha": "3ac112a07a54802ade19886888a19d82f4a9ae63", "filename": "gcc/ada/butil.adb", "status": "modified", "additions": 25, "deletions": 55, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fbutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fbutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbutil.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -37,10 +37,9 @@ package body Butil is\n    function Is_Internal_Unit return Boolean is\n    begin\n       return Is_Predefined_Unit\n-        or else (Name_Len > 4\n-                   and then (Name_Buffer (1 .. 5) = \"gnat%\"\n-                               or else\n-                             Name_Buffer (1 .. 5) = \"gnat.\"));\n+        or else (Name_Len > 4 and then (Name_Buffer (1 .. 5) = \"gnat%\"\n+                                          or else\n+                                        Name_Buffer (1 .. 5) = \"gnat.\"));\n    end Is_Internal_Unit;\n \n    ------------------------\n@@ -51,54 +50,25 @@ package body Butil is\n    --  is that it would drag too much junk into the binder.\n \n    function Is_Predefined_Unit return Boolean is\n+      L : Natural renames Name_Len;\n+      B : String  renames Name_Buffer;\n    begin\n-      return    (Name_Len >  3\n-                  and then Name_Buffer (1 ..  4) = \"ada.\")\n-\n-        or else (Name_Len >  6\n-                  and then Name_Buffer (1 ..  7) = \"system.\")\n-\n-        or else (Name_Len > 10\n-                   and then Name_Buffer (1 .. 11) = \"interfaces.\")\n-\n-        or else (Name_Len >  3\n-                   and then Name_Buffer (1 ..  4) = \"ada%\")\n-\n-        or else (Name_Len >  8\n-                   and then Name_Buffer (1 ..  9) = \"calendar%\")\n-\n-        or else (Name_Len >  9\n-                   and then Name_Buffer (1 .. 10) = \"direct_io%\")\n-\n-        or else (Name_Len > 10\n-                   and then Name_Buffer (1 .. 11) = \"interfaces%\")\n-\n-        or else (Name_Len > 13\n-                   and then Name_Buffer (1 .. 14) = \"io_exceptions%\")\n-\n-        or else (Name_Len > 12\n-                   and then Name_Buffer (1 .. 13) = \"machine_code%\")\n-\n-        or else (Name_Len > 13\n-                   and then Name_Buffer (1 .. 14) = \"sequential_io%\")\n-\n-        or else (Name_Len >  6\n-                   and then Name_Buffer (1 ..  7) = \"system%\")\n-\n-        or else (Name_Len >  7\n-                   and then Name_Buffer (1 ..  8) = \"text_io%\")\n-\n-        or else (Name_Len > 20\n-                   and then Name_Buffer (1 .. 21) = \"unchecked_conversion%\")\n-\n-        or else (Name_Len > 22\n-                   and then Name_Buffer (1 .. 23) = \"unchecked_deallocation%\")\n-\n-        or else (Name_Len > 4\n-                   and then Name_Buffer (1 .. 5) = \"gnat%\")\n-\n-        or else (Name_Len > 4\n-                   and then Name_Buffer (1 .. 5) = \"gnat.\");\n+      return    (L >  3 and then B (1 ..  4) = \"ada.\")\n+        or else (L >  6 and then B (1 ..  7) = \"system.\")\n+        or else (L > 10 and then B (1 .. 11) = \"interfaces.\")\n+        or else (L >  3 and then B (1 ..  4) = \"ada%\")\n+        or else (L >  8 and then B (1 ..  9) = \"calendar%\")\n+        or else (L >  9 and then B (1 .. 10) = \"direct_io%\")\n+        or else (L > 10 and then B (1 .. 11) = \"interfaces%\")\n+        or else (L > 13 and then B (1 .. 14) = \"io_exceptions%\")\n+        or else (L > 12 and then B (1 .. 13) = \"machine_code%\")\n+        or else (L > 13 and then B (1 .. 14) = \"sequential_io%\")\n+        or else (L >  6 and then B (1 ..  7) = \"system%\")\n+        or else (L >  7 and then B (1 ..  8) = \"text_io%\")\n+        or else (L > 20 and then B (1 .. 21) = \"unchecked_conversion%\")\n+        or else (L > 22 and then B (1 .. 23) = \"unchecked_deallocation%\")\n+        or else (L >  4 and then B (1 ..  5) = \"gnat%\")\n+        or else (L >  4 and then B (1 ..  5) = \"gnat.\");\n    end Is_Predefined_Unit;\n \n    ----------------\n@@ -111,7 +81,7 @@ package body Butil is\n \n       declare\n          U1_Name : constant String (1 .. Name_Len) :=\n-           Name_Buffer (1 .. Name_Len);\n+                     Name_Buffer (1 .. Name_Len);\n          Min_Length : Natural;\n \n       begin\n@@ -123,10 +93,10 @@ package body Butil is\n             Min_Length := U1_Name'Last;\n          end if;\n \n-         for I in 1 .. Min_Length loop\n-            if U1_Name (I) > Name_Buffer (I) then\n+         for J in 1 .. Min_Length loop\n+            if U1_Name (J) > Name_Buffer (J) then\n                return False;\n-            elsif U1_Name (I) < Name_Buffer (I) then\n+            elsif U1_Name (J) < Name_Buffer (J) then\n                return True;\n             end if;\n          end loop;"}, {"sha": "999c735fe1250be13408cbad5949b1047b186888", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -55,8 +55,8 @@ with GNAT.OS_Lib;               use GNAT.OS_Lib;\n package body Clean is\n \n    Initialized : Boolean := False;\n-   --  Set to True by the first call to Initialize.\n-   --  To avoid reinitialization of some packages.\n+   --  Set to True by the first call to Initialize to avoid reinitialization\n+   --  of some packages.\n \n    --  Suffixes of various files\n \n@@ -66,10 +66,10 @@ package body Clean is\n    Object_Suffix   : constant String := Get_Target_Object_Suffix.all;\n    Debug_Suffix    : constant String := \".dg\";\n    Repinfo_Suffix  : constant String := \".rep\";\n-   --  Suffix of representation info files.\n+   --  Suffix of representation info files\n \n    B_Start : constant String := \"b~\";\n-   --  Prefix of binder generated file, and number of actual characters used.\n+   --  Prefix of binder generated file, and number of actual characters used\n \n    Project_Tree : constant Project_Tree_Ref :=\n      new Project_Tree_Data (Is_Root_Tree => True);"}, {"sha": "2fe357666da40e417c452a783779274ea6e21c45", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -467,10 +467,9 @@ package body CStand is\n \n       procedure Build_Exception (S : Standard_Entity_Type) is\n       begin\n-         Set_Ekind          (Standard_Entity (S), E_Exception);\n-         Set_Etype          (Standard_Entity (S), Standard_Exception_Type);\n-         Set_Exception_Code (Standard_Entity (S), Uint_0);\n-         Set_Is_Public      (Standard_Entity (S), True);\n+         Set_Ekind     (Standard_Entity (S), E_Exception);\n+         Set_Etype     (Standard_Entity (S), Standard_Exception_Type);\n+         Set_Is_Public (Standard_Entity (S), True);\n \n          Decl :=\n            Make_Exception_Declaration (Stloc,\n@@ -1590,7 +1589,6 @@ package body CStand is\n          E_Id := Standard_Entity (S_Numeric_Error);\n \n          Set_Ekind          (E_Id, E_Exception);\n-         Set_Exception_Code (E_Id, Uint_0);\n          Set_Etype          (E_Id, Standard_Exception_Type);\n          Set_Is_Public      (E_Id);\n          Set_Renamed_Entity (E_Id, Standard_Entity (S_Constraint_Error));\n@@ -1607,12 +1605,11 @@ package body CStand is\n       --  Abort_Signal is an entity that does not get made visible\n \n       Abort_Signal := New_Standard_Entity;\n-      Set_Chars          (Abort_Signal, Name_uAbort_Signal);\n-      Set_Ekind          (Abort_Signal, E_Exception);\n-      Set_Exception_Code (Abort_Signal, Uint_0);\n-      Set_Etype          (Abort_Signal, Standard_Exception_Type);\n-      Set_Scope          (Abort_Signal, Standard_Standard);\n-      Set_Is_Public      (Abort_Signal, True);\n+      Set_Chars     (Abort_Signal, Name_uAbort_Signal);\n+      Set_Ekind     (Abort_Signal, E_Exception);\n+      Set_Etype     (Abort_Signal, Standard_Exception_Type);\n+      Set_Scope     (Abort_Signal, Standard_Standard);\n+      Set_Is_Public (Abort_Signal, True);\n       Decl :=\n         Make_Exception_Declaration (Stloc,\n           Defining_Identifier => Abort_Signal);"}, {"sha": "92fdff650e23ccc75300cb303249dd6b47db430a", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 3, "deletions": 43, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -195,7 +195,6 @@ package body Einfo is\n    --    Component_Size                  Uint22\n    --    Corresponding_Remote_Type       Node22\n    --    Enumeration_Rep_Expr            Node22\n-   --    Exception_Code                  Uint22\n    --    Original_Record_Component       Node22\n    --    Private_View                    Node22\n    --    Protected_Formal                Node22\n@@ -412,8 +411,6 @@ package body Einfo is\n    --    Is_Generic_Instance             Flag130\n \n    --    No_Pool_Assigned                Flag131\n-   --    Is_AST_Entry                    Flag132\n-   --    Is_VMS_Exception                Flag133\n    --    Is_Optional_Parameter           Flag134\n    --    Has_Aliased_Components          Flag135\n    --    No_Strict_Aliasing              Flag136\n@@ -574,6 +571,9 @@ package body Einfo is\n    --    (unused)                        Flag2\n    --    (unused)                        Flag3\n \n+   --    (unused)                        Flag132\n+   --    (unused)                        Flag133\n+\n    --    (unused)                        Flag275\n    --    (unused)                        Flag276\n    --    (unused)                        Flag277\n@@ -1182,12 +1182,6 @@ package body Einfo is\n       return Uint12 (Id);\n    end Esize;\n \n-   function Exception_Code (Id : E) return Uint is\n-   begin\n-      pragma Assert (Ekind (Id) = E_Exception);\n-      return Uint22 (Id);\n-   end Exception_Code;\n-\n    function Extra_Accessibility (Id : E) return E is\n    begin\n       pragma Assert\n@@ -1901,12 +1895,6 @@ package body Einfo is\n       return Flag15 (Id);\n    end Is_Aliased;\n \n-   function Is_AST_Entry (Id : E) return B is\n-   begin\n-      pragma Assert (Is_Entry (Id));\n-      return Flag132 (Id);\n-   end Is_AST_Entry;\n-\n    function Is_Asynchronous (Id : E) return B is\n    begin\n       pragma Assert (Ekind (Id) = E_Procedure or else Is_Type (Id));\n@@ -2420,11 +2408,6 @@ package body Einfo is\n       return Flag116 (Id);\n    end Is_Visible_Lib_Unit;\n \n-   function Is_VMS_Exception (Id : E) return B is\n-   begin\n-      return Flag133 (Id);\n-   end Is_VMS_Exception;\n-\n    function Is_Volatile (Id : E) return B is\n    begin\n       pragma Assert (Nkind (Id) in N_Entity);\n@@ -3931,12 +3914,6 @@ package body Einfo is\n       Set_Uint12 (Id, V);\n    end Set_Esize;\n \n-   procedure Set_Exception_Code (Id : E; V : U) is\n-   begin\n-      pragma Assert (Ekind (Id) = E_Exception);\n-      Set_Uint22 (Id, V);\n-   end Set_Exception_Code;\n-\n    procedure Set_Extra_Accessibility (Id : E; V : E) is\n    begin\n       pragma Assert\n@@ -4677,12 +4654,6 @@ package body Einfo is\n       Set_Flag15 (Id, V);\n    end Set_Is_Aliased;\n \n-   procedure Set_Is_AST_Entry (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Is_Entry (Id));\n-      Set_Flag132 (Id, V);\n-   end Set_Is_AST_Entry;\n-\n    procedure Set_Is_Asynchronous (Id : E; V : B := True) is\n    begin\n       pragma Assert\n@@ -5227,12 +5198,6 @@ package body Einfo is\n       Set_Flag116 (Id, V);\n    end Set_Is_Visible_Lib_Unit;\n \n-   procedure Set_Is_VMS_Exception (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Ekind (Id) = E_Exception);\n-      Set_Flag133 (Id, V);\n-   end Set_Is_VMS_Exception;\n-\n    procedure Set_Is_Volatile (Id : E; V : B := True) is\n    begin\n       pragma Assert (Nkind (Id) in N_Entity);\n@@ -8353,7 +8318,6 @@ package body Einfo is\n       W (\"In_Package_Body\",                 Flag48  (Id));\n       W (\"In_Private_Part\",                 Flag45  (Id));\n       W (\"In_Use\",                          Flag8   (Id));\n-      W (\"Is_AST_Entry\",                    Flag132 (Id));\n       W (\"Is_Abstract_Subprogram\",          Flag19  (Id));\n       W (\"Is_Abstract_Type\",                Flag146  (Id));\n       W (\"Is_Local_Anonymous_Access\",       Flag194 (Id));\n@@ -8454,7 +8418,6 @@ package body Einfo is\n       W (\"Is_Unchecked_Union\",              Flag117 (Id));\n       W (\"Is_Underlying_Record_View\",       Flag246 (Id));\n       W (\"Is_Unsigned_Type\",                Flag144 (Id));\n-      W (\"Is_VMS_Exception\",                Flag133 (Id));\n       W (\"Is_Valued_Procedure\",             Flag127 (Id));\n       W (\"Is_Visible_Formal\",               Flag206 (Id));\n       W (\"Is_Visible_Lib_Unit\",             Flag116 (Id));\n@@ -9307,9 +9270,6 @@ package body Einfo is\n          when E_Enumeration_Literal                        =>\n             Write_Str (\"Enumeration_Rep_Expr\");\n \n-         when E_Exception                                  =>\n-            Write_Str (\"Exception_Code\");\n-\n          when E_Record_Type_With_Private                   |\n               E_Record_Subtype_With_Private                |\n               E_Private_Type                               |"}, {"sha": "7bb4d9c7d22a2280b9258a9c885bf62602409c2c", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -1148,13 +1148,6 @@ package Einfo is\n --       Note one obscure case: for pragma Default_Storage_Pool (null), the\n --       Etype of the N_Null node is Empty.\n \n---    Exception_Code (Uint22)\n---       Defined in exception entities. Set to zero unless either an\n---       Import_Exception or Export_Exception pragma applies to the\n---       pragma and specifies a Code value. See description of these\n---       pragmas for details. Note that this field is relevant only if\n---       Is_VMS_Exception is set.\n-\n --    Extra_Formal (Node15)\n --       Defined in formal parameters in the non-generic case. Certain\n --       parameters require extra implicit information to be passed (e.g. the\n@@ -2146,13 +2139,6 @@ package Einfo is\n --       carry the keyword aliased, and on record components that have the\n --       keyword. For Ada 2012, also applies to formal parameters.\n \n---    Is_AST_Entry (Flag132)\n---       Defined in entry entities. Set if a valid pragma AST_Entry applies\n---       to the entry. This flag can only be set in OpenVMS versions of GNAT.\n---       Note: we also allow the flag to appear in entry families, but given\n---       the current implementation of the pragma AST_Entry, this flag will\n---       always be False in entry families.\n-\n --    Is_Atomic (Flag85)\n --       Defined in all type entities, and also in constants, components and\n --       variables. Set if a pragma Atomic or Shared applies to the entity.\n@@ -3060,12 +3046,6 @@ package Einfo is\n --       a separate flag must be used to indicate whether the names are visible\n --       by selected notation, or not.\n \n---    Is_VMS_Exception (Flag133)\n---       Defined in all entities. Set only for exception entities where the\n---       exception was specified in an Import_Exception or Export_Exception\n---       pragma with the VMS option for Form. See description of these pragmas\n---       for details. This flag can only be set in OpenVMS versions of GNAT.\n-\n --    Is_Volatile (Flag16)\n --       Defined in all type entities, and also in constants, components and\n --       variables. Set if a pragma Volatile applies to the entity. Also set\n@@ -5193,7 +5173,6 @@ package Einfo is\n    --    Is_Trivial_Subprogram               (Flag235)\n    --    Is_Unchecked_Union                  (Flag117)\n    --    Is_Visible_Formal                   (Flag206)\n-   --    Is_VMS_Exception                    (Flag133)\n    --    Kill_Elaboration_Checks             (Flag32)\n    --    Kill_Range_Checks                   (Flag33)\n    --    Low_Bound_Tested                    (Flag205)\n@@ -5552,7 +5531,6 @@ package Einfo is\n    --    Contract                            (Node34)\n    --    Default_Expressions_Processed       (Flag108)\n    --    Entry_Accepted                      (Flag152)\n-   --    Is_AST_Entry                        (Flag132)  (for entry only)\n    --    Needs_No_Actuals                    (Flag22)\n    --    Sec_Stack_Needed_For_Return         (Flag167)\n    --    Uses_Sec_Stack                      (Flag95)\n@@ -5598,9 +5576,7 @@ package Einfo is\n    --    Renamed_Entity                      (Node18)\n    --    Register_Exception_Call             (Node20)\n    --    Interface_Name                      (Node21)\n-   --    Exception_Code                      (Uint22)\n    --    Discard_Names                       (Flag88)\n-   --    Is_VMS_Exception                    (Flag133)\n    --    Is_Raised                           (Flag224)\n \n    --  E_Exception_Type\n@@ -6532,7 +6508,6 @@ package Einfo is\n    function Enumeration_Rep_Expr                (Id : E) return N;\n    function Equivalent_Type                     (Id : E) return E;\n    function Esize                               (Id : E) return U;\n-   function Exception_Code                      (Id : E) return U;\n    function Extra_Accessibility                 (Id : E) return E;\n    function Extra_Accessibility_Of_Result       (Id : E) return E;\n    function Extra_Constrained                   (Id : E) return E;\n@@ -6654,7 +6629,6 @@ package Einfo is\n    function Interface_Alias                     (Id : E) return E;\n    function Interface_Name                      (Id : E) return N;\n    function Interfaces                          (Id : E) return L;\n-   function Is_AST_Entry                        (Id : E) return B;\n    function Is_Abstract_Subprogram              (Id : E) return B;\n    function Is_Abstract_Type                    (Id : E) return B;\n    function Is_Access_Constant                  (Id : E) return B;\n@@ -6749,7 +6723,6 @@ package Einfo is\n    function Is_Unchecked_Union                  (Id : E) return B;\n    function Is_Underlying_Record_View           (Id : E) return B;\n    function Is_Unsigned_Type                    (Id : E) return B;\n-   function Is_VMS_Exception                    (Id : E) return B;\n    function Is_Valued_Procedure                 (Id : E) return B;\n    function Is_Visible_Formal                   (Id : E) return B;\n    function Is_Visible_Lib_Unit                 (Id : E) return B;\n@@ -7168,7 +7141,6 @@ package Einfo is\n    procedure Set_Enumeration_Rep_Expr            (Id : E; V : N);\n    procedure Set_Equivalent_Type                 (Id : E; V : E);\n    procedure Set_Esize                           (Id : E; V : U);\n-   procedure Set_Exception_Code                  (Id : E; V : U);\n    procedure Set_Extra_Accessibility             (Id : E; V : E);\n    procedure Set_Extra_Accessibility_Of_Result   (Id : E; V : E);\n    procedure Set_Extra_Constrained               (Id : E; V : E);\n@@ -7289,7 +7261,6 @@ package Einfo is\n    procedure Set_Interface_Alias                 (Id : E; V : E);\n    procedure Set_Interface_Name                  (Id : E; V : N);\n    procedure Set_Interfaces                      (Id : E; V : L);\n-   procedure Set_Is_AST_Entry                    (Id : E; V : B := True);\n    procedure Set_Is_Abstract_Subprogram          (Id : E; V : B := True);\n    procedure Set_Is_Abstract_Type                (Id : E; V : B := True);\n    procedure Set_Is_Access_Constant              (Id : E; V : B := True);\n@@ -7390,7 +7361,6 @@ package Einfo is\n    procedure Set_Is_Unchecked_Union              (Id : E; V : B := True);\n    procedure Set_Is_Underlying_Record_View       (Id : E; V : B := True);\n    procedure Set_Is_Unsigned_Type                (Id : E; V : B := True);\n-   procedure Set_Is_VMS_Exception                (Id : E; V : B := True);\n    procedure Set_Is_Valued_Procedure             (Id : E; V : B := True);\n    procedure Set_Is_Visible_Formal               (Id : E; V : B := True);\n    procedure Set_Is_Visible_Lib_Unit             (Id : E; V : B := True);\n@@ -7918,7 +7888,6 @@ package Einfo is\n    pragma Inline (Enumeration_Rep_Expr);\n    pragma Inline (Equivalent_Type);\n    pragma Inline (Esize);\n-   pragma Inline (Exception_Code);\n    pragma Inline (Extra_Accessibility);\n    pragma Inline (Extra_Accessibility_Of_Result);\n    pragma Inline (Extra_Constrained);\n@@ -8036,7 +8005,6 @@ package Einfo is\n    pragma Inline (Interface_Alias);\n    pragma Inline (Interface_Name);\n    pragma Inline (Interfaces);\n-   pragma Inline (Is_AST_Entry);\n    pragma Inline (Is_Abstract_Subprogram);\n    pragma Inline (Is_Abstract_Type);\n    pragma Inline (Is_Access_Constant);\n@@ -8178,7 +8146,6 @@ package Einfo is\n    pragma Inline (Is_Unchecked_Union);\n    pragma Inline (Is_Underlying_Record_View);\n    pragma Inline (Is_Unsigned_Type);\n-   pragma Inline (Is_VMS_Exception);\n    pragma Inline (Is_Valued_Procedure);\n    pragma Inline (Is_Visible_Formal);\n    pragma Inline (Is_Visible_Lib_Unit);\n@@ -8400,7 +8367,6 @@ package Einfo is\n    pragma Inline (Set_Enumeration_Rep_Expr);\n    pragma Inline (Set_Equivalent_Type);\n    pragma Inline (Set_Esize);\n-   pragma Inline (Set_Exception_Code);\n    pragma Inline (Set_Extra_Accessibility);\n    pragma Inline (Set_Extra_Accessibility_Of_Result);\n    pragma Inline (Set_Extra_Constrained);\n@@ -8518,7 +8484,6 @@ package Einfo is\n    pragma Inline (Set_Interface_Alias);\n    pragma Inline (Set_Interface_Name);\n    pragma Inline (Set_Interfaces);\n-   pragma Inline (Set_Is_AST_Entry);\n    pragma Inline (Set_Is_Abstract_Subprogram);\n    pragma Inline (Set_Is_Abstract_Type);\n    pragma Inline (Set_Is_Access_Constant);\n@@ -8619,7 +8584,6 @@ package Einfo is\n    pragma Inline (Set_Is_Unchecked_Union);\n    pragma Inline (Set_Is_Underlying_Record_View);\n    pragma Inline (Set_Is_Unsigned_Type);\n-   pragma Inline (Set_Is_VMS_Exception);\n    pragma Inline (Set_Is_Valued_Procedure);\n    pragma Inline (Set_Is_Visible_Formal);\n    pragma Inline (Set_Is_Visible_Lib_Unit);"}, {"sha": "aafa2b4fdb60a4f8218e71310e0b20f5c3c4679d", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 10, "deletions": 53, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -24,7 +24,6 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n-with Casing;   use Casing;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n@@ -1685,59 +1684,17 @@ package body Exp_Ch11 is\n \n             Str := String_From_Name_Buffer;\n \n-            --  For VMS exceptions, convert the raise into a call to\n-            --  lib$stop so it will be handled by __gnat_error_handler.\n+            --  Convert raise to call to the Raise_Exception routine\n \n-            if Is_VMS_Exception (Id) then\n-               declare\n-                  Excep_Image : String_Id;\n-                  Cond        : Node_Id;\n-\n-               begin\n-                  if Present (Interface_Name (Id)) then\n-                     Excep_Image := Strval (Interface_Name (Id));\n-                  else\n-                     Get_Name_String (Chars (Id));\n-                     Set_All_Upper_Case;\n-                     Excep_Image := String_From_Name_Buffer;\n-                  end if;\n-\n-                  if Exception_Code (Id) /= No_Uint then\n-                     Cond :=\n-                       Make_Integer_Literal (Loc, Exception_Code (Id));\n-                  else\n-                     Cond :=\n-                       Unchecked_Convert_To (Standard_Integer,\n-                         Make_Function_Call (Loc,\n-                           Name => New_Occurrence_Of\n-                             (RTE (RE_Import_Value), Loc),\n-                           Parameter_Associations => New_List\n-                             (Make_String_Literal (Loc,\n-                               Strval => Excep_Image))));\n-                  end if;\n-\n-                  Rewrite (N,\n-                    Make_Procedure_Call_Statement (Loc,\n-                      Name =>\n-                        New_Occurrence_Of (RTE (RE_Lib_Stop), Loc),\n-                      Parameter_Associations => New_List (Cond)));\n-                        Analyze_And_Resolve (Cond, Standard_Integer);\n-               end;\n-\n-            --  Not VMS exception case, convert raise to call to the\n-            --  Raise_Exception routine.\n-\n-            else\n-               Rewrite (N,\n-                 Make_Procedure_Call_Statement (Loc,\n-                    Name => New_Occurrence_Of (RTE (RE_Raise_Exception), Loc),\n-                    Parameter_Associations => New_List (\n-                      Make_Attribute_Reference (Loc,\n-                        Prefix => Name (N),\n-                        Attribute_Name => Name_Identity),\n-                      Make_String_Literal (Loc,\n-                        Strval => Str))));\n-            end if;\n+            Rewrite (N,\n+              Make_Procedure_Call_Statement (Loc,\n+                 Name                   =>\n+                   New_Occurrence_Of (RTE (RE_Raise_Exception), Loc),\n+                 Parameter_Associations => New_List (\n+                   Make_Attribute_Reference (Loc,\n+                     Prefix         => Name (N),\n+                     Attribute_Name => Name_Identity),\n+                   Make_String_Literal (Loc, Strval => Str))));\n          end;\n \n       --  Case of no name present (reraise). We rewrite the raise to:"}, {"sha": "dca3ec1877672a626312c7fa232644bdadd2d695", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -42,7 +42,6 @@ with Exp_Intr; use Exp_Intr;\n with Exp_Pakd; use Exp_Pakd;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n-with Exp_VFpt; use Exp_VFpt;\n with Freeze;   use Freeze;\n with Inline;   use Inline;\n with Lib;      use Lib;\n@@ -6446,12 +6445,6 @@ package body Exp_Ch4 is\n                      Attribute_Name => Name_First)),\n              Reason => CE_Overflow_Check_Failed));\n       end if;\n-\n-      --  Vax floating-point types case\n-\n-      if Vax_Float (Etype (N)) then\n-         Expand_Vax_Arith (N);\n-      end if;\n    end Expand_N_Op_Abs;\n \n    ---------------------\n@@ -6493,11 +6486,6 @@ package body Exp_Ch4 is\n       if Is_Signed_Integer_Type (Typ) or else Is_Fixed_Point_Type (Typ) then\n          Apply_Arithmetic_Overflow_Check (N);\n          return;\n-\n-      --  Vax floating-point types case\n-\n-      elsif Vax_Float (Typ) then\n-         Expand_Vax_Arith (N);\n       end if;\n    end Expand_N_Op_Add;\n \n@@ -6706,12 +6694,6 @@ package body Exp_Ch4 is\n \n       elsif Is_Integer_Type (Typ) then\n          Apply_Divide_Checks (N);\n-\n-      --  Deal with Vax_Float\n-\n-      elsif Vax_Float (Typ) then\n-         Expand_Vax_Arith (N);\n-         return;\n       end if;\n    end Expand_N_Op_Divide;\n \n@@ -7432,13 +7414,6 @@ package body Exp_Ch4 is\n \n       Rewrite_Comparison (N);\n \n-      --  If we still have comparison for Vax_Float, process it\n-\n-      if Vax_Float (Typl) and then Nkind (N) in N_Op_Compare  then\n-         Expand_Vax_Comparison (N);\n-         return;\n-      end if;\n-\n       Optimize_Length_Comparison (N);\n    end Expand_N_Op_Eq;\n \n@@ -7843,13 +7818,6 @@ package body Exp_Ch4 is\n \n       Rewrite_Comparison (N);\n \n-      --  If we still have comparison, and Vax_Float type, process it\n-\n-      if Vax_Float (Typ1) and then Nkind (N) in N_Op_Compare then\n-         Expand_Vax_Comparison (N);\n-         return;\n-      end if;\n-\n       Optimize_Length_Comparison (N);\n    end Expand_N_Op_Ge;\n \n@@ -7893,13 +7861,6 @@ package body Exp_Ch4 is\n \n       Rewrite_Comparison (N);\n \n-      --  If we still have comparison, and Vax_Float type, process it\n-\n-      if Vax_Float (Typ1) and then Nkind (N) in N_Op_Compare then\n-         Expand_Vax_Comparison (N);\n-         return;\n-      end if;\n-\n       Optimize_Length_Comparison (N);\n    end Expand_N_Op_Gt;\n \n@@ -7943,13 +7904,6 @@ package body Exp_Ch4 is\n \n       Rewrite_Comparison (N);\n \n-      --  If we still have comparison, and Vax_Float type, process it\n-\n-      if Vax_Float (Typ1) and then Nkind (N) in N_Op_Compare then\n-         Expand_Vax_Comparison (N);\n-         return;\n-      end if;\n-\n       Optimize_Length_Comparison (N);\n    end Expand_N_Op_Le;\n \n@@ -7993,13 +7947,6 @@ package body Exp_Ch4 is\n \n       Rewrite_Comparison (N);\n \n-      --  If we still have comparison, and Vax_Float type, process it\n-\n-      if Vax_Float (Typ1) and then Nkind (N) in N_Op_Compare then\n-         Expand_Vax_Comparison (N);\n-         return;\n-      end if;\n-\n       Optimize_Length_Comparison (N);\n    end Expand_N_Op_Lt;\n \n@@ -8033,11 +7980,6 @@ package body Exp_Ch4 is\n              Right_Opnd => Right_Opnd (N)));\n \n          Analyze_And_Resolve (N, Typ);\n-\n-      --  Vax floating-point types case\n-\n-      elsif Vax_Float (Etype (N)) then\n-         Expand_Vax_Arith (N);\n       end if;\n    end Expand_N_Op_Minus;\n \n@@ -8510,12 +8452,6 @@ package body Exp_Ch4 is\n \n       elsif Is_Signed_Integer_Type (Etype (N)) then\n          Apply_Arithmetic_Overflow_Check (N);\n-\n-      --  Deal with VAX float case\n-\n-      elsif Vax_Float (Typ) then\n-         Expand_Vax_Arith (N);\n-         return;\n       end if;\n    end Expand_N_Op_Multiply;\n \n@@ -8554,13 +8490,6 @@ package body Exp_Ch4 is\n \n          Rewrite_Comparison (N);\n \n-         --  If we still have comparison for Vax_Float, process it\n-\n-         if Vax_Float (Typ) and then Nkind (N) in N_Op_Compare  then\n-            Expand_Vax_Comparison (N);\n-            return;\n-         end if;\n-\n       --  For all cases other than elementary types, we rewrite node as the\n       --  negation of an equality operation, and reanalyze. The equality to be\n       --  used is defined in the same scope and has the same signature. This\n@@ -9290,11 +9219,6 @@ package body Exp_Ch4 is\n \n       if Is_Signed_Integer_Type (Typ) or else Is_Fixed_Point_Type (Typ) then\n          Apply_Arithmetic_Overflow_Check (N);\n-\n-      --  VAX floating-point types case\n-\n-      elsif Vax_Float (Typ) then\n-         Expand_Vax_Arith (N);\n       end if;\n    end Expand_N_Op_Subtract;\n \n@@ -11009,16 +10933,6 @@ package body Exp_Ch4 is\n          end;\n       end if;\n \n-      --  Final step, if the result is a type conversion involving Vax_Float\n-      --  types, then it is subject for further special processing.\n-\n-      if Nkind (N) = N_Type_Conversion\n-        and then (Vax_Float (Operand_Type) or else Vax_Float (Target_Type))\n-      then\n-         Expand_Vax_Conversion (N);\n-         goto Done;\n-      end if;\n-\n       --  Here at end of processing\n \n    <<Done>>"}, {"sha": "c5a8b83a7b46778c56203044c5b2b1eecc08abee", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 8, "deletions": 24, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -43,7 +43,6 @@ with Exp_Pakd; use Exp_Pakd;\n with Exp_Prag; use Exp_Prag;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n-with Exp_VFpt; use Exp_VFpt;\n with Fname;    use Fname;\n with Freeze;   use Freeze;\n with Inline;   use Inline;\n@@ -3926,19 +3925,19 @@ package body Exp_Ch6 is\n          --  Back end inlining: let the back end handle it\n \n          elsif No (Unit_Declaration_Node (Subp))\n-           or else\n-             Nkind (Unit_Declaration_Node (Subp)) /= N_Subprogram_Declaration\n-           or else\n-             No (Body_To_Inline (Unit_Declaration_Node (Subp)))\n+           or else Nkind (Unit_Declaration_Node (Subp)) /=\n+                                                 N_Subprogram_Declaration\n+           or else No (Body_To_Inline (Unit_Declaration_Node (Subp)))\n          then\n             Add_Inlined_Body (Subp);\n             Register_Backend_Call (Call_Node);\n \n-         --  Frontend expansion of supported functions returning unconstrained\n-         --  types\n+         --  Frontend expands supported functions returning unconstrained types\n+\n+         else\n+            pragma Assert (Ekind (Subp) = E_Function\n+              and then Returns_Unconstrained_Type (Subp));\n \n-         else pragma Assert (Ekind (Subp) = E_Function\n-                               and then Returns_Unconstrained_Type (Subp));\n             declare\n                Spec : constant Node_Id := Unit_Declaration_Node (Subp);\n \n@@ -5201,21 +5200,6 @@ package body Exp_Ch6 is\n    procedure Expand_N_Function_Call (N : Node_Id) is\n    begin\n       Expand_Call (N);\n-\n-      --  If the return value of a foreign compiled function is VAX Float, then\n-      --  expand the return (adjusts the location of the return value on\n-      --  Alpha/VMS, no-op everywhere else).\n-      --  Comes_From_Source intercepts recursive expansion.\n-\n-      if Nkind (N) = N_Function_Call\n-        and then Vax_Float (Etype (N))\n-        and then Present (Name (N))\n-        and then Present (Entity (Name (N)))\n-        and then Has_Foreign_Convention (Entity (Name (N)))\n-        and then Comes_From_Source (Parent (N))\n-      then\n-         Expand_Vax_Foreign_Return (N);\n-      end if;\n    end Expand_N_Function_Call;\n \n    ---------------------------------------"}, {"sha": "c76affaf29144eaa8af2a7b796ea0ac293045492", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -154,11 +154,6 @@ extern void Get_External_Name\t(Entity_Id, Boolean, String_Pointer);\n \n extern Boolean Is_Fully_Repped_Tagged_Type      (Entity_Id);\n \n-/* exp_vfpt: */\n-\n-#define Get_Vax_Real_Literal_As_Signed exp_vfpt__get_vax_real_literal_as_signed\n-extern Ureal Get_Vax_Real_Literal_As_Signed (Node_Id);\n-\n /* lib: */\n \n #define Cunit \t\t\t\tlib__cunit"}, {"sha": "c638c4551b5253aae9c03b2025c0e1a9fc6601ae", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -255,23 +255,22 @@ procedure Gnatchop is\n    procedure Parse_Offset_Info\n      (Chop_File : File_Num;\n       Source    : not null access String);\n-   --  Parses the output of the compiler indicating the offsets\n-   --  and names of the compilation units in Chop_File.\n+   --  Parses the output of the compiler indicating the offsets and names of\n+   --  the compilation units in Chop_File.\n \n    procedure Parse_Token\n      (Source    : not null access String;\n       Ptr       : in out Positive;\n       Token_Ptr : out Positive);\n    --  Skips any separators and stores the start of the token in Token_Ptr.\n-   --  Then stores the position of the next separator in Ptr.\n-   --  On return Source (Token_Ptr .. Ptr - 1) is the token.\n+   --  Then stores the position of the next separator in Ptr. On return\n+   --  Source (Token_Ptr .. Ptr - 1) is the token.\n \n    procedure Read_File\n      (FD       : File_Descriptor;\n       Contents : out String_Access;\n       Success  : out Boolean);\n-   --  Reads file associated with FS into the newly allocated\n-   --  string Contents.\n+   --  Reads file associated with FS into the newly allocated string Contents.\n    --  Success is true iff the number of bytes read is equal to the file size.\n \n    function Report_Duplicate_Units return Boolean;\n@@ -293,17 +292,17 @@ procedure Gnatchop is\n    --  Write all units that result from chopping the Input file\n \n    procedure Write_Config_File (Input : File_Num; U : Unit_Num);\n-   --  Call to write configuration pragmas (append them to gnat.adc)\n-   --  Input is the file number for the chop file and U identifies the\n-   --  unit entry for the configuration pragmas.\n+   --  Call to write configuration pragmas (append them to gnat.adc). Input is\n+   --  the file number for the chop file and U identifies the unit entry for\n+   --  the configuration pragmas.\n \n    function Get_Config_Pragmas\n      (Input : File_Num;\n       U     : Unit_Num) return String_Access;\n-   --  Call to read configuration pragmas from given unit entry, and\n-   --  return a buffer containing the pragmas to be appended to\n-   --  following units. Input is the file number for the chop file and\n-   --  U identifies the unit entry for the configuration pragmas.\n+   --  Call to read configuration pragmas from given unit entry, and return a\n+   --  buffer containing the pragmas to be appended to following units. Input\n+   --  is the file number for the chop file and U identifies the unit entry for\n+   --  the configuration pragmas.\n \n    procedure Write_Source_Reference_Pragma\n      (Info    : Unit_Info;"}, {"sha": "104d335afa70708285c852c4ef41c2e7c3919412", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -191,7 +191,7 @@ procedure GNATCmd is\n    --  The index of the command in the arguments of the GNAT driver\n \n    My_Exit_Status : Exit_Status := Success;\n-   --  The exit status of the spawned tool.\n+   --  The exit status of the spawned tool\n \n    Current_Work_Dir : constant String := Get_Current_Dir;\n    --  The path of the working directory\n@@ -1429,6 +1429,7 @@ begin\n \n    declare\n       Command : constant String := Command_Name;\n+\n    begin\n       for Index in reverse Command'Range loop\n          if Command (Index) = Directory_Separator then"}, {"sha": "07815d0d5b5c3c5325da1b5c304f3390c00f3488", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -150,9 +150,9 @@ procedure Gnatls is\n       Stamp    : Time_Stamp_Type;\n       Checksum : Word;\n       Status   : out File_Status);\n-   --  Determine the file status (Status) of the file represented by FS\n-   --  with the expected Stamp and checksum given as argument. FS will be\n-   --  updated to the full file name if available.\n+   --  Determine the file status (Status) of the file represented by FS with\n+   --  the expected Stamp and checksum given as argument. FS will be updated\n+   --  to the full file name if available.\n \n    function Corresponding_Sdep_Entry (A : ALI_Id; U : Unit_Id) return Sdep_Id;\n    --  Give the Sdep entry corresponding to the unit U in ali record A\n@@ -175,7 +175,7 @@ procedure Gnatls is\n    --  Reset Print flags properly when selective output is chosen\n \n    procedure Scan_Ls_Arg (Argv : String);\n-   --  Scan and process lser specific arguments. Argv is a single argument\n+   --  Scan and process user specific arguments (Argv is a single argument)\n \n    procedure Search_RTS (Name : String);\n    --  Find include and objects path for the RTS name.\n@@ -184,16 +184,14 @@ procedure Gnatls is\n    --  Print usage message\n \n    procedure Output_License_Information;\n-   --  Output license statement, and if not found, output reference to\n-   --  COPYING.\n+   --  Output license statement, and if not found, output reference to COPYING\n \n    function Image (Restriction : Restriction_Id) return String;\n    --  Returns the capitalized image of Restriction\n \n    function Normalize (Path : String) return String;\n-   --  Returns a normalized path name.\n-   --  On Windows, the directory separators are set to '\\' in\n-   --  Normalize_Pathname.\n+   --  Returns a normalized path name. On Windows, the directory separators are\n+   --  set to '\\' in Normalize_Pathname.\n \n    ------------------------------------------\n    -- GNATDIST specific output subprograms --"}, {"sha": "82f32747948b71ca36d2ef93a2f3bcf6dcd6451b", "filename": "gcc/ada/gnatname.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fgnatname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fgnatname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatname.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -551,6 +551,7 @@ begin\n \n    declare\n       Command : constant String := Command_Name;\n+\n    begin\n       for Index in reverse Command'Range loop\n          if Command (Index) = Directory_Separator then\n@@ -579,12 +580,12 @@ begin\n    declare\n       New_Arguments : Argument_Data;\n       pragma Warnings (Off, New_Arguments);\n-      --  Declaring this defaulted initialized object ensures\n-      --  that the new allocated component of table Arguments\n-      --  is correctly initialized.\n+      --  Declaring this defaulted initialized object ensures that the new\n+      --  allocated component of table Arguments is correctly initialized.\n    begin\n       Arguments.Append (New_Arguments);\n    end;\n+\n    Patterns.Init (Arguments.Table (1).Directories);\n    Patterns.Set_Last (Arguments.Table (1).Directories, 0);\n    Patterns.Init (Arguments.Table (1).Name_Patterns);"}, {"sha": "b133cc4100dabf8382a8fd2d5e12af1ac5873716", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -165,10 +165,10 @@ package body Inline is\n \n    function Has_Single_Return (N : Node_Id) return Boolean;\n    --  In general we cannot inline functions that return unconstrained type.\n-   --  However, we can handle such functions if all return statements return\n-   --  a local variable that is the only declaration in the body of the\n-   --  function. In that case the call can be replaced by that local\n-   --  variable as is done for other inlined calls.\n+   --  However, we can handle such functions if all return statements return a\n+   --  local variable that is the only declaration in the body of the function.\n+   --  In that case the call can be replaced by that local variable as is done\n+   --  for other inlined calls.\n \n    function In_Main_Unit_Or_Subunit (E : Entity_Id) return Boolean;\n    --  Return True if E is in the main unit or its spec or in a subunit\n@@ -429,7 +429,7 @@ package body Inline is\n \n       procedure Register_Backend_Not_Inlined_Subprogram (Subp : Entity_Id);\n       --  Append Subp to the list of subprograms that cannot be inlined by\n-      --  the backend\n+      --  the backend.\n \n       ----------------------------\n       -- Back_End_Cannot_Inline --\n@@ -3332,7 +3332,7 @@ package body Inline is\n             --  expanded into a procedure call which must be added after the\n             --  object declaration.\n \n-            if Is_Unc_Decl and then Back_End_Inlining then\n+            if Is_Unc_Decl and Back_End_Inlining then\n                Insert_Action_After (Parent (N), Blk);\n             else\n                Set_Expression (Parent (N), Empty);\n@@ -4329,9 +4329,9 @@ package body Inline is\n       return False;\n    end Has_Initialized_Type;\n \n-   ------------------------\n-   --  Has_Single_Return --\n-   ------------------------\n+   -----------------------\n+   -- Has_Single_Return --\n+   -----------------------\n \n    function Has_Single_Return (N : Node_Id) return Boolean is\n       Return_Statement : Node_Id := Empty;\n@@ -4376,8 +4376,8 @@ package body Inline is\n                return Abandon;\n             end if;\n \n-         --  We can only inline a build-in-place function if\n-         --  it has a single extended return.\n+         --  We can only inline a build-in-place function if it has a single\n+         --  extended return.\n \n          elsif Nkind (N) = N_Extended_Return_Statement then\n             if No (Return_Statement) then\n@@ -4572,6 +4572,8 @@ package body Inline is\n    -- Number_Of_Statements --\n    --------------------------\n \n+   --  Why not List_Length???\n+\n    function Number_Of_Statements (Stats : List_Id) return Natural is\n       Stat_Count : Integer := 0;\n       Stmt       : Node_Id;"}, {"sha": "edab7833f4a41211ab98546b7f2d086447f5c9f1", "filename": "gcc/ada/inline.ads", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Finline.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Finline.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.ads?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -131,6 +131,9 @@ package Inline is\n      Table_Increment      => Alloc.Pending_Instantiations_Increment,\n      Table_Name           => \"Pending_Descriptor\");\n \n+   --  The following should be initialized in an init call in Frontend, we\n+   --  have thoughts of making the frontend reusable in future ???\n+\n    Inlined_Calls : Elist_Id := No_Elist;\n    --  List of frontend inlined calls\n \n@@ -242,13 +245,14 @@ package Inline is\n    function Has_Excluded_Declaration\n      (Subp  : Entity_Id;\n       Decls : List_Id) return Boolean;\n-   --  Check for declarations that make inlining not worthwhile inlining Subp\n+   --  Check a list of declarations, Decls, that make the inlining of Subp not\n+   --  worthwhile\n \n    function Has_Excluded_Statement\n      (Subp  : Entity_Id;\n       Stats : List_Id) return Boolean;\n-   --  Check for statements that make inlining not worthwhile: any tasking\n-   --  statement, nested at any level.\n+   --  Check a list of statements, Stats, that make inlining of Subp not\n+   --  worthwhile, including any tasking statement, nested at any level.\n \n    procedure Register_Backend_Call (N : Node_Id);\n    --  Append N to the list Backend_Calls"}, {"sha": "a56acc06ed3bbacbeeb694e4465150e4a09b3bbf", "filename": "gcc/ada/krunch.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fkrunch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fkrunch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fkrunch.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -257,5 +257,4 @@ begin\n    end loop;\n \n    return;\n-\n end Krunch;"}, {"sha": "c194bc760b0a84d403742f21d9bdca4f284a80ce", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -2257,6 +2257,7 @@ package body Make is\n       Args           : Argument_List)\n    is\n       pragma Unreferenced (Is_Main_Source);\n+\n    begin\n       Arguments_Project := No_Project;\n       Last_Argument := 0;\n@@ -6413,8 +6414,8 @@ package body Make is\n          if Prefix'Length > 0 then\n             declare\n                PATH : constant String :=\n-                 Prefix & Directory_Separator & \"bin\" & Path_Separator &\n-                   Getenv (\"PATH\").all;\n+                        Prefix & Directory_Separator & \"bin\" & Path_Separator\n+                        & Getenv (\"PATH\").all;\n             begin\n                Setenv (\"PATH\", PATH);\n             end;"}, {"sha": "a4799bb99f63d3ccbdc9bc6d94e9552a9d25085e", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -498,6 +498,7 @@ package body MLib.Prj is\n \n       begin\n          if Libgnarl_Needed /= Yes then\n+\n             --  Scan the ALI file\n \n             Name_Len := ALI_File'Length;"}, {"sha": "e370fa48de9962efd8f48d7ca5263b8b67ff999e", "filename": "gcc/ada/mlib.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fmlib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fmlib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib.ads?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -89,8 +89,7 @@ package MLib is\n    --  for each directory in the rpath.\n \n private\n-\n    Preserve : Attribute := Time_Stamps;\n-   --  Used by Copy_ALI_Files.\n+   --  Used by Copy_ALI_Files\n \n end MLib;"}, {"sha": "c0b25cc47f75b70b71c46b6743f179644ae39c86", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -1078,10 +1078,12 @@ package body Osint is\n          N : C_File_Name;\n          A : System.Address) return size_t;\n       pragma Import (C, Internal, \"__gnat_file_length_attr\");\n+\n    begin\n       --  The conversion from size_t to Long_Integer is ok here as this\n       --  routine is only to be used by the compiler and we do not expect\n       --  a unit to be larger than a 32bit integer.\n+\n       return Long_Integer (Internal (-1, Name, Attr.all'Address));\n    end File_Length;\n "}, {"sha": "21c94bddb9bfebc613913f544784f0842f926365", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -46,7 +46,6 @@ with Sem_Util; use Sem_Util;\n with Sem_Warn; use Sem_Warn;\n with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n-with Uintp;    use Uintp;\n \n package body Sem_Ch11 is\n \n@@ -61,7 +60,6 @@ package body Sem_Ch11 is\n       Generate_Definition         (Id);\n       Enter_Name                  (Id);\n       Set_Ekind                   (Id, E_Exception);\n-      Set_Exception_Code          (Id, Uint_0);\n       Set_Etype                   (Id, Standard_Exception_Type);\n       Set_Is_Statically_Allocated (Id);\n       Set_Is_Pure                 (Id, PF);"}, {"sha": "498aafade58b78536ce29eb575519deb3cca18e0", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -3571,7 +3571,7 @@ package body Sem_Ch6 is\n \n          if not Back_End_Inlining then\n             if Has_Pragma_Inline_Always (Spec_Id)\n-                 or else (Has_Pragma_Inline (Spec_Id) and Front_End_Inlining)\n+              or else (Has_Pragma_Inline (Spec_Id) and Front_End_Inlining)\n             then\n                Build_Body_To_Inline (N, Spec_Id);\n             end if;"}, {"sha": "f2c79d29296e8f2f8d957bc8f0e60559a6e0902c", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -558,7 +558,6 @@ package body Sem_Ch8 is\n       Analyze (Nam);\n \n       Set_Ekind          (Id, E_Exception);\n-      Set_Exception_Code (Id, Uint_0);\n       Set_Etype          (Id, Standard_Exception_Type);\n       Set_Is_Pure        (Id, Is_Pure (Current_Scope));\n "}, {"sha": "be7eff31cb1ad9907dc2aa1f259660980e50c3dd", "filename": "gcc/ada/sem_mech.adb", "status": "modified", "additions": 5, "deletions": 153, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_mech.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_mech.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_mech.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,10 +27,8 @@ with Atree;    use Atree;\n with Einfo;    use Einfo;\n with Errout;   use Errout;\n with Namet;    use Namet;\n-with Nlists;   use Nlists;\n with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n-with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Snames;   use Snames;\n with Stand;    use Stand;\n@@ -43,19 +41,13 @@ package body Sem_Mech is\n    -------------------------\n \n    procedure Set_Mechanism_Value (Ent : Entity_Id; Mech_Name : Node_Id) is\n-      Class : Node_Id;\n-      Param : Node_Id;\n-\n-      procedure Bad_Class;\n-      --  Signal bad descriptor class name\n \n       procedure Bad_Mechanism;\n       --  Signal bad mechanism name\n \n-      procedure Bad_Class is\n-      begin\n-         Error_Msg_N (\"unrecognized descriptor class name\", Class);\n-      end Bad_Class;\n+      -------------------\n+      -- Bad_Mechanism --\n+      -------------------\n \n       procedure Bad_Mechanism is\n       begin\n@@ -70,165 +62,25 @@ package body Sem_Mech is\n            (\"mechanism for & has already been set\", Mech_Name, Ent);\n       end if;\n \n-      --  MECHANISM_NAME ::= value | reference | descriptor | short_descriptor\n+      --  MECHANISM_NAME ::= value | reference\n \n       if Nkind (Mech_Name) = N_Identifier then\n          if Chars (Mech_Name) = Name_Value then\n             Set_Mechanism_With_Checks (Ent, By_Copy, Mech_Name);\n-            return;\n \n          elsif Chars (Mech_Name) = Name_Reference then\n             Set_Mechanism_With_Checks (Ent, By_Reference, Mech_Name);\n-            return;\n-\n-         elsif Chars (Mech_Name) = Name_Descriptor then\n-            Check_VMS (Mech_Name);\n-            Set_Mechanism_With_Checks (Ent, By_Descriptor, Mech_Name);\n-            return;\n-\n-         elsif Chars (Mech_Name) = Name_Short_Descriptor then\n-            Check_VMS (Mech_Name);\n-            Set_Mechanism_With_Checks (Ent, By_Short_Descriptor, Mech_Name);\n-            return;\n \n          elsif Chars (Mech_Name) = Name_Copy then\n             Error_Msg_N (\"bad mechanism name, Value assumed\", Mech_Name);\n             Set_Mechanism (Ent, By_Copy);\n \n          else\n             Bad_Mechanism;\n-            return;\n-         end if;\n-\n-      --  MECHANISM_NAME ::= descriptor (CLASS_NAME) |\n-      --                     short_descriptor (CLASS_NAME)\n-      --  CLASS_NAME     ::= ubs | ubsb | uba | s | sb | a | nca\n-\n-      --  Note: this form is parsed as an indexed component\n-\n-      elsif Nkind (Mech_Name) = N_Indexed_Component then\n-         Class := First (Expressions (Mech_Name));\n-\n-         if Nkind (Prefix (Mech_Name)) /= N_Identifier\n-           or else\n-             not Nam_In (Chars (Prefix (Mech_Name)), Name_Descriptor,\n-                                                     Name_Short_Descriptor)\n-           or else Present (Next (Class))\n-         then\n-            Bad_Mechanism;\n-            return;\n-         end if;\n-\n-      --  MECHANISM_NAME ::= descriptor (Class => CLASS_NAME) |\n-      --                     short_descriptor (Class => CLASS_NAME)\n-      --  CLASS_NAME     ::= ubs | ubsb | uba | s | sb | a | nca\n-\n-      --  Note: this form is parsed as a function call\n-\n-      elsif Nkind (Mech_Name) = N_Function_Call then\n-\n-         Param := First (Parameter_Associations (Mech_Name));\n-\n-         if Nkind (Name (Mech_Name)) /= N_Identifier\n-           or else\n-             not Nam_In (Chars (Name (Mech_Name)), Name_Descriptor,\n-                                                   Name_Short_Descriptor)\n-           or else Present (Next (Param))\n-           or else No (Selector_Name (Param))\n-           or else Chars (Selector_Name (Param)) /= Name_Class\n-         then\n-            Bad_Mechanism;\n-            return;\n-         else\n-            Class := Explicit_Actual_Parameter (Param);\n          end if;\n \n       else\n          Bad_Mechanism;\n-         return;\n-      end if;\n-\n-      --  Fall through here with Class set to descriptor class name\n-\n-      Check_VMS (Mech_Name);\n-\n-      if Nkind (Class) /= N_Identifier then\n-         Bad_Class;\n-         return;\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Descriptor\n-        and then Chars (Class) = Name_UBS\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Descriptor_UBS,  Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Descriptor\n-        and then Chars (Class) = Name_UBSB\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Descriptor_UBSB, Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Descriptor\n-        and then Chars (Class) = Name_UBA\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Descriptor_UBA,  Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Descriptor\n-        and then Chars (Class) = Name_S\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Descriptor_S,    Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Descriptor\n-        and then Chars (Class) = Name_SB\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Descriptor_SB,   Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Descriptor\n-        and then Chars (Class) = Name_A\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Descriptor_A,    Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Descriptor\n-        and then Chars (Class) = Name_NCA\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Descriptor_NCA,  Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Short_Descriptor\n-        and then Chars (Class) = Name_UBS\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Short_Descriptor_UBS,  Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Short_Descriptor\n-        and then Chars (Class) = Name_UBSB\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Short_Descriptor_UBSB, Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Short_Descriptor\n-        and then Chars (Class) = Name_UBA\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Short_Descriptor_UBA,  Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Short_Descriptor\n-        and then Chars (Class) = Name_S\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Short_Descriptor_S,    Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Short_Descriptor\n-        and then Chars (Class) = Name_SB\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Short_Descriptor_SB,   Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Short_Descriptor\n-        and then Chars (Class) = Name_A\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Short_Descriptor_A,    Mech_Name);\n-\n-      elsif Chars (Name (Mech_Name)) = Name_Short_Descriptor\n-        and then Chars (Class) = Name_NCA\n-      then\n-         Set_Mechanism_With_Checks (Ent, By_Short_Descriptor_NCA,  Mech_Name);\n-\n-      else\n-         Bad_Class;\n-         return;\n       end if;\n    end Set_Mechanism_Value;\n "}, {"sha": "204ae5fc6a43e8f1123091665a25b6817d6d81fe", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -2986,18 +2986,6 @@ package body Sem_Util is\n       end if;\n    end Check_Unprotected_Access;\n \n-   ---------------\n-   -- Check_VMS --\n-   ---------------\n-\n-   procedure Check_VMS (Construct : Node_Id) is\n-   begin\n-      if not OpenVMS_On_Target then\n-         Error_Msg_N\n-           (\"this construct is allowed only in Open'V'M'S\", Construct);\n-      end if;\n-   end Check_VMS;\n-\n    ------------------------\n    -- Collect_Interfaces --\n    ------------------------"}, {"sha": "e59cc892e25bf588ccdb3d8b879f0e515a3676c3", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -319,12 +319,6 @@ package Sem_Util is\n    --  and the context is external to the protected operation, to warn against\n    --  a possible unlocked access to data.\n \n-   procedure Check_VMS (Construct : Node_Id);\n-   --  Check that this the target is OpenVMS, and if so, return with no effect,\n-   --  otherwise post an error noting this can only be used with OpenVMS ports.\n-   --  The argument is the construct in question and is used to post the error\n-   --  message.\n-\n    procedure Collect_Interfaces\n      (T               : Entity_Id;\n       Ifaces_List     : out Elist_Id;"}, {"sha": "0b9220d381c9ebfb16fdf100e03e4fb7badfb482", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0c8cfb98bc575325f35f4798b2c657f4497e5e/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "patch": "@@ -697,7 +697,6 @@ package Snames is\n    Name_Copy                           : constant Name_Id := N + $;\n    Name_D_Float                        : constant Name_Id := N + $;\n    Name_Decreases                      : constant Name_Id := N + $;\n-   Name_Descriptor                     : constant Name_Id := N + $;\n    Name_Disable                        : constant Name_Id := N + $;\n    Name_Dot_Replacement                : constant Name_Id := N + $;\n    Name_Dynamic                        : constant Name_Id := N + $;\n@@ -775,7 +774,6 @@ package Snames is\n    Name_Secondary_Stack_Size           : constant Name_Id := N + $;\n    Name_Section                        : constant Name_Id := N + $;\n    Name_Semaphore                      : constant Name_Id := N + $;\n-   Name_Short_Descriptor               : constant Name_Id := N + $;\n    Name_Simple_Barriers                : constant Name_Id := N + $;\n    Name_SPARK                          : constant Name_Id := N + $;\n    Name_SPARK_05                       : constant Name_Id := N + $;"}]}