{"sha": "56fc78353ed96ccf2a347f4215795f86cce22cf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZmYzc4MzUzZWQ5NmNjZjJhMzQ3ZjQyMTU3OTVmODZjY2UyMmNmOQ==", "commit": {"author": {"name": "Caroline Tice", "email": "cmtice@google.com", "date": "2013-09-25T18:44:48Z"}, "committer": {"name": "Caroline Tice", "email": "ctice@gcc.gnu.org", "date": "2013-09-25T18:44:48Z"}, "message": "Fix issue with libvtv testsuite being run (and failing)\nwhen GCC was not configured with --enable-vtable-verify.\n\nFrom-SVN: r202918", "tree": {"sha": "4db3ab3f6f7cc4765540042bbc86f8d60a2ede5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4db3ab3f6f7cc4765540042bbc86f8d60a2ede5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56fc78353ed96ccf2a347f4215795f86cce22cf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56fc78353ed96ccf2a347f4215795f86cce22cf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56fc78353ed96ccf2a347f4215795f86cce22cf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56fc78353ed96ccf2a347f4215795f86cce22cf9/comments", "author": {"login": "cmtice", "id": 5561162, "node_id": "MDQ6VXNlcjU1NjExNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5561162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmtice", "html_url": "https://github.com/cmtice", "followers_url": "https://api.github.com/users/cmtice/followers", "following_url": "https://api.github.com/users/cmtice/following{/other_user}", "gists_url": "https://api.github.com/users/cmtice/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmtice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmtice/subscriptions", "organizations_url": "https://api.github.com/users/cmtice/orgs", "repos_url": "https://api.github.com/users/cmtice/repos", "events_url": "https://api.github.com/users/cmtice/events{/privacy}", "received_events_url": "https://api.github.com/users/cmtice/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20f114a35a535d215d4df50480547de0790e392d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f114a35a535d215d4df50480547de0790e392d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f114a35a535d215d4df50480547de0790e392d"}], "stats": {"total": 121, "additions": 92, "deletions": 29}, "files": [{"sha": "3b3d960df6a8dc98b4013e331fb96e530d8b2b9b", "filename": "libvtv/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56fc78353ed96ccf2a347f4215795f86cce22cf9/libvtv%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56fc78353ed96ccf2a347f4215795f86cce22cf9/libvtv%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FChangeLog?ref=56fc78353ed96ccf2a347f4215795f86cce22cf9", "patch": "@@ -1,3 +1,14 @@\n+2013-09-25 Caroline Tice  <cmtice@google.com>\n+\n+\t* Makefile.am: Reinstate ENABLE_VTABLE_VERIFY checks, to make\n+\tsure testsuite is not run if libstdc++ and libgcc were not built\n+\twith vtable verification.\n+\t* Makefile.in: Regenerated.\n+\t* configure.ac: Reinstate checks for --enable-vtable-verify flag,\n+\tto make sure testsuite is not run if libstdc++ and libgcc were not\n+\tbuilt with vtable verification.\n+\t* configure: Regenerated.\n+\n 2013-09-24  Caroline Tice  <cmtice@google.com>\n \n \t* Makefile.am:  Change libvtv_includedir to the directory used by"}, {"sha": "886d7e6be8d5e4f5a9694b24dca1dfa23ab2a423", "filename": "libvtv/Makefile.am", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56fc78353ed96ccf2a347f4215795f86cce22cf9/libvtv%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56fc78353ed96ccf2a347f4215795f86cce22cf9/libvtv%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.am?ref=56fc78353ed96ccf2a347f4215795f86cce22cf9", "patch": "@@ -19,7 +19,11 @@\n ## along with this library; see the file COPYING3.  If not see\n ## <http://www.gnu.org/licenses/>.\n \n-SUBDIRS = testsuite\n+if ENABLE_VTABLE_VERIFY\n+  SUBDIRS = testsuite\n+else\n+  SUBDIRS=\n+endif\n \n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n@@ -63,8 +67,13 @@ vtv_end.c:\n \trm -f $@\n \t$(LN_S) $(toplevel_srcdir)/libgcc/vtv_end.c $@\n \n-libvtv_la_SOURCES = $(vtv_sources)\n-libvtv_include_HEADERS = $(vtv_headers)\n+if ENABLE_VTABLE_VERIFY\n+  libvtv_la_SOURCES = $(vtv_sources)\n+  libvtv_include_HEADERS = $(vtv_headers)\n+else\n+  libvtv_la_SOURCES =\n+  libvtv_include_HEADERS =\n+endif\n \n # Least ordering for dependencies mean linking w/o libstdc++ for as\n # long as the development of libvtv does not absolutely require it."}, {"sha": "d77a41f0477a933e2cb10c6fe677bddef46bb087", "filename": "libvtv/Makefile.in", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56fc78353ed96ccf2a347f4215795f86cce22cf9/libvtv%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56fc78353ed96ccf2a347f4215795f86cce22cf9/libvtv%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2FMakefile.in?ref=56fc78353ed96ccf2a347f4215795f86cce22cf9", "patch": "@@ -40,7 +40,7 @@ subdir = .\n DIST_COMMON = ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n \t$(srcdir)/../mkinstalldirs $(srcdir)/../depcomp \\\n-\t$(libvtv_include_HEADERS)\n+\t$(am__libvtv_include_HEADERS_DIST)\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n@@ -86,7 +86,7 @@ LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n libvtv_la_LIBADD =\n am__objects_1 = vtv_start.lo vtv_malloc.lo vtv_rts.lo vtv_utils.lo \\\n \tvtv_end.lo\n-am_libvtv_la_OBJECTS = $(am__objects_1)\n+@ENABLE_VTABLE_VERIFY_TRUE@am_libvtv_la_OBJECTS = $(am__objects_1)\n libvtv_la_OBJECTS = $(am_libvtv_la_OBJECTS)\n DEFAULT_INCLUDES = -I.@am__isrc@\n depcomp = $(SHELL) $(top_srcdir)/../depcomp\n@@ -118,14 +118,16 @@ RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\\n \tinstall-pdf-recursive install-ps-recursive install-recursive \\\n \tinstallcheck-recursive installdirs-recursive pdf-recursive \\\n \tps-recursive uninstall-recursive\n+am__libvtv_include_HEADERS_DIST = vtv_map.h vtv_malloc.h vtv_fail.h \\\n+\tvtv_set.h vtv_utils.h vtv_rts.h\n HEADERS = $(libvtv_include_HEADERS)\n RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive\t\\\n   distclean-recursive maintainer-clean-recursive\n AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\\n \t$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS\n ETAGS = etags\n CTAGS = ctags\n-DIST_SUBDIRS = $(SUBDIRS)\n+DIST_SUBDIRS = testsuite\n ACLOCAL = @ACLOCAL@\n AMTAR = @AMTAR@\n AR = @AR@\n@@ -263,7 +265,8 @@ top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n toplevel_builddir = @toplevel_builddir@\n toplevel_srcdir = @toplevel_srcdir@\n-SUBDIRS = testsuite\n+@ENABLE_VTABLE_VERIFY_FALSE@SUBDIRS = \n+@ENABLE_VTABLE_VERIFY_TRUE@SUBDIRS = testsuite\n ACLOCAL_AMFLAGS = -I .. -I ../config\n \n # May be used by toolexeclibdir.\n@@ -293,8 +296,10 @@ libvtv_includedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)/include\n \n # Link in vtv_start and vtv_end. \n BUILT_SOURCES = vtv_start.c vtv_end.c\n-libvtv_la_SOURCES = $(vtv_sources)\n-libvtv_include_HEADERS = $(vtv_headers)\n+@ENABLE_VTABLE_VERIFY_FALSE@libvtv_la_SOURCES = \n+@ENABLE_VTABLE_VERIFY_TRUE@libvtv_la_SOURCES = $(vtv_sources)\n+@ENABLE_VTABLE_VERIFY_FALSE@libvtv_include_HEADERS = \n+@ENABLE_VTABLE_VERIFY_TRUE@libvtv_include_HEADERS = $(vtv_headers)\n \n # Least ordering for dependencies mean linking w/o libstdc++ for as\n # long as the development of libvtv does not absolutely require it.\n@@ -324,9 +329,9 @@ $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__confi\n \t      exit 1;; \\\n \t  esac; \\\n \tdone; \\\n-\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign ./Makefile'; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \\\n \t$(am__cd) $(top_srcdir) && \\\n-\t  $(AUTOMAKE) --foreign ./Makefile\n+\t  $(AUTOMAKE) --foreign Makefile\n .PRECIOUS: Makefile\n Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n \t@case '$?' in \\"}, {"sha": "5a73f26ace70b49e248a45e29cf9485968eb35af", "filename": "libvtv/configure", "status": "modified", "additions": 38, "deletions": 15, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56fc78353ed96ccf2a347f4215795f86cce22cf9/libvtv%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56fc78353ed96ccf2a347f4215795f86cce22cf9/libvtv%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure?ref=56fc78353ed96ccf2a347f4215795f86cce22cf9", "patch": "@@ -684,6 +684,8 @@ am__isrc\n INSTALL_DATA\n INSTALL_SCRIPT\n INSTALL_PROGRAM\n+ENABLE_VTABLE_VERIFY_FALSE\n+ENABLE_VTABLE_VERIFY_TRUE\n LIBSTDCXX_RAW_CXX_LDFLAGS\n LIBSTDCXX_RAW_CXX_CXXFLAGS\n target_noncanonical\n@@ -741,6 +743,7 @@ ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n enable_version_specific_runtime_libs\n+enable_vtable_verify\n enable_multilib\n enable_maintainer_mode\n enable_dependency_tracking\n@@ -1382,6 +1385,7 @@ Optional Features:\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory\n+  --enable-vtable-verify    Enable vtable verification feature\n   --enable-multilib       build many library versions (default)\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n@@ -2506,6 +2510,23 @@ esac\n \n \n \n+# Use same top-level configure hooks in libgcc/libstdc++/libvtv.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for --enable-vtable-verify\" >&5\n+$as_echo_n \"checking for --enable-vtable-verify... \" >&6; }\n+# Check whether --enable-vtable-verify was given.\n+if test \"${enable_vtable_verify+set}\" = set; then :\n+  enableval=$enable_vtable_verify; case \"$enableval\" in\n+ yes) enable_vtable_verify=yes ;;\n+ no)  enable_vtable_verify=no ;;\n+ *)   enable_vtable_verify=no;;\n+ esac\n+else\n+  enable_vtable_verify=no\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_vtable_verify\" >&5\n+$as_echo \"$enable_vtable_verify\" >&6; }\n+\n # See if supported.\n unset VTV_SUPPORTED\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for host support for vtable verification\" >&5\n@@ -2517,10 +2538,20 @@ $as_echo \"$VTV_SUPPORTED\" >&6; }\n # Decide if it's usable.\n use_vtable_verify=no\n if test \"x$VTV_SUPPORTED\" = \"xyes\"; then\n-  use_vtable_verify=yes\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: using vtable verification\" >&5\n+  if test \"x$enable_vtable_verify\" = \"xyes\"; then\n+    use_vtable_verify=yes\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: using vtable verification\" >&5\n $as_echo \"$as_me: using vtable verification\" >&6;}\n+  fi\n fi\n+ if test $use_vtable_verify = yes; then\n+  ENABLE_VTABLE_VERIFY_TRUE=\n+  ENABLE_VTABLE_VERIFY_FALSE='#'\n+else\n+  ENABLE_VTABLE_VERIFY_TRUE='#'\n+  ENABLE_VTABLE_VERIFY_FALSE=\n+fi\n+\n \n am__api_version='1.11'\n \n@@ -15475,7 +15506,7 @@ ac_config_files=\"$ac_config_files Makefile\"\n \n \n if test \"x$VTV_SUPPORTED\" = \"xyes\"; then\n-  ac_config_files=\"$ac_config_files ./Makefile testsuite/Makefile\"\n+  ac_config_files=\"$ac_config_files testsuite/Makefile\"\n \n fi\n \n@@ -15612,6 +15643,10 @@ LIBOBJS=$ac_libobjs\n LTLIBOBJS=$ac_ltlibobjs\n \n \n+if test -z \"${ENABLE_VTABLE_VERIFY_TRUE}\" && test -z \"${ENABLE_VTABLE_VERIFY_FALSE}\"; then\n+  as_fn_error \"conditional \\\"ENABLE_VTABLE_VERIFY\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n  if test -n \"$EXEEXT\"; then\n   am__EXEEXT_TRUE=\n   am__EXEEXT_FALSE='#'\n@@ -16593,7 +16628,6 @@ do\n     \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n     \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n     \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n-    \"./Makefile\") CONFIG_FILES=\"$CONFIG_FILES ./Makefile\" ;;\n     \"testsuite/Makefile\") CONFIG_FILES=\"$CONFIG_FILES testsuite/Makefile\" ;;\n \n   *) as_fn_error \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n@@ -17925,17 +17959,6 @@ compiler_lib_search_path=$lt_compiler_lib_search_path_CXX\n # ### END LIBTOOL TAG CONFIG: CXX\n _LT_EOF\n \n- ;;\n-    \"./Makefile\":F) cat > vpsed$$ << \\_EOF\n-s!`test -f '$<' || echo '$(srcdir)/'`!!\n-_EOF\n-    sed -f vpsed$$ $ac_file > tmp$$\n-    mv tmp$$ $ac_file\n-    rm vpsed$$\n-    echo 'MULTISUBDIR =' >> $ac_file\n-    ml_norecursion=yes\n-    . ${multi_basedir}/config-ml.in\n-    { ml_norecursion=; unset ml_norecursion;}\n  ;;\n     \"testsuite/Makefile\":F) cat > vpsed$$ << \\_EOF\n s!`test -f '$<' || echo '$(srcdir)/'`!!"}, {"sha": "12b4664de2e057fef4ec4566a42b186bd9c8f57c", "filename": "libvtv/configure.ac", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56fc78353ed96ccf2a347f4215795f86cce22cf9/libvtv%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56fc78353ed96ccf2a347f4215795f86cce22cf9/libvtv%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libvtv%2Fconfigure.ac?ref=56fc78353ed96ccf2a347f4215795f86cce22cf9", "patch": "@@ -27,6 +27,18 @@ target_alias=${target_alias-$host_alias}\n AC_SUBST(target_alias)\n GCC_LIBSTDCXX_RAW_CXX_FLAGS\n \n+# Use same top-level configure hooks in libgcc/libstdc++/libvtv.\n+AC_MSG_CHECKING([for --enable-vtable-verify])\n+AC_ARG_ENABLE(vtable-verify,\n+[  --enable-vtable-verify    Enable vtable verification feature ],\n+[case \"$enableval\" in\n+ yes) enable_vtable_verify=yes ;;\n+ no)  enable_vtable_verify=no ;;\n+ *)   enable_vtable_verify=no;;\n+ esac],\n+[enable_vtable_verify=no])\n+AC_MSG_RESULT($enable_vtable_verify)\n+\n # See if supported.\n unset VTV_SUPPORTED\n AC_MSG_CHECKING([for host support for vtable verification])\n@@ -36,9 +48,12 @@ AC_MSG_RESULT($VTV_SUPPORTED)\n # Decide if it's usable.\n use_vtable_verify=no\n if test \"x$VTV_SUPPORTED\" = \"xyes\"; then\n-  use_vtable_verify=yes\n-  AC_MSG_NOTICE(using vtable verification)\n+  if test \"x$enable_vtable_verify\" = \"xyes\"; then\n+    use_vtable_verify=yes\n+    AC_MSG_NOTICE(using vtable verification)\n+  fi\n fi \n+AM_CONDITIONAL(ENABLE_VTABLE_VERIFY, test $use_vtable_verify = yes)\n \n AM_INIT_AUTOMAKE(foreign no-dist)\n AM_ENABLE_MULTILIB(, ..)\n@@ -126,7 +141,7 @@ fi\n AC_CONFIG_FILES([Makefile])\n \n if test \"x$VTV_SUPPORTED\" = \"xyes\"; then\n-  AC_CONFIG_FILES(AC_FOREACH([DIR], [. testsuite], [DIR/Makefile ]), \n+  AC_CONFIG_FILES(AC_FOREACH([DIR], [testsuite], [DIR/Makefile ]), \n     [cat > vpsed$$ << \\_EOF\n s!`test -f '$<' || echo '$(srcdir)/'`!!\n _EOF"}]}