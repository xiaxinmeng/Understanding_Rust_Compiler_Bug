{"sha": "7082a7621aff206af0073cc44a5991b5c221e2d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA4MmE3NjIxYWZmMjA2YWYwMDczY2M0NGE1OTkxYjVjMjIxZTJkMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-02-19T07:56:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-02-19T07:56:36Z"}, "message": "re PR target/69671 (FAIL: gcc.target/i386/avx512vl-vpmovqb-1.c scan-assembler-times vpmovqb[ \\\\t]+[^{\\n]*%ymm[0-9]+[^\\n]*%xmm[0-9]+{%k[1-7]}{z}(?)\n\n\tPR target/69671\n\t* config/i386/sse.md (*<floatsuffix>floatv2div2sf2_mask_1,\n\t*avx512vl_<code>v2div2qi2_mask_1, *avx512vl_<code><mode>v4qi2_mask_1,\n\t*avx512vl_<code><mode>v8qi2_mask_1, *avx512vl_<code><mode>v4hi2_mask_1,\n\t*avx512vl_<code>v2div2hi2_mask_1, *avx512vl_<code>v2div2si2_mask_1,\n\t*avx512f_<code>v8div16qi2_mask_1): New insns.\n\nFrom-SVN: r233545", "tree": {"sha": "9fc40602307efdceba3306c428714149b5199ecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fc40602307efdceba3306c428714149b5199ecf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7082a7621aff206af0073cc44a5991b5c221e2d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7082a7621aff206af0073cc44a5991b5c221e2d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7082a7621aff206af0073cc44a5991b5c221e2d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7082a7621aff206af0073cc44a5991b5c221e2d0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "747b61fcb3b3afbb7300afc0c0b4cd6bcc10608c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/747b61fcb3b3afbb7300afc0c0b4cd6bcc10608c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/747b61fcb3b3afbb7300afc0c0b4cd6bcc10608c"}], "stats": {"total": 157, "additions": 157, "deletions": 0}, "files": [{"sha": "22ab5cd9ab233883566562be18de34f75a432cfe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7082a7621aff206af0073cc44a5991b5c221e2d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7082a7621aff206af0073cc44a5991b5c221e2d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7082a7621aff206af0073cc44a5991b5c221e2d0", "patch": "@@ -1,3 +1,12 @@\n+2016-02-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/69671\n+\t* config/i386/sse.md (*<floatsuffix>floatv2div2sf2_mask_1,\n+\t*avx512vl_<code>v2div2qi2_mask_1, *avx512vl_<code><mode>v4qi2_mask_1,\n+\t*avx512vl_<code><mode>v8qi2_mask_1, *avx512vl_<code><mode>v4hi2_mask_1,\n+\t*avx512vl_<code>v2div2hi2_mask_1, *avx512vl_<code>v2div2si2_mask_1,\n+\t*avx512f_<code>v8div16qi2_mask_1): New insns.\n+\n 2016-02-18  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/68404"}, {"sha": "79c387f42e4cefc87057bd7c0c4bb5dc8ffd06a7", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 148, "deletions": 0, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7082a7621aff206af0073cc44a5991b5c221e2d0/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7082a7621aff206af0073cc44a5991b5c221e2d0/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=7082a7621aff206af0073cc44a5991b5c221e2d0", "patch": "@@ -4962,6 +4962,21 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n+(define_insn \"*<floatsuffix>floatv2div2sf2_mask_1\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+    (vec_concat:V4SF\n+\t(vec_merge:V2SF\n+\t\t(any_float:V2SF (match_operand:V2DI 1\n+\t\t\t\t  \"nonimmediate_operand\" \"vm\"))\n+\t    (const_vector:V2SF [(const_int 0) (const_int 0)])\n+\t    (match_operand:QI 2 \"register_operand\" \"Yk\"))\n+\t    (const_vector:V2SF [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512DQ && TARGET_AVX512VL\"\n+  \"vcvt<floatsuffix>qq2ps{x}\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n (define_insn \"ufloat<si2dfmodelower><mode>2<mask_name>\"\n   [(set (match_operand:VF2_512_256VL 0 \"register_operand\" \"=v\")\n \t(unsigned_float:VF2_512_256VL\n@@ -9150,6 +9165,27 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"*avx512vl_<code>v2div2qi2_mask_1\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V16QI\n+      (vec_merge:V2QI\n+\t(any_truncate:V2QI\n+\t  (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+\t(const_vector:V2QI [(const_int 0) (const_int 0)])\n+\t(match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (const_vector:V14QI [(const_int 0) (const_int 0)\n+\t\t\t   (const_int 0) (const_int 0)\n+\t\t\t   (const_int 0) (const_int 0)\n+\t\t\t   (const_int 0) (const_int 0)\n+\t\t\t   (const_int 0) (const_int 0)\n+\t\t\t   (const_int 0) (const_int 0)\n+\t\t\t   (const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qb\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"avx512vl_<code>v2div2qi2_mask_store\"\n   [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n     (vec_concat:V16QI\n@@ -9219,6 +9255,27 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"*avx512vl_<code><mode>v4qi2_mask_1\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V16QI\n+      (vec_merge:V4QI\n+\t(any_truncate:V4QI\n+\t  (match_operand:VI4_128_8_256 1 \"register_operand\" \"v\"))\n+\t(const_vector:V4QI [(const_int 0) (const_int 0)\n+\t\t\t    (const_int 0) (const_int 0)])\n+\t(match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (const_vector:V12QI [(const_int 0) (const_int 0)\n+\t\t\t   (const_int 0) (const_int 0)\n+\t\t\t   (const_int 0) (const_int 0)\n+\t\t\t   (const_int 0) (const_int 0)\n+\t\t\t   (const_int 0) (const_int 0)\n+\t\t\t   (const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_3>\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"avx512vl_<code><mode>v4qi2_mask_store\"\n   [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n     (vec_concat:V16QI\n@@ -9289,6 +9346,27 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"*avx512vl_<code><mode>v8qi2_mask_1\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V16QI\n+      (vec_merge:V8QI\n+\t(any_truncate:V8QI\n+\t  (match_operand:VI2_128_BW_4_256 1 \"register_operand\" \"v\"))\n+\t(const_vector:V8QI [(const_int 0) (const_int 0)\n+\t\t\t    (const_int 0) (const_int 0)\n+\t\t\t    (const_int 0) (const_int 0)\n+\t\t\t    (const_int 0) (const_int 0)])\n+\t(match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (const_vector:V8QI [(const_int 0) (const_int 0)\n+\t\t\t  (const_int 0) (const_int 0)\n+\t\t\t  (const_int 0) (const_int 0)\n+\t\t\t  (const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_3>\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"avx512vl_<code><mode>v8qi2_mask_store\"\n   [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n     (vec_concat:V16QI\n@@ -9370,6 +9448,23 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"*avx512vl_<code><mode>v4hi2_mask_1\"\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V8HI\n+      (vec_merge:V4HI\n+\t(any_truncate:V4HI\n+\t  (match_operand:VI4_128_8_256 1 \"register_operand\" \"v\"))\n+\t(const_vector:V4HI [(const_int 0) (const_int 0)\n+\t\t\t    (const_int 0) (const_int 0)])\n+\t(match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (const_vector:V4HI [(const_int 0) (const_int 0)\n+\t\t\t  (const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix><pmov_suff_4>\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"avx512vl_<code><mode>v4hi2_mask_store\"\n   [(set (match_operand:V8HI 0 \"memory_operand\" \"=m\")\n     (vec_concat:V8HI\n@@ -9428,6 +9523,23 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"*avx512vl_<code>v2div2hi2_mask_1\"\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V8HI\n+      (vec_merge:V2HI\n+\t(any_truncate:V2HI\n+\t  (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+\t(const_vector:V2HI [(const_int 0) (const_int 0)])\n+\t(match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (const_vector:V6HI [(const_int 0) (const_int 0)\n+\t\t\t  (const_int 0) (const_int 0)\n+\t\t\t  (const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qw\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"avx512vl_<code>v2div2hi2_mask_store\"\n   [(set (match_operand:V8HI 0 \"memory_operand\" \"=m\")\n     (vec_concat:V8HI\n@@ -9494,6 +9606,21 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"*avx512vl_<code>v2div2si2_mask_1\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V4SI\n+      (vec_merge:V2SI\n+\t(any_truncate:V2SI\n+\t  (match_operand:V2DI 1 \"register_operand\" \"v\"))\n+\t(const_vector:V2SI [(const_int 0) (const_int 0)])\n+\t(match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512VL\"\n+  \"vpmov<trunsuffix>qd\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"avx512vl_<code>v2div2si2_mask_store\"\n   [(set (match_operand:V4SI 0 \"memory_operand\" \"=m\")\n     (vec_concat:V4SI\n@@ -9570,6 +9697,27 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"*avx512f_<code>v8div16qi2_mask_1\"\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n+    (vec_concat:V16QI\n+      (vec_merge:V8QI\n+\t(any_truncate:V8QI\n+\t  (match_operand:V8DI 1 \"register_operand\" \"v\"))\n+\t(const_vector:V8QI [(const_int 0) (const_int 0)\n+\t\t\t    (const_int 0) (const_int 0)\n+\t\t\t    (const_int 0) (const_int 0)\n+\t\t\t    (const_int 0) (const_int 0)])\n+\t(match_operand:QI 2 \"register_operand\" \"Yk\"))\n+      (const_vector:V8QI [(const_int 0) (const_int 0)\n+\t\t\t  (const_int 0) (const_int 0)\n+\t\t\t  (const_int 0) (const_int 0)\n+\t\t\t  (const_int 0) (const_int 0)])))]\n+  \"TARGET_AVX512F\"\n+  \"vpmov<trunsuffix>qb\\t{%1, %0%{%2%}%{z%}|%0%{%2%}%{z%}, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"avx512f_<code>v8div16qi2_mask_store\"\n   [(set (match_operand:V16QI 0 \"memory_operand\" \"=m\")\n     (vec_concat:V16QI"}]}