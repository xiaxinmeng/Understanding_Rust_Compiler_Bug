{"sha": "92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJlNmYzYTQzZWNjZmUzZTYzODc5MjQ5MjAzZWU2ZDgwOGZjYzZiOQ==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2014-06-17T03:50:34Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2014-06-17T03:50:34Z"}, "message": "Introduce xmallocarray, an overflow checking variant of xmalloc.\n\n2014-06-17  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* libgfortran.h (xmallocarray): New prototype.\n\t* runtime/memory.c (xmallocarray): New function.\n\t(xcalloc): Check for nonzero separately instead of multiplying.\n\t* generated/*.c: Regenerated.\n\t* intrinsics/cshift0.c (cshift0): Call xmallocarray instead of\n\txmalloc.\n\t* intrinsics/eoshift0.c (eoshift0): Likewise.\n\t* intrinsics/eoshift2.c (eoshift2): Likewise.\n\t* intrinsics/pack_generic.c (pack_internal): Likewise.\n\t(pack_s_internal): Likewise.\n\t* intrinsics/reshape_generic.c (reshape_internal): Likewise.\n\t* intrinsics/spread_generic.c (spread_internal): Likewise.\n\t(spread_internal_scalar): Likewise.\n\t* intrinsics/string_intrinsics_inc.c (string_trim): Likewise.\n\t(string_minmax): Likewise.\n\t* intrinsics/transpose_generic.c (transpose_internal): Likewise.\n\t* intrinsics/unpack_generic.c (unpack_internal): Likewise.\n\t* io/list_read.c (nml_touch_nodes): Don't cast xmalloc return value.\n\t* io/transfer.c (st_set_nml_var): Call xmallocarray instead of\n\txmalloc.\n\t* io/unit.c (get_internal_unit): Likewise.\n\t(filename_from_unit): Don't cast xmalloc return value.\n\t* io/write.c (nml_write_obj): Likewise, formatting.\n\t* m4/bessel.m4 (bessel_jn_r'rtype_kind`): Call xmallocarray\n\tinstead of xmalloc.\n\t(besse_yn_r'rtype_kind`): Likewise.\n\t* m4/cshift1.m4 (cshift1): Likewise.\n\t* m4/eoshift1.m4 (eoshift1): Likewise.\n\t* m4/eoshift3.m4 (eoshift3): Likewise.\n\t* m4/iforeach.m4: Likewise.\n\t* m4/ifunction.m4: Likewise.\n\t* m4/ifunction_logical.m4 (name`'rtype_qual`_'atype_code):\n\tLikewise.\n\t* m4/in_pack.m4 (internal_pack_'rtype_ccode`): Likewise.\n\t* m4/matmul.m4 (matmul_'rtype_code`): Likewise.\n\t* m4/matmull.m4 (matmul_'rtype_code`): Likewise.\n\t* m4/pack.m4 (pack_'rtype_code`): Likewise.\n\t* m4/reshape.m4 (reshape_'rtype_ccode`): Likewise.\n\t* m4/shape.m4 (shape_'rtype_kind`): Likewise.\n\t* m4/spread.m4 (spread_'rtype_code`): Likewise.\n\t(spread_scalar_'rtype_code`): Likewise.\n\t* m4/transpose.m4 (transpose_'rtype_code`): Likewise.\n\t* m4/unpack.m4 (unpack0_'rtype_code`): Likewise.\n\t(unpack1_'rtype_code`): Likewise.\n\t* runtime/convert_char.c (convert_char1_to_char4): Likewise.\n\t(convert_char4_to_char1): Simplify.\n\t* runtime/environ.c (init_unformatted): Call xmallocarray instead\n\tof xmalloc.\n\t* runtime/in_pack_generic.c (internal_pack): Likewise.\n\nFrom-SVN: r211721", "tree": {"sha": "4828a12bfc69bd396a89760cbc33905604e9f9ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4828a12bfc69bd396a89760cbc33905604e9f9ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/comments", "author": null, "committer": null, "parents": [{"sha": "d69d4bf5bf95d11edc30e20c4d9eb446541f1527", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d69d4bf5bf95d11edc30e20c4d9eb446541f1527", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d69d4bf5bf95d11edc30e20c4d9eb446541f1527"}], "stats": {"total": 2749, "additions": 1238, "deletions": 1511}, "files": [{"sha": "a7993432667f09bb5524cc19e8ee72c8f78f544c", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -1,3 +1,55 @@\n+2014-06-17  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* libgfortran.h (xmallocarray): New prototype.\n+\t* runtime/memory.c (xmallocarray): New function.\n+\t(xcalloc): Check for nonzero separately instead of multiplying.\n+\t* generated/*.c: Regenerated.\n+\t* intrinsics/cshift0.c (cshift0): Call xmallocarray instead of\n+\txmalloc.\n+\t* intrinsics/eoshift0.c (eoshift0): Likewise.\n+\t* intrinsics/eoshift2.c (eoshift2): Likewise.\n+\t* intrinsics/pack_generic.c (pack_internal): Likewise.\n+\t(pack_s_internal): Likewise.\n+\t* intrinsics/reshape_generic.c (reshape_internal): Likewise.\n+\t* intrinsics/spread_generic.c (spread_internal): Likewise.\n+\t(spread_internal_scalar): Likewise.\n+\t* intrinsics/string_intrinsics_inc.c (string_trim): Likewise.\n+\t(string_minmax): Likewise.\n+\t* intrinsics/transpose_generic.c (transpose_internal): Likewise.\n+\t* intrinsics/unpack_generic.c (unpack_internal): Likewise.\n+\t* io/list_read.c (nml_touch_nodes): Don't cast xmalloc return value.\n+\t* io/transfer.c (st_set_nml_var): Call xmallocarray instead of\n+\txmalloc.\n+\t* io/unit.c (get_internal_unit): Likewise.\n+\t(filename_from_unit): Don't cast xmalloc return value.\n+\t* io/write.c (nml_write_obj): Likewise, formatting.\n+\t* m4/bessel.m4 (bessel_jn_r'rtype_kind`): Call xmallocarray\n+\tinstead of xmalloc.\n+\t(besse_yn_r'rtype_kind`): Likewise.\n+\t* m4/cshift1.m4 (cshift1): Likewise.\n+\t* m4/eoshift1.m4 (eoshift1): Likewise.\n+\t* m4/eoshift3.m4 (eoshift3): Likewise.\n+\t* m4/iforeach.m4: Likewise.\n+\t* m4/ifunction.m4: Likewise.\n+\t* m4/ifunction_logical.m4 (name`'rtype_qual`_'atype_code):\n+\tLikewise.\n+\t* m4/in_pack.m4 (internal_pack_'rtype_ccode`): Likewise.\n+\t* m4/matmul.m4 (matmul_'rtype_code`): Likewise.\n+\t* m4/matmull.m4 (matmul_'rtype_code`): Likewise.\n+\t* m4/pack.m4 (pack_'rtype_code`): Likewise.\n+\t* m4/reshape.m4 (reshape_'rtype_ccode`): Likewise.\n+\t* m4/shape.m4 (shape_'rtype_kind`): Likewise.\n+\t* m4/spread.m4 (spread_'rtype_code`): Likewise.\n+\t(spread_scalar_'rtype_code`): Likewise.\n+\t* m4/transpose.m4 (transpose_'rtype_code`): Likewise.\n+\t* m4/unpack.m4 (unpack0_'rtype_code`): Likewise.\n+\t(unpack1_'rtype_code`): Likewise.\n+\t* runtime/convert_char.c (convert_char1_to_char4): Likewise.\n+\t(convert_char4_to_char1): Simplify.\n+\t* runtime/environ.c (init_unformatted): Call xmallocarray instead\n+\tof xmalloc.\n+\t* runtime/in_pack_generic.c (internal_pack): Likewise.\n+\n 2014-06-15  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR libfortran/60468"}, {"sha": "0f008b97dcbfdb0b8442fb1096be1f458aa99fc8", "filename": "libgfortran/generated/all_l1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fall_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fall_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ all_l1 (gfc_array_l1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ all_l1 (gfc_array_l1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_1));\n     }\n   else\n     {"}, {"sha": "a9f85b4bfed258e738b46d49b9e5e66235dae709", "filename": "libgfortran/generated/all_l16.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fall_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fall_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ all_l16 (gfc_array_l16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ all_l16 (gfc_array_l16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_16));\n     }\n   else\n     {"}, {"sha": "3ef4a1dc25c6087a99f864df89b9402c84bf3806", "filename": "libgfortran/generated/all_l2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fall_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fall_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ all_l2 (gfc_array_l2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ all_l2 (gfc_array_l2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_2));\n     }\n   else\n     {"}, {"sha": "58dab4f124df2b1d79ddd0e80cb9e271ab7c5f2d", "filename": "libgfortran/generated/all_l4.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fall_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fall_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ all_l4 (gfc_array_l4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ all_l4 (gfc_array_l4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_4));\n     }\n   else\n     {"}, {"sha": "4293aaa06b775eff06a9a1a5e928337058bebaf2", "filename": "libgfortran/generated/all_l8.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fall_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fall_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fall_l8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ all_l8 (gfc_array_l8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ all_l8 (gfc_array_l8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_8));\n     }\n   else\n     {"}, {"sha": "46387fdd2a26e92b694d0f2bb87f15d2996e67f7", "filename": "libgfortran/generated/any_l1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fany_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fany_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ any_l1 (gfc_array_l1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ any_l1 (gfc_array_l1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_1));\n     }\n   else\n     {"}, {"sha": "b29fdd923d7457ca16741d71a0c8944629d03e90", "filename": "libgfortran/generated/any_l16.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fany_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fany_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ any_l16 (gfc_array_l16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ any_l16 (gfc_array_l16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_16));\n     }\n   else\n     {"}, {"sha": "a63c593d4b8a3d47ca6402b8aa72e0dd3d830b91", "filename": "libgfortran/generated/any_l2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fany_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fany_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ any_l2 (gfc_array_l2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ any_l2 (gfc_array_l2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_2));\n     }\n   else\n     {"}, {"sha": "ccd35d789351814e41f1bfb9325911c096564289", "filename": "libgfortran/generated/any_l4.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fany_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fany_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ any_l4 (gfc_array_l4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ any_l4 (gfc_array_l4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_4));\n     }\n   else\n     {"}, {"sha": "e089ea8beed8c108792b90f697a75229fe806b2d", "filename": "libgfortran/generated/any_l8.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fany_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fany_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fany_l8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ any_l8 (gfc_array_l8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ any_l8 (gfc_array_l8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_8));\n     }\n   else\n     {"}, {"sha": "14b93e9100703ff9f895f9b1b3c5c31c29e4459e", "filename": "libgfortran/generated/bessel_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fbessel_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fbessel_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -55,7 +55,7 @@ bessel_jn_r10 (gfc_array_r10 * const restrict ret, int n1, int n2, GFC_REAL_10 x\n     {\n       size_t size = n2 < n1 ? 0 : n2-n1+1; \n       GFC_DIMENSION_SET(ret->dim[0], 0, size-1, 1);\n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_10) * size);\n+      ret->base_addr = xmallocarray (size, sizeof (GFC_REAL_10));\n       ret->offset = 0;\n     }\n \n@@ -122,7 +122,7 @@ bessel_yn_r10 (gfc_array_r10 * const restrict ret, int n1, int n2,\n     {\n       size_t size = n2 < n1 ? 0 : n2-n1+1; \n       GFC_DIMENSION_SET(ret->dim[0], 0, size-1, 1);\n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_10) * size);\n+      ret->base_addr = xmallocarray (size, sizeof (GFC_REAL_10));\n       ret->offset = 0;\n     }\n "}, {"sha": "d64fa9c138ede62807a8788bae7b37d713a6295a", "filename": "libgfortran/generated/bessel_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fbessel_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fbessel_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -59,7 +59,7 @@ bessel_jn_r16 (gfc_array_r16 * const restrict ret, int n1, int n2, GFC_REAL_16 x\n     {\n       size_t size = n2 < n1 ? 0 : n2-n1+1; \n       GFC_DIMENSION_SET(ret->dim[0], 0, size-1, 1);\n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_16) * size);\n+      ret->base_addr = xmallocarray (size, sizeof (GFC_REAL_16));\n       ret->offset = 0;\n     }\n \n@@ -126,7 +126,7 @@ bessel_yn_r16 (gfc_array_r16 * const restrict ret, int n1, int n2,\n     {\n       size_t size = n2 < n1 ? 0 : n2-n1+1; \n       GFC_DIMENSION_SET(ret->dim[0], 0, size-1, 1);\n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_16) * size);\n+      ret->base_addr = xmallocarray (size, sizeof (GFC_REAL_16));\n       ret->offset = 0;\n     }\n "}, {"sha": "a86bb5fa958de77b9e24f43bbd3f06afe19f3bbb", "filename": "libgfortran/generated/bessel_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fbessel_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fbessel_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -55,7 +55,7 @@ bessel_jn_r4 (gfc_array_r4 * const restrict ret, int n1, int n2, GFC_REAL_4 x)\n     {\n       size_t size = n2 < n1 ? 0 : n2-n1+1; \n       GFC_DIMENSION_SET(ret->dim[0], 0, size-1, 1);\n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_4) * size);\n+      ret->base_addr = xmallocarray (size, sizeof (GFC_REAL_4));\n       ret->offset = 0;\n     }\n \n@@ -122,7 +122,7 @@ bessel_yn_r4 (gfc_array_r4 * const restrict ret, int n1, int n2,\n     {\n       size_t size = n2 < n1 ? 0 : n2-n1+1; \n       GFC_DIMENSION_SET(ret->dim[0], 0, size-1, 1);\n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_4) * size);\n+      ret->base_addr = xmallocarray (size, sizeof (GFC_REAL_4));\n       ret->offset = 0;\n     }\n "}, {"sha": "84018872e057dec470af3add6f4bee2b7d949df0", "filename": "libgfortran/generated/bessel_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fbessel_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fbessel_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fbessel_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -55,7 +55,7 @@ bessel_jn_r8 (gfc_array_r8 * const restrict ret, int n1, int n2, GFC_REAL_8 x)\n     {\n       size_t size = n2 < n1 ? 0 : n2-n1+1; \n       GFC_DIMENSION_SET(ret->dim[0], 0, size-1, 1);\n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_8) * size);\n+      ret->base_addr = xmallocarray (size, sizeof (GFC_REAL_8));\n       ret->offset = 0;\n     }\n \n@@ -122,7 +122,7 @@ bessel_yn_r8 (gfc_array_r8 * const restrict ret, int n1, int n2,\n     {\n       size_t size = n2 < n1 ? 0 : n2-n1+1; \n       GFC_DIMENSION_SET(ret->dim[0], 0, size-1, 1);\n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_8) * size);\n+      ret->base_addr = xmallocarray (size, sizeof (GFC_REAL_8));\n       ret->offset = 0;\n     }\n "}, {"sha": "c6c0b5b9ceb3c8318ae118a4be49b24a1b62ce94", "filename": "libgfortran/generated/count_16_l.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcount_16_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcount_16_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_16_l.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ count_16_l (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ count_16_l (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "15d270d044323edd6acec269e58a6c12ba22e8f7", "filename": "libgfortran/generated/count_1_l.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcount_1_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcount_1_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_1_l.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ count_1_l (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ count_1_l (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n     }\n   else\n     {"}, {"sha": "fd9b3d37ab4cd68613a323da96283ed8fdbf8124", "filename": "libgfortran/generated/count_2_l.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcount_2_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcount_2_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_2_l.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ count_2_l (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ count_2_l (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n     }\n   else\n     {"}, {"sha": "1e15256caa7d478c224797c401fe25367b92add5", "filename": "libgfortran/generated/count_4_l.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcount_4_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcount_4_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_4_l.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ count_4_l (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ count_4_l (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "97962a4fe2d609c20687a4e7bc92481f68dd0810", "filename": "libgfortran/generated/count_8_l.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcount_8_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcount_8_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcount_8_l.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,7 @@ count_8_l (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -111,7 +110,7 @@ count_8_l (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "b0cc767aea7f67dff087ea0b646fa3d3d9cddb0d", "filename": "libgfortran/generated/cshift1_16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcshift1_16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcshift1_16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift1_16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -80,7 +80,7 @@ cshift1 (gfc_array_char * const restrict ret,\n     {\n       int i;\n \n-      ret->base_addr = xmalloc (size * arraysize);\n+      ret->base_addr = xmallocarray (arraysize, size);\n       ret->offset = 0;\n       ret->dtype = array->dtype;\n       for (i = 0; i < GFC_DESCRIPTOR_RANK (array); i++)"}, {"sha": "5ea8a6acedda081b00699c0759359561f1cc3481", "filename": "libgfortran/generated/cshift1_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcshift1_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcshift1_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift1_4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -80,7 +80,7 @@ cshift1 (gfc_array_char * const restrict ret,\n     {\n       int i;\n \n-      ret->base_addr = xmalloc (size * arraysize);\n+      ret->base_addr = xmallocarray (arraysize, size);\n       ret->offset = 0;\n       ret->dtype = array->dtype;\n       for (i = 0; i < GFC_DESCRIPTOR_RANK (array); i++)"}, {"sha": "5c4dbc36048f3bab69c6d66969abf861cf00de6a", "filename": "libgfortran/generated/cshift1_8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcshift1_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fcshift1_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fcshift1_8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -80,7 +80,7 @@ cshift1 (gfc_array_char * const restrict ret,\n     {\n       int i;\n \n-      ret->base_addr = xmalloc (size * arraysize);\n+      ret->base_addr = xmallocarray (arraysize, size);\n       ret->offset = 0;\n       ret->dtype = array->dtype;\n       for (i = 0; i < GFC_DESCRIPTOR_RANK (array); i++)"}, {"sha": "566d807b3a4936784c4b7d0fef385dd9820fcbd9", "filename": "libgfortran/generated/eoshift1_16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift1_16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift1_16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -105,8 +105,8 @@ eoshift1 (gfc_array_char * const restrict ret,\n \t  GFC_DIMENSION_SET(ret->dim[i], 0, ub, str);\n \n         }\n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (size * arraysize);\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (arraysize, size);\n \n     }\n   else if (unlikely (compile_options.bounds_check))"}, {"sha": "bd5fabad311dac2fc7e04691b028472e04942f99", "filename": "libgfortran/generated/eoshift1_4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift1_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift1_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -105,8 +105,8 @@ eoshift1 (gfc_array_char * const restrict ret,\n \t  GFC_DIMENSION_SET(ret->dim[i], 0, ub, str);\n \n         }\n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (size * arraysize);\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (arraysize, size);\n \n     }\n   else if (unlikely (compile_options.bounds_check))"}, {"sha": "814f81a81496f39d37b8193be7793eabe938256c", "filename": "libgfortran/generated/eoshift1_8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift1_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift1_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift1_8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -105,8 +105,8 @@ eoshift1 (gfc_array_char * const restrict ret,\n \t  GFC_DIMENSION_SET(ret->dim[i], 0, ub, str);\n \n         }\n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (size * arraysize);\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (arraysize, size);\n \n     }\n   else if (unlikely (compile_options.bounds_check))"}, {"sha": "5e09df22eb57fde04b085782e2ebd7c6876eed89", "filename": "libgfortran/generated/eoshift3_16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift3_16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift3_16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -89,7 +89,7 @@ eoshift3 (gfc_array_char * const restrict ret,\n     {\n       int i;\n \n-      ret->base_addr = xmalloc (size * arraysize);\n+      ret->base_addr = xmallocarray (arraysize, size);\n       ret->offset = 0;\n       ret->dtype = array->dtype;\n       for (i = 0; i < GFC_DESCRIPTOR_RANK (array); i++)\n@@ -107,8 +107,8 @@ eoshift3 (gfc_array_char * const restrict ret,\n \t  GFC_DIMENSION_SET(ret->dim[i], 0, ub, str);\n \n         }\n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (size * arraysize);\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (arraysize, size);\n \n     }\n   else if (unlikely (compile_options.bounds_check))"}, {"sha": "970402c634116401129ffb81ef90660f36dc4fd8", "filename": "libgfortran/generated/eoshift3_4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift3_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift3_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -89,7 +89,7 @@ eoshift3 (gfc_array_char * const restrict ret,\n     {\n       int i;\n \n-      ret->base_addr = xmalloc (size * arraysize);\n+      ret->base_addr = xmallocarray (arraysize, size);\n       ret->offset = 0;\n       ret->dtype = array->dtype;\n       for (i = 0; i < GFC_DESCRIPTOR_RANK (array); i++)\n@@ -107,8 +107,8 @@ eoshift3 (gfc_array_char * const restrict ret,\n \t  GFC_DIMENSION_SET(ret->dim[i], 0, ub, str);\n \n         }\n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (size * arraysize);\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (arraysize, size);\n \n     }\n   else if (unlikely (compile_options.bounds_check))"}, {"sha": "991eb9151646227b02383842eb65cd050e83977f", "filename": "libgfortran/generated/eoshift3_8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift3_8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Feoshift3_8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Feoshift3_8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -89,7 +89,7 @@ eoshift3 (gfc_array_char * const restrict ret,\n     {\n       int i;\n \n-      ret->base_addr = xmalloc (size * arraysize);\n+      ret->base_addr = xmallocarray (arraysize, size);\n       ret->offset = 0;\n       ret->dtype = array->dtype;\n       for (i = 0; i < GFC_DESCRIPTOR_RANK (array); i++)\n@@ -107,8 +107,8 @@ eoshift3 (gfc_array_char * const restrict ret,\n \t  GFC_DIMENSION_SET(ret->dim[i], 0, ub, str);\n \n         }\n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (size * arraysize);\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (arraysize, size);\n \n     }\n   else if (unlikely (compile_options.bounds_check))"}, {"sha": "da0ce4d22fb6c1efbda44e188f372e6c0db8b74c", "filename": "libgfortran/generated/iall_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiall_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiall_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iall_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miall_i1 (gfc_array_i1 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miall_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siall_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siall_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n     }\n   else\n     {"}, {"sha": "a3f39d3c97636f4e64e71901dde3e4072ceac06b", "filename": "libgfortran/generated/iall_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiall_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiall_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iall_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miall_i16 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miall_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siall_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siall_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "4ca06a8a0122099083b7ffa0cef493889bb8b0c0", "filename": "libgfortran/generated/iall_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiall_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiall_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iall_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miall_i2 (gfc_array_i2 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miall_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siall_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siall_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n     }\n   else\n     {"}, {"sha": "8ff15f4ed4a4b0b3dfdd7395ca21773b12e673db", "filename": "libgfortran/generated/iall_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiall_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiall_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iall_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miall_i4 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miall_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siall_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siall_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "08932d4862da5405272cc234d7bb0275220e6d74", "filename": "libgfortran/generated/iall_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiall_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiall_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iall_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miall_i8 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miall_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siall_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siall_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "999230a114c76025da53822f5d2be55e061ef422", "filename": "libgfortran/generated/iany_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiany_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiany_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiany_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iany_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miany_i1 (gfc_array_i1 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miany_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siany_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siany_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n     }\n   else\n     {"}, {"sha": "9410db45c3365c40efaa092164245fa6b06e611d", "filename": "libgfortran/generated/iany_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiany_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiany_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiany_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iany_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miany_i16 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miany_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siany_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siany_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "7068bb192e2734650824ef536fc453b6025ef527", "filename": "libgfortran/generated/iany_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiany_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiany_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiany_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iany_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miany_i2 (gfc_array_i2 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miany_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siany_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siany_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n     }\n   else\n     {"}, {"sha": "62034cfd832bae1aba715c27d6a86beeeb623771", "filename": "libgfortran/generated/iany_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiany_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiany_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiany_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iany_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miany_i4 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miany_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siany_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siany_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "f347d69f1dd754aab385dedc308995fac08d8dbd", "filename": "libgfortran/generated/iany_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiany_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiany_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiany_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iany_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miany_i8 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miany_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siany_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siany_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "9148af577124625381ad4fbd546606672cd0bde0", "filename": "libgfortran/generated/in_pack_c10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_c10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_c10 (gfc_array_c10 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_COMPLEX_10 *)xmalloc (ssize * sizeof (GFC_COMPLEX_10));\n+  destptr = xmallocarray (ssize, sizeof (GFC_COMPLEX_10));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "e109efc1d5dde6d0689d38d6e507ab9059eadee1", "filename": "libgfortran/generated/in_pack_c16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_c16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_c16 (gfc_array_c16 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_COMPLEX_16 *)xmalloc (ssize * sizeof (GFC_COMPLEX_16));\n+  destptr = xmallocarray (ssize, sizeof (GFC_COMPLEX_16));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "3afdaf3a44e70e6a511d890e253d2c1d37afb257", "filename": "libgfortran/generated/in_pack_c4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_c4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_c4 (gfc_array_c4 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_COMPLEX_4 *)xmalloc (ssize * sizeof (GFC_COMPLEX_4));\n+  destptr = xmallocarray (ssize, sizeof (GFC_COMPLEX_4));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "995a3676dc7db7e446ccdc6a248549c15f9706a4", "filename": "libgfortran/generated/in_pack_c8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_c8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_c8 (gfc_array_c8 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_COMPLEX_8 *)xmalloc (ssize * sizeof (GFC_COMPLEX_8));\n+  destptr = xmallocarray (ssize, sizeof (GFC_COMPLEX_8));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "2ee5e283747c3981c76aa7524d510748048721d9", "filename": "libgfortran/generated/in_pack_i1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_1 (gfc_array_i1 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_INTEGER_1 *)xmalloc (ssize * sizeof (GFC_INTEGER_1));\n+  destptr = xmallocarray (ssize, sizeof (GFC_INTEGER_1));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "ac6bb4f8ab1399e8269f157cbec34530640e3d0a", "filename": "libgfortran/generated/in_pack_i16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_16 (gfc_array_i16 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_INTEGER_16 *)xmalloc (ssize * sizeof (GFC_INTEGER_16));\n+  destptr = xmallocarray (ssize, sizeof (GFC_INTEGER_16));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "f42a89254ad26d57de1135a5e172fbf6d2f4a6d1", "filename": "libgfortran/generated/in_pack_i2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_2 (gfc_array_i2 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_INTEGER_2 *)xmalloc (ssize * sizeof (GFC_INTEGER_2));\n+  destptr = xmallocarray (ssize, sizeof (GFC_INTEGER_2));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "acde25aa9e36f2d582fefe0f6c9e3ff5b3bf6a92", "filename": "libgfortran/generated/in_pack_i4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_4 (gfc_array_i4 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_INTEGER_4 *)xmalloc (ssize * sizeof (GFC_INTEGER_4));\n+  destptr = xmallocarray (ssize, sizeof (GFC_INTEGER_4));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "5be35445c20f164bec6c7a346c21a378db4652e7", "filename": "libgfortran/generated/in_pack_i8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_8 (gfc_array_i8 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_INTEGER_8 *)xmalloc (ssize * sizeof (GFC_INTEGER_8));\n+  destptr = xmallocarray (ssize, sizeof (GFC_INTEGER_8));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "c4680d8cc92e9db6dcf64f39fc667f916a71cc22", "filename": "libgfortran/generated/in_pack_r10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_r10 (gfc_array_r10 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_REAL_10 *)xmalloc (ssize * sizeof (GFC_REAL_10));\n+  destptr = xmallocarray (ssize, sizeof (GFC_REAL_10));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "ff09d1462f2cbbf7b274344d2692c3f16ff7e9ec", "filename": "libgfortran/generated/in_pack_r16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_r16 (gfc_array_r16 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_REAL_16 *)xmalloc (ssize * sizeof (GFC_REAL_16));\n+  destptr = xmallocarray (ssize, sizeof (GFC_REAL_16));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "34fe5829aed81f263a8f45019f2c237e11205182", "filename": "libgfortran/generated/in_pack_r4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_r4 (gfc_array_r4 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_REAL_4 *)xmalloc (ssize * sizeof (GFC_REAL_4));\n+  destptr = xmallocarray (ssize, sizeof (GFC_REAL_4));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "b0728c9b69f1650221d9e84e0f0a0760c30ff320", "filename": "libgfortran/generated/in_pack_r8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fin_pack_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fin_pack_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -76,7 +76,7 @@ internal_pack_r8 (gfc_array_r8 * source)\n     return source->base_addr;\n \n   /* Allocate storage for the destination.  */\n-  destptr = (GFC_REAL_8 *)xmalloc (ssize * sizeof (GFC_REAL_8));\n+  destptr = xmallocarray (ssize, sizeof (GFC_REAL_8));\n   dest = destptr;\n   src = source->base_addr;\n   stride0 = stride[0];"}, {"sha": "fdccc3d4433de2895be80fd786e374ab6c85775c", "filename": "libgfortran/generated/iparity_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiparity_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiparity_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiparity_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iparity_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miparity_i1 (gfc_array_i1 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miparity_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siparity_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siparity_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n     }\n   else\n     {"}, {"sha": "7a572ba7130740ccf47348a3fb9a424046af6daf", "filename": "libgfortran/generated/iparity_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiparity_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiparity_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiparity_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iparity_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miparity_i16 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miparity_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siparity_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siparity_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "49233fbc56d06afef882c81de67e1162e52c34ee", "filename": "libgfortran/generated/iparity_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiparity_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiparity_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiparity_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iparity_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miparity_i2 (gfc_array_i2 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miparity_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siparity_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siparity_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n     }\n   else\n     {"}, {"sha": "1551e51febeddd2e1e71fc433708d3a377d90503", "filename": "libgfortran/generated/iparity_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiparity_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiparity_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiparity_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iparity_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miparity_i4 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miparity_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siparity_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siparity_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "a745bb6bec627f348a71e2f5e384b3db709f08c3", "filename": "libgfortran/generated/iparity_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiparity_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fiparity_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiparity_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ iparity_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ miparity_i8 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ miparity_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -430,8 +428,7 @@ siparity_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ siparity_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "0ff7d58b9a5194dff94141e4d6899e8a84ec1345", "filename": "libgfortran/generated/matmul_c10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_c10 (gfc_array_c10 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_COMPLEX_10) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_COMPLEX_10));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "a5fea00c8da380c68d717d06783dcea69ad2423d", "filename": "libgfortran/generated/matmul_c16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_c16 (gfc_array_c16 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_COMPLEX_16) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_COMPLEX_16));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "b5b0ecb83ec0c80ee108f4b9f4ce8bfb8f957d29", "filename": "libgfortran/generated/matmul_c4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_c4 (gfc_array_c4 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_COMPLEX_4) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_COMPLEX_4));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "077b709df98b6d8a52e1c9c8c92a553c4415dbeb", "filename": "libgfortran/generated/matmul_c8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_c8 (gfc_array_c8 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_COMPLEX_8) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_COMPLEX_8));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "72c998a1b479e65fcb4c05b8001a2f059c63047c", "filename": "libgfortran/generated/matmul_i1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_i1 (gfc_array_i1 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_INTEGER_1) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_INTEGER_1));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "59cd80ba8d0c56291c2aa4c76f587eb1bc38ef29", "filename": "libgfortran/generated/matmul_i16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_i16 (gfc_array_i16 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_INTEGER_16) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_INTEGER_16));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "6fddc4f18e2195c1a7a985a19213dc4226637da7", "filename": "libgfortran/generated/matmul_i2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_i2 (gfc_array_i2 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_INTEGER_2) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_INTEGER_2));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "f62cb56aa1be25810679691c1952d6569eecfb5e", "filename": "libgfortran/generated/matmul_i4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_i4 (gfc_array_i4 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_INTEGER_4) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_INTEGER_4));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "6d524905ea5e175f925af1eff76944a655a01d9b", "filename": "libgfortran/generated/matmul_i8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_i8 (gfc_array_i8 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_INTEGER_8) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_INTEGER_8));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "370db0731cf7eb87c7005da0ece29609ce9b40de", "filename": "libgfortran/generated/matmul_l16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -88,7 +88,7 @@ matmul_l16 (gfc_array_l16 * const restrict retarray,\n         }\n           \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_LOGICAL_16) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_LOGICAL_16));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "d901e3cd7d8a30033c666d3867b436347477ffc4", "filename": "libgfortran/generated/matmul_l4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -88,7 +88,7 @@ matmul_l4 (gfc_array_l4 * const restrict retarray,\n         }\n           \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_LOGICAL_4) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_LOGICAL_4));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "5862c8d870cbbc6eb510826e13661706525f2298", "filename": "libgfortran/generated/matmul_l8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -88,7 +88,7 @@ matmul_l8 (gfc_array_l8 * const restrict retarray,\n         }\n           \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_LOGICAL_8) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_LOGICAL_8));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "6c9656adfda16ff9ece21ce1af941b14372feb00", "filename": "libgfortran/generated/matmul_r10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_r10 (gfc_array_r10 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_REAL_10) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_REAL_10));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "fbe8e0928840bdaaee824277cbce9d4ea7499eb6", "filename": "libgfortran/generated/matmul_r16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_r16 (gfc_array_r16 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_REAL_16) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_REAL_16));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "f80c8bfcd2fdbf1690e311d3b10ec1059936ad5d", "filename": "libgfortran/generated/matmul_r4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_r4 (gfc_array_r4 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_REAL_4) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_REAL_4));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "7aec3b3c2afeb5839eb0dfd914b34e95a3815ecd", "filename": "libgfortran/generated/matmul_r8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmatmul_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -124,7 +124,7 @@ matmul_r8 (gfc_array_r8 * const restrict retarray,\n         }\n \n       retarray->base_addr\n-\t= xmalloc (sizeof (GFC_REAL_8) * size0 ((array_t *) retarray));\n+\t= xmallocarray (size0 ((array_t *) retarray), sizeof (GFC_REAL_8));\n       retarray->offset = 0;\n     }\n     else if (unlikely (compile_options.bounds_check))"}, {"sha": "d205d24667c6d35c8a45be05ef5b41348c23b3eb", "filename": "libgfortran/generated/maxloc0_16_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "3d8e3dc0fd71419b1a46a0f96f0a62d0c2a7c8e9", "filename": "libgfortran/generated/maxloc0_16_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "93f5cc477322001588963ecc0bfa39b7e6290180", "filename": "libgfortran/generated/maxloc0_16_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "6858c8ff7fd5f06e455c3a31e6c2d616f8000cbf", "filename": "libgfortran/generated/maxloc0_16_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "f324b02fc3a9180fa0820969e89ccc7a7adaea16", "filename": "libgfortran/generated/maxloc0_16_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "03560f711f08ba31ff44a25603b9fa2a56811085", "filename": "libgfortran/generated/maxloc0_16_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "aeb2e81d2c8cc9c258f947dc55ba90cce27c8918", "filename": "libgfortran/generated/maxloc0_16_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "a88774e954b1b3d91150914d18e698470c2f7c5f", "filename": "libgfortran/generated/maxloc0_16_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "8704cad65cb87aaa62d9ded0064a8a12a87ab053", "filename": "libgfortran/generated/maxloc0_16_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_16_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "8e75ec977afa159b2d0a8f69664a4baf7d47b9b0", "filename": "libgfortran/generated/maxloc0_4_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "67383b6c5b018bb0e6c13abfc368f2eac9431a47", "filename": "libgfortran/generated/maxloc0_4_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "3991bd6b240a8dda8cbd252c8d56ebd27fd7bfaf", "filename": "libgfortran/generated/maxloc0_4_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "0a714c3c1829fe168f9e550437f41f5b35d98195", "filename": "libgfortran/generated/maxloc0_4_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "c32c6fb4f9fec230b1bd644ac021689166e44101", "filename": "libgfortran/generated/maxloc0_4_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "d2d7f2ef7f1ea9e654e04a62addb6d9d4d9d7936", "filename": "libgfortran/generated/maxloc0_4_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "e9d8620f0a58e67ffb8b4620a755a75c77c07a97", "filename": "libgfortran/generated/maxloc0_4_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "c402868def7a6d88def69312edb51b30dc1c88bf", "filename": "libgfortran/generated/maxloc0_4_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "5057e9c34a77df7d7e262c732f32d43488e41777", "filename": "libgfortran/generated/maxloc0_4_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_4_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "95d027dbd32a538e4ec79cb8752f7db3ceae01b0", "filename": "libgfortran/generated/maxloc0_8_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "1fa391b11652191abbd71bc4edba3343fe8b98df", "filename": "libgfortran/generated/maxloc0_8_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "d98a1a25adfba4817d639a6c369c7d324a3ad528", "filename": "libgfortran/generated/maxloc0_8_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "56a77487fa010a8ebc38fcd9f5a98d06959c997f", "filename": "libgfortran/generated/maxloc0_8_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "dd1fe2c56f470a2356971cea4520910ce8e5571c", "filename": "libgfortran/generated/maxloc0_8_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "2c8394cefa629449dd8c2c16e53511bb48ff5969", "filename": "libgfortran/generated/maxloc0_8_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "4ebf6f4738b0e59d1911381deec9a001d695a5f3", "filename": "libgfortran/generated/maxloc0_8_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "893adadd7fda88ec3b0a684d1ddbb67f7ea80382", "filename": "libgfortran/generated/maxloc0_8_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "e2343430a2e2d546b058696ca1c8a4c71d8f2277", "filename": "libgfortran/generated/maxloc0_8_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc0_8_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ maxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mmaxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ smaxloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "4d1bea09c7c71d2d85a03781551bb79c43bd5623", "filename": "libgfortran/generated/maxloc1_16_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "eb9b2a0cd6207ced5ce2012ea53b66e0fdb5ca29", "filename": "libgfortran/generated/maxloc1_16_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "91a0800a7ba7733b393e774b3da9199f77960468", "filename": "libgfortran/generated/maxloc1_16_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "c680351674db8459e0652b5e935b197b53eb0b43", "filename": "libgfortran/generated/maxloc1_16_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "ea164dc6b3ab0bc33fa60629e04ecfdb15c3c7fb", "filename": "libgfortran/generated/maxloc1_16_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "4d5ed45a5f47cbbfa1caab4aa2d17c0b194d6afc", "filename": "libgfortran/generated/maxloc1_16_r10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "572d91617a1e9a6bde4bdc932ffcf9c3b35d3c66", "filename": "libgfortran/generated/maxloc1_16_r16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "d9aef3e63b8274d7ddb06dcbde8414ac9f897913", "filename": "libgfortran/generated/maxloc1_16_r4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "d1014cdb07d214bed9f3fe4693f8e67143dcd115", "filename": "libgfortran/generated/maxloc1_16_r8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_16_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "1ab44ab6b0eaf36a9a195fd70d13eb38cc000a3a", "filename": "libgfortran/generated/maxloc1_4_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "59bb2a31e397afcde53db5184f93c2df89acb16e", "filename": "libgfortran/generated/maxloc1_4_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "794fde04d12b387a1942a4a3c63b89668cffff0e", "filename": "libgfortran/generated/maxloc1_4_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "d10e937365a120a15bb2bf79edb7b8873bf8392d", "filename": "libgfortran/generated/maxloc1_4_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "b761b8264e1e66e3c40853db052b357b6c89903f", "filename": "libgfortran/generated/maxloc1_4_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "f1d522df5cf524f76ca98b1db2fb0dc702fe3631", "filename": "libgfortran/generated/maxloc1_4_r10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "deaf571ba89811573c8bc199aa6c11662b65ae1b", "filename": "libgfortran/generated/maxloc1_4_r16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "bc64495995890af5900228bfe45642c08be598f6", "filename": "libgfortran/generated/maxloc1_4_r4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "af09cb3ecec30b38ef4ff6b9b13912909ebcbc9f", "filename": "libgfortran/generated/maxloc1_4_r8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_4_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "caaabe72d401d9030908ce5d7b4885cdbb823653", "filename": "libgfortran/generated/maxloc1_8_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "384635c99e092b5d69cb93330330eacb88cccdcf", "filename": "libgfortran/generated/maxloc1_8_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "731c7237e174f1be396063c820a0b45803f1410c", "filename": "libgfortran/generated/maxloc1_8_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "26fdf834bb36886c236c3ef7b94b1fee541668df", "filename": "libgfortran/generated/maxloc1_8_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "a7f43d15f3eb9e33e66e0f7d1cc1224d9ac026bb", "filename": "libgfortran/generated/maxloc1_8_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "f996db49589a165484714aa2f14500c3d5aa9ca6", "filename": "libgfortran/generated/maxloc1_8_r10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "d3ae5cb36bd97742bda0a7b4e27cd15308f166ed", "filename": "libgfortran/generated/maxloc1_8_r16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "c282cf7035def6d3260f71d5f16d49f27cb54c45", "filename": "libgfortran/generated/maxloc1_8_r4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "13446e0708b0c81fe6b077de91490bea7a196c46", "filename": "libgfortran/generated/maxloc1_8_r8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxloc1_8_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ maxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mmaxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mmaxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ smaxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ smaxloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "eadec5ce9fd1c1179f0da05e55c0d7823b31b45c", "filename": "libgfortran/generated/maxval_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ maxval_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mmaxval_i1 (gfc_array_i1 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mmaxval_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n \n     }\n   else\n@@ -472,8 +470,7 @@ smaxval_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ smaxval_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n     }\n   else\n     {"}, {"sha": "b83dd181e7622bbd982952293913631b538223e2", "filename": "libgfortran/generated/maxval_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ maxval_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mmaxval_i16 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mmaxval_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -472,8 +470,7 @@ smaxval_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ smaxval_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "72bb3b4dda0960c3501a0575089053b16868b218", "filename": "libgfortran/generated/maxval_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ maxval_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mmaxval_i2 (gfc_array_i2 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mmaxval_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n \n     }\n   else\n@@ -472,8 +470,7 @@ smaxval_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ smaxval_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n     }\n   else\n     {"}, {"sha": "c939a0acd4317b367a0922ee2751f28d65340a81", "filename": "libgfortran/generated/maxval_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ maxval_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mmaxval_i4 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mmaxval_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -472,8 +470,7 @@ smaxval_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ smaxval_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "50ee398d2891961f92d85ecd34e56c87737f92e9", "filename": "libgfortran/generated/maxval_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ maxval_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mmaxval_i8 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mmaxval_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -472,8 +470,7 @@ smaxval_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ smaxval_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "b16d263415913782f12b6e102eede281b998147d", "filename": "libgfortran/generated/maxval_r10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ maxval_r10 (gfc_array_r10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mmaxval_r10 (gfc_array_r10 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mmaxval_r10 (gfc_array_r10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n \n     }\n   else\n@@ -472,8 +470,7 @@ smaxval_r10 (gfc_array_r10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ smaxval_r10 (gfc_array_r10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n     }\n   else\n     {"}, {"sha": "df6f2b088e9f7242a45e4a206c03f7972cb50581", "filename": "libgfortran/generated/maxval_r16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ maxval_r16 (gfc_array_r16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mmaxval_r16 (gfc_array_r16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mmaxval_r16 (gfc_array_r16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n \n     }\n   else\n@@ -472,8 +470,7 @@ smaxval_r16 (gfc_array_r16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ smaxval_r16 (gfc_array_r16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n     }\n   else\n     {"}, {"sha": "edccaeb6567b258924f4213d17e657892cbadddd", "filename": "libgfortran/generated/maxval_r4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ maxval_r4 (gfc_array_r4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mmaxval_r4 (gfc_array_r4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mmaxval_r4 (gfc_array_r4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n \n     }\n   else\n@@ -472,8 +470,7 @@ smaxval_r4 (gfc_array_r4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ smaxval_r4 (gfc_array_r4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n     }\n   else\n     {"}, {"sha": "bfbfa981dde08d21cd0d3a6992b052aed55e705a", "filename": "libgfortran/generated/maxval_r8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fmaxval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmaxval_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ maxval_r8 (gfc_array_r8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mmaxval_r8 (gfc_array_r8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mmaxval_r8 (gfc_array_r8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n \n     }\n   else\n@@ -472,8 +470,7 @@ smaxval_r8 (gfc_array_r8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ smaxval_r8 (gfc_array_r8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n     }\n   else\n     {"}, {"sha": "ccd89f043a4c901269a681bc5c4a65eabc640236", "filename": "libgfortran/generated/minloc0_16_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_16_i1 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "65050b9843c5e3436b7bc4a6b20cd45259223097", "filename": "libgfortran/generated/minloc0_16_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_16_i16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "9fb63255e3a11e5becce9cbd3f8041834ff543e8", "filename": "libgfortran/generated/minloc0_16_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_16_i2 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "999ac4b50c61fd877e4c24776ab06bb67072a4dd", "filename": "libgfortran/generated/minloc0_16_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_16_i4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "3c2e3c3a9b335b5417da8eb9979b9950eba47e24", "filename": "libgfortran/generated/minloc0_16_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_16_i8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "c661cdc0f6c1bbb4a266e8279db57e9ef0c6904e", "filename": "libgfortran/generated/minloc0_16_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_16_r10 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "c455e92de7fcecf462f05dc4ec716694fcf605ed", "filename": "libgfortran/generated/minloc0_16_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_16_r16 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "779935e4ffe98a81ba7b14ad3c5b47ab90670326", "filename": "libgfortran/generated/minloc0_16_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_16_r4 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "d90237677721253b4c9005f1190684d75d86c8f2", "filename": "libgfortran/generated/minloc0_16_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_16_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_16_r8 (gfc_array_i16 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "a9e902dd36517b48af73507772ac73a219944840", "filename": "libgfortran/generated/minloc0_4_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_4_i1 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "7981c28ba00db35c1f9ded32d2acc3e76a287de6", "filename": "libgfortran/generated/minloc0_4_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_4_i16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "59439faa0929251622dc4588687fdd8126e52c02", "filename": "libgfortran/generated/minloc0_4_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_4_i2 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "5731a43ea7768b2e843ceefb577846360a49a600", "filename": "libgfortran/generated/minloc0_4_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_4_i4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "50b8e1612e365bd526bbf34006b5133f6b9d466b", "filename": "libgfortran/generated/minloc0_4_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_4_i8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "2701a859f54d93a489d8c75f2bbbfd491990070f", "filename": "libgfortran/generated/minloc0_4_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_4_r10 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "fca50b39ea92dc6b6aa334fce168ecccc9d91204", "filename": "libgfortran/generated/minloc0_4_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_4_r16 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "0469a5280d0d9bbbea98d1ec244df12d2b66d90b", "filename": "libgfortran/generated/minloc0_4_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_4_r4 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "7be43c4af240c9c626c1f13864fa5146e78d397e", "filename": "libgfortran/generated/minloc0_4_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_4_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_4_r8 (gfc_array_i4 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "60bfe811cdc09a8bd617e975fa4016fb44c36b11", "filename": "libgfortran/generated/minloc0_8_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_8_i1 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "27ddd4f9923e9673e78e629b9c969a1bd37050d1", "filename": "libgfortran/generated/minloc0_8_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_8_i16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "38a4aa64ed464cd4e658617658046c869319c1a9", "filename": "libgfortran/generated/minloc0_8_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_8_i2 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "5586ea9fae497760c96b9fef6e56bdb263f179f4", "filename": "libgfortran/generated/minloc0_8_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_8_i4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "1f21d2657d9d966b73e74d0fc51f1b73ff781e70", "filename": "libgfortran/generated/minloc0_8_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_8_i8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "df34ca3336c033a2e8561484e77a7782c13eedd6", "filename": "libgfortran/generated/minloc0_8_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_8_r10 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "d8769ec950ee43c06068e855756e25b77e8432b4", "filename": "libgfortran/generated/minloc0_8_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_8_r16 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "b8ab0c9903cc4f559d7ce8138732c64cd55d6b63", "filename": "libgfortran/generated/minloc0_8_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_8_r4 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "ff67f1ed5e389559e1f846593eaef5980e57df45", "filename": "libgfortran/generated/minloc0_8_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc0_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc0_8_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -58,7 +58,7 @@ minloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -199,7 +199,7 @@ mminloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank - 1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -367,7 +367,7 @@ sminloc0_8_r8 (gfc_array_i8 * const restrict retarray,\n       GFC_DIMENSION_SET(retarray->dim[0], 0, rank-1, 1);\n       retarray->dtype = (retarray->dtype & ~GFC_DTYPE_RANK_MASK) | 1;\n       retarray->offset = 0;\n-      retarray->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      retarray->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "a9b2d96b1cc332baf11e6dee9f4363ebf73b40a2", "filename": "libgfortran/generated/minloc1_16_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_16_i1 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "1e52c222033d195a853cb0bda55c1f4661bad316", "filename": "libgfortran/generated/minloc1_16_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_16_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "7617b9e32b50eac420e04dffea9e58f6a193ee26", "filename": "libgfortran/generated/minloc1_16_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_16_i2 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "9729d11bce8a8351eba95c288ab4b6c572db032e", "filename": "libgfortran/generated/minloc1_16_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_16_i4 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "00421b235403d44d8b280ca8c9be73ec897445a6", "filename": "libgfortran/generated/minloc1_16_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_16_i8 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "fb1401b951700cda586dcf162e17ac95d435b801", "filename": "libgfortran/generated/minloc1_16_r10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_16_r10 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "031286809e6bada08c63992cfa363a66ba154314", "filename": "libgfortran/generated/minloc1_16_r16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_16_r16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "af5b67d900bdb605699bde92b6e5d3351dddcf44", "filename": "libgfortran/generated/minloc1_16_r4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_16_r4 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "dd2be3bb4de72e2f0e4919af141e70a0d28d3d67", "filename": "libgfortran/generated/minloc1_16_r8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_16_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_16_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_16_r8 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "b0bf6efba8a980e6ff0060bb84b23f6910b2869b", "filename": "libgfortran/generated/minloc1_4_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_4_i1 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "882b4b41744378813b140654503cb8c3f5e20492", "filename": "libgfortran/generated/minloc1_4_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_4_i16 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "877af7a5a0c2a50bfb4417de7b001f4c5a702417", "filename": "libgfortran/generated/minloc1_4_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_4_i2 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "3a872706d123b6a1b01411efd7c36c43cd16407c", "filename": "libgfortran/generated/minloc1_4_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_4_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "22e43bf6c85fa71d63618e5f1a939816764bdc38", "filename": "libgfortran/generated/minloc1_4_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_4_i8 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "624006cd6947229e729007452e682c7398bf04ed", "filename": "libgfortran/generated/minloc1_4_r10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_4_r10 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "f32b608252244754f9f9479bd3ee65a8732ac280", "filename": "libgfortran/generated/minloc1_4_r16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_4_r16 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "0ed5fe96e7b057896972d83729941a1d8b328438", "filename": "libgfortran/generated/minloc1_4_r4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_4_r4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "c780a42aa2e0e43f3a6907f0d07a164080d3bb05", "filename": "libgfortran/generated/minloc1_4_r8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_4_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_4_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_4_r8 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "6f8c7d9443cc3d250c443c6b3f901ebf9818972d", "filename": "libgfortran/generated/minloc1_8_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_8_i1 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "07cb01171a1a7ad800f70be40f025e74e641a3db", "filename": "libgfortran/generated/minloc1_8_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_8_i16 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "9ea0bf4c342dd4ee2a98fb00c4bd7250cdfb5d74", "filename": "libgfortran/generated/minloc1_8_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_8_i2 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "5e433cc1dea85dbf862a73c80279691489f03d9d", "filename": "libgfortran/generated/minloc1_8_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_8_i4 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "364cf324959d95ad2b62eb1e33e922e43864fcc8", "filename": "libgfortran/generated/minloc1_8_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_8_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "901cf91a3f62f8bf0ce4e0a8a25f2784f2757672", "filename": "libgfortran/generated/minloc1_8_r10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_8_r10 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "7bf17ea37ef5bcb3bb596a4e1f22ac2fc426d51e", "filename": "libgfortran/generated/minloc1_8_r16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_8_r16 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "5edb92f99588649e79f5cc7e0e71059bf708ef9f", "filename": "libgfortran/generated/minloc1_8_r4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_8_r4 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "405b9e1834b6126fa09040b62549f2c1011442b9", "filename": "libgfortran/generated/minloc1_8_r8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminloc1_8_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminloc1_8_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ minloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -294,8 +293,7 @@ mminloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -307,7 +305,7 @@ mminloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -485,8 +483,7 @@ sminloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -495,7 +492,7 @@ sminloc1_8_r8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "da7405b28301f7318f49a3fe921f003144793abb", "filename": "libgfortran/generated/minval_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ minval_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mminval_i1 (gfc_array_i1 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mminval_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n \n     }\n   else\n@@ -472,8 +470,7 @@ sminval_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ sminval_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n     }\n   else\n     {"}, {"sha": "11cbeac5ff6f0d9e572cfc90ec3c6e21d43e2dad", "filename": "libgfortran/generated/minval_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ minval_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mminval_i16 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mminval_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -472,8 +470,7 @@ sminval_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ sminval_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "e208b57e2ee54ae84086fa7b3061fb5c90d08378", "filename": "libgfortran/generated/minval_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ minval_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mminval_i2 (gfc_array_i2 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mminval_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n \n     }\n   else\n@@ -472,8 +470,7 @@ sminval_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ sminval_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n     }\n   else\n     {"}, {"sha": "68ba76e8d4c7f278b0d2e4b3d2e56d72e17990fc", "filename": "libgfortran/generated/minval_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ minval_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mminval_i4 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mminval_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -472,8 +470,7 @@ sminval_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ sminval_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "b089358d048b4698469220a082ee15ee48a0503d", "filename": "libgfortran/generated/minval_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ minval_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mminval_i8 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mminval_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -472,8 +470,7 @@ sminval_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ sminval_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "e9e6afee6156ee4bf3b85d6b8f1247000fc29a06", "filename": "libgfortran/generated/minval_r10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ minval_r10 (gfc_array_r10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mminval_r10 (gfc_array_r10 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mminval_r10 (gfc_array_r10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n \n     }\n   else\n@@ -472,8 +470,7 @@ sminval_r10 (gfc_array_r10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ sminval_r10 (gfc_array_r10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n     }\n   else\n     {"}, {"sha": "e4e38275d3f39e6205be91a85e52db885284ca14", "filename": "libgfortran/generated/minval_r16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ minval_r16 (gfc_array_r16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mminval_r16 (gfc_array_r16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mminval_r16 (gfc_array_r16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n \n     }\n   else\n@@ -472,8 +470,7 @@ sminval_r16 (gfc_array_r16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ sminval_r16 (gfc_array_r16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n     }\n   else\n     {"}, {"sha": "515b2db49764a9e8709439dfe1d84c896725aaec", "filename": "libgfortran/generated/minval_r4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ minval_r4 (gfc_array_r4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mminval_r4 (gfc_array_r4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mminval_r4 (gfc_array_r4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n \n     }\n   else\n@@ -472,8 +470,7 @@ sminval_r4 (gfc_array_r4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ sminval_r4 (gfc_array_r4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n     }\n   else\n     {"}, {"sha": "c61656f874e44e076a7d5c629539af352c330d3e", "filename": "libgfortran/generated/minval_r8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fminval_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fminval_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ minval_r8 (gfc_array_r8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -286,8 +285,7 @@ mminval_r8 (gfc_array_r8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -299,7 +297,7 @@ mminval_r8 (gfc_array_r8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n \n     }\n   else\n@@ -472,8 +470,7 @@ sminval_r8 (gfc_array_r8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -482,7 +479,7 @@ sminval_r8 (gfc_array_r8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n     }\n   else\n     {"}, {"sha": "0145c99b65298ddca4e731c85cfc8b8670ab723e", "filename": "libgfortran/generated/norm2_r10.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fnorm2_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fnorm2_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,10 +101,9 @@ norm2_r10 (gfc_array_r10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */"}, {"sha": "46329d52329ffd3cb47ea6be4fd112233cce1fad", "filename": "libgfortran/generated/norm2_r16.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fnorm2_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fnorm2_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -105,10 +105,9 @@ norm2_r16 (gfc_array_r16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */"}, {"sha": "067dbee6292e8166d6a18883ec782d0137070fc6", "filename": "libgfortran/generated/norm2_r4.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fnorm2_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fnorm2_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,10 +101,9 @@ norm2_r4 (gfc_array_r4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */"}, {"sha": "51c89427a4aa44f75d4c76ab00933c641ea0ee45", "filename": "libgfortran/generated/norm2_r8.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fnorm2_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fnorm2_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fnorm2_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,10 +101,9 @@ norm2_r8 (gfc_array_r8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */"}, {"sha": "90866a840d183cc1ae043605647e2ab970724481", "filename": "libgfortran/generated/pack_c10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_c10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_c10 (gfc_array_c10 *ret, const gfc_array_c10 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_COMPLEX_10) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_COMPLEX_10));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "60f60d1e43dffb8a12a3c219eed4985652859b53", "filename": "libgfortran/generated/pack_c16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_c16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_c16 (gfc_array_c16 *ret, const gfc_array_c16 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_COMPLEX_16) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_COMPLEX_16));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "36a9f941c733739c26a894c85fcfe4b92b744e6c", "filename": "libgfortran/generated/pack_c4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_c4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_c4 (gfc_array_c4 *ret, const gfc_array_c4 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_COMPLEX_4) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_COMPLEX_4));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "38880c1831ad1bf475a951d3b7eeafe960db2f2f", "filename": "libgfortran/generated/pack_c8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_c8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_c8 (gfc_array_c8 *ret, const gfc_array_c8 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_COMPLEX_8) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_COMPLEX_8));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "933cf9ab796a8d23290e2cdb23d5ed9f98e16b52", "filename": "libgfortran/generated/pack_i1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_i1 (gfc_array_i1 *ret, const gfc_array_i1 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_INTEGER_1) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_INTEGER_1));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "01d32ad0fadf61f76ac7c56478bfb713f0f7a7d2", "filename": "libgfortran/generated/pack_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_i16 (gfc_array_i16 *ret, const gfc_array_i16 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_INTEGER_16));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "de329abf11a0396000327ce5807836ceb2ceae71", "filename": "libgfortran/generated/pack_i2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_i2 (gfc_array_i2 *ret, const gfc_array_i2 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_INTEGER_2) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_INTEGER_2));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "93ac356f81a0e4675744670997fcee5f382bba42", "filename": "libgfortran/generated/pack_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_i4 (gfc_array_i4 *ret, const gfc_array_i4 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_INTEGER_4));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "ec7b4275c3dbbb8bfcac8d4e45d712abeffdee9f", "filename": "libgfortran/generated/pack_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_i8 (gfc_array_i8 *ret, const gfc_array_i8 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_INTEGER_8));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "8b3e81693a5562dfc777f18e0cc7633d60e582ae", "filename": "libgfortran/generated/pack_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_r10 (gfc_array_r10 *ret, const gfc_array_r10 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_REAL_10) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_REAL_10));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "598ef8e576aa0bc01e24e07b524da55deb7d722b", "filename": "libgfortran/generated/pack_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_r16 (gfc_array_r16 *ret, const gfc_array_r16 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_REAL_16) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_REAL_16));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "955a812d2488173f7ead19261e2b86f5b381ad9e", "filename": "libgfortran/generated/pack_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_r4 (gfc_array_r4 *ret, const gfc_array_r4 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_REAL_4) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_REAL_4));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "d0bb227e163a12926e01fb40a2a373850ecd31a9", "filename": "libgfortran/generated/pack_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fpack_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpack_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -167,8 +167,8 @@ pack_r8 (gfc_array_r8 *ret, const gfc_array_r8 *array,\n \n \t  ret->offset = 0;\n \n-\t  /* xmalloc allocates a single byte for zero size.  */\n-\t  ret->base_addr = xmalloc (sizeof (GFC_REAL_8) * total);\n+\t  /* xmallocarray allocates a single byte for zero size.  */\n+\t  ret->base_addr = xmallocarray (total, sizeof (GFC_REAL_8));\n \n \t  if (total == 0)\n \t    return;"}, {"sha": "ff81d1ac5ed98f0980e7e9460bf7a774857a6311", "filename": "libgfortran/generated/parity_l1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fparity_l1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fparity_l1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fparity_l1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ parity_l1 (gfc_array_l1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_1));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */"}, {"sha": "66970d00f9495dd6368e9c544a21b9a202e201fc", "filename": "libgfortran/generated/parity_l16.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fparity_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fparity_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fparity_l16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ parity_l16 (gfc_array_l16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */"}, {"sha": "5942257e3d6eff3eaeb40030901a9bf6c3e71228", "filename": "libgfortran/generated/parity_l2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fparity_l2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fparity_l2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fparity_l2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ parity_l2 (gfc_array_l2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_2));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */"}, {"sha": "4f8a9f917563079d25b593262616ea3432be7bb9", "filename": "libgfortran/generated/parity_l4.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fparity_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fparity_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fparity_l4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ parity_l4 (gfc_array_l4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */"}, {"sha": "73b1d9fba33e9681e22cc8d317eccb16ed4b6e3e", "filename": "libgfortran/generated/parity_l8.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fparity_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fparity_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fparity_l8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -98,10 +98,9 @@ parity_l8 (gfc_array_l8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_LOGICAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_LOGICAL_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */"}, {"sha": "7b325837aed098ade449e79a842ddcfc2509ec53", "filename": "libgfortran/generated/product_c10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_c10 (gfc_array_c10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_10));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_c10 (gfc_array_c10 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_COMPLEX_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_c10 (gfc_array_c10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_10));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_c10 (gfc_array_c10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_c10 (gfc_array_c10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_10));\n     }\n   else\n     {"}, {"sha": "4f31e1b63d0abf91ae86d6727ed85ea5ae70d23a", "filename": "libgfortran/generated/product_c16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_c16 (gfc_array_c16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_c16 (gfc_array_c16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_COMPLEX_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_c16 (gfc_array_c16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_16));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_c16 (gfc_array_c16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_c16 (gfc_array_c16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_16));\n     }\n   else\n     {"}, {"sha": "038c502d4790e016a3983e49fc9156d08c45324e", "filename": "libgfortran/generated/product_c4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_c4 (gfc_array_c4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_c4 (gfc_array_c4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_COMPLEX_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_c4 (gfc_array_c4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_4));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_c4 (gfc_array_c4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_c4 (gfc_array_c4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_4));\n     }\n   else\n     {"}, {"sha": "a941a6c624a9a8c46bc6ac6da64158a2f8326456", "filename": "libgfortran/generated/product_c8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_c8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_c8 (gfc_array_c8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_c8 (gfc_array_c8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_COMPLEX_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_c8 (gfc_array_c8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_8));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_c8 (gfc_array_c8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_c8 (gfc_array_c8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_8));\n     }\n   else\n     {"}, {"sha": "39d94fc81ecd012da74a3a558f8f41f041d9a2dc", "filename": "libgfortran/generated/product_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_i1 (gfc_array_i1 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n     }\n   else\n     {"}, {"sha": "a89070a44ec096d329b1fa8dbe595c560181ae13", "filename": "libgfortran/generated/product_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_i16 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "c8e04ef85dc29f0a0d8a9ca24e514f3684837a91", "filename": "libgfortran/generated/product_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_i2 (gfc_array_i2 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n     }\n   else\n     {"}, {"sha": "1d3b9cf6a1236f5c0cea693c90797ab7260f1af7", "filename": "libgfortran/generated/product_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_i4 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "7d61b9ba280ad0c5de8577c6045a3e3435caf7e8", "filename": "libgfortran/generated/product_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_i8 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "16aa3059e14fe0c3591c3a4ebe129d305881ad34", "filename": "libgfortran/generated/product_r10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_r10 (gfc_array_r10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_r10 (gfc_array_r10 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_r10 (gfc_array_r10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_r10 (gfc_array_r10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_r10 (gfc_array_r10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n     }\n   else\n     {"}, {"sha": "3bb085ff19b2ef13ef3d307b87211ad0cfa6276a", "filename": "libgfortran/generated/product_r16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_r16 (gfc_array_r16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_r16 (gfc_array_r16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_r16 (gfc_array_r16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_r16 (gfc_array_r16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_r16 (gfc_array_r16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n     }\n   else\n     {"}, {"sha": "18dfdde96723018d395d524fd3d275344f1c489a", "filename": "libgfortran/generated/product_r4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_r4 (gfc_array_r4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_r4 (gfc_array_r4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_r4 (gfc_array_r4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_r4 (gfc_array_r4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_r4 (gfc_array_r4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n     }\n   else\n     {"}, {"sha": "7ac062aa98ff6a3ce4709b7b39a82cd7c126cc53", "filename": "libgfortran/generated/product_r8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fproduct_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fproduct_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ product_r8 (gfc_array_r8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ mproduct_r8 (gfc_array_r8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ mproduct_r8 (gfc_array_r8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n \n     }\n   else\n@@ -430,8 +428,7 @@ sproduct_r8 (gfc_array_r8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ sproduct_r8 (gfc_array_r8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n     }\n   else\n     {"}, {"sha": "a7fb560d6321a7405f3ca6c465f00b2c36b3d7a9", "filename": "libgfortran/generated/reshape_c10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -111,11 +111,11 @@ reshape_c10 (gfc_array_c10 * const restrict ret,\n       ret->offset = 0;\n \n       if (unlikely (rs < 1))\n-        alloc_size = 1;\n+        alloc_size = 0;\n       else\n-        alloc_size = rs * sizeof (GFC_COMPLEX_10);\n+        alloc_size = rs;\n \n-      ret->base_addr = xmalloc (alloc_size);\n+      ret->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_10));\n       ret->dtype = (source->dtype & ~GFC_DTYPE_RANK_MASK) | rdim;\n     }\n "}, {"sha": "a8186f98d53d8360674856429267708dbfc7b20f", "filename": "libgfortran/generated/reshape_c16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -111,11 +111,11 @@ reshape_c16 (gfc_array_c16 * const restrict ret,\n       ret->offset = 0;\n \n       if (unlikely (rs < 1))\n-        alloc_size = 1;\n+        alloc_size = 0;\n       else\n-        alloc_size = rs * sizeof (GFC_COMPLEX_16);\n+        alloc_size = rs;\n \n-      ret->base_addr = xmalloc (alloc_size);\n+      ret->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_16));\n       ret->dtype = (source->dtype & ~GFC_DTYPE_RANK_MASK) | rdim;\n     }\n "}, {"sha": "1aa1934cef794aba9820695ea32c6a09098abb7f", "filename": "libgfortran/generated/reshape_c4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -111,11 +111,11 @@ reshape_c4 (gfc_array_c4 * const restrict ret,\n       ret->offset = 0;\n \n       if (unlikely (rs < 1))\n-        alloc_size = 1;\n+        alloc_size = 0;\n       else\n-        alloc_size = rs * sizeof (GFC_COMPLEX_4);\n+        alloc_size = rs;\n \n-      ret->base_addr = xmalloc (alloc_size);\n+      ret->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_4));\n       ret->dtype = (source->dtype & ~GFC_DTYPE_RANK_MASK) | rdim;\n     }\n "}, {"sha": "5b7f796234ea67e9756dc3baba636bdcdde665a1", "filename": "libgfortran/generated/reshape_c8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -111,11 +111,11 @@ reshape_c8 (gfc_array_c8 * const restrict ret,\n       ret->offset = 0;\n \n       if (unlikely (rs < 1))\n-        alloc_size = 1;\n+        alloc_size = 0;\n       else\n-        alloc_size = rs * sizeof (GFC_COMPLEX_8);\n+        alloc_size = rs;\n \n-      ret->base_addr = xmalloc (alloc_size);\n+      ret->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_8));\n       ret->dtype = (source->dtype & ~GFC_DTYPE_RANK_MASK) | rdim;\n     }\n "}, {"sha": "b766e1a9acf2af67a53ec2386c8d4078a82e199c", "filename": "libgfortran/generated/reshape_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -111,11 +111,11 @@ reshape_16 (gfc_array_i16 * const restrict ret,\n       ret->offset = 0;\n \n       if (unlikely (rs < 1))\n-        alloc_size = 1;\n+        alloc_size = 0;\n       else\n-        alloc_size = rs * sizeof (GFC_INTEGER_16);\n+        alloc_size = rs;\n \n-      ret->base_addr = xmalloc (alloc_size);\n+      ret->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       ret->dtype = (source->dtype & ~GFC_DTYPE_RANK_MASK) | rdim;\n     }\n "}, {"sha": "4831857b8270bd713ecbeaa0c7cc7240089f1bfe", "filename": "libgfortran/generated/reshape_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -111,11 +111,11 @@ reshape_4 (gfc_array_i4 * const restrict ret,\n       ret->offset = 0;\n \n       if (unlikely (rs < 1))\n-        alloc_size = 1;\n+        alloc_size = 0;\n       else\n-        alloc_size = rs * sizeof (GFC_INTEGER_4);\n+        alloc_size = rs;\n \n-      ret->base_addr = xmalloc (alloc_size);\n+      ret->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       ret->dtype = (source->dtype & ~GFC_DTYPE_RANK_MASK) | rdim;\n     }\n "}, {"sha": "1729d488baeb6805ebeedbd191708f5e3cb10c5a", "filename": "libgfortran/generated/reshape_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -111,11 +111,11 @@ reshape_8 (gfc_array_i8 * const restrict ret,\n       ret->offset = 0;\n \n       if (unlikely (rs < 1))\n-        alloc_size = 1;\n+        alloc_size = 0;\n       else\n-        alloc_size = rs * sizeof (GFC_INTEGER_8);\n+        alloc_size = rs;\n \n-      ret->base_addr = xmalloc (alloc_size);\n+      ret->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       ret->dtype = (source->dtype & ~GFC_DTYPE_RANK_MASK) | rdim;\n     }\n "}, {"sha": "f1dd44a43a6bba52b7be5eb9f6201e92e3467d6e", "filename": "libgfortran/generated/reshape_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -111,11 +111,11 @@ reshape_r10 (gfc_array_r10 * const restrict ret,\n       ret->offset = 0;\n \n       if (unlikely (rs < 1))\n-        alloc_size = 1;\n+        alloc_size = 0;\n       else\n-        alloc_size = rs * sizeof (GFC_REAL_10);\n+        alloc_size = rs;\n \n-      ret->base_addr = xmalloc (alloc_size);\n+      ret->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n       ret->dtype = (source->dtype & ~GFC_DTYPE_RANK_MASK) | rdim;\n     }\n "}, {"sha": "360b18ffdf47da8f1002d7a02eb54b7b74c092fc", "filename": "libgfortran/generated/reshape_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -111,11 +111,11 @@ reshape_r16 (gfc_array_r16 * const restrict ret,\n       ret->offset = 0;\n \n       if (unlikely (rs < 1))\n-        alloc_size = 1;\n+        alloc_size = 0;\n       else\n-        alloc_size = rs * sizeof (GFC_REAL_16);\n+        alloc_size = rs;\n \n-      ret->base_addr = xmalloc (alloc_size);\n+      ret->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n       ret->dtype = (source->dtype & ~GFC_DTYPE_RANK_MASK) | rdim;\n     }\n "}, {"sha": "e06cb5417998aaae90ac62d53424121a7296bf80", "filename": "libgfortran/generated/reshape_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -111,11 +111,11 @@ reshape_r4 (gfc_array_r4 * const restrict ret,\n       ret->offset = 0;\n \n       if (unlikely (rs < 1))\n-        alloc_size = 1;\n+        alloc_size = 0;\n       else\n-        alloc_size = rs * sizeof (GFC_REAL_4);\n+        alloc_size = rs;\n \n-      ret->base_addr = xmalloc (alloc_size);\n+      ret->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n       ret->dtype = (source->dtype & ~GFC_DTYPE_RANK_MASK) | rdim;\n     }\n "}, {"sha": "08888a8ad8e95cfbcc32b8a88f6e7114cdc5785b", "filename": "libgfortran/generated/reshape_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Freshape_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -111,11 +111,11 @@ reshape_r8 (gfc_array_r8 * const restrict ret,\n       ret->offset = 0;\n \n       if (unlikely (rs < 1))\n-        alloc_size = 1;\n+        alloc_size = 0;\n       else\n-        alloc_size = rs * sizeof (GFC_REAL_8);\n+        alloc_size = rs;\n \n-      ret->base_addr = xmalloc (alloc_size);\n+      ret->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n       ret->dtype = (source->dtype & ~GFC_DTYPE_RANK_MASK) | rdim;\n     }\n "}, {"sha": "c5047562d7ff52cc057b278fa7f6a1c94e5d034c", "filename": "libgfortran/generated/shape_i16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fshape_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fshape_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -49,7 +49,7 @@ shape_16 (gfc_array_i16 * const restrict ret,\n     {\n       GFC_DIMENSION_SET(ret->dim[0], 0, rank - 1, 1);\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * rank);\n+      ret->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_16));\n     }\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);"}, {"sha": "0a56fe9fe92eaa39a18dab61f3596ca98a95b9ff", "filename": "libgfortran/generated/shape_i4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fshape_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fshape_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -49,7 +49,7 @@ shape_4 (gfc_array_i4 * const restrict ret,\n     {\n       GFC_DIMENSION_SET(ret->dim[0], 0, rank - 1, 1);\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * rank);\n+      ret->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_4));\n     }\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);"}, {"sha": "6e9dc22583d4923ee518d7b5a34e201a69698189", "filename": "libgfortran/generated/shape_i8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fshape_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fshape_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -49,7 +49,7 @@ shape_8 (gfc_array_i8 * const restrict ret,\n     {\n       GFC_DIMENSION_SET(ret->dim[0], 0, rank - 1, 1);\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * rank);\n+      ret->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_8));\n     }\n \n   stride = GFC_DESCRIPTOR_STRIDE(ret,0);"}, {"sha": "592443e71aa1c651ac7d5ad7af2ae0fcfed58c3f", "filename": "libgfortran/generated/spread_c10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_c10 (gfc_array_c10 *ret, const gfc_array_c10 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_COMPLEX_10));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_COMPLEX_10));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_c10 (gfc_array_c10 *ret, const GFC_COMPLEX_10 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_COMPLEX_10));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_COMPLEX_10));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "0fce566d75183c4b1ae4a4f99d0522659d6376e5", "filename": "libgfortran/generated/spread_c16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_c16 (gfc_array_c16 *ret, const gfc_array_c16 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_COMPLEX_16));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_COMPLEX_16));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_c16 (gfc_array_c16 *ret, const GFC_COMPLEX_16 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_COMPLEX_16));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_COMPLEX_16));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "5d1e86b37560670e8b0595023cc0e8c591f6e02c", "filename": "libgfortran/generated/spread_c4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_c4 (gfc_array_c4 *ret, const gfc_array_c4 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_COMPLEX_4));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_COMPLEX_4));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_c4 (gfc_array_c4 *ret, const GFC_COMPLEX_4 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_COMPLEX_4));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_COMPLEX_4));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "f8b0da8bc765bde82c443051cd3e2deffdfbff08", "filename": "libgfortran/generated/spread_c8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_c8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_c8 (gfc_array_c8 *ret, const gfc_array_c8 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_COMPLEX_8));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_COMPLEX_8));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_c8 (gfc_array_c8 *ret, const GFC_COMPLEX_8 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_COMPLEX_8));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_COMPLEX_8));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "44aef16d3dfc4f128ad55a2a22efa5dc39cdbcd6", "filename": "libgfortran/generated/spread_i1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_i1 (gfc_array_i1 *ret, const gfc_array_i1 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_INTEGER_1));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_INTEGER_1));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_i1 (gfc_array_i1 *ret, const GFC_INTEGER_1 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_INTEGER_1));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_INTEGER_1));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "f4ad0180cce325ab2bba1b0dde4f705aede3c942", "filename": "libgfortran/generated/spread_i16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_i16 (gfc_array_i16 *ret, const gfc_array_i16 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_INTEGER_16));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_INTEGER_16));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_i16 (gfc_array_i16 *ret, const GFC_INTEGER_16 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_INTEGER_16));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_INTEGER_16));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "02e7628394a4b4589d4c87ac5f2c170ad384754c", "filename": "libgfortran/generated/spread_i2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_i2 (gfc_array_i2 *ret, const gfc_array_i2 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_INTEGER_2));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_INTEGER_2));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_i2 (gfc_array_i2 *ret, const GFC_INTEGER_2 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_INTEGER_2));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_INTEGER_2));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "0c8d9273657fbafc1d37d2d6f21e47f56a9ecc7e", "filename": "libgfortran/generated/spread_i4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_i4 (gfc_array_i4 *ret, const gfc_array_i4 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_INTEGER_4));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_INTEGER_4));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_i4 (gfc_array_i4 *ret, const GFC_INTEGER_4 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_INTEGER_4));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_INTEGER_4));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "402c746cf3ebc215e6080ee1be9ae072160252c1", "filename": "libgfortran/generated/spread_i8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_i8 (gfc_array_i8 *ret, const gfc_array_i8 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_INTEGER_8));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_INTEGER_8));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_i8 (gfc_array_i8 *ret, const GFC_INTEGER_8 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_INTEGER_8));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_INTEGER_8));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "248186eb3f8f96317491c04f273fe6efa12cffff", "filename": "libgfortran/generated/spread_r10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_r10 (gfc_array_r10 *ret, const gfc_array_r10 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_REAL_10));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_REAL_10));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_r10 (gfc_array_r10 *ret, const GFC_REAL_10 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_REAL_10));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_REAL_10));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "50aef1087b9c8bb6b3e64059411c94db2e15d57e", "filename": "libgfortran/generated/spread_r16.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_r16 (gfc_array_r16 *ret, const gfc_array_r16 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_REAL_16));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_REAL_16));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_r16 (gfc_array_r16 *ret, const GFC_REAL_16 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_REAL_16));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_REAL_16));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "fab55c7a1db751880664456da58b051647593a86", "filename": "libgfortran/generated/spread_r4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_r4 (gfc_array_r4 *ret, const gfc_array_r4 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_REAL_4));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_REAL_4));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_r4 (gfc_array_r4 *ret, const GFC_REAL_4 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_REAL_4));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_REAL_4));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "6076638d7159fa257151978685d0671884215750", "filename": "libgfortran/generated/spread_r8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fspread_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -101,8 +101,8 @@ spread_r8 (gfc_array_r8 *ret, const gfc_array_r8 *source,\n \t}\n       ret->offset = 0;\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (rs * sizeof(GFC_REAL_8));\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (rs, sizeof(GFC_REAL_8));\n       if (rs <= 0)\n         return;\n     }\n@@ -244,7 +244,7 @@ spread_scalar_r8 (gfc_array_r8 *ret, const GFC_REAL_8 *source,\n \n   if (ret->base_addr == NULL)\n     {\n-      ret->base_addr = xmalloc (ncopies * sizeof (GFC_REAL_8));\n+      ret->base_addr = xmallocarray (ncopies, sizeof (GFC_REAL_8));\n       ret->offset = 0;\n       GFC_DIMENSION_SET(ret->dim[0], 0, ncopies - 1, 1);\n     }"}, {"sha": "176623dfff620e367f21d65522b754187285d6ff", "filename": "libgfortran/generated/sum_c10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_c10 (gfc_array_c10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_10));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_c10 (gfc_array_c10 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_COMPLEX_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_c10 (gfc_array_c10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_10));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_c10 (gfc_array_c10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_c10 (gfc_array_c10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_10));\n     }\n   else\n     {"}, {"sha": "055a659304dbf362e1676567b18a35d68d0754cf", "filename": "libgfortran/generated/sum_c16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_c16 (gfc_array_c16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_c16 (gfc_array_c16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_COMPLEX_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_c16 (gfc_array_c16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_16));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_c16 (gfc_array_c16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_c16 (gfc_array_c16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_16));\n     }\n   else\n     {"}, {"sha": "6fab436b2c4bfb295294efa3b70792045fed131b", "filename": "libgfortran/generated/sum_c4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_c4 (gfc_array_c4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_c4 (gfc_array_c4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_COMPLEX_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_c4 (gfc_array_c4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_4));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_c4 (gfc_array_c4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_c4 (gfc_array_c4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_4));\n     }\n   else\n     {"}, {"sha": "c3d35804d64dd77e8d5a812eafa5aa0782d7dbad", "filename": "libgfortran/generated/sum_c8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_c8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_c8 (gfc_array_c8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_c8 (gfc_array_c8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_COMPLEX_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_c8 (gfc_array_c8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_8));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_c8 (gfc_array_c8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_COMPLEX_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_c8 (gfc_array_c8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_COMPLEX_8));\n     }\n   else\n     {"}, {"sha": "88ee3338b82546ec079827ea018db60d59eedf1f", "filename": "libgfortran/generated/sum_i1.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_i1 (gfc_array_i1 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_i1 (gfc_array_i1 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_1) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_i1 (gfc_array_i1 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_1));\n     }\n   else\n     {"}, {"sha": "dc35e0709e7f72c3e519eb95889bf4ad6533a4c5", "filename": "libgfortran/generated/sum_i16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_i16 (gfc_array_i16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_i16 (gfc_array_i16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_i16 (gfc_array_i16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "05c0882067563d0a22389d2112e85d4ef62b8c62", "filename": "libgfortran/generated/sum_i2.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_i2 (gfc_array_i2 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_i2 (gfc_array_i2 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_2) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_i2 (gfc_array_i2 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_2));\n     }\n   else\n     {"}, {"sha": "3653883c4a6076ed9dc362993db97133c6dab81f", "filename": "libgfortran/generated/sum_i4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_i4 (gfc_array_i4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_i4 (gfc_array_i4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_i4 (gfc_array_i4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "d2878df6f83c124ca1293cd38c09ce243ade3bbd", "filename": "libgfortran/generated/sum_i8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_i8 (gfc_array_i8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_i8 (gfc_array_i8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_INTEGER_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_i8 (gfc_array_i8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "cb5169c8a7516805a16b44f43601c5e897e4128c", "filename": "libgfortran/generated/sum_r10.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_r10 (gfc_array_r10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_r10 (gfc_array_r10 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_r10 (gfc_array_r10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_r10 (gfc_array_r10 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_10) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_r10 (gfc_array_r10 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_10));\n     }\n   else\n     {"}, {"sha": "6c67f295f414310a4f0af767da6a44b2cb0d8808", "filename": "libgfortran/generated/sum_r16.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_r16 (gfc_array_r16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_r16 (gfc_array_r16 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_r16 (gfc_array_r16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_r16 (gfc_array_r16 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_16) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_r16 (gfc_array_r16 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_16));\n     }\n   else\n     {"}, {"sha": "a3a4b59cee64f3b6932dec988d6acc6af1bebe3a", "filename": "libgfortran/generated/sum_r4.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_r4 (gfc_array_r4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_r4 (gfc_array_r4 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_r4 (gfc_array_r4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_r4 (gfc_array_r4 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_4) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_r4 (gfc_array_r4 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_4));\n     }\n   else\n     {"}, {"sha": "0cbf649db2ad9d59ecaba843ce41df3c0cd3083d", "filename": "libgfortran/generated/sum_r8.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Fsum_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fsum_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -97,10 +97,9 @@ sum_r8 (gfc_array_r8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n-      retarray->base_addr = xmalloc (alloc_size);\n+      retarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n       if (alloc_size == 0)\n \t{\n \t  /* Make sure we have a zero-sized array.  */\n@@ -272,8 +271,7 @@ msum_r8 (gfc_array_r8 * const restrict retarray,\n \n \t}\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n@@ -285,7 +283,7 @@ msum_r8 (gfc_array_r8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n \n     }\n   else\n@@ -430,8 +428,7 @@ ssum_r8 (gfc_array_r8 * const restrict retarray,\n       retarray->offset = 0;\n       retarray->dtype = (array->dtype & ~GFC_DTYPE_RANK_MASK) | rank;\n \n-      alloc_size = sizeof (GFC_REAL_8) * GFC_DESCRIPTOR_STRIDE(retarray,rank-1)\n-    \t\t   * extent[rank-1];\n+      alloc_size = GFC_DESCRIPTOR_STRIDE(retarray,rank-1) * extent[rank-1];\n \n       if (alloc_size == 0)\n \t{\n@@ -440,7 +437,7 @@ ssum_r8 (gfc_array_r8 * const restrict retarray,\n \t  return;\n \t}\n       else\n-\tretarray->base_addr = xmalloc (alloc_size);\n+\tretarray->base_addr = xmallocarray (alloc_size, sizeof (GFC_REAL_8));\n     }\n   else\n     {"}, {"sha": "bd201220923b2f90449a7cd37d7aa3178b3371ba", "filename": "libgfortran/generated/transpose_c10.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -60,7 +60,8 @@ transpose_c10 (gfc_array_c10 * const restrict ret,\n       GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n \t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n \n-      ret->base_addr = xmalloc (sizeof (GFC_COMPLEX_10) * size0 ((array_t *) ret));\n+      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n+                                     sizeof (GFC_COMPLEX_10));\n       ret->offset = 0;\n     } else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "044509f67f0aefb766c05d575f5b81e502c498df", "filename": "libgfortran/generated/transpose_c16.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -60,7 +60,8 @@ transpose_c16 (gfc_array_c16 * const restrict ret,\n       GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n \t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n \n-      ret->base_addr = xmalloc (sizeof (GFC_COMPLEX_16) * size0 ((array_t *) ret));\n+      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n+                                     sizeof (GFC_COMPLEX_16));\n       ret->offset = 0;\n     } else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "c6dd90580e6043a555300056841ad915742698ac", "filename": "libgfortran/generated/transpose_c4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -60,7 +60,8 @@ transpose_c4 (gfc_array_c4 * const restrict ret,\n       GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n \t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n \n-      ret->base_addr = xmalloc (sizeof (GFC_COMPLEX_4) * size0 ((array_t *) ret));\n+      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n+                                     sizeof (GFC_COMPLEX_4));\n       ret->offset = 0;\n     } else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "cd5926bf84340df5afa1d28e70004cc3c2badcc4", "filename": "libgfortran/generated/transpose_c8.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_c8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -60,7 +60,8 @@ transpose_c8 (gfc_array_c8 * const restrict ret,\n       GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n \t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n \n-      ret->base_addr = xmalloc (sizeof (GFC_COMPLEX_8) * size0 ((array_t *) ret));\n+      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n+                                     sizeof (GFC_COMPLEX_8));\n       ret->offset = 0;\n     } else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "44aff01ff5f23e4f1a1e05f845610b7004ab468d", "filename": "libgfortran/generated/transpose_i16.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -60,7 +60,8 @@ transpose_i16 (gfc_array_i16 * const restrict ret,\n       GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n \t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n \n-      ret->base_addr = xmalloc (sizeof (GFC_INTEGER_16) * size0 ((array_t *) ret));\n+      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n+                                     sizeof (GFC_INTEGER_16));\n       ret->offset = 0;\n     } else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "e6844fccbd94b724067ea97ee41b94b55632dd89", "filename": "libgfortran/generated/transpose_i4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -60,7 +60,8 @@ transpose_i4 (gfc_array_i4 * const restrict ret,\n       GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n \t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n \n-      ret->base_addr = xmalloc (sizeof (GFC_INTEGER_4) * size0 ((array_t *) ret));\n+      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n+                                     sizeof (GFC_INTEGER_4));\n       ret->offset = 0;\n     } else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "df4a28af2b5b09c04d038596d006ea587d4adcc4", "filename": "libgfortran/generated/transpose_i8.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -60,7 +60,8 @@ transpose_i8 (gfc_array_i8 * const restrict ret,\n       GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n \t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n \n-      ret->base_addr = xmalloc (sizeof (GFC_INTEGER_8) * size0 ((array_t *) ret));\n+      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n+                                     sizeof (GFC_INTEGER_8));\n       ret->offset = 0;\n     } else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "2ce05798b3d50446417a17dd5fdd434058892032", "filename": "libgfortran/generated/transpose_r10.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -60,7 +60,8 @@ transpose_r10 (gfc_array_r10 * const restrict ret,\n       GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n \t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n \n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_10) * size0 ((array_t *) ret));\n+      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n+                                     sizeof (GFC_REAL_10));\n       ret->offset = 0;\n     } else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "5009d16cc1343cde7aeafe73b88feefdc33e0a7b", "filename": "libgfortran/generated/transpose_r16.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -60,7 +60,8 @@ transpose_r16 (gfc_array_r16 * const restrict ret,\n       GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n \t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n \n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_16) * size0 ((array_t *) ret));\n+      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n+                                     sizeof (GFC_REAL_16));\n       ret->offset = 0;\n     } else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "71f70fcd9b090f5fadd16cd7d210f1daec59c1c9", "filename": "libgfortran/generated/transpose_r4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -60,7 +60,8 @@ transpose_r4 (gfc_array_r4 * const restrict ret,\n       GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n \t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n \n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_4) * size0 ((array_t *) ret));\n+      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n+                                     sizeof (GFC_REAL_4));\n       ret->offset = 0;\n     } else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "9f541e0fb7e33b98c9d9999c6a8f0acc0d520701", "filename": "libgfortran/generated/transpose_r8.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Ftranspose_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Ftranspose_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -60,7 +60,8 @@ transpose_r8 (gfc_array_r8 * const restrict ret,\n       GFC_DIMENSION_SET(ret->dim[1], 0, GFC_DESCRIPTOR_EXTENT(source,0) - 1,\n \t\t\tGFC_DESCRIPTOR_EXTENT(source, 1));\n \n-      ret->base_addr = xmalloc (sizeof (GFC_REAL_8) * size0 ((array_t *) ret));\n+      ret->base_addr = xmallocarray (size0 ((array_t *) ret), \n+                                     sizeof (GFC_REAL_8));\n       ret->offset = 0;\n     } else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "6fc2bdc87962162e1ed3ac0b850239e5b78e5450", "filename": "libgfortran/generated/unpack_c10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_c10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_c10 (gfc_array_c10 *ret, const gfc_array_c10 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_COMPLEX_10));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_COMPLEX_10));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_c10 (gfc_array_c10 *ret, const gfc_array_c10 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_COMPLEX_10));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_COMPLEX_10));\n     }\n   else\n     {"}, {"sha": "443a51eea04632668b89b45567f3ceae45053fd3", "filename": "libgfortran/generated/unpack_c16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_c16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_c16 (gfc_array_c16 *ret, const gfc_array_c16 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_COMPLEX_16));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_COMPLEX_16));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_c16 (gfc_array_c16 *ret, const gfc_array_c16 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_COMPLEX_16));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_COMPLEX_16));\n     }\n   else\n     {"}, {"sha": "c8b30f5e6d639c1cb4863515b5de8a7c82c518a9", "filename": "libgfortran/generated/unpack_c4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_c4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_c4 (gfc_array_c4 *ret, const gfc_array_c4 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_COMPLEX_4));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_COMPLEX_4));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_c4 (gfc_array_c4 *ret, const gfc_array_c4 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_COMPLEX_4));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_COMPLEX_4));\n     }\n   else\n     {"}, {"sha": "60d9de1b65093953724ab7893f47532f790eaa69", "filename": "libgfortran/generated/unpack_c8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_c8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_c8 (gfc_array_c8 *ret, const gfc_array_c8 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_COMPLEX_8));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_COMPLEX_8));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_c8 (gfc_array_c8 *ret, const gfc_array_c8 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_COMPLEX_8));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_COMPLEX_8));\n     }\n   else\n     {"}, {"sha": "522ce74a9fd7b1d34851e5b39e4e918e0b43ffc5", "filename": "libgfortran/generated/unpack_i1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_i1.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_i1 (gfc_array_i1 *ret, const gfc_array_i1 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_INTEGER_1));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_INTEGER_1));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_i1 (gfc_array_i1 *ret, const gfc_array_i1 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_INTEGER_1));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_INTEGER_1));\n     }\n   else\n     {"}, {"sha": "7e0d1f766d5d893117b57a40bd28d980625b280d", "filename": "libgfortran/generated/unpack_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_i16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_i16 (gfc_array_i16 *ret, const gfc_array_i16 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_INTEGER_16));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_i16 (gfc_array_i16 *ret, const gfc_array_i16 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_INTEGER_16));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_INTEGER_16));\n     }\n   else\n     {"}, {"sha": "b0d21dc246f5aa24fe14a844224ed28143b6ca08", "filename": "libgfortran/generated/unpack_i2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_i2.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_i2 (gfc_array_i2 *ret, const gfc_array_i2 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_INTEGER_2));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_INTEGER_2));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_i2 (gfc_array_i2 *ret, const gfc_array_i2 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_INTEGER_2));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_INTEGER_2));\n     }\n   else\n     {"}, {"sha": "beac1969a5d12dfca23c982eff490267255f15a0", "filename": "libgfortran/generated/unpack_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_i4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_i4 (gfc_array_i4 *ret, const gfc_array_i4 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_INTEGER_4));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_i4 (gfc_array_i4 *ret, const gfc_array_i4 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_INTEGER_4));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_INTEGER_4));\n     }\n   else\n     {"}, {"sha": "75cd2e93fe4938d94f6f5bcf8567c57fc69efea9", "filename": "libgfortran/generated/unpack_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_i8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_i8 (gfc_array_i8 *ret, const gfc_array_i8 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_INTEGER_8));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_i8 (gfc_array_i8 *ret, const gfc_array_i8 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_INTEGER_8));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_INTEGER_8));\n     }\n   else\n     {"}, {"sha": "926a45777ae8c341280b2ab156389c095a477acb", "filename": "libgfortran/generated/unpack_r10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_r10.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_r10 (gfc_array_r10 *ret, const gfc_array_r10 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_REAL_10));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_REAL_10));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_r10 (gfc_array_r10 *ret, const gfc_array_r10 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_REAL_10));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_REAL_10));\n     }\n   else\n     {"}, {"sha": "6fff184cdfafd2c4024dbd0fa8068cd1199f09cc", "filename": "libgfortran/generated/unpack_r16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_r16.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_r16 (gfc_array_r16 *ret, const gfc_array_r16 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_REAL_16));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_REAL_16));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_r16 (gfc_array_r16 *ret, const gfc_array_r16 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_REAL_16));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_REAL_16));\n     }\n   else\n     {"}, {"sha": "c9008745f3ae648b4aaede80343f6fd62cb57e81", "filename": "libgfortran/generated/unpack_r4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_r4.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_r4 (gfc_array_r4 *ret, const gfc_array_r4 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_REAL_4));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_REAL_4));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_r4 (gfc_array_r4 *ret, const gfc_array_r4 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_REAL_4));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_REAL_4));\n     }\n   else\n     {"}, {"sha": "5999a51ab68231ad921137aeb1760808d085924c", "filename": "libgfortran/generated/unpack_r8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fgenerated%2Funpack_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Funpack_r8.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -99,7 +99,7 @@ unpack0_r8 (gfc_array_r8 *ret, const gfc_array_r8 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_REAL_8));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_REAL_8));\n     }\n   else\n     {\n@@ -244,7 +244,7 @@ unpack1_r8 (gfc_array_r8 *ret, const gfc_array_r8 *vector,\n \t  rs *= extent[n];\n \t}\n       ret->offset = 0;\n-      ret->base_addr = xmalloc (rs * sizeof (GFC_REAL_8));\n+      ret->base_addr = xmallocarray (rs, sizeof (GFC_REAL_8));\n     }\n   else\n     {"}, {"sha": "f983754f16a5f328d7016e6bc4b059fb6644c63b", "filename": "libgfortran/intrinsics/cshift0.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fintrinsics%2Fcshift0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fintrinsics%2Fcshift0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fcshift0.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -79,8 +79,8 @@ cshift0 (gfc_array_char * ret, const gfc_array_char * array,\n \t  GFC_DIMENSION_SET(ret->dim[i], 0, ub, str);\n         }\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (size * arraysize);\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (arraysize, size);\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}, {"sha": "7d372132012736657781fa69d5adb5f1afd8adee", "filename": "libgfortran/intrinsics/eoshift0.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fintrinsics%2Feoshift0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92e6f3a43eccfe3e63879249203ee6d808fcc6b9/libgfortran%2Fintrinsics%2Feoshift0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Feoshift0.c?ref=92e6f3a43eccfe3e63879249203ee6d808fcc6b9", "patch": "@@ -86,8 +86,8 @@ eoshift0 (gfc_array_char * ret, const gfc_array_char * array,\n \n         }\n \n-      /* xmalloc allocates a single byte for zero size.  */\n-      ret->base_addr = xmalloc (size * arraysize);\n+      /* xmallocarray allocates a single byte for zero size.  */\n+      ret->base_addr = xmallocarray (arraysize, size);\n     }\n   else if (unlikely (compile_options.bounds_check))\n     {"}]}