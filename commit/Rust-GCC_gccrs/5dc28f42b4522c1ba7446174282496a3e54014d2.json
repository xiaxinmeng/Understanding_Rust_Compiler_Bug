{"sha": "5dc28f42b4522c1ba7446174282496a3e54014d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRjMjhmNDJiNDUyMmMxYmE3NDQ2MTc0MjgyNDk2YTNlNTQwMTRkMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-01-04T19:58:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-01-04T19:58:03Z"}, "message": "re PR debug/51695 (NOTE_INSN_VAR_LOCATION notes are sometimes too large)\n\n\tPR debug/51695\n\t* dwarf2out.c (output_loc_list): For now drop >= 64KB expressions\n\tin .debug_loc on the floor.\n\n\t* gcc.dg/pr51695.c: New test.\n\nFrom-SVN: r182886", "tree": {"sha": "af140ca4a2f43d4298d8e2199c1b85c8ba511715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af140ca4a2f43d4298d8e2199c1b85c8ba511715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dc28f42b4522c1ba7446174282496a3e54014d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc28f42b4522c1ba7446174282496a3e54014d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc28f42b4522c1ba7446174282496a3e54014d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc28f42b4522c1ba7446174282496a3e54014d2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03a9ba1e28339288fcbdbb3a70f6487a88104df7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03a9ba1e28339288fcbdbb3a70f6487a88104df7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03a9ba1e28339288fcbdbb3a70f6487a88104df7"}], "stats": {"total": 71, "additions": 70, "deletions": 1}, "files": [{"sha": "fc6417908eb52e68e8569a4ccc9015716659bcd4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc28f42b4522c1ba7446174282496a3e54014d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc28f42b4522c1ba7446174282496a3e54014d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dc28f42b4522c1ba7446174282496a3e54014d2", "patch": "@@ -1,3 +1,9 @@\n+2012-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/51695\n+\t* dwarf2out.c (output_loc_list): For now drop >= 64KB expressions\n+\tin .debug_loc on the floor.\n+\n 2012-01-04  Andrew Pinski  <apinski@cavium.com>\n \n \t* doc/invoke.texi (-march=@var{arch}): Add octeon+ and octeon2."}, {"sha": "f9f42956d8509e0e02a0403acd41a332df2b5230", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc28f42b4522c1ba7446174282496a3e54014d2/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc28f42b4522c1ba7446174282496a3e54014d2/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=5dc28f42b4522c1ba7446174282496a3e54014d2", "patch": "@@ -8166,6 +8166,13 @@ output_loc_list (dw_loc_list_ref list_head)\n       /* Don't output an entry that starts and ends at the same address.  */\n       if (strcmp (curr->begin, curr->end) == 0 && !curr->force)\n \tcontinue;\n+      size = size_of_locs (curr->expr);\n+      /* If the expression is too large, drop it on the floor.  We could\n+\t perhaps put it into DW_TAG_dwarf_procedure and refer to that\n+\t in the expression, but >= 64KB expressions for a single value\n+\t in a single range are unlikely very useful.  */\n+      if (size > 0xffff)\n+\tcontinue;\n       if (!have_multiple_function_sections)\n \t{\n \t  dw2_asm_output_delta (DWARF2_ADDR_SIZE, curr->begin, curr->section,\n@@ -8184,7 +8191,6 @@ output_loc_list (dw_loc_list_ref list_head)\n \t\t\t       \"Location list end address (%s)\",\n \t\t\t       list_head->ll_symbol);\n \t}\n-      size = size_of_locs (curr->expr);\n \n       /* Output the block length for this list of location operations.  */\n       gcc_assert (size <= 0xffff);"}, {"sha": "d4a5c9cbf5a216cbe209197c1341f01e550b5fb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc28f42b4522c1ba7446174282496a3e54014d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc28f42b4522c1ba7446174282496a3e54014d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5dc28f42b4522c1ba7446174282496a3e54014d2", "patch": "@@ -1,3 +1,8 @@\n+2012-01-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/51695\n+\t* gcc.dg/pr51695.c: New test.\n+\n 2012-01-04  Andrew Pinski  <apinski@cavium.com>\n \n \t* gcc.target/mips/mips64-dsp-ldx1.c: New test."}, {"sha": "6eb45400b6503424fd0f27811bd515779dbad4d3", "filename": "gcc/testsuite/gcc.dg/pr51695.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc28f42b4522c1ba7446174282496a3e54014d2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51695.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc28f42b4522c1ba7446174282496a3e54014d2/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51695.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51695.c?ref=5dc28f42b4522c1ba7446174282496a3e54014d2", "patch": "@@ -0,0 +1,52 @@\n+/* PR debug/51695 */\n+/* { dg-do compile { target { int32plus } } } */\n+/* { dg-options \"-O2 -g\" } */\n+\n+typedef struct\n+{\n+  struct { unsigned int t1, t2, t3, t4, t5, t6; } t;\n+  int p;\n+  struct { double X, Y, Z; } r;\n+} T;\n+typedef struct { T *h; } S;\n+\n+static unsigned int v = 0x12345678;\n+\n+int\n+foo (void)\n+{\n+  v = (v & 0x80000000) ? ((v << 1) ^ 0xa398655d) : (v << 1);\n+  return 0;\n+}\n+\n+double\n+bar (void)\n+{\n+  unsigned int o;\n+  v = (v & 0x80000000) ? ((v << 1) ^ 0xa398655d) : (v << 1);\n+  o = v & 0xffff;\n+  return (double) o / 32768.0;\n+}\n+\n+int\n+baz (void)\n+{\n+  foo ();\n+  return 0;\n+}\n+\n+void\n+test (S *x)\n+{\n+  T *t = x->h;\n+  t->t.t1 = foo ();\n+  t->t.t2 = foo ();\n+  t->t.t3 = foo ();\n+  t->t.t4 = foo ();\n+  t->t.t5 = foo ();\n+  t->t.t6 = foo ();\n+  t->p = baz ();\n+  t->r.X = bar ();\n+  t->r.Y = bar ();\n+  t->r.Z = bar ();\n+}"}]}