{"sha": "edd048e29a3b5bce813f26b5b66f40fbe2f50d54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRkMDQ4ZTI5YTNiNWJjZTgxM2YyNmI1YjY2ZjQwZmJlMmY1MGQ1NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-04-18T11:39:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-04-18T11:39:04Z"}, "message": "re PR tree-optimization/70701 (incomplete value numbering when memcpy-ing from array)\n\n2016-04-18  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/70701\n\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Resolve fully constant\n\treferences after translating through a memcpy.\n\n\t* gcc.dg/tree-ssa/ssa-fre-53.c: New testcase.\n\nFrom-SVN: r235131", "tree": {"sha": "c5a0950537128282b7fea62dcc5afe5df81856f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5a0950537128282b7fea62dcc5afe5df81856f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edd048e29a3b5bce813f26b5b66f40fbe2f50d54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edd048e29a3b5bce813f26b5b66f40fbe2f50d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edd048e29a3b5bce813f26b5b66f40fbe2f50d54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edd048e29a3b5bce813f26b5b66f40fbe2f50d54/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65833da69d1cb0b57572c2736781d335fced397c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65833da69d1cb0b57572c2736781d335fced397c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65833da69d1cb0b57572c2736781d335fced397c"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "63ec0ee0bf4f93affa58b3a7b9cc8072062febfd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edd048e29a3b5bce813f26b5b66f40fbe2f50d54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edd048e29a3b5bce813f26b5b66f40fbe2f50d54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edd048e29a3b5bce813f26b5b66f40fbe2f50d54", "patch": "@@ -1,3 +1,9 @@\n+2016-04-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70701\n+\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Resolve fully constant\n+\treferences after translating through a memcpy.\n+\n 2016-04-18  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-pre.c (postorder, postorder_num): Make locals ..."}, {"sha": "32dc4cdc1db3b93498c6fff1e198b11c6aa760aa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edd048e29a3b5bce813f26b5b66f40fbe2f50d54/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edd048e29a3b5bce813f26b5b66f40fbe2f50d54/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=edd048e29a3b5bce813f26b5b66f40fbe2f50d54", "patch": "@@ -1,3 +1,8 @@\n+2016-04-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70701\n+\t* gcc.dg/tree-ssa/ssa-fre-53.c: New testcase.\n+\n 2016-04-18  Tom de Vries  <tom@codesourcery.com>\n \n \tPR testsuite/70699"}, {"sha": "34d1ac6b5234f157532cd94dd56c72d5cc0d2338", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-53.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edd048e29a3b5bce813f26b5b66f40fbe2f50d54/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-53.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edd048e29a3b5bce813f26b5b66f40fbe2f50d54/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-53.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-53.c?ref=edd048e29a3b5bce813f26b5b66f40fbe2f50d54", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fno-tree-forwprop -fdump-tree-fre1\" } */\n+\n+const int a[]={1,2,3};\n+int f(){\n+    int*b=__builtin_malloc(12);\n+    __builtin_memcpy(b,a,12);\n+    return b[0];\n+}\n+\n+/* { dg-final { scan-tree-dump \"return 1;\" \"fre1\" } } */"}, {"sha": "e61e03334af1cb0a2d983309ad9e7bc250e6f2b0", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edd048e29a3b5bce813f26b5b66f40fbe2f50d54/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edd048e29a3b5bce813f26b5b66f40fbe2f50d54/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=edd048e29a3b5bce813f26b5b66f40fbe2f50d54", "patch": "@@ -2152,6 +2152,12 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_,\n       vr->operands[1] = op;\n       vr->hashcode = vn_reference_compute_hash (vr);\n \n+      /* Try folding the new reference to a constant.  */\n+      tree val = fully_constant_vn_reference_p (vr);\n+      if (val)\n+\treturn vn_reference_lookup_or_insert_for_pieces\n+\t\t (vuse, vr->set, vr->type, vr->operands, val);\n+\n       /* Adjust *ref from the new operands.  */\n       if (!ao_ref_init_from_vn_reference (&r, vr->set, vr->type, vr->operands))\n \treturn (void *)-1;"}]}