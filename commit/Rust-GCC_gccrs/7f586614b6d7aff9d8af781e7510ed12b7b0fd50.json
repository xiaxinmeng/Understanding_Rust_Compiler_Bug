{"sha": "7f586614b6d7aff9d8af781e7510ed12b7b0fd50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y1ODY2MTRiNmQ3YWZmOWQ4YWY3ODFlNzUxMGVkMTJiN2IwZmQ1MA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-09-07T22:40:17Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-09-07T22:40:17Z"}, "message": "Add bits for --enable-maintainer-mode...\n\n\n2000-09-07  Phil Edwards  <pme@sources.redhat.com>\n\n\tAdd bits for --enable-maintainer-mode:\n\t- turns on enable_debug\n          (doing \"--enable-maint --disable-debug\" will DTRT)\n\t- turns on -Werror, now off by default\n\t* acinclude.m4: Add bits.\n\t* aclocal.m4: Regenerate.\n\t* configure.in: Add defaults for GLIBCPP_ENABLE_DEBUG.\n\t* configure: Regenerate.\n\nFrom-SVN: r36252", "tree": {"sha": "6d66631a194a544b6a891e5e4721949a95ce97a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d66631a194a544b6a891e5e4721949a95ce97a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f586614b6d7aff9d8af781e7510ed12b7b0fd50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f586614b6d7aff9d8af781e7510ed12b7b0fd50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f586614b6d7aff9d8af781e7510ed12b7b0fd50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f586614b6d7aff9d8af781e7510ed12b7b0fd50/comments", "author": null, "committer": null, "parents": [{"sha": "bed7f38970753040d670f6a83dfca127a7027f7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed7f38970753040d670f6a83dfca127a7027f7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bed7f38970753040d670f6a83dfca127a7027f7d"}], "stats": {"total": 1912, "additions": 941, "deletions": 971}, "files": [{"sha": "c644f17078c1435da397ac60c1119786981f4434", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f586614b6d7aff9d8af781e7510ed12b7b0fd50/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f586614b6d7aff9d8af781e7510ed12b7b0fd50/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7f586614b6d7aff9d8af781e7510ed12b7b0fd50", "patch": "@@ -1,3 +1,18 @@\n+2000-09-07  Phil Edwards  <pme@sources.redhat.com>\n+\n+\tAdd bits for --enable-maintainer-mode:\n+\t- turns on enable_debug\n+          (doing \"--enable-maint --disable-debug\" will DTRT)\n+\t- turns on -Werror, now off by default\n+\t* acinclude.m4: Add bits.\n+\t* aclocal.m4: Regenerate.\n+\t* configure.in: Add defaults for GLIBCPP_ENABLE_DEBUG.\n+\t* configure: Regenerate.\t\n+\t\n+2000-09-07  Benjamin Kosnik  <bkoz@cygnus.com>\n+\n+\t* bits/std_cwctype.h: Remove yesterday's hacks.\n+\n 2000-09-07  Brad Garcia  <bgarcia@laurelnetworks.com>\n \n \t* bits/stl_tree.h: Make operators !=, == type safe for map, set."}, {"sha": "d314869db5437c12ec706e26447349a3a32d3bbb", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f586614b6d7aff9d8af781e7510ed12b7b0fd50/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f586614b6d7aff9d8af781e7510ed12b7b0fd50/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=7f586614b6d7aff9d8af781e7510ed12b7b0fd50", "patch": "@@ -180,8 +180,9 @@ dnl here.\n dnl\n dnl Define WFMT_FLAGS='-fdiagnostics-show-location=once' if possible\n dnl \n-dnl Define WERROR='-Werror' if possible; g++'s that lack the new inlining\n-dnl code or the new system_header pragma will die.  \n+dnl Define WERROR='-Werror' if requested and possible; g++'s that lack the\n+dnl new inlining code or the new system_header pragma will die on -Werror.\n+dnl Leave it out by default and use maint-mode to use it.\n dnl\n dnl Define SECTION_FLAGS='-ffunction-sections -fdata-sections' if\n dnl compiler supports it.  \n@@ -194,23 +195,13 @@ AC_DEFUN(GLIBCPP_CHECK_COMPILER_FEATURES, [\n   AC_LANG_CPLUSPLUS\n   ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  WERROR='-Werror'\n \n-  # Check for pragma system_header.\n-  AC_MSG_CHECKING([for g++ that supports pragma system_header])\n-  CXXFLAGS='-Wunknown-pragmas -Werror'\n-  AC_TRY_COMPILE([#pragma GCC system_header], [int foo;\n-  ], [ac_newpragma=yes], [ac_newpragma=no])\n-  if test \"$ac_test_CXXFLAGS\" = set; then\n-    CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+  # Check for maintainer-mode bits.\n+  if test x\"$USE_MAINTAINER_MODE\" = xno; then\n+    WERROR=''\n   else\n-    # this is the suspicious part\n-    CXXFLAGS=''\n-  fi\n-  if test \"$ac_newpragma\" = \"no\"; then\n-    WERROR=\"$WERROR -Wno-unknown-pragmas\"\n+    WERROR='-Werror'\n   fi\n-  AC_MSG_RESULT($ac_newpragma)\n \n   # Check for more sophisticated diagnostic control.\n   AC_MSG_CHECKING([for g++ that supports -fdiagnostics-show-location=once])\n@@ -1063,7 +1054,7 @@ dnl GLIBCPP_ENABLE_DEBUG\n dnl --enable-debug sets '-ggdb -O0'.\n dnl --disable-debug sets '-g' and whatever optimization options the\n dnl     compiler can handle.\n-dnl  +  Perhaps --enable-maintainer-mode should automatically turn this on?\n+dnl  +  --enable-maintainer-mode automatically defaults this to on.\n dnl  +  Perhaps -D/-U of NDEBUG, DEBUG, DEBUG_ASSERT, ...?\n dnl  +  Usage:  GLIBCPP_ENABLE_DEBUG[(DEFAULT)]\n dnl       Where DEFAULT is either `yes' or `no'.  If ommitted, it\n@@ -1597,4 +1588,4 @@ ifelse(,,,[AC_SUBST(LIBTOOL)\n AC_DEFUN([AM_PROG_LIBTOOL])\n AC_DEFUN([AC_LIBTOOL_DLOPEN])\n AC_DEFUN([AC_PROG_LD])\n-])\n\\ No newline at end of file\n+])"}, {"sha": "656a5327b695c75c7be5fd0fdbd98f4fbeb71b7a", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f586614b6d7aff9d8af781e7510ed12b7b0fd50/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f586614b6d7aff9d8af781e7510ed12b7b0fd50/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=7f586614b6d7aff9d8af781e7510ed12b7b0fd50", "patch": "@@ -192,8 +192,9 @@ dnl here.\n dnl\n dnl Define WFMT_FLAGS='-fdiagnostics-show-location=once' if possible\n dnl \n-dnl Define WERROR='-Werror' if possible; g++'s that lack the new inlining\n-dnl code or the new system_header pragma will die.  \n+dnl Define WERROR='-Werror' if requested and possible; g++'s that lack the\n+dnl new inlining code or the new system_header pragma will die on -Werror.\n+dnl Leave it out by default and use maint-mode to use it.\n dnl\n dnl Define SECTION_FLAGS='-ffunction-sections -fdata-sections' if\n dnl compiler supports it.  \n@@ -206,23 +207,13 @@ AC_DEFUN(GLIBCPP_CHECK_COMPILER_FEATURES, [\n   AC_LANG_CPLUSPLUS\n   ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n   ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  WERROR='-Werror'\n \n-  # Check for pragma system_header.\n-  AC_MSG_CHECKING([for g++ that supports pragma system_header])\n-  CXXFLAGS='-Wunknown-pragmas -Werror'\n-  AC_TRY_COMPILE([#pragma GCC system_header], [int foo;\n-  ], [ac_newpragma=yes], [ac_newpragma=no])\n-  if test \"$ac_test_CXXFLAGS\" = set; then\n-    CXXFLAGS=\"$ac_save_CXXFLAGS\"\n+  # Check for maintainer-mode bits.\n+  if test x\"$USE_MAINTAINER_MODE\" = xno; then\n+    WERROR=''\n   else\n-    # this is the suspicious part\n-    CXXFLAGS=''\n-  fi\n-  if test \"$ac_newpragma\" = \"no\"; then\n-    WERROR=\"$WERROR -Wno-unknown-pragmas\"\n+    WERROR='-Werror'\n   fi\n-  AC_MSG_RESULT($ac_newpragma)\n \n   # Check for more sophisticated diagnostic control.\n   AC_MSG_CHECKING([for g++ that supports -fdiagnostics-show-location=once])\n@@ -1075,7 +1066,7 @@ dnl GLIBCPP_ENABLE_DEBUG\n dnl --enable-debug sets '-ggdb -O0'.\n dnl --disable-debug sets '-g' and whatever optimization options the\n dnl     compiler can handle.\n-dnl  +  Perhaps --enable-maintainer-mode should automatically turn this on?\n+dnl  +  --enable-maintainer-mode automatically defaults this to on.\n dnl  +  Perhaps -D/-U of NDEBUG, DEBUG, DEBUG_ASSERT, ...?\n dnl  +  Usage:  GLIBCPP_ENABLE_DEBUG[(DEFAULT)]\n dnl       Where DEFAULT is either `yes' or `no'.  If ommitted, it\n@@ -1610,6 +1601,7 @@ AC_DEFUN([AM_PROG_LIBTOOL])\n AC_DEFUN([AC_LIBTOOL_DLOPEN])\n AC_DEFUN([AC_PROG_LD])\n ])\n+\n # Do all the work for Automake.  This macro actually does too much --\n # some checks are only needed if your package does certain things.\n # But this isn't really a big deal."}, {"sha": "d7ac15d953f435675efa6fa04ee17652bb090793", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 907, "deletions": 935, "changes": 1842, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f586614b6d7aff9d8af781e7510ed12b7b0fd50/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f586614b6d7aff9d8af781e7510ed12b7b0fd50/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=7f586614b6d7aff9d8af781e7510ed12b7b0fd50"}, {"sha": "9e31f0e51920adf6a6c2318be3619935fa076f84", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f586614b6d7aff9d8af781e7510ed12b7b0fd50/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f586614b6d7aff9d8af781e7510ed12b7b0fd50/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=7f586614b6d7aff9d8af781e7510ed12b7b0fd50", "patch": "@@ -31,7 +31,7 @@ GLIBCPP_CHECK_CPU\n AC_CACHE_SAVE\n \n # Enable all the crazy c++ stuff.\n-GLIBCPP_ENABLE_DEBUG\n+GLIBCPP_ENABLE_DEBUG($USE_MAINTAINER_MODE)\n GLIBCPP_ENABLE_CSTDIO\n GLIBCPP_ENABLE_LONG_LONG(yes)\n GLIBCPP_ENABLE_SHADOW(no)"}]}