{"sha": "c694e02fd1b309a48f013ef74c561f2b1cba7c56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY5NGUwMmZkMWIzMDlhNDhmMDEzZWY3NGM1NjFmMmIxY2JhN2M1Ng==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-02-13T12:53:09Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1995-02-13T12:53:09Z"}, "message": "(smulsi3_highpart, umulsi3_highpart, mulsidi3, umulsidi3):\n\nMake these conditional on TARGET_MULTM.\n(multm matcher): Delete.\n(multmu matcher): Delete.\n(mulsidi3 DEFINE_SPLIT): Generate RTL for smulsi3_highpart instead of\nfor deleted pattern.  Fix typo in preparation code.\n(umulsidi3 DEFINE_SPLIT): Analogous change.\n\nFrom-SVN: r8920", "tree": {"sha": "d99331ff5454a7e6163c24a198f89cf49bd1f029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d99331ff5454a7e6163c24a198f89cf49bd1f029"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c694e02fd1b309a48f013ef74c561f2b1cba7c56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c694e02fd1b309a48f013ef74c561f2b1cba7c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c694e02fd1b309a48f013ef74c561f2b1cba7c56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c694e02fd1b309a48f013ef74c561f2b1cba7c56/comments", "author": null, "committer": null, "parents": [{"sha": "f9151c433cc4bc4091ce2af4dfc13e2e024f169b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9151c433cc4bc4091ce2af4dfc13e2e024f169b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9151c433cc4bc4091ce2af4dfc13e2e024f169b"}], "stats": {"total": 47, "additions": 16, "deletions": 31}, "files": [{"sha": "412f884338d16476fb6540011ddfef22581dac49", "filename": "gcc/config/a29k/a29k.md", "status": "modified", "additions": 16, "deletions": 31, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c694e02fd1b309a48f013ef74c561f2b1cba7c56/gcc%2Fconfig%2Fa29k%2Fa29k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c694e02fd1b309a48f013ef74c561f2b1cba7c56/gcc%2Fconfig%2Fa29k%2Fa29k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.md?ref=c694e02fd1b309a48f013ef74c561f2b1cba7c56", "patch": "@@ -1120,32 +1120,12 @@\n   \"\"\n   \"multiply %0,%1,%2\")\n \n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(subreg:SI\n-\t (mult:DI\n-\t  (sign_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n-\t  (sign_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))) 0))\n-   (clobber (match_scratch:SI 3 \"=&q\"))]\n-  \"\"\n-  \"multm %0,%1,%2\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(subreg:SI\n-\t (mult:DI\n-\t  (zero_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\"))\n-\t  (zero_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))) 0))\n-   (clobber (match_scratch:SI 3 \"=&q\"))]\n-  \"\"\n-  \"multmu %0,%1,%2\")\n-\n (define_insn \"mulsidi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n \t\t (sign_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))\n    (clobber (match_scratch:SI 3 \"=&q\"))]\n-  \"\"\n+  \"TARGET_MULTM\"\n   \"multiply %L0,%1,%2\\;multm %0,%1,%2\"\n   [(set_attr \"type\" \"multi\")])\n \n@@ -1159,20 +1139,22 @@\n \t\t   (mult:SI (match_dup 1) (match_dup 2)))\n \t      (clobber (reg:SI 180))])\n    (parallel [(set (match_dup 4)\n-\t\t   (subreg:SI (mult:DI\n-\t\t\t       (sign_extend:DI (match_dup 1))\n-\t\t\t       (sign_extend:DI (match_dup 2))) 0))\n+\t\t   (truncate:SI\n+\t\t    (lshiftrt:DI\n+\t\t     (mult:DI (sign_extend:DI (match_dup 1))\n+\t\t\t      (sign_extend:DI (match_dup 2)))\n+\t\t     (const_int 32))))\n \t      (clobber (reg:SI 180))])]\n   \"\n { operands[3] = operand_subword (operands[0], 1, 1, DImode);\n-  operands[4] = operand_subword (operands[1], 0, 1, DImode); } \")\n+  operands[4] = operand_subword (operands[0], 0, 1, DImode); } \")\n \t\t\t    \n (define_insn \"umulsidi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n \t\t (zero_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"r\"))))\n    (clobber (match_scratch:SI 3 \"=&q\"))]\n-  \"\"\n+  \"TARGET_MULTM\"\n   \"multiplu %L0,%1,%2\\;multmu %0,%1,%2\"\n   [(set_attr \"type\" \"multi\")])\n \n@@ -1186,12 +1168,15 @@\n \t\t   (mult:SI (match_dup 1) (match_dup 2)))\n \t      (clobber (reg:SI 180))])\n    (parallel [(set (match_dup 4)\n-\t\t   (subreg:SI (mult:DI (zero_extend:DI (match_dup 1))\n-\t\t\t\t       (zero_extend:DI (match_dup 2))) 0))\n+\t\t   (truncate:SI\n+\t\t    (lshiftrt:DI\n+\t\t     (mult:DI (zero_extend:DI (match_dup 1))\n+\t\t\t      (zero_extend:DI (match_dup 2)))\n+\t\t     (const_int 32))))\n \t      (clobber (reg:SI 180))])]\n   \"\n { operands[3] = operand_subword (operands[0], 1, 1, DImode);\n-  operands[4] = operand_subword (operands[1], 0, 1, DImode); } \")\n+  operands[4] = operand_subword (operands[0], 0, 1, DImode); } \")\n \t\t\t    \n (define_insn \"smulsi3_highpart\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -1201,7 +1186,7 @@\n \t\t   (sign_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n \t  (const_int 32))))\n    (clobber (match_scratch:SI 3 \"=&q\"))]\n-  \"\"\n+  \"TARGET_MULTM\"\n   \"multm %0,%1,%2\")\n \n (define_insn \"umulsi3_highpart\"\n@@ -1212,7 +1197,7 @@\n \t\t   (zero_extend:DI (match_operand:SI 2 \"gpc_reg_operand\" \"r\")))\n \t  (const_int 32))))\n    (clobber (match_scratch:SI 3 \"=&q\"))]\n-  \"\"\n+  \"TARGET_MULTM\"\n   \"multmu %0,%1,%2\")\n \n ;; NAND"}]}