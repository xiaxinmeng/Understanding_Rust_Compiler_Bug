{"sha": "55ede0bb87e74463c5b89fbfd501e85e9e683048", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVlZGUwYmI4N2U3NDQ2M2M1Yjg5ZmJmZDUwMWU4NWU5ZTY4MzA0OA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-07-28T20:22:04Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2020-07-29T14:00:05Z"}, "message": "testsuite: libstdc++ atomic_float/value_init.cc requires libatomic\n\natomic_float/value_init.cc requires libatomic for some targets, i.e., when\nit tries to perform an atomic operation with a 64 bit floating point\ndouble type on a 32 bit target.  This patch adds AIX and Darwin to the\nlist of targets that require the libatomic option and adds the option to\nthe atomic_float/value_init.cc testcase.\n\nlibstdc++-v3/ChangeLog:\n\n2020-07-28  David Edelsohn  <dje.gcc@gmail.com>\n\t    Jonathan Wakely  <jwakely@redhat.com>\n\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\t* testsuite/lib/dg-options.exp (add_options_for_libatomic): Add\n\ttarget powerpc-ibm-aix* and powerpc*-*-darwin*.\n\t* testsuite/29_atomics/atomic_float/value_init.cc: Add options\n\tfor libatomic.", "tree": {"sha": "8e4598b9f486199f610783dea6545036138f4feb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e4598b9f486199f610783dea6545036138f4feb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55ede0bb87e74463c5b89fbfd501e85e9e683048", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ede0bb87e74463c5b89fbfd501e85e9e683048", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ede0bb87e74463c5b89fbfd501e85e9e683048", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ede0bb87e74463c5b89fbfd501e85e9e683048/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8d3f2b6d1d81535ac3b71fd8dd1def12f8d03b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d3f2b6d1d81535ac3b71fd8dd1def12f8d03b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8d3f2b6d1d81535ac3b71fd8dd1def12f8d03b3"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "38af9bdc8d42a42243fa69b3f4407dab7079bbc2", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_float/value_init.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ede0bb87e74463c5b89fbfd501e85e9e683048/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_float%2Fvalue_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ede0bb87e74463c5b89fbfd501e85e9e683048/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_float%2Fvalue_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_float%2Fvalue_init.cc?ref=55ede0bb87e74463c5b89fbfd501e85e9e683048", "patch": "@@ -17,6 +17,7 @@\n \n // { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n+// { dg-add-options libatomic }\n \n #include <atomic>\n #include <testsuite_hooks.h>"}, {"sha": "d3f61cb52671593c58b0c72a74748e3dc0492c2f", "filename": "libstdc++-v3/testsuite/lib/dg-options.exp", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ede0bb87e74463c5b89fbfd501e85e9e683048/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ede0bb87e74463c5b89fbfd501e85e9e683048/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fdg-options.exp?ref=55ede0bb87e74463c5b89fbfd501e85e9e683048", "patch": "@@ -260,7 +260,10 @@ proc add_options_for_net_ts { flags } {\n # Add to FLAGS all the target-specific flags to link to libatomic, if required.\n \n proc add_options_for_libatomic { flags } {\n-    if { [istarget hppa*-*-hpux*] || [istarget riscv*-*-*] } {\n+    if { [istarget hppa*-*-hpux*]\n+\t || [istarget powerpc-ibm-aix*]\n+\t || [istarget powerpc*-*-darwin*]\n+\t || [istarget riscv*-*-*] } {\n \treturn \"$flags -L../../libatomic/.libs -latomic\"\n     }\n     return $flags"}]}