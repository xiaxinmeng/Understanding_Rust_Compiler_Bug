{"sha": "8244f25237c68071a0dd992367fa2f4509b010e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI0NGYyNTIzN2M2ODA3MWEwZGQ5OTIzNjdmYTJmNDUwOWIwMTBlNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-10T10:28:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-10T10:28:31Z"}, "message": "stor-layout.c (byte_from_pos): Amend comment.\n\n2012-05-10  Richard Guenther  <rguenther@suse.de>\n\n\t* stor-layout.c (byte_from_pos): Amend comment.\n\nFrom-SVN: r187367", "tree": {"sha": "46fe3567feaca12ef2d47de549eee4b5330dfaa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46fe3567feaca12ef2d47de549eee4b5330dfaa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8244f25237c68071a0dd992367fa2f4509b010e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8244f25237c68071a0dd992367fa2f4509b010e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8244f25237c68071a0dd992367fa2f4509b010e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8244f25237c68071a0dd992367fa2f4509b010e6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aaea76b3af0ea14e22e1864876ef4cf2537de38a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaea76b3af0ea14e22e1864876ef4cf2537de38a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaea76b3af0ea14e22e1864876ef4cf2537de38a"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "8da7a7f88e9e0d07a747d3f04bc2e53856f5b50c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8244f25237c68071a0dd992367fa2f4509b010e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8244f25237c68071a0dd992367fa2f4509b010e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8244f25237c68071a0dd992367fa2f4509b010e6", "patch": "@@ -1,3 +1,7 @@\n+2012-05-10  Richard Guenther  <rguenther@suse.de>\n+\n+\t* stor-layout.c (byte_from_pos): Amend comment.\n+\n 2012-05-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* doc/extend.texi (X86 Built-in Functions, __builtin_cpu_init):"}, {"sha": "cb47a52b715cf10a67af6ebd4d14b52399e7c2c3", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8244f25237c68071a0dd992367fa2f4509b010e6/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8244f25237c68071a0dd992367fa2f4509b010e6/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=8244f25237c68071a0dd992367fa2f4509b010e6", "patch": "@@ -798,7 +798,13 @@ bit_from_pos (tree offset, tree bitpos)\n }\n \n /* Return the combined truncated byte position for the byte offset OFFSET and\n-   the bit position BITPOS.  */\n+   the bit position BITPOS.\n+\n+   These functions operate on byte and bit positions as present in FIELD_DECLs\n+   and assume that these expressions result in no (intermediate) overflow.\n+   This assumption is necessary to fold the expressions as much as possible,\n+   so as to avoid creating artificially variable-sized types in languages\n+   supporting variable-sized types like Ada.  */\n \n tree\n byte_from_pos (tree offset, tree bitpos)"}]}