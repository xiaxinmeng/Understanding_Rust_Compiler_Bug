{"sha": "f5393ab90a86c792fe66b438b1962f2352ddba97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUzOTNhYjkwYTg2Yzc5MmZlNjZiNDM4YjE5NjJmMjM1MmRkYmE5Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-03T21:27:41Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-03T21:27:41Z"}, "message": "(struct undo): Rename `rtx' fields to `r'.\n\n(undo_all, SUBST, gen_rtx_combine): Corresponding changes.\n\nFrom-SVN: r5059", "tree": {"sha": "c4265baa57fda134b7f61c7b7a7048314287c813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4265baa57fda134b7f61c7b7a7048314287c813"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5393ab90a86c792fe66b438b1962f2352ddba97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5393ab90a86c792fe66b438b1962f2352ddba97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5393ab90a86c792fe66b438b1962f2352ddba97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5393ab90a86c792fe66b438b1962f2352ddba97/comments", "author": null, "committer": null, "parents": [{"sha": "2a81034facfe36e339c46c689831fb9fbb89a3b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a81034facfe36e339c46c689831fb9fbb89a3b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a81034facfe36e339c46c689831fb9fbb89a3b8"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "501d5e2cc95c6b9f6c896cdbe1460f0194e95aca", "filename": "gcc/combine.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5393ab90a86c792fe66b438b1962f2352ddba97/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5393ab90a86c792fe66b438b1962f2352ddba97/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=f5393ab90a86c792fe66b438b1962f2352ddba97", "patch": "@@ -303,8 +303,8 @@ static char *reg_last_set_sign_bit_copies;\n struct undo\n {\n   int is_int;\n-  union {rtx rtx; int i;} old_contents;\n-  union {rtx *rtx; int *i;} where;\n+  union {rtx r; int i;} old_contents;\n+  union {rtx *r; int *i;} where;\n };\n \n /* Record a bunch of changes to be undone, up to MAX_UNDO of them.\n@@ -339,10 +339,10 @@ static struct undobuf undobuf;\n       if (undobuf.num_undo < MAX_UNDO)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  undobuf.undo[undobuf.num_undo].is_int = 0;\t\t\t\\\n-\t  undobuf.undo[undobuf.num_undo].where.rtx = &INTO;\t\t\\\n-\t  undobuf.undo[undobuf.num_undo].old_contents.rtx = INTO;\t\\\n+\t  undobuf.undo[undobuf.num_undo].where.r = &INTO;\t\t\\\n+\t  undobuf.undo[undobuf.num_undo].old_contents.r = INTO;\t\\\n \t  INTO = _new;\t\t\t\t\t\t\t\\\n-\t  if (undobuf.undo[undobuf.num_undo].old_contents.rtx != INTO)\t\\\n+\t  if (undobuf.undo[undobuf.num_undo].old_contents.r != INTO)\t\\\n \t    undobuf.num_undo++; \t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n     } while (0)\n@@ -2265,7 +2265,7 @@ undo_all ()\n       if (undobuf.undo[i].is_int)\n \t*undobuf.undo[i].where.i = undobuf.undo[i].old_contents.i;\n       else\n-\t*undobuf.undo[i].where.rtx = undobuf.undo[i].old_contents.rtx;\n+\t*undobuf.undo[i].where.r = undobuf.undo[i].old_contents.r;\n       \n     }\n \n@@ -8073,15 +8073,15 @@ gen_rtx_combine (va_alist)\n \n   for (i = previous_num_undos; i < undobuf.num_undo; i++)\n     if (!undobuf.undo[i].is_int\n-\t&& GET_CODE (undobuf.undo[i].old_contents.rtx) == code\n-\t&& GET_MODE (undobuf.undo[i].old_contents.rtx) == mode)\n+\t&& GET_CODE (undobuf.undo[i].old_contents.r) == code\n+\t&& GET_MODE (undobuf.undo[i].old_contents.r) == mode)\n       {\n \tfor (j = 0; j < n_args; j++)\n-\t  if (XEXP (undobuf.undo[i].old_contents.rtx, j) != args[j])\n+\t  if (XEXP (undobuf.undo[i].old_contents.r, j) != args[j])\n \t    break;\n \n \tif (j == n_args)\n-\t  return undobuf.undo[i].old_contents.rtx;\n+\t  return undobuf.undo[i].old_contents.r;\n       }\n \n   /* Otherwise make a new rtx.  We know we have 1, 2, or 3 args."}]}