{"sha": "20d68fa0d816a1aa77ead82317d3bdae77490edf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBkNjhmYTBkODE2YTFhYTc3ZWFkODIzMTdkM2JkYWU3NzQ5MGVkZg==", "commit": {"author": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-13T20:46:16Z"}, "committer": {"name": "Maciej W. Rozycki", "email": "macro@linux-mips.org", "date": "2020-12-13T20:46:16Z"}, "message": "VAX: Fix lower bound adjustment with `casesi'\n\nFix an issue with the `casesi' expander using `GEN_INT' to produce the\nconstant rtx for lower bound adjustment.  This generates a VOIDmode\nvalue which may overflow the SImode range required for the operand to\nstay within to satisfy `general_operand', resulting in an ICE like:\n\n.../gcc/testsuite/gcc.c-torture/compile/pr46934.c: In function 'caller':\n.../gcc/testsuite/gcc.c-torture/compile/pr46934.c:17:1: error: unrecognizable insn:\n(insn 5 2 6 2 (set (reg:SI 25)\n        (plus:SI (mem/c:SI (reg/f:SI 17 virtual-incoming-args) [1 reg_type+0 S4 A32])\n            (const_int 2147483648 [0x80000000]))) -1\n     (nil))\nduring RTL pass: vregs\n.../gcc/testsuite/gcc.c-torture/compile/pr46934.c:17:1: internal compiler error: in extract_insn, at recog.c:2315\n0x110d4673 _fatal_insn(char const*, rtx_def const*, char const*, int, char const*)\n\t.../gcc/rtl-error.c:108\n0x110d46eb _fatal_insn_not_found(rtx_def const*, char const*, int, char const*)\n\t.../gcc/rtl-error.c:116\n0x1106578b extract_insn(rtx_insn*)\n\t.../gcc/recog.c:2315\n0x10b63f73 instantiate_virtual_regs_in_insn\n\t.../gcc/function.c:1609\n0x10b65b2f instantiate_virtual_regs\n\t.../gcc/function.c:1979\n0x10b65ca7 execute\n\t.../gcc/function.c:2028\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\nPlease include the complete backtrace with any bug report.\nSee <https://gcc.gnu.org/bugs/> for instructions.\ncompiler exited with status 1\nFAIL: gcc.c-torture/compile/pr46934.c   -O0  (internal compiler error)\n\nUse `gen_int_mode' to produce the rtx instead, requesting a SImode value\nso that the constant gets correctly truncated:\n\n@@ -199,7 +199,7 @@ caller (unsigned int reg_type)\n\n (insn 5 4 6 (set (reg:SI 25)\n         (plus:SI (mem/c:SI (reg/f:SI 17 virtual-incoming-args) [1 reg_type+0 S4 A32])\n-            (const_int 2147483648 [0x80000000]))) -1\n+            (const_int -2147483648 [0xffffffff80000000]))) -1\n      (nil))\n\n (jump_insn 6 5 7 (set (pc)\n\nremoving these test suite failures:\n\nFAIL: gcc.c-torture/compile/pr46934.c   -O0  (internal compiler error)\nFAIL: gcc.c-torture/compile/pr46934.c   -O0  (test for excess errors)\n\nwith the `vax-netbsdelf' target.\n\n\tgcc/\n\t* config/vax/vax.md (casesi): Use `gen_int_mode' rather than\n\t`GEN_INT' for the immediate used for lower bound adjustment.", "tree": {"sha": "23139822aebed8b75c5f8c4d47ee7cbb9f29b74f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23139822aebed8b75c5f8c4d47ee7cbb9f29b74f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20d68fa0d816a1aa77ead82317d3bdae77490edf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d68fa0d816a1aa77ead82317d3bdae77490edf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20d68fa0d816a1aa77ead82317d3bdae77490edf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d68fa0d816a1aa77ead82317d3bdae77490edf/comments", "author": null, "committer": null, "parents": [{"sha": "49ec63666e086853401021e686f0aa4d285ce9dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49ec63666e086853401021e686f0aa4d285ce9dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49ec63666e086853401021e686f0aa4d285ce9dc"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ecde0cdfd927865510485d24f67c6c2ef2874b04", "filename": "gcc/config/vax/vax.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d68fa0d816a1aa77ead82317d3bdae77490edf/gcc%2Fconfig%2Fvax%2Fvax.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d68fa0d816a1aa77ead82317d3bdae77490edf/gcc%2Fconfig%2Fvax%2Fvax.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.md?ref=20d68fa0d816a1aa77ead82317d3bdae77490edf", "patch": "@@ -2816,7 +2816,7 @@\n       rtx index = gen_reg_rtx (SImode);\n       emit_insn (gen_addsi3 (index,\n \t\t\t     operands[0],\n-\t\t\t     GEN_INT (-INTVAL (operands[1]))));\n+\t\t\t     gen_int_mode (-INTVAL (operands[1]), SImode)));\n       operands[0] = index;\n     }\n "}]}