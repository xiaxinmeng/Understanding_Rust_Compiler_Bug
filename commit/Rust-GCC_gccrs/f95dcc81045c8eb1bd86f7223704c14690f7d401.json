{"sha": "f95dcc81045c8eb1bd86f7223704c14690f7d401", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk1ZGNjODEwNDVjOGViMWJkODZmNzIyMzcwNGMxNDY5MGY3ZDQwMQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-09-24T08:00:35Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-09-24T08:00:35Z"}, "message": "AVX-512. Add widening pmov.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_insn \"avx2_<code>v16qiv16hi2<mask_name>\"): Add masking.\n\t(define_insn \"avx512bw_<code>v32qiv32hi2<mask_name>\"): New.\n\t(define_insn \"sse4_1_<code>v8qiv8hi2<mask_name>\"): Add masking.\n\t(define_insn \"avx2_<code>v8qiv8si2<mask_name>\"): Ditto.\n\t(define_insn \"sse4_1_<code>v4qiv4si2<mask_name>\"): Ditto.\n\t(define_insn \"avx2_<code>v8hiv8si2<mask_name>\"): Ditto.\n\t(define_insn \"sse4_1_<code>v4hiv4si2<mask_name>\"): Ditto.\n\t(define_insn \"avx2_<code>v4qiv4di2<mask_name>\"): Ditto.\n\t(define_insn \"sse4_1_<code>v2qiv2di2<mask_name>\"): Ditto.\n\t(define_insn \"avx2_<code>v4hiv4di2<mask_name>\"): Ditto.\n\t(define_insn \"sse4_1_<code>v2hiv2di2<mask_name>\"): Ditto.\n\t(define_insn \"avx2_<code>v4siv4di2<mask_name>\"): Ditto.\n\t(define_insn \"sse4_1_<code>v2siv2di2<mask_name>\"): Ditto.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r215541", "tree": {"sha": "44b4ab2abfedb2266825f5b50875e6a041be8c26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44b4ab2abfedb2266825f5b50875e6a041be8c26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f95dcc81045c8eb1bd86f7223704c14690f7d401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95dcc81045c8eb1bd86f7223704c14690f7d401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f95dcc81045c8eb1bd86f7223704c14690f7d401", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95dcc81045c8eb1bd86f7223704c14690f7d401/comments", "author": null, "committer": null, "parents": [{"sha": "4ef20c29a3e67224a3311ef4f620b815d4fceaeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef20c29a3e67224a3311ef4f620b815d4fceaeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ef20c29a3e67224a3311ef4f620b815d4fceaeb"}], "stats": {"total": 166, "additions": 101, "deletions": 65}, "files": [{"sha": "05e14112421c847803e57c07b129bb55ae45d3e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95dcc81045c8eb1bd86f7223704c14690f7d401/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95dcc81045c8eb1bd86f7223704c14690f7d401/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f95dcc81045c8eb1bd86f7223704c14690f7d401", "patch": "@@ -1,3 +1,27 @@\n+2014-09-24  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_insn \"avx2_<code>v16qiv16hi2<mask_name>\"): Add masking.\n+\t(define_insn \"avx512bw_<code>v32qiv32hi2<mask_name>\"): New.\n+\t(define_insn \"sse4_1_<code>v8qiv8hi2<mask_name>\"): Add masking.\n+\t(define_insn \"avx2_<code>v8qiv8si2<mask_name>\"): Ditto.\n+\t(define_insn \"sse4_1_<code>v4qiv4si2<mask_name>\"): Ditto.\n+\t(define_insn \"avx2_<code>v8hiv8si2<mask_name>\"): Ditto.\n+\t(define_insn \"sse4_1_<code>v4hiv4si2<mask_name>\"): Ditto.\n+\t(define_insn \"avx2_<code>v4qiv4di2<mask_name>\"): Ditto.\n+\t(define_insn \"sse4_1_<code>v2qiv2di2<mask_name>\"): Ditto.\n+\t(define_insn \"avx2_<code>v4hiv4di2<mask_name>\"): Ditto.\n+\t(define_insn \"sse4_1_<code>v2hiv2di2<mask_name>\"): Ditto.\n+\t(define_insn \"avx2_<code>v4siv4di2<mask_name>\"): Ditto.\n+\t(define_insn \"sse4_1_<code>v2siv2di2<mask_name>\"): Ditto.\n+\n 2014-09-24  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n \n \tPR rtl-optimization/63210"}, {"sha": "a7cc5adfa8875bf8ee70fb076f8006d924fecf46", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 77, "deletions": 65, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f95dcc81045c8eb1bd86f7223704c14690f7d401/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f95dcc81045c8eb1bd86f7223704c14690f7d401/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=f95dcc81045c8eb1bd86f7223704c14690f7d401", "patch": "@@ -13330,28 +13330,39 @@\n    (set_attr \"prefix\" \"maybe_vex\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"avx2_<code>v16qiv16hi2\"\n-  [(set (match_operand:V16HI 0 \"register_operand\" \"=x\")\n+(define_insn \"avx2_<code>v16qiv16hi2<mask_name>\"\n+  [(set (match_operand:V16HI 0 \"register_operand\" \"=v\")\n \t(any_extend:V16HI\n-\t  (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_AVX2\"\n-  \"vpmov<extsuffix>bw\\t{%1, %0|%0, %1}\"\n+\t  (match_operand:V16QI 1 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX2 && <mask_avx512bw_condition> && <mask_avx512vl_condition>\"\n+  \"vpmov<extsuffix>bw\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"sse4_1_<code>v8qiv8hi2\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+(define_insn \"avx512bw_<code>v32qiv32hi2<mask_name>\"\n+  [(set (match_operand:V32HI 0 \"register_operand\" \"=v\")\n+\t(any_extend:V32HI\n+\t  (match_operand:V32QI 1 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX512BW\"\n+  \"vpmov<extsuffix>bw\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"XI\")])\n+\n+(define_insn \"sse4_1_<code>v8qiv8hi2<mask_name>\"\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n \t(any_extend:V8HI\n \t  (vec_select:V8QI\n-\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)\n \t\t       (const_int 2) (const_int 3)\n \t\t       (const_int 4) (const_int 5)\n \t\t       (const_int 6) (const_int 7)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>bw\\t{%1, %0|%0, %q1}\"\n+  \"TARGET_SSE4_1 && <mask_avx512bw_condition> && <mask_avx512vl_condition>\"\n+  \"%vpmov<extsuffix>bw\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -13368,31 +13379,31 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n \n-(define_insn \"avx2_<code>v8qiv8si2\"\n-  [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n+(define_insn \"avx2_<code>v8qiv8si2<mask_name>\"\n+  [(set (match_operand:V8SI 0 \"register_operand\" \"=v\")\n \t(any_extend:V8SI\n \t  (vec_select:V8QI\n-\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)\n \t\t       (const_int 2) (const_int 3)\n \t\t       (const_int 4) (const_int 5)\n \t\t       (const_int 6) (const_int 7)]))))]\n-  \"TARGET_AVX2\"\n-  \"vpmov<extsuffix>bd\\t{%1, %0|%0, %q1}\"\n+  \"TARGET_AVX2 && <mask_avx512vl_condition>\"\n+  \"vpmov<extsuffix>bd\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"sse4_1_<code>v4qiv4si2\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n+(define_insn \"sse4_1_<code>v4qiv4si2<mask_name>\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(any_extend:V4SI\n \t  (vec_select:V4QI\n-\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)\n \t\t       (const_int 2) (const_int 3)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>bd\\t{%1, %0|%0, %k1}\"\n+  \"TARGET_SSE4_1 && <mask_avx512vl_condition>\"\n+  \"%vpmov<extsuffix>bd\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %k1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"ssememalign\" \"32\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -13409,26 +13420,26 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n \n-(define_insn \"avx2_<code>v8hiv8si2\"\n-  [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n+(define_insn \"avx2_<code>v8hiv8si2<mask_name>\"\n+  [(set (match_operand:V8SI 0 \"register_operand\" \"=v\")\n \t(any_extend:V8SI\n-\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_AVX2\"\n-  \"vpmov<extsuffix>wd\\t{%1, %0|%0, %1}\"\n+\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX2 && <mask_avx512vl_condition>\"\n+  \"vpmov<extsuffix>wd\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"sse4_1_<code>v4hiv4si2\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n+(define_insn \"sse4_1_<code>v4hiv4si2<mask_name>\"\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t(any_extend:V4SI\n \t  (vec_select:V4HI\n-\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)\n \t\t       (const_int 2) (const_int 3)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>wd\\t{%1, %0|%0, %q1}\"\n+  \"TARGET_SSE4_1 && <mask_avx512vl_condition>\"\n+  \"%vpmov<extsuffix>wd\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -13450,28 +13461,28 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n \n-(define_insn \"avx2_<code>v4qiv4di2\"\n-  [(set (match_operand:V4DI 0 \"register_operand\" \"=x\")\n+(define_insn \"avx2_<code>v4qiv4di2<mask_name>\"\n+  [(set (match_operand:V4DI 0 \"register_operand\" \"=v\")\n \t(any_extend:V4DI\n \t  (vec_select:V4QI\n-\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)\n \t\t       (const_int 2) (const_int 3)]))))]\n-  \"TARGET_AVX2\"\n-  \"vpmov<extsuffix>bq\\t{%1, %0|%0, %k1}\"\n+  \"TARGET_AVX2 && <mask_avx512vl_condition>\"\n+  \"vpmov<extsuffix>bq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %k1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"sse4_1_<code>v2qiv2di2\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+(define_insn \"sse4_1_<code>v2qiv2di2<mask_name>\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n \t(any_extend:V2DI\n \t  (vec_select:V2QI\n-\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V16QI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>bq\\t{%1, %0|%0, %w1}\"\n+  \"TARGET_SSE4_1 && <mask_avx512vl_condition>\"\n+  \"%vpmov<extsuffix>bq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %w1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"ssememalign\" \"16\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -13488,28 +13499,28 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n \n-(define_insn \"avx2_<code>v4hiv4di2\"\n-  [(set (match_operand:V4DI 0 \"register_operand\" \"=x\")\n+(define_insn \"avx2_<code>v4hiv4di2<mask_name>\"\n+  [(set (match_operand:V4DI 0 \"register_operand\" \"=v\")\n \t(any_extend:V4DI\n \t  (vec_select:V4HI\n-\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)\n \t\t       (const_int 2) (const_int 3)]))))]\n-  \"TARGET_AVX2\"\n-  \"vpmov<extsuffix>wq\\t{%1, %0|%0, %q1}\"\n+  \"TARGET_AVX2 && <mask_avx512vl_condition>\"\n+  \"vpmov<extsuffix>wq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"sse4_1_<code>v2hiv2di2\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+(define_insn \"sse4_1_<code>v2hiv2di2<mask_name>\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n \t(any_extend:V2DI\n \t  (vec_select:V2HI\n-\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>wq\\t{%1, %0|%0, %k1}\"\n+  \"TARGET_SSE4_1 && <mask_avx512vl_condition>\"\n+  \"%vpmov<extsuffix>wq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %k1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"ssememalign\" \"32\")\n    (set_attr \"prefix_extra\" \"1\")\n@@ -13526,24 +13537,25 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n \n-(define_insn \"avx2_<code>v4siv4di2\"\n-  [(set (match_operand:V4DI 0 \"register_operand\" \"=x\")\n+(define_insn \"avx2_<code>v4siv4di2<mask_name>\"\n+  [(set (match_operand:V4DI 0 \"register_operand\" \"=v\")\n \t(any_extend:V4DI\n-\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_AVX2\"\n-  \"vpmov<extsuffix>dq\\t{%1, %0|%0, %1}\"\n+\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX2 && <mask_avx512vl_condition>\"\n+  \"vpmov<extsuffix>dq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"sse4_1_<code>v2siv2di2\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+(define_insn \"sse4_1_<code>v2siv2di2<mask_name>\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n \t(any_extend:V2DI\n \t  (vec_select:V2SI\n-\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:V4SI 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0) (const_int 1)]))))]\n-  \"TARGET_SSE4_1\"\n-  \"%vpmov<extsuffix>dq\\t{%1, %0|%0, %q1}\"\n+  \"TARGET_SSE4_1 && <mask_avx512vl_condition>\"\n+  \"%vpmov<extsuffix>dq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %q1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"ssememalign\" \"64\")\n    (set_attr \"prefix_extra\" \"1\")"}]}