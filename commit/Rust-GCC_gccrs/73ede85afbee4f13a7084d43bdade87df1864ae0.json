{"sha": "73ede85afbee4f13a7084d43bdade87df1864ae0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNlZGU4NWFmYmVlNGYxM2E3MDg0ZDQzYmRhZGU4N2RmMTg2NGFlMA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2005-02-17T18:39:43Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-02-17T18:39:43Z"}, "message": "Chromaticity.java, [...]: New files.\n\n2005-02-17  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/print/attribute/standard/Chromaticity.java,\n\tjavax/print/attribute/standard/Destination.java,\n\tjavax/print/attribute/standard/MediaPrintableArea.java,\n\tjavax/print/attribute/standard/MediaSize.java: New files.\n\t* Makefile.am: Added new files.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r95178", "tree": {"sha": "4ce0ff72bff9c3808ee7535aff3c44db2bca8acd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ce0ff72bff9c3808ee7535aff3c44db2bca8acd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73ede85afbee4f13a7084d43bdade87df1864ae0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73ede85afbee4f13a7084d43bdade87df1864ae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73ede85afbee4f13a7084d43bdade87df1864ae0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73ede85afbee4f13a7084d43bdade87df1864ae0/comments", "author": null, "committer": null, "parents": [{"sha": "c38e914edbb02ff6bdccfea7a98a18dbccc866e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c38e914edbb02ff6bdccfea7a98a18dbccc866e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c38e914edbb02ff6bdccfea7a98a18dbccc866e3"}], "stats": {"total": 477, "additions": 477, "deletions": 0}, "files": [{"sha": "60740f9b4ca502a880c0f7628839617af68b2ea4", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=73ede85afbee4f13a7084d43bdade87df1864ae0", "patch": "@@ -1,3 +1,12 @@\n+2005-02-17  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/print/attribute/standard/Chromaticity.java,\n+\tjavax/print/attribute/standard/Destination.java,\n+\tjavax/print/attribute/standard/MediaPrintableArea.java,\n+\tjavax/print/attribute/standard/MediaSize.java: New files.\n+\t* Makefile.am: Added new files.\n+\t* Makefile.in: Regenerated.\n+\n 2005-02-17  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n \t    Michael Koch  <konqueror@gmx.de>\n "}, {"sha": "41117b26f006515fe344775ca54922900240a4ca", "filename": "libjava/Makefile.am", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=73ede85afbee4f13a7084d43bdade87df1864ae0", "patch": "@@ -2017,6 +2017,10 @@ javax/print/attribute/HashPrintServiceAttributeSet.java\t\\\n javax/print/attribute/Attribute.java \\\n javax/print/attribute/DocAttributeSet.java \\\n javax/print/attribute/PrintRequestAttributeSet.java \\\n+javax/print/attribute/standard/Chromaticity.java \\\n+javax/print/attribute/standard/Destination.java \\\n+javax/print/attribute/standard/MediaPrintableArea.java \\\n+javax/print/attribute/standard/MediaSize.java \\\n javax/print/attribute/standard/NumberOfInterveningJobs.java \\\n javax/print/attribute/standard/PrinterMakeAndModel.java\t\\\n javax/print/attribute/standard/PrinterStateReason.java \\"}, {"sha": "b987896d6b700a25fab437393be26e03ae5726c6", "filename": "libjava/Makefile.in", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=73ede85afbee4f13a7084d43bdade87df1864ae0", "patch": "@@ -2016,6 +2016,10 @@ am__libgcj0_convenience_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjavax/print/attribute/Attribute.java \\\n \tjavax/print/attribute/DocAttributeSet.java \\\n \tjavax/print/attribute/PrintRequestAttributeSet.java \\\n+\tjavax/print/attribute/standard/Chromaticity.java \\\n+\tjavax/print/attribute/standard/Destination.java \\\n+\tjavax/print/attribute/standard/MediaPrintableArea.java \\\n+\tjavax/print/attribute/standard/MediaSize.java \\\n \tjavax/print/attribute/standard/NumberOfInterveningJobs.java \\\n \tjavax/print/attribute/standard/PrinterMakeAndModel.java \\\n \tjavax/print/attribute/standard/PrinterStateReason.java \\\n@@ -3518,6 +3522,10 @@ am__objects_13 = javax/imageio/ImageWriteParam.lo \\\n \tjavax/print/attribute/Attribute.lo \\\n \tjavax/print/attribute/DocAttributeSet.lo \\\n \tjavax/print/attribute/PrintRequestAttributeSet.lo \\\n+\tjavax/print/attribute/standard/Chromaticity.lo \\\n+\tjavax/print/attribute/standard/Destination.lo \\\n+\tjavax/print/attribute/standard/MediaPrintableArea.lo \\\n+\tjavax/print/attribute/standard/MediaSize.lo \\\n \tjavax/print/attribute/standard/NumberOfInterveningJobs.lo \\\n \tjavax/print/attribute/standard/PrinterMakeAndModel.lo \\\n \tjavax/print/attribute/standard/PrinterStateReason.lo \\\n@@ -6294,6 +6302,10 @@ javax/print/attribute/HashPrintServiceAttributeSet.java\t\\\n javax/print/attribute/Attribute.java \\\n javax/print/attribute/DocAttributeSet.java \\\n javax/print/attribute/PrintRequestAttributeSet.java \\\n+javax/print/attribute/standard/Chromaticity.java \\\n+javax/print/attribute/standard/Destination.java \\\n+javax/print/attribute/standard/MediaPrintableArea.java \\\n+javax/print/attribute/standard/MediaSize.java \\\n javax/print/attribute/standard/NumberOfInterveningJobs.java \\\n javax/print/attribute/standard/PrinterMakeAndModel.java\t\\\n javax/print/attribute/standard/PrinterStateReason.java \\\n@@ -14069,6 +14081,18 @@ javax/print/attribute/standard/$(am__dirstamp):\n javax/print/attribute/standard/$(DEPDIR)/$(am__dirstamp):\n \t@$(mkdir_p) javax/print/attribute/standard/$(DEPDIR)\n \t@: > javax/print/attribute/standard/$(DEPDIR)/$(am__dirstamp)\n+javax/print/attribute/standard/Chromaticity.lo:  \\\n+\tjavax/print/attribute/standard/$(am__dirstamp) \\\n+\tjavax/print/attribute/standard/$(DEPDIR)/$(am__dirstamp)\n+javax/print/attribute/standard/Destination.lo:  \\\n+\tjavax/print/attribute/standard/$(am__dirstamp) \\\n+\tjavax/print/attribute/standard/$(DEPDIR)/$(am__dirstamp)\n+javax/print/attribute/standard/MediaPrintableArea.lo:  \\\n+\tjavax/print/attribute/standard/$(am__dirstamp) \\\n+\tjavax/print/attribute/standard/$(DEPDIR)/$(am__dirstamp)\n+javax/print/attribute/standard/MediaSize.lo:  \\\n+\tjavax/print/attribute/standard/$(am__dirstamp) \\\n+\tjavax/print/attribute/standard/$(DEPDIR)/$(am__dirstamp)\n javax/print/attribute/standard/NumberOfInterveningJobs.lo:  \\\n \tjavax/print/attribute/standard/$(am__dirstamp) \\\n \tjavax/print/attribute/standard/$(DEPDIR)/$(am__dirstamp)\n@@ -20163,6 +20187,8 @@ mostlyclean-compile:\n \t-rm -f javax/print/attribute/URISyntax.lo\n \t-rm -f javax/print/attribute/UnmodifiableSetException.$(OBJEXT)\n \t-rm -f javax/print/attribute/UnmodifiableSetException.lo\n+\t-rm -f javax/print/attribute/standard/Chromaticity.$(OBJEXT)\n+\t-rm -f javax/print/attribute/standard/Chromaticity.lo\n \t-rm -f javax/print/attribute/standard/ColorSupported.$(OBJEXT)\n \t-rm -f javax/print/attribute/standard/ColorSupported.lo\n \t-rm -f javax/print/attribute/standard/Compression.$(OBJEXT)\n@@ -20177,6 +20203,8 @@ mostlyclean-compile:\n \t-rm -f javax/print/attribute/standard/DateTimeAtCreation.lo\n \t-rm -f javax/print/attribute/standard/DateTimeAtProcessing.$(OBJEXT)\n \t-rm -f javax/print/attribute/standard/DateTimeAtProcessing.lo\n+\t-rm -f javax/print/attribute/standard/Destination.$(OBJEXT)\n+\t-rm -f javax/print/attribute/standard/Destination.lo\n \t-rm -f javax/print/attribute/standard/DocumentName.$(OBJEXT)\n \t-rm -f javax/print/attribute/standard/DocumentName.lo\n \t-rm -f javax/print/attribute/standard/Fidelity.$(OBJEXT)\n@@ -20223,6 +20251,10 @@ mostlyclean-compile:\n \t-rm -f javax/print/attribute/standard/JobStateReasons.lo\n \t-rm -f javax/print/attribute/standard/Media.$(OBJEXT)\n \t-rm -f javax/print/attribute/standard/Media.lo\n+\t-rm -f javax/print/attribute/standard/MediaPrintableArea.$(OBJEXT)\n+\t-rm -f javax/print/attribute/standard/MediaPrintableArea.lo\n+\t-rm -f javax/print/attribute/standard/MediaSize.$(OBJEXT)\n+\t-rm -f javax/print/attribute/standard/MediaSize.lo\n \t-rm -f javax/print/attribute/standard/MediaSizeName.$(OBJEXT)\n \t-rm -f javax/print/attribute/standard/MediaSizeName.lo\n \t-rm -f javax/print/attribute/standard/MultipleDocumentHandling.$(OBJEXT)\n@@ -23573,13 +23605,15 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/$(DEPDIR)/TextSyntax.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/$(DEPDIR)/URISyntax.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/$(DEPDIR)/UnmodifiableSetException.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/Chromaticity.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/ColorSupported.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/Compression.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/Copies.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/CopiesSupported.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/DateTimeAtCompleted.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/DateTimeAtCreation.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/DateTimeAtProcessing.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/Destination.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/DocumentName.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/Fidelity.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/Finishings.Plo@am__quote@\n@@ -23603,6 +23637,8 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/JobStateReason.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/JobStateReasons.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/Media.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/MediaPrintableArea.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/MediaSize.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/MediaSizeName.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/MultipleDocumentHandling.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@javax/print/attribute/standard/$(DEPDIR)/NumberOfDocuments.Plo@am__quote@"}, {"sha": "306cc38c8a1bd03e3ae0f86e5b45a00a1a135d4b", "filename": "libjava/javax/print/attribute/standard/Chromaticity.java", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FChromaticity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FChromaticity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FChromaticity.java?ref=73ede85afbee4f13a7084d43bdade87df1864ae0", "patch": "@@ -0,0 +1,86 @@\n+/* Chromaticity.java --\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class Chromaticity extends EnumSyntax\n+  implements DocAttribute, PrintRequestAttribute, PrintJobAttribute\n+{\n+  private static final long serialVersionUID = 4660543931355214012L;\n+\n+  public static final Chromaticity MONOCHROME = new Chromaticity(0);\n+  public static final Chromaticity COLOR = new Chromaticity(1);\n+\n+  /**\n+   * Creates a <code>Chromaticity</code> object.\n+   *\n+   * @param value the enum value\n+   */\n+  protected Chromaticity(int value)\n+  {\n+    super(value);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>Sides</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return Chromaticity.class;\n+  }\n+\n+  /**\n+   * Returns the name of this attribute.\n+   *\n+   * @return the name\n+   */\n+  public String getName()\n+  {\n+    return \"chromaticity\";\n+  }\n+}"}, {"sha": "6d723ccb916d6f71c129a554cfb5923926c8b5e6", "filename": "libjava/javax/print/attribute/standard/Destination.java", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDestination.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDestination.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FDestination.java?ref=73ede85afbee4f13a7084d43bdade87df1864ae0", "patch": "@@ -0,0 +1,82 @@\n+/* Destination.java --\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print.attribute.standard;\n+\n+import java.net.URI;\n+\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+import javax.print.attribute.URISyntax;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class Destination extends URISyntax\n+  implements PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = 6776739171700415321L;\n+\n+  /**\n+   * Constructs a <code>Destination</code> object.\n+   */\n+  public Destination(URI uri)\n+  {\n+    super(uri);\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>Destination</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return Destination.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"printer-uri\"\n+   */\n+  public String getName()\n+  {\n+    return \"destination\";\n+  }\n+}"}, {"sha": "cc1a07e13220fdaf415aed4db68cd04b068c2f1c", "filename": "libjava/javax/print/attribute/standard/MediaPrintableArea.java", "status": "added", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMediaPrintableArea.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMediaPrintableArea.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMediaPrintableArea.java?ref=73ede85afbee4f13a7084d43bdade87df1864ae0", "patch": "@@ -0,0 +1,146 @@\n+/* MediaPrintableArea.java -- \n+   Copyright (C) 2005  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print.attribute.standard;\n+\n+import javax.print.attribute.DocAttribute;\n+import javax.print.attribute.PrintJobAttribute;\n+import javax.print.attribute.PrintRequestAttribute;\n+\n+/**\n+ * @author Michael Koch (konqueror@gmx.de)\n+ */\n+public final class MediaPrintableArea\n+  implements DocAttribute, PrintJobAttribute, PrintRequestAttribute\n+{\n+  private static final long serialVersionUID = -1597171464050795793L;\n+\n+  public static final int INCH = 25400;\n+  public static final int MM = 1000;\n+  \n+  private float x;\n+  private float y;\n+  private float width;\n+  private float height;\n+  \n+  /**\n+   * Creates a new <code>MediaPrintableArea</code> object.\n+   * \n+   * @throws IllegalArgumentException if x i&lt; 0 or y i&lt; 0 or w i&lt;= 0\n+   * or h i&lt;= 0 or units i&lt; 1\n+   */\n+  public MediaPrintableArea(float x, float y, float w, float h, int units)\n+  {\n+    if (x < 0.0f || y < 0.0f || w <= 0.0f || h <= 0.0f)\n+      throw new IllegalArgumentException();\n+\n+    this.x = x;\n+    this.y = y;\n+    this.width = w;\n+    this.height = h;\n+  }\n+\n+  /**\n+   * Creates a new <code>MediaPrintableArea</code> object.\n+   * \n+   * @throws IllegalArgumentException if x i&lt; 0 or y i&lt; 0 or w i&lt;= 0\n+   * or h i&lt;= 0 or units i&lt; 1\n+   */\n+  public MediaPrintableArea(int x, int y, int w, int h, int units)\n+  {\n+    if (x < 0 || y < 0 || w <= 0 || h <= 0)\n+      throw new IllegalArgumentException();\n+\n+    this.x = x;\n+    this.y = y;\n+    this.width = w;\n+    this.height = h;\n+  }\n+\n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>MediaPrintableArea</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return MediaPrintableArea.class;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"media-printable-area\"\n+   */\n+  public String getName()\n+  {\n+    return \"media-printable-area\";\n+  }\n+\n+  public float getHeight(int units)\n+  {\n+    if (units < 1)\n+      throw new IllegalArgumentException();\n+\n+    return height * units;\n+  }\n+\n+  public float getWidth(int units)\n+  {\n+    if (units < 1)\n+      throw new IllegalArgumentException();\n+\n+    return width * units;\n+  }\n+\n+  public float getX(int units)\n+  {\n+    if (units < 1)\n+      throw new IllegalArgumentException();\n+\n+    return x * units;\n+  }\n+\n+  public float getY(int units)\n+  {\n+    if (units < 1)\n+      throw new IllegalArgumentException();\n+\n+    return y * units;\n+  }\n+}"}, {"sha": "35a6d3e941411266641c8d0c0a25c02f69c8bab7", "filename": "libjava/javax/print/attribute/standard/MediaSize.java", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMediaSize.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73ede85afbee4f13a7084d43bdade87df1864ae0/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMediaSize.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fprint%2Fattribute%2Fstandard%2FMediaSize.java?ref=73ede85afbee4f13a7084d43bdade87df1864ae0", "patch": "@@ -0,0 +1,114 @@\n+/* MediaSize.java -- \n+   Copyright (C) 2005  Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package javax.print.attribute.standard;\n+\n+import java.util.ArrayList;\n+\n+import javax.print.attribute.Attribute;\n+import javax.print.attribute.Size2DSyntax;\n+\n+public class MediaSize extends Size2DSyntax\n+  implements Attribute\n+{\n+  private static final long serialVersionUID = -1967958664615414771L;\n+\n+  private static ArrayList mediaCache = new ArrayList();\n+  \n+  private MediaSizeName media;\n+  \n+  public MediaSize(float x, float y, int units)\n+  {\n+    super(x, y, units);\n+  }\n+  \n+  public MediaSize(float x, float y, int units, MediaSizeName media)\n+  {\n+    super(x, y, units);\n+    this.media = media;\n+  }\n+  \n+  public MediaSize(int x, int y, int units)\n+  {\n+    super(x, y, units);\n+  }\n+  \n+  public MediaSize(int x, int y, int units, MediaSizeName media)\n+  {\n+    super(x, y, units);\n+    this.media = media;\n+  }\n+  \n+  /**\n+   * Returns category of this class.\n+   *\n+   * @return the class <code>MediaSize</code> itself\n+   */\n+  public Class getCategory()\n+  {\n+    return MediaSize.class;\n+  }\n+\n+  public static MediaSize getMediaSizeForName(MediaSizeName media)\n+  {\n+    for (int i = 0; i < mediaCache.size(); i++)\n+      {\n+\tMediaSize size = (MediaSize) mediaCache.get(i);\n+\t\n+\tif (size.getMediaSizeName().equals(media))\n+\t  return size;\n+      }\n+\n+    return null;\n+  }\n+  \n+  public MediaSizeName getMediaSizeName()\n+  {\n+    return media;\n+  }\n+\n+  /**\n+   * Returns name of this class.\n+   *\n+   * @return the string \"media-size\"\n+   */\n+  public String getName()\n+  {\n+    return \"media-size\";\n+  }\n+}"}]}