{"sha": "ed1041376a981f996d566de4284222f06c8bd6c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQxMDQxMzc2YTk4MWY5OTZkNTY2ZGU0Mjg0MjIyZjA2YzhiZDZjMw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-05-19T15:31:00Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-05-19T15:31:00Z"}, "message": "sfp-machine.h (FP_HANDLE_EXCEPTIONS): Support Sun assembler syntax.\n\n\tlibgcc:\n\t* config/i386/32/sfp-machine.h (FP_HANDLE_EXCEPTIONS): Support Sun\n\tassembler syntax.\n\n\tgcc:\n\t* config.gcc (i[34567]86-*-solaris2*): Default with_arch_32 to\n\tpentiumpro on Solaris 8/x86 with Sun as.\n\t* configure.ac (gcc_cv_as_hidden): Check for Solaris 9/x86 as\n\thidden alias bug.\n\t(gcc_cv_as_ix86_quad): Check for .quad directive.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* config/i386/sol2.h (ASM_QUAD): Change guard to !HAVE_AS_IX86_QUAD.\n\nFrom-SVN: r159569", "tree": {"sha": "b47b59d4937c53d4b605186e1eaf4a5b820a3935", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b47b59d4937c53d4b605186e1eaf4a5b820a3935"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed1041376a981f996d566de4284222f06c8bd6c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed1041376a981f996d566de4284222f06c8bd6c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed1041376a981f996d566de4284222f06c8bd6c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed1041376a981f996d566de4284222f06c8bd6c3/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16e520b612ab84443b252e2358f32d82014235fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16e520b612ab84443b252e2358f32d82014235fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16e520b612ab84443b252e2358f32d82014235fd"}], "stats": {"total": 139, "additions": 133, "deletions": 6}, "files": [{"sha": "35d39a0175d5bcb1d3d82c0fb6db111c8be4210e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed1041376a981f996d566de4284222f06c8bd6c3", "patch": "@@ -1,3 +1,14 @@\n+2010-05-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config.gcc (i[34567]86-*-solaris2*): Default with_arch_32 to\n+\tpentiumpro on Solaris 8/x86 with Sun as.\n+\t* configure.ac (gcc_cv_as_hidden): Check for Solaris 9/x86 as\n+\thidden alias bug.\n+\t(gcc_cv_as_ix86_quad): Check for .quad directive.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* config/i386/sol2.h (ASM_QUAD): Change guard to !HAVE_AS_IX86_QUAD.\n+\n 2010-05-19  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.c (ipa_print_node_jump_functions): Print jump functions"}, {"sha": "30c15ad116d97cbf06afd062a4c745e38408a8a7", "filename": "gcc/config.gcc", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ed1041376a981f996d566de4284222f06c8bd6c3", "patch": "@@ -1225,7 +1225,19 @@ i[34567]86-*-solaris2*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h i386/sysv4.h sol2.h\"\n \t# Set default arch_32 to pentium4, tune_32 to generic like the other\n \t# i386 targets, although config.guess defaults to i386-pc-solaris2*.\n-\twith_arch_32=${with_arch_32:-pentium4}\n+\tcase ${target} in\n+\t*-*-solaris2.8*)\n+\t\tif test x$gas = xyes; then\n+\t\t\twith_arch_32=${with_arch_32:-pentium4}\n+\t\telse\n+\t\t\t# Solaris 8/x86 as cannot handle sse2.\n+\t\t\twith_arch_32=${with_arch_32:-pentiumpro}\n+\t\tfi\n+\t\t;;\n+\t*)\n+\t\twith_arch_32=${with_arch_32:-pentium4}\n+\t\t;;\n+\tesac\n \twith_tune_32=${with_tune_32:-generic}\n \tcase ${target} in\n \t*-*-solaris2.1[0-9]*)"}, {"sha": "a1c117ab0b1f79c2e7dac18ec39e74eec0131e7d", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=ed1041376a981f996d566de4284222f06c8bd6c3", "patch": "@@ -315,6 +315,12 @@\n #endif\n \n \n+/* Define if your assembler supports the .quad directive. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_IX86_QUAD\n+#endif\n+\n+\n /* Define if your assembler supports the sahf mnemonic. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_IX86_SAHF"}, {"sha": "6a014651be5aa10201d56448bd7c9c3e3e1b3a63", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=ed1041376a981f996d566de4284222f06c8bd6c3", "patch": "@@ -72,7 +72,7 @@ along with GCC; see the file COPYING3.  If not see\n #define LOCAL_LABEL_PREFIX \".\"\n \n /* The 32-bit Solaris assembler does not support .quad.  Do not use it.  */\n-#ifndef TARGET_BI_ARCH\n+#ifndef HAVE_AS_IX86_QUAD\n #undef ASM_QUAD\n #endif\n "}, {"sha": "82f65046aed76febc664f20595a0f09089f6a143", "filename": "gcc/configure", "status": "modified", "additions": 60, "deletions": 1, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=ed1041376a981f996d566de4284222f06c8bd6c3", "patch": "@@ -21258,7 +21258,35 @@ foobar:' > conftest.s\n   $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n   test $ac_status = 0; }; }\n     then\n-\tgcc_cv_as_hidden=yes\n+\n+# Solaris 9/x86 as incorrectly emits an alias for a hidden symbol with\n+# STV_HIDDEN, so disable .hidden support if so.\n+case \"${target}\" in\n+  i?86-*-solaris2*)\n+    if test x$gcc_cv_as != x && test x$gcc_cv_objdump != x; then\n+      cat > conftest.s <<EOF\n+.globl hidden\n+        .hidden hidden\n+hidden:\n+.globl default\n+        .set    default,hidden\n+EOF\n+      if $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1 \\\n+        && $gcc_cv_objdump -t conftest.o 2>/dev/null | \\\n+        grep '\\.hidden default' > /dev/null; then\n+        gcc_cv_as_hidden=no\n+      else\n+        gcc_cv_as_hidden=yes\n+      fi\n+    else\n+      # Assume bug is present if objdump is missing.\n+      gcc_cv_as_hidden=no\n+    fi\n+    ;;\n+  *)\n+    gcc_cv_as_hidden=yes\n+    ;;\n+esac\n     else\n       echo \"configure: failed program was\" >&5\n       cat conftest.s >&5\n@@ -23127,6 +23155,37 @@ if test $gcc_cv_as_ix86_ffreep = yes; then\n \n $as_echo \"#define HAVE_AS_IX86_FFREEP 1\" >>confdefs.h\n \n+fi\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .quad directive\" >&5\n+$as_echo_n \"checking assembler for .quad directive... \" >&6; }\n+if test \"${gcc_cv_as_ix86_quad+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_ix86_quad=no\n+  if test x$gcc_cv_as != x; then\n+    echo '.quad 0' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_ix86_quad=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_ix86_quad\" >&5\n+$as_echo \"$gcc_cv_as_ix86_quad\" >&6; }\n+if test $gcc_cv_as_ix86_quad = yes; then\n+\n+$as_echo \"#define HAVE_AS_IX86_QUAD 1\" >>confdefs.h\n+\n fi\n \n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for sahf mnemonic\" >&5"}, {"sha": "15b126fe347ab69383d84c5022c3245bc5f2608a", "filename": "gcc/configure.ac", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1041376a981f996d566de4284222f06c8bd6c3/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=ed1041376a981f996d566de4284222f06c8bd6c3", "patch": "@@ -2152,7 +2152,35 @@ gcc_GAS_CHECK_FEATURE([.nsubspa comdat], gcc_cv_as_nsubspa_comdat,\n gcc_GAS_CHECK_FEATURE([.hidden], gcc_cv_as_hidden,\n  [elf,2,13,0],,\n [\t.hidden foobar\n-foobar:])\n+foobar:],[\n+# Solaris 9/x86 as incorrectly emits an alias for a hidden symbol with\n+# STV_HIDDEN, so disable .hidden support if so.\n+case \"${target}\" in\n+  i?86-*-solaris2*)\n+    if test x$gcc_cv_as != x && test x$gcc_cv_objdump != x; then\n+      cat > conftest.s <<EOF\n+.globl hidden\n+        .hidden hidden\n+hidden:\n+.globl default\n+        .set    default,hidden\n+EOF\n+      if $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1 \\\n+        && $gcc_cv_objdump -t conftest.o 2>/dev/null | \\\n+        grep '\\.hidden default' > /dev/null; then\n+        gcc_cv_as_hidden=no\n+      else\n+        gcc_cv_as_hidden=yes\n+      fi\n+    else\n+      # Assume bug is present if objdump is missing.\n+      gcc_cv_as_hidden=no\n+    fi\n+    ;;\n+  *)\n+    gcc_cv_as_hidden=yes\n+    ;;\n+esac])\n \n changequote(,)dnl\n if test $in_tree_ld != yes ; then\n@@ -3252,6 +3280,12 @@ foo:\tnop\n       [AC_DEFINE(HAVE_AS_IX86_FFREEP, 1,\n         [Define if your assembler supports the ffreep mnemonic.])])\n \n+    gcc_GAS_CHECK_FEATURE([.quad directive],\n+      gcc_cv_as_ix86_quad,,,\n+      [.quad 0],,\n+      [AC_DEFINE(HAVE_AS_IX86_QUAD, 1,\n+        [Define if your assembler supports the .quad directive.])])\n+\n     gcc_GAS_CHECK_FEATURE([sahf mnemonic],\n       gcc_cv_as_ix86_sahf,,,\n       [sahf],,"}, {"sha": "de90f4081ae6f50f4ecd7aaa7c88e50a01cc8372", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1041376a981f996d566de4284222f06c8bd6c3/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1041376a981f996d566de4284222f06c8bd6c3/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=ed1041376a981f996d566de4284222f06c8bd6c3", "patch": "@@ -1,3 +1,8 @@\n+2010-05-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/i386/32/sfp-machine.h (FP_HANDLE_EXCEPTIONS): Support Sun\n+\tassembler syntax.\n+\n 2010-04-15  Thomas Schwinge  <tschwinge@gnu.org>\n \n \t* config.host <i[34567]86-*-gnu*>: Handle softfp as for Linux."}, {"sha": "1600a7fe2c75840a4f75a9d85630804e05da37fb", "filename": "libgcc/config/i386/32/sfp-machine.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed1041376a981f996d566de4284222f06c8bd6c3/libgcc%2Fconfig%2Fi386%2F32%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed1041376a981f996d566de4284222f06c8bd6c3/libgcc%2Fconfig%2Fi386%2F32%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2F32%2Fsfp-machine.h?ref=ed1041376a981f996d566de4284222f06c8bd6c3", "patch": "@@ -142,8 +142,8 @@ struct fenv\n     if (_fex & FP_EX_DIVZERO)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tfloat f = 1.0, g = 0.0;\t\t\t\t\t\t\\\n-\t__asm__ __volatile__ (\"fdivp\" : \"=t\" (f)\t\t\t\\\n-\t\t\t      \t      : \"0\" (f), \"u\" (g)\t\t\\\n+\t__asm__ __volatile__ (\"fdivp {%0, %y1|%y1, %0}\"\t\t\t\\\n+\t\t\t\t      : \"+t\" (f) : \"u\" (g)\t\t\\\n \t\t\t\t      : \"st(1)\");\t\t\t\\\n \t__asm__ __volatile__ (\"fwait\");\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\"}]}