{"sha": "a7c764a96ca48293b863196a073eb119453e1a3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdjNzY0YTk2Y2E0ODI5M2I4NjMxOTZhMDczZWIxMTk0NTNlMWEzYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T13:40:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T13:40:50Z"}, "message": "[multiple changes]\n\n2010-09-10  Doug Rupp  <rupp@adacore.com>\n\n\t* bindgen.adb: Minor comment fix for -H switch.\n\n2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_cg.adb (Register_CG_Node): Determine enclosing subprogram or\n\tlibrary unit now, by traversing tree before context is expanded.\n\t(Write_Call_Info): Use enclosing unit name directly.\n\t* exp_ch9.adb (Expand_N_Accept_Statement): Attach generated block to\n\ttree earlier, to ensure that subsequent declarations are analyzed in a\n\tconnected structure.\n\t* exp_intr.adb (Expand_Unc_Deallocation): Ditto for generated statement\n\tlist.\n\nFrom-SVN: r164173", "tree": {"sha": "f831a0133244f395e3b04b5dbad23f75b2001ced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f831a0133244f395e3b04b5dbad23f75b2001ced"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7c764a96ca48293b863196a073eb119453e1a3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7c764a96ca48293b863196a073eb119453e1a3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7c764a96ca48293b863196a073eb119453e1a3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7c764a96ca48293b863196a073eb119453e1a3b/comments", "author": null, "committer": null, "parents": [{"sha": "ed0af3ba4fb25ca4c661a1e8475c42931a78f59b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed0af3ba4fb25ca4c661a1e8475c42931a78f59b"}], "stats": {"total": 57, "additions": 40, "deletions": 17}, "files": [{"sha": "da9e0c06b78b86967d32e1ca65305b3e64ab86a9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c764a96ca48293b863196a073eb119453e1a3b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c764a96ca48293b863196a073eb119453e1a3b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a7c764a96ca48293b863196a073eb119453e1a3b", "patch": "@@ -1,3 +1,18 @@\n+2010-09-10  Doug Rupp  <rupp@adacore.com>\n+\n+\t* bindgen.adb: Minor comment fix for -H switch.\n+\n+2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_cg.adb (Register_CG_Node): Determine enclosing subprogram or\n+\tlibrary unit now, by traversing tree before context is expanded.\n+\t(Write_Call_Info): Use enclosing unit name directly.\n+\t* exp_ch9.adb (Expand_N_Accept_Statement): Attach generated block to\n+\ttree earlier, to ensure that subsequent declarations are analyzed in a\n+\tconnected structure.\n+\t* exp_intr.adb (Expand_Unc_Deallocation): Ditto for generated statement\n+\tlist.\n+\n 2010-09-10  Robert Dewar  <dewar@adacore.com>\n \n \t* symbols-processing-vms-alpha.adb: Minor reformatting."}, {"sha": "df47274e9795f3d5555bdbf2bf1ad9eb3c3cd281", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c764a96ca48293b863196a073eb119453e1a3b/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c764a96ca48293b863196a073eb119453e1a3b/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=a7c764a96ca48293b863196a073eb119453e1a3b", "patch": "@@ -139,7 +139,7 @@ package body Bindgen is\n \n    --  Heap_Size is the heap to use for memory allocations set by use of a\n    --  -Hnn parameter for the binder or by the GNAT$NO_MALLOC_64 logical.\n-   --  Valid values are 32 and 64. This switch is only available on VMS.\n+   --  Valid values are 32 and 64. This switch is only effective on VMS.\n \n    --  WC_Encoding shows the wide character encoding method used for the main\n    --  program. This is one of the encoding letters defined in"}, {"sha": "aad5157d9e32323b5d4d7208d4feff257e3da970", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c764a96ca48293b863196a073eb119453e1a3b/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c764a96ca48293b863196a073eb119453e1a3b/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=a7c764a96ca48293b863196a073eb119453e1a3b", "patch": "@@ -193,7 +193,7 @@ package body Exp_CG is\n                declare\n                   Result : Natural := Prefix_Length + 1;\n                begin\n-                  while Nr > 10 loop\n+                  while Nr >= 10 loop\n                      Result := Result + 1;\n                      Nr := Nr / 10;\n                   end loop;\n@@ -324,12 +324,22 @@ package body Exp_CG is\n \n             declare\n                Copy : constant Node_Id := New_Copy (N);\n+               Par  : Node_Id;\n \n             begin\n-               --  Copy the link to the parent to allow climbing up the tree\n-               --  when the call-graph information is generated\n+               --  Determine the enclosing scope to use when generating the\n+               --  call graph. This must be done now to avoid problems with\n+               --  control structures that may be rewritten during expansion.\n+\n+               Par := Parent (N);\n+               while Nkind (Par) /= N_Subprogram_Body\n+                 and then Nkind (Parent (Par)) /= N_Compilation_Unit\n+               loop\n+                  Par := Parent (Par);\n+                  pragma Assert (Present (Par));\n+               end loop;\n \n-               Set_Parent (Copy, Parent (N));\n+               Set_Parent (Copy, Par);\n                Call_Graph_Nodes.Append (Copy);\n             end;\n          end if;\n@@ -378,20 +388,9 @@ package body Exp_CG is\n       Ctrl_Arg : constant Node_Id   := Controlling_Argument (Call);\n       Ctrl_Typ : constant Entity_Id := Base_Type (Etype (Ctrl_Arg));\n       Prim     : constant Entity_Id := Entity (Sinfo.Name (Call));\n-      P        : Node_Id;\n+      P        : constant Node_Id   := Parent (Call);\n \n    begin\n-      --  Locate the enclosing context: a subprogram (if available) or the\n-      --  enclosing library-level package\n-\n-      P := Parent (Call);\n-      while Nkind (P) /= N_Subprogram_Body\n-        and then Nkind (Parent (P)) /= N_Compilation_Unit\n-      loop\n-         P := Parent (P);\n-         pragma Assert (Present (P));\n-      end loop;\n-\n       Write_Str (\"edge: { sourcename: \");\n       Write_Char ('\"');\n       Get_External_Name (Defining_Entity (P), Has_Suffix => False);"}, {"sha": "a91ec6a4c225a8d310248eb5c32e0959755f90fc", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c764a96ca48293b863196a073eb119453e1a3b/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c764a96ca48293b863196a073eb119453e1a3b/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=a7c764a96ca48293b863196a073eb119453e1a3b", "patch": "@@ -5259,6 +5259,11 @@ package body Exp_Ch9 is\n              Declarations               => Declarations (N),\n              Handled_Statement_Sequence => Build_Accept_Body (N));\n \n+         --  For the analysis of the generated declarations, the parent node\n+         --  must be properly set.\n+\n+         Set_Parent (Block, Parent (N));\n+\n          --  Prepend call to Accept_Call to main statement sequence If the\n          --  accept has exception handlers, the statement sequence is wrapped\n          --  in a block. Insert call and renaming declarations in the"}, {"sha": "ecf1026505699615387333d6ea373704ae8767ca", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c764a96ca48293b863196a073eb119453e1a3b/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c764a96ca48293b863196a073eb119453e1a3b/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=a7c764a96ca48293b863196a073eb119453e1a3b", "patch": "@@ -1014,6 +1014,10 @@ package body Exp_Intr is\n       Append_To (Stmts, Free_Node);\n       Set_Storage_Pool (Free_Node, Pool);\n \n+      --  Attach to tree before analysis of generated subtypes below.\n+\n+      Set_Parent (Stmts, Parent (N));\n+\n       --  Deal with storage pool\n \n       if Present (Pool) then"}]}