{"sha": "f9b5db750bc7fbba69fee93564907f7da1bca35f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjliNWRiNzUwYmM3ZmJiYTY5ZmVlOTM1NjQ5MDdmN2RhMWJjYTM1Zg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-05T11:09:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-05T12:41:15Z"}, "message": "ipa/94947 - fix test for externally visible variables for IPA PTA\n\nThis fixes lack of an escape point of externally declared variables.\n\n2020-05-05  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/94947\n\t* tree-ssa-structalias.c (ipa_pta_execute): Use\n\tvarpool_node::externally_visible_p ().\n\t(refered_from_nonlocal_var): Likewise.\n\n\t* gcc.dg/torture/pr94947-1.c: New testcase.\n\t* gcc.dg/torture/pr94947-2.c: Likewise.", "tree": {"sha": "9cd4b4a830c3c81606f2de6d02ebdde1a0f052e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cd4b4a830c3c81606f2de6d02ebdde1a0f052e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9b5db750bc7fbba69fee93564907f7da1bca35f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b5db750bc7fbba69fee93564907f7da1bca35f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9b5db750bc7fbba69fee93564907f7da1bca35f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b5db750bc7fbba69fee93564907f7da1bca35f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5269b24605b17211f34dd40df2d18ba7a7f481e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5269b24605b17211f34dd40df2d18ba7a7f481e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5269b24605b17211f34dd40df2d18ba7a7f481e2"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "9178e9d14c826642d49c265e999a58a81053be7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b5db750bc7fbba69fee93564907f7da1bca35f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b5db750bc7fbba69fee93564907f7da1bca35f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9b5db750bc7fbba69fee93564907f7da1bca35f", "patch": "@@ -1,3 +1,10 @@\n+2020-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/94947\n+\t* tree-ssa-structalias.c (ipa_pta_execute): Use\n+\tvarpool_node::externally_visible_p ().\n+\t(refered_from_nonlocal_var): Likewise.\n+\n 2020-05-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.c (LTO_PLUGIN_SPEC): Define if not already."}, {"sha": "eb81b0ac433ce21e7d36052901151ff5783e6569", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b5db750bc7fbba69fee93564907f7da1bca35f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b5db750bc7fbba69fee93564907f7da1bca35f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f9b5db750bc7fbba69fee93564907f7da1bca35f", "patch": "@@ -1,3 +1,9 @@\n+2020-05-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/94947\n+\t* gcc.dg/torture/pr94947-1.c: New testcase.\n+\t* gcc.dg/torture/pr94947-2.c: Likewise.\n+\n 2020-05-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/aggr29.adb: New test."}, {"sha": "ab8b488c6fceb1f951af1a8282c4c6bc5c53a9a7", "filename": "gcc/testsuite/gcc.dg/torture/pr94947-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b5db750bc7fbba69fee93564907f7da1bca35f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94947-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b5db750bc7fbba69fee93564907f7da1bca35f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94947-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94947-1.c?ref=f9b5db750bc7fbba69fee93564907f7da1bca35f", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do run } */\n+/* { dg-additional-sources \"pr94947-2.c\" } */\n+/* { dg-additional-options \"-fipa-pta -flto-partition=1to1\" } */\n+\n+extern void abort ();\n+extern void baz ();\n+extern void (*baz_call)();\n+static int *p;\n+\n+static void foo ()\n+{\n+  if (*p != 1)\n+    abort ();\n+}\n+\n+int main()\n+{\n+  int x = 1;\n+  p = &x;\n+  baz_call = foo;\n+  baz ();\n+  return 0;\n+}"}, {"sha": "670dd61c1e90a85d0b42e9785a5ac5ba3a1b1df8", "filename": "gcc/testsuite/gcc.dg/torture/pr94947-2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b5db750bc7fbba69fee93564907f7da1bca35f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94947-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b5db750bc7fbba69fee93564907f7da1bca35f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94947-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94947-2.c?ref=f9b5db750bc7fbba69fee93564907f7da1bca35f", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+\n+void (*baz_call)();\n+void baz ()\n+{\n+  baz_call ();\n+}"}, {"sha": "e9fcafd9b34080a9b959c80a493d4fc1bbf13735", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b5db750bc7fbba69fee93564907f7da1bca35f/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b5db750bc7fbba69fee93564907f7da1bca35f/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=f9b5db750bc7fbba69fee93564907f7da1bca35f", "patch": "@@ -8097,7 +8097,7 @@ refered_from_nonlocal_var (struct varpool_node *node, void *data)\n {\n   bool *nonlocal_p = (bool *)data;\n   *nonlocal_p |= (node->used_from_other_partition\n-\t\t  || node->externally_visible\n+\t\t  || node->externally_visible_p ()\n \t\t  || node->force_output);\n   return false;\n }\n@@ -8187,8 +8187,8 @@ ipa_pta_execute (void)\n \n       /* For the purpose of IPA PTA unit-local globals are not\n          escape points.  */\n-      bool nonlocal_p = (var->used_from_other_partition\n-\t\t\t || var->externally_visible\n+      bool nonlocal_p = (var->externally_visible_p ()\n+\t\t\t || var->used_from_other_partition\n \t\t\t || var->force_output);\n       var->call_for_symbol_and_aliases (refered_from_nonlocal_var,\n \t\t\t\t\t&nonlocal_p, true);"}]}