{"sha": "107d4a0f07c87e7351c35dd4ced25adf63e7fa0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA3ZDRhMGYwN2M4N2U3MzUxYzM1ZGQ0Y2VkMjVhZGY2M2U3ZmEwYg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-11-17T14:29:30Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-11-17T14:29:30Z"}, "message": "rs6000: Fix for altivec-macros.c\n\nThis fixes the altivec-macros.c testcase; we now need to explicitly\nsay \"no column number\" for messages without one.\n\n\ngcc/testsuite/\n\t* gcc.target/powerpc/altivec-macros.c: Include \"-:\" in the messages\n\tmatched for.\n\nFrom-SVN: r254873", "tree": {"sha": "1e35fba22e82dbf1378414c9a008b53fa3aadf20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e35fba22e82dbf1378414c9a008b53fa3aadf20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/107d4a0f07c87e7351c35dd4ced25adf63e7fa0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/107d4a0f07c87e7351c35dd4ced25adf63e7fa0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/107d4a0f07c87e7351c35dd4ced25adf63e7fa0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/107d4a0f07c87e7351c35dd4ced25adf63e7fa0b/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f14419275f3207310a7c1d9e1196ef021def1e24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f14419275f3207310a7c1d9e1196ef021def1e24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f14419275f3207310a7c1d9e1196ef021def1e24"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "d98ba983d4d2be32fa7d4979a050a9bcd0c486d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107d4a0f07c87e7351c35dd4ced25adf63e7fa0b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107d4a0f07c87e7351c35dd4ced25adf63e7fa0b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=107d4a0f07c87e7351c35dd4ced25adf63e7fa0b", "patch": "@@ -1,3 +1,8 @@\n+2017-11-17  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/altivec-macros.c: Include \"-:\" in the messages\n+\tmatched for.\n+\n 2017-11-17  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/83017"}, {"sha": "e5a09308ea60a5ebef638f466b6689f421ef232a", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-macros.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/107d4a0f07c87e7351c35dd4ced25adf63e7fa0b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-macros.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/107d4a0f07c87e7351c35dd4ced25adf63e7fa0b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-macros.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-macros.c?ref=107d4a0f07c87e7351c35dd4ced25adf63e7fa0b", "patch": "@@ -23,45 +23,45 @@ _Pragma (\"__vector\")\n \n #undef __vector\n #define __vector __new_vector\n-/* { dg-message \"location of the previous\"  \"prev __vector defn\"  { target *-*-* } .-1 } */\n+/* { dg-message \"-:location of the previous\"  \"prev __vector defn\"  { target *-*-* } .-1 } */\n \n #undef __pixel\n #define __pixel __new_pixel\n-/* { dg-message \"location of the previous\"  \"prev __pixel defn\"   { target *-*-* } .-1 } */\n+/* { dg-message \"-:location of the previous\"  \"prev __pixel defn\"   { target *-*-* } .-1 } */\n \n #undef __bool\n #define __bool __new_bool\n-/* { dg-message \"location of the previous\"  \"prev __bool defn\"    { target *-*-* } .-1 } */\n+/* { dg-message \"-:location of the previous\"  \"prev __bool defn\"    { target *-*-* } .-1 } */\n \n #undef vector\n #define vector new_vector\n-/* { dg-message \"location of the previous\"  \"prev vector defn\"    { target *-*-* } .-1 } */\n+/* { dg-message \"-:location of the previous\"  \"prev vector defn\"    { target *-*-* } .-1 } */\n \n #undef pixel\n #define pixel new_pixel\n-/* { dg-message \"location of the previous\"  \"prev pixel defn\"     { target *-*-* } .-1 } */\n+/* { dg-message \"-:location of the previous\"  \"prev pixel defn\"     { target *-*-* } .-1 } */\n \n #undef bool\n #define bool new_bool\n-/* { dg-message \"location of the previous\"  \"prev bool defn\"      { target *-*-* } .-1 } */\n+/* { dg-message \"-:location of the previous\"  \"prev bool defn\"      { target *-*-* } .-1 } */\n \n /* Re-definition of \"unconditional\" macros.  */\n /* Warnings should be generated as usual.  */\n \n #define __vector\t__newer_vector\n-/* { dg-warning \"redefined\" \"__vector redefined\"  { target *-*-* } .-1 } */\n+/* { dg-warning \"-:redefined\" \"__vector redefined\"  { target *-*-* } .-1 } */\n \n #define __pixel\t\t__newer_pixel\n-/* { dg-warning \"redefined\" \"__pixel redefined\"   { target *-*-* } .-1 } */\n+/* { dg-warning \"-:redefined\" \"__pixel redefined\"   { target *-*-* } .-1 } */\n \n #define __bool\t\t__newer_bool\n-/* { dg-warning \"redefined\" \"__bool redefined\"    { target *-*-* } .-1 } */\n+/* { dg-warning \"-:redefined\" \"__bool redefined\"    { target *-*-* } .-1 } */\n \n #define vector\t\tnewer_vector\n-/* { dg-warning \"redefined\" \"vector redefined\"    { target *-*-* } .-1 } */\n+/* { dg-warning \"-:redefined\" \"vector redefined\"    { target *-*-* } .-1 } */\n \n #define pixel\t\tnewer_pixel\n-/* { dg-warning \"redefined\" \"pixel redefined\"     { target *-*-* } .-1 } */\n+/* { dg-warning \"-:redefined\" \"pixel redefined\"     { target *-*-* } .-1 } */\n \n #define bool\t\tnewer_bool\n-/* { dg-warning \"redefined\" \"bool redefined\"      { target *-*-* } .-1 } */\n+/* { dg-warning \"-:redefined\" \"bool redefined\"      { target *-*-* } .-1 } */"}]}