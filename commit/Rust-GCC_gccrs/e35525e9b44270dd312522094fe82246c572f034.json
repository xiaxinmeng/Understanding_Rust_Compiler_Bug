{"sha": "e35525e9b44270dd312522094fe82246c572f034", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM1NTI1ZTliNDQyNzBkZDMxMjUyMjA5NGZlODIyNDZjNTcyZjAzNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2011-11-15T19:40:04Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-11-15T19:40:04Z"}, "message": "sse2-cvt-vec.c: New test.\n\n\t* gcc.target/i386/sse2-cvt-vec.c: New test.\n\t* gcc.target/i386/avx-cvt-vec.c: Ditto.\n\t* gcc.target/i386/avx-cvt-2-vec.c: Ditto.\n\nFrom-SVN: r181390", "tree": {"sha": "431c659d8778a2fd98f83a65f489794070243203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/431c659d8778a2fd98f83a65f489794070243203"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e35525e9b44270dd312522094fe82246c572f034", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e35525e9b44270dd312522094fe82246c572f034", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e35525e9b44270dd312522094fe82246c572f034", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e35525e9b44270dd312522094fe82246c572f034/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f41fc8aaaaabd584e4aa7e353a965f8f5568ff9d"}], "stats": {"total": 134, "additions": 133, "deletions": 1}, "files": [{"sha": "5d012c3d75a87db7fb7d956d399b70a30d905c84", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e35525e9b44270dd312522094fe82246c572f034/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e35525e9b44270dd312522094fe82246c572f034/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e35525e9b44270dd312522094fe82246c572f034", "patch": "@@ -1,6 +1,9 @@\n 2011-11-15  Uros Bizjak  <ubizjak@gmail.com>\n \n-\t* gcc.target/i386/avx-floor-sfix-2-vec.c: New test.\n+\t* gcc.target/i386/sse2-cvt-vec.c: New test.\n+\t* gcc.target/i386/avx-cvt-vec.c: Ditto.\n+\t* gcc.target/i386/avx-cvt-2-vec.c: Ditto.\n+\t* gcc.target/i386/avx-floor-sfix-2-vec.c: Ditto.\n \t* gcc.target/i386/avx-ceil-sfix-2-vec.c: Ditto.\n \t* gcc.target/i386/avx-rint-sfix-2-vec.c: Ditto.\n \t* gcc.target/i386/avx-round-sfix-2-vec.c: Ditto."}, {"sha": "0081dcf381212023c9280f78bae15baef94223fb", "filename": "gcc/testsuite/gcc.target/i386/avx-cvt-2-vec.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e35525e9b44270dd312522094fe82246c572f034/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-2-vec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e35525e9b44270dd312522094fe82246c572f034/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-2-vec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-2-vec.c?ref=e35525e9b44270dd312522094fe82246c572f034", "patch": "@@ -0,0 +1,60 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -ftree-vectorize -mavx\" } */\n+/* { dg-require-effective-target avx } */\n+/* { dg-skip-if \"no M_PI\" { vxworks_kernel } } */\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"avx-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST avx_test\n+#endif\n+\n+#include CHECK_H\n+\n+#include <math.h>\n+\n+#define NUM 4\n+\n+static void\n+__attribute__((__target__(\"fpmath=sse\")))\n+init_src (double *src)\n+{\n+  int i, sign = 1;\n+  double f = rand ();\n+\n+  for (i = 0; i < NUM; i++)\n+    {\n+      src[i] = (i + 1) * f * M_PI * sign;\n+      if (i < (NUM / 2))\n+\t{\n+          if ((i % 6) == 0)\n+\t    f = f * src[i];\n+        }\n+      else if (i == (NUM / 2))\n+\tf = rand ();\n+      else if ((i % 6) == 0)\n+\tf = 1 / (f * (i + 1) * src[i] * M_PI * sign);\n+      sign = -sign;\n+    }\n+}\n+\n+static void\n+__attribute__((__target__(\"fpmath=sse\")))\n+TEST (void)\n+{\n+  double a[NUM];\n+  float r[NUM];\n+  int i;\n+\n+  init_src (a);\n+\n+  for (i = 0; i < NUM; i++)\n+    r[i] = (float) a[i];\n+\n+  /* check results:  */\n+  for (i = 0; i < NUM; i++)\n+    if (r[i] != (float) a[i])\n+      abort();\n+}"}, {"sha": "4dcfa39895485522bf49e11cccd4ac8910fa1b1c", "filename": "gcc/testsuite/gcc.target/i386/avx-cvt-vec.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e35525e9b44270dd312522094fe82246c572f034/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-vec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e35525e9b44270dd312522094fe82246c572f034/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-vec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-vec.c?ref=e35525e9b44270dd312522094fe82246c572f034", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -ftree-vectorize -mavx\" } */\n+/* { dg-require-effective-target avx } */\n+/* { dg-skip-if \"no M_PI\" { vxworks_kernel } } */\n+\n+#define CHECK_H \"avx-check.h\"\n+#define TEST avx_test\n+\n+#include \"sse2-cvt-vec.c\""}, {"sha": "8a811a3defe5313a711bacbc469970c8f7ae8a26", "filename": "gcc/testsuite/gcc.target/i386/sse2-cvt-vec.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e35525e9b44270dd312522094fe82246c572f034/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-vec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e35525e9b44270dd312522094fe82246c572f034/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-vec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-vec.c?ref=e35525e9b44270dd312522094fe82246c572f034", "patch": "@@ -0,0 +1,60 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ffast-math -ftree-vectorize -msse2\" } */\n+/* { dg-require-effective-target sse2 } */\n+/* { dg-skip-if \"no M_PI\" { vxworks_kernel } } */\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"sse2-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST sse2_test\n+#endif\n+\n+#include CHECK_H\n+\n+#include <math.h>\n+\n+#define NUM 64\n+\n+static void\n+__attribute__((__target__(\"fpmath=sse\")))\n+init_src (double *src)\n+{\n+  int i, sign = 1;\n+  double f = rand ();\n+\n+  for (i = 0; i < NUM; i++)\n+    {\n+      src[i] = (i + 1) * f * M_PI * sign;\n+      if (i < (NUM / 2))\n+\t{\n+          if ((i % 6) == 0)\n+\t    f = f * src[i];\n+        }\n+      else if (i == (NUM / 2))\n+\tf = rand ();\n+      else if ((i % 6) == 0)\n+\tf = 1 / (f * (i + 1) * src[i] * M_PI * sign);\n+      sign = -sign;\n+    }\n+}\n+\n+static void\n+__attribute__((__target__(\"fpmath=sse\")))\n+TEST (void)\n+{\n+  double a[NUM];\n+  float r[NUM];\n+  int i;\n+\n+  init_src (a);\n+\n+  for (i = 0; i < NUM; i++)\n+    r[i] = (float) a[i];\n+\n+  /* check results:  */\n+  for (i = 0; i < NUM; i++)\n+    if (r[i] != (float) a[i])\n+      abort();\n+}"}]}