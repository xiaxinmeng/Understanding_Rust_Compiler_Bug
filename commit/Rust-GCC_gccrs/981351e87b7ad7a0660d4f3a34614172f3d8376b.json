{"sha": "981351e87b7ad7a0660d4f3a34614172f3d8376b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgxMzUxZTg3YjdhZDdhMDY2MGQ0ZjNhMzQ2MTQxNzJmM2Q4Mzc2Yg==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-07-01T14:49:27Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-07-03T21:49:54Z"}, "message": "testsuite: Disable BTF and CTF testsuite on AIX.\n\n\tCTF utilizes DWARF sections, but it is a distinct debugging\n\tformat.  The CTF support in GCC is not implemented as a\n\tseparate debugging format.  AIX supports DWARF but not CTF\n\tsection.\n\n\tThe GCC testsuite test for target support of a debugging format\n\tchecks if GCC itself emits an error message, not if the\n\tdebugging output compiles correctly.  Because CTF is not\n\ta distinct debugging format, GCC does not distinguish support\n\tfor targets and does not have the ability to produce an error\n\tmessage.\n\n\tThis patch skips the CTF and BTF debug directories, and\n\texplicitly reports that AIX doesn't support CTF.  Currently the\n        dejagnu code to skip multiple debugging levels for CTF does\n        not ensure that CTF is a supported debugging format. The patch\n\talso shifts the CTF options logic to within the test that CTF\n\tdebug format is supported.\n\nBootstrapped on powerpc-ibm-aix7.2.3.0 and powerpc64le-linux.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/debug/btf/btf.exp: Skip on AIX.\n\t* gcc.dg/debug/ctf/ctf.exp: Skip on AIX.\n\t* lib/gcc-dg.exp (gcc-dg-target-supports-debug-format): AIX\n\tdoesn't support CTF.\n\t(gcc-dg-debug-runtest): Move CTF support within\n\ttarget support format test.", "tree": {"sha": "0054f2d47920faacbe76b2e1d53f5a87554d3ff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0054f2d47920faacbe76b2e1d53f5a87554d3ff3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/981351e87b7ad7a0660d4f3a34614172f3d8376b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/981351e87b7ad7a0660d4f3a34614172f3d8376b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/981351e87b7ad7a0660d4f3a34614172f3d8376b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/981351e87b7ad7a0660d4f3a34614172f3d8376b/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52c3fdf3e4780f75297515d3c2a3dae9b36586ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52c3fdf3e4780f75297515d3c2a3dae9b36586ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52c3fdf3e4780f75297515d3c2a3dae9b36586ba"}], "stats": {"total": 55, "additions": 33, "deletions": 22}, "files": [{"sha": "e1735158666e35aa864384f21fb35d914bd528f1", "filename": "gcc/testsuite/gcc.dg/debug/btf/btf.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/981351e87b7ad7a0660d4f3a34614172f3d8376b/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fbtf%2Fbtf.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/981351e87b7ad7a0660d4f3a34614172f3d8376b/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fbtf%2Fbtf.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fbtf%2Fbtf.exp?ref=981351e87b7ad7a0660d4f3a34614172f3d8376b", "patch": "@@ -24,6 +24,11 @@ if { [istarget nvptx-*-*] } {\n     return\n }\n \n+if { [istarget \"powerpc-ibm-aix*\"] } {\n+    set torture_execute_xfail \"powerpc-ibm-aix*\"\n+    return\n+}\n+\n # If a testcase doesn't have special options, use these.\n global DEFAULT_CFLAGS\n if ![info exists DEFAULT_CFLAGS] then {"}, {"sha": "0b650ed74065a13e469d99cabff9bc51449fa2dc", "filename": "gcc/testsuite/gcc.dg/debug/ctf/ctf.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/981351e87b7ad7a0660d4f3a34614172f3d8376b/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fctf%2Fctf.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/981351e87b7ad7a0660d4f3a34614172f3d8376b/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fctf%2Fctf.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fctf%2Fctf.exp?ref=981351e87b7ad7a0660d4f3a34614172f3d8376b", "patch": "@@ -24,6 +24,11 @@ if { [istarget nvptx-*-*] } {\n     return\n }\n \n+if { [istarget \"powerpc-ibm-aix*\"] } {\n+    set torture_execute_xfail \"powerpc-ibm-aix*\"\n+    return\n+}\n+\n # If a testcase doesn't have special options, use these.\n global DEFAULT_CFLAGS\n if ![info exists DEFAULT_CFLAGS] then {"}, {"sha": "81f4bb2ff7934ae753541fdf8b0a2de8f33b2c70", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/981351e87b7ad7a0660d4f3a34614172f3d8376b/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/981351e87b7ad7a0660d4f3a34614172f3d8376b/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=981351e87b7ad7a0660d4f3a34614172f3d8376b", "patch": "@@ -641,6 +641,7 @@ proc gcc-dg-frontend-supports-ctf { target_compile trivial } {\n proc gcc-dg-target-supports-debug-format { target_compile trivial type } {\n     global srcdir subdir\n \n+    if {$type == \"-gctf\" && [istarget *-*-aix*]} { return 0 }\n     set comp_output [$target_compile \\\n \t    \"$srcdir/$subdir/$trivial\" \"trivial.S\" assembly \\\n \t    \"additional_flags=$type\"]\n@@ -656,29 +657,29 @@ proc gcc-dg-debug-runtest { target_compile trivial opt_opts testcases } {\n     if ![info exists DEBUG_TORTURE_OPTIONS] {\n \tset DEBUG_TORTURE_OPTIONS \"\"\n \tforeach type {-gctf -gdwarf-2 -gstabs -gstabs+ -gxcoff -gxcoff+} {\n-\t    if { $type == \"-gctf\" } {\n-\t\tif [expr [gcc-dg-frontend-supports-ctf \\\n-\t\t\t  $target_compile $trivial]] {\n-\t\t    # At this time, running tests with various opt levels or\n-\t\t    # ctf debug info levels does not add value.\n-\t\t    lappend DEBUG_TORTURE_OPTIONS  [list \"${type}\"]\n+\t    if [expr [gcc-dg-target-supports-debug-format \\\n+\t\t      $target_compile $trivial $type]] {\n+\t\tif { $type == \"-gctf\" } {\n+\t\t    if [expr [gcc-dg-frontend-supports-ctf \\\n+\t\t\t      $target_compile $trivial]] {\n+\t\t\t# At this time, running tests with various opt levels or\n+\t\t\t# ctf debug info levels does not add value.\n+\t\t\tlappend DEBUG_TORTURE_OPTIONS  [list \"${type}\"]\n+\t\t    }\n+\t\t    continue\n \t\t}\n-\t    } else {\n-\t\tif [expr [gcc-dg-target-supports-debug-format \\\n-\t\t\t  $target_compile $trivial $type]] {\n-\t\t    foreach level {1 \"\" 3} {\n-\t\t\tif { ($type == \"-gdwarf-2\") && ($level != \"\") } {\n-\t\t\t    lappend DEBUG_TORTURE_OPTIONS [list \"${type}\" \"-g${level}\"]\n-\t\t\t    foreach opt $opt_opts {\n-\t\t\t\tlappend DEBUG_TORTURE_OPTIONS \\\n-\t\t\t\t\t[list \"${type}\" \"-g${level}\" \"$opt\" ]\n-\t\t\t    }\n-\t\t\t} else {\n-\t\t\t    lappend DEBUG_TORTURE_OPTIONS [list \"${type}${level}\"]\n-\t\t\t    foreach opt $opt_opts {\n-\t\t\t\tlappend DEBUG_TORTURE_OPTIONS \\\n-\t\t\t\t\t[list \"${type}${level}\" \"$opt\" ]\n-\t\t\t    }\n+\t\tforeach level {1 \"\" 3} {\n+\t\t    if { ($type == \"-gdwarf-2\") && ($level != \"\") } {\n+\t\t\tlappend DEBUG_TORTURE_OPTIONS [list \"${type}\" \"-g${level}\"]\n+\t\t\tforeach opt $opt_opts {\n+\t\t\t    lappend DEBUG_TORTURE_OPTIONS \\\n+\t\t\t\t    [list \"${type}\" \"-g${level}\" \"$opt\" ]\n+\t\t\t}\n+\t\t    } else {\n+\t\t\tlappend DEBUG_TORTURE_OPTIONS [list \"${type}${level}\"]\n+\t\t\tforeach opt $opt_opts {\n+\t\t\t    lappend DEBUG_TORTURE_OPTIONS \\\n+\t\t\t\t    [list \"${type}${level}\" \"$opt\" ]\n \t\t\t}\n \t\t    }\n \t\t}"}]}