{"sha": "aa3a12d66e691508961992aaba0d13914c274afe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEzYTEyZDY2ZTY5MTUwODk2MTk5MmFhYmEwZDEzOTE0YzI3NGFmZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-05-06T17:44:15Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-05-06T17:44:15Z"}, "message": "emit-rtl.c (init_derived_machine_modes): New functionm, split out from...\n\ngcc/\n\t* emit-rtl.c (init_derived_machine_modes): New functionm, split\n\tout from...\n\t(init_emit_once): ...here.\n\t* rtl.h (init_derived_machine_modes): Declare.\n\t* toplev.c (do_compile): Call it even if no_backend.\n\nFrom-SVN: r210118", "tree": {"sha": "405677cb108c46f727cf1f1bb6116433f35f3e44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/405677cb108c46f727cf1f1bb6116433f35f3e44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa3a12d66e691508961992aaba0d13914c274afe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa3a12d66e691508961992aaba0d13914c274afe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa3a12d66e691508961992aaba0d13914c274afe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa3a12d66e691508961992aaba0d13914c274afe/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d60af086712da018dbdf2a31b0fa6513ccc4487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d60af086712da018dbdf2a31b0fa6513ccc4487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d60af086712da018dbdf2a31b0fa6513ccc4487"}], "stats": {"total": 66, "additions": 36, "deletions": 30}, "files": [{"sha": "ac74e45aad53433be9138d60be03de1affbbbca8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa3a12d66e691508961992aaba0d13914c274afe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa3a12d66e691508961992aaba0d13914c274afe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa3a12d66e691508961992aaba0d13914c274afe", "patch": "@@ -1,3 +1,11 @@\n+2014-05-06  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* emit-rtl.c (init_derived_machine_modes): New functionm, split\n+\tout from...\n+\t(init_emit_once): ...here.\n+\t* rtl.h (init_derived_machine_modes): Declare.\n+\t* toplev.c (do_compile): Call it even if no_backend.\n+\n 2014-05-06  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \t    Mike Stump  <mikestump@comcast.net>\n \t    Richard Sandiford  <rdsandiford@googlemail.com>"}, {"sha": "1eacb8f6ac64f428991e411ee7dea36d85821e84", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 26, "deletions": 30, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa3a12d66e691508961992aaba0d13914c274afe/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa3a12d66e691508961992aaba0d13914c274afe/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=aa3a12d66e691508961992aaba0d13914c274afe", "patch": "@@ -5720,6 +5720,30 @@ init_emit_regs (void)\n     }\n }\n \n+/* Initialize global machine_mode variables.  */\n+\n+void\n+init_derived_machine_modes (void)\n+{\n+  byte_mode = VOIDmode;\n+  word_mode = VOIDmode;\n+\n+  for (enum machine_mode mode = GET_CLASS_NARROWEST_MODE (MODE_INT);\n+       mode != VOIDmode;\n+       mode = GET_MODE_WIDER_MODE (mode))\n+    {\n+      if (GET_MODE_BITSIZE (mode) == BITS_PER_UNIT\n+\t  && byte_mode == VOIDmode)\n+\tbyte_mode = mode;\n+\n+      if (GET_MODE_BITSIZE (mode) == BITS_PER_WORD\n+\t  && word_mode == VOIDmode)\n+\tword_mode = mode;\n+    }\n+\n+  ptr_mode = mode_for_size (POINTER_SIZE, GET_MODE_CLASS (Pmode), 0);\n+}\n+\n /* Create some permanent unique rtl objects shared between all functions.  */\n \n void\n@@ -5747,36 +5771,6 @@ init_emit_once (void)\n   reg_attrs_htab = htab_create_ggc (37, reg_attrs_htab_hash,\n \t\t\t\t    reg_attrs_htab_eq, NULL);\n \n-  /* Compute the word and byte modes.  */\n-\n-  byte_mode = VOIDmode;\n-  word_mode = VOIDmode;\n-  double_mode = VOIDmode;\n-\n-  for (mode = GET_CLASS_NARROWEST_MODE (MODE_INT);\n-       mode != VOIDmode;\n-       mode = GET_MODE_WIDER_MODE (mode))\n-    {\n-      if (GET_MODE_BITSIZE (mode) == BITS_PER_UNIT\n-\t  && byte_mode == VOIDmode)\n-\tbyte_mode = mode;\n-\n-      if (GET_MODE_BITSIZE (mode) == BITS_PER_WORD\n-\t  && word_mode == VOIDmode)\n-\tword_mode = mode;\n-    }\n-\n-  for (mode = GET_CLASS_NARROWEST_MODE (MODE_FLOAT);\n-       mode != VOIDmode;\n-       mode = GET_MODE_WIDER_MODE (mode))\n-    {\n-      if (GET_MODE_BITSIZE (mode) == DOUBLE_TYPE_SIZE\n-\t  && double_mode == VOIDmode)\n-\tdouble_mode = mode;\n-    }\n-\n-  ptr_mode = mode_for_size (POINTER_SIZE, GET_MODE_CLASS (Pmode), 0);\n-\n #ifdef INIT_EXPANDERS\n   /* This is to initialize {init|mark|free}_machine_status before the first\n      call to push_function_context_to.  This is needed by the Chill front\n@@ -5799,6 +5793,8 @@ init_emit_once (void)\n   else\n     const_true_rtx = gen_rtx_CONST_INT (VOIDmode, STORE_FLAG_VALUE);\n \n+  double_mode = mode_for_size (DOUBLE_TYPE_SIZE, MODE_FLOAT, 0);\n+\n   real_from_integer (&dconst0, double_mode, 0, SIGNED);\n   real_from_integer (&dconst1, double_mode, 1, SIGNED);\n   real_from_integer (&dconst2, double_mode, 2, SIGNED);"}, {"sha": "dbf24f328b3c5e9bb6f1ada3db0183fed2a2e616", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa3a12d66e691508961992aaba0d13914c274afe/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa3a12d66e691508961992aaba0d13914c274afe/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=aa3a12d66e691508961992aaba0d13914c274afe", "patch": "@@ -2734,6 +2734,7 @@ extern int get_max_insn_count (void);\n extern int in_sequence_p (void);\n extern void init_emit (void);\n extern void init_emit_regs (void);\n+extern void init_derived_machine_modes (void);\n extern void init_emit_once (void);\n extern void push_topmost_sequence (void);\n extern void pop_topmost_sequence (void);"}, {"sha": "4c334bd451a98d92f3e7f6343b73594f9b822f24", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa3a12d66e691508961992aaba0d13914c274afe/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa3a12d66e691508961992aaba0d13914c274afe/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=aa3a12d66e691508961992aaba0d13914c274afe", "patch": "@@ -1891,6 +1891,7 @@ do_compile (void)\n \t predefined macros, such as __LDBL_MAX__, for targets using non\n \t default FP formats.  */\n       init_adjust_machine_modes ();\n+      init_derived_machine_modes ();\n \n       /* Set up the back-end if requested.  */\n       if (!no_backend)"}]}