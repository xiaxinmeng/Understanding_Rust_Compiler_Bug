{"sha": "77416b3d7e5690f212e2771a76c2485a5f381b6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc0MTZiM2Q3ZTU2OTBmMjEyZTI3NzFhNzZjMjQ4NWE1ZjM4MWI2ZQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2001-08-09T11:31:23Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-08-09T11:31:23Z"}, "message": "mips.c (mips_legitimate_address_p): Check for CONST_INT in last patch.\n\n        * config/mips/mips.c\t(mips_legitimate_address_p): Check for\n        CONST_INT in last patch.\n\nFrom-SVN: r44736", "tree": {"sha": "3f46753cf94af6c52c98f30a93a4f62a95984f16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f46753cf94af6c52c98f30a93a4f62a95984f16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77416b3d7e5690f212e2771a76c2485a5f381b6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77416b3d7e5690f212e2771a76c2485a5f381b6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77416b3d7e5690f212e2771a76c2485a5f381b6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77416b3d7e5690f212e2771a76c2485a5f381b6e/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86557ec241a5e51c7e5869b82a0ba5b6e9397abc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86557ec241a5e51c7e5869b82a0ba5b6e9397abc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86557ec241a5e51c7e5869b82a0ba5b6e9397abc"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "cc0043e47747665654e9e2eb399f4c5c62c5c97a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77416b3d7e5690f212e2771a76c2485a5f381b6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77416b3d7e5690f212e2771a76c2485a5f381b6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77416b3d7e5690f212e2771a76c2485a5f381b6e", "patch": "@@ -1,3 +1,8 @@\n+2001-08-09  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/mips/mips.c\t(mips_legitimate_address_p): Check for\n+        CONST_INT in last patch.\t\n+\n 2001-08-08  Anthony Green  <green@redhat.com>\n \n \t* java/class.c (emit_register_classes): Use assemble_jcr if"}, {"sha": "879da3da73ed7d42eeccc35e09f1aa2a37596dd6", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77416b3d7e5690f212e2771a76c2485a5f381b6e/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77416b3d7e5690f212e2771a76c2485a5f381b6e/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=77416b3d7e5690f212e2771a76c2485a5f381b6e", "patch": "@@ -1368,8 +1368,9 @@ mips_legitimate_address_p (mode, xinsn, strict)\n \t\t in \"la x, foo(x)\" yielding the wrong result for:\n \t         (set (blah:DI) (plus x y)).  */\n \t      && (!TARGET_64BIT\n-\t\t  || trunc_int_for_mode (INTVAL (xplus1),\n-\t\t\t\t\t SImode) == INTVAL (xplus1))\n+\t\t  || (code1 == CONST_INT\n+\t\t      && trunc_int_for_mode (INTVAL (xplus1), \n+\t\t\t\t\t     SImode) == INTVAL (xplus1)))\n \t      && !TARGET_MIPS16)\n \t    return 1;\n \t}"}]}