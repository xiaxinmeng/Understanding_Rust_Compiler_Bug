{"sha": "62aae315f680f2205d474ff3ebcb1756a707f715", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJhYWUzMTVmNjgwZjIyMDVkNDc0ZmYzZWJjYjE3NTZhNzA3ZjcxNQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-05-26T13:05:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-08T13:34:19Z"}, "message": "[Ada] Prevent infinite recursion when there is no expected unit\n\ngcc/ada/\n\n\t* par-load.adb (Load): Don't remove unit, but flag it as\n\terroneous and return.", "tree": {"sha": "02e50be9ce957e8d58b1709e43e9ee1ad100a6ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02e50be9ce957e8d58b1709e43e9ee1ad100a6ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62aae315f680f2205d474ff3ebcb1756a707f715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62aae315f680f2205d474ff3ebcb1756a707f715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62aae315f680f2205d474ff3ebcb1756a707f715", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62aae315f680f2205d474ff3ebcb1756a707f715/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6105ebb782756b449ee2ebec01bd4dd2c256ff17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6105ebb782756b449ee2ebec01bd4dd2c256ff17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6105ebb782756b449ee2ebec01bd4dd2c256ff17"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "6079fa477f6bd726ae4bc3258d6c470a2ca83fcc", "filename": "gcc/ada/par-load.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62aae315f680f2205d474ff3ebcb1756a707f715/gcc%2Fada%2Fpar-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62aae315f680f2205d474ff3ebcb1756a707f715/gcc%2Fada%2Fpar-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-load.adb?ref=62aae315f680f2205d474ff3ebcb1756a707f715", "patch": "@@ -234,9 +234,10 @@ begin\n          Error_Msg (\"\\\\found unit $!\", Loc);\n       end if;\n \n-      --  In both cases, remove the unit so that it is out of the way later\n+      --  In both cases, flag the fatal error and give up\n \n-      Remove_Unit (Cur_Unum);\n+      Set_Fatal_Error (Cur_Unum, Error_Detected);\n+      return;\n    end if;\n \n    --  If current unit is a body, load its corresponding spec"}]}