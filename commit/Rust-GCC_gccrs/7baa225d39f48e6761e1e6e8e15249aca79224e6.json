{"sha": "7baa225d39f48e6761e1e6e8e15249aca79224e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JhYTIyNWQzOWY0OGU2NzYxZTFlNmU4ZTE1MjQ5YWNhNzkyMjRlNg==", "commit": {"author": {"name": "Tejas Belagod", "email": "tejas.belagod@arm.com", "date": "2013-12-19T15:04:19Z"}, "committer": {"name": "Tejas Belagod", "email": "belagod@gcc.gnu.org", "date": "2013-12-19T15:04:19Z"}, "message": "Implement support for AArch64 Crypto PMULL.64.\n\ngcc/\n\t* config/aarch64/aarch64-builtins.c (aarch64_init_simd_builtins):\n\tDefine builtin types for poly64_t poly128_t.\n\t(TYPES_BINOPP, aarch64_types_binopp_qualifiers): New.\n\t* aarch64/aarch64-simd-builtins.def: Update builtins table.\n\t* config/aarch64/aarch64-simd.md (aarch64_crypto_pmulldi,\n\taarch64_crypto_pmullv2di): New.\n\t* config/aarch64/aarch64.c (aarch64_simd_mangle_map): Update table for\n\tpoly64x2_t mangler.\n\t* config/aarch64/arm_neon.h (poly64x2_t, poly64_t, poly128_t): Define.\n\t(vmull_p64, vmull_high_p64): New.\n\t* config/aarch64/iterators.md (UNSPEC_PMULL<2>): New.\n\ntestsuite/\n\n\t* gcc.target/aarch64/pmull_1.c: New.\n\nFrom-SVN: r206120", "tree": {"sha": "c7239247854dedb3af283c2ef0df8afb13b3f583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7239247854dedb3af283c2ef0df8afb13b3f583"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7baa225d39f48e6761e1e6e8e15249aca79224e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7baa225d39f48e6761e1e6e8e15249aca79224e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7baa225d39f48e6761e1e6e8e15249aca79224e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7baa225d39f48e6761e1e6e8e15249aca79224e6/comments", "author": {"login": "tejas-belagod-arm", "id": 92718852, "node_id": "U_kgDOBYbHBA", "avatar_url": "https://avatars.githubusercontent.com/u/92718852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejas-belagod-arm", "html_url": "https://github.com/tejas-belagod-arm", "followers_url": "https://api.github.com/users/tejas-belagod-arm/followers", "following_url": "https://api.github.com/users/tejas-belagod-arm/following{/other_user}", "gists_url": "https://api.github.com/users/tejas-belagod-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejas-belagod-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejas-belagod-arm/subscriptions", "organizations_url": "https://api.github.com/users/tejas-belagod-arm/orgs", "repos_url": "https://api.github.com/users/tejas-belagod-arm/repos", "events_url": "https://api.github.com/users/tejas-belagod-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/tejas-belagod-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9cb0a44c1e940f4c577b67e504c3a8aacae6a3e"}], "stats": {"total": 98, "additions": 98, "deletions": 0}, "files": [{"sha": "47dfb73660b6dc3d88989f5cf794e20755ab3c87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7baa225d39f48e6761e1e6e8e15249aca79224e6", "patch": "@@ -1,3 +1,17 @@\n+o2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* config/aarch64/aarch64-builtins.c (aarch64_init_simd_builtins):\n+\tDefine builtin types for poly64_t poly128_t.\n+\t(TYPES_BINOPP, aarch64_types_binopp_qualifiers): New.\n+\t* aarch64/aarch64-simd-builtins.def: Update builtins table.\n+\t* config/aarch64/aarch64-simd.md (aarch64_crypto_pmulldi,\n+\taarch64_crypto_pmullv2di): New.\n+\t* config/aarch64/aarch64.c (aarch64_simd_mangle_map): Update table for\n+\tpoly64x2_t mangler.\n+\t* config/aarch64/arm_neon.h (poly64x2_t, poly64_t, poly128_t): Define.\n+\t(vmull_p64, vmull_high_p64): New.\n+\t* config/aarch64/iterators.md (UNSPEC_PMULL<2>): New.\n+\n 2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* config/aarch64/aarch64-simd-builtins.def: Update builtins table."}, {"sha": "439c3f4d8202496d24d3fda5ac54c3bddee4e79e", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=7baa225d39f48e6761e1e6e8e15249aca79224e6", "patch": "@@ -156,6 +156,11 @@ static enum aarch64_type_qualifiers\n aarch64_types_binopu_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_unsigned, qualifier_unsigned, qualifier_unsigned };\n #define TYPES_BINOPU (aarch64_types_binopu_qualifiers)\n+static enum aarch64_type_qualifiers\n+aarch64_types_binopp_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n+  = { qualifier_poly, qualifier_poly, qualifier_poly };\n+#define TYPES_BINOPP (aarch64_types_binopp_qualifiers)\n+\n static enum aarch64_type_qualifiers\n aarch64_types_ternop_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n   = { qualifier_none, qualifier_none, qualifier_none, qualifier_none };\n@@ -574,6 +579,8 @@ aarch64_init_simd_builtins (void)\n   /* Poly scalar type nodes.  */\n   tree aarch64_simd_polyQI_type_node = aarch64_build_poly_type (QImode);\n   tree aarch64_simd_polyHI_type_node = aarch64_build_poly_type (HImode);\n+  tree aarch64_simd_polyDI_type_node = aarch64_build_poly_type (DImode);\n+  tree aarch64_simd_polyTI_type_node = aarch64_build_poly_type (TImode);\n \n   /* Float type nodes.  */\n   tree aarch64_simd_float_type_node = aarch64_build_signed_type (SFmode);\n@@ -598,6 +605,10 @@ aarch64_init_simd_builtins (void)\n \t\t\t\t\t     \"__builtin_aarch64_simd_poly8\");\n   (*lang_hooks.types.register_builtin_type) (aarch64_simd_polyHI_type_node,\n \t\t\t\t\t     \"__builtin_aarch64_simd_poly16\");\n+  (*lang_hooks.types.register_builtin_type) (aarch64_simd_polyDI_type_node,\n+\t\t\t\t\t     \"__builtin_aarch64_simd_poly64\");\n+  (*lang_hooks.types.register_builtin_type) (aarch64_simd_polyTI_type_node,\n+\t\t\t\t\t     \"__builtin_aarch64_simd_poly128\");\n   (*lang_hooks.types.register_builtin_type) (aarch64_simd_intTI_type_node,\n \t\t\t\t\t     \"__builtin_aarch64_simd_ti\");\n   (*lang_hooks.types.register_builtin_type) (aarch64_simd_intEI_type_node,"}, {"sha": "705d33ac6c3255d6155ef08818cd2023d36f3ae4", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=7baa225d39f48e6761e1e6e8e15249aca79224e6", "patch": "@@ -386,3 +386,7 @@\n   VAR1 (TERNOPU, crypto_sha256h2, 0, v4si)\n   VAR1 (BINOPU, crypto_sha256su0, 0, v4si)\n   VAR1 (TERNOPU, crypto_sha256su1, 0, v4si)\n+\n+  /* Implemented by aarch64_crypto_pmull<mode>.  */\n+  VAR1 (BINOPP, crypto_pmull, 0, di)\n+  VAR1 (BINOPP, crypto_pmull, 0, v2di)"}, {"sha": "534575928007fb47cf901153920e1995324dbe02", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=7baa225d39f48e6761e1e6e8e15249aca79224e6", "patch": "@@ -4173,3 +4173,25 @@\n   \"sha256su1\\\\t%0.4s, %2.4s, %3.4s\"\n   [(set_attr \"type\" \"crypto_sha256_slow\")]\n )\n+\n+;; pmull\n+\n+(define_insn \"aarch64_crypto_pmulldi\"\n+  [(set (match_operand:TI 0 \"register_operand\" \"=w\")\n+        (unspec:TI  [(match_operand:DI 1 \"register_operand\" \"w\")\n+\t\t     (match_operand:DI 2 \"register_operand\" \"w\")]\n+\t\t    UNSPEC_PMULL))]\n+ \"TARGET_SIMD && TARGET_CRYPTO\"\n+ \"pmull\\\\t%0.1q, %1.1d, %2.1d\"\n+  [(set_attr \"type\" \"neon_mul_d_long\")]\n+)\n+\n+(define_insn \"aarch64_crypto_pmullv2di\"\n+ [(set (match_operand:TI 0 \"register_operand\" \"=w\")\n+       (unspec:TI [(match_operand:V2DI 1 \"register_operand\" \"w\")\n+\t\t   (match_operand:V2DI 2 \"register_operand\" \"w\")]\n+\t\t  UNSPEC_PMULL2))]\n+  \"TARGET_SIMD && TARGET_CRYPTO\"\n+  \"pmull2\\\\t%0.1q, %1.2d, %2.2d\"\n+  [(set_attr \"type\" \"neon_mul_d_long\")]\n+)"}, {"sha": "3d32ea5ee912c36d80a64ce2e5f0bb11d583721e", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=7baa225d39f48e6761e1e6e8e15249aca79224e6", "patch": "@@ -6387,6 +6387,7 @@ static aarch64_simd_mangle_map_entry aarch64_simd_mangle_map[] = {\n   { V2DFmode,  \"__builtin_aarch64_simd_df\",     \"13__Float64x2_t\" },\n   { V16QImode, \"__builtin_aarch64_simd_poly8\",  \"12__Poly8x16_t\" },\n   { V8HImode,  \"__builtin_aarch64_simd_poly16\", \"12__Poly16x8_t\" },\n+  { V2DImode,  \"__builtin_aarch64_simd_poly64\", \"12__Poly64x2_t\" },\n   { VOIDmode, NULL, NULL }\n };\n "}, {"sha": "e33a684aa27687658205c1592c75f69dc1c2a8cc", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=7baa225d39f48e6761e1e6e8e15249aca79224e6", "patch": "@@ -75,6 +75,8 @@ typedef __builtin_aarch64_simd_poly8 poly8x16_t\n   __attribute__ ((__vector_size__ (16)));\n typedef __builtin_aarch64_simd_poly16 poly16x8_t\n   __attribute__ ((__vector_size__ (16)));\n+typedef __builtin_aarch64_simd_poly64 poly64x2_t\n+  __attribute__ ((__vector_size__ (16)));\n typedef __builtin_aarch64_simd_uqi uint8x16_t\n   __attribute__ ((__vector_size__ (16)));\n typedef __builtin_aarch64_simd_uhi uint16x8_t\n@@ -88,6 +90,8 @@ typedef float float32_t;\n typedef double float64_t;\n typedef __builtin_aarch64_simd_poly8 poly8_t;\n typedef __builtin_aarch64_simd_poly16 poly16_t;\n+typedef __builtin_aarch64_simd_poly64 poly64_t;\n+typedef __builtin_aarch64_simd_poly128 poly128_t;\n \n typedef struct int8x8x2_t\n {\n@@ -23014,6 +23018,19 @@ vsha256su1q_u32 (uint32x4_t tw0_3, uint32x4_t w8_11, uint32x4_t w12_15)\n   return __builtin_aarch64_crypto_sha256su1v4si_uuuu (tw0_3, w8_11, w12_15);\n }\n \n+static __inline poly128_t\n+vmull_p64 (poly64_t a, poly64_t b)\n+{\n+  return\n+    __builtin_aarch64_crypto_pmulldi_ppp (a, b);\n+}\n+\n+static __inline poly128_t\n+vmull_high_p64 (poly64x2_t a, poly64x2_t b)\n+{\n+  return __builtin_aarch64_crypto_pmullv2di_ppp (a, b);\n+}\n+\n #endif\n \n /* vshl */"}, {"sha": "c4f95dc4feee7c81cfacc8c253d52a71c9b6898a", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=7baa225d39f48e6761e1e6e8e15249aca79224e6", "patch": "@@ -281,6 +281,8 @@\n     UNSPEC_SHA256H2     ; Used in aarch64-simd.md.\n     UNSPEC_SHA256SU0    ; Used in aarch64-simd.md.\n     UNSPEC_SHA256SU1    ; Used in aarch64-simd.md.\n+    UNSPEC_PMULL        ; Used in aarch64-simd.md.\n+    UNSPEC_PMULL2       ; Used in aarch64-simd.md.\n ])\n \n ;; -------------------------------------------------------------------"}, {"sha": "62eaaeb4f5b99a8a35d62d6186afeebe5fc9eb8c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7baa225d39f48e6761e1e6e8e15249aca79224e6", "patch": "@@ -1,3 +1,7 @@\n+2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* gcc.target/aarch64/pmull_1.c: New.\n+\n 2013-12-19  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* gcc.target/aarch64/sha256_1.c: New."}, {"sha": "bccaec1750e1d0d9986bff693e56a760b619fb40", "filename": "gcc/testsuite/gcc.target/aarch64/pmull_1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpmull_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7baa225d39f48e6761e1e6e8e15249aca79224e6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpmull_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpmull_1.c?ref=7baa225d39f48e6761e1e6e8e15249aca79224e6", "patch": "@@ -0,0 +1,23 @@\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-march=armv8-a+crypto\" } */\n+\n+#include \"arm_neon.h\"\n+\n+poly128_t\n+test_vmull_p64 (poly64_t a, poly64_t b)\n+{\n+  return vmull_p64 (a, b);\n+}\n+\n+/* { dg-final { scan-assembler-times \"pmull\\\\tv\" 1 } } */\n+\n+poly128_t\n+test_vmull_high_p64 (poly64x2_t a, poly64x2_t b)\n+{\n+  return vmull_high_p64 (a, b);\n+}\n+\n+/* { dg-final { scan-assembler-times \"pmull2\\\\tv\" 1 } } */\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}