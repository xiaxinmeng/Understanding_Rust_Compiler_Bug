{"sha": "790ca6641b98da56819b89ed36c46179e5897f3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkwY2E2NjQxYjk4ZGE1NjgxOWI4OWVkMzZjNDYxNzllNTg5N2YzZg==", "commit": {"author": {"name": "Kelley Cook", "email": "kelleycook@wideopenwest.com", "date": "2003-10-05T02:49:20Z"}, "committer": {"name": "R. Kelley Cook", "email": "kcook@gcc.gnu.org", "date": "2003-10-05T02:49:20Z"}, "message": "* gengtype-lex.l: Recognize typedef of functions without PARAMS macro.\n\nFrom-SVN: r72106", "tree": {"sha": "f43c04b0e53f0298296fa1a0051cab9bbdeef052", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f43c04b0e53f0298296fa1a0051cab9bbdeef052"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/790ca6641b98da56819b89ed36c46179e5897f3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/790ca6641b98da56819b89ed36c46179e5897f3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/790ca6641b98da56819b89ed36c46179e5897f3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/790ca6641b98da56819b89ed36c46179e5897f3f/comments", "author": null, "committer": null, "parents": [{"sha": "d72c6c58a98050c3897d2409a964a4c2ad134c3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d72c6c58a98050c3897d2409a964a4c2ad134c3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d72c6c58a98050c3897d2409a964a4c2ad134c3d"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "4ec56291cea6a8557d245ba06e25bd1e5f04f50d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/790ca6641b98da56819b89ed36c46179e5897f3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/790ca6641b98da56819b89ed36c46179e5897f3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=790ca6641b98da56819b89ed36c46179e5897f3f", "patch": "@@ -1,3 +1,7 @@\n+2003-10-04  Kelley Cook  <kelleycook@wideopenwest.com>\n+\n+\t* gengtype-lex.l: Recognize typedef of functions without PARAMS macro.\n+\n 2003-10-04  Nathanael Nerode  <neroden@gcc.gnu.org>\n         \n \t* config/v850/v850-c.c, config/v850/v850-protos.h, config/v850/v850.c:"}, {"sha": "5af585e1d2c5a9a4e77e8604be9e830566e3194d", "filename": "gcc/gengtype-lex.l", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/790ca6641b98da56819b89ed36c46179e5897f3f/gcc%2Fgengtype-lex.l", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/790ca6641b98da56819b89ed36c46179e5897f3f/gcc%2Fgengtype-lex.l", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-lex.l?ref=790ca6641b98da56819b89ed36c46179e5897f3f", "patch": "@@ -132,6 +132,23 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n   do_typedef (xmemdup (namestart, namelen, namelen+1), t, &lexer_line);\n   update_lineno (yytext, yyleng);\n }\n+\n+[^[:alnum:]_]typedef{WS}{ID}{WS}{ID}{WS}\"(\" {\n+  char *namestart;\n+  size_t namelen;\n+  struct type *t;\n+\n+  for (namestart = yytext + yyleng - 2; ISSPACE (*namestart); namestart--)\n+    ;\n+  for (namelen = 1; !ISSPACE (namestart[-namelen]); namelen++)\n+    ;\n+  namestart -= namelen - 1;\n+\n+  t = create_scalar_type (\"function type\", sizeof (\"function type\")-1);\n+  do_typedef (xmemdup (namestart, namelen, namelen+1), t, &lexer_line);\n+  update_lineno (yytext, yyleng);\n+}\n+\n [^[:alnum:]_]typedef{WS}{ID}{WS}?\"(\"{WS}?\"*\"{WS}?{ID}{WS}?\")\"{WS}?PARAMS {\n   char *namestart;\n   size_t namelen;\n@@ -148,6 +165,22 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n   update_lineno (yytext, yyleng);\n }\n \n+[^[:alnum:]_]typedef{WS}{ID}{WS}?\"(\"{WS}?\"*\"{WS}?{ID}{WS}?\")\"{WS}?\"(\" {\n+  char *namestart;\n+  size_t namelen;\n+  struct type *t;\n+\n+  for (namestart = yytext + yyleng - 2; !ISIDNUM (*namestart); namestart--)\n+    ;\n+  for (namelen = 1; ISIDNUM (namestart[-namelen]); namelen++)\n+    ;\n+  namestart -= namelen - 1;\n+\n+  t = create_scalar_type (\"function type\", sizeof (\"function type\")-1);\n+  do_typedef (xmemdup (namestart, namelen, namelen+1), t, &lexer_line);\n+  update_lineno (yytext, yyleng);\n+}\n+\n [^[:alnum:]_](typedef{WS})?(struct|union){WS}{ID}{WS}/\"GTY\" {\n   char *tagstart;\n   size_t taglen;"}]}