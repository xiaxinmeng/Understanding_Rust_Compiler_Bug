{"sha": "900e3ae581fac0fa5fb79b790f4be57501fba319", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAwZTNhZTU4MWZhYzBmYTVmYjc5Yjc5MGY0YmU1NzUwMWZiYTMxOQ==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2008-06-18T08:28:07Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2008-06-18T08:28:07Z"}, "message": "config.gcc (mips64el-st-linux-gnu): Use mips/st.h and mips/t-st.\n\n\t* config.gcc (mips64el-st-linux-gnu): Use mips/st.h and mips/t-st.\n\t* config.host: Use driver-native.o and mips/x-native for mips*-linux*.\n\t* config/mips/linux.h (host_detect_local_cpu): Declare, add to\n\tEXTRA_SPEC_FUNCTIONS.\n\t(MARCH_MTUNE_NATIVE_SPECS, BASE_DRIVER_SELF_SPECS): New macros.\n\t(DRIVER_SELF_SPECS): Adjust.\n\t* config/mips/linux64.h (DRIVER_SELF_SPECS): Update.\n\t* config/mips/st.h, config/mips/t-st: New.\n\t* config/mips/driver-native.c, config/mips/x-native: New.\n\t* doc/invoke.texi (MIPS): Document 'native' value for -march and\n\t-mtune options.\n\nCo-Authored-By: Kazu Hirata <kazu@codesourcery.com>\n\nFrom-SVN: r136888", "tree": {"sha": "08ad1899ff895eecff141825004ddfce771bcfae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08ad1899ff895eecff141825004ddfce771bcfae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/900e3ae581fac0fa5fb79b790f4be57501fba319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/900e3ae581fac0fa5fb79b790f4be57501fba319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/900e3ae581fac0fa5fb79b790f4be57501fba319", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/900e3ae581fac0fa5fb79b790f4be57501fba319/comments", "author": null, "committer": null, "parents": [{"sha": "b51469a5d825a43e376a647f71cbf1da28149ae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b51469a5d825a43e376a647f71cbf1da28149ae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b51469a5d825a43e376a647f71cbf1da28149ae1"}], "stats": {"total": 182, "additions": 178, "deletions": 4}, "files": [{"sha": "3712af4fe221680c4eb650cf7b88d85c505276a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=900e3ae581fac0fa5fb79b790f4be57501fba319", "patch": "@@ -1,3 +1,19 @@\n+2008-06-16  Daniel Jacobowitz  <dan@codesourcery.com>\n+\t    Kazu Hirata  <kazu@codesourcery.com>\n+\t    Maxim Kuvyrkov  <maxim@codesourcery.com\n+\n+\t* config.gcc (mips64el-st-linux-gnu): Use mips/st.h and mips/t-st.\n+\t* config.host: Use driver-native.o and mips/x-native for mips*-linux*.\n+\t* config/mips/linux.h (host_detect_local_cpu): Declare, add to\n+\tEXTRA_SPEC_FUNCTIONS.\n+\t(MARCH_MTUNE_NATIVE_SPECS, BASE_DRIVER_SELF_SPECS): New macros.\n+\t(DRIVER_SELF_SPECS): Adjust.\n+\t* config/mips/linux64.h (DRIVER_SELF_SPECS): Update.\n+\t* config/mips/st.h, config/mips/t-st: New.\n+\t* config/mips/driver-native.c, config/mips/x-native: New.\n+\t* doc/invoke.texi (MIPS): Document 'native' value for -march and\n+\t-mtune options.\n+\n 2008-06-18  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* config/mips/mips.h (ISA_HAS_CONDMOVE): Slice ISA_HAS_FP_CONDMOVE"}, {"sha": "5327abde7f8a75f2a8deb75816880a879c5ae2f0", "filename": "gcc/config.gcc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=900e3ae581fac0fa5fb79b790f4be57501fba319", "patch": "@@ -1523,6 +1523,12 @@ mips64*-*-linux*)\n \ttm_file=\"dbxelf.h elfos.h svr4.h linux.h ${tm_file} mips/linux.h mips/linux64.h\"\n \ttmake_file=\"${tmake_file} mips/t-linux64\"\n \ttm_defines=\"${tm_defines} MIPS_ABI_DEFAULT=ABI_N32\"\n+\tcase ${target} in\n+\t\tmips64el-st-linux-gnu)\n+\t\t\ttm_file=\"${tm_file} mips/st.h\"\n+\t\t\ttmake_file=\"${tmake_file} mips/t-st\"\n+\t\t\t;;\n+\tesac\n \tgnu_ld=yes\n \tgas=yes\n \ttest x$with_llsc != x || with_llsc=yes"}, {"sha": "d6efc6d730bccf3d3e35905c427c0ed0334308a5", "filename": "gcc/config.host", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=900e3ae581fac0fa5fb79b790f4be57501fba319", "patch": "@@ -104,6 +104,14 @@ case ${host} in\n \t;;\n     esac\n     ;;\n+  mips*-*-linux*)\n+    case ${target} in\n+      mips*-*-linux*)\n+\thost_extra_gcc_objs=\"driver-native.o\"\n+\thost_xmake_file=\"${host_xmake_file} mips/x-native\"\n+      ;;\n+    esac\n+    ;;\n esac\n \n case ${host} in"}, {"sha": "22b08939e245c052bd4c29f3f039727aa5f186ed", "filename": "gcc/config/mips/driver-native.c", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Fdriver-native.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Fdriver-native.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fdriver-native.c?ref=900e3ae581fac0fa5fb79b790f4be57501fba319", "patch": "@@ -0,0 +1,73 @@\n+/* Subroutines for the gcc driver.\n+   Copyright (C) 2008 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+\n+/* This will be called by the spec parser in gcc.c when it sees\n+   a %:local_cpu_detect(args) construct.  Currently it will be called\n+   with either \"arch\" or \"tune\" as argument depending on if -march=native\n+   or -mtune=native is to be substituted.\n+\n+   It returns a string containing new command line parameters to be\n+   put at the place of the above two options, depending on what CPU\n+   this is executed.  E.g. \"-march=loongson2f\" on a Loongson 2F for\n+   -march=native.  If the routine can't detect a known processor,\n+   the -march or -mtune option is discarded.\n+\n+   ARGC and ARGV are set depending on the actual arguments given\n+   in the spec.  */\n+const char *\n+host_detect_local_cpu (int argc, const char **argv)\n+{\n+  const char *cpu = NULL;\n+  char buf[128];\n+  FILE *f;\n+  bool arch;\n+\n+  if (argc < 1)\n+    return NULL;\n+\n+  arch = strcmp (argv[0], \"arch\") == 0;\n+  if (!arch && strcmp (argv[0], \"tune\"))\n+    return NULL;\n+\n+  f = fopen (\"/proc/cpuinfo\", \"r\");\n+  if (f == NULL)\n+    return NULL;\n+\n+  while (fgets (buf, sizeof (buf), f) != NULL)\n+    if (strncmp (buf, \"cpu model\", sizeof (\"cpu model\") - 1) == 0)\n+      {\n+\tif (strstr (buf, \"Godson2 V0.2\") != NULL\n+\t    || strstr (buf, \"Loongson-2 V0.2\") != NULL)\n+\t  cpu = \"loongson2e\";\n+\telse if (strstr (buf, \"Godson2 V0.3\") != NULL\n+\t\t || strstr (buf, \"Loongson-2 V0.3\") != NULL)\n+\t  cpu = \"loongson2f\";\n+\tbreak;\n+      }\n+\n+  fclose (f);\n+\n+  if (cpu == NULL)\n+    return NULL;\n+\n+  return concat (\"-m\", argv[0], \"=\", cpu, NULL);\n+}"}, {"sha": "2e7b1028c6eb4cd6d4a9120cba0cec676fdaffe8", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=900e3ae581fac0fa5fb79b790f4be57501fba319", "patch": "@@ -143,9 +143,27 @@ along with GCC; see the file COPYING3.  If not see\n \n #ifdef HAVE_AS_NO_SHARED\n /* Default to -mno-shared for non-PIC.  */\n-#define NO_SHARED_SPECS \\\n+# define NO_SHARED_SPECS \\\n   \"%{mshared|mno-shared|fpic|fPIC|fpie|fPIE:;:-mno-shared}\"\n-#define DRIVER_SELF_SPECS NO_SHARED_SPECS\n #else\n-#define NO_SHARED_SPECS\n+# define NO_SHARED_SPECS \"\"\n #endif\n+\n+/* -march=native handling only makes sense with compiler running on\n+   a MIPS chip.  */\n+#if defined(__mips__)\n+extern const char *host_detect_local_cpu (int argc, const char **argv);\n+# define EXTRA_SPEC_FUNCTIONS \\\n+  { \"local_cpu_detect\", host_detect_local_cpu },\n+\n+# define MARCH_MTUNE_NATIVE_SPECS\t\t\t\t\\\n+  \" %{march=native:%<march=native %:local_cpu_detect(arch)}\"\t\\\n+  \" %{mtune=native:%<mtune=native %:local_cpu_detect(tune)}\"\n+#else\n+# define MARCH_MTUNE_NATIVE_SPECS \"\"\n+#endif\n+\n+#define BASE_DRIVER_SELF_SPECS \\\n+  NO_SHARED_SPECS \\\n+  MARCH_MTUNE_NATIVE_SPECS\n+#define DRIVER_SELF_SPECS BASE_DRIVER_SELF_SPECS"}, {"sha": "5a2c6cefe7cb5e3954f9b904f477badf76f4f879", "filename": "gcc/config/mips/linux64.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux64.h?ref=900e3ae581fac0fa5fb79b790f4be57501fba319", "patch": "@@ -22,7 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n    in order to make the other specs easier to write.  */\n #undef DRIVER_SELF_SPECS\n #define DRIVER_SELF_SPECS \\\n-NO_SHARED_SPECS \\\n+BASE_DRIVER_SELF_SPECS \\\n \" %{!EB:%{!EL:%(endian_spec)}}\" \\\n \" %{!mabi=*: -mabi=n32}\"\n "}, {"sha": "363e797a960ec117316c6c1dfcdd5420952bfb5b", "filename": "gcc/config/mips/st.h", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Fst.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Fst.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fst.h?ref=900e3ae581fac0fa5fb79b790f4be57501fba319", "patch": "@@ -0,0 +1,31 @@\n+/* ST 2e / 2f GNU/Linux Configuration.\n+   Copyright (C) 2008\n+   Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+/* The various C libraries each have their own subdirectory.  */\n+#undef SYSROOT_SUFFIX_SPEC\n+#define SYSROOT_SUFFIX_SPEC\t\t\t\\\n+  \"%{march=loongson2e:/2e ;\t\t\t\\\n+     march=loongson2f:/2f}\"\n+\n+#undef STARTFILE_PREFIX_SPEC\n+#define STARTFILE_PREFIX_SPEC\t\t\t\t\\\n+  \"%{mabi=32: /usr/local/lib/ /lib/ /usr/lib/}\t\t\\\n+   %{mabi=n32: /usr/local/lib32/ /lib32/ /usr/lib32/}\t\\\n+   %{mabi=64: /usr/local/lib64/ /lib64/ /usr/lib64/}\""}, {"sha": "8fa679016df01eefe9fbc9b4004eec03e2f16a50", "filename": "gcc/config/mips/t-st", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Ft-st", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Ft-st", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-st?ref=900e3ae581fac0fa5fb79b790f4be57501fba319", "patch": "@@ -0,0 +1,14 @@\n+MULTILIB_OPTIONS = march=loongson2e/march=loongson2f mabi=n32/mabi=32/mabi=64 \n+MULTILIB_DIRNAMES = 2e 2f lib32 lib lib64\n+\n+MULTILIB_OSDIRNAMES  = march.loongson2e/mabi.n32=../lib32/2e\n+MULTILIB_OSDIRNAMES += march.loongson2e/mabi.32=../lib/2e\n+MULTILIB_OSDIRNAMES += march.loongson2e/mabi.64=../lib64/2e\n+MULTILIB_OSDIRNAMES += march.loongson2f/mabi.n32=../lib32/2f\n+MULTILIB_OSDIRNAMES += march.loongson2f/mabi.32=../lib/2f\n+MULTILIB_OSDIRNAMES += march.loongson2f/mabi.64=../lib64/2f\n+MULTILIB_OSDIRNAMES += mabi.n32=../lib32\n+MULTILIB_OSDIRNAMES += mabi.32=../lib\n+MULTILIB_OSDIRNAMES += mabi.64=../lib64\n+\n+EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o"}, {"sha": "6820e73d94b2159eef84dfcd2f74bedec64b22aa", "filename": "gcc/config/mips/x-native", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Fx-native", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fconfig%2Fmips%2Fx-native", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-native?ref=900e3ae581fac0fa5fb79b790f4be57501fba319", "patch": "@@ -0,0 +1,3 @@\n+driver-native.o : $(srcdir)/config/mips/driver-native.c \\\n+  $(CONFIG_H) $(SYSTEM_H)\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "fd438122f5bc7e79721a26d210b2be78346dd435", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/900e3ae581fac0fa5fb79b790f4be57501fba319/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=900e3ae581fac0fa5fb79b790f4be57501fba319", "patch": "@@ -11972,6 +11972,11 @@ The special value @samp{from-abi} selects the\n most compatible architecture for the selected ABI (that is,\n @samp{mips1} for 32-bit ABIs and @samp{mips3} for 64-bit ABIs)@.\n \n+Native Linux/GNU toolchains also support the value @samp{native},\n+which selects the best architecture option for the host processor.\n+@option{-march=native} has no effect if GCC does not recognize\n+the processor.\n+\n In processor names, a final @samp{000} can be abbreviated as @samp{k}\n (for example, @samp{-march=r2k}).  Prefixes are optional, and\n @samp{vr} may be written @samp{r}."}]}