{"sha": "926d39c3816772acde857a8510480d9b287ef760", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2ZDM5YzM4MTY3NzJhY2RlODU3YTg1MTA0ODBkOWIyODdlZjc2MA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-04-08T07:15:00Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-04-09T07:25:52Z"}, "message": "coroutines: Add cleanups, where required, to statements with captured references.\n\nWhen we promote captured temporaries to local variables, we also\nremove their initializers from the relevant call expression.  This\nmeans that we should recompute the need for a cleanup expression\nonce the set of temporaries that remains becomes known.\n\ngcc/cp/ChangeLog:\n\n2020-04-08  Iain Sandoe  <iain@sandoe.co.uk>\n\t    Jun Ma  <JunMa@linux.alibaba.com>\n\n\t* coroutines.cc (maybe_promote_captured_temps): Add a\n\tcleanup expression, if needed, to any call from which\n\twe promoted temporaries captured by reference.", "tree": {"sha": "d155c3ca3048e6ce560bb21d00b498019be285db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d155c3ca3048e6ce560bb21d00b498019be285db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/926d39c3816772acde857a8510480d9b287ef760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926d39c3816772acde857a8510480d9b287ef760", "html_url": "https://github.com/Rust-GCC/gccrs/commit/926d39c3816772acde857a8510480d9b287ef760", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926d39c3816772acde857a8510480d9b287ef760/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe1837143f1bf1d6b072a3973b00576ee17c30a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe1837143f1bf1d6b072a3973b00576ee17c30a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe1837143f1bf1d6b072a3973b00576ee17c30a9"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "e63f30bf3c1d44dc498178a8fe50a82705f91044", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926d39c3816772acde857a8510480d9b287ef760/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926d39c3816772acde857a8510480d9b287ef760/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=926d39c3816772acde857a8510480d9b287ef760", "patch": "@@ -1,3 +1,10 @@\n+2020-04-08  Iain Sandoe  <iain@sandoe.co.uk>\n+\t    Jun Ma <JunMa@linux.alibaba.com>\n+\n+\t* coroutines.cc (maybe_promote_captured_temps): Add a cleanup\n+\texpression, if needed, to any call from which we promoted\n+\ttemporaries captured by reference.\n+\n 2020-04-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/94507 - ICE-on-invalid with lambda template."}, {"sha": "936be06c33629806a320b45c3676cb8f677b6dd1", "filename": "gcc/cp/coroutines.cc", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926d39c3816772acde857a8510480d9b287ef760/gcc%2Fcp%2Fcoroutines.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926d39c3816772acde857a8510480d9b287ef760/gcc%2Fcp%2Fcoroutines.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcoroutines.cc?ref=926d39c3816772acde857a8510480d9b287ef760", "patch": "@@ -2798,11 +2798,13 @@ maybe_promote_captured_temps (tree *stmt, void *d)\n       location_t sloc = EXPR_LOCATION (*stmt);\n       tree aw_bind\n \t= build3_loc (sloc, BIND_EXPR, void_type_node, NULL, NULL, NULL);\n-      tree aw_statement_current;\n-      if (TREE_CODE (*stmt) == CLEANUP_POINT_EXPR)\n-\taw_statement_current = TREE_OPERAND (*stmt, 0);\n-      else\n-\taw_statement_current = *stmt;\n+\n+      /* Any cleanup point expression might no longer be necessary, since we\n+\t are removing one or more temporaries.  */\n+      tree aw_statement_current = *stmt;\n+      if (TREE_CODE (aw_statement_current) == CLEANUP_POINT_EXPR)\n+\taw_statement_current = TREE_OPERAND (aw_statement_current, 0);\n+\n       /* Collected the scope vars we need move the temps to regular. */\n       tree aw_bind_body = push_stmt_list ();\n       tree varlist = NULL_TREE;\n@@ -2843,8 +2845,12 @@ maybe_promote_captured_temps (tree *stmt, void *d)\n \t  /* Replace all instances of that temp in the original expr.  */\n \t  cp_walk_tree (&aw_statement_current, replace_proxy, &pr, NULL);\n \t}\n-      /* What's left should be the original statement with any temporaries\n-\t broken out.  */\n+\n+      /* What's left should be the original statement with any co_await\n+\t captured temporaries broken out.  Other temporaries might remain\n+\t so see if we need to wrap the revised statement in a cleanup.  */\n+      aw_statement_current =\n+\tmaybe_cleanup_point_expr_void (aw_statement_current);\n       add_stmt (aw_statement_current);\n       BIND_EXPR_BODY (aw_bind) = pop_stmt_list (aw_bind_body);\n       awpts->captured_temps.empty ();"}]}