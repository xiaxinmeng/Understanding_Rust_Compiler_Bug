{"sha": "bd228fecfcb2471f40415f714ccb50278c9f7692", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQyMjhmZWNmY2IyNDcxZjQwNDE1ZjcxNGNjYjUwMjc4YzlmNzY5Mg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2011-01-29T17:33:36Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2011-01-29T17:33:36Z"}, "message": "re PR libfortran/47434 (Wrong field width for NaN with (F0.n) formatting)\n\n2011-01-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/47434\n\t* gfortran.dg/read_infnan_1.f90: Update test.\n\t* gfortran.dg/module_nan.f90: Update test.\n\t* gfortran.dg/char4_iunit_1.f03: Update test.\n\t* gfortran.dg/large_real_kind_1.f90: Update test.\n\t* gfortran.dg/real_const_3.f90: Update test.\n\t* gfortran.fortran-torture/execute/nan_inf_fmt.f90: Update test.\n\nFrom-SVN: r169391", "tree": {"sha": "6bcaa9c0c0d2cb201dffa021359cec6e3db2041e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bcaa9c0c0d2cb201dffa021359cec6e3db2041e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd228fecfcb2471f40415f714ccb50278c9f7692", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd228fecfcb2471f40415f714ccb50278c9f7692", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd228fecfcb2471f40415f714ccb50278c9f7692", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd228fecfcb2471f40415f714ccb50278c9f7692/comments", "author": null, "committer": null, "parents": [{"sha": "6e0576ee50941e967101fc54171e9172d471b73f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e0576ee50941e967101fc54171e9172d471b73f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e0576ee50941e967101fc54171e9172d471b73f"}], "stats": {"total": 43, "additions": 27, "deletions": 16}, "files": [{"sha": "cefa8a7a0d4c2d75a0606ee7e8f22ce697b164f2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd228fecfcb2471f40415f714ccb50278c9f7692", "patch": "@@ -1,3 +1,13 @@\n+2011-01-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/47434\n+\t* gfortran.dg/read_infnan_1.f90: Update test.\n+\t* gfortran.dg/module_nan.f90: Update test.\n+\t* gfortran.dg/char4_iunit_1.f03: Update test.\n+\t* gfortran.dg/large_real_kind_1.f90: Update test.\n+\t* gfortran.dg/real_const_3.f90: Update test.\n+\t* gfortran.fortran-torture/execute/nan_inf_fmt.f90: Update test.\n+\n 2011-01-29  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/47311"}, {"sha": "5b1b285adf218d984dfea6995243972ab5e49ffb", "filename": "gcc/testsuite/gfortran.dg/char4_iunit_1.f03", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar4_iunit_1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar4_iunit_1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar4_iunit_1.f03?ref=bd228fecfcb2471f40415f714ccb50278c9f7692", "patch": "@@ -26,9 +26,9 @@ program char4_iunit_1\n   write(string, *) 1.2345e-06, 4.2846e+10_8\n   if (string .ne. 4_\"  1.23450002E-06   42846000000.000000     \") call abort\n   write(string, *) nan, inf\n-  if (string .ne. 4_\"             NaN       +Infinity           \") call abort\n+  if (string .ne. 4_\"             NaN        Infinity          \") call abort\n   write(string, '(10x,f3.1,3x,f9.1)') nan, inf\n-  if (string .ne. 4_\"          NaN   +Infinity                 \") call abort\n+  if (string .ne. 4_\"          NaN    Infinity                 \") call abort\n   write(string, *) (1.2, 3.4 )\n   if (string .ne. 4_\" (  1.2000000    ,  3.4000001    )        \") call abort\n end program char4_iunit_1"}, {"sha": "28e406730fa3aac74e6e9b660924ec08525cc9a8", "filename": "gcc/testsuite/gfortran.dg/large_real_kind_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_real_kind_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_real_kind_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_real_kind_1.f90?ref=bd228fecfcb2471f40415f714ccb50278c9f7692", "patch": "@@ -56,7 +56,7 @@ program test\n   call testoutput (-7.51e-100_k,-7.51e-100_8,15,'(F15.10)')\n \n   x = huge(x)\n-  call outputstring (2*x,'(F20.15)','           +Infinity')\n+  call outputstring (2*x,'(F20.15)','            Infinity')\n   call outputstring (-2*x,'(F20.15)','           -Infinity')\n \n   write (c1,'(G20.10E5)') x"}, {"sha": "202781f07c2f504f1ce08eaffab1a3360131e62a", "filename": "gcc/testsuite/gfortran.dg/module_nan.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_nan.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_nan.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_nan.f90?ref=bd228fecfcb2471f40415f714ccb50278c9f7692", "patch": "@@ -19,7 +19,7 @@ program a\n   if (log(abs(inf))  < huge(inf)) call abort()\n   if (log(abs(minf)) < huge(inf)) call abort()\n   if (.not. isnan(nan)) call abort()\n-  write(str,*) inf\n+  write(str,\"(sp,f10.2)\") inf\n   if (adjustl(str) /= \"+Infinity\") call abort()\n   write(str,*) minf\n   if (adjustl(str) /= \"-Infinity\") call abort()"}, {"sha": "c5023e8fe224bf0b8c3862b907e8f7f8767dbf58", "filename": "gcc/testsuite/gfortran.dg/read_infnan_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_infnan_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_infnan_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_infnan_1.f90?ref=bd228fecfcb2471f40415f714ccb50278c9f7692", "patch": "@@ -22,9 +22,9 @@ program pr43298\n rewind(10)\n read(10,'(7f10.3)') x8\n write (output, '(\"x4 =\",7G6.0)') x4\n-if (output.ne.\"x4 =  +Inf   NaN  +Inf   NaN  -Inf   NaN  +Inf\") call abort\n+if (output.ne.\"x4 =   Inf   NaN   Inf   NaN  -Inf   NaN   Inf\") call abort\n write (output, '(\"x8 =\",7G6.0)') x8\n-if (output.ne.\"x8 =  +Inf   NaN  +Inf   NaN  -Inf   NaN  +Inf\") call abort\n+if (output.ne.\"x8 =   Inf   NaN   Inf   NaN  -Inf   NaN   Inf\") call abort\n !print '(\"x4 =\",7G6.0)', x4\n !print '(\"x8 =\",7G6.0)', x8\n end program pr43298"}, {"sha": "9f3f5d837d7d74e7064a218de69fac47876f03be", "filename": "gcc/testsuite/gfortran.dg/real_const_3.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.dg%2Freal_const_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.dg%2Freal_const_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal_const_3.f90?ref=bd228fecfcb2471f40415f714ccb50278c9f7692", "patch": "@@ -16,7 +16,7 @@ program main\n   b = 1/exp(1000.0)\n \n   write(str,*) a\n-  if (trim(adjustl(str)) .ne. '+Infinity') call abort\n+  if (trim(adjustl(str)) .ne. 'Infinity') call abort\n \n   if (b .ne. 0.) call abort\n \n@@ -36,7 +36,7 @@ program main\n   if (trim(adjustl(str)) .ne. '-Infinity') call abort\n \n   write(str,*) 3.0/0.\n-  if (trim(adjustl(str)) .ne. '+Infinity') call abort\n+  if (trim(adjustl(str)) .ne. 'Infinity') call abort\n \n   write(str,*)  nan\n   if (trim(adjustl(str)) .ne. 'NaN') call abort\n@@ -48,7 +48,7 @@ program main\n   if (trim(adjustl(str)) .ne. '(            NaN,            NaN)') call abort\n \n   write(str,*) z3\n-  if (trim(adjustl(str)) .ne. '(      +Infinity,      -Infinity)') call abort\n+  if (trim(adjustl(str)) .ne. '(       Infinity,      -Infinity)') call abort\n \n   write(str,*) z4\n   if (trim(adjustl(str)) .ne. '(  0.0000000    , -0.0000000    )') call abort"}, {"sha": "2ded0cbbb620a0a9e7c6ceb42e3b678635b57c15", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/nan_inf_fmt.f90", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnan_inf_fmt.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd228fecfcb2471f40415f714ccb50278c9f7692/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnan_inf_fmt.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnan_inf_fmt.f90?ref=bd228fecfcb2471f40415f714ccb50278c9f7692", "patch": "@@ -1,4 +1,5 @@\n !pr 12839- F2003 formatting of Inf /Nan \n+! Modified for PR47434\n        implicit none\n        character*40 l\n        character*12 fmt\n@@ -15,11 +16,11 @@\n ! check a field width = 0\n        fmt = '(F0.0)'\n        write(l,fmt=fmt)pos_inf\n-       if (l.ne.'+Inf') call abort\n+       if (l.ne.'Inf') call abort\n        write(l,fmt=fmt)neg_inf\n        if (l.ne.'-Inf') call abort\n        write(l,fmt=fmt)nan\n-       if (l.ne.' NaN') call abort\n+       if (l.ne.'NaN') call abort\n \n ! check a field width < 3\n        fmt = '(F2.0)'\n@@ -42,7 +43,7 @@\n ! check a field width > 3\n        fmt = '(F4.0)'\n        write(l,fmt=fmt)pos_inf\n-       if (l.ne.'+Inf') call abort\n+       if (l.ne.' Inf') call abort\n        write(l,fmt=fmt)neg_inf\n        if (l.ne.'-Inf') call abort\n        write(l,fmt=fmt)nan\n@@ -51,7 +52,7 @@\n ! check a field width = 7\n        fmt = '(F7.0)'\n        write(l,fmt=fmt)pos_inf\n-       if (l.ne.'   +Inf') call abort\n+       if (l.ne.'    Inf') call abort\n        write(l,fmt=fmt)neg_inf\n        if (l.ne.'   -Inf') call abort\n        write(l,fmt=fmt)nan\n@@ -60,7 +61,7 @@\n ! check a field width = 8\n        fmt = '(F8.0)'\n        write(l,fmt=fmt)pos_inf\n-       if (l.ne.'    +Inf') call abort\n+       if (l.ne.'Infinity') call abort\n        write(l,fmt=fmt)neg_inf\n        if (l.ne.'    -Inf') call abort\n        write(l,fmt=fmt)nan\n@@ -69,7 +70,7 @@\n ! check a field width = 9\n        fmt = '(F9.0)'\n        write(l,fmt=fmt)pos_inf\n-       if (l.ne.'+Infinity') call abort\n+       if (l.ne.' Infinity') call abort\n        write(l,fmt=fmt)neg_inf\n        if (l.ne.'-Infinity') call abort\n        write(l,fmt=fmt)nan\n@@ -78,7 +79,7 @@\n ! check a field width = 14\n        fmt = '(F14.0)'\n        write(l,fmt=fmt)pos_inf\n-       if (l.ne.'     +Infinity') call abort\n+       if (l.ne.'      Infinity') call abort\n        write(l,fmt=fmt)neg_inf\n        if (l.ne.'     -Infinity') call abort\n        write(l,fmt=fmt)nan"}]}