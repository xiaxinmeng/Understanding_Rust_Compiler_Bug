{"sha": "6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUwZGYzYjdhOGNmNWIwM2E1ZjdiMDUyM2ZkNTBjZWNkODA1OThmMg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2016-03-24T21:29:55Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2016-03-24T21:29:55Z"}, "message": "Also test -O0 for OpenACC C, C++ offloading test cases\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c++/c++.exp: Set up torture testing, use\n\tgcc-dg-runtest.\n\t* testsuite/libgomp.oacc-c/c.exp: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/acc-on-device-2.c: Specify\n\t-fno-builtin-acc_on_device instead of -O0.\n\t* testsuite/libgomp.oacc-c-c++-common/acc-on-device.c: Skip for\n\t-O0.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-auto-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-dim-default.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-g-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-g-2.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-gwv-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-red-g-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-red-gwv-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-red-v-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-red-v-2.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-red-w-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-red-w-2.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-v-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-w-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/loop-wv-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/routine-g-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/routine-gwv-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/routine-v-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/routine-w-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/routine-wv-1.c: Likewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-2.c:\n\tDon't specify -O2.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-3.c:\n\tLikewise.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta.c:\n\tLikewise.\n\nFrom-SVN: r234471", "tree": {"sha": "7e5916936a3ef29c4608cd71e37907332d2bc404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e5916936a3ef29c4608cd71e37907332d2bc404"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a29084dea4f4d340f533a0c9f17aef0572218bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a29084dea4f4d340f533a0c9f17aef0572218bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a29084dea4f4d340f533a0c9f17aef0572218bc"}], "stats": {"total": 204, "additions": 147, "deletions": 57}, "files": [{"sha": "e0cd567d0d1e3e75d1cfc88d9283b692f9948ce0", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,3 +1,39 @@\n+2016-03-24  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c++/c++.exp: Set up torture testing, use\n+\tgcc-dg-runtest.\n+\t* testsuite/libgomp.oacc-c/c.exp: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/acc-on-device-2.c: Specify\n+\t-fno-builtin-acc_on_device instead of -O0.\n+\t* testsuite/libgomp.oacc-c-c++-common/acc-on-device.c: Skip for\n+\t-O0.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-auto-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-dim-default.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-g-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-g-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-gwv-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-red-g-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-red-gwv-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-red-v-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-red-v-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-red-w-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-red-w-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-v-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-w-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/loop-wv-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/routine-g-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/routine-gwv-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/routine-v-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/routine-w-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/routine-wv-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-2.c:\n+\tDon't specify -O2.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-3.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta.c:\n+\tLikewise.\n+\n 2016-03-24  Martin Liska  <mliska@suse.cz>\n \n \t* plugin/plugin-hsa.c (packet_store_release): New function"}, {"sha": "bbdbe2f9ec4bb4b4fcdc50ebfb4642a9e8a5a797", "filename": "libgomp/testsuite/libgomp.oacc-c++/c++.exp", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2B%2B%2Fc%2B%2B.exp?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -2,6 +2,7 @@\n \n load_lib libgomp-dg.exp\n load_gcc_lib gcc-dg.exp\n+load_gcc_lib torture-options.exp\n \n global shlib_ext\n \n@@ -13,13 +14,9 @@ if [info exists lang_include_flags] then {\n     unset lang_include_flags\n }\n \n-# If a testcase doesn't have special options, use these.\n-if ![info exists DEFAULT_CFLAGS] then {\n-    set DEFAULT_CFLAGS \"-O2\"\n-}\n-\n # Initialize dg.\n dg-init\n+torture-init\n \n # Turn on OpenACC.\n lappend ALWAYS_CFLAGS \"additional_flags=-fopenacc\"\n@@ -104,12 +101,32 @@ if { $lang_test_file_found } {\n \n \tsetenv ACC_DEVICE_TYPE $offload_target_openacc\n \n-\tdg-runtest $tests \"$tagopt\" \"$libstdcxx_includes $DEFAULT_CFLAGS\"\n+\t# To get better test coverage for device-specific code that is only\n+\t# ever used in offloading configurations, we'd like more thorough\n+\t# testing for test cases that deal with offloading, which most of all\n+\t# OpenACC test cases are.  We enable torture testing, but limit it to\n+\t# -O0 and -O2 only, to avoid testing times exploding too much, under\n+\t# the assumption that between -O0 and -O[something] there is the\n+\t# biggest difference in the overall structure of the generated code.\n+\tswitch $offload_target_openacc {\n+\t    host {\n+\t\tset-torture-options [list \\\n+\t\t\t\t\t { -O2 } ]\n+\t    }\n+\t    default {\n+\t\tset-torture-options [list \\\n+\t\t\t\t\t { -O0 } \\\n+\t\t\t\t\t { -O2 } ]\n+\t    }\n+\t}\n+\n+\tgcc-dg-runtest $tests \"$tagopt\" \"$libstdcxx_includes\"\n     }\n }\n \n # See above.\n set GCC_UNDER_TEST \"$SAVE_GCC_UNDER_TEST\"\n \n # All done.\n+torture-finish\n dg-finish"}, {"sha": "bfcb67d58b60a0e5282694b5c0ab88536dc273ea", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc-on-device-2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc-on-device-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc-on-device-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc-on-device-2.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,9 +1,8 @@\n-/* { dg-additional-options \"-O0\" } */\n+/* Test the acc_on_device library function. */\n+/* { dg-additional-options \"-fno-builtin-acc_on_device\" } */\n \n #include <openacc.h>\n \n-/* acc_on_device might not be folded at -O0, but it should work. */\n-\n int main ()\n {\n   int dev;"}, {"sha": "e0d87107d78fb2c3e82cc84e8d99a08517e89186", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/acc-on-device.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc-on-device.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc-on-device.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Facc-on-device.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n-/* { dg-additional-options \"-O2\" } */\n+/* We don't expect this to work with optimizations disabled.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <openacc.h>\n "}, {"sha": "e8d65df8208f777e1be912288cccc6a1d1769f7b", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-2.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-additional-options \"-O2 -fipa-pta\" } */\n+/* { dg-additional-options \"-fipa-pta\" } */\n \n #include <stdlib.h>\n "}, {"sha": "dd8ca871d59afb1aab48ab1a5ce6f79f77cfe4c6", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-3.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-additional-options \"-O2 -fipa-pta\" } */\n+/* { dg-additional-options \"-fipa-pta\" } */\n \n #include <stdlib.h>\n "}, {"sha": "50e7dc14888466a36338687a89749cd1b3555a13", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-additional-options \"-O2 -fipa-pta\" } */\n+/* { dg-additional-options \"-fipa-pta\" } */\n \n #include <stdlib.h>\n "}, {"sha": "622bbdffaeadb481a97e711f7247563838d3d428", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-auto-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-auto-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-auto-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-auto-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n #include <openacc.h>"}, {"sha": "c433b80da9359cc504d834698d8b47a33a8d26b4", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-dim-default.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-dim-default.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-dim-default.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-dim-default.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,7 @@\n-\n-/* { dg-additional-options \"-O2 -fopenacc-dim=16:16\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n+/* { dg-additional-options \"-fopenacc-dim=16:16\" } */\n \n #include <openacc.h>\n #include <alloca.h>"}, {"sha": "7bff6cddf84e2d0da2e08ae17f969745850e76d9", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-g-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "92b82a01eb06e33d5152e66171d6ad275e98eb1e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-g-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-g-2.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "42b612a29d8de7cb28dfbd7443cb5812453501ae", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-gwv-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-gwv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-gwv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-gwv-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "a8684f9587e8ef3ea3fb187233c9c93d42cb1ee9", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-g-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-g-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-g-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-g-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "3b104cf2f4733694aa1032a89e820d37fdcd6ed6", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-gwv-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-gwv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-gwv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-gwv-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "b77ae76e321c18ee104b7406f3dd52dd7fb84498", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-v-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "16d8f9fbf2c87e35cd89cd630fc047cc91b2e454", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-v-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-v-2.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "9cc12b3add8098749dbcb6220fa8b417576db685", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-w-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "f0c9d8182e8e3a4cdce9234bf6a11a7a23f42610", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-red-w-2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-red-w-2.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "2974807925a8d1647041d892d962a5d820c00700", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-v-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-v-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-v-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-v-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "33b6eae9e44cd37ea115d23ceeb8169444d65c8f", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-w-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-w-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-w-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-w-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "578cfadd4d142b3ef4a37d167c6dd3b6f23fd925", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/loop-wv-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-wv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-wv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Floop-wv-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "9d14c3bd3130ddab83c8223583999b5b3420f3ef", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/routine-g-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-g-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-g-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-g-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "ace2f499b1fa3d514255596149336a7bd7e24ea1", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/routine-gwv-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-gwv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-gwv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-gwv-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "2503e8d7d9d7deb45f108edb93b7a53052815550", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/routine-v-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-v-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-v-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-v-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "80cd4620b091fd6d0c0bec2f156d943c3743154d", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/routine-w-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-w-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-w-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-w-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "5e45fad176f485606978e3ede3a0615ccc635c79", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/routine-wv-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-wv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-wv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Froutine-wv-1.c?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do run } */\n-/* { dg-additional-options \"-O2\" } */\n+/* This code uses nvptx inline assembly guarded with acc_on_device, which is\n+   not optimized away at -O0, and then confuses the target assembler.\n+   { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n #include <stdio.h>\n "}, {"sha": "b509a1098159c277bd5b402b605617ba2b288b49", "filename": "libgomp/testsuite/libgomp.oacc-c/c.exp", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c%2Fc.exp?ref=6e0df3b7a8cf5b03a5f7b0523fd50cecd80598f2", "patch": "@@ -13,14 +13,11 @@ if [info exists lang_include_flags] then {\n \n load_lib libgomp-dg.exp\n load_gcc_lib gcc-dg.exp\n-\n-# If a testcase doesn't have special options, use these.\n-if ![info exists DEFAULT_CFLAGS] then {\n-    set DEFAULT_CFLAGS \"-O2\"\n-}\n+load_gcc_lib torture-options.exp\n \n # Initialize dg.\n dg-init\n+torture-init\n \n # Turn on OpenACC.\n lappend ALWAYS_CFLAGS \"additional_flags=-fopenacc\"\n@@ -67,8 +64,28 @@ foreach offload_target_openacc $offload_targets_s_openacc {\n \n     setenv ACC_DEVICE_TYPE $offload_target_openacc\n \n-    dg-runtest $tests \"$tagopt\" $DEFAULT_CFLAGS\n+    # To get better test coverage for device-specific code that is only\n+    # ever used in offloading configurations, we'd like more thorough\n+    # testing for test cases that deal with offloading, which most of all\n+    # OpenACC test cases are.  We enable torture testing, but limit it to\n+    # -O0 and -O2 only, to avoid testing times exploding too much, under\n+    # the assumption that between -O0 and -O[something] there is the\n+    # biggest difference in the overall structure of the generated code.\n+    switch $offload_target_openacc {\n+\thost {\n+\t    set-torture-options [list \\\n+\t\t\t\t     { -O2 } ]\n+\t}\n+\tdefault {\n+\t    set-torture-options [list \\\n+\t\t\t\t     { -O0 } \\\n+\t\t\t\t     { -O2 } ]\n+\t}\n+    }\n+\n+    gcc-dg-runtest $tests \"$tagopt\" \"\"\n }\n \n # All done.\n+torture-finish\n dg-finish"}]}