{"sha": "6f5ef761dff56f6fad015e13d16d1ec12283a25c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY1ZWY3NjFkZmY1NmY2ZmFkMDE1ZTEzZDE2ZDFlYzEyMjgzYTI1Yw==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2000-05-28T21:22:12Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2000-05-28T21:22:12Z"}, "message": "toplev.h (skip_leading_substring): New macro.\n\n2000-05-28  Gabriel Dos Reis  <gdr@codesourcery.com>\n\n        * toplev.h (skip_leading_substring): New macro.\n        * toplev.c (decode_f_option): Use skip_leading_substring instead\n        of strncmp.\n        (decode_W_option): Likewise.\n\ncp/\n\n2000-05-28  Gabriel Dos Reis  <gdr@codesourcery.com>\n\n        * decl2.c (lang_decode_option): Use skip_leading_substring instead\n        of plain strncmp.\n\nFrom-SVN: r34240", "tree": {"sha": "8ea1a5fdfdba85a8c2a066a09b4a28546171a2b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ea1a5fdfdba85a8c2a066a09b4a28546171a2b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f5ef761dff56f6fad015e13d16d1ec12283a25c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5ef761dff56f6fad015e13d16d1ec12283a25c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f5ef761dff56f6fad015e13d16d1ec12283a25c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5ef761dff56f6fad015e13d16d1ec12283a25c/comments", "author": null, "committer": null, "parents": [{"sha": "055177dc83b011c37b3b78c23d4f86d471bf21c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/055177dc83b011c37b3b78c23d4f86d471bf21c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/055177dc83b011c37b3b78c23d4f86d471bf21c7"}], "stats": {"total": 108, "additions": 68, "deletions": 40}, "files": [{"sha": "cb0589e71572bcf1d543ce75effd1a5fa745229f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5ef761dff56f6fad015e13d16d1ec12283a25c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5ef761dff56f6fad015e13d16d1ec12283a25c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f5ef761dff56f6fad015e13d16d1ec12283a25c", "patch": "@@ -1,3 +1,10 @@\n+2000-05-28  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* toplev.h (skip_leading_substring): New macro.\n+\t* toplev.c (decode_f_option): Use skip_leading_substring instead\n+\tof strncmp.\n+\t(decode_W_option): Likewise.\n+\n 2000-05-28  Nick Clifton  <nickc@cygnus.com>\n \n \t* tm.texi (CONDITIONAL_REGISTER_USAGE): Document that it can"}, {"sha": "385f9211d9e7618d1f7f36c7ce4ca787dcaca66e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5ef761dff56f6fad015e13d16d1ec12283a25c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5ef761dff56f6fad015e13d16d1ec12283a25c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f5ef761dff56f6fad015e13d16d1ec12283a25c", "patch": "@@ -1,3 +1,8 @@\n+2000-05-28  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* decl2.c (lang_decode_option): Use skip_leading_substring instead\n+\tof plain strncmp.\n+\n 2000-05-28  Alexandre Oliva  <aoliva@cygnus.com>\n \n \t* operators.def (<?): Duplicated, should have been..."}, {"sha": "5ce75ef1ee49095fdb7f642b4fb7c4cb1f45d0e1", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5ef761dff56f6fad015e13d16d1ec12283a25c/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5ef761dff56f6fad015e13d16d1ec12283a25c/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=6f5ef761dff56f6fad015e13d16d1ec12283a25c", "patch": "@@ -590,6 +590,7 @@ lang_decode_option (argc, argv)\n       /* Some kind of -f option.\n \t P's value is the option sans `-f'.\n \t Search for it in the table of options.  */\n+      const char *option_value = NULL;\n       size_t j;\n \n       p += 2;\n@@ -639,31 +640,36 @@ lang_decode_option (argc, argv)\n \t  flag_new_abi = 0;\n \t  flag_do_squangling = 0;\n \t}\n-      else if (!strncmp (p, \"template-depth-\", 15))\n+      else if ((option_value\n+                = skip_leading_substring (p, \"template-depth-\")))\n \tmax_tinst_depth\n-\t  = read_integral_parameter (p + 15, p - 2, max_tinst_depth);\n-      else if (!strncmp (p, \"name-mangling-version-\", 22))\n+\t  = read_integral_parameter (option_value, p - 2, max_tinst_depth);\n+      else if ((option_value\n+                = skip_leading_substring (p, \"name-mangling-version-\")))\n \tname_mangling_version \n-\t  = read_integral_parameter (p + 22, p - 2, name_mangling_version);\n-      else if (!strncmp (p, \"message-length=\", 15))\n+\t  = read_integral_parameter (option_value, p - 2, name_mangling_version);\n+      else if ((option_value\n+                = skip_leading_substring (p, \"message-length=\")))\n \tset_message_length\n-\t  (read_integral_parameter (p + 15, p - 2,\n+\t  (read_integral_parameter (option_value, p - 2,\n \t\t\t\t    /* default line-wrap length */ 72));\n-      else if (!strncmp (p, \"diagnostics-show-location=\", 26))\n+      else if ((option_value\n+                = skip_leading_substring (p, \"diagnostics-show-location=\")))\n         {\n-          if (!strncmp (p + 26, \"once\", 4))\n+          if (!strcmp (option_value, \"once\"))\n             set_message_prefixing_rule (DIAGNOSTICS_SHOW_PREFIX_ONCE);\n-          else if (!strncmp (p + 26, \"every-line\", 10))\n+          else if (!strcmp (option_value, \"every-line\"))\n             set_message_prefixing_rule (DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE);\n           else\n             error (\"Unrecognized option `%s'\", p - 2);\n         }\n-      else if (!strncmp (p, \"dump-translation-unit-\", 22))\n+      else if ((option_value\n+                = skip_leading_substring (p, \"dump-translation-unit-\")))\n \t{\n \t  if (p[22] == '\\0')\n \t    error (\"no file specified with -fdump-translation-unit\");\n \t  else\n-\t    flag_dump_translation_unit = p + 22;\n+\t    flag_dump_translation_unit = option_value;\n \t}\n       else \n \t{"}, {"sha": "e8e279e24bae1d41f1f9a7b1cea25828c4a4a76a", "filename": "gcc/toplev.c", "status": "modified", "additions": 34, "deletions": 29, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5ef761dff56f6fad015e13d16d1ec12283a25c/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5ef761dff56f6fad015e13d16d1ec12283a25c/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=6f5ef761dff56f6fad015e13d16d1ec12283a25c", "patch": "@@ -3923,6 +3923,7 @@ decode_f_option (arg)\n      const char * arg;\n {\n   int j;\n+  const char *option_value = NULL;\n \n   /* Search for the option in the table of binary f options.  */\n   for (j = sizeof (f_options) / sizeof (f_options[0]); j--;)\n@@ -3941,44 +3942,47 @@ decode_f_option (arg)\n \t}\n     }\n \n-  if (!strncmp (arg, \"inline-limit-\", 13)\n-      || !strncmp (arg, \"inline-limit=\", 13))\n+  if ((option_value = skip_leading_substring (arg, \"inline-limit-\"))\n+      || (option_value = skip_leading_substring (arg, \"inline-limit=\")))\n     inline_max_insns =\n-      read_integral_parameter (arg + 13, arg - 2, inline_max_insns);\n+      read_integral_parameter (option_value, arg - 2, inline_max_insns);\n #ifdef INSN_SCHEDULING\n-  else if (!strncmp (arg, \"sched-verbose=\", 14))\n-    fix_sched_param (\"verbose\", (const char *)(arg + 14));\n+  else if ((option_value = skip_leading_substring (arg, \"sched-verbose=\")))\n+    fix_sched_param (\"verbose\", option_value);\n #endif\n-  else if (!strncmp (arg, \"fixed-\", 6))\n-    fix_register ((const char *)(arg + 6), 1, 1);\n-  else if (!strncmp (arg, \"call-used-\", 10))\n-    fix_register ((const char *)(arg + 10), 0, 1);\n-  else if (!strncmp (arg, \"call-saved-\", 11))\n-    fix_register ((const char *)(arg + 11), 0, 0);\n-  else if (!strncmp (arg, \"align-loops=\", 12))\n-    align_loops = read_integral_parameter (arg + 12, arg - 2, align_loops);\n-  else if (!strncmp (arg, \"align-functions=\", 16))\n+  else if ((option_value = skip_leading_substring (arg, \"fixed-\")))\n+    fix_register (option_value, 1, 1);\n+  else if ((option_value = skip_leading_substring (arg, \"call-used-\")))\n+    fix_register (option_value, 0, 1);\n+  else if ((option_value = skip_leading_substring (arg, \"call-saved-\")))\n+    fix_register (option_value, 0, 0);\n+  else if ((option_value = skip_leading_substring (arg, \"align-loops=\")))\n+    align_loops = read_integral_parameter (option_value, arg - 2, align_loops);\n+  else if ((option_value = skip_leading_substring (arg, \"align-functions=\")))\n     align_functions\n-      = read_integral_parameter (arg + 16, arg - 2, align_functions);\n-  else if (!strncmp (arg, \"align-jumps=\", 12))\n-    align_jumps = read_integral_parameter (arg + 12, arg - 2, align_jumps);\n-  else if (!strncmp (arg, \"align-labels=\", 13))\n-    align_labels = read_integral_parameter (arg + 13, arg - 2, align_labels);\n-  else if (!strncmp (arg, \"stack-limit-register=\", 21))\n+      = read_integral_parameter (option_value, arg - 2, align_functions);\n+  else if ((option_value = skip_leading_substring (arg, \"align-jumps=\")))\n+    align_jumps = read_integral_parameter (option_value, arg - 2, align_jumps);\n+  else if ((option_value = skip_leading_substring (arg, \"align-labels=\")))\n+    align_labels\n+      = read_integral_parameter (option_value, arg - 2, align_labels);\n+  else if ((option_value\n+            = skip_leading_substring (arg, \"stack-limit-register=\")))\n     {\n-      int reg = decode_reg_name (arg + 21);\n+      int reg = decode_reg_name (option_value);\n       if (reg < 0)\n-\terror (\"unrecognized register name `%s'\", arg + 21);\n+\terror (\"unrecognized register name `%s'\", option_value);\n       else\n \tstack_limit_rtx = gen_rtx_REG (Pmode, reg);\n     }\n-  else if (!strncmp (arg, \"stack-limit-symbol=\", 19))\n+  else if ((option_value\n+            = skip_leading_substring (arg, \"stack-limit-symbol=\")))\n     {\n       char *nm;\n       if (ggc_p)\n-\tnm = ggc_alloc_string (arg + 19, strlen (arg + 19));\n+\tnm = ggc_alloc_string (option_value, strlen (option_value));\n       else\n-\tnm = xstrdup (arg + 19);\n+\tnm = xstrdup (option_value);\n       stack_limit_rtx = gen_rtx_SYMBOL_REF (Pmode, nm);\n     }\n   else if (!strcmp (arg, \"no-stack-limit\"))\n@@ -4001,6 +4005,7 @@ static int\n decode_W_option (arg)\n      const char * arg;\n {\n+  const char *option_value = NULL;\n   int j;\n   \n   /* Search for the option in the table of binary W options.  */\n@@ -4021,16 +4026,16 @@ decode_W_option (arg)\n \t}\n     }\n \n-  if (!strncmp (arg, \"id-clash-\", 9))\n+  if ((option_value = skip_leading_substring (arg, \"id-clash-\")))\n     {\n-      id_clash_len = read_integral_parameter (arg + 9, arg - 2, -1);\n+      id_clash_len = read_integral_parameter (option_value, arg - 2, -1);\n       \n       if (id_clash_len != -1)\n \twarn_id_clash = 1;\n     }\n-  else if (!strncmp (arg, \"larger-than-\", 12))\n+  else if ((option_value = skip_leading_substring (arg, \"larger-than-\")))\n     {\n-      larger_than_size = read_integral_parameter (arg + 12, arg - 2, -1);\n+      larger_than_size = read_integral_parameter (option_value, arg - 2, -1);\n \n       if (larger_than_size != -1)\n \twarn_larger_than = 1;"}, {"sha": "fdfee432e51aff64aba4439b4c33470e7eb58163", "filename": "gcc/toplev.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5ef761dff56f6fad015e13d16d1ec12283a25c/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5ef761dff56f6fad015e13d16d1ec12283a25c/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=6f5ef761dff56f6fad015e13d16d1ec12283a25c", "patch": "@@ -26,6 +26,11 @@ union tree_node;\n struct rtx_def;\n #endif\n \n+/* If non-NULL, return one past-the-end of the matching SUBPART of\n+   the WHOLE string.  */\n+#define skip_leading_substring(whole,  part) \\\n+   (strncmp (whole, part, strlen (part)) ? NULL : whole + strlen (part))\n+\n extern int read_integral_parameter\tPARAMS ((const char *, const char *,\n \t\t\t\t\t\tconst int));\n extern int count_error\t\t\tPARAMS ((int));"}]}