{"sha": "c8717ea3bc5d29892eb629534cd58c139e3daae7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg3MTdlYTNiYzVkMjk4OTJlYjYyOTUzNGNkNThjMTM5ZTNkYWFlNw==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-08-27T14:48:16Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-08-27T14:48:16Z"}, "message": "mips-protos.h (mips_function_arg_advance): Delete\n\n\t* config/mips/mips-protos.h (mips_function_arg_advance): Delete\n\t(mips_function_arg): Delete.\n\t(mips_function_arg_boundary): Take a const_tree.\n\t* config/mips/mips.c (mips_function_arg_boundary): Likewise.\n\t(mips_arg_info): Likewise.\n\t(mips_setup_incoming_varargs): Call mips_function_arg_advance\n\tinstead of FUNCTION_ARG_ADVANCE.\n\t(mips_function_arg_advance): Adjust prototype.  Make static.\n\t(mips_function_arg): Likewise.\n\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n\t* config/mips/mips.h (FUNCTION_ARG_ADVANCE, FUNCTION_ARG): Delete.\n\nFrom-SVN: r163587", "tree": {"sha": "bd28876239ac19121498dd995e944583945304bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd28876239ac19121498dd995e944583945304bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8717ea3bc5d29892eb629534cd58c139e3daae7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8717ea3bc5d29892eb629534cd58c139e3daae7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8717ea3bc5d29892eb629534cd58c139e3daae7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8717ea3bc5d29892eb629534cd58c139e3daae7/comments", "author": null, "committer": null, "parents": [{"sha": "7c8232a2e9681bf5cc37162b5175a5899329bbfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c8232a2e9681bf5cc37162b5175a5899329bbfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c8232a2e9681bf5cc37162b5175a5899329bbfb"}], "stats": {"total": 67, "additions": 29, "deletions": 38}, "files": [{"sha": "f4aeff9c01ca54364bc4efae5f8773ba1e476415", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8717ea3bc5d29892eb629534cd58c139e3daae7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8717ea3bc5d29892eb629534cd58c139e3daae7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8717ea3bc5d29892eb629534cd58c139e3daae7", "patch": "@@ -1,3 +1,17 @@\n+2010-08-27  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/mips/mips-protos.h (mips_function_arg_advance): Delete\n+\t(mips_function_arg): Delete.\n+\t(mips_function_arg_boundary): Take a const_tree.\n+\t* config/mips/mips.c (mips_function_arg_boundary): Likewise.\n+\t(mips_arg_info): Likewise.\n+\t(mips_setup_incoming_varargs): Call mips_function_arg_advance\n+\tinstead of FUNCTION_ARG_ADVANCE.\n+\t(mips_function_arg_advance): Adjust prototype.  Make static.\n+\t(mips_function_arg): Likewise.\n+\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n+\t* config/mips/mips.h (FUNCTION_ARG_ADVANCE, FUNCTION_ARG): Delete.\n+\n 2010-08-27  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/rs6000/rs6000.h (FUNCTION_ARG, FUNCTION_ARG_ADVANCE): Delete."}, {"sha": "be2d6af0884c95083f1cb368a0ad18e94b2aaf68", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8717ea3bc5d29892eb629534cd58c139e3daae7/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8717ea3bc5d29892eb629534cd58c139e3daae7/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=c8717ea3bc5d29892eb629534cd58c139e3daae7", "patch": "@@ -240,11 +240,7 @@ extern bool mips_expand_block_move (rtx, rtx, rtx);\n extern void mips_expand_synci_loop (rtx, rtx);\n \n extern void mips_init_cumulative_args (CUMULATIVE_ARGS *, tree);\n-extern void mips_function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,\n-\t\t\t\t       tree, int);\n-extern rtx mips_function_arg (const CUMULATIVE_ARGS *,\n-\t\t\t      enum machine_mode, tree, int);\n-extern int mips_function_arg_boundary (enum machine_mode, tree);\n+extern int mips_function_arg_boundary (enum machine_mode, const_tree);\n extern bool mips_pad_arg_upward (enum machine_mode, const_tree);\n extern bool mips_pad_reg_upward (enum machine_mode, tree);\n "}, {"sha": "3b1096916161a9dc3d58f4b570f00020b0258f6b", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8717ea3bc5d29892eb629534cd58c139e3daae7/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8717ea3bc5d29892eb629534cd58c139e3daae7/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=c8717ea3bc5d29892eb629534cd58c139e3daae7", "patch": "@@ -4701,7 +4701,7 @@ mips_init_cumulative_args (CUMULATIVE_ARGS *cum, tree fntype)\n \n static void\n mips_get_arg_info (struct mips_arg_info *info, const CUMULATIVE_ARGS *cum,\n-\t\t   enum machine_mode mode, tree type, int named)\n+\t\t   enum machine_mode mode, const_tree type, bool named)\n {\n   bool doubleword_aligned_p;\n   unsigned int num_bytes, num_words, max_regs;\n@@ -4834,11 +4834,11 @@ mips_strict_argument_naming (CUMULATIVE_ARGS *ca ATTRIBUTE_UNUSED)\n   return !TARGET_OLDABI;\n }\n \n-/* Implement FUNCTION_ARG.  */\n+/* Implement TARGET_FUNCTION_ARG.  */\n \n-rtx\n-mips_function_arg (const CUMULATIVE_ARGS *cum, enum machine_mode mode,\n-\t\t   tree type, int named)\n+static rtx\n+mips_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n+\t\t   const_tree type, bool named)\n {\n   struct mips_arg_info info;\n \n@@ -4960,11 +4960,11 @@ mips_function_arg (const CUMULATIVE_ARGS *cum, enum machine_mode mode,\n   return gen_rtx_REG (mode, mips_arg_regno (&info, TARGET_HARD_FLOAT));\n }\n \n-/* Implement FUNCTION_ARG_ADVANCE.  */\n+/* Implement TARGET_FUNCTION_ARG_ADVANCE.  */\n \n-void\n+static void\n mips_function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n-\t\t\t   tree type, int named)\n+\t\t\t   const_tree type, bool named)\n {\n   struct mips_arg_info info;\n \n@@ -5013,7 +5013,7 @@ mips_arg_partial_bytes (CUMULATIVE_ARGS *cum,\n    to STACK_BOUNDARY bits if the type requires it.  */\n \n int\n-mips_function_arg_boundary (enum machine_mode mode, tree type)\n+mips_function_arg_boundary (enum machine_mode mode, const_tree type)\n {\n   unsigned int alignment;\n \n@@ -5346,7 +5346,7 @@ mips_setup_incoming_varargs (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n      argument.  Advance a local copy of CUM past the last \"real\" named\n      argument, to find out how many registers are left over.  */\n   local_cum = *cum;\n-  FUNCTION_ARG_ADVANCE (local_cum, mode, type, true);\n+  mips_function_arg_advance (&local_cum, mode, type, true);\n \n   /* Found out how many registers we need to save.  */\n   gp_saved = MAX_ARGS_IN_REGISTERS - local_cum.num_gprs;\n@@ -16469,6 +16469,10 @@ void mips_function_profiler (FILE *file)\n #define TARGET_CALLEE_COPIES mips_callee_copies\n #undef TARGET_ARG_PARTIAL_BYTES\n #define TARGET_ARG_PARTIAL_BYTES mips_arg_partial_bytes\n+#undef TARGET_FUNCTION_ARG\n+#define TARGET_FUNCTION_ARG mips_function_arg\n+#undef TARGET_FUNCTION_ARG_ADVANCE\n+#define TARGET_FUNCTION_ARG_ADVANCE mips_function_arg_advance\n \n #undef TARGET_MODE_REP_EXTENDED\n #define TARGET_MODE_REP_EXTENDED mips_mode_rep_extended"}, {"sha": "cc3ebb478cf4d81a99deff622fbcb18f38ddf8b7", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8717ea3bc5d29892eb629534cd58c139e3daae7/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8717ea3bc5d29892eb629534cd58c139e3daae7/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=c8717ea3bc5d29892eb629534cd58c139e3daae7", "patch": "@@ -2249,29 +2249,6 @@ typedef struct mips_args {\n #define INIT_CUMULATIVE_ARGS(CUM, FNTYPE, LIBNAME, INDIRECT, N_NAMED_ARGS) \\\n   mips_init_cumulative_args (&CUM, FNTYPE)\n \n-/* Update the data in CUM to advance over an argument\n-   of mode MODE and data type TYPE.\n-   (TYPE is null for libcalls where that information may not be available.)  */\n-\n-#define FUNCTION_ARG_ADVANCE(CUM, MODE, TYPE, NAMED) \\\n-  mips_function_arg_advance (&CUM, MODE, TYPE, NAMED)\n-\n-/* Determine where to put an argument to a function.\n-   Value is zero to push the argument on the stack,\n-   or a hard register in which to store the argument.\n-\n-   MODE is the argument's machine mode.\n-   TYPE is the data type of the argument (as a tree).\n-    This is null for libcalls where that information may\n-    not be available.\n-   CUM is a variable of type CUMULATIVE_ARGS which gives info about\n-    the preceding args and about the function being called.\n-   NAMED is nonzero if this argument is a named parameter\n-    (otherwise it is an extra parameter matching an ellipsis).  */\n-\n-#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED) \\\n-  mips_function_arg (&CUM, MODE, TYPE, NAMED)\n-\n #define FUNCTION_ARG_BOUNDARY mips_function_arg_boundary\n \n #define FUNCTION_ARG_PADDING(MODE, TYPE) \\"}]}