{"sha": "7a31e5ef6dab7c1a2d780369804352351f4630ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EzMWU1ZWY2ZGFiN2MxYTJkNzgwMzY5ODA0MzUyMzUxZjQ2MzBlYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-11-17T18:46:22Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-11-17T18:46:22Z"}, "message": "Use combined_fn in tree-vect-patterns.c\n\nAnother patch to extend uses of built_in_function to combined_fn,\nthis time in tree-vect-patterns.c.  The old code didn't handle the\nlong double pow variants, but I think that's because noone had a target\nthat would benefit rather than because the code would mishandle them.\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* tree-vect-patterns.c: Include case-cfn-macros.h.\n\t(vect_recog_pow_pattern): Use combined_fn instead of built-in codes.\n\nFrom-SVN: r230482", "tree": {"sha": "3b92c615ff01d1322fdda744a328cc629c7d9a59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b92c615ff01d1322fdda744a328cc629c7d9a59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a31e5ef6dab7c1a2d780369804352351f4630ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a31e5ef6dab7c1a2d780369804352351f4630ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a31e5ef6dab7c1a2d780369804352351f4630ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a31e5ef6dab7c1a2d780369804352351f4630ea/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c97d1c9dc4bf70364920ca123c2ab3aed082e00c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c97d1c9dc4bf70364920ca123c2ab3aed082e00c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c97d1c9dc4bf70364920ca123c2ab3aed082e00c"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "a540ae7f738112548a5aba58d1727d5b77d7b5a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a31e5ef6dab7c1a2d780369804352351f4630ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a31e5ef6dab7c1a2d780369804352351f4630ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a31e5ef6dab7c1a2d780369804352351f4630ea", "patch": "@@ -1,3 +1,8 @@\n+2015-11-17  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-patterns.c: Include case-cfn-macros.h.\n+\t(vect_recog_pow_pattern): Use combined_fn instead of built-in codes.\n+\n 2015-11-17  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-ssa-math-opts.c: Include case-cfn-macros.h."}, {"sha": "a8d4a82461129f721f4b2eb87c2e3dd5b0fff893", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a31e5ef6dab7c1a2d780369804352351f4630ea/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a31e5ef6dab7c1a2d780369804352351f4630ea/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=7a31e5ef6dab7c1a2d780369804352351f4630ea", "patch": "@@ -39,6 +39,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-vectorizer.h\"\n #include \"dumpfile.h\"\n #include \"builtins.h\"\n+#include \"case-cfn-macros.h\"\n \n /* Pattern recognition functions  */\n static gimple *vect_recog_widen_sum_pattern (vec<gimple *> *, tree *,\n@@ -1009,23 +1010,17 @@ vect_recog_pow_pattern (vec<gimple *> *stmts, tree *type_in,\n \t\t\ttree *type_out)\n {\n   gimple *last_stmt = (*stmts)[0];\n-  tree fn, base, exp = NULL;\n+  tree base, exp = NULL;\n   gimple *stmt;\n   tree var;\n \n   if (!is_gimple_call (last_stmt) || gimple_call_lhs (last_stmt) == NULL)\n     return NULL;\n \n-  fn = gimple_call_fndecl (last_stmt);\n-  if (fn == NULL_TREE || DECL_BUILT_IN_CLASS (fn) != BUILT_IN_NORMAL)\n-   return NULL;\n-\n-  switch (DECL_FUNCTION_CODE (fn))\n+  switch (gimple_call_combined_fn (last_stmt))\n     {\n-    case BUILT_IN_POWIF:\n-    case BUILT_IN_POWI:\n-    case BUILT_IN_POWF:\n-    case BUILT_IN_POW:\n+    CASE_CFN_POW:\n+    CASE_CFN_POWI:\n       base = gimple_call_arg (last_stmt, 0);\n       exp = gimple_call_arg (last_stmt, 1);\n       if (TREE_CODE (exp) != REAL_CST"}]}