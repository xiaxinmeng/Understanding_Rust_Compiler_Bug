{"sha": "1901e8d621fca50bd6aa3f71f9b9b003ca448746", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkwMWU4ZDYyMWZjYTUwYmQ2YWEzZjcxZjliOWIwMDNjYTQ0ODc0Ng==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-02-06T14:25:23Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-02-06T14:25:23Z"}, "message": "re PR target/64889 ([h8300] ICE maybe_record_trace_start, at dwarf2cfi.c:2318)\n\n\tPR target/64889\n\t* config/h8300/h8300.c (push): New argument \"in_prologue\".\n\tPass \"in_prologue\" along to \"F\".\n\t(h8300_push_pop): Corresponding changes.\n\t(h8300_expand_prologue): Likewise.\n\t(h8300_swap_into_er6): Likewise.  Do not set RTX_FRAME_RELATED_P.\n\nFrom-SVN: r220478", "tree": {"sha": "02c7e219053f0f91ff98f589a91a48681bf91a0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02c7e219053f0f91ff98f589a91a48681bf91a0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1901e8d621fca50bd6aa3f71f9b9b003ca448746", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1901e8d621fca50bd6aa3f71f9b9b003ca448746", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1901e8d621fca50bd6aa3f71f9b9b003ca448746", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1901e8d621fca50bd6aa3f71f9b9b003ca448746/comments", "author": null, "committer": null, "parents": [{"sha": "514ba9e4ad87531575da90b028c9882b1e793963", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/514ba9e4ad87531575da90b028c9882b1e793963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/514ba9e4ad87531575da90b028c9882b1e793963"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "41a824d057bbd9da250ff4020a306ae47ffa4876", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1901e8d621fca50bd6aa3f71f9b9b003ca448746/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1901e8d621fca50bd6aa3f71f9b9b003ca448746/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1901e8d621fca50bd6aa3f71f9b9b003ca448746", "patch": "@@ -1,3 +1,12 @@\n+2015-02-06  Jeff Law  <law@redhat.com>\n+\n+\tPR target/64889\n+\t* config/h8300/h8300.c (push): New argument \"in_prologue\".\n+\tPass \"in_prologue\" along to \"F\".\n+\t(h8300_push_pop): Corresponding changes.\n+\t(h8300_expand_prologue): Likewise.\n+\t(h8300_swap_into_er6): Likewise.  Do not set RTX_FRAME_RELATED_P.\n+\t\t\n 2015-02-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/64957\n@@ -11,6 +20,7 @@\n \t* tree-ssa-loop-ivopts.c (get_shiftadd_cost): Use the mininum of costs\n \tof shift-add and (add + shift) operations.  Rename local variable.\n \n+\n 2015-02-05  Jeff Law  <law@redhat.com>\n \n \tPR target/17306"}, {"sha": "4e9110ecb7d9b6b0befea9db989ad6d53c367f12", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1901e8d621fca50bd6aa3f71f9b9b003ca448746/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1901e8d621fca50bd6aa3f71f9b9b003ca448746/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=1901e8d621fca50bd6aa3f71f9b9b003ca448746", "patch": "@@ -619,7 +619,7 @@ compute_saved_regs (void)\n /* Emit an insn to push register RN.  */\n \n static rtx\n-push (int rn)\n+push (int rn, bool in_prologue)\n {\n   rtx reg = gen_rtx_REG (word_mode, rn);\n   rtx x;\n@@ -630,7 +630,7 @@ push (int rn)\n     x = gen_push_h8300hs_advanced (reg);\n   else\n     x = gen_push_h8300hs_normal (reg);\n-  x = F (emit_insn (x), true);\n+  x = F (emit_insn (x), in_prologue);\n   add_reg_note (x, REG_INC, stack_pointer_rtx);\n   return x;\n }\n@@ -683,7 +683,7 @@ h8300_push_pop (int regno, int nregs, bool pop_p, bool return_p)\n       if (pop_p)\n \tpop (regno);\n       else\n-\tpush (regno);\n+\tpush (regno, false);\n       return;\n     }\n \n@@ -868,7 +868,7 @@ h8300_expand_prologue (void)\n   if (frame_pointer_needed)\n     {\n       /* Push fp.  */\n-      push (HARD_FRAME_POINTER_REGNUM);\n+      push (HARD_FRAME_POINTER_REGNUM, true);\n       F (emit_move_insn (hard_frame_pointer_rtx, stack_pointer_rtx), true);\n     }\n \n@@ -2757,7 +2757,7 @@ h8sx_emit_movmd (rtx dest, rtx src, rtx length,\n void\n h8300_swap_into_er6 (rtx addr)\n {\n-  rtx insn = push (HARD_FRAME_POINTER_REGNUM);\n+  rtx insn = push (HARD_FRAME_POINTER_REGNUM, false);\n   if (frame_pointer_needed)\n     add_reg_note (insn, REG_CFA_DEF_CFA,\n \t\t  plus_constant (Pmode, gen_rtx_MEM (Pmode, stack_pointer_rtx),\n@@ -2786,7 +2786,6 @@ h8300_swap_out_of_er6 (rtx addr)\n     emit_move_insn (addr, hard_frame_pointer_rtx);\n \n   insn = pop (HARD_FRAME_POINTER_REGNUM);\n-  RTX_FRAME_RELATED_P (insn) = 1;\n   if (frame_pointer_needed)\n     add_reg_note (insn, REG_CFA_DEF_CFA,\n \t\t  plus_constant (Pmode, hard_frame_pointer_rtx,"}]}