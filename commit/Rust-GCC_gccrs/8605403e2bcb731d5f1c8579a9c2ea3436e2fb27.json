{"sha": "8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYwNTQwM2UyYmNiNzMxZDVmMWM4NTc5YTljMmVhMzQzNmUyZmIyNw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-08-20T13:55:06Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-08-20T13:55:06Z"}, "message": "cgraphunit.c (ipa_passes, compile): Reshedule symtab_remove_unreachable_nodes passes; update comments.\n\n\t* cgraphunit.c (ipa_passes, compile): Reshedule\n\tsymtab_remove_unreachable_nodes passes; update comments.\n\t* ipa-inline.c (pass_data_ipa_inline): Do not schedule\n\tTODO_remove_functions before the pass; the functions ought to be\n\talready removed.\n\t* ipa.c (pass_data_ipa_free_inline_summary): Enable dump; schedule\n\tTODO_remove_functions.\n\t* passes.c (pass_data_early_local_passes): Do not schedule function\n\tremoval.\n\t(execute_one_pass): Fix call of symtab_remove_unreachable_nodes.\n\n\t* lto.c (read_cgraph_and_symbols): Fix symtab_remove_unreachable_nodes\n\tcall.\n\t(do_whole_program_analysis): Only sanity check that IPA passes cleans up.\n\n\t* testsuite/g++.dg/ipa/devirt-17.C: Update template.\n\t* testsuite/g++.dg/ipa/devirt-16.C: Update template.\n\nFrom-SVN: r214224", "tree": {"sha": "d02afd479c74875a28f01dba8b1c20718de3c062", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d02afd479c74875a28f01dba8b1c20718de3c062"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/comments", "author": null, "committer": null, "parents": [{"sha": "3ba421e8becbd17526a88ec76226d7213b96af14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba421e8becbd17526a88ec76226d7213b96af14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ba421e8becbd17526a88ec76226d7213b96af14"}], "stats": {"total": 62, "additions": 46, "deletions": 16}, "files": [{"sha": "2ce924fb3f0a21f50166ac29f5227dd7f44f3844", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "patch": "@@ -1,3 +1,16 @@\n+2014-08-20  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* cgraphunit.c (ipa_passes, compile): Reshedule\n+\tsymtab_remove_unreachable_nodes passes; update comments.\n+\t* ipa-inline.c (pass_data_ipa_inline): Do not schedule\n+\tTODO_remove_functions before the pass; the functions ought to be\n+\talready removed.\n+\t* ipa.c (pass_data_ipa_free_inline_summary): Enable dump; schedule\n+\tTODO_remove_functions.\n+\t* passes.c (pass_data_early_local_passes): Do not schedule function\n+\tremoval.\n+\t(execute_one_pass): Fix call of symtab_remove_unreachable_nodes.\n+\n 2014-08-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c/59304"}, {"sha": "20294b3845a4ad3fbdfb126e8defc9686f0e09b1", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "patch": "@@ -2047,10 +2047,8 @@ ipa_passes (void)\n \treturn;\n     }\n \n-  /* We never run removal of unreachable nodes after early passes.  This is\n-     because TODO is run before the subpasses.  It is important to remove\n-     the unreachable functions to save works at IPA level and to get LTO\n-     symbol tables right.  */\n+  /* This extra symtab_remove_unreachable_nodes pass tends to catch some\n+     devirtualization and other changes where removal iterate.  */\n   symtab_remove_unreachable_nodes (true, cgraph_dump_file);\n \n   /* If pass_all_early_optimizations was not scheduled, the state of\n@@ -2184,7 +2182,8 @@ compile (void)\n     }\n \n   /* This pass remove bodies of extern inline functions we never inlined.\n-     Do this later so other IPA passes see what is really going on.  */\n+     Do this later so other IPA passes see what is really going on.\n+     FIXME: This should be run just after inlining by pasmanager.  */\n   symtab_remove_unreachable_nodes (false, dump_file);\n   cgraph_global_info_ready = true;\n   if (cgraph_dump_file)\n@@ -2210,9 +2209,10 @@ compile (void)\n   cgraph_materialize_all_clones ();\n   bitmap_obstack_initialize (NULL);\n   execute_ipa_pass_list (g->get_passes ()->all_late_ipa_passes);\n-  symtab_remove_unreachable_nodes (true, dump_file);\n #ifdef ENABLE_CHECKING\n   symtab_node::verify_symtab_nodes ();\n+  /* Verify late IPA passes cleaned up after themselves.  */\n+  gcc_assert (!symtab_remove_unreachable_nodes (false, dump_file));\n #endif\n   bitmap_obstack_release (NULL);\n   mark_functions_to_output ();"}, {"sha": "314262b873eb9eca96e4df79e4e2ee9a44d7ff1e", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "patch": "@@ -2519,7 +2519,7 @@ const pass_data pass_data_ipa_inline =\n   0, /* properties_required */\n   0, /* properties_provided */\n   0, /* properties_destroyed */\n-  TODO_remove_functions, /* todo_flags_start */\n+  0, /* todo_flags_start */\n   ( TODO_dump_symtab ), /* todo_flags_finish */\n };\n "}, {"sha": "bf6b2d72e27ec759cb52b1ea414a235f2f70ba0a", "filename": "gcc/ipa.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Fipa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Fipa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa.c?ref=8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "patch": "@@ -727,14 +727,17 @@ namespace {\n const pass_data pass_data_ipa_free_inline_summary =\n {\n   SIMPLE_IPA_PASS, /* type */\n-  \"*free_inline_summary\", /* name */\n+  \"free-inline-summary\", /* name */\n   OPTGROUP_NONE, /* optinfo_flags */\n   TV_IPA_FREE_INLINE_SUMMARY, /* tv_id */\n   0, /* properties_required */\n   0, /* properties_provided */\n   0, /* properties_destroyed */\n   0, /* todo_flags_start */\n-  0, /* todo_flags_finish */\n+  /* Early optimizations may make function unreachable.  We can not\n+     remove unreachable functions as part of the ealry opts pass because\n+     TODOs are run before subpasses.  Do it here.  */\n+  ( TODO_remove_functions | TODO_dump_symtab ), /* todo_flags_finish */\n };\n \n class pass_ipa_free_inline_summary : public simple_ipa_opt_pass"}, {"sha": "f41992ae29e939d51e905c86689c272edeb73ce8", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "patch": "@@ -1,3 +1,9 @@\n+2014-08-20  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto.c (read_cgraph_and_symbols): Fix symtab_remove_unreachable_nodes\n+\tcall.\n+\t(do_whole_program_analysis): Only sanity check that IPA passes cleans up.\n+\n 2014-08-14  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto-symtab.c (lto_varpool_replace_node): Call compare_virtual_tables."}, {"sha": "f0e32613113586fcff91367ad566606cd81eb9b8", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "patch": "@@ -3084,10 +3084,10 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n       symtab_node::dump_table (cgraph_dump_file);\n     }\n   lto_symtab_merge_symbols ();\n-  /* Removal of unreacable symbols is needed to make verify_symtab to pass;\n+  /* Removal of unreachable symbols is needed to make verify_symtab to pass;\n      we are still having duplicated comdat groups containing local statics.\n      We could also just remove them while merging.  */\n-  symtab_remove_unreachable_nodes (false, dump_file);\n+  symtab_remove_unreachable_nodes (true, dump_file);\n   ggc_collect ();\n   cgraph_state = CGRAPH_STATE_IPA_SSA;\n \n@@ -3244,7 +3244,10 @@ do_whole_program_analysis (void)\n   cgraph_state = CGRAPH_STATE_IPA_SSA;\n \n   execute_ipa_pass_list (g->get_passes ()->all_regular_ipa_passes);\n-  symtab_remove_unreachable_nodes (false, dump_file);\n+#ifdef ENABLE_CHECKING\n+  /* Verify that IPA passes cleans up after themselves.  */\n+  gcc_assert (!symtab_remove_unreachable_nodes (false, dump_file));\n+#endif\n \n   if (cgraph_dump_file)\n     {"}, {"sha": "7e47992b67284bd0f856b6acfe8b6ed0b5a560da", "filename": "gcc/passes.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "patch": "@@ -350,7 +350,9 @@ const pass_data pass_data_early_local_passes =\n   0, /* properties_provided */\n   0, /* properties_destroyed */\n   0, /* todo_flags_start */\n-  TODO_remove_functions, /* todo_flags_finish */\n+  /* todo_flags_finish is executed before subpases. For this reason\n+     it makes no sense to remove unreachable functions here.  */\n+  0, /* todo_flags_finish */\n };\n \n class pass_early_local_passes : public simple_ipa_opt_pass\n@@ -2119,7 +2121,7 @@ execute_one_pass (opt_pass *pass)\n \t      }\n \t  }\n       if (applied)\n-        symtab_remove_unreachable_nodes (true, dump_file);\n+        symtab_remove_unreachable_nodes (false, dump_file);\n       /* Restore current_pass.  */\n       current_pass = pass;\n     }"}, {"sha": "de08c9a04a7ff50517a07954635dd9534b896ba8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "patch": "@@ -1,3 +1,8 @@\n+2014-08-20  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* testsuite/g++.dg/ipa/devirt-17.C: Update template.\n+\t* testsuite/g++.dg/ipa/devirt-16.C: Update template.\n+\n 2014-08-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c/59304"}, {"sha": "99a1ea6ec4cfb39284f1d08031ac61d4cba20dc8", "filename": "gcc/testsuite/g++.dg/ipa/devirt-16.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-16.C?ref=8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "patch": "@@ -32,7 +32,6 @@ main()\n   return b->foo();\n }\n \n-/* { dg-final { scan-ipa-dump \"devirtualizing\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump \"builtin_unreachable\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump-not \"A::foo\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump-not \"A::foo\" \"whole-program\"} } */"}, {"sha": "df10c481040417df61446e18a4a2b9c40d6e58fb", "filename": "gcc/testsuite/g++.dg/ipa/devirt-17.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8605403e2bcb731d5f1c8579a9c2ea3436e2fb27/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fdevirt-17.C?ref=8605403e2bcb731d5f1c8579a9c2ea3436e2fb27", "patch": "@@ -37,7 +37,6 @@ main()\n   return b->foo();\n }\n \n-/* { dg-final { scan-ipa-dump \"devirtualizing\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump-not \"builtin_unreachable\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump \"B::foo\" \"whole-program\"} } */\n /* { dg-final { scan-ipa-dump-not \"A::foo\" \"whole-program\"} } */"}]}