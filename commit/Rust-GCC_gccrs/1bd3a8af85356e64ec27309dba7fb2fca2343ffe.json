{"sha": "1bd3a8af85356e64ec27309dba7fb2fca2343ffe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJkM2E4YWY4NTM1NmU2NGVjMjczMDlkYmE3ZmIyZmNhMjM0M2ZmZQ==", "commit": {"author": {"name": "Alex Coplan", "email": "Alex.Coplan@arm.com", "date": "2020-05-05T09:33:02Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-05-05T09:40:24Z"}, "message": "aarch64: eliminate redundant zero extend after bitwise negation\n\nThe attached patch eliminates a redundant zero extend from the AArch64 backend. Given the following C code:\n\nunsigned long long foo(unsigned a)\n{\n    return ~a;\n}\n\nprior to this patch, AArch64 GCC at -O2 generates:\n\nfoo:\n        mvn     w0, w0\n        uxtw    x0, w0\n        ret\n\nbut the uxtw is redundant, since the mvn clears the upper half of the x0 register. After applying this patch, GCC at -O2 gives:\n\nfoo:\n        mvn     w0, w0\n        ret\n\nTesting:\n    Added regression test which passes after applying the change to aarch64.md.\n    Full bootstrap and regression on aarch64-linux with no additional failures.\n\n        * config/aarch64/aarch64.md (*one_cmpl_zero_extend): New.\n        * gcc.target/aarch64/mvn_zero_ext.c: New test.", "tree": {"sha": "82e6a35e4ea6ff96000b7046de3aae5c34d19091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82e6a35e4ea6ff96000b7046de3aae5c34d19091"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bd3a8af85356e64ec27309dba7fb2fca2343ffe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd3a8af85356e64ec27309dba7fb2fca2343ffe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bd3a8af85356e64ec27309dba7fb2fca2343ffe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bd3a8af85356e64ec27309dba7fb2fca2343ffe/comments", "author": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "144aee70b80de50f96a97ee64edd2f1c237c4906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/144aee70b80de50f96a97ee64edd2f1c237c4906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/144aee70b80de50f96a97ee64edd2f1c237c4906"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "6a419757bf897f8ecaf3930062ca5d80b1c6aa41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd3a8af85356e64ec27309dba7fb2fca2343ffe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd3a8af85356e64ec27309dba7fb2fca2343ffe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1bd3a8af85356e64ec27309dba7fb2fca2343ffe", "patch": "@@ -1,3 +1,7 @@\n+2020-05-05  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* config/aarch64/aarch64.md (*one_cmpl_zero_extend): New.\n+\n 2020-05-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/94800"}, {"sha": "ff15505d45546124868d2531b7f4e5b0f1f5bebc", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd3a8af85356e64ec27309dba7fb2fca2343ffe/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd3a8af85356e64ec27309dba7fb2fca2343ffe/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=1bd3a8af85356e64ec27309dba7fb2fca2343ffe", "patch": "@@ -4619,6 +4619,15 @@\n    (set_attr \"arch\" \"*,simd\")]\n )\n \n+(define_insn \"*one_cmpl_zero_extend\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (zero_extend:DI\n+          (not:SI (match_operand:SI 1 \"register_operand\" \"r\"))))]\n+  \"\"\n+  \"mvn\\\\t%w0, %w1\"\n+  [(set_attr \"type\" \"logic_reg\")]\n+)\n+\n (define_insn \"*one_cmpl_<optab><mode>2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(not:GPI (SHIFT:GPI (match_operand:GPI 1 \"register_operand\" \"r\")"}, {"sha": "e06bcf862123acda2bebcee804422aa22bc25050", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd3a8af85356e64ec27309dba7fb2fca2343ffe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd3a8af85356e64ec27309dba7fb2fca2343ffe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1bd3a8af85356e64ec27309dba7fb2fca2343ffe", "patch": "@@ -1,3 +1,7 @@\n+2020-05-05  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* gcc.target/aarch64/mvn_zero_ext.c: New test.\n+\n 2020-05-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/94800"}, {"sha": "3cd2a2fb9fb70dc2d362f7ba0b7170fbb792ae00", "filename": "gcc/testsuite/gcc.target/aarch64/mvn_zero_ext.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bd3a8af85356e64ec27309dba7fb2fca2343ffe/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmvn_zero_ext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bd3a8af85356e64ec27309dba7fb2fca2343ffe/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmvn_zero_ext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fmvn_zero_ext.c?ref=1bd3a8af85356e64ec27309dba7fb2fca2343ffe", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+/*\n+** foo:\n+**\tmvn\tw0, w0\n+**\tret\n+*/\n+unsigned long long\n+foo (unsigned a)\n+{\n+  return ~a;\n+}\n+\n+/* { dg-final { check-function-bodies \"**\" \"\" \"\" } } */"}]}