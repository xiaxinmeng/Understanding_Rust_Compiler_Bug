{"sha": "e56feed63f79d09e94d6ad97b6a9ed618d6e6234", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU2ZmVlZDYzZjc5ZDA5ZTk0ZDZhZDk3YjZhOWVkNjE4ZDZlNjIzNA==", "commit": {"author": {"name": "Robert Lipe", "email": "robertlipe@usa.net", "date": "2001-10-21T21:55:40Z"}, "committer": {"name": "Robert Lipe", "email": "robertl@gcc.gnu.org", "date": "2001-10-21T21:55:40Z"}, "message": "i386.c (sco_asm_named_section): Delete.\n\n\t* config/i386/i386.c (sco_asm_named_section): Delete.\n\t(sco_asm_out_constructor): Delete.\n\t* config/i386/sco5.h (ASM_QUAD): Undo damage from att.h.\n\t(ASM_OUTPUT_DOUBLE_INT): Likewise.\n\t(TARGET_ASM_CONSTRUCTOR): Delete.  Use default.\n\t(TARGET_ASM_NAMED_SECTION): Use default for ELF.\n\t(EXCEPTION_SECTION): Delete EH scn renaming hack.\n\nFrom-SVN: r46398", "tree": {"sha": "64d2fd1b732df5eb5127413d3e3e94f3d72a054b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64d2fd1b732df5eb5127413d3e3e94f3d72a054b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e56feed63f79d09e94d6ad97b6a9ed618d6e6234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56feed63f79d09e94d6ad97b6a9ed618d6e6234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56feed63f79d09e94d6ad97b6a9ed618d6e6234", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56feed63f79d09e94d6ad97b6a9ed618d6e6234/comments", "author": null, "committer": null, "parents": [{"sha": "0df6c2c74ea954f8e2a0ccdb85770f2f52d4942c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df6c2c74ea954f8e2a0ccdb85770f2f52d4942c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df6c2c74ea954f8e2a0ccdb85770f2f52d4942c"}], "stats": {"total": 50, "additions": 14, "deletions": 36}, "files": [{"sha": "e1fe57c939137415cde4ea64ef64e903c5fb417d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56feed63f79d09e94d6ad97b6a9ed618d6e6234/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56feed63f79d09e94d6ad97b6a9ed618d6e6234/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e56feed63f79d09e94d6ad97b6a9ed618d6e6234", "patch": "@@ -1,3 +1,13 @@\n+2001-10-21  Robert Lipe  <robertlipe@usa.net>\n+\n+\t* config/i386/i386.c (sco_asm_named_section): Delete.\n+\t(sco_asm_out_constructor): Delete.\n+\t* config/i386/sco5.h (ASM_QUAD): Undo damage from att.h.\n+\t(ASM_OUTPUT_DOUBLE_INT): Likewise.\n+\t(TARGET_ASM_CONSTRUCTOR): Delete.  Use default.\n+\t(TARGET_ASM_NAMED_SECTION): Use default for ELF.\n+\t(EXCEPTION_SECTION): Delete EH scn renaming hack.\n+\n 2001-10-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* c-format.c (maybe_read_dollar_number): Use safe-ctype macros"}, {"sha": "17319890eb76e4ac3c4a57c6811306edac81e339", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56feed63f79d09e94d6ad97b6a9ed618d6e6234/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56feed63f79d09e94d6ad97b6a9ed618d6e6234/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e56feed63f79d09e94d6ad97b6a9ed618d6e6234", "patch": "@@ -695,10 +695,7 @@ static tree ix86_handle_regparm_attribute PARAMS ((tree *, tree, tree, int, bool\n #ifdef DO_GLOBAL_CTORS_BODY\n static void ix86_svr3_asm_out_constructor PARAMS ((rtx, int));\n #endif\n-#if defined(TARGET_ELF) && defined(TARGET_COFF)\n-static void sco_asm_named_section PARAMS ((const char *, unsigned int));\n-static void sco_asm_out_constructor PARAMS ((rtx, int));\n-#endif\n+\n /* Register class used for passing given 64bit part of the argument.\n    These represent classes as documented by the PS ABI, with the exception\n    of SSESF, SSEDF classes, that are basically SSE class, just gcc will\n@@ -12456,27 +12453,3 @@ ix86_svr3_asm_out_constructor (symbol, priority)\n   fputc ('\\n', asm_out_file);\n }\n #endif\n-\n-#if defined(TARGET_ELF) && defined(TARGET_COFF)\n-static void\n-sco_asm_named_section (name, flags)\n-     const char *name;\n-     unsigned int flags;\n-{\n-  if (TARGET_ELF)\n-    default_elf_asm_named_section (name, flags);\n-  else\n-    default_coff_asm_named_section (name, flags);\n-}\n-\n-static void\n-sco_asm_out_constructor (symbol, priority)\n-     rtx symbol;\n-     int priority;\n-{\n-  if (TARGET_ELF)\n-    default_named_section_asm_out_constrctor (symbol, priority);\n-  else\n-    ix86_svr3_asm_out_constructor (symbol, priority);\n-}\n-#endif"}, {"sha": "ca7d6c8b88de844e92be31262a971da85c89697c", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56feed63f79d09e94d6ad97b6a9ed618d6e6234/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56feed63f79d09e94d6ad97b6a9ed618d6e6234/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=e56feed63f79d09e94d6ad97b6a9ed618d6e6234", "patch": "@@ -60,7 +60,7 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_LONG\t\t\t\"\\t.long\\t\"\n \n #undef ASM_QUAD\n-#define ASM_QUAD \"\\t.quad\\t\"  /* Should not be used for 32bit compilation.  */\n+#undef ASM_OUTPUT_DOUBLE_INT\n \n #undef TYPE_ASM_OP\n #define TYPE_ASM_OP\t\t\t\"\\t.type\\t\"\n@@ -384,9 +384,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n   ASM_OUTPUT_INTERNAL_LABEL((FILE),(PREFIX),(NUM));\t\t\t\\\n } while (0)\n \n-#undef TARGET_ASM_CONSTRUCTOR\n-#define TARGET_ASM_CONSTRUCTOR sco_asm_out_constructor\n-\n #undef ASM_OUTPUT_IDENT\n #define ASM_OUTPUT_IDENT(FILE, NAME) \\\n   fprintf (FILE, \"%s\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME);\n@@ -412,11 +409,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n  * We rename 'gcc_except_table' to the shorter name in preparation\n  * for the day when we're ready to do DWARF2 eh unwinding under COFF.\n  */\n-#define EXCEPTION_SECTION()\t\tnamed_section (NULL, \".gccexc\", 1)\n+/* #define EXCEPTION_SECTION()\t\tnamed_section (NULL, \".gccexc\", 1) */\n \n /* Switch into a generic section.  */\n-#undef TARGET_ASM_NAMED_SECTION\n-#define TARGET_ASM_NAMED_SECTION  sco_asm_named_section\n+#define TARGET_ASM_NAMED_SECTION default_elf_asm_named_section \n \n #undef ASM_OUTPUT_SKIP\n #define ASM_OUTPUT_SKIP(FILE,SIZE) \\\n@@ -775,7 +771,6 @@ init_section ()\t\t\t\t\t\t\t\t\\\n  \"%{!shared:-lgcc}\"\n \n #define MASK_COFF     \t\t010000000000\t/* Mask for elf generation */\n-#define TARGET_COFF             (target_flags & MASK_COFF)\n #define TARGET_ELF              (1) /* (!(target_flags & MASK_COFF)) */\n \n #undef SUBTARGET_SWITCHES"}]}