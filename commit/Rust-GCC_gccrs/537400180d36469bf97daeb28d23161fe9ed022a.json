{"sha": "537400180d36469bf97daeb28d23161fe9ed022a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM3NDAwMTgwZDM2NDY5YmY5N2RhZWIyOGQyMzE2MWZlOWVkMDIyYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-05T16:24:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-05T16:24:43Z"}, "message": "re PR target/84564 (error: unable to find a register to spill with -mforce-indirect-call)\n\n\tPR target/84564\n\t* config/i386/i386.c (ix86_function_ok_for_sibcall): Check for\n\tregparm >= 3 with no arg reg available also for calls with\n\tflag_force_indirect_call.  Pass decl to ix86_function_regparm.\n\n\t* gcc.target/i386/pr84564.c: New test.\n\nFrom-SVN: r258256", "tree": {"sha": "4d83d3726e4fba22de7c4e2671152fd8e8eb1ebb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d83d3726e4fba22de7c4e2671152fd8e8eb1ebb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/537400180d36469bf97daeb28d23161fe9ed022a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537400180d36469bf97daeb28d23161fe9ed022a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/537400180d36469bf97daeb28d23161fe9ed022a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537400180d36469bf97daeb28d23161fe9ed022a/comments", "author": null, "committer": null, "parents": [{"sha": "a2460abb82e2fd3c45edf5e9f4ff61151ef8d815", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2460abb82e2fd3c45edf5e9f4ff61151ef8d815", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2460abb82e2fd3c45edf5e9f4ff61151ef8d815"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "1d1ef6e850eb1807bec7a27bf37551a9d8eb884e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537400180d36469bf97daeb28d23161fe9ed022a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537400180d36469bf97daeb28d23161fe9ed022a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=537400180d36469bf97daeb28d23161fe9ed022a", "patch": "@@ -1,5 +1,10 @@\n 2018-03-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/84564\n+\t* config/i386/i386.c (ix86_function_ok_for_sibcall): Check for\n+\tregparm >= 3 with no arg reg available also for calls with\n+\tflag_force_indirect_call.  Pass decl to ix86_function_regparm.\n+\n \tPR target/84524\n \t* config/i386/sse.md (*<code><mode>3): Replace <mask_prefix3> with\n \torig,vex."}, {"sha": "e352303ca2fce00599578f2e187a82c20e83b6a7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537400180d36469bf97daeb28d23161fe9ed022a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537400180d36469bf97daeb28d23161fe9ed022a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=537400180d36469bf97daeb28d23161fe9ed022a", "patch": "@@ -6415,7 +6415,8 @@ ix86_function_ok_for_sibcall (tree decl, tree exp)\n \t function via GOT slot are indirect.  */\n       if (!decl\n \t  || (bind_global && flag_pic && !flag_plt)\n-\t  || (TARGET_DLLIMPORT_DECL_ATTRIBUTES && DECL_DLLIMPORT_P (decl)))\n+\t  || (TARGET_DLLIMPORT_DECL_ATTRIBUTES && DECL_DLLIMPORT_P (decl))\n+\t  || flag_force_indirect_call)\n \t{\n \t  /* Check if regparm >= 3 since arg_reg_available is set to\n \t     false if regparm == 0.  If regparm is 1 or 2, there is\n@@ -6424,7 +6425,7 @@ ix86_function_ok_for_sibcall (tree decl, tree exp)\n \t     ??? The symbol indirect call doesn't need a call-clobbered\n \t     register.  But we don't know if this is a symbol indirect\n \t     call or not here.  */\n-\t  if (ix86_function_regparm (type, NULL) >= 3\n+\t  if (ix86_function_regparm (type, decl) >= 3\n \t      && !cfun->machine->arg_reg_available)\n \t    return false;\n \t}"}, {"sha": "e80a72802eeda6a7f6bdfd9acb42ca8c1b8988e8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537400180d36469bf97daeb28d23161fe9ed022a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537400180d36469bf97daeb28d23161fe9ed022a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=537400180d36469bf97daeb28d23161fe9ed022a", "patch": "@@ -1,3 +1,8 @@\n+2018-03-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/84564\n+\t* gcc.target/i386/pr84564.c: New test.\n+\n 2018-03-05  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/84707\n@@ -4234,7 +4239,7 @@\n \n \tPR fortran/84141\n \tPR fortran/84155\n-\t* gfortran.dg/pr84155.f90 : New test.\n+\t* gfortran.dg/pr84155.f90: New test.\n \n 2017-02-02  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -4493,7 +4498,7 @@\n 2018-01-31  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/84088\n-\t* gfortran.dg/pr84088.f90 : New test.\n+\t* gfortran.dg/pr84088.f90: New test.\n \n 2018-01-31  Vladimir Makarov  <vmakarov@redhat.com>\n "}, {"sha": "f311ebd1ff3611e9da6742fefb645e1245133d7d", "filename": "gcc/testsuite/gcc.target/i386/pr84564.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537400180d36469bf97daeb28d23161fe9ed022a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84564.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537400180d36469bf97daeb28d23161fe9ed022a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84564.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr84564.c?ref=537400180d36469bf97daeb28d23161fe9ed022a", "patch": "@@ -0,0 +1,21 @@\n+/* PR target/84564 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mforce-indirect-call\" } */\n+\n+int a, b, c, d;\n+int foo (void);\n+\n+static int\n+bar (int x, int y, int z)\n+{\n+  while (a)\n+    if (foo ())\n+      bar (x, y, z);\n+  return 0;\n+}\n+\n+int\n+baz (void)\n+{\n+  return bar (b, c, d);\n+}"}]}