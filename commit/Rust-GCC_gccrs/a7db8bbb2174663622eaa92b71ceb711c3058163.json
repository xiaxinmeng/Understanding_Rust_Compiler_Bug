{"sha": "a7db8bbb2174663622eaa92b71ceb711c3058163", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdkYjhiYmIyMTc0NjYzNjIyZWFhOTJiNzFjZWI3MTFjMzA1ODE2Mw==", "commit": {"author": {"name": "Mumit Khan", "email": "khan@xraylith.wisc.edu", "date": "2000-02-26T05:39:13Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-02-26T05:39:13Z"}, "message": "protoize.c: (AUX_INFO_SUFFIX): New macro.\n\n        * protoize.c: (AUX_INFO_SUFFIX): New macro.\n        (aux_info_suffix): Use.\n        (SAVE_SUFFIX): New macro.\n        (save_suffix): Use.\n        (munge_compile_parms): Fix typo in NUL. DJGPP supports /dev/null.\n        (gen_aux_info_file): Use aux_info_suffix instead of \".X\".\n        (edit_file): Handle 8.3 restriction for DOS/DJGPP filenames.\n\n        * invoke.texi (Running Protoize): Update documentation.\n\nFrom-SVN: r32170", "tree": {"sha": "577e951a289f0b7137b32fc75a37818187a8a0af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/577e951a289f0b7137b32fc75a37818187a8a0af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7db8bbb2174663622eaa92b71ceb711c3058163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7db8bbb2174663622eaa92b71ceb711c3058163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7db8bbb2174663622eaa92b71ceb711c3058163", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7db8bbb2174663622eaa92b71ceb711c3058163/comments", "author": null, "committer": null, "parents": [{"sha": "3431f196c04ff06ff8fef740e46612c176fb73eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3431f196c04ff06ff8fef740e46612c176fb73eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3431f196c04ff06ff8fef740e46612c176fb73eb"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "706fce87e1420ffa4e917b41275866b349db043f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7db8bbb2174663622eaa92b71ceb711c3058163/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7db8bbb2174663622eaa92b71ceb711c3058163/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7db8bbb2174663622eaa92b71ceb711c3058163", "patch": "@@ -1,3 +1,15 @@\n+2000-02-25  Mumit Khan  <khan@xraylith.wisc.edu>\n+\n+\t* protoize.c: (AUX_INFO_SUFFIX): New macro.\n+\t(aux_info_suffix): Use.\n+\t(SAVE_SUFFIX): New macro.\n+\t(save_suffix): Use.\n+\t(munge_compile_parms): Fix typo in NUL. DJGPP supports /dev/null.\n+\t(gen_aux_info_file): Use aux_info_suffix instead of \".X\".\n+\t(edit_file): Handle 8.3 restriction for DOS/DJGPP filenames.\n+\n+\t* invoke.texi (Running Protoize): Update documentation.\n+\n 2000-02-25 Mark Elbrecht <snowball3@bigfoot.com>\n \n \t* i386/djgpp.h (CPP_PREDEFINES): Remove Unix defines."}, {"sha": "c2343b09b943ab91633d0e728cf3d1d1296582fc", "filename": "gcc/invoke.texi", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7db8bbb2174663622eaa92b71ceb711c3058163/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7db8bbb2174663622eaa92b71ceb711c3058163/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=a7db8bbb2174663622eaa92b71ceb711c3058163", "patch": "@@ -7525,8 +7525,9 @@ with @samp{-q}.\n \n The output from @code{protoize} or @code{unprotoize} replaces the\n original source file.  The original file is renamed to a name ending\n-with @samp{.save}.  If the @samp{.save} file already exists, then\n-the source file is simply discarded.\n+with @samp{.save} (for DOS, the saved filename ends in @samp{.sav} \n+without the original @samp{.c} suffix).  If the @samp{.save} (@samp{.sav}\n+for DOS) file already exists, then the source file is simply discarded.\n \n @code{protoize} and @code{unprotoize} both depend on GCC itself to\n scan the program and collect information about the functions it uses.\n@@ -7559,8 +7560,8 @@ would produce the wrong kind of output.  These include @samp{-g},\n the @var{compilation-options}, they are ignored.\n \n @item -C\n-Rename files to end in @samp{.C}, or @samp{.cc} for DOS-based file\n-systems, instead of @samp{.c}.  This is convenient if you are converting \n+Rename files to end in @samp{.C} (@samp{.cc} for DOS-based file\n+systems) instead of @samp{.c}.  This is convenient if you are converting \n a C program to C++.  This option applies only to @code{protoize}.\n \n @item -g"}, {"sha": "02950f86419c1f3ddd52feb9b2849e4987b8db84", "filename": "gcc/protoize.c", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7db8bbb2174663622eaa92b71ceb711c3058163/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7db8bbb2174663622eaa92b71ceb711c3058163/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=a7db8bbb2174663622eaa92b71ceb711c3058163", "patch": "@@ -47,6 +47,20 @@ Boston, MA 02111-1307, USA.  */\n #define IS_SAME_PATH(a,b) (strcmp (a, b) == 0)\n #endif\n \n+/* Suffix for aux-info files.  */\n+#ifdef __MSDOS__\n+#define AUX_INFO_SUFFIX \"X\"\n+#else\n+#define AUX_INFO_SUFFIX \".X\"\n+#endif\n+\n+/* Suffix for saved files.  */\n+#ifdef __MSDOS__\n+#define SAVE_SUFFIX \"sav\"\n+#else\n+#define SAVE_SUFFIX \".save\"\n+#endif\n+\n /* Suffix for renamed C++ files.  */\n #ifdef HAVE_DOS_BASED_FILE_SYSTEM\n #define CPLUS_FILE_SUFFIX \"cc\"\n@@ -117,11 +131,11 @@ static const char * const target_version = DEFAULT_TARGET_VERSION;\n \n /* Suffix of aux_info files.  */\n \n-static const char * const aux_info_suffix = \".X\";\n+static const char * const aux_info_suffix = AUX_INFO_SUFFIX;\n \n /* String to attach to filenames for saved versions of original files.  */\n \n-static const char * const save_suffix = \".save\";\n+static const char * const save_suffix = SAVE_SUFFIX;\n \n /* String to attach to C filenames renamed to C++.  */\n \n@@ -1983,8 +1997,8 @@ munge_compile_params (params_list)\n \n   temp_params[param_count++] = \"-S\";\n   temp_params[param_count++] = \"-o\";\n-#if defined (__MSDOS__) || (defined (_WIN32) && ! defined (__CYGWIN__) && ! defined (_UWIN))\n-  temp_params[param_count++] = \"NUL:\";\n+#if defined (_WIN32) && ! defined (__CYGWIN__) && ! defined (_UWIN)\n+  temp_params[param_count++] = \"NUL\";\n #else\n   temp_params[param_count++] = \"/dev/null\";\n #endif\n@@ -2018,7 +2032,7 @@ gen_aux_info_file (base_filename)\n   compile_params[input_file_name_index] = shortpath (NULL, base_filename);\n   /* Add .X to source file name to get aux-info file name.  */\n   compile_params[aux_info_file_name_index] =\n-    concat (compile_params[input_file_name_index], \".X\", NULL);\n+    concat (compile_params[input_file_name_index], aux_info_suffix, NULL);\n   \n   if (!quiet_flag)\n     notice (\"%s: compiling `%s'\\n\",\n@@ -4316,6 +4330,11 @@ edit_file (hp)\n \t= (char *) xmalloc (strlen (convert_filename) + strlen (save_suffix) + 2);\n   \n       strcpy (new_filename, convert_filename);\n+#ifdef __MSDOS__\n+      /* MSDOS filenames are restricted to 8.3 format, so we save `foo.c'\n+         as `foo.<save_suffix>'.  */\n+      new_filename[(strlen (convert_filename) - 1] = '\\0';\n+#endif\n       strcat (new_filename, save_suffix);\n \n       /* Don't overwrite existing file.  */"}]}