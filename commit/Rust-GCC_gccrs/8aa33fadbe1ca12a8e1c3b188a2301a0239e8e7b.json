{"sha": "8aa33fadbe1ca12a8e1c3b188a2301a0239e8e7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFhMzNmYWRiZTFjYTEyYThlMWMzYjE4OGEyMzAxYTAyMzllOGU3Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-01-28T09:53:39Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-01-28T09:53:39Z"}, "message": "re PR libstdc++/64798 (g++.old-deja/g++.eh/badalloc1.C FAILs)\n\n2015-01-28  Richard Biener  <rguenther@suse.de>\n\n\tPR libstdc++/64798\n\t* libsupc++/eh_alloc.cc (struct allocated_entry): Align\n\tdata member.\n\t(pool::allocate): Adjust allocation size and alignment to\n\tthat change.\n\t(pool::free): Adjust pointer offsetting.\n\nFrom-SVN: r220201", "tree": {"sha": "928d9bf3a2c8f257cd9c7177c6402c44b98d91a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/928d9bf3a2c8f257cd9c7177c6402c44b98d91a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8aa33fadbe1ca12a8e1c3b188a2301a0239e8e7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa33fadbe1ca12a8e1c3b188a2301a0239e8e7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aa33fadbe1ca12a8e1c3b188a2301a0239e8e7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aa33fadbe1ca12a8e1c3b188a2301a0239e8e7b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de5bcff3bcce9ccb415e354415825c2ad7f03316", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5bcff3bcce9ccb415e354415825c2ad7f03316", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de5bcff3bcce9ccb415e354415825c2ad7f03316"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "865e79b48da9eea539c6cd2d4a7f1cd04181bdaa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa33fadbe1ca12a8e1c3b188a2301a0239e8e7b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa33fadbe1ca12a8e1c3b188a2301a0239e8e7b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8aa33fadbe1ca12a8e1c3b188a2301a0239e8e7b", "patch": "@@ -1,3 +1,12 @@\n+2015-01-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR libstdc++/64798\n+\t* libsupc++/eh_alloc.cc (struct allocated_entry): Align\n+\tdata member.\n+\t(pool::allocate): Adjust allocation size and alignment to\n+\tthat change.\n+\t(pool::free): Adjust pointer offsetting.\n+\n 2015-01-27  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/64368"}, {"sha": "7ddd2b746d83d8da9653c6b876ec41bd80004f10", "filename": "libstdc++-v3/libsupc++/eh_alloc.cc", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aa33fadbe1ca12a8e1c3b188a2301a0239e8e7b/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aa33fadbe1ca12a8e1c3b188a2301a0239e8e7b/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc?ref=8aa33fadbe1ca12a8e1c3b188a2301a0239e8e7b", "patch": "@@ -94,7 +94,7 @@ namespace\n       };\n       struct allocated_entry {\n \tstd::size_t size;\n-\tchar data[];\n+\tchar data[] __attribute__((aligned));\n       };\n \n       // A single mutex controlling emergency allocations.\n@@ -133,17 +133,18 @@ namespace\n   void *pool::allocate (std::size_t size)\n     {\n       __gnu_cxx::__scoped_lock sentry(emergency_mutex);\n-      // We need an additional size_t member.\n-      size += sizeof (std::size_t);\n+      // We need an additional size_t member plus the padding to\n+      // ensure proper alignment of data.\n+      size += offsetof (allocated_entry, data);\n       // And we need to at least hand out objects of the size of\n       // a freelist entry.\n       if (size < sizeof (free_entry))\n \tsize = sizeof (free_entry);\n-      // And we need to align objects we hand out to the required\n-      // alignment of a freelist entry (this really aligns the\n+      // And we need to align objects we hand out to the maximum\n+      // alignment required on the target (this really aligns the\n       // tail which will become a new freelist entry).\n-      size = ((size + __alignof__(free_entry) - 1)\n-\t      & ~(__alignof__(free_entry) - 1));\n+      size = ((size + __alignof__ (allocated_entry::data) - 1)\n+\t      & ~(__alignof__ (allocated_entry::data) - 1));\n       // Search for an entry of proper size on the freelist.\n       free_entry **e;\n       for (e = &first_free_entry;\n@@ -185,7 +186,7 @@ namespace\n     {\n       __gnu_cxx::__scoped_lock sentry(emergency_mutex);\n       allocated_entry *e = reinterpret_cast <allocated_entry *>\n-\t(reinterpret_cast <char *> (data) - sizeof (std::size_t));\n+\t(reinterpret_cast <char *> (data) - offsetof (allocated_entry, data));\n       std::size_t sz = e->size;\n       if (!first_free_entry)\n \t{"}]}