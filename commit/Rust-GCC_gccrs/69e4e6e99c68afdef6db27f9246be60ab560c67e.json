{"sha": "69e4e6e99c68afdef6db27f9246be60ab560c67e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjllNGU2ZTk5YzY4YWZkZWY2ZGIyN2Y5MjQ2YmU2MGFiNTYwYzY3ZQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2003-10-30T23:50:53Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2003-10-30T23:50:53Z"}, "message": "function.c (purge_addressof_1): Add case for REG_RETVAL notes when modes are unequal.\n\n2003-10-25  Eric Christopher  <echristo@redhat.com>\n\n\t* function.c (purge_addressof_1): Add case for REG_RETVAL\n        notes when modes are unequal.\n\nFrom-SVN: r73107", "tree": {"sha": "face29257a5d20369e64e42ff522a23a4e89bbd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/face29257a5d20369e64e42ff522a23a4e89bbd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69e4e6e99c68afdef6db27f9246be60ab560c67e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e4e6e99c68afdef6db27f9246be60ab560c67e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69e4e6e99c68afdef6db27f9246be60ab560c67e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e4e6e99c68afdef6db27f9246be60ab560c67e/comments", "author": null, "committer": null, "parents": [{"sha": "ac3ef3f5060c4bb2c8bfc6290a46336b1248c2d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac3ef3f5060c4bb2c8bfc6290a46336b1248c2d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac3ef3f5060c4bb2c8bfc6290a46336b1248c2d5"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "f62a3495b6bf4fb70e7baabca54ddc958fb584e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e4e6e99c68afdef6db27f9246be60ab560c67e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e4e6e99c68afdef6db27f9246be60ab560c67e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69e4e6e99c68afdef6db27f9246be60ab560c67e", "patch": "@@ -1,3 +1,8 @@\n+2003-10-25  Eric Christopher  <echristo@redhat.com>\n+\n+\t* function.c (purge_addressof_1): Add case for REG_RETVAL\n+        notes when modes are unequal.\n+\n 2003-10-31  Jan Hubicka  <jh@suse.cz>\n \n \t* i386-modes.def: Add XFmode format adjustment.\n@@ -60,9 +65,9 @@\n \tnot necessarily because of __builtin_return_addr (0).\n \t(s390_split_branches): Remove TEMP_REG and TEMP_USED arguments,\n \tremove special handling of zSeries machines.\n-\t(s390_optimize_prolog): Remove TEMP_USED argument, treat the return \n+\t(s390_optimize_prolog): Remove TEMP_USED argument, treat the return\n \tregister as a regular register on zSeries machines.\n-\t(s390_reorg): Adjust calls to s390_split_branches and \n+\t(s390_reorg): Adjust calls to s390_split_branches and\n \ts390_optimize_prolog.\n \t(s390_frame_info): On zSeries machines, do not assume the return\n \tregister is always used.  Update regs_ever_live with current data\n@@ -97,14 +102,14 @@\n \t* target.h (struct gcc_target): Add build_builtin_va_list.\n \t* tree.c (build_common_tree_nodes_2): Use it.\n \n-\t* config/alpha/alpha-protos.h, config/alpha/alpha.c, \n+\t* config/alpha/alpha-protos.h, config/alpha/alpha.c,\n \tconfig/alpha/alpha.h, config/alpha/unicosmk.h,\n \tconfig/d30v/d30v-protos.h, config/d30v/d30v.c, config/d30v/d30v.h,\n \tconfig/i386/i386-protos.h, config/i386/i386.c, config/i386/i386.h,\n \tconfig/i860/i860-protos.h, config/i860/i860.c, config/i860/i860.h,\n \tconfig/i960/i960-protos.h, config/i960/i960.c, config/i960/i960.h,\n \tconfig/mips/iris6.h, config/mips/mips-protos.h, config/mips/mips.c,\n-\tconfig/mips/mips.h, config/rs6000/rs6000-protos.h, \n+\tconfig/mips/mips.h, config/rs6000/rs6000-protos.h,\n \tconfig/rs6000/rs6000.c, config/rs6000/rs6000.h,\n \tconfig/s390/s390-protos.h, config/s390/s390.c, config/s390/s390.h,\n \tconfig/sh/sh-protos.h, config/sh/sh.c, config/sh/sh.h,"}, {"sha": "c2f320245e1428ce5dba7d2c42d2db2e1624a58a", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e4e6e99c68afdef6db27f9246be60ab560c67e/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e4e6e99c68afdef6db27f9246be60ab560c67e/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=69e4e6e99c68afdef6db27f9246be60ab560c67e", "patch": "@@ -3085,7 +3085,10 @@ purge_addressof_1 (rtx *loc, rtx insn, int force, int store, int may_postpone,\n \t\t\t subregs.  */\n \t\t      || (GET_MODE_SIZE (GET_MODE (x)) > UNITS_PER_WORD\n \t\t\t  && (GET_MODE_SIZE (GET_MODE (x))\n-\t\t\t      > GET_MODE_SIZE (GET_MODE (sub)))))\n+\t\t\t      > GET_MODE_SIZE (GET_MODE (sub))))\n+\t\t      || (GET_MODE_SIZE (GET_MODE (x))\n+\t\t\t  < GET_MODE_SIZE (GET_MODE (sub))))\n+\n \t\t    {\n \t\t      *loc = gen_rtx_SUBREG (GET_MODE (x), sub, 0);\n \t\t      return true;"}]}