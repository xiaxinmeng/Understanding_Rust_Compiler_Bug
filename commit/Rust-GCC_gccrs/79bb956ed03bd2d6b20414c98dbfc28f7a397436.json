{"sha": "79bb956ed03bd2d6b20414c98dbfc28f7a397436", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzliYjk1NmVkMDNiZDJkNmIyMDQxNGM5OGRiZmMyOGY3YTM5NzQzNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-04-17T03:43:01Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-04-17T03:43:01Z"}, "message": "re PR c++/21025 (ICE on template)\n\n\tPR c++/21025\n\t* typeck.c (cxx_sizeof_or_alignof_type): Check whether the type to\n\twhich sizeof/alignof is dependent, rather than just whether we are\n\tprocessing_template_decl.\n\n\tPR c++/21025\n\t* g++.dg/template/sizeof9.C: New test.\n\nFrom-SVN: r98252", "tree": {"sha": "e23eef57589c8ba91faf6477714d376dd099eb9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e23eef57589c8ba91faf6477714d376dd099eb9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79bb956ed03bd2d6b20414c98dbfc28f7a397436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79bb956ed03bd2d6b20414c98dbfc28f7a397436", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79bb956ed03bd2d6b20414c98dbfc28f7a397436", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79bb956ed03bd2d6b20414c98dbfc28f7a397436/comments", "author": null, "committer": null, "parents": [{"sha": "2f3580376486a962824b45a2309c6c572f92997b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f3580376486a962824b45a2309c6c572f92997b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f3580376486a962824b45a2309c6c572f92997b"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "81e75b9148d41da4e17388ae22b1ee8c6493a035", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79bb956ed03bd2d6b20414c98dbfc28f7a397436/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79bb956ed03bd2d6b20414c98dbfc28f7a397436/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=79bb956ed03bd2d6b20414c98dbfc28f7a397436", "patch": "@@ -1,3 +1,10 @@\n+2005-04-16  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/21025\n+\t* typeck.c (cxx_sizeof_or_alignof_type): Check whether the type to\n+\twhich sizeof/alignof is dependent, rather than just whether we are\n+\tprocessing_template_decl.\n+\t\n 2005-04-17  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* cp-tree.h (LOOKUP_GLOBAL): Remove."}, {"sha": "6ccffe1ceeb6c093068cb8710a35eeb6d8055b73", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79bb956ed03bd2d6b20414c98dbfc28f7a397436/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79bb956ed03bd2d6b20414c98dbfc28f7a397436/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=79bb956ed03bd2d6b20414c98dbfc28f7a397436", "patch": "@@ -1221,7 +1221,7 @@ cxx_sizeof_or_alignof_type (tree type, enum tree_code op, bool complain)\n   if (type == error_mark_node)\n     return error_mark_node;\n   \n-  if (processing_template_decl)\n+  if (dependent_type_p (type))\n     {\n       value = build_min (op, size_type_node, type);\n       TREE_READONLY (value) = 1;"}, {"sha": "f9b274dcca6d1c87f0e5e88213f62e6acd303784", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79bb956ed03bd2d6b20414c98dbfc28f7a397436/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79bb956ed03bd2d6b20414c98dbfc28f7a397436/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79bb956ed03bd2d6b20414c98dbfc28f7a397436", "patch": "@@ -1,3 +1,10 @@\n+2005-04-16  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/21025\n+\t* typeck.c (cxx_sizeof_or_alignof_type): Check whether the type to\n+\twhich sizeof/alignof is dependent, rather than just whether we are\n+\tprocessing_template_decl.\n+\t\n 2005-04-15  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \t* gfortran.fortran-torture/execute/intrinsic_spread.f90:"}, {"sha": "8d9ec95ae1f030ca0f665caa6c29e2d7219e49cb", "filename": "gcc/testsuite/g++.dg/template/sizeof9.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79bb956ed03bd2d6b20414c98dbfc28f7a397436/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79bb956ed03bd2d6b20414c98dbfc28f7a397436/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof9.C?ref=79bb956ed03bd2d6b20414c98dbfc28f7a397436", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/21025\n+\n+template<int N> struct X { char x[N]; };\n+template<typename T> X<1 + sizeof(T) - sizeof(T)> F(T const &);\n+template<int N> struct S { int d() { F(1); } };\n+"}]}