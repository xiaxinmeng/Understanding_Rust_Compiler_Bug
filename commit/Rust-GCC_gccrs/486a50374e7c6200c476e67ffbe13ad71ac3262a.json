{"sha": "486a50374e7c6200c476e67ffbe13ad71ac3262a", "node_id": "C_kwDOANBUbNoAKDQ4NmE1MDM3NGU3YzYyMDBjNDc2ZTY3ZmZiZTEzYWQ3MWFjMzI2MmE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-27T00:18:35Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-27T00:18:35Z"}, "message": "Daily bump.", "tree": {"sha": "56da37099487e3fb956b18e689a09e7a4b3eccbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56da37099487e3fb956b18e689a09e7a4b3eccbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/486a50374e7c6200c476e67ffbe13ad71ac3262a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486a50374e7c6200c476e67ffbe13ad71ac3262a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/486a50374e7c6200c476e67ffbe13ad71ac3262a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486a50374e7c6200c476e67ffbe13ad71ac3262a/comments", "author": null, "committer": null, "parents": [{"sha": "57bbf3a403bb1e77c5081dc25d2d54e5c3d5aae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57bbf3a403bb1e77c5081dc25d2d54e5c3d5aae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57bbf3a403bb1e77c5081dc25d2d54e5c3d5aae4"}], "stats": {"total": 263, "additions": 262, "deletions": 1}, "files": [{"sha": "f9052da2f972cc4867af79bffc017c9259f469ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=486a50374e7c6200c476e67ffbe13ad71ac3262a", "patch": "@@ -1,3 +1,149 @@\n+2022-10-26  David Faust  <david.faust@oracle.com>\n+\n+\t* config/bpf/bpf.cc: Support __builtin_preserve_field_info.\n+\t(enum bpf_builtins): Add new builtin.\n+\t(bpf_init_builtins): Likewise.\n+\t(bpf_core_field_info): New function.\n+\t(bpf_expand_builtin): Accomodate new builtin. Refactor adding new\n+\trelocation to...\n+\t(maybe_make_core_relo): ... here. New function.\n+\t(bpf_resolve_overloaded_builtin): Accomodate new builtin.\n+\t(bpf_core_newdecl): Likewise.\n+\t(bpf_core_walk): Likewise.\n+\t(bpf_core_is_maybe_aggregate_access): Improve logic.\n+\t(struct core_walk_data): New.\n+\t* config/bpf/coreout.cc (bpf_core_reloc_add): Allow adding different\n+\trelocation kinds.\n+\t* config/bpf/coreout.h: Analogous change.\n+\t* doc/extend.texi: Document BPF __builtin_preserve_field_info.\n+\n+2022-10-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106393\n+\t* doc/invoke.texi: Document -Wdangling-reference.\n+\n+2022-10-26  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/xtensa.md (movdi):\n+\tCopy operands[0...1] to ops[0...3] and then use the latter before\n+\tcalling xtensa_split_DI_reg_imm() and emitting insns.\n+\n+2022-10-26  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\tPR other/107353\n+\t* ipa-visibility.cc (function_and_variable_visibility):\n+\tConditionally upgrade TLS model instead of asserting.\n+\n+2022-10-26  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\t* gimple-range-fold.cc (fold_using_range::fold_stmt): Check if\n+\tstmt is non-negative and adjust the range.\n+\n+2022-10-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* common/config/i386/cpuinfo.h (has_cpu_feature): Add comment.\n+\t(reset_cpu_feature): New.\n+\t(get_zhaoxin_cpu): Use reset_cpu_feature.\n+\n+2022-10-26  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config/riscv/riscv.cc (riscv_expand_epilogue): Fix statement.\n+\n+2022-10-26  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\tPR target/107357\n+\t* config/riscv/riscv-modes.def (VECTOR_BOOL_MODE): Set to minimum size.\n+\t(ADJUST_NUNITS): Adjust according to -march.\n+\t(ADJUST_BYTESIZE): Ditto.\n+\t* config/riscv/riscv-protos.h (riscv_v_ext_enabled_vector_mode_p):\n+\tRemove.\n+\t(riscv_v_ext_vector_mode_p): Change function implementation.\n+\t* config/riscv/riscv-vector-builtins.cc (rvv_switcher::rvv_switcher):\n+\tChange to riscv_v_ext_vector_mode_p.\n+\t(register_builtin_type): Ditto.\n+\t* config/riscv/riscv.cc (riscv_v_ext_vector_mode_p): Change to enabled\n+\tmodes.\n+\t(ENTRY): Ditto.\n+\t(riscv_v_ext_enabled_vector_mode_p): Remove.\n+\t(riscv_v_adjust_nunits): New function.\n+\t(riscv_vector_mode_supported_p): Use riscv_v_ext_vector_mode_p instead.\n+\t* config/riscv/riscv.h (riscv_v_adjust_nunits): New function.\n+\n+2022-10-26  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config.gcc (riscv*): Add riscv-v.o to extra_objs.\n+\t* config/riscv/constraints.md (vu): New constraint.\n+\t(vi): Ditto.\n+\t(Wc0): Ditto.\n+\t(Wc1): Ditto.\n+\t* config/riscv/predicates.md (vector_length_operand): New.\n+\t(reg_or_mem_operand): Ditto.\n+\t(vector_move_operand): Ditto.\n+\t(vector_mask_operand): Ditto.\n+\t(vector_merge_operand): Ditto.\n+\t* config/riscv/riscv-protos.h (riscv_regmode_natural_size) New.\n+\t(riscv_vector::const_vec_all_same_in_range_p): Ditto.\n+\t(riscv_vector::legitimize_move): Ditto.\n+\t(tail_policy): Ditto.\n+\t(mask_policy): Ditto.\n+\t* config/riscv/riscv-v.cc: New.\n+\t* config/riscv/riscv-vector-builtins-bases.cc\n+\t(vsetvl::expand): Refactor how LMUL encoding.\n+\t* config/riscv/riscv.cc (riscv_print_operand): Update how LMUL\n+\tprint and mask operand print.\n+\t(riscv_regmode_natural_size): New.\n+\t* config/riscv/riscv.h (REGMODE_NATURAL_SIZE): New.\n+\t* config/riscv/riscv.md (mode): Add vector modes.\n+\t* config/riscv/t-riscv (riscv-v.o) New.\n+\t* config/riscv/vector-iterators.md: New.\n+\t* config/riscv/vector.md (vundefined<mode>): New.\n+\t(mov<mode>): New.\n+\t(*mov<mode>): New.\n+\t(@vsetvl<mode>_no_side_effects): New.\n+\t(@pred_mov<mode>): New.\n+\n+2022-10-26  Monk Chiang  <monk.chiang@sifive.com>\n+\n+\t* common/config/riscv/riscv-common.cc (riscv_ext_version_table):\n+\tAdd svinval and svnapot extension.\n+\t(riscv_ext_flag_table): Ditto.\n+\t* config/riscv/riscv-opts.h (MASK_SVINVAL): New.\n+\t(MASK_SVNAPOT): Ditto.\n+\t(TARGET_SVINVAL): Ditto.\n+\t(TARGET_SVNAPOT): Ditto.\n+\t* config/riscv/riscv.opt (riscv_sv_subext): New.\n+\n+2022-10-26  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* config/riscv/riscv-modes.def: Adjust table indentation in commnet.\n+\n+2022-10-26  Martin Liska  <mliska@suse.cz>\n+\n+\t* configure: Regenerate.\n+\n+2022-10-26  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (frange::set): Use HONOR_*.\n+\t(frange::verify_range): Same.\n+\t* value-range.h (frange_val_min): Same.\n+\t(frange_val_max): Same.\n+\n+2022-10-26  Jiufu Guo  <guojiufu@linux.ibm.com>\n+\n+\tPR target/106460\n+\t* config/rs6000/rs6000.cc (rs6000_cannot_force_const_mem): Return true\n+\tfor HIGH code rtx.\n+\n+2022-10-26  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* common/config/riscv/riscv-common.cc (riscv_ext_version_table):\n+\tAdd `h`.\n+\t(riscv_supported_std_ext): Ditto.\n+\t(multi_letter_subset_rank): Remove `h`.\n+\t(riscv_subset_list::parse_std_ext): Handle `h` as single letter\n+\textension.\n+\t(riscv_subset_list::parse): Ditto.\n+\n 2022-10-25  Eugene Rozenfeld  <erozen@microsoft.com>\n \n \t* auto-profile.cc (get_combined_location): Include discriminator in the"}, {"sha": "494f34d49623d61360d38d793bfeb806d20963e5", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=486a50374e7c6200c476e67ffbe13ad71ac3262a", "patch": "@@ -1 +1 @@\n-20221026\n+20221027"}, {"sha": "6e6b056bd0f3b463d361a110376174ef08e9a10d", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=486a50374e7c6200c476e67ffbe13ad71ac3262a", "patch": "@@ -1,3 +1,14 @@\n+2022-10-26  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* sm-fd.cc (fd_state_machine::on_open): Transition to \"unchecked\"\n+\twhen the mode is symbolic, rather than just on integer constants.\n+\t(fd_state_machine::check_for_open_fd): Don't complain about\n+\tunchecked values in the start state.\n+\n+2022-10-26  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* sm-fd.dot: New file.\n+\n 2022-10-24  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/107349"}, {"sha": "ee7b51179e1c59206abc975bafecda5c893c112a", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=486a50374e7c6200c476e67ffbe13ad71ac3262a", "patch": "@@ -1,3 +1,8 @@\n+2022-10-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106393\n+\t* c.opt (Wdangling-reference): New.\n+\n 2022-10-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-format.h (enum format_lengths): Add FMT_LEN_w8, FMT_LEN_w16,"}, {"sha": "4a4907537784537d72f7971c9504ebb56729be22", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=486a50374e7c6200c476e67ffbe13ad71ac3262a", "patch": "@@ -1,3 +1,16 @@\n+2022-10-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106393\n+\t* call.cc (expr_represents_temporary_p): New, factored out of...\n+\t(conv_binds_ref_to_temporary): ...here.  Don't return false just\n+\tbecause a ck_base is missing.  Use expr_represents_temporary_p.\n+\t(do_warn_dangling_reference): New.\n+\t(maybe_warn_dangling_reference): New.\n+\t(extend_ref_init_temps): Call maybe_warn_dangling_reference.\n+\t* cp-tree.h: Adjust comment.\n+\t* typeck.cc (check_return_expr): Suppress -Wdangling-reference\n+\twarnings.\n+\n 2022-10-25  Nathan Sidwell  <nathan@acm.org>\n \n \t* parser.cc (synthesize_implicit_template_parm): Fix thinko about"}, {"sha": "1ca82cda49df2e8ed0c1a07b6d5c9507cbd285c6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=486a50374e7c6200c476e67ffbe13ad71ac3262a", "patch": "@@ -1,3 +1,9 @@\n+2022-10-26  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103413\n+\t* symbol.cc (gfc_type_compatible): A boz-literal-constant has no type\n+\tand thus is not considered compatible to any type.\n+\n 2022-10-21  Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n \n \tPR fortran/100097"}, {"sha": "56ccf8434821b6ae53c98f95317d41c082241351", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a50374e7c6200c476e67ffbe13ad71ac3262a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=486a50374e7c6200c476e67ffbe13ad71ac3262a", "patch": "@@ -1,3 +1,77 @@\n+2022-10-26  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/analyzer/fd-3.c (test_5): Expect \"opened here\" message\n+\teven when flags are symbolic.\n+\t(test_read_from_symbolic_fd): New.\n+\t(test_write_to_symbolic_fd): New.\n+\n+2022-10-26  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/103413\n+\t* gfortran.dg/illegal_boz_arg_4.f90: New test.\n+\n+2022-10-26  David Faust  <david.faust@oracle.com>\n+\n+\t* gcc.target/bpf/core-builtin-fieldinfo-errors-1.c: New test.\n+\t* gcc.target/bpf/core-builtin-fieldinfo-errors-2.c: New test.\n+\t* gcc.target/bpf/core-builtin-fieldinfo-existence-1.c: New test.\n+\t* gcc.target/bpf/core-builtin-fieldinfo-lshift-1-be.c: New test.\n+\t* gcc.target/bpf/core-builtin-fieldinfo-lshift-1-le.c: New test.\n+\t* gcc.target/bpf/core-builtin-fieldinfo-lshift-2.c: New test.\n+\t* gcc.target/bpf/core-builtin-fieldinfo-offset-1.c: New test.\n+\t* gcc.target/bpf/core-builtin-fieldinfo-rshift-1.c: New test.\n+\t* gcc.target/bpf/core-builtin-fieldinfo-rshift-2.c: New test.\n+\t* gcc.target/bpf/core-builtin-fieldinfo-sign-1.c: New test.\n+\t* gcc.target/bpf/core-builtin-fieldinfo-sign-2.c: New test.\n+\t* gcc.target/bpf/core-builtin-fieldinfo-size-1.c: New test.\n+\n+2022-10-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106393\n+\t* g++.dg/cpp23/elision4.C: Use -Wdangling-reference, add dg-warning.\n+\t* g++.dg/cpp23/elision7.C: Likewise.\n+\t* g++.dg/warn/Wdangling-pointer-2.C: Use -Wno-dangling-reference.\n+\t* g++.dg/warn/Wdangling-reference1.C: New test.\n+\t* g++.dg/warn/Wdangling-reference2.C: New test.\n+\t* g++.dg/warn/Wdangling-reference3.C: New test.\n+\n+2022-10-26  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>\n+\n+\t* gcc.target/riscv/rvv/base/mov-1.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-10.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-11.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-12.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-13.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-2.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-3.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-4.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-5.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-6.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-7.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-8.c: New.\n+\t* gcc.target/riscv/rvv/base/mov-9.c: New.\n+\n+2022-10-26  Monk Chiang  <monk.chiang@sifive.com>\n+\n+\t* gcc.target/riscv/predef-24.c:New.\n+\t* gcc.target/riscv/predef-25.c:New.\n+\n+2022-10-26  Jiufu Guo  <guojiufu@linux.ibm.com>\n+\n+\tPR target/106460\n+\t* gcc.target/powerpc/pr106460.c: New test.\n+\n+2022-10-26  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.target/riscv/arch-18.c: New.\n+\t* gcc.target/riscv/arch-5.c: Remove test for prefixed\n+\twith `h`.\n+\t* gcc.target/riscv/predef-23.c: New.\n+\n+2022-10-26  Eugene Rozenfeld  <erozen@microsoft.com>\n+\n+\t* lib/profopt.exp: Don't force DWARF4 for AutoFDO tests\n+\n 2022-10-25  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/106848"}, {"sha": "b3b168d564446054a37b54ce156c34abe8afb4d7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/486a50374e7c6200c476e67ffbe13ad71ac3262a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/486a50374e7c6200c476e67ffbe13ad71ac3262a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=486a50374e7c6200c476e67ffbe13ad71ac3262a", "patch": "@@ -1,3 +1,9 @@\n+2022-10-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106393\n+\t* include/bits/locale_classes.tcc: Add #pragma to disable\n+\t-Wdangling-reference with std::use_facet.\n+\n 2022-10-21  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n \n \t* acinclude.m4: Default hosted to off if building without"}]}