{"sha": "9ec35478ccf0f3539988a054b7996278706a7710", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVjMzU0NzhjY2YwZjM1Mzk5ODhhMDU0Yjc5OTYyNzg3MDZhNzcxMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-12-10T12:20:02Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-12-10T12:20:02Z"}, "message": "Fix EXTRACT_LAST_REDUCTION handling of pattern stmts\n\nUnlike most vector ops, extract-last reductions replace the original\nscalar code in-situ rather than adding an adjacent vector implementation.\nI.e.:\n\n   dest_1 = COND_EXPR <...>;\n\nbecomes:\n\n   dest_1 = .EXTRACT_LAST (...);\n\ngcc.dg/vect/vect-cond-reduc-4.c was ICEing for SVE because we tried\nto replace the pattern statement in this way, rather than replacing\nthe original scalar statement.\n\n2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vect-stmts.c (vect_finish_replace_stmt): Always use the\n\toriginal scalar statement rather than a pattern statement.\n\t(vectorizable_condition): Likewise, in the handling of extract-last\n\treductions.\n\nFrom-SVN: r279162", "tree": {"sha": "9974f682114645a158aad0e51d9eb6a784cdc345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9974f682114645a158aad0e51d9eb6a784cdc345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ec35478ccf0f3539988a054b7996278706a7710", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ec35478ccf0f3539988a054b7996278706a7710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ec35478ccf0f3539988a054b7996278706a7710", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ec35478ccf0f3539988a054b7996278706a7710/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca49c831ca9c042db6cea746c21040c1ada18abb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca49c831ca9c042db6cea746c21040c1ada18abb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca49c831ca9c042db6cea746c21040c1ada18abb"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "1c1501eba5b8eadbe9820949aff9bdf9ccdcdf1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec35478ccf0f3539988a054b7996278706a7710/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec35478ccf0f3539988a054b7996278706a7710/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ec35478ccf0f3539988a054b7996278706a7710", "patch": "@@ -1,3 +1,10 @@\n+2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-stmts.c (vect_finish_replace_stmt): Always use the\n+\toriginal scalar statement rather than a pattern statement.\n+\t(vectorizable_condition): Likewise, in the handling of extract-last\n+\treductions.\n+\n 2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-loop.c (vectorizable_reduction): Don't use"}, {"sha": "08ffb72fe2d5f7fa1a33a0813e578d34be073df1", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ec35478ccf0f3539988a054b7996278706a7710/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ec35478ccf0f3539988a054b7996278706a7710/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=9ec35478ccf0f3539988a054b7996278706a7710", "patch": "@@ -1779,9 +1779,10 @@ vect_finish_stmt_generation_1 (stmt_vec_info stmt_info, gimple *vec_stmt)\n stmt_vec_info\n vect_finish_replace_stmt (stmt_vec_info stmt_info, gimple *vec_stmt)\n {\n-  gcc_assert (gimple_get_lhs (stmt_info->stmt) == gimple_get_lhs (vec_stmt));\n+  gimple *scalar_stmt = vect_orig_stmt (stmt_info)->stmt;\n+  gcc_assert (gimple_get_lhs (scalar_stmt) == gimple_get_lhs (vec_stmt));\n \n-  gimple_stmt_iterator gsi = gsi_for_stmt (stmt_info->stmt);\n+  gimple_stmt_iterator gsi = gsi_for_stmt (scalar_stmt);\n   gsi_replace (&gsi, vec_stmt, true);\n \n   return vect_finish_stmt_generation_1 (stmt_info, vec_stmt);\n@@ -10324,20 +10325,21 @@ vectorizable_condition (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \n \t  if (reduction_type == EXTRACT_LAST_REDUCTION)\n \t    {\n+\t      gimple *old_stmt = vect_orig_stmt (stmt_info)->stmt;\n+\t      tree lhs = gimple_get_lhs (old_stmt);\n \t      gcall *new_stmt = gimple_build_call_internal\n \t\t(IFN_FOLD_EXTRACT_LAST, 3, else_clause, vec_compare,\n \t\t vec_then_clause);\n-\t      gimple_call_set_lhs (new_stmt, scalar_dest);\n-\t      SSA_NAME_DEF_STMT (scalar_dest) = new_stmt;\n-\t      if (stmt_info->stmt == gsi_stmt (*gsi))\n+\t      gimple_call_set_lhs (new_stmt, lhs);\n+\t      SSA_NAME_DEF_STMT (lhs) = new_stmt;\n+\t      if (old_stmt == gsi_stmt (*gsi))\n \t\tnew_stmt_info = vect_finish_replace_stmt (stmt_info, new_stmt);\n \t      else\n \t\t{\n \t\t  /* In this case we're moving the definition to later in the\n \t\t     block.  That doesn't matter because the only uses of the\n \t\t     lhs are in phi statements.  */\n-\t\t  gimple_stmt_iterator old_gsi\n-\t\t    = gsi_for_stmt (stmt_info->stmt);\n+\t\t  gimple_stmt_iterator old_gsi = gsi_for_stmt (old_stmt);\n \t\t  gsi_remove (&old_gsi, true);\n \t\t  new_stmt_info\n \t\t    = vect_finish_stmt_generation (stmt_info, new_stmt, gsi);"}]}