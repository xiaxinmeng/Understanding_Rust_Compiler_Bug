{"sha": "2e62beb05e8224d7632f8dbe3cace6a60bbfbf46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU2MmJlYjA1ZTgyMjRkNzYzMmY4ZGJlM2NhY2U2YTYwYmJmYmY0Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2018-11-09T09:12:39Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-11-09T09:12:39Z"}, "message": "tree.c (fld_type_variant_equal_p): Test user align flag.\n\n\n\t* tree.c (fld_type_variant_equal_p): Test user align flag.\n\t(flt_type_variant): Copy user align flag.\n\t(fld_incomplete_type_of): Clear it.\n\nFrom-SVN: r265949", "tree": {"sha": "acec424e7541fa8795c5d392d6717b12d2d70bce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acec424e7541fa8795c5d392d6717b12d2d70bce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e62beb05e8224d7632f8dbe3cace6a60bbfbf46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e62beb05e8224d7632f8dbe3cace6a60bbfbf46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e62beb05e8224d7632f8dbe3cace6a60bbfbf46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e62beb05e8224d7632f8dbe3cace6a60bbfbf46/comments", "author": null, "committer": null, "parents": [{"sha": "536ecfc44b1fd2db67f669e9bb4c388b13d12045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536ecfc44b1fd2db67f669e9bb4c388b13d12045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/536ecfc44b1fd2db67f669e9bb4c388b13d12045"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "4612ddf861f1dfc1b4bf3336c65e7c588d33a0b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e62beb05e8224d7632f8dbe3cace6a60bbfbf46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e62beb05e8224d7632f8dbe3cace6a60bbfbf46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e62beb05e8224d7632f8dbe3cace6a60bbfbf46", "patch": "@@ -1,3 +1,9 @@\n+2018-11-09  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree.c (fld_type_variant_equal_p): Test user align flag.\n+\t(flt_type_variant): Copy user align flag.\n+\t(fld_incomplete_type_of): Clear it.\n+\n 2018-11-09  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* config/arm/neon.md (div<mode>3): New pattern."}, {"sha": "db680a9bae34021f7780c55f32ba7175f7a888f5", "filename": "gcc/tree.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e62beb05e8224d7632f8dbe3cace6a60bbfbf46/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e62beb05e8224d7632f8dbe3cace6a60bbfbf46/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=2e62beb05e8224d7632f8dbe3cace6a60bbfbf46", "patch": "@@ -5117,7 +5117,8 @@ fld_type_variant_equal_p (tree t, tree v)\n       /* We want to match incomplete variants with complete types.\n \t In this case we need to ignore alignment.   */\n       || ((!RECORD_OR_UNION_TYPE_P (t) || COMPLETE_TYPE_P (v))\n-\t  && TYPE_ALIGN (t) != TYPE_ALIGN (v))\n+\t  && (TYPE_ALIGN (t) != TYPE_ALIGN (v)\n+\t      || TYPE_USER_ALIGN (t) != TYPE_USER_ALIGN (v)))\n       || fld_simplified_type_name (t) != fld_simplified_type_name (v)\n       || !attribute_list_equal (TYPE_ATTRIBUTES (t),\n \t\t\t        TYPE_ATTRIBUTES (v)))\n@@ -5148,7 +5149,10 @@ fld_type_variant (tree first, tree t, struct free_lang_data_d *fld)\n   /* Variants of incomplete types should have alignment \n      set to BITS_PER_UNIT.  Do not copy the actual alignment.  */\n   if (!RECORD_OR_UNION_TYPE_P (v) || COMPLETE_TYPE_P (v))\n-    SET_TYPE_ALIGN (v, TYPE_ALIGN (t));\n+    {\n+      SET_TYPE_ALIGN (v, TYPE_ALIGN (t));\n+      TYPE_USER_ALIGN (v) = TYPE_USER_ALIGN (t);\n+    }\n   gcc_checking_assert (fld_type_variant_equal_p (t,v));\n   add_tree_to_fld_list (v, fld);\n   return v;\n@@ -5202,6 +5206,7 @@ fld_incomplete_type_of (tree t, struct free_lang_data_d *fld)\n \t  TYPE_SIZE (copy) = NULL;\n \t  SET_TYPE_MODE (copy, VOIDmode);\n \t  SET_TYPE_ALIGN (copy, BITS_PER_UNIT);\n+\t  TYPE_USER_ALIGN (copy) = 0;\n \t  TYPE_SIZE_UNIT (copy) = NULL;\n \t  TYPE_CANONICAL (copy) = TYPE_CANONICAL (t);\n \t  TYPE_TYPELESS_STORAGE (copy) = 0;"}]}