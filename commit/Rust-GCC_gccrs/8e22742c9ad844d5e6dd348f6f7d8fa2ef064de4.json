{"sha": "8e22742c9ad844d5e6dd348f6f7d8fa2ef064de4", "node_id": "C_kwDOANBUbNoAKDhlMjI3NDJjOWFkODQ0ZDVlNmRkMzQ4ZjZmN2Q4ZmEyZWYwNjRkZTQ", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-06-14T11:21:14Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-06-14T12:27:31Z"}, "message": "parser: Error out if the order of lifetimes and generic types is\nincorrect", "tree": {"sha": "c4eda472ddb88b4498200543a41404beba9b84da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4eda472ddb88b4498200543a41404beba9b84da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e22742c9ad844d5e6dd348f6f7d8fa2ef064de4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e22742c9ad844d5e6dd348f6f7d8fa2ef064de4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e22742c9ad844d5e6dd348f6f7d8fa2ef064de4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e22742c9ad844d5e6dd348f6f7d8fa2ef064de4/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9013bda082602ecdc6519009fe82c8f17d2cc4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9013bda082602ecdc6519009fe82c8f17d2cc4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9013bda082602ecdc6519009fe82c8f17d2cc4d"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "ce68c16ac7c057f3e80b040a7abfdac4023870a0", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e22742c9ad844d5e6dd348f6f7d8fa2ef064de4/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e22742c9ad844d5e6dd348f6f7d8fa2ef064de4/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=8e22742c9ad844d5e6dd348f6f7d8fa2ef064de4", "patch": "@@ -2892,19 +2892,35 @@ Parser<ManagedTokenSource>::parse_generic_params (EndTokenPred is_end_token)\n    * parsed but it turns out to be type param */\n   AST::Attribute parsed_outer_attr = AST::Attribute::create_empty ();\n \n+  // Did we parse a generic type param yet\n+  auto type_seen = false;\n+  // Did the user write a lifetime parameter after a type one\n+  auto order_error = false;\n+\n   // parse lifetime params\n   while (!is_end_token (lexer.peek_token ()->get_id ()))\n     {\n       auto param = parse_generic_param (is_end_token);\n       if (param)\n \t{\n+\t  // TODO: Handle `Const` here as well if necessary\n+\t  if (param->get_kind () == AST::GenericParam::Kind::Type)\n+\t    type_seen = true;\n+\t  else if (param->get_kind () == AST::GenericParam::Kind::Lifetime\n+\t\t   && type_seen)\n+\t    order_error = true;\n+\n \t  generic_params.emplace_back (std::move (param));\n \t  maybe_skip_token (COMMA);\n \t}\n-\n-      // error out if lifetime after type\n     }\n \n+  // FIXME: Add reordering hint\n+  if (order_error)\n+    rust_error_at (generic_params.front ()->get_locus (),\n+\t\t   \"invalid order for generic parameters: lifetimes should \"\n+\t\t   \"always come before types\");\n+\n   generic_params.shrink_to_fit ();\n   return generic_params;\n }"}, {"sha": "05c75c5f63d74764f461a26dcca3710806874126", "filename": "gcc/testsuite/rust/compile/generics13.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e22742c9ad844d5e6dd348f6f7d8fa2ef064de4/gcc%2Ftestsuite%2Frust%2Fcompile%2Fgenerics13.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e22742c9ad844d5e6dd348f6f7d8fa2ef064de4/gcc%2Ftestsuite%2Frust%2Fcompile%2Fgenerics13.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fgenerics13.rs?ref=8e22742c9ad844d5e6dd348f6f7d8fa2ef064de4", "patch": "@@ -0,0 +1 @@\n+struct Foo<A, 'a>; // { dg-error \"invalid order for generic parameters: lifetimes should always come before types\" }"}]}