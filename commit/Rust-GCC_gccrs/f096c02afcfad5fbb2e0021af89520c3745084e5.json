{"sha": "f096c02afcfad5fbb2e0021af89520c3745084e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA5NmMwMmFmY2ZhZDVmYmIyZTAwMjFhZjg5NTIwYzM3NDUwODRlNQ==", "commit": {"author": {"name": "Ian Bolton", "email": "ian.bolton@arm.com", "date": "2010-08-19T08:12:31Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2010-08-19T08:12:31Z"}, "message": "For Ian Bolton <ian.bolton@arm.com>\n\n\t* tree-switch-conversion.c (gen_inbound_check): Ensure that the\n\ttype for the conditional has wide enough range.\n\n\t* testsuite/g++.dg/pr44328.C: New test.\n\nFrom-SVN: r163366", "tree": {"sha": "cb8efc3d295c482a1090305d96edf16eb06c7b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb8efc3d295c482a1090305d96edf16eb06c7b35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f096c02afcfad5fbb2e0021af89520c3745084e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f096c02afcfad5fbb2e0021af89520c3745084e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f096c02afcfad5fbb2e0021af89520c3745084e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f096c02afcfad5fbb2e0021af89520c3745084e5/comments", "author": null, "committer": null, "parents": [{"sha": "d76799c7f0a13ab5a02487f2e6d4dfe10156b223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d76799c7f0a13ab5a02487f2e6d4dfe10156b223", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d76799c7f0a13ab5a02487f2e6d4dfe10156b223"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "4711095729facacf993587c23b81fa5c7a954592", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f096c02afcfad5fbb2e0021af89520c3745084e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f096c02afcfad5fbb2e0021af89520c3745084e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f096c02afcfad5fbb2e0021af89520c3745084e5", "patch": "@@ -1,3 +1,8 @@\n+2010-08-19  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* tree-switch-conversion.c (gen_inbound_check): Ensure that the\n+\ttype for the conditional has wide enough range.\n+\n 2010-08-18  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/45327"}, {"sha": "afd8b999f6cac73b3f1c0f4e93bff80e5c7a7016", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f096c02afcfad5fbb2e0021af89520c3745084e5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f096c02afcfad5fbb2e0021af89520c3745084e5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f096c02afcfad5fbb2e0021af89520c3745084e5", "patch": "@@ -1,3 +1,7 @@\n+2010-08-19  Ian Bolton  <ian.bolton@arm.com>\n+\n+\t* g++.dg/pr44328.C: New test.\n+\n 2010-08-19  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/36158"}, {"sha": "bbfe233340a57c595d9b1653cc8b6a39da47a31b", "filename": "gcc/testsuite/g++.dg/pr44328.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f096c02afcfad5fbb2e0021af89520c3745084e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr44328.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f096c02afcfad5fbb2e0021af89520c3745084e5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr44328.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr44328.C?ref=f096c02afcfad5fbb2e0021af89520c3745084e5", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-c -O2 -Wextra\" } */\n+#define O_RDONLY     (1<<0)\n+#define O_WRONLY     (1<<1)\n+#define O_RDWR       (O_RDONLY|O_WRONLY)\n+#define O_CREAT      (1<<3)\n+#define O_TRUNC      (1<<6)\n+\n+typedef enum {\n+    OM_READ = 0,\n+    OM_WRITE,\n+    OM_READWRITE_NOCREATE,\n+    OM_READWRITE_CREATE\n+} OpenMode;\n+\n+extern int open(const char *name, int mode);\n+\n+void open_file(const char *filename, const OpenMode rw)\n+{\n+    int mode = 0;\n+\n+    switch( rw )\n+    {\n+    case OM_WRITE:\n+        mode = O_WRONLY|O_CREAT|O_TRUNC;\n+        break;\n+    case OM_READ:\n+        mode = O_RDONLY;\n+        break;\n+    case OM_READWRITE_NOCREATE:\n+        mode = O_RDWR;\n+        break;\n+    case OM_READWRITE_CREATE:\n+        mode = O_RDWR|O_CREAT|O_TRUNC;\n+        break;\n+    }\n+\n+    open( filename, mode );\n+}"}, {"sha": "7072af8f5ab61f8db2e286699744d8ae601a6deb", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f096c02afcfad5fbb2e0021af89520c3745084e5/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f096c02afcfad5fbb2e0021af89520c3745084e5/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=f096c02afcfad5fbb2e0021af89520c3745084e5", "patch": "@@ -96,6 +96,7 @@ eight) times the number of the actual switch branches. */\n #include \"gimple-pretty-print.h\"\n #include \"tree-dump.h\"\n #include \"timevar.h\"\n+#include \"langhooks.h\"\n \n /* The main structure of the pass.  */\n struct switch_conv_info\n@@ -694,9 +695,11 @@ gen_inbound_check (gimple swtch)\n \n   /* Make sure we do not generate arithmetics in a subrange.  */\n   if (TREE_TYPE (TREE_TYPE (info.index_expr)))\n-    utype = unsigned_type_for (TREE_TYPE (TREE_TYPE (info.index_expr)));\n+    utype = lang_hooks.types.type_for_mode\n+      (TYPE_MODE (TREE_TYPE (TREE_TYPE (info.index_expr))), 1);\n   else\n-    utype = unsigned_type_for (TREE_TYPE (info.index_expr));\n+    utype = lang_hooks.types.type_for_mode\n+      (TYPE_MODE (TREE_TYPE (info.index_expr)), 1);\n \n   /* (end of) block 0 */\n   gsi = gsi_for_stmt (info.arr_ref_first);"}]}