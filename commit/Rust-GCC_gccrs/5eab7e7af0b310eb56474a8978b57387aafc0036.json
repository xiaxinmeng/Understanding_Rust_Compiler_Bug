{"sha": "5eab7e7af0b310eb56474a8978b57387aafc0036", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVhYjdlN2FmMGIzMTBlYjU2NDc0YTg5NzhiNTczODdhYWZjMDAzNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-12-07T14:24:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-12-07T14:24:11Z"}, "message": "builtins.c (expand_builtin_pow): Adjust predicates for pow to cbrt expansion to unsafe math and !HONOR_NANS for...\n\n2006-12-07  Richard Guenther  <rguenther@suse.de>\n\n\t* builtins.c (expand_builtin_pow): Adjust predicates for\n\tpow to cbrt expansion to unsafe math and !HONOR_NANS for\n\tnegative base.\n\nFrom-SVN: r119622", "tree": {"sha": "27722767a56435a8b6d77614d6158841f046d493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27722767a56435a8b6d77614d6158841f046d493"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5eab7e7af0b310eb56474a8978b57387aafc0036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eab7e7af0b310eb56474a8978b57387aafc0036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eab7e7af0b310eb56474a8978b57387aafc0036", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eab7e7af0b310eb56474a8978b57387aafc0036/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e850f0281c60912faf6f19c2765f0655ff4f179c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e850f0281c60912faf6f19c2765f0655ff4f179c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e850f0281c60912faf6f19c2765f0655ff4f179c"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "0926c1dc55055fed788b97ce14e7280d12ec78a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eab7e7af0b310eb56474a8978b57387aafc0036/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eab7e7af0b310eb56474a8978b57387aafc0036/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5eab7e7af0b310eb56474a8978b57387aafc0036", "patch": "@@ -1,3 +1,9 @@\n+2006-12-07  Richard Guenther  <rguenther@suse.de>\n+\n+\t* builtins.c (expand_builtin_pow): Adjust predicates for\n+\tpow to cbrt expansion to unsafe math and !HONOR_NANS for\n+\tnegative base.\n+\n 2006-12-07  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (nocona_cost, pentium4_cost): Update preffered memcpy/memset"}, {"sha": "3c7d1052cba47ddaf83bd3e5797d4cf9316e8203", "filename": "gcc/builtins.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eab7e7af0b310eb56474a8978b57387aafc0036/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eab7e7af0b310eb56474a8978b57387aafc0036/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=5eab7e7af0b310eb56474a8978b57387aafc0036", "patch": "@@ -2679,9 +2679,15 @@ expand_builtin_pow (tree exp, rtx target, rtx subtarget)\n     }\n \n   /* Try if the exponent is a third of an integer.  In this case\n-     we can expand to x**(n/3) * cbrt(x)**(n%3).  */\n+     we can expand to x**(n/3) * cbrt(x)**(n%3).  As cbrt (x) is\n+     different from pow (x, 1./3.) due to rounding and behavior\n+     with negative x we need to constrain this transformation to\n+     unsafe math and positive x or finite math.  */\n   fn = mathfn_built_in (type, BUILT_IN_CBRT);\n-  if (fn != NULL_TREE)\n+  if (fn != NULL_TREE\n+      && flag_unsafe_math_optimizations\n+      && (tree_expr_nonnegative_p (arg0)\n+\t  || !HONOR_NANS (mode)))\n     {\n       real_arithmetic (&c2, MULT_EXPR, &c, &dconst3);\n       real_round (&c2, mode, &c2);\n@@ -2691,7 +2697,6 @@ expand_builtin_pow (tree exp, rtx target, rtx subtarget)\n       real_convert (&c2, mode, &c2);\n       if (real_identical (&c2, &c)\n \t  && ((!optimize_size\n-\t       && flag_unsafe_math_optimizations\n \t       && powi_cost (n/3) <= POWI_MAX_MULTS)\n \t      || n == 1))\n \t{"}]}