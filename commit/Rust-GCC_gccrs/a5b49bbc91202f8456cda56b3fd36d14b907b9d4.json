{"sha": "a5b49bbc91202f8456cda56b3fd36d14b907b9d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTViNDliYmM5MTIwMmY4NDU2Y2RhNTZiM2ZkMzZkMTRiOTA3YjlkNA==", "commit": {"author": {"name": "Jason Thorpe", "email": "thorpej@wasabisystems.com", "date": "2002-05-29T23:50:56Z"}, "committer": {"name": "Jason Thorpe", "email": "thorpej@gcc.gnu.org", "date": "2002-05-29T23:50:56Z"}, "message": "netbsd-elf.h (TARGET_OS_CPP_BUILTINS): Define.\n\n* config/sparc/netbsd-elf.h (TARGET_OS_CPP_BUILTINS): Define.\n(CPP_PREDEFINES): Make sure this is undefined.\n(CPP_SUBTARGET_SPEC64, CPP_SUBTARGET_SPEC32): Remove.\n(CPP_SUBTARGET_SPEC): Don't provide different versions for\ndefault-32 and default-64.  Just always use %(netbsd_cpp_spec).\n(SUBTARGET_EXTRA_SPECS): Remove cpp_subtarget_spec32 and\ncpp_subtarget_spec64.  Add netbsd_cpp_spec.\n* config/sparc/netbsd.h (TARGET_OS_CPP_BUILTINS): Define.\n(CPP_PREDEFINES): Make sure this is undefined.\n(SUBTARGET_EXTRA_SPECS): Define.\n(CPP_SPEC): Use %(netbsd_cpp_spec).\n\nFrom-SVN: r54030", "tree": {"sha": "bd495c140cd8411e691a428bc8b7c2038afe848b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd495c140cd8411e691a428bc8b7c2038afe848b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5b49bbc91202f8456cda56b3fd36d14b907b9d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b49bbc91202f8456cda56b3fd36d14b907b9d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b49bbc91202f8456cda56b3fd36d14b907b9d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b49bbc91202f8456cda56b3fd36d14b907b9d4/comments", "author": null, "committer": null, "parents": [{"sha": "b862c2aaaf5535e25d8295791d56d76c13be37e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b862c2aaaf5535e25d8295791d56d76c13be37e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b862c2aaaf5535e25d8295791d56d76c13be37e1"}], "stats": {"total": 83, "additions": 52, "deletions": 31}, "files": [{"sha": "77cc267deb0d81b739b83778b502e2dce1761a40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b49bbc91202f8456cda56b3fd36d14b907b9d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b49bbc91202f8456cda56b3fd36d14b907b9d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5b49bbc91202f8456cda56b3fd36d14b907b9d4", "patch": "@@ -1,3 +1,17 @@\n+2002-05-29  Jason Thorpe  <thorpej@wasabisystems.com>\n+\n+\t* config/sparc/netbsd-elf.h (TARGET_OS_CPP_BUILTINS): Define.\n+\t(CPP_PREDEFINES): Make sure this is undefined.\n+\t(CPP_SUBTARGET_SPEC64, CPP_SUBTARGET_SPEC32): Remove.\n+\t(CPP_SUBTARGET_SPEC): Don't provide different versions for\n+\tdefault-32 and default-64.  Just always use %(netbsd_cpp_spec).\n+\t(SUBTARGET_EXTRA_SPECS): Remove cpp_subtarget_spec32 and\n+\tcpp_subtarget_spec64.  Add netbsd_cpp_spec.\n+\t* config/sparc/netbsd.h (TARGET_OS_CPP_BUILTINS): Define.\n+\t(CPP_PREDEFINES): Make sure this is undefined.\n+\t(SUBTARGET_EXTRA_SPECS): Define.\n+\t(CPP_SPEC): Use %(netbsd_cpp_spec).\n+\n 2002-05-29  Jeff Law <law@redhat.com>\n \n \t* flow.c (propagate_one_insn): Do not remove a dead insn if it"}, {"sha": "40d881d1d08ad7fc8bc3f703d56d0d8d1d60f6c4", "filename": "gcc/config/sparc/netbsd-elf.h", "status": "modified", "additions": 21, "deletions": 27, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b49bbc91202f8456cda56b3fd36d14b907b9d4/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b49bbc91202f8456cda56b3fd36d14b907b9d4/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h?ref=a5b49bbc91202f8456cda56b3fd36d14b907b9d4", "patch": "@@ -20,22 +20,32 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      NETBSD_OS_CPP_BUILTINS_ELF();\t\t\t\\\n+      if (TARGET_ARCH64)\t\t\t\t\\\n+\t{\t\t\t\t\t\t\\\n+\t  NETBSD_OS_CPP_BUILTINS_LP64();\t\t\\\n+\t  builtin_define (\"__sparc64__\");\t\t\\\n+\t  builtin_define (\"__sparc_v9__\");\t\t\\\n+\t}\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\\\n+\tbuiltin_define (\"__sparc\");\t\t\t\\\n+      builtin_define (\"__sparc__\");\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n+\n /* Make sure these are undefined.  */\n #undef MD_EXEC_PREFIX\n #undef MD_STARTFILE_PREFIX\n \n+/* Make sure this is undefined.  */\n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__sparc__ -D__NetBSD__ -D__ELF__ \\\n--Asystem=unix -Asystem=NetBSD\"\n-\n-/* CPP defines used for 64 bit code.  */\n-#undef CPP_SUBTARGET_SPEC64\n-#define CPP_SUBTARGET_SPEC64 \\\n-  \"-D__sparc64__ -D__sparc_v9__ -D_LP64 %{posix:-D_POSIX_SOURCE}\"\n \n-/* CPP defines used for 32 bit code.  */\n-#undef CPP_SUBTARGET_SPEC32\n-#define CPP_SUBTARGET_SPEC32 \"-D__sparc %{posix:-D_POSIX_SOURCE}\"\n+/* CPP defines used by all NetBSD targets.  */\n+#undef CPP_SUBTARGET_SPEC\n+#define CPP_SUBTARGET_SPEC \"%(netbsd_cpp_spec)\"\n \n /* SIZE_TYPE and PTRDIFF_TYPE are wrong from sparc/sparc.h.  */\n #undef SIZE_TYPE\n@@ -230,8 +240,7 @@ Boston, MA 02111-1307, USA.  */\n   { \"link_arch64\",\t\tLINK_ARCH64_SPEC }, \\\n   { \"link_arch_default\",\tLINK_ARCH_DEFAULT_SPEC }, \\\n   { \"link_arch\",\t\tLINK_ARCH_SPEC }, \\\n-  { \"cpp_subtarget_spec32\",\tCPP_SUBTARGET_SPEC32 }, \\\n-  { \"cpp_subtarget_spec64\",\tCPP_SUBTARGET_SPEC64 },\n+  { \"netbsd_cpp_spec\",\t\tNETBSD_CPP_SPEC },\n \n \n /* What extra switches do we need?  */\n@@ -270,15 +279,6 @@ Boston, MA 02111-1307, USA.  */\n #define MULTILIB_DEFAULTS { \"m64\" }\n #endif\n \n-#undef CPP_SUBTARGET_SPEC\n-#if DEFAULT_ARCH32_P\n-#define CPP_SUBTARGET_SPEC \\\n-  \"%{m64:%(cpp_subtarget_spec64)}%{!m64:%(cpp_subtarget_spec32)}\"\n-#else\n-#define CPP_SUBTARGET_SPEC \\\n-  \"%{!m32:%(cpp_subtarget_spec64)}%{m32:%(cpp_subtarget_spec32)}\"\n-#endif\n-\n /* Name the port. */\n #undef TARGET_NAME\n #define TARGET_NAME     (DEFAULT_ARCH32_P ? TARGET_NAME32 : TARGET_NAME64)\n@@ -300,9 +300,6 @@ Boston, MA 02111-1307, USA.  */\n #undef  CC1_SPEC\n #define CC1_SPEC CC1_SPEC64\n \n-#undef CPP_SUBTARGET_SPEC\n-#define CPP_SUBTARGET_SPEC CPP_SUBTARGET_SPEC64\n-\n #undef TARGET_NAME\n #define TARGET_NAME     TARGET_NAME64\n \n@@ -321,9 +318,6 @@ Boston, MA 02111-1307, USA.  */\n #undef LIBGCC2_LONG_DOUBLE_TYPE_SIZE\n #define LIBGCC2_LONG_DOUBLE_TYPE_SIZE 64\n \n-#undef CPP_SUBTARGET_SPEC\n-#define CPP_SUBTARGET_SPEC CPP_SUBTARGET_SPEC32\n-\n #undef  CC1_SPEC\n #define CC1_SPEC CC1_SPEC32\n "}, {"sha": "8ae4c5663492c3244e7298c2fcae45b6d680347b", "filename": "gcc/config/sparc/netbsd.h", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b49bbc91202f8456cda56b3fd36d14b907b9d4/gcc%2Fconfig%2Fsparc%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b49bbc91202f8456cda56b3fd36d14b907b9d4/gcc%2Fconfig%2Fsparc%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fnetbsd.h?ref=a5b49bbc91202f8456cda56b3fd36d14b907b9d4", "patch": "@@ -1,10 +1,23 @@\n-/* Names to predefine in the preprocessor for this target machine.  */\n-\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      NETBSD_OS_CPP_BUILTINS_AOUT();\t\t\t\\\n+      builtin_define_std (\"sparc\");\t\t\t\\\n+      builtin_assert (\"cpu=sparc\");\t\t\t\\\n+      builtin_assert (\"machine=sparc\");\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n+\n+/* Make sure this is undefined.  */\n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -Dsparc -D__NetBSD__ -Asystem=unix -Asystem=NetBSD -Acpu=sparc -Amachine=sparc\"\n+\n+/* What extra spec entries do we need?  */\n+#undef SUBTARGET_EXTRA_SPECS\n+#define SUBTARGET_EXTRA_SPECS \\\n+  { \"netbsd_cpp_spec\",          NETBSD_CPP_SPEC },\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%(cpp_cpu) %(netbsd_cpp_spec)\"\n \n /* Make gcc agree with <machine/ansi.h> */\n "}]}