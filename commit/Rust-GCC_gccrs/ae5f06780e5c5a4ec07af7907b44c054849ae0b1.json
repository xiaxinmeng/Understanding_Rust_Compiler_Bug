{"sha": "ae5f06780e5c5a4ec07af7907b44c054849ae0b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU1ZjA2NzgwZTVjNWE0ZWMwN2FmNzkwN2I0NGMwNTQ4NDlhZTBiMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-09-22T11:39:48Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-09-22T11:39:48Z"}, "message": "optabs.c (prepare_cmp_insn): Expand comparison of the result of memcmp through generic comparison expansion code.\n\n\t* optabs.c (prepare_cmp_insn): Expand comparison of the result\n\tof memcmp through generic comparison expansion code.\n\nFrom-SVN: r191641", "tree": {"sha": "a7c440e3f91525d5113d248078aeff2cd72d11ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7c440e3f91525d5113d248078aeff2cd72d11ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae5f06780e5c5a4ec07af7907b44c054849ae0b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae5f06780e5c5a4ec07af7907b44c054849ae0b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae5f06780e5c5a4ec07af7907b44c054849ae0b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae5f06780e5c5a4ec07af7907b44c054849ae0b1/comments", "author": null, "committer": null, "parents": [{"sha": "840171d2d112512ecdfb18558864bf203a483091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/840171d2d112512ecdfb18558864bf203a483091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/840171d2d112512ecdfb18558864bf203a483091"}], "stats": {"total": 84, "additions": 40, "deletions": 44}, "files": [{"sha": "4e29d4d37a8b72fa09bd87c34f8ae023de5e132a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 40, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5f06780e5c5a4ec07af7907b44c054849ae0b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5f06780e5c5a4ec07af7907b44c054849ae0b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae5f06780e5c5a4ec07af7907b44c054849ae0b1", "patch": "@@ -1,3 +1,8 @@\n+2012-09-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* optabs.c (prepare_cmp_insn): Expand comparison of the result\n+\tof memcmp through generic comparison expansion code.\n+\n 2012-09-21  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n \tPR bootstrap/54642\n@@ -23,7 +28,7 @@\n \n 2012-09-21  Matthias Klose  <doko@ubuntu.com>\n \n-\t* config/arm/arm.c (arm_mangle_type): Don't warn anymore that \n+\t* config/arm/arm.c (arm_mangle_type): Don't warn anymore that\n \t4.4 has changed the `va_list' mangling.\n \n 2012-09-21  Eric Botcazou  <ebotcazou@adacore.com>\n@@ -64,8 +69,7 @@\n 2012-09-20  Martin Jambor  <mjambor@suse.cz>\n \n \t* function.c (push_cfun): Check old current_function_decl matches\n-\told cfun, set new current_function_decl to the decl of the new\n-\tcfun.\n+\told cfun, set new current_function_decl to the decl of the new cfun.\n \t(push_struct_function): Likewise.\n \t(pop_cfun): Likewise.\n \t(allocate_struct_function): Move call to\n@@ -128,7 +132,7 @@\n \n 2012-09-20  Chen Wei-Ren  <chenwj@iis.sinica.edu.tw>\n \n-\tdoc/lto.texi: Correct typo.\n+\t* doc/lto.texi: Correct typo.\n \n 2012-09-19  Dehao Chen  <dehao@google.com>\n \n@@ -149,11 +153,11 @@\n \n 2012-09-19  Mark Kettenis  <kettenis@openbsd.org>\n \n-        * config.gcc (hppa*-*-openbsd*): New target.\n-        * config/pa/pa-openbsd.h: New file.\n-        * config/pa/pa32-openbsd.h: New file.\n-        * config/host-openbsd.c: Update copyright year.\n-        (TRY_EXCEPT_VM_SPACE): Define for OpenBSD/hppa.\n+\t* config.gcc (hppa*-*-openbsd*): New target.\n+\t* config/pa/pa-openbsd.h: New file.\n+\t* config/pa/pa32-openbsd.h: New file.\n+\t* config/host-openbsd.c: Update copyright year.\n+\t(TRY_EXCEPT_VM_SPACE): Define for OpenBSD/hppa.\n \n 2012-09-19  Martin Jambor  <mjambor@suse.cz>\n \n@@ -316,8 +320,7 @@\n \t(haifa_change_pattern): Call it.\n \t(dep_t heap vecs): Declare.\n \t(INSN_COST): Define earlier.\n-\t(next_cycle_replace_deps, next_cycle_apply): New static\n-\tvariables.\n+\t(next_cycle_replace_deps, next_cycle_apply): New static variables.\n \t(apply_replacement): New static function.\n \t(recompute_todo_spec): New argument FOR_BACKTRACK.  All callers\n \tchanged.  Handle DEP_REPLACE deps.\n@@ -366,16 +369,14 @@\n \t* Makefile.in (sched-deps.o): Update dependencies.\n \t* config/c6x/c6x.c (in_hwloop): New static variable.\n \t(c6x_set_sched_flags): If it is true, add DONT_BREAK_DEPENDENCIES.\n-\t(hwloop_optimize): Set and clear it around preliminary scheduling\n-\tpass.\n+\t(hwloop_optimize): Set and clear it around preliminary scheduling pass.\n \n 2012-09-19  Tulio Magno Quites Machado Filho  <tuliom@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-builtin.def: Add __builtin_ppc_get_timebase\n \tand __builtin_ppc_mftb.\n-\t* config/rs6000/rs6000.c (rs6000_expand_zeroop_builtin): New\n-\tfunction to expand an expression that calls a built-in without\n-\targuments.\n+\t* config/rs6000/rs6000.c (rs6000_expand_zeroop_builtin): New function\n+\tto expand an expression that calls a built-in without arguments.\n \t(rs6000_expand_builtin): Add __builtin_ppc_get_timebase and\n \t__builtin_ppc_mftb.\n \t(rs6000_init_builtins): Likewise.\n@@ -384,8 +385,8 @@\n \t(rs6000_mftb_<mode>): New pattern.\n \n \t* doc/extend.texi (PowerPC Built-in Functions): New section.\n-\t(PowerPC AltiVec/VSX Built-in Functions):\n-\tMove some built-ins unrelated to Altivec/VSX to the new section.\n+\t(PowerPC AltiVec/VSX Built-in Functions): Move some built-ins\n+\tunrelated to Altivec/VSX to the new section.\n \n 2012-09-19  David Edelsohn  <dje.gcc@gmail.com>\n \n@@ -428,14 +429,13 @@\n \n 2012-09-19  Richard Guenther  <rguenther@suse.de>\n \n-\t* tree-ssa-forwprop.c (get_prop_source_stmt): Simplify. \n+\t* tree-ssa-forwprop.c (get_prop_source_stmt): Simplify.\n \n 2012-09-19  Jan Hubicka  <jh@suse.cz>\n \n \t* symtab.c (insert_to_assembler_name_hash): Do not insert\n \tregister vars.\n-\t(unlink_from_assembler_name_hash): NULL out pointers of unlinked\n-\tvar.\n+\t(unlink_from_assembler_name_hash): NULL out pointers of unlinked var.\n \t(symtab_prevail_in_asm_name_hash): New.\n \t(symtab_initialize_asm_name_hash): Break out from ...\n \t(symtab_node_for_asm): ... here.\n@@ -466,7 +466,8 @@\n \t(lto_symtab_merge_decls_1): Likewise; add debug dumps.\n \t(lto_symtab_merge_decls): Likewise; do not merge at ltrans stage.\n \t(lto_symtab_merge_cgraph_nodes_1): Reorg to work on symtab.\n-\t(lto_symtab_merge_cgraph_nodes): Likewise; do not merge at ltrans stage.\n+\t(lto_symtab_merge_cgraph_nodes): Likewise; do not merge at ltrans\n+\tstage.\n \t(lto_symtab_prevailing_decl): Rewrite to lookup into symtab.\n \t* lto-streaer.h (lto_symtab_free): Remove.\n \t* lto-cgraph.c (add_references): Cleanup.\n@@ -526,8 +527,7 @@\n \n 2012-09-18  Segher Boessenkool  <segher@kernel.crashing.org>\n \n-\t* config/rs6000/rs6000.md (sminsi3, smaxsi3, uminsi3, umaxsi3):\n-\tDelete.\n+\t* config/rs6000/rs6000.md (sminsi3, smaxsi3, uminsi3, umaxsi3): Delete.\n \t(abssi2, abs<mode>2_isel, nabs<mode>2_isel, abssi2_nopower,\n \tnabs_nopower): Delete.\n \t(absdi2, absdi2_internal, nabsdi2): Delete.\n@@ -549,7 +549,7 @@\n \t* config/i386/i386.c (ix86_rtx_costs): Limit > UNITS_PER_WORD\n \tAND/IOR/XOR cost calculation to MODE_INT class modes.\n \n-2012-09-18 Thomas Quinot  <quinot@adacore.com>       \n+2012-09-18 Thomas Quinot  <quinot@adacore.com>\n \n \t* doc/invoke.texi: Document -fada-spec-parent.\n \n@@ -721,7 +721,7 @@\n \t(avr_out_plus_symbol): New static function.\n \t(avr_out_plus): Rewrite.\n \t(adjust_insn_length): Handle: ADJUST_LEN_PLUS.  Remove handling\n-\tof: ADJUST_LEN_OUT_PLUS, ADJUST_LEN_PLUS64, ADJUST_LEN_MINUS, \n+\tof: ADJUST_LEN_OUT_PLUS, ADJUST_LEN_PLUS64, ADJUST_LEN_MINUS,\n \tADJUST_LEN_MINUS64, ADJUST_LEN_OUT_PLUS_NOCLOBBER.\n \t(notice_update_cc): Handle: CC_PLUS.  Remove handling of: CC_MINUS,\n \tCC_OUT_PLUS, CC_OUT_PLUS_NOCLOBBER\n@@ -837,8 +837,7 @@\n \t(*fmai_fmadd_<mode>, *fmai_fmsub_<mode>): Likewise.\n \tRemove third alternative.\n \t(*fmai_fnmadd_<mode>, *fmai_fnmsub_<mode>): Likewise.  Negate\n-\toperand 2 instead of operand 1, but put it as first argument\n-\tof fma.\n+\toperand 2 instead of operand 1, but put it as first argument of fma.\n \t* config/i386/fmaintrin.h (_mm_fnmadd_sd, _mm_fnmadd_ss,\n \t_mm_fnmsub_sd, _mm_fnmsub_ss): Negate the second argument instead\n \tof the first.\n@@ -853,11 +852,9 @@\n \n 2012-09-14  Richard Guenther  <rguenther@suse.de>\n \n-\t* tree-vrp.c (register_new_assert_for): Simplify for backward\n-\twalk.\n-\t(find_assert_locations_1): Walk the basic-block backwards,\n-\tproperly add/prune from live.  Use live for asserts derived\n-\tfrom stmts.\n+\t* tree-vrp.c (register_new_assert_for): Simplify for backward walk.\n+\t(find_assert_locations_1): Walk the basic-block backwards, properly\n+\tadd/prune from live.  Use live for asserts derived from stmts.\n \n 2012-09-14  Marc Glisse  <marc.glisse@inria.fr>\n \n@@ -883,8 +880,7 @@\n \t(BYTES_BIG_ENDIAN, WORDS_BIG_ENDIAN): Add bi-endian support.\n \t(TARGET_CPU_CPP_BUILTINS): Add __MOXIE_LITTLE_ENDIAN__ and\n \t__MOXIE_BIG_ENDIAN__.\n-\t* config/moxie/t-moxie (MULTILIB_DIRNAMES, MULTILIB_OPTIONS):\n-\tDefine.\n+\t* config/moxie/t-moxie (MULTILIB_DIRNAMES, MULTILIB_OPTIONS): Define.\n \t* config/moxie/moxie.opt: New file.\n \t* doc/invoke.texi (Moxie Options): Add section documenting -mel\n \tand -meb.\n@@ -893,8 +889,7 @@\n \t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c++/53210\n-\t* doc/invoke.texi ([Winit-self]): Document as enabled by -Wall\n-\tin C++.\n+\t* doc/invoke.texi ([Winit-self]): Document as enabled by -Wall in C++.\n \n 2012-09-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n@@ -1683,7 +1678,7 @@\n \t* config/xtensa/xtensa (TARGET_ADDRESS_COST): Use\n \thook_int_rtx_mode_as_bool_0 instead of hook_int_rtx_bool_0.\n \n-2012-09-05   Diego Novillo  <dnovillo@google.com>\n+2012-09-05  Diego Novillo  <dnovillo@google.com>\n \n \tPR bootstrap/54484\n \t* vec.h (vec_t::lower_bound): Fix spelling of LESSTHAN argument.\n@@ -1824,7 +1819,7 @@\n \t(init_pre): Likewise.\n \t(fini_pre): Likewise.\n \n-2012-09-04   Diego Novillo  <dnovillo@google.com>\n+2012-09-04  Diego Novillo  <dnovillo@google.com>\n \n \tPR bootstrap/54479\n \t* vec.h (vec_t::copy): Add cast in call to reserve_exact.\n@@ -1837,7 +1832,7 @@\n \tAVAIL_OUT for FRE.\n \t(init_pre): Do not allocate not needed bitmap sets for FRE.\n \n-2012-09-04   Diego Novillo  <dnovillo@google.com>\n+2012-09-04  Diego Novillo  <dnovillo@google.com>\n \n \tRewrite VEC_* functions as member functions of vec_t.\n "}, {"sha": "cdd5d69760d4253b02a2de04729afe84cb4d2441", "filename": "gcc/optabs.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5f06780e5c5a4ec07af7907b44c054849ae0b1/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5f06780e5c5a4ec07af7907b44c054849ae0b1/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=ae5f06780e5c5a4ec07af7907b44c054849ae0b1", "patch": "@@ -4108,10 +4108,11 @@ prepare_cmp_insn (rtx x, rtx y, enum rtx_code comparison, rtx size,\n \t\t\t\t\tXEXP (x, 0), Pmode,\n \t\t\t\t\tXEXP (y, 0), Pmode,\n \t\t\t\t\tsize, cmp_mode);\n-\n-      *ptest = gen_rtx_fmt_ee (comparison, VOIDmode, result, const0_rtx);\n-      *pmode = result_mode;\n-      return;\n+      x = result;\n+      y = const0_rtx;\n+      mode = result_mode;\n+      methods = OPTAB_LIB_WIDEN;\n+      unsignedp = false;\n     }\n \n   /* Don't allow operands to the compare to trap, as that can put the"}]}