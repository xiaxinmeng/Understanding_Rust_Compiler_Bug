{"sha": "4023bc5647c3c76ff70ad7efb6db6f5db781016e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAyM2JjNTY0N2MzYzc2ZmY3MGFkN2VmYjZkYjZmNWRiNzgxMDE2ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-07T07:44:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-07T07:44:47Z"}, "message": "re PR tree-optimization/77879 (mpd gets miscompiled since r235622)\n\n2016-10-07  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77879\n\t* tree-ssa-structalias.c (handle_const_call): Properly handle\n\tNRV return slots.\n\t(handle_pure_call): Likewise.\n\nFrom-SVN: r240854", "tree": {"sha": "4f255f1460fc2e8f5538ad89a58c8cbcfc891f40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f255f1460fc2e8f5538ad89a58c8cbcfc891f40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4023bc5647c3c76ff70ad7efb6db6f5db781016e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4023bc5647c3c76ff70ad7efb6db6f5db781016e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4023bc5647c3c76ff70ad7efb6db6f5db781016e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4023bc5647c3c76ff70ad7efb6db6f5db781016e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "729232db0b630ffb0a17dfcfa0850ff68ac35bbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/729232db0b630ffb0a17dfcfa0850ff68ac35bbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/729232db0b630ffb0a17dfcfa0850ff68ac35bbf"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "9125650a5453559c98f13aa177d27a66f583bf5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4023bc5647c3c76ff70ad7efb6db6f5db781016e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4023bc5647c3c76ff70ad7efb6db6f5db781016e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4023bc5647c3c76ff70ad7efb6db6f5db781016e", "patch": "@@ -1,3 +1,10 @@\n+2016-10-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77879\n+\t* tree-ssa-structalias.c (handle_const_call): Properly handle\n+\tNRV return slots.\n+\t(handle_pure_call): Likewise.\n+\n 2016-10-06  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_elf_asm_out_constructor)"}, {"sha": "a74f0834dfa39d0a14a0f11c07e1e7099de37ab8", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4023bc5647c3c76ff70ad7efb6db6f5db781016e/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4023bc5647c3c76ff70ad7efb6db6f5db781016e/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=4023bc5647c3c76ff70ad7efb6db6f5db781016e", "patch": "@@ -4063,15 +4063,34 @@ handle_const_call (gcall *stmt, vec<ce_s> *results)\n {\n   struct constraint_expr rhsc;\n   unsigned int k;\n+  bool need_uses = false;\n \n   /* Treat nested const functions the same as pure functions as far\n      as the static chain is concerned.  */\n   if (gimple_call_chain (stmt))\n+    {\n+      varinfo_t uses = get_call_use_vi (stmt);\n+      make_constraint_to (uses->id, gimple_call_chain (stmt));\n+      need_uses = true;\n+    }\n+\n+  /* And if we applied NRV the address of the return slot escapes as well.  */\n+  if (gimple_call_return_slot_opt_p (stmt)\n+      && gimple_call_lhs (stmt) != NULL_TREE\n+      && TREE_ADDRESSABLE (TREE_TYPE (gimple_call_lhs (stmt))))\n+    {\n+      varinfo_t uses = get_call_use_vi (stmt);\n+      auto_vec<ce_s> tmpc;\n+      get_constraint_for_address_of (gimple_call_lhs (stmt), &tmpc);\n+      make_constraints_to (uses->id, tmpc);\n+      need_uses = true;\n+    }\n+\n+  if (need_uses)\n     {\n       varinfo_t uses = get_call_use_vi (stmt);\n       make_any_offset_constraints (uses);\n       make_transitive_closure_constraints (uses);\n-      make_constraint_to (uses->id, gimple_call_chain (stmt));\n       rhsc.var = uses->id;\n       rhsc.offset = 0;\n       rhsc.type = SCALAR;\n@@ -4140,6 +4159,22 @@ handle_pure_call (gcall *stmt, vec<ce_s> *results)\n       make_constraint_to (uses->id, gimple_call_chain (stmt));\n     }\n \n+  /* And if we applied NRV the address of the return slot.  */\n+  if (gimple_call_return_slot_opt_p (stmt)\n+      && gimple_call_lhs (stmt) != NULL_TREE\n+      && TREE_ADDRESSABLE (TREE_TYPE (gimple_call_lhs (stmt))))\n+    {\n+      if (!uses)\n+\t{\n+\t  uses = get_call_use_vi (stmt);\n+\t  make_any_offset_constraints (uses);\n+\t  make_transitive_closure_constraints (uses);\n+\t}\n+      auto_vec<ce_s> tmpc;\n+      get_constraint_for_address_of (gimple_call_lhs (stmt), &tmpc);\n+      make_constraints_to (uses->id, tmpc);\n+    }\n+\n   /* Pure functions may return call-used and nonlocal memory.  */\n   if (uses)\n     {"}]}