{"sha": "1065f0abc12c9075c54996ceb937c32284371ac5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA2NWYwYWJjMTJjOTA3NWM1NDk5NmNlYjkzN2MzMjI4NDM3MWFjNQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-02-20T01:01:20Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-02-20T01:01:20Z"}, "message": "__sparc_v9__ renamed to __arch64__\n\nFrom-SVN: r11324", "tree": {"sha": "00aba0f68d36ec969207127033f3574912a548cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00aba0f68d36ec969207127033f3574912a548cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1065f0abc12c9075c54996ceb937c32284371ac5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1065f0abc12c9075c54996ceb937c32284371ac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1065f0abc12c9075c54996ceb937c32284371ac5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1065f0abc12c9075c54996ceb937c32284371ac5/comments", "author": null, "committer": null, "parents": [{"sha": "f6a048b977cfa3e4a902c8278614af5ef077e192", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6a048b977cfa3e4a902c8278614af5ef077e192", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6a048b977cfa3e4a902c8278614af5ef077e192"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "7a394632d9e1f424146d11621128ba2a56e741e4", "filename": "gcc/ginclude/va-sparc.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1065f0abc12c9075c54996ceb937c32284371ac5/gcc%2Fginclude%2Fva-sparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1065f0abc12c9075c54996ceb937c32284371ac5/gcc%2Fginclude%2Fva-sparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-sparc.h?ref=1065f0abc12c9075c54996ceb937c32284371ac5", "patch": "@@ -6,7 +6,7 @@\n #ifndef __GNUC_VA_LIST\n #define __GNUC_VA_LIST\n \n-#ifdef __sparc_v9__\n+#ifdef __arch64__\n typedef long long __va_greg;\n typedef double __va_freg;\n typedef struct {\n@@ -26,7 +26,7 @@ typedef char * __gnuc_va_list;\n    i.e., we have to pass a `va_list' to vsprintf.  */\n typedef void * __gnuc_va_list;\n #endif\n-#endif /* not __sparc_v9__ */\n+#endif /* not __arch64__ */\n #endif /* not __GNUC_VA_LIST */\n \n /* If this is for internal libc use, don't define anything but\n@@ -35,7 +35,7 @@ typedef void * __gnuc_va_list;\n \n #ifdef _STDARG_H\n \n-#ifdef __sparc_v9__\n+#ifdef __arch64__\n #define va_start(AP, LASTARG) \\\n __extension__ \\\n   ({ \\\n@@ -57,14 +57,14 @@ __extension__ \\\n #define va_start(AP, LASTARG)\t\t\t\t\t\\\n   (__builtin_saveregs (), AP = ((char *) __builtin_next_arg (LASTARG)))\n #endif\n-#endif /* not __sparc_v9__ */\n+#endif /* not __arch64__ */\n \n #else\n \n #define va_alist  __builtin_va_alist\n #define va_dcl    int __builtin_va_alist;...\n \n-#ifdef __sparc_v9__\n+#ifdef __arch64__\n #define va_start(AP) \\\n __extension__ \\\n   ({ \\\n@@ -84,7 +84,7 @@ __extension__ \\\n #define va_start(AP) \t\t\t\t\t\t\\\n  (__builtin_saveregs (), (AP) = ((char *) &__builtin_va_alist))\n #endif\n-#endif /* not __sparc_v9__ */\n+#endif /* not __arch64__ */\n \n #endif\n \n@@ -129,7 +129,7 @@ enum __va_type_classes {\n    in the stack are made to be word-aligned; for an aggregate that is\n    not word-aligned, we advance the pointer to the first non-reg slot.  */\n \n-#ifdef __sparc_v9__\n+#ifdef __arch64__\n \n #define va_arg(pvar,TYPE)\t\t\t\t\t\\\n __extension__\t\t\t\t\t\t\t\\\n@@ -173,7 +173,7 @@ __extension__\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   (TYPE *) __result;}))\n \n-#else /* not __sparc_v9__ */\n+#else /* not __arch64__ */\n \n #define __va_rounded_size(TYPE)  \\\n   (((sizeof (TYPE) + sizeof (int) - 1) / sizeof (int)) * sizeof (int))\n@@ -198,6 +198,6 @@ __extension__\t\t\t\t\t\t\t\\\n \t (TYPE *) (void *) __u.__d; })\t\t\t\t\\\n     : ((pvar) = (char *)(pvar) + __va_rounded_size (TYPE),\t\\\n        ((TYPE *) (void *) ((char *)(pvar) - __va_rounded_size (TYPE)))));}))\n-#endif /* not __sparc_v9__ */\n+#endif /* not __arch64__ */\n \n #endif /* defined (_STDARG_H) || defined (_VARARGS_H) */"}]}