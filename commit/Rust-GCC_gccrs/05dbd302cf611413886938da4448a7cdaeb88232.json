{"sha": "05dbd302cf611413886938da4448a7cdaeb88232", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVkYmQzMDJjZjYxMTQxMzg4NjkzOGRhNDQ0OGE3Y2RhZWI4ODIzMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T16:09:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T16:09:10Z"}, "message": "[multiple changes]\n\n2011-08-01  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_disp.adb (Override_Dispatching_Operation): Enforce strictness of\n\tcondition that detects if the overridden operation must replace an\n\texisting entity.\n\n2011-08-01  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Case_Expression): Propagate to the expanded\n\tcode declarations inserted by Insert_Actions in each alternative of the\n\tN_Case_Expression node.\n\n2011-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch6.adb: Minor code reorganization.\n\t* sem_util.adb: Minor reformatting.\n\nFrom-SVN: r177059", "tree": {"sha": "f9333a9cb727b17699ecf799b4cf9098ec094277", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9333a9cb727b17699ecf799b4cf9098ec094277"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05dbd302cf611413886938da4448a7cdaeb88232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05dbd302cf611413886938da4448a7cdaeb88232", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05dbd302cf611413886938da4448a7cdaeb88232", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05dbd302cf611413886938da4448a7cdaeb88232/comments", "author": null, "committer": null, "parents": [{"sha": "af9e051fadb5e6900ffc8668d6166dd5a1988ee2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af9e051fadb5e6900ffc8668d6166dd5a1988ee2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af9e051fadb5e6900ffc8668d6166dd5a1988ee2"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "b171ba0c213c9a6bf22c1f4d65571cf03d118124", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05dbd302cf611413886938da4448a7cdaeb88232/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05dbd302cf611413886938da4448a7cdaeb88232/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=05dbd302cf611413886938da4448a7cdaeb88232", "patch": "@@ -1,3 +1,20 @@\n+2011-08-01  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_disp.adb (Override_Dispatching_Operation): Enforce strictness of\n+\tcondition that detects if the overridden operation must replace an\n+\texisting entity.\n+\n+2011-08-01  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Case_Expression): Propagate to the expanded\n+\tcode declarations inserted by Insert_Actions in each alternative of the\n+\tN_Case_Expression node.\n+\n+2011-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch6.adb: Minor code reorganization.\n+\t* sem_util.adb: Minor reformatting.\n+\n 2011-08-01  Pascal Obry  <obry@adacore.com>\n \n \t* prj-env.adb: Remove <prefix>/lib/gpr/<target> project search path."}, {"sha": "a0c4104b3312b36fd854d5889847f38c607dbeb3", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05dbd302cf611413886938da4448a7cdaeb88232/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05dbd302cf611413886938da4448a7cdaeb88232/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=05dbd302cf611413886938da4448a7cdaeb88232", "patch": "@@ -4018,6 +4018,11 @@ package body Exp_Ch4 is\n             Aloc : constant Source_Ptr := Sloc (Aexp);\n \n          begin\n+            --  Propagate declarations inserted in the node by Insert_Actions\n+            --  (for example, temporaries generated to remove side effects).\n+\n+            Append_List_To (Actions, Sinfo.Actions (Alt));\n+\n             if not Is_Scalar_Type (Typ) then\n                Aexp :=\n                  Make_Attribute_Reference (Aloc,"}, {"sha": "84bb761e190ac8e81a1d11c4e33377bfa89a3fd2", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05dbd302cf611413886938da4448a7cdaeb88232/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05dbd302cf611413886938da4448a7cdaeb88232/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=05dbd302cf611413886938da4448a7cdaeb88232", "patch": "@@ -1855,7 +1855,7 @@ package body Sem_Ch6 is\n                            Last_Source_Node_In_Sequence (Statements (HSS));\n                begin\n                   if Present (Stat)\n-                    and then not Nkind_In (Nkind (Stat),\n+                    and then not Nkind_In (Stat,\n                                            N_Simple_Return_Statement,\n                                            N_Extended_Return_Statement)\n                   then"}, {"sha": "450716bd9e6e2a9b4149f7a7b8414204d6ba7338", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05dbd302cf611413886938da4448a7cdaeb88232/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05dbd302cf611413886938da4448a7cdaeb88232/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=05dbd302cf611413886938da4448a7cdaeb88232", "patch": "@@ -2078,15 +2078,19 @@ package body Sem_Disp is\n       --  The location of entities that come from source in the list of\n       --  primitives of the tagged type must follow their order of occurrence\n       --  in the sources to fulfill the C++ ABI. If the overridden entity is a\n-      --  primitive of an interface that is not an ancestor of this tagged\n-      --  type (that is, it is an entity added to the list of primitives by\n-      --  Derive_Interface_Progenitors), then we must append the new entity\n-      --  at the end of the list of primitives.\n+      --  primitive of an interface that is not implemented by the parents of\n+      --  this tagged type (that is, it is an alias of an interface primitive\n+      --  generated by Derive_Interface_Progenitors), then we must append the\n+      --  new entity at the end of the list of primitives.\n \n       if Present (Alias (Prev_Op))\n+        and then Etype (Tagged_Type) /= Tagged_Type\n         and then Is_Interface (Find_Dispatching_Type (Alias (Prev_Op)))\n         and then not Is_Ancestor (Find_Dispatching_Type (Alias (Prev_Op)),\n                                   Tagged_Type)\n+        and then not Implements_Interface\n+                       (Etype (Tagged_Type),\n+                        Find_Dispatching_Type (Alias (Prev_Op)))\n       then\n          Remove_Elmt (Primitive_Operations (Tagged_Type), Elmt);\n          Append_Elmt (New_Op, Primitive_Operations (Tagged_Type));"}, {"sha": "9a9b60e395ab53e2f0e773dd4476c1990a829650", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05dbd302cf611413886938da4448a7cdaeb88232/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05dbd302cf611413886938da4448a7cdaeb88232/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=05dbd302cf611413886938da4448a7cdaeb88232", "patch": "@@ -7986,13 +7986,12 @@ package body Sem_Util is\n    ----------------------------------\n \n    function Last_Source_Node_In_Sequence (List : List_Id) return Node_Id is\n-      N : Node_Id := Last (List);\n+      N : Node_Id;\n+\n    begin\n+      N := Last (List);\n       while Present (N) loop\n          exit when Comes_From_Source (N);\n-\n-         --  Reach before the generated statements at the end of the function\n-\n          N := Prev (N);\n       end loop;\n "}]}