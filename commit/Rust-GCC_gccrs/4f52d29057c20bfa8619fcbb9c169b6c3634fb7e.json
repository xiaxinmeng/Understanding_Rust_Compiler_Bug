{"sha": "4f52d29057c20bfa8619fcbb9c169b6c3634fb7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY1MmQyOTA1N2MyMGJmYTg2MTlmY2JiOWMxNjliNmMzNjM0ZmI3ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-20T03:11:40Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-20T03:11:40Z"}, "message": "(handle_class_ref): Call assemble_constant_align before output_constant.\n\nFrom-SVN: r4510", "tree": {"sha": "4fb31cc633b4cc5b6baab6723417cfa360a40958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fb31cc633b4cc5b6baab6723417cfa360a40958"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f52d29057c20bfa8619fcbb9c169b6c3634fb7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f52d29057c20bfa8619fcbb9c169b6c3634fb7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f52d29057c20bfa8619fcbb9c169b6c3634fb7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f52d29057c20bfa8619fcbb9c169b6c3634fb7e/comments", "author": null, "committer": null, "parents": [{"sha": "d447ec6f4c78718f3560f47f95ef0b1d923d9655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d447ec6f4c78718f3560f47f95ef0b1d923d9655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d447ec6f4c78718f3560f47f95ef0b1d923d9655"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "04bb3941df81b2ab8a2c58b26b9011f0d73d820b", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f52d29057c20bfa8619fcbb9c169b6c3634fb7e/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f52d29057c20bfa8619fcbb9c169b6c3634fb7e/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=4f52d29057c20bfa8619fcbb9c169b6c3634fb7e", "patch": "@@ -1043,7 +1043,7 @@ synth_module_prologue ()\n       umsg_decl = build_decl (FUNCTION_DECL,\n \t\t\t      get_identifier (TAG_MSGSEND), temp_type);\n       DECL_EXTERNAL (umsg_decl) = 1;\n-      TREE_PUBLIC (umsg_decl) = 0;\n+      TREE_PUBLIC (umsg_decl) = 1;\n       DECL_INLINE (umsg_decl) = 1;\n \n       if (flag_traditional && TAG_MSGSEND[0] != '_')\n@@ -7452,6 +7452,7 @@ handle_class_ref (chain)\n     {\n       tree decl;\n       char *string = (char *) alloca (strlen (name) + 30);\n+      tree exp;\n \n       sprintf (string, \"%sobjc_class_name_%s\",\n \t       (flag_next_runtime ? \".\" : \"__\"), name);\n@@ -7467,12 +7468,16 @@ handle_class_ref (chain)\n       /* Make following constant read-only (why not)?  */\n       readonly_data_section ();\n \n+      exp = build1 (ADDR_EXPR, string_type_node, decl);\n+\n+      /* Align the section properly.  */\n+      assemble_constant_align (exp);\n+\n       /* Inform the assembler about this new external thing.  */\n       assemble_external (decl);\n \n       /* Output a constant to reference this address.  */\n-      output_constant (build1 (ADDR_EXPR, string_type_node, decl),\n-\t\t       int_size_in_bytes (string_type_node));\n+      output_constant (exp, int_size_in_bytes (string_type_node));\n     }\n   else\n     {"}]}