{"sha": "6a09296d7aa232eafa5ba864338138ea917a0093", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEwOTI5NmQ3YWEyMzJlYWZhNWJhODY0MzM4MTM4ZWE5MTdhMDA5Mw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-05-11T12:00:35Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-05-11T12:00:35Z"}, "message": "Make-lang.in (jvspec.o): Don't define WITH_THREAD_x or WITH_GC_x flags.\n\n\t* Make-lang.in (jvspec.o): Don't define WITH_THREAD_x or WITH_GC_x\n\tflags.\n\t* jvspec.c (THREAD_NAME): Removed.\n\t(GC_NAME): Likewise.\n\t(MATHLIB): Likewise.\n\t(WITHLIBC): Likewise.\n\t(GCLIB): Likewise.\n\t(THREADLIB): Likewise.\n\t(MATH_LIBRARY): Likewise.\n\t(lang_specific_driver): Don't add `-l' options to command line.\n\tInstead, add a single --specs option.  Recognize `-L' options and\n\tuse them to search for spec file.\n\t(find_spec_file): New function.\n\t(SPEC_FILE): New define.\n\nFrom-SVN: r26883", "tree": {"sha": "edc84db05a5be35c47c6379d6403398a5da6b703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edc84db05a5be35c47c6379d6403398a5da6b703"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a09296d7aa232eafa5ba864338138ea917a0093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a09296d7aa232eafa5ba864338138ea917a0093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a09296d7aa232eafa5ba864338138ea917a0093", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a09296d7aa232eafa5ba864338138ea917a0093/comments", "author": null, "committer": null, "parents": [{"sha": "b8b8bc0348891a1f9d8b62c0218865ad50e44e35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b8bc0348891a1f9d8b62c0218865ad50e44e35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8b8bc0348891a1f9d8b62c0218865ad50e44e35"}], "stats": {"total": 194, "additions": 59, "deletions": 135}, "files": [{"sha": "981d5e9c77437a585b91565fc59e353bbab50f2a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a09296d7aa232eafa5ba864338138ea917a0093/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a09296d7aa232eafa5ba864338138ea917a0093/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6a09296d7aa232eafa5ba864338138ea917a0093", "patch": "@@ -1,3 +1,20 @@\n+1999-05-11  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* Make-lang.in (jvspec.o): Don't define WITH_THREAD_x or WITH_GC_x\n+\tflags.\n+\t* jvspec.c (THREAD_NAME): Removed.\n+\t(GC_NAME): Likewise.\n+\t(MATHLIB): Likewise.\n+\t(WITHLIBC): Likewise.\n+\t(GCLIB): Likewise.\n+\t(THREADLIB): Likewise.\n+\t(MATH_LIBRARY): Likewise.\n+\t(lang_specific_driver): Don't add `-l' options to command line.\n+\tInstead, add a single --specs option.  Recognize `-L' options and\n+\tuse them to search for spec file.\n+\t(find_spec_file): New function.\n+\t(SPEC_FILE): New define.\n+\n Tue May 11 11:46:36 1999  Dave Brolley  <brolley@cygnus.com>\n \n \t* lang-options.h: -MD, -MMD, -M and -MM not needed here for"}, {"sha": "557001bcc94b5f86c2886f3072ebfa788ceaa22f", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a09296d7aa232eafa5ba864338138ea917a0093/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a09296d7aa232eafa5ba864338138ea917a0093/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=6a09296d7aa232eafa5ba864338138ea917a0093", "patch": "@@ -81,8 +81,7 @@ jc1$(exeext): $(P) $(JAVA_SRCS) $(LIBDEPS) stamp-objlist\n \tcd java; $(MAKE) $(FLAGS_TO_PASS) $(JAVA_FLAGS_TO_PASS) ../jc1$(exeext)\n \n jvspec.o: $(srcdir)/java/jvspec.c\n-\t$(CC) -c -DWITH_THREAD_$(GCC_THREAD_FILE) -DWITH_GC_$(JAVAGC) \\\n-\t\t$(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) \\\n \t\t$(INCLUDES) $(srcdir)/java/jvspec.c\n \n # Create the compiler driver for $(GCJ)."}, {"sha": "95330da332df9da5949d4dd4abfb790544733f75", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 41, "deletions": 133, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a09296d7aa232eafa5ba864338138ea917a0093/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a09296d7aa232eafa5ba864338138ea917a0093/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=6a09296d7aa232eafa5ba864338138ea917a0093", "patch": "@@ -29,37 +29,17 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n #include \"gansidecl.h\"\n \n-#if defined (WITH_THREAD_posix) || defined (WITH_THREAD_pthreads)\n-#define THREAD_NAME \"-lpthread\"\n-#elif defined (WITH_THREAD_qt)\n-#define THREAD_NAME \"-lgcjcoop\"\n-#endif\n-\n-#if defined (WITH_GC_boehm)\n-#define GC_NAME \"-lgcjgc\"\n-#endif\n+/* Name of spec file.  */\n+#define SPEC_FILE \"libgcj.spec\"\n \n /* This bit is set if we saw a `-xfoo' language specification.  */\n #define LANGSPEC\t(1<<1)\n-/* This bit is set if they did `-lm' or `-lmath'.  */\n-#define MATHLIB\t\t(1<<2)\n-/* This bit is set if they did `-lc'.  */\n-#define WITHLIBC\t(1<<3)\n-/* This bit is set if they did `-lgcjgc'.  */\n-#define GCLIB\t\t(1<<4)\n-/* This bit is set if they did `-lpthread' (or added some other thread\n-   library).  */\n-#define THREADLIB\t(1<<5)\n /* True if this arg is a parameter to the previous option-taking arg. */\n-#define PARAM_ARG\t(1<<6)\n+#define PARAM_ARG\t(1<<2)\n /* True if this arg is a .java input file name. */\n-#define JAVA_FILE_ARG\t(1<<7)\n+#define JAVA_FILE_ARG\t(1<<3)\n /* True if this arg is a .class input file name. */\n-#define CLASS_FILE_ARG\t(1<<8)\n-\n-#ifndef MATH_LIBRARY\n-#define MATH_LIBRARY \"-lm\"\n-#endif\n+#define CLASS_FILE_ARG\t(1<<4)\n \n extern int do_spec\t\tPROTO((char *));\n extern char *input_filename;\n@@ -84,6 +64,29 @@ char jvgenmain_spec[] =\n \t\t   %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%U.s}} |\\n\\\n               %{!S:as %a %Y -o %d%w%u%O %{!pipe:%U.s} %A\\n }\";\n \n+/* Return full path name of spec file if it is in DIR, or NULL if\n+   not.  */\n+static char *\n+find_spec_file (dir)\n+     char *dir;\n+{\n+  char *spec;\n+  int x;\n+  struct stat sb;\n+\n+  spec = (char *) xmalloc (strlen (dir) + sizeof (SPEC_FILE)\n+\t\t\t   + sizeof (\"-specs=\") + 4);\n+  strcpy (spec, \"-specs=\");\n+  x = strlen (spec);\n+  strcat (spec, dir);\n+  strcat (spec, \"/\");\n+  strcat (spec, SPEC_FILE);\n+  if (! stat (spec + x, &sb))\n+    return spec;\n+  free (spec);\n+  return NULL;\n+}\n+\n void\n lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n      void (*fn)();\n@@ -168,16 +171,6 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n      LANGSPEC, MATHLIB, WITHLIBC, or GCLIB.  */\n   int *args;\n \n-  /* By default, we throw on the math library.  */\n-  int need_math = 1;\n-\n-  /* By default, we throw in the thread library (if one is required).\n-   */\n-  int need_thread = 1;\n-\n-  /* By default, we throw in the gc library (if one is required).  */\n-  int need_gc = 1;\n-\n   /* The total number of arguments with the new stuff.  */\n   int argc;\n \n@@ -193,6 +186,9 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n   /* Non-zero if linking is supposed to happen.  */\n   int will_link = 1;\n \n+  /* The argument we use to specify the spec file.  */\n+  char *spec_file = NULL;\n+\n   argc = *in_argc;\n   argv = *in_argv;\n   added_libraries = *in_added_libraries;\n@@ -222,39 +218,11 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n \t    {\n \t      library = 0;\n \t    }\n-\t  else if (strcmp (argv[i], \"-lm\") == 0\n-\t\t   || strcmp (argv[i], \"-lmath\") == 0\n-#ifdef ALT_LIBM\n-\t\t   || strcmp (argv[i], ALT_LIBM) == 0\n-#endif\n-\t\t  )\n-\t    {\n-\t      args[i] |= MATHLIB;\n-\t      need_math = 0;\n-\t    }\n \t  else if (strncmp (argv[i], \"-fmain=\", 7) == 0)\n \t    {\n \t      main_class_name = argv[i] + 7;\n \t      added--;\n \t    }\n-\t  else if (strcmp (argv[i], \"-lgcj\") == 0)\n-\t    saw_libgcj = 1;\n-\t  else if (strcmp (argv[i], \"-lc\") == 0)\n-\t    args[i] |= WITHLIBC;\n-#ifdef GC_NAME\n-\t  else if (strcmp (argv[i], GC_NAME) == 0)\n-\t    {\n-\t      args[i] |= GCLIB;\n-\t      need_gc = 0;\n-\t    }\n-#endif\n-#ifdef THREAD_NAME\n-\t  else if (strcmp (argv[i], THREAD_NAME) == 0)\n-\t    {\n-\t      args[i] |= THREADLIB;\n-\t      need_thread = 0;\n-\t    }\n-#endif\n \t  else if (strcmp (argv[i], \"-v\") == 0)\n \t    {\n \t      saw_verbose_flag = 1;\n@@ -362,8 +330,6 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n     (*fn) (\"argument to `%s' missing\\n\", quote);\n \n   num_args = argc + added;\n-  if (will_link)\n-    num_args += need_math + need_thread + need_gc;\n   if (saw_C)\n     {\n       num_args += 3;\n@@ -408,6 +374,8 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n     }\n   if (saw_g + saw_O == 0)\n     num_args++;\n+  if (will_link)\n+    num_args++;\n   arglist = (char **) xmalloc ((num_args + 1) * sizeof (char *));\n \n   for (i = 0, j = 0; i < argc; i++, j++)\n@@ -438,6 +406,9 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n \t  continue;\n \t}\n \n+      if (will_link && spec_file == NULL && strncmp (argv[i], \"-L\", 2) == 0)\n+\tspec_file = find_spec_file (argv[i] + 2);\n+\n       if (strncmp (argv[i], \"-fmain=\", 7) == 0)\n \t{\n \t  if (! will_link)\n@@ -446,35 +417,6 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n \t  continue;\n \t}\n \n-      /* Make sure -lgcj is before the math library, since libgcj\n-\t itself uses those math routines.  */\n-      if (!saw_math && (args[i] & MATHLIB) && library)\n-\t{\n-\t  --j;\n-\t  saw_math = argv[i];\n-\t}\n-\n-      /* Likewise -lgcj must come before -lc.  */\n-      if (!saw_libc && (args[i] & WITHLIBC) && library)\n-\t{\n-\t  --j;\n-\t  saw_libc = argv[i];\n-\t}\n-\n-      /* And -lgcj must come before -lgcjgc.  */\n-      if (!saw_gc && (args[i] & GCLIB) && library)\n-\t{\n-\t  --j;\n-\t  saw_gc = argv[i];\n-\t}\n-\n-      /* And -lgcj must come before thread library.  */\n-      if (!saw_threadlib && (args[i] & THREADLIB) && library)\n-\t{\n-\t  --j;\n-\t  saw_threadlib = argv[i];\n-\t}\n-\n       if ((args[i] & CLASS_FILE_ARG) && saw_C)\n \t{\n \t  --j;\n@@ -509,45 +451,11 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n   if (saw_g + saw_O == 0)\n     arglist[j++] = \"-g1\";\n \n-  /* Add `-lgcj' if we haven't already done so.  */\n-  if (library && ! saw_libgcj)\n-    {\n-      arglist[j++] = \"-lgcj\";\n-      added_libraries++;\n-    }\n-\n-  if (saw_math)\n-    arglist[j++] = saw_math;\n-  else if (library)\n-    {\n-      arglist[j++] = MATH_LIBRARY;\n-      added_libraries++;\n-    }\n-\n-  if (saw_gc)\n-    arglist[j++] = saw_gc;\n-#ifdef GC_NAME\n-  else if (library)\n-    {\n-      arglist[j++] = GC_NAME;\n-      added_libraries++;\n-    }\n-#endif\n-\n-  /* Thread library must come after GC library as well as after\n-     -lgcj.  */\n-  if (saw_threadlib)\n-    arglist[j++] = saw_threadlib;\n-#ifdef THREAD_NAME\n-  else if (library)\n-    {\n-      arglist[j++] = THREAD_NAME;\n-      added_libraries++;\n-    }\n-#endif\n-\n-  if (saw_libc)\n-    arglist[j++] = saw_libc;\n+  /* Read the specs file corresponding to libgcj, but only if linking.\n+     If we didn't find the spec file on the -L path, then we hope it\n+     is somewhere in the standard install areas.  */\n+  if (will_link)\n+    arglist[j++] = spec_file == NULL ? \"-specs=libgcj.spec\" : spec_file;\n \n   if (saw_C)\n     {"}]}