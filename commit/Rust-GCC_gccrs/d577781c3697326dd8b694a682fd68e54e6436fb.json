{"sha": "d577781c3697326dd8b694a682fd68e54e6436fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU3Nzc4MWMzNjk3MzI2ZGQ4YjY5NGE2ODJmZDY4ZTU0ZTY0MzZmYg==", "commit": {"author": {"name": "Laurynas Biveinis", "email": "lauras@softhome.net", "date": "2001-03-16T19:38:32Z"}, "committer": {"name": "Laurynas Biveinis", "email": "lauras@gcc.gnu.org", "date": "2001-03-16T19:38:32Z"}, "message": "Makefile.in: Set SHELL.\n\n\n\t* fixinc/Makefile.in: Set SHELL.\n\n        * fixinc/fixincl.c (fix_with_system): Quote file names before\n        passing them to shell.\n\n        * Makefile.in: Use fix-header$(build_exeext) instead\n        of fix-header.\n\nFrom-SVN: r40561", "tree": {"sha": "0bc53e06aa37fb3d2ea576c36cc8e8ed4babf2da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bc53e06aa37fb3d2ea576c36cc8e8ed4babf2da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d577781c3697326dd8b694a682fd68e54e6436fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d577781c3697326dd8b694a682fd68e54e6436fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d577781c3697326dd8b694a682fd68e54e6436fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d577781c3697326dd8b694a682fd68e54e6436fb/comments", "author": null, "committer": null, "parents": [{"sha": "da6af203a92aef54dbb61b57d871aaa7e179e7c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6af203a92aef54dbb61b57d871aaa7e179e7c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da6af203a92aef54dbb61b57d871aaa7e179e7c7"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "887e3a9ab0a094d0bfb4210ad5520a9ff79db3d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d577781c3697326dd8b694a682fd68e54e6436fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d577781c3697326dd8b694a682fd68e54e6436fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d577781c3697326dd8b694a682fd68e54e6436fb", "patch": "@@ -1,3 +1,17 @@\n+2001-03-16  Laurynas Biveinis  <lauras@softhome.net>\n+\n+\t* fixinc/Makefile.in: Set SHELL.\n+\n+2001-03-16  Laurynas Biveinis  <lauras@softhome.net>\n+\n+\t* fixinc/fixincl.c (fix_with_system): Quote file names before\n+\tpassing them to shell.\n+\t\t \n+2001-03-16  Laurynas Biveinis  <lauras@softhome.net>\n+\n+\t* Makefile.in: Use fix-header$(build_exeext) instead\n+\tof fix-header.\n+\t\n 2001-03-16  Richard Henderson  <rth@redhat.com>\n \n \t* dwarf2out.c: Revert most of 2000-11-25 and 2001-01-24 changes."}, {"sha": "6c39afda3fdea68d7b7d9f5743b400850fc1581d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d577781c3697326dd8b694a682fd68e54e6436fb/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d577781c3697326dd8b694a682fd68e54e6436fb/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d577781c3697326dd8b694a682fd68e54e6436fb", "patch": "@@ -2172,8 +2172,8 @@ xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos$(build_\n \n # This is nominally a 'build' program, but it's run only when host==build,\n # so we can (indeed, must) use $(LIBDEPS) and $(LIBS).\n-fix-header: fix-header.o scan-decls.o scan.o xsys-protos.h $(LIBDEPS) \\\n-\t    libcpp.a\n+fix-header$(build_exeext): fix-header.o scan-decls.o scan.o xsys-protos.h \\\n+           $(LIBDEPS) libcpp.a\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ fix-header.o \\\n \t   scan-decls.o scan.o libcpp.a $(LIBS)\n \n@@ -2188,7 +2188,7 @@ scan-decls.o: scan-decls.c scan.h cpplib.h $(HCONFIG_H) system.h\n # The idea is to make sure fix-header gets built,\n # but not rerun fixproto after each stage\n # just because fix-header's mtime has changed.\n-fixhdr.ready: fix-header\n+fixhdr.ready: fix-header$(build_exeext)\n \t-if [ -f fixhdr.ready ] ; then \\\n \t\ttrue; \\\n \telse \\\n@@ -2310,7 +2310,7 @@ mostlyclean: $(INTL_MOSTLYCLEAN) lang.mostlyclean\n \t-rm -f specs float.h-* enquire SYSCALLS.c.X SYSCALLS.c\n \t-rm -f collect collect2 mips-tfile mips-tdump\n # Delete files generated for fixproto\n-\t-rm -rf fix-header xsys-protos.h deduced.h tmp-deduced.h \\\n+\t-rm -rf fix-header$(build_exeext) xsys-protos.h deduced.h tmp-deduced.h \\\n \t  gen-protos$(build_exeext) fixproto.list fixtmp.* fixhdr.ready\n # Delete files generated for fixincl\n \t-rm -rf fixincl fixinc.sh specs.ready"}, {"sha": "40406da81acc49f3d691dd2867d8426d6e6c0119", "filename": "gcc/fixinc/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d577781c3697326dd8b694a682fd68e54e6436fb/gcc%2Ffixinc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d577781c3697326dd8b694a682fd68e54e6436fb/gcc%2Ffixinc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.in?ref=d577781c3697326dd8b694a682fd68e54e6436fb", "patch": "@@ -22,6 +22,8 @@\n # The makefile built from this file lives in the fixinc subdirectory.\n # Its purpose is to build the any-platforms fixinc.sh script.\n \n+SHELL=/bin/sh\n+\n FL_LIST = $(CFLAGS) $(CPPFLAGS) $(WARN_CFLAGS)\n FIXINC_DEFS = -DIN_GCC -DHAVE_CONFIG_H $(FL_LIST) $(INCLUDES)\n "}, {"sha": "1f8b22067cd0361f521a5f74d1d0cd0820b0f2f4", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d577781c3697326dd8b694a682fd68e54e6436fb/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d577781c3697326dd8b694a682fd68e54e6436fb/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=d577781c3697326dd8b694a682fd68e54e6436fb", "patch": "@@ -917,7 +917,7 @@ fix_with_system (p_fixd, pz_fix_file, pz_file_source, pz_temp_file)\n       /*\n        *  Now add the fix number and file names that may be needed\n        */\n-      sprintf (pz_scan, \"%ld %s %s %s\", p_fixd - fixDescList,\n+      sprintf (pz_scan, \"%ld \\'%s\\' \\'%s\\' \\'%s\\'\", p_fixd - fixDescList,\n \t       pz_fix_file, pz_file_source, pz_temp_file);\n     }\n   else /* NOT an \"internal\" fix: */\n@@ -936,7 +936,7 @@ fix_with_system (p_fixd, pz_fix_file, pz_file_source, pz_temp_file)\n          the following bizarre use of 'cat' only works on DOS boxes.\n          It causes the file to be dropped into a temporary file for\n          'cat' to read (pipes do not work on DOS).  */\n-      tSCC   z_cmd_fmt[] = \" %s | cat > %s\";\n+      tSCC   z_cmd_fmt[] = \" \\'%s\\' | cat > \\'%s\\'\";\n #else\n       /* Don't use positional formatting arguments because some lame-o\n          implementations cannot cope  :-(.  */"}]}