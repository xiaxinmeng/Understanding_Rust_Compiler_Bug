{"sha": "557ca192c5aeb9f98895ca093f430759c896038a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU3Y2ExOTJjNWFlYjlmOTg4OTVjYTA5M2Y0MzA3NTljODk2MDM4YQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-03-27T23:50:40Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-03-27T23:50:40Z"}, "message": "objc-torture.exp: Replace \"77\" with \"Obj-C\" in pattern matching strings.\n\n        * lib/objc-torture.exp: Replace \"77\" with \"Obj-C\" in pattern\n        matching strings.\n\nFrom-SVN: r26030", "tree": {"sha": "40bb0b690d2878bf89712fdb15cfb0200ca7affe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40bb0b690d2878bf89712fdb15cfb0200ca7affe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/557ca192c5aeb9f98895ca093f430759c896038a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/557ca192c5aeb9f98895ca093f430759c896038a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/557ca192c5aeb9f98895ca093f430759c896038a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/557ca192c5aeb9f98895ca093f430759c896038a/comments", "author": null, "committer": null, "parents": [{"sha": "87b8bec574e24e2029906aa3952bbc3d57061606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87b8bec574e24e2029906aa3952bbc3d57061606", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87b8bec574e24e2029906aa3952bbc3d57061606"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "8ea3801d776428dbc6eea45242682e572121a071", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/557ca192c5aeb9f98895ca093f430759c896038a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/557ca192c5aeb9f98895ca093f430759c896038a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=557ca192c5aeb9f98895ca093f430759c896038a", "patch": "@@ -1,3 +1,8 @@\n+Sun Mar 28 00:49:41 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* lib/objc-torture.exp: Replace \"77\" with \"Obj-C\" in pattern\n+\tmatching strings.\n+\n Fri Mar 26 00:50:46 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* gcc.c-torture/execute/990326-1.c: New test from Charles Hannum."}, {"sha": "a3cc7d6fe9fbd1235719d14e30cf9023cc6eb3fd", "filename": "gcc/testsuite/lib/objc-torture.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/557ca192c5aeb9f98895ca093f430759c896038a/gcc%2Ftestsuite%2Flib%2Fobjc-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/557ca192c5aeb9f98895ca093f430759c896038a/gcc%2Ftestsuite%2Flib%2Fobjc-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc-torture.exp?ref=557ca192c5aeb9f98895ca093f430759c896038a", "patch": "@@ -70,7 +70,7 @@ proc objc-torture-compile { src option } {\n     set comp_output [objc_target_compile \"$src\" \"$output\" object $options];\n     \n     # Set a few common compiler messages.\n-    set fatal_signal \"*77*: Internal compiler error: program*got fatal signal\"\n+    set fatal_signal \"*Obj-C*: Internal compiler error: program*got fatal signal\"\n  \n     if [string match \"$fatal_signal 6\" $comp_output] then {\n \tobjc_fail $testcase \"Got Signal 6, $option\"\n@@ -85,7 +85,7 @@ proc objc-torture-compile { src option } {\n     }\n \n     # We shouldn't get these because of -w, but just in case.\n-    if [string match \"*77*:*warning:*\" $comp_output] then {\n+    if [string match \"*Obj-C*:*warning:*\" $comp_output] then {\n \twarning \"$testcase: (with warnings) $option\"\n \tsend_log \"$comp_output\\n\"\n \tunresolved \"$testcase, $option\"\n@@ -173,7 +173,7 @@ proc objc-torture-execute { src } {\n \tset comp_output [objc_target_compile \"$src\" \"$executable\" executable $options];\n \n \t# Set a few common compiler messages.\n-\tset fatal_signal \"*77*: Internal compiler error: program*got fatal signal\"\n+\tset fatal_signal \"*Obj-C*: Internal compiler error: program*got fatal signal\"\n \t\n \tif [string match \"$fatal_signal 6\" $comp_output] then {\n \t    objc_fail $testcase \"Got Signal 6, $option\"\n@@ -188,7 +188,7 @@ proc objc-torture-execute { src } {\n \t}\n \t\n \t# We shouldn't get these because of -w, but just in case.\n-\tif [string match \"*77*:*warning:*\" $comp_output] then {\n+\tif [string match \"*Obj-C*:*warning:*\" $comp_output] then {\n \t    warning \"$testcase: (with warnings) $option\"\n \t    send_log \"$comp_output\\n\"\n \t    unresolved \"$testcase, $option\""}]}