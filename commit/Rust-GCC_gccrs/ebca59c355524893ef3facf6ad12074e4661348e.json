{"sha": "ebca59c355524893ef3facf6ad12074e4661348e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJjYTU5YzM1NTUyNDg5M2VmM2ZhY2Y2YWQxMjA3NGU0NjYxMzQ4ZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-06-19T19:24:56Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-06-19T19:24:56Z"}, "message": "re PR target/15941 (new fails gcc.dg/compat/struct-by-value-11 and gcc.dg/compat/struct-by-value-1)\n\n\tPR target/15941\n\t* function.c (assign_parms): If not padding upward or intentionally\n\tforcing upward padding, take offset_rtx into account when determining\n\tthe alignment for stack_parm.\n\nFrom-SVN: r83396", "tree": {"sha": "3bfa4addf632b7aea8ae5a0a38303b051c63876d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bfa4addf632b7aea8ae5a0a38303b051c63876d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebca59c355524893ef3facf6ad12074e4661348e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebca59c355524893ef3facf6ad12074e4661348e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebca59c355524893ef3facf6ad12074e4661348e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebca59c355524893ef3facf6ad12074e4661348e/comments", "author": null, "committer": null, "parents": [{"sha": "8426c25e7c2351b1f1f7a48d3ec01a79622f558c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8426c25e7c2351b1f1f7a48d3ec01a79622f558c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8426c25e7c2351b1f1f7a48d3ec01a79622f558c"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "242be1c6c6ca09096488f903bad13d1c5775a268", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebca59c355524893ef3facf6ad12074e4661348e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebca59c355524893ef3facf6ad12074e4661348e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ebca59c355524893ef3facf6ad12074e4661348e", "patch": "@@ -1,3 +1,10 @@\n+2004-06-19  Richard Henderson  <rth@redhat.com>\n+\n+\tPR target/15941\n+\t* function.c (assign_parms): If not padding upward or intentionally\n+\tforcing upward padding, take offset_rtx into account when determining\n+\tthe alignment for stack_parm.\n+\n 2004-06-19  Richard Henderson  <rth@redhat.com>\n \n \tPR target/15550"}, {"sha": "3f1f45bbcaa243ac28ce63e5d16ef673376c2d04", "filename": "gcc/function.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebca59c355524893ef3facf6ad12074e4661348e/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebca59c355524893ef3facf6ad12074e4661348e/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=ebca59c355524893ef3facf6ad12074e4661348e", "patch": "@@ -4603,6 +4603,7 @@ assign_parms (tree fndecl)\n \n       {\n \trtx offset_rtx;\n+\tunsigned int align, boundary;\n \n \t/* If we're passing this arg using a reg, make its stack home\n \t   the aligned stack slot.  */\n@@ -4620,8 +4621,24 @@ assign_parms (tree fndecl)\n \t\t\t\t\t\t  offset_rtx));\n \n \tset_mem_attributes (stack_parm, parm, 1);\n-\tset_mem_align (stack_parm, \n-\t\t       FUNCTION_ARG_BOUNDARY (promoted_mode, passed_type));\n+\n+\tboundary = FUNCTION_ARG_BOUNDARY (promoted_mode, passed_type);\n+\talign = 0;\n+\n+\t/* If we're padding upward, we know that the alignment of the slot\n+\t   is FUNCTION_ARG_BOUNDARY.  If we're using slot_offset, we're\n+\t   intentionally forcing upward padding.  Otherwise we have to come\n+\t   up with a guess at the alignment based on OFFSET_RTX.  */\n+\tif (locate.where_pad == upward || entry_parm)\n+\t  align = boundary;\n+\telse if (GET_CODE (offset_rtx) == CONST_INT)\n+\t  {\n+\t    align = INTVAL (offset_rtx) * BITS_PER_UNIT | boundary;\n+\t    align = align & -align;\n+\t  }\n+\tif (align > 0)\n+\t  set_mem_align (stack_parm, align);\n+\n \tif (entry_parm)\n \t  set_reg_attrs_for_parm (entry_parm, stack_parm);\n       }"}]}