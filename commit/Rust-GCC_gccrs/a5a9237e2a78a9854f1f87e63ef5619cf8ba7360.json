{"sha": "a5a9237e2a78a9854f1f87e63ef5619cf8ba7360", "node_id": "C_kwDOANBUbNoAKGE1YTkyMzdlMmE3OGE5ODU0ZjFmODdlNjNlZjU2MTljZjhiYTczNjA", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-09-29T10:04:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-09-29T10:04:24Z"}, "message": "driver, cppdefault: Unbreak bootstrap on Debian/Ubuntu [PR107059]\n\nMy recent change to enable _Float{16,32,64,128,32x,64x,128x} for C++\napparently broke bootstrap on some Debian/Ubuntu setups.\nThose multiarch targets put some headers into\n/usr/include/x86_64-linux-gnu/bits/ etc. subdirectory instead of\n/usr/include/bits/.\nThis is handled by\n    /* /usr/include comes dead last.  */\n    { NATIVE_SYSTEM_HEADER_DIR, NATIVE_SYSTEM_HEADER_COMPONENT, 0, 0, 1, 2 },\n    { NATIVE_SYSTEM_HEADER_DIR, NATIVE_SYSTEM_HEADER_COMPONENT, 0, 0, 1, 0 },\nin cppdefault.cc, where the 2 in the last element of the first initializer\nmeans the entry is ignored on non-multiarch and suffixed by the multiarch\ndir otherwise, so installed gcc has search path like:\n /home/jakub/gcc/obj01inst/usr/local/bin/../lib/gcc/x86_64-pc-linux-gnu/13.0.0/include\n /home/jakub/gcc/obj01inst/usr/local/bin/../lib/gcc/x86_64-pc-linux-gnu/13.0.0/include-fixed\n /usr/local/include\n /usr/include/x86_64-linux-gnu\n /usr/include\n(when installed with DESTDIR=/home/jakub/gcc/obj01inst).\nNow, when fixincludes is run, it is processing the whole /usr/include dir\nand all its subdirectories, so floatn{,-common.h} actually go into\n.../include-fixed/x86_64-linux-gnu/bits/floatn{,-common.h}\nbecause that is where they appear in /usr/include too.\nIn some setups, /usr/include also contains /usr/include/bits -> x86_64-linux-gnu/bits\nsymlink and after the r13-2896 tweak it works.\nIn other setups there is no /usr/include/bits symlink and when one\n #include <bits/floatn.h>\ngiven the above search path, it doesn't find the fixincluded header,\nas\n/home/jakub/gcc/obj01inst/usr/local/bin/../lib/gcc/x86_64-pc-linux-gnu/13.0.0/include-fixed/bits/floatn.h\ndoesn't exist and\n/home/jakub/gcc/obj01inst/usr/local/bin/../lib/gcc/x86_64-pc-linux-gnu/13.0.0/include-fixed/x86_64-linux-gnu/bits/floatn.h\nisn't searched and so\n/usr/include/x86_64-linux-gnu/bits/floatn.h\nwins and we fail because of typedef whatever _Float128; and similar.\nThe following patch ought to fix this.  The first hunk by arranging that\nthe installed search path actually looks like:\n /home/jakub/gcc/obj01inst/usr/local/bin/../lib/gcc/x86_64-pc-linux-gnu/13.0.0/include\n /home/jakub/gcc/obj01inst/usr/local/bin/../lib/gcc/x86_64-pc-linux-gnu/13.0.0/include-fixed/x86_64-linux-gnu\n /home/jakub/gcc/obj01inst/usr/local/bin/../lib/gcc/x86_64-pc-linux-gnu/13.0.0/include-fixed\n /usr/local/include\n /usr/include/x86_64-linux-gnu\n /usr/include\nand thus for include-fixed it treats it the same as /usr/include.\nThe second FIXED_INCLUDE_DIR entry there is:\n     { FIXED_INCLUDE_DIR, \"GCC\", 0, 0, 0,\n       /* A multilib suffix needs adding if different multilibs use\n          different headers.  */\n #ifdef SYSROOT_HEADERS_SUFFIX_SPEC\n       1\n #else\n       0\n #endif\n     },\nwhere SYSROOT_HEADERS_SUFFIX_SPEC is defined only on vxworks or mips*-mti-linux\nand arranges for multilib path to be appended there.  Neither of those\nsystems is multiarch.\nThis isn't enough, because when using the -B option, the driver adds\n-isystem .../include-fixed in another place, so the second hunk modifies\nthat spot the same.\n/home/jakub/gcc/obj01/gcc/xgcc -B /home/jakub/gcc/obj01/gcc/\nthen has search path:\n /home/jakub/gcc/obj01/gcc/include\n /home/jakub/gcc/obj01/gcc/include-fixed/x86_64-linux-gnu\n /home/jakub/gcc/obj01/gcc/include-fixed\n /usr/local/include\n /usr/include/x86_64-linux-gnu\n /usr/include\nwhich again is what I think we want to achieve.\n\n2022-09-29  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR bootstrap/107059\n\t* cppdefault.cc (cpp_include_defaults): If SYSROOT_HEADERS_SUFFIX_SPEC\n\tisn't defined, add FIXED_INCLUDE_DIR entry with multilib flag 2\n\tbefore FIXED_INCLUDE_DIR entry with multilib flag 0.\n\t* gcc.cc (do_spec_1): If multiarch_dir, add\n\tinclude-fixed/multiarch_dir paths before include-fixed paths.", "tree": {"sha": "555baac8619a18060a312af7456fd389285fba0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/555baac8619a18060a312af7456fd389285fba0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5a9237e2a78a9854f1f87e63ef5619cf8ba7360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a9237e2a78a9854f1f87e63ef5619cf8ba7360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a9237e2a78a9854f1f87e63ef5619cf8ba7360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a9237e2a78a9854f1f87e63ef5619cf8ba7360/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7723e135334df95597c8c744276b9de5a88214a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7723e135334df95597c8c744276b9de5a88214a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7723e135334df95597c8c744276b9de5a88214a"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "7d8f9a5323170b9f5984c8e758eb3e54ca790555", "filename": "gcc/cppdefault.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a9237e2a78a9854f1f87e63ef5619cf8ba7360/gcc%2Fcppdefault.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a9237e2a78a9854f1f87e63ef5619cf8ba7360/gcc%2Fcppdefault.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppdefault.cc?ref=a5a9237e2a78a9854f1f87e63ef5619cf8ba7360", "patch": "@@ -74,6 +74,9 @@ const struct default_include cpp_include_defaults[]\n #endif\n #ifdef FIXED_INCLUDE_DIR\n     /* This is the dir for fixincludes.  */\n+#ifndef SYSROOT_HEADERS_SUFFIX_SPEC\n+    { FIXED_INCLUDE_DIR, \"GCC\", 0, 0, 0, 2 },\n+#endif\n     { FIXED_INCLUDE_DIR, \"GCC\", 0, 0, 0,\n       /* A multilib suffix needs adding if different multilibs use\n \t different headers.  */"}, {"sha": "afb23cd07b007ab9f5851e973eff21d49c49cdae", "filename": "gcc/gcc.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a9237e2a78a9854f1f87e63ef5619cf8ba7360/gcc%2Fgcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a9237e2a78a9854f1f87e63ef5619cf8ba7360/gcc%2Fgcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.cc?ref=a5a9237e2a78a9854f1f87e63ef5619cf8ba7360", "patch": "@@ -6415,6 +6415,18 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t      if (*sysroot_hdrs_suffix_spec)\n \t\tinfo.append = concat (info.append, dir_separator_str,\n \t\t\t\t      multilib_dir, NULL);\n+\t      else if (multiarch_dir)\n+\t\t{\n+\t\t  /* For multiarch, search include-fixed/<multiarch-dir>\n+\t\t     before include-fixed.  */\n+\t\t  info.append = concat (info.append, dir_separator_str,\n+\t\t\t\t\tmultiarch_dir, NULL);\n+\t\t  info.append_len = strlen (info.append);\n+\t\t  for_each_path (&include_prefixes, false, info.append_len,\n+\t\t\t\t spec_path, &info);\n+\n+\t\t  info.append = \"include-fixed\";\n+\t\t}\n \t      info.append_len = strlen (info.append);\n \t      for_each_path (&include_prefixes, false, info.append_len,\n \t\t\t     spec_path, &info);"}]}