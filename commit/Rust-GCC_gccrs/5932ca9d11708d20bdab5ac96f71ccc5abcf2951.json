{"sha": "5932ca9d11708d20bdab5ac96f71ccc5abcf2951", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTkzMmNhOWQxMTcwOGQyMGJkYWI1YWM5NmY3MWNjYzVhYmNmMjk1MQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zackw@panix.com", "date": "2006-11-21T00:16:45Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2006-11-21T00:16:45Z"}, "message": "gengtype.c (process_gc_options): Remove unnecessary forward decl.\n\n\t* gengtype.c (process_gc_options): Remove unnecessary forward decl.\n\tAdd another out parameter, \"skip\".\n\t(set_gc_used_type): Adjust calls to process_gc_options.  If a field\n\tis tagged \"skip\", do not mark its type used.\n\nFrom-SVN: r119034", "tree": {"sha": "350e7070759ac335bc362ca1a05989871756396b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/350e7070759ac335bc362ca1a05989871756396b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5932ca9d11708d20bdab5ac96f71ccc5abcf2951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5932ca9d11708d20bdab5ac96f71ccc5abcf2951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5932ca9d11708d20bdab5ac96f71ccc5abcf2951", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5932ca9d11708d20bdab5ac96f71ccc5abcf2951/comments", "author": {"login": "zackw", "id": 325899, "node_id": "MDQ6VXNlcjMyNTg5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/325899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackw", "html_url": "https://github.com/zackw", "followers_url": "https://api.github.com/users/zackw/followers", "following_url": "https://api.github.com/users/zackw/following{/other_user}", "gists_url": "https://api.github.com/users/zackw/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackw/subscriptions", "organizations_url": "https://api.github.com/users/zackw/orgs", "repos_url": "https://api.github.com/users/zackw/repos", "events_url": "https://api.github.com/users/zackw/events{/privacy}", "received_events_url": "https://api.github.com/users/zackw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6696f3cd4719a96f92b1cda528c945b014e8b8c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6696f3cd4719a96f92b1cda528c945b014e8b8c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6696f3cd4719a96f92b1cda528c945b014e8b8c4"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "896ac0e02439ec37e95cc664a8aac6c3e5d1b330", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5932ca9d11708d20bdab5ac96f71ccc5abcf2951/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5932ca9d11708d20bdab5ac96f71ccc5abcf2951/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5932ca9d11708d20bdab5ac96f71ccc5abcf2951", "patch": "@@ -1,3 +1,10 @@\n+2006-11-20  Zack Weinberg  <zackw@panix.com>\n+\n+\t* gengtype.c (process_gc_options): Remove unnecessary forward decl.\n+\tAdd another out parameter, \"skip\".\n+\t(set_gc_used_type): Adjust calls to process_gc_options.  If a field\n+\tis tagged \"skip\", do not mark its type used.\n+\n 2006-11-20  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR tree-opt/25500"}, {"sha": "f62659ada47a57d1271cf0b7609779319b324be7", "filename": "gcc/gengtype.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5932ca9d11708d20bdab5ac96f71ccc5abcf2951/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5932ca9d11708d20bdab5ac96f71ccc5abcf2951/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=5932ca9d11708d20bdab5ac96f71ccc5abcf2951", "patch": "@@ -869,16 +869,14 @@ note_yacc_type (options_p o, pair_p fields, pair_p typeinfo,\n   do_typedef (\"YYSTYPE\", new_structure (\"yy_union\", 1, pos, typeinfo, o), pos);\n }\n \f\n-static void process_gc_options (options_p, enum gc_used_enum,\n-\t\t\t\tint *, int *, int *, type_p *);\n static void set_gc_used_type (type_p, enum gc_used_enum, type_p *);\n static void set_gc_used (pair_p);\n \n /* Handle OPT for set_gc_used_type.  */\n \n static void\n process_gc_options (options_p opt, enum gc_used_enum level, int *maybe_undef,\n-\t\t    int *pass_param, int *length, type_p *nested_ptr)\n+\t\t    int *pass_param, int *length, int *skip, type_p *nested_ptr)\n {\n   options_p o;\n   for (o = opt; o; o = o->next)\n@@ -890,6 +888,8 @@ process_gc_options (options_p opt, enum gc_used_enum level, int *maybe_undef,\n       *pass_param = 1;\n     else if (strcmp (o->name, \"length\") == 0)\n       *length = 1;\n+    else if (strcmp (o->name, \"skip\") == 0)\n+      *skip = 1;\n     else if (strcmp (o->name, \"nested_ptr\") == 0)\n       *nested_ptr = ((const struct nested_ptr_data *) o->info)->type;\n }\n@@ -913,17 +913,18 @@ set_gc_used_type (type_p t, enum gc_used_enum level, type_p param[NUM_PARAM])\n \tint dummy;\n \ttype_p dummy2;\n \n-\tprocess_gc_options (t->u.s.opt, level, &dummy, &dummy, &dummy,\n+\tprocess_gc_options (t->u.s.opt, level, &dummy, &dummy, &dummy, &dummy,\n \t\t\t    &dummy2);\n \n \tfor (f = t->u.s.fields; f; f = f->next)\n \t  {\n \t    int maybe_undef = 0;\n \t    int pass_param = 0;\n \t    int length = 0;\n+\t    int skip = 0;\n \t    type_p nested_ptr = NULL;\n \t    process_gc_options (f->opt, level, &maybe_undef, &pass_param,\n-\t\t\t\t&length, &nested_ptr);\n+\t\t\t\t&length, &skip, &nested_ptr);\n \n \t    if (nested_ptr && f->type->kind == TYPE_POINTER)\n \t      set_gc_used_type (nested_ptr, GC_POINTED_TO, \n@@ -935,6 +936,8 @@ set_gc_used_type (type_p t, enum gc_used_enum level, type_p param[NUM_PARAM])\n \t    else if (pass_param && f->type->kind == TYPE_POINTER && param)\n \t      set_gc_used_type (find_param_structure (f->type->u.p, param),\n \t\t\t\tGC_POINTED_TO, NULL);\n+\t    else if (skip)\n+\t      ; /* target type is not used through this field */\n \t    else\n \t      set_gc_used_type (f->type, GC_USED, pass_param ? param : NULL);\n \t  }"}]}