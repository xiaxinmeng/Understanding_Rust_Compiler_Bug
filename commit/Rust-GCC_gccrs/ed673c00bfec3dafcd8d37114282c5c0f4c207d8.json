{"sha": "ed673c00bfec3dafcd8d37114282c5c0f4c207d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ2NzNjMDBiZmVjM2RhZmNkOGQzNzExNDI4MmM1YzBmNGMyMDdkOA==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2015-08-06T20:47:36Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2015-08-06T20:47:36Z"}, "message": "Move one condition out of gfc_trans_scalar_assign\n\n\t* trans.h (gfc_trans_scalar_assign): Remove fourth argument.\n\t* trans-expr.c (gfc_trans_scalar_assign): Merge fourth into sixth\n\targument.\n\t(gfc_conv_subref_array_arg, gfc_trans_subarray_assign,\n\t gfc_trans_subcomponent_assign, gfc_trans_assignment_1): Update callers.\n\t* trans-array.c (gfc_conv_expr_descriptor): Ditto.\n\t* trans-stmt.c (forall_make_variable_temp,\n\tgenerate_loop_for_temp_to_lhs, generate_loop_for_rhs_to_temp,\n\tgfc_trans_where_assign, gfc_trans_where_3): Ditto.\n\nFrom-SVN: r226700", "tree": {"sha": "962fd58d54e846aff50066f35696155719afac5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/962fd58d54e846aff50066f35696155719afac5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed673c00bfec3dafcd8d37114282c5c0f4c207d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed673c00bfec3dafcd8d37114282c5c0f4c207d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed673c00bfec3dafcd8d37114282c5c0f4c207d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed673c00bfec3dafcd8d37114282c5c0f4c207d8/comments", "author": null, "committer": null, "parents": [{"sha": "0eb6f71c48a4ee9d0c1dc85e31d8c135eb306d98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb6f71c48a4ee9d0c1dc85e31d8c135eb306d98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb6f71c48a4ee9d0c1dc85e31d8c135eb306d98"}], "stats": {"total": 56, "additions": 33, "deletions": 23}, "files": [{"sha": "86afcf03408cba6bc889f8aaacdcf48375722cb0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed673c00bfec3dafcd8d37114282c5c0f4c207d8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed673c00bfec3dafcd8d37114282c5c0f4c207d8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ed673c00bfec3dafcd8d37114282c5c0f4c207d8", "patch": "@@ -1,3 +1,15 @@\n+2015-08-06  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans.h (gfc_trans_scalar_assign): Remove fourth argument.\n+\t* trans-expr.c (gfc_trans_scalar_assign): Merge fourth into sixth\n+\targument.\n+\t(gfc_conv_subref_array_arg, gfc_trans_subarray_assign,\n+\t gfc_trans_subcomponent_assign, gfc_trans_assignment_1): Update callers.\n+\t* trans-array.c (gfc_conv_expr_descriptor): Ditto.\n+\t* trans-stmt.c (forall_make_variable_temp,\n+\tgenerate_loop_for_temp_to_lhs, generate_loop_for_rhs_to_temp,\n+\tgfc_trans_where_assign, gfc_trans_where_3): Ditto.\n+\n 2015-08-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/52846"}, {"sha": "16577392763c71a898607aed9e7b96e0dc9f5d4b", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed673c00bfec3dafcd8d37114282c5c0f4c207d8/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed673c00bfec3dafcd8d37114282c5c0f4c207d8/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=ed673c00bfec3dafcd8d37114282c5c0f4c207d8", "patch": "@@ -6882,9 +6882,9 @@ gfc_conv_expr_descriptor (gfc_se *se, gfc_expr *expr)\n       gfc_add_block_to_block (&block, &lse.pre);\n \n       lse.string_length = rse.string_length;\n-      tmp = gfc_trans_scalar_assign (&lse, &rse, expr->ts, true,\n+      tmp = gfc_trans_scalar_assign (&lse, &rse, expr->ts,\n \t\t\t\t     expr->expr_type == EXPR_VARIABLE\n-\t\t\t\t     || expr->expr_type == EXPR_ARRAY, true);\n+\t\t\t\t     || expr->expr_type == EXPR_ARRAY, false);\n       gfc_add_expr_to_block (&block, tmp);\n \n       /* Finish the copying loops.  */"}, {"sha": "16ebd206bacf40ae78c8edfde301db9cbcd2d29b", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed673c00bfec3dafcd8d37114282c5c0f4c207d8/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed673c00bfec3dafcd8d37114282c5c0f4c207d8/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=ed673c00bfec3dafcd8d37114282c5c0f4c207d8", "patch": "@@ -4321,7 +4321,7 @@ gfc_conv_subref_array_arg (gfc_se * parmse, gfc_expr * expr, int g77,\n \n   if (intent != INTENT_OUT)\n     {\n-      tmp = gfc_trans_scalar_assign (&lse, &rse, expr->ts, true, false, true);\n+      tmp = gfc_trans_scalar_assign (&lse, &rse, expr->ts, false, false);\n       gfc_add_expr_to_block (&body, tmp);\n       gcc_assert (rse.ss == gfc_ss_terminator);\n       gfc_trans_scalarizing_loops (&loop, &body);\n@@ -4428,7 +4428,7 @@ gfc_conv_subref_array_arg (gfc_se * parmse, gfc_expr * expr, int g77,\n \n   gcc_assert (lse.ss == gfc_ss_terminator);\n \n-  tmp = gfc_trans_scalar_assign (&lse, &rse, expr->ts, false, false, true);\n+  tmp = gfc_trans_scalar_assign (&lse, &rse, expr->ts, false, true);\n   gfc_add_expr_to_block (&body, tmp);\n \n   /* Generate the copying loops.  */\n@@ -6741,7 +6741,7 @@ gfc_trans_subarray_assign (tree dest, gfc_component * cm, gfc_expr * expr)\n \n   gfc_conv_expr (&rse, expr);\n \n-  tmp = gfc_trans_scalar_assign (&lse, &rse, cm->ts, true, true, true);\n+  tmp = gfc_trans_scalar_assign (&lse, &rse, cm->ts, true, false);\n   gfc_add_expr_to_block (&body, tmp);\n \n   gcc_assert (rse.ss == gfc_ss_terminator);\n@@ -7250,7 +7250,7 @@ gfc_trans_subcomponent_assign (tree dest, gfc_component * cm, gfc_expr * expr,\n       if (cm->ts.type == BT_CHARACTER)\n \tlse.string_length = cm->ts.u.cl->backend_decl;\n       lse.expr = dest;\n-      tmp = gfc_trans_scalar_assign (&lse, &se, cm->ts, true, false, true);\n+      tmp = gfc_trans_scalar_assign (&lse, &se, cm->ts, false, false);\n       gfc_add_expr_to_block (&block, tmp);\n     }\n   return gfc_finish_block (&block);\n@@ -8139,7 +8139,7 @@ gfc_conv_string_parameter (gfc_se * se)\n \n tree\n gfc_trans_scalar_assign (gfc_se * lse, gfc_se * rse, gfc_typespec ts,\n-\t\t\t bool l_is_temp, bool deep_copy, bool dealloc)\n+\t\t\t bool deep_copy, bool dealloc)\n {\n   stmtblock_t block;\n   tree tmp;\n@@ -8188,7 +8188,7 @@ gfc_trans_scalar_assign (gfc_se * lse, gfc_se * rse, gfc_typespec ts,\n \t the same as the rhs.  This must be done following the assignment\n \t to prevent deallocating data that could be used in the rhs\n \t expression.  */\n-      if (!l_is_temp && dealloc)\n+      if (dealloc)\n \t{\n \t  tmp_var = gfc_evaluate_now (lse->expr, &lse->pre);\n \t  tmp = gfc_deallocate_alloc_comp_no_caf (ts.u.derived, tmp_var, 0);\n@@ -9270,9 +9270,9 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n     }\n \n   tmp = gfc_trans_scalar_assign (&lse, &rse, expr1->ts,\n-\t\t\t\t l_is_temp || init_flag,\n \t\t\t\t expr_is_variable (expr2) || scalar_to_array\n-\t\t\t\t || expr2->expr_type == EXPR_ARRAY, dealloc);\n+\t\t\t\t || expr2->expr_type == EXPR_ARRAY,\n+\t\t\t\t !(l_is_temp || init_flag) && dealloc);\n   gfc_add_expr_to_block (&body, tmp);\n \n   if (lss == gfc_ss_terminator)\n@@ -9313,7 +9313,7 @@ gfc_trans_assignment_1 (gfc_expr * expr1, gfc_expr * expr2, bool init_flag,\n \t    rse.string_length = string_length;\n \n \t  tmp = gfc_trans_scalar_assign (&lse, &rse, expr1->ts,\n-\t\t\t\t\t false, false, dealloc);\n+\t\t\t\t\t false, dealloc);\n \t  gfc_add_expr_to_block (&body, tmp);\n \t}\n "}, {"sha": "a8536fd57ba6ab34ccca7d79f124d74baa35a653", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed673c00bfec3dafcd8d37114282c5c0f4c207d8/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed673c00bfec3dafcd8d37114282c5c0f4c207d8/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=ed673c00bfec3dafcd8d37114282c5c0f4c207d8", "patch": "@@ -2852,8 +2852,8 @@ forall_make_variable_temp (gfc_code *c, stmtblock_t *pre, stmtblock_t *post)\n \t  tse.expr = gfc_create_var (tmp, \"temp\");\n \t}\n \n-      tmp = gfc_trans_scalar_assign (&tse, &rse, e->ts, true,\n-\t\t\t\t     e->expr_type == EXPR_VARIABLE, true);\n+      tmp = gfc_trans_scalar_assign (&tse, &rse, e->ts,\n+\t\t\t\t     e->expr_type == EXPR_VARIABLE, false);\n       gfc_add_expr_to_block (pre, tmp);\n     }\n   gfc_free_expr (e);\n@@ -3224,7 +3224,7 @@ generate_loop_for_temp_to_lhs (gfc_expr *expr, tree tmp1, tree count3,\n \n       /* Use the scalar assignment.  */\n       rse.string_length = lse.string_length;\n-      tmp = gfc_trans_scalar_assign (&lse, &rse, expr->ts, false, true, true);\n+      tmp = gfc_trans_scalar_assign (&lse, &rse, expr->ts, true, true);\n \n       /* Form the mask expression according to the mask tree list.  */\n       if (wheremask)\n@@ -3322,8 +3322,8 @@ generate_loop_for_rhs_to_temp (gfc_expr *expr2, tree tmp1, tree count3,\n \n   /* Use the scalar assignment.  */\n   lse.string_length = rse.string_length;\n-  tmp = gfc_trans_scalar_assign (&lse, &rse, expr2->ts, true,\n-\t\t\t\t expr2->expr_type == EXPR_VARIABLE, true);\n+  tmp = gfc_trans_scalar_assign (&lse, &rse, expr2->ts,\n+\t\t\t\t expr2->expr_type == EXPR_VARIABLE, false);\n \n   /* Form the mask expression according to the mask tree list.  */\n   if (wheremask)\n@@ -4497,7 +4497,7 @@ gfc_trans_where_assign (gfc_expr *expr1, gfc_expr *expr2,\n \n   /* Use the scalar assignment as is.  */\n   tmp = gfc_trans_scalar_assign (&lse, &rse, expr1->ts,\n-\t\t\t\t loop.temp_ss != NULL, false, true);\n+\t\t\t\t false, loop.temp_ss == NULL);\n \n   tmp = build3_v (COND_EXPR, maskexpr, tmp, build_empty_stmt (input_location));\n \n@@ -4550,8 +4550,7 @@ gfc_trans_where_assign (gfc_expr *expr1, gfc_expr *expr2,\n \t\t\t\t\tTREE_TYPE (maskexpr), maskexpr);\n \n           /* Use the scalar assignment as is.  */\n-          tmp = gfc_trans_scalar_assign (&lse, &rse, expr1->ts, false, false,\n-\t\t\t\t\t true);\n+          tmp = gfc_trans_scalar_assign (&lse, &rse, expr1->ts, false, true);\n           tmp = build3_v (COND_EXPR, maskexpr, tmp,\n \t\t\t  build_empty_stmt (input_location));\n           gfc_add_expr_to_block (&body, tmp);\n@@ -4951,8 +4950,8 @@ gfc_trans_where_3 (gfc_code * cblock, gfc_code * eblock)\n \tgfc_conv_expr (&edse, edst);\n     }\n \n-  tstmt = gfc_trans_scalar_assign (&tdse, &tsse, tdst->ts, false, false, true);\n-  estmt = eblock ? gfc_trans_scalar_assign (&edse, &esse, edst->ts, false,\n+  tstmt = gfc_trans_scalar_assign (&tdse, &tsse, tdst->ts, false, true);\n+  estmt = eblock ? gfc_trans_scalar_assign (&edse, &esse, edst->ts,\n \t\t\t\t\t    false, true)\n \t\t : build_empty_stmt (input_location);\n   tmp = build3_v (COND_EXPR, cexpr, tstmt, estmt);"}, {"sha": "6a9ba6025313022fc97824baceaae833778041c7", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed673c00bfec3dafcd8d37114282c5c0f4c207d8/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed673c00bfec3dafcd8d37114282c5c0f4c207d8/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=ed673c00bfec3dafcd8d37114282c5c0f4c207d8", "patch": "@@ -478,8 +478,7 @@ int gfc_conv_procedure_call (gfc_se *, gfc_symbol *, gfc_actual_arglist *,\n void gfc_conv_subref_array_arg (gfc_se *, gfc_expr *, int, sym_intent, bool);\n \n /* Generate code for a scalar assignment.  */\n-tree gfc_trans_scalar_assign (gfc_se *, gfc_se *, gfc_typespec, bool, bool,\n-\t\t\t      bool);\n+tree gfc_trans_scalar_assign (gfc_se *, gfc_se *, gfc_typespec, bool, bool);\n \n /* Translate COMMON blocks.  */\n void gfc_trans_common (gfc_namespace *);"}]}