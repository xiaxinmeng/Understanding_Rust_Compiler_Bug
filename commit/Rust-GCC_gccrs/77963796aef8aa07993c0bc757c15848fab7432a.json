{"sha": "77963796aef8aa07993c0bc757c15848fab7432a", "node_id": "C_kwDOANBUbNoAKDc3OTYzNzk2YWVmOGFhMDc5OTNjMGJjNzU3YzE1ODQ4ZmFiNzQzMmE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-10T11:43:46Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-11-10T12:03:29Z"}, "message": "libstdc++: Fix test for libstdc++ not including <unistd.h> [PR100117]\n\nThe <cxxx> headers for the C library are not under our control, so we\ncan't prevent them from including <unistd.h>. Change the PR 49745 test\nto only include the C++ library headers, not the <cxxx> ones.\n\nTo ensure <bits/stdc++.h> isn't included automatically we need to use\nno_pch to disable PCH.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/100117\n\t* testsuite/17_intro/headers/c++1998/49745.cc: Explicitly list\n\tall C++ headers instead of including <bits/stdc++.h>", "tree": {"sha": "5f61b6b7ac54cb39422143dc81d22dd364c822cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f61b6b7ac54cb39422143dc81d22dd364c822cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77963796aef8aa07993c0bc757c15848fab7432a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77963796aef8aa07993c0bc757c15848fab7432a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77963796aef8aa07993c0bc757c15848fab7432a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77963796aef8aa07993c0bc757c15848fab7432a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80fe172ba9820199c2bbce5d0611ffca27823049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80fe172ba9820199c2bbce5d0611ffca27823049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80fe172ba9820199c2bbce5d0611ffca27823049"}], "stats": {"total": 113, "additions": 112, "deletions": 1}, "files": [{"sha": "f98fa3b4fb9ce1b7b6f7b4ae95d0b05805e86712", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++1998/49745.cc", "status": "modified", "additions": 112, "deletions": 1, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77963796aef8aa07993c0bc757c15848fab7432a/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2F49745.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77963796aef8aa07993c0bc757c15848fab7432a/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2F49745.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2F49745.cc?ref=77963796aef8aa07993c0bc757c15848fab7432a", "patch": "@@ -1,4 +1,5 @@\n // { dg-do compile { target *-*-linux* *-*-gnu* } }\n+// { dg-add-options no_pch }\n \n // Copyright (C) 2011-2021 Free Software Foundation, Inc.\n //\n@@ -18,7 +19,117 @@\n // <http://www.gnu.org/licenses/>.\n \n // libstdc++/49745\n-#include <bits/stdc++.h>\n+// error: 'int truncate' redeclared as different kind of symbol\n+\n+// This tests that no libstdc++ headers include <unistd.h>.\n+// However, as discussed in PR libstdc++/100117 we cannot guarantee that\n+// no libc headers include it indirectly, so only include the C++ headers.\n+// That means we can't use <bits/stdc++.h> because that includes <cstdio> etc.\n+// so we list the C++ headers explicitly here. This list is unfortunately\n+// doomed to get out of date as new headers are added to the library.\n+\n+#include <algorithm>\n+#include <bitset>\n+#include <complex>\n+#include <deque>\n+#include <exception>\n+#include <fstream>\n+#include <functional>\n+#include <iomanip>\n+#include <ios>\n+#include <iosfwd>\n+#include <iostream>\n+#include <istream>\n+#include <iterator>\n+#include <limits>\n+#include <list>\n+#include <locale>\n+#include <map>\n+#include <memory>\n+#include <new>\n+#include <numeric>\n+#include <ostream>\n+#include <queue>\n+#include <set>\n+#include <sstream>\n+#include <stack>\n+#include <stdexcept>\n+#include <streambuf>\n+#include <string>\n+#include <typeinfo>\n+#include <utility>\n+#include <valarray>\n+#include <vector>\n+\n+#if __cplusplus >= 201103L\n+#include <array>\n+#include <atomic>\n+#include <chrono>\n+#include <codecvt>\n+#include <condition_variable>\n+#include <forward_list>\n+#include <future>\n+#include <initializer_list>\n+#include <mutex>\n+#include <random>\n+#include <ratio>\n+#include <regex>\n+#include <scoped_allocator>\n+#include <system_error>\n+#include <thread>\n+#include <tuple>\n+#include <typeindex>\n+#include <type_traits>\n+#include <unordered_map>\n+#include <unordered_set>\n+#endif\n+\n+#if __cplusplus >= 201402L\n+#include <shared_mutex>\n+#endif\n+\n+#if __cplusplus >= 201703L\n+#include <any>\n+#include <charconv>\n+// #include <execution>\n+#include <filesystem>\n+#include <optional>\n+#include <memory_resource>\n+#include <string_view>\n+#include <variant>\n+#endif\n+\n+#if __cplusplus >= 202002L\n+#include <barrier>\n+#include <bit>\n+#include <compare>\n+#include <concepts>\n+#if __cpp_impl_coroutine\n+# include <coroutine>\n+#endif\n+#if __has_include (<format>)\n+# include <format>\n+#endif\n+#include <latch>\n+#include <numbers>\n+#include <ranges>\n+#include <span>\n+#include <stop_token>\n+#include <semaphore>\n+#include <source_location>\n+#include <syncstream>\n+#include <version>\n+#endif\n+\n+#if __cplusplus > 202002L\n+#if __has_include(<spanstream>)\n+# include <spanstream>\n+#endif\n+#if __has_include(<stacktrace>)\n+# include <stacktrace>\n+#endif\n+#endif\n+\n int truncate = 0;\n \n // { dg-xfail-if \"PR libstdc++/99995\" { c++20 } }"}]}