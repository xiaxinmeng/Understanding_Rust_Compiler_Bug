{"sha": "55d6f63112dada0287fd21d4c61bd8e8d0992a39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVkNmY2MzExMmRhZGEwMjg3ZmQyMWQ0YzYxYmQ4ZThkMDk5MmEzOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-02-05T10:41:26Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-02-05T10:41:26Z"}, "message": "dwarf2out.c (dwarf2out_frame_debug_expr): Record the register saves in a PARALLEL before the register assignments.\n\ngcc/\n\t* dwarf2out.c (dwarf2out_frame_debug_expr): Record the register\n\tsaves in a PARALLEL before the register assignments.\n\nFrom-SVN: r121594", "tree": {"sha": "87b2b9db27c89d054c3e05e042bf497e5980fc6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87b2b9db27c89d054c3e05e042bf497e5980fc6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55d6f63112dada0287fd21d4c61bd8e8d0992a39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d6f63112dada0287fd21d4c61bd8e8d0992a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d6f63112dada0287fd21d4c61bd8e8d0992a39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d6f63112dada0287fd21d4c61bd8e8d0992a39/comments", "author": null, "committer": null, "parents": [{"sha": "5cd0f9153d5ae7d646006fc21bb967de4e262d8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd0f9153d5ae7d646006fc21bb967de4e262d8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cd0f9153d5ae7d646006fc21bb967de4e262d8d"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "198dee3817b01dd3089191e565aabbad46decfde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d6f63112dada0287fd21d4c61bd8e8d0992a39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d6f63112dada0287fd21d4c61bd8e8d0992a39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55d6f63112dada0287fd21d4c61bd8e8d0992a39", "patch": "@@ -1,3 +1,8 @@\n+2007-02-05  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* dwarf2out.c (dwarf2out_frame_debug_expr): Record the register\n+\tsaves in a PARALLEL before the register assignments.\n+\n 2007-02-05  Richard Sandiford  <richard@codesourcery.com>\n \n \t* doc/tm.texi (DWARF_ALT_FRAME_RETURN_COLUMN): Do not require"}, {"sha": "186c979abb55c1a3bed5e572576d01f3621a54f2", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d6f63112dada0287fd21d4c61bd8e8d0992a39/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d6f63112dada0287fd21d4c61bd8e8d0992a39/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=55d6f63112dada0287fd21d4c61bd8e8d0992a39", "patch": "@@ -1524,13 +1524,31 @@ dwarf2out_frame_debug_expr (rtx expr, const char *label)\n     {\n       int par_index;\n       int limit = XVECLEN (expr, 0);\n+      rtx elem;\n+\n+      /* PARALLELs have strict read-modify-write semantics, so we\n+\t ought to evaluate every rvalue before changing any lvalue.\n+\t It's cumbersome to do that in general, but there's an\n+\t easy approximation that is enough for all current users:\n+\t handle register saves before register assignments.  */\n+      if (GET_CODE (expr) == PARALLEL)\n+\tfor (par_index = 0; par_index < limit; par_index++)\n+\t  {\n+\t    elem = XVECEXP (expr, 0, par_index);\n+\t    if (GET_CODE (elem) == SET\n+\t\t&& MEM_P (SET_DEST (elem))\n+\t\t&& (RTX_FRAME_RELATED_P (elem) || par_index == 0))\n+\t      dwarf2out_frame_debug_expr (elem, label);\n+\t  }\n \n       for (par_index = 0; par_index < limit; par_index++)\n-\tif (GET_CODE (XVECEXP (expr, 0, par_index)) == SET\n-\t    && (RTX_FRAME_RELATED_P (XVECEXP (expr, 0, par_index))\n-\t\t|| par_index == 0))\n-\t  dwarf2out_frame_debug_expr (XVECEXP (expr, 0, par_index), label);\n-\n+\t{\n+\t  elem = XVECEXP (expr, 0, par_index);\n+\t  if (GET_CODE (elem) == SET\n+\t      && (!MEM_P (SET_DEST (elem)) || GET_CODE (expr) == SEQUENCE)\n+\t      && (RTX_FRAME_RELATED_P (elem) || par_index == 0))\n+\t    dwarf2out_frame_debug_expr (elem, label);\n+\t}\n       return;\n     }\n "}]}