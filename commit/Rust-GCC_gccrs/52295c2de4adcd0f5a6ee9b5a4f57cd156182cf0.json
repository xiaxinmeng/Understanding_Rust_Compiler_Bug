{"sha": "52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIyOTVjMmRlNGFkY2QwZjVhNmVlOWI1YTRmNTdjZDE1NjE4MmNmMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2019-03-27T16:18:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-03-27T16:18:06Z"}, "message": "re PR rtl-optimization/87761 ([MIPS] New FAIL: gcc.target/mips/fix-r4000-10.c   -O1 start with r265398)\n\n\tPR rtl-optimization/87761\n\tPR rtl-optimization/89826\n\t* regcprop.c (copyprop_hardreg_forward_1): Move may_trap_p test\n\tslightly later.\n\t(pass_cprop_hardreg::execute): Call df_analyze after adding the\n\tnote problem to get REG_DEAD/REG_UNUSED notes updated.\n\n\tPR rtl-optimization/87761\n\tPR rtl-optimization/89826\n\t* gcc.c-torture/execute/pr89826.c: New test.\n\nFrom-SVN: r269967", "tree": {"sha": "28016165b85dfcc8719ec17c7574c11867044d6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28016165b85dfcc8719ec17c7574c11867044d6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0/comments", "author": null, "committer": null, "parents": [{"sha": "ce4609958f8db5cd64ec1c3bec624a36d8b35812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4609958f8db5cd64ec1c3bec624a36d8b35812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4609958f8db5cd64ec1c3bec624a36d8b35812"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "f8a353d16c096bab262c87d722dafa3f7e17eb66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0", "patch": "@@ -1,3 +1,13 @@\n+2019-03-27  Jeff Law  <law@redhat.com>\n+\n+\n+\tPR rtl-optimization/87761\n+\tPR rtl-optimization/89826\n+\t* regcprop.c (copyprop_hardreg_forward_1): Move may_trap_p test\n+\tslightly later.\n+\t(pass_cprop_hardreg::execute): Call df_analyze after adding the\n+\tnote problem to get REG_DEAD/REG_UNUSED notes updated.\n+\n 2019-03-27  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/89463"}, {"sha": "3efe21f377c39f6b8f459dc344b22236ca72b88c", "filename": "gcc/regcprop.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0", "patch": "@@ -800,9 +800,9 @@ copyprop_hardreg_forward_1 (basic_block bb, struct value_data *vd)\n \n       /* Detect obviously dead sets (via REG_UNUSED notes) and remove them.  */\n       if (set\n-\t  && !may_trap_p (set)\n \t  && !RTX_FRAME_RELATED_P (insn)\n \t  && INSN_P (insn)\n+\t  && !may_trap_p (set)\n \t  && find_reg_note (insn, REG_UNUSED, SET_DEST (set))\n \t  && !side_effects_p (SET_SRC (set))\n \t  && !side_effects_p (SET_DEST (set)))\n@@ -1293,7 +1293,10 @@ pass_cprop_hardreg::execute (function *fun)\n   auto_sbitmap visited (last_basic_block_for_fn (fun));\n   bitmap_clear (visited);\n \n+  /* We need accurate notes.  Earlier passes such as if-conversion may\n+     leave notes in an inconsistent state.  */\n   df_note_add_problem ();\n+  df_analyze ();\n \n   /* It is tempting to set DF_LR_RUN_DCE, but DCE may choose to delete\n      an insn and this pass would not have visibility into the removal."}, {"sha": "b2c649cfb3e970ea2d78086e0a81276760f1892c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0", "patch": "@@ -1,3 +1,9 @@\n+2019-03-26  Jeff Law  <law@redhat.com>\n+\n+\tPR rtl-optimization/87761\n+\tPR rtl-optimization/89826\n+\t* gcc.c-torture/execute/pr89826.c: New test.\n+\n 2019-03-27  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/torture/20190327-1.c: New testcase."}, {"sha": "091644849d321afb5db16bb1c052591fef7dc8b7", "filename": "gcc/testsuite/gcc.c-torture/execute/pr89826.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr89826.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr89826.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr89826.c?ref=52295c2de4adcd0f5a6ee9b5a4f57cd156182cf0", "patch": "@@ -0,0 +1,21 @@\n+typedef unsigned int u32;\n+typedef unsigned long long u64;\n+u64 a;\n+u32 b;\n+\n+u64\n+foo (u32 d)\n+{\n+  a -= d ? 0 : ~a;\n+  return a + b;\n+}\n+\n+int\n+main (void)\n+{\n+  u64 x = foo (2);\n+  if (x != 0)\n+    __builtin_abort();\n+  return 0;\n+}\n+"}]}