{"sha": "2256aa1cff25a0ea9c5b699795a773a93f11f565", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI1NmFhMWNmZjI1YTBlYTljNWI2OTk3OTVhNzczYTkzZjExZjU2NQ==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-11-13T02:08:44Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-11-13T02:08:44Z"}, "message": "varasm.c (output_addressed_constants): For CONST_DECLs, output the initializer if present.\n\n[gcc/ChangeLog]\n2004-11-12  Ziemowit Laski  <zlaski@apple.com>\n\n       * varasm.c (output_addressed_constants): For CONST_DECLs,\n       output the initializer if present.\n\n[gcc/testsuite/ChangeLog]\n2004-11-12  Ziemowit Laski  <zlaski@apple.com>\n\n       * objc.dg/const-str-8.m, objc.dg/const-str-9.m:\n       New tests.\n\nFrom-SVN: r90569", "tree": {"sha": "8e3a09df7697ec7b47fb3922ba9d2dcbd933970e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e3a09df7697ec7b47fb3922ba9d2dcbd933970e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2256aa1cff25a0ea9c5b699795a773a93f11f565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2256aa1cff25a0ea9c5b699795a773a93f11f565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2256aa1cff25a0ea9c5b699795a773a93f11f565", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2256aa1cff25a0ea9c5b699795a773a93f11f565/comments", "author": null, "committer": null, "parents": [{"sha": "0abe417015847a63df76880dbfb907f8da65b225", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0abe417015847a63df76880dbfb907f8da65b225", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0abe417015847a63df76880dbfb907f8da65b225"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "b26460bfb09ebf3594422c8d4bd99332395dc395", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2256aa1cff25a0ea9c5b699795a773a93f11f565/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2256aa1cff25a0ea9c5b699795a773a93f11f565/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2256aa1cff25a0ea9c5b699795a773a93f11f565", "patch": "@@ -1,3 +1,8 @@\n+2004-11-12  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* varasm.c (output_addressed_constants): For CONST_DECLs,\n+\toutput the initializer if present.\n+\n 2004-11-12  Ziemowit Laski  <zlaski@apple.com>\n \n \t* config/rs6000/darwin.h: Fix confusing typo in comment."}, {"sha": "a8ea52ed6f3fb4d6974abb1fd84594bf2c319ecf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2256aa1cff25a0ea9c5b699795a773a93f11f565/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2256aa1cff25a0ea9c5b699795a773a93f11f565/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2256aa1cff25a0ea9c5b699795a773a93f11f565", "patch": "@@ -1,3 +1,8 @@\n+2004-11-12  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* objc.dg/const-str-8.m, objc.dg/const-str-9.m:\n+\tNew tests.\n+\n 2004-11-12  Mark Mitchell <mark@codesourcery.com>\n \n \t* lib/gcc-dg.exp (dg-forbid-option): New function."}, {"sha": "60abcbd52b167165f28328215f1a51cf8b80326b", "filename": "gcc/testsuite/objc.dg/const-str-8.m", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2256aa1cff25a0ea9c5b699795a773a93f11f565/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-8.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2256aa1cff25a0ea9c5b699795a773a93f11f565/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-8.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-8.m?ref=2256aa1cff25a0ea9c5b699795a773a93f11f565", "patch": "@@ -0,0 +1,39 @@\n+/* Test for assigning compile-time constant-string objects to static variables.  */\n+/* Contributed by Ziemowit Laski <zlaski@apple.com>  */\n+\n+/* { dg-options \"-fnext-runtime -fconstant-string-class=Foo -lobjc\" } */\n+/* { dg-do run { target *-*-darwin* } } */\n+\n+\n+#include <stdlib.h>\n+#include <objc/Object.h>\n+\n+@interface Foo: Object {\n+  char *cString;\n+  unsigned int len;\n+}\n+@end\n+\n+struct objc_class _FooClassReference;\n+\n+@implementation Foo : Object\n+- (char *)customString {\n+  return cString;\n+}\n+@end\n+\n+static const Foo *appKey = @\"MyApp\";\n+static int CFPreferencesSynchronize (const Foo *ref) {\n+  return ref == appKey;\n+}\n+\n+static void PrefsSynchronize(void)\n+{\n+  if(!CFPreferencesSynchronize(appKey))\n+    abort();\n+}\n+\n+int main () {\n+  PrefsSynchronize();\n+  return 0;\n+}"}, {"sha": "033337452d4efc43b386ba44e87ba70338df2a17", "filename": "gcc/testsuite/objc.dg/const-str-9.m", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2256aa1cff25a0ea9c5b699795a773a93f11f565/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-9.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2256aa1cff25a0ea9c5b699795a773a93f11f565/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-9.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-9.m?ref=2256aa1cff25a0ea9c5b699795a773a93f11f565", "patch": "@@ -0,0 +1,20 @@\n+/* Test if ObjC constant strings get placed in the correct section.  */\n+/* Contributed by Ziemowit Laski <zlaski@apple.com>  */\n+\n+/* { dg-options \"-fnext-runtime\" } */\n+/* { dg-do compile { target *-*-darwin* } } */\n+\n+#include <objc/Object.h>\n+\n+@interface NSConstantString: Object {\n+  char *cString;\n+  unsigned int len;\n+}\n+@end\n+\n+extern struct objc_class _NSConstantStringClassReference;\n+\n+static const NSConstantString *appKey = @\"MyApp\";\n+\n+/* { dg-final { scan-assembler \".section __OBJC, __cstring_object\" } } */\n+/* { dg-final { scan-assembler \".long\\t__NSConstantStringClassReference\\n\\t.long\\t.*\\n\\t.long\\t5\\n\\t.data\" } } */"}, {"sha": "6019b5a7e063b7b6bf3b58857d3af91bfed9a1c8", "filename": "gcc/varasm.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2256aa1cff25a0ea9c5b699795a773a93f11f565/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2256aa1cff25a0ea9c5b699795a773a93f11f565/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=2256aa1cff25a0ea9c5b699795a773a93f11f565", "patch": "@@ -3385,6 +3385,10 @@ output_addressed_constants (tree exp)\n \t   tem = TREE_OPERAND (tem, 0))\n \t;\n \n+      /* If we have an initialized CONST_DECL, retrieve the initializer.  */\n+      if (TREE_CODE (tem) == CONST_DECL && DECL_INITIAL (tem))\n+\ttem = DECL_INITIAL (tem);\n+\n       if (CONSTANT_CLASS_P (tem) || TREE_CODE (tem) == CONSTRUCTOR)\n \toutput_constant_def (tem, 0);\n       break;"}]}