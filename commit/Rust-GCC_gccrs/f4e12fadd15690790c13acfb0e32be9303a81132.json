{"sha": "f4e12fadd15690790c13acfb0e32be9303a81132", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRlMTJmYWRkMTU2OTA3OTBjMTNhY2ZiMGUzMmJlOTMwM2E4MTEzMg==", "commit": {"author": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1994-08-15T16:03:36Z"}, "committer": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1994-08-15T16:03:36Z"}, "message": "(objc_sizeof_type): Assign from ROUND,\n\n        don't increment.  Remove ; after while to fix infinite loop.\n        Add float and double cases.\n        (objc_alignof_type):  Add float and double cases.\n\nFrom-SVN: r7929", "tree": {"sha": "3f7d766a3577e1428a5567e5f2e499ba8a2d0a53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f7d766a3577e1428a5567e5f2e499ba8a2d0a53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4e12fadd15690790c13acfb0e32be9303a81132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4e12fadd15690790c13acfb0e32be9303a81132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4e12fadd15690790c13acfb0e32be9303a81132", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4e12fadd15690790c13acfb0e32be9303a81132/comments", "author": null, "committer": null, "parents": [{"sha": "121b312b9074813750141689cf9359576da87d81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/121b312b9074813750141689cf9359576da87d81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/121b312b9074813750141689cf9359576da87d81"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "27b4b8a4d0d8260a09a5094baf6c3c3d022dcb5b", "filename": "gcc/objc/encoding.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4e12fadd15690790c13acfb0e32be9303a81132/gcc%2Fobjc%2Fencoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4e12fadd15690790c13acfb0e32be9303a81132/gcc%2Fobjc%2Fencoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fencoding.c?ref=f4e12fadd15690790c13acfb0e32be9303a81132", "patch": "@@ -103,6 +103,14 @@ objc_sizeof_type(const char* type)\n     return sizeof(unsigned long);\n     break;\n \n+  case _C_FLT:\n+    return sizeof(float);\n+    break;\n+\n+  case _C_DBL:\n+    return sizeof(double);\n+    break;\n+\n   case _C_PTR:\n   case _C_ATOM:\n   case _C_CHARPTR:\n@@ -122,10 +130,10 @@ objc_sizeof_type(const char* type)\n       int acc_size = 0;\n       int align;\n       while (*type != _C_STRUCT_E && *type++ != '='); /* skip \"<name>=\" */\n-      while (*type != _C_STRUCT_E);\n+      while (*type != _C_STRUCT_E)\n \t{\n \t  align = objc_alignof_type (type);       /* padd to alignment */\n-\t  acc_size += ROUND (acc_size, align);\n+\t  acc_size = ROUND (acc_size, align);\n \t  acc_size += objc_sizeof_type (type);   /* add component size */\n \t  type = objc_skip_typespec (type);\t         /* skip component */\n \t}\n@@ -202,6 +210,14 @@ objc_alignof_type(const char* type)\n     return __alignof__(unsigned long);\n     break;\n \n+  case _C_FLT:\n+    return __alignof__(float);\n+    break;\n+\n+  case _C_DBL:\n+    return __alignof__(double);\n+    break;\n+\n   case _C_ATOM:\n   case _C_CHARPTR:\n     return __alignof__(char*);"}]}