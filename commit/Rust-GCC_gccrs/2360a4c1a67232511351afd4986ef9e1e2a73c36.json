{"sha": "2360a4c1a67232511351afd4986ef9e1e2a73c36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM2MGE0YzFhNjcyMzI1MTEzNTFhZmQ0OTg2ZWY5ZTFlMmE3M2MzNg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2005-09-09T16:17:25Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2005-09-09T16:17:25Z"}, "message": "re PR tree-optimization/23509 (ICE with ivopts)\n\n\tPR tree-optimization/23509\n\t* tree-cfg.c (replace_uses_by): Use replace_exp.\n\t* tree-ssa-loop-ivopts.c (get_ref_tag): Assert that dereferenced\n\tpointers have name_mem_tag or type_mem_tag set.\n\nFrom-SVN: r104099", "tree": {"sha": "b0daab8bce72e580a6b7781d87afabad44aeb1f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0daab8bce72e580a6b7781d87afabad44aeb1f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2360a4c1a67232511351afd4986ef9e1e2a73c36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2360a4c1a67232511351afd4986ef9e1e2a73c36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2360a4c1a67232511351afd4986ef9e1e2a73c36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2360a4c1a67232511351afd4986ef9e1e2a73c36/comments", "author": null, "committer": null, "parents": [{"sha": "8f0960834317f5a64a9246b0321b5f90f9faaf05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0960834317f5a64a9246b0321b5f90f9faaf05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f0960834317f5a64a9246b0321b5f90f9faaf05"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "549a9b786e600c81812ea72335417290f9bb8c07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2360a4c1a67232511351afd4986ef9e1e2a73c36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2360a4c1a67232511351afd4986ef9e1e2a73c36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2360a4c1a67232511351afd4986ef9e1e2a73c36", "patch": "@@ -1,3 +1,10 @@\n+2005-09-09  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/23509\n+\t* tree-cfg.c (replace_uses_by): Use replace_exp.\n+\t* tree-ssa-loop-ivopts.c (get_ref_tag): Assert that dereferenced\n+\tpointers have name_mem_tag or type_mem_tag set.\n+\n 2005-09-09  Sebastian Pop  <pop@cri.ensmp.fr>\n \n \t* tree-chrec.c (evolution_function_is_invariant_rec_p): Use "}, {"sha": "75c14f426ff5ff37f34ce5a402ab15e3b8838b8c", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2360a4c1a67232511351afd4986ef9e1e2a73c36/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2360a4c1a67232511351afd4986ef9e1e2a73c36/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=2360a4c1a67232511351afd4986ef9e1e2a73c36", "patch": "@@ -1237,8 +1237,7 @@ replace_uses_by (tree name, tree val)\n   FOR_EACH_IMM_USE_SAFE (use, imm_iter, name)\n     {\n       stmt = USE_STMT (use);\n-\n-      SET_USE (use, val);\n+      replace_exp (use, val);\n \n       if (TREE_CODE (stmt) == PHI_NODE)\n \t{"}, {"sha": "44ebc5ca28e4ac9048de331391d07945140fde68", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2360a4c1a67232511351afd4986ef9e1e2a73c36/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2360a4c1a67232511351afd4986ef9e1e2a73c36/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=2360a4c1a67232511351afd4986ef9e1e2a73c36", "patch": "@@ -5448,9 +5448,13 @@ get_ref_tag (tree ref)\n     return NULL_TREE;\n \n   if (TREE_CODE (var) == INDIRECT_REF)\n-    var = TREE_OPERAND (var, 0);\n-  if (TREE_CODE (var) == SSA_NAME)\n     {\n+      /* In case the base is a dereference of a pointer, first check its name\n+\t mem tag, and if it does not have one, use type mem tag.  */\n+      var = TREE_OPERAND (var, 0);\n+      if (TREE_CODE (var) != SSA_NAME)\n+\treturn NULL_TREE;\n+\n       if (SSA_NAME_PTR_INFO (var))\n \t{\n \t  tag = SSA_NAME_PTR_INFO (var)->name_mem_tag;\n@@ -5459,18 +5463,21 @@ get_ref_tag (tree ref)\n \t}\n  \n       var = SSA_NAME_VAR (var);\n+      tag = var_ann (var)->type_mem_tag;\n+      gcc_assert (tag != NULL_TREE);\n+      return tag;\n     }\n- \n-  if (DECL_P (var))\n-    {\n+  else\n+    { \n+      if (!DECL_P (var))\n+\treturn NULL_TREE;\n+\n       tag = var_ann (var)->type_mem_tag;\n       if (tag)\n \treturn tag;\n \n       return var;\n     }\n-\n-  return NULL_TREE;\n }\n \n /* Copies the reference information from OLD_REF to NEW_REF.  */"}]}