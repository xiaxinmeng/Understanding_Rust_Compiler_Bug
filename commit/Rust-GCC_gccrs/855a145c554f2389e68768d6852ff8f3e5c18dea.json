{"sha": "855a145c554f2389e68768d6852ff8f3e5c18dea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU1YTE0NWM1NTRmMjM4OWU2ODc2OGQ2ODUyZmY4ZjNlNWMxOGRlYQ==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2005-04-23T15:19:06Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-04-23T15:19:06Z"}, "message": "trans-const.c (gfc_conv_mpfr_to_tree): Use hexadecimal string as intermediate representation.\n\n* trans-const.c (gfc_conv_mpfr_to_tree): Use hexadecimal string as\nintermediate representation.\n\nFrom-SVN: r98619", "tree": {"sha": "034f2b7a6bc87e6d5b83ebf56d7c028c5c262302", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/034f2b7a6bc87e6d5b83ebf56d7c028c5c262302"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/855a145c554f2389e68768d6852ff8f3e5c18dea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/855a145c554f2389e68768d6852ff8f3e5c18dea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/855a145c554f2389e68768d6852ff8f3e5c18dea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/855a145c554f2389e68768d6852ff8f3e5c18dea/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "906532aaa9d3e8502c06e227e921626918acfc73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/906532aaa9d3e8502c06e227e921626918acfc73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/906532aaa9d3e8502c06e227e921626918acfc73"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "a20c922277809e8546f4c171382ce87878113f17", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855a145c554f2389e68768d6852ff8f3e5c18dea/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855a145c554f2389e68768d6852ff8f3e5c18dea/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=855a145c554f2389e68768d6852ff8f3e5c18dea", "patch": "@@ -1,3 +1,8 @@\n+2005-04-23  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* trans-const.c (gfc_conv_mpfr_to_tree): Use hexadecimal string as\n+\tintermediate representation.\n+\n 2005-04-21  Steven G. Kargl  <kargls@comcast.net>\n \n \t* trans-const.c (gfc_conv_mpfr_to_tree): Remove unneeded computation;"}, {"sha": "59009c1e32fc744aa601d8f535602cefdc637eba", "filename": "gcc/fortran/trans-const.c", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/855a145c554f2389e68768d6852ff8f3e5c18dea/gcc%2Ffortran%2Ftrans-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/855a145c554f2389e68768d6852ff8f3e5c18dea/gcc%2Ffortran%2Ftrans-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-const.c?ref=855a145c554f2389e68768d6852ff8f3e5c18dea", "patch": "@@ -224,27 +224,29 @@ gfc_conv_mpfr_to_tree (mpfr_t f, int kind)\n   char *p, *q;\n   int n;\n \n-  for (n = 0; gfc_real_kinds[n].kind != 0; n++)\n-    {\n-      if (gfc_real_kinds[n].kind == kind)\n-\tbreak;\n-    }\n-  gcc_assert (gfc_real_kinds[n].kind);\n+  n = gfc_validate_kind (BT_REAL, kind, false);\n \n-  /* A decimal representation is used here, which requires the additional\n-     two characters for rounding.  TODO: Use a hexadecimal representation\n-     to avoid rounding issues.  */\n-  p = mpfr_get_str (NULL, &exp, 10, gfc_real_kinds[n].precision+2,\n+  gcc_assert (gfc_real_kinds[n].radix == 2);\n+\n+  /* mpfr chooses too small a number of hexadecimal digits if the\n+     number of binary digits is not divisible by four, therefore we\n+     have to explicitly request a sufficient number of digits here.  */\n+  p = mpfr_get_str (NULL, &exp, 16, gfc_real_kinds[n].digits / 4 + 1,\n \t\t    f, GFC_RND_MODE);\n-  gcc_assert (p);\n \n-  /* The additional 10 characters add space for the sprintf below.  */\n-  q = (char *) gfc_getmem (strlen (p) + 10);\n+  /* REAL_VALUE_ATOF expects the exponent for mantissae * 2**exp,\n+     mpfr_get_str returns the exponent for mantissa * 16**exp, adjust\n+     for that.  */\n+  exp *= 4;\n+\n+  /* The additional 12 characters add space for the sprintf below.\n+     This leaves 6 digits for the exponent which is certainly enough.  */\n+  q = (char *) gfc_getmem (strlen (p) + 12);\n \n   if (p[0] == '-')\n-    sprintf (q, \"-.%se%d\", &p[1], (int) exp);\n+    sprintf (q, \"-0x.%sp%d\", &p[1], (int) exp);\n   else\n-    sprintf (q, \".%se%d\", p, (int) exp);\n+    sprintf (q, \"0x.%sp%d\", p, (int) exp);\n \n   type = gfc_get_real_type (kind);\n   res = build_real (type, REAL_VALUE_ATOF (q, TYPE_MODE (type)));"}]}