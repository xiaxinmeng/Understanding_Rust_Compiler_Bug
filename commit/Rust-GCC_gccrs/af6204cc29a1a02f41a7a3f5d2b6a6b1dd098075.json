{"sha": "af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY2MjA0Y2MyOWExYTAyZjQxYTdhM2Y1ZDJiNmE2YjFkZDA5ODA3NQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2012-04-26T02:20:32Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-04-26T02:20:32Z"}, "message": "hashtable.h: Adjust doxygen markup for base classes.\n\n2012-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t*  include/bits/hashtable.h: Adjust doxygen markup for base classes.\n\t*  include/bits/hashtable_policy.h: Same.\n\nFrom-SVN: r186856", "tree": {"sha": "2670a66a8272e35467f0470ac6b1385c5794fda4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2670a66a8272e35467f0470ac6b1385c5794fda4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075/comments", "author": null, "committer": null, "parents": [{"sha": "5ddecff9f260138d286332bb0114f3781d66c38a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ddecff9f260138d286332bb0114f3781d66c38a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ddecff9f260138d286332bb0114f3781d66c38a"}], "stats": {"total": 43, "additions": 30, "deletions": 13}, "files": [{"sha": "269a545fd7682ecd36086adeb47f1027bd39953c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075", "patch": "@@ -1,3 +1,8 @@\n+2012-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t*  include/bits/hashtable.h: Adjust doxygen markup for base classes.\n+\t*  include/bits/hashtable_policy.h: Same.\n+\n 2012-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/52689"}, {"sha": "5adc7ca98bbf68563c479028ed71697c5fea1853", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075", "patch": "@@ -157,11 +157,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  explicitly passed, template pattern.\n    *\n    *  Base class templates are: \n-   *    __detail::_Hashtable_base\n-   *    __detail::_Map_base\n-   *    __detail::_Insert\n-   *    __detail::_Rehash_base\n-   *    __detail::_Equality\n+   *    - __detail::_Hashtable_base\n+   *    - __detail::_Map_base\n+   *    - __detail::_Insert\n+   *    - __detail::_Rehash_base\n+   *    - __detail::_Equality\n    */\n   template<typename _Key, typename _Value, typename _Alloc,\n \t   typename _ExtractKey, typename _Equal,"}, {"sha": "3b4351027d9fc3a74ddaf7abad43790c8646e900", "filename": "libstdc++-v3/include/bits/hashtable_policy.h", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h?ref=af6204cc29a1a02f41a7a3f5d2b6a6b1dd098075", "patch": "@@ -121,10 +121,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  struct _Hash_node_base\n    *\n-   * Nodes, used to wrap elements stored in the hash table.  A policy\n-   * template parameter of class template _Hashtable controls whether\n-   * nodes also store a hash code. In some cases (e.g. strings) this\n-   * may be a performance win.\n+   *  Nodes, used to wrap elements stored in the hash table.  A policy\n+   *  template parameter of class template _Hashtable controls whether\n+   *  nodes also store a hash code. In some cases (e.g. strings) this\n+   *  may be a performance win.\n    */\n   struct _Hash_node_base\n   {\n@@ -141,7 +141,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Value, bool _Cache_hash_code>\n     struct _Hash_node;\n \n-  /// Specialization.\n+  /**\n+   *  Specialization for nodes with caches, struct _Hash_node.\n+   *\n+   *  Base class is __detail::_Hash_node_base.\n+   */\n   template<typename _Value>\n     struct _Hash_node<_Value, true> : _Hash_node_base\n     {\n@@ -156,7 +160,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _M_next() const { return static_cast<_Hash_node*>(_M_nxt); }\n     };\n \n-  /// Specialization.\n+  /**\n+   *  Specialization for nodes without caches, struct _Hash_node.\n+   *\n+   *  Base class is __detail::_Hash_node_base.\n+   */\n   template<typename _Value>\n     struct _Hash_node<_Value, false> : _Hash_node_base\n     {\n@@ -1421,8 +1429,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  Primary class template _Hashtable_base.\n    *\n-   *  Base class for _Hashtable. Helper class adding management of\n-   *  _Equal functor to _Hash_code_base type.\n+   *  Helper class adding management of _Equal functor to\n+   *  _Hash_code_base type.\n+   *\n+   *  Base class templates are:\n+   *    - __detail::_Hash_code_base\n+   *    - __detail::_Hashtable_ebo_helper\n    */\n   template<typename _Key, typename _Value,\n \t   typename _ExtractKey, typename _Equal,"}]}