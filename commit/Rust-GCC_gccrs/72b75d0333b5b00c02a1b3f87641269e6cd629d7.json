{"sha": "72b75d0333b5b00c02a1b3f87641269e6cd629d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJiNzVkMDMzM2I1YjAwYzAyYTFiM2Y4NzY0MTI2OWU2Y2Q2MjlkNw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-04-10T18:56:07Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-04-10T18:56:07Z"}, "message": "re PR c++/28301 (ICE with broken specialization)\n\ngcc/cp/\n\n2009-04-10  Jason Merrill  <jason@redhat.com>\n\n\tPR c++/28301\n\t* parser.c (cp_parser_skip_to_end_of_block_or_statement): Return\n\tif we see a close brace without an open brace.\n\ngcc/testsuite/\n\n2009-04-10  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR c++/28301\n\t* g++.dg/cpp0x/enum2.C: Updated.\n\t* g++.dg/debug/pr22514.C: Likewise.\n\t* g++.dg/parse/enum2.C: Likewise.\n\t* g++.dg/parse/enum3.C: Likewise.\n\t* g++.dg/template/crash79.C: Likewise.\n\t* g++.old-deja/g++.jason/cond.C: Likewise.\n\n\t* g++.dg/template/pr28301.C: New.\n\nFrom-SVN: r145936", "tree": {"sha": "41a2c06b2e7bcda06f34cd914a410620bbd48f89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41a2c06b2e7bcda06f34cd914a410620bbd48f89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72b75d0333b5b00c02a1b3f87641269e6cd629d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b75d0333b5b00c02a1b3f87641269e6cd629d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72b75d0333b5b00c02a1b3f87641269e6cd629d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72b75d0333b5b00c02a1b3f87641269e6cd629d7/comments", "author": null, "committer": null, "parents": [{"sha": "6e990b5462369a9f29662c13ca4537710900de07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e990b5462369a9f29662c13ca4537710900de07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e990b5462369a9f29662c13ca4537710900de07"}], "stats": {"total": 54, "additions": 45, "deletions": 9}, "files": [{"sha": "0a3af2ac508ed15aa748123f59d4d5faceef56a4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=72b75d0333b5b00c02a1b3f87641269e6cd629d7", "patch": "@@ -1,3 +1,9 @@\n+2009-04-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/28301\n+\t* parser.c (cp_parser_skip_to_end_of_block_or_statement): Return\n+\tif we see a close brace without an open brace.\n+\n 2008-04-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* parser.c (cp_parser_class_specifier): Remove the unused"}, {"sha": "4dec792e577afe73ff62cade6cc30ad2af2c005f", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=72b75d0333b5b00c02a1b3f87641269e6cd629d7", "patch": "@@ -2623,6 +2623,8 @@ cp_parser_skip_to_end_of_block_or_statement (cp_parser* parser)\n \t  /* Stop if this is an unnested '}', or closes the outermost\n \t     nesting level.  */\n \t  nesting_depth--;\n+\t  if (nesting_depth < 0)\n+\t    return;\n \t  if (!nesting_depth)\n \t    nesting_depth = -1;\n \t  break;"}, {"sha": "da40b35470f16e8065912877731c0bd0d194b1ac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=72b75d0333b5b00c02a1b3f87641269e6cd629d7", "patch": "@@ -1,3 +1,13 @@\n+2009-04-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR c++/28301\n+\t* g++.dg/cpp0x/enum2.C: Updated.\n+\t* g++.dg/debug/pr22514.C: Likewise.\n+\t* g++.dg/parse/enum2.C: Likewise.\n+\t* g++.dg/parse/enum3.C: Likewise.\n+\t* g++.dg/template/crash79.C: Likewise.\n+\t* g++.old-deja/g++.jason/cond.C: Likewise.\n+\n 2009-04-10  Chao-ying Fu  <fu@mips.com>\n \n \t* gcc.target/mips/interrupt_handler.c: Change from compile to"}, {"sha": "21c265a923cfd01b3493224f562c99b693c89cc3", "filename": "gcc/testsuite/g++.dg/cpp0x/enum2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum2.C?ref=72b75d0333b5b00c02a1b3f87641269e6cd629d7", "patch": "@@ -2,4 +2,4 @@\n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n \n-template<int> enum E : int { e };\t// { dg-error \"template declaration of\" }\n+template<int> enum E : int { e };\t// { dg-error \"declaration|expected\" }"}, {"sha": "3df9e230ecb27ab2ffb940b29adf24f599f0576a", "filename": "gcc/testsuite/g++.dg/debug/pr22514.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr22514.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr22514.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr22514.C?ref=72b75d0333b5b00c02a1b3f87641269e6cd629d7", "patch": "@@ -10,4 +10,4 @@ namespace s\n     using _List_base<i>::_M_impl;\n   }\n }  /* { dg-error \"expected unqualified-id before '\\}'\" } */\n-s::list<1> OutputModuleListType;  /* { dg-error \"expected\" } */\n+s::list<1> OutputModuleListType;"}, {"sha": "f77f91701d93bddc56feebf0e79508cec47e336f", "filename": "gcc/testsuite/g++.dg/parse/enum2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fenum2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fenum2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fenum2.C?ref=72b75d0333b5b00c02a1b3f87641269e6cd629d7", "patch": "@@ -4,4 +4,4 @@\n \n // PR c++/18123: ICE pushing tag from invalid template.\n \n-template<int> enum E { e }; // { dg-error \"template declaration\" }\n+template<int> enum E { e }; // { dg-error \"declaration|expected\" }"}, {"sha": "508e4b94de79f079d8a30d809c17476e07744251", "filename": "gcc/testsuite/g++.dg/parse/enum3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fenum3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fenum3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fenum3.C?ref=72b75d0333b5b00c02a1b3f87641269e6cd629d7", "patch": "@@ -1,5 +1,5 @@\n // PR c++/28261\n \n-struct A {}; // { dg-error \"A\" }\n+struct A {};\n \n-A::A (enum { e }) {} // { dg-error \"defined|match\" }\n+A::A (enum { e }) {} // { dg-error \"defined|token\" }"}, {"sha": "700fd293d73aab21afdfd11ee381a799a162e404", "filename": "gcc/testsuite/g++.dg/template/crash79.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash79.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash79.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash79.C?ref=72b75d0333b5b00c02a1b3f87641269e6cd629d7", "patch": "@@ -3,7 +3,7 @@\n struct A\n {\n   A(int);\n-  template<int> enum { e }; // { dg-error \"template\" }\n-};\n+  template<int> enum { e }; // { dg-error \"template|expected\" }\n+}; // { dg-error \"expected\" }\n \n-A a(A::e); // { dg-error \"not a member\" }\n+A a(A::e);"}, {"sha": "a7a00847880d2baedbdaebe5e57a674a5b6865bc", "filename": "gcc/testsuite/g++.dg/template/pr28301.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr28301.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr28301.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr28301.C?ref=72b75d0333b5b00c02a1b3f87641269e6cd629d7", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/28301\n+// { dg-do compile }\n+\n+template<typename> struct A\n+{\n+    template<int> void foo()\n+};\t// { dg-error \"initializer\" }\n+\n+template<> struct A<void>\n+{\n+    template<int> void foo();\n+};\n+\n+void bar()\n+{\n+    A<void> a;\n+    a.foo<0>();\n+}"}, {"sha": "1c9e8068f58e6c38e15c0d06c25efd1690a068fe", "filename": "gcc/testsuite/g++.old-deja/g++.jason/cond.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcond.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72b75d0333b5b00c02a1b3f87641269e6cd629d7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcond.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcond.C?ref=72b75d0333b5b00c02a1b3f87641269e6cd629d7", "patch": "@@ -40,7 +40,7 @@ int main()\n   // { dg-error \"expected\" \"exp\" { target *-*-* } 39 }\n   \n   if (enum A { one, two, three } foo = one) // { dg-error \"defined\" \"def\" } \n-  // { dg-error \"declared\" \"decl\" { target *-*-* } 42 }\n+  // { dg-error \"expected\" \"expected\" { target *-*-* } 42 }\n     ;\n \n   struct B { operator int () { return 2; } };"}]}