{"sha": "2f6bd6eb67a11faef36ab3420cf6783de15e4760", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY2YmQ2ZWI2N2ExMWZhZWYzNmFiMzQyMGNmNjc4M2RlMTVlNDc2MA==", "commit": {"author": {"name": "Yoshinori Sato", "email": "ysato@users.sourceforge.jp", "date": "2015-04-27T19:16:27Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-04-27T19:16:27Z"}, "message": "config.gcc: Add h8300-*-linux.\n\ngcc/\n\t* config.gcc: Add h8300-*-linux.\n\t* config/h8300/linux.h: New.\n\t* config/h8300/t-linux: New.\n\t* config/h8300/h8300.c (h8300_option_override): Normal mode\n\tis not supported for h8300-*-linux.\n\t(h8300_file_start): Target priority change.\n\t(get_shift_alg): Likewise.\n\t(h8300_shift_need_scratch_p): Likewise.\n\t* config/h8300/h8300.h (TARGET_CPU_CPP_BUILTINS): Likewise.\n\t* config/h8300/h8300.md (define_peephole2): Remove duplicate condition.\n\nlibgcc/\n\n\t* config.host: Add h8300-*-linux\n\t* config/h8300/t-linux: New file.\n\t* config/h8300/lib1funs.s: Change symbol prefix.\n\t* config/h8300/sfp-machine.h: 64bit double support.\n\nFrom-SVN: r222479", "tree": {"sha": "a67446cf5b576ae16aac0ce5b4210d02ea3e99ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a67446cf5b576ae16aac0ce5b4210d02ea3e99ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f6bd6eb67a11faef36ab3420cf6783de15e4760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f6bd6eb67a11faef36ab3420cf6783de15e4760", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f6bd6eb67a11faef36ab3420cf6783de15e4760", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f6bd6eb67a11faef36ab3420cf6783de15e4760/comments", "author": {"login": "ysat0", "id": 390647, "node_id": "MDQ6VXNlcjM5MDY0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/390647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysat0", "html_url": "https://github.com/ysat0", "followers_url": "https://api.github.com/users/ysat0/followers", "following_url": "https://api.github.com/users/ysat0/following{/other_user}", "gists_url": "https://api.github.com/users/ysat0/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysat0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysat0/subscriptions", "organizations_url": "https://api.github.com/users/ysat0/orgs", "repos_url": "https://api.github.com/users/ysat0/repos", "events_url": "https://api.github.com/users/ysat0/events{/privacy}", "received_events_url": "https://api.github.com/users/ysat0/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5302f06b81185a1c785263358f204fc0f5bdba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5302f06b81185a1c785263358f204fc0f5bdba2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5302f06b81185a1c785263358f204fc0f5bdba2"}], "stats": {"total": 312, "additions": 255, "deletions": 57}, "files": [{"sha": "a24e57c65ce6cac3c82d74c0461d388372a139cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -1,3 +1,16 @@\n+2015-04-27  Yoshinori Sato <ysato@users.sourceforge.jp>\n+\n+\t* config.gcc: Add h8300-*-linux.\n+\t* config/h8300/linux.h: New.\n+\t* config/h8300/t-linux: New.\n+\t* config/h8300/h8300.c (h8300_option_override): Normal mode\n+\tis not supported for h8300-*-linux.\n+\t(h8300_file_start): Target priority change.\n+\t(get_shift_alg): Likewise.\n+\t(h8300_shift_need_scratch_p): Likewise.\n+\t* config/h8300/h8300.h (TARGET_CPU_CPP_BUILTINS): Likewise.\n+\t* config/h8300/h8300.md (define_peephole2): Remove duplicate condition.\n+\n 2015-04-27  Caroline Tice  <cmtice@google.com>\n \n \t* final.c (final_scan_insn):  Output cold_function_nmae as function"}, {"sha": "5c48cd0c682efb5fc02463cf6e7551606d8741c8", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -1218,6 +1218,10 @@ h8300-*-elf*)\n \ttmake_file=\"h8300/t-h8300\"\n \ttm_file=\"h8300/h8300.h dbxelf.h elfos.h newlib-stdint.h h8300/elf.h\"\n \t;;\n+h8300-*-linux*)\n+\ttmake_file=\"${tmake_file} h8300/t-h8300 h8300/t-linux\"\n+\ttm_file=\"h8300/h8300.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h h8300/linux.h\"\n+\t;;\n hppa*64*-*-linux*)\n \ttarget_cpu_default=\"MASK_PA_11|MASK_PA_20\"\n \ttm_file=\"pa/pa64-start.h ${tm_file} dbxelf.h elfos.h gnu-user.h linux.h \\"}, {"sha": "00087f30318a03d411fb4dec5d6e0f22e3053672", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -406,6 +406,14 @@ h8300_option_override (void)\n                - Option ignored!\");\n    }\n \n+#ifdef H8300_LINUX \n+ if ((TARGET_NORMAL_MODE))\n+   {\n+      error (\"-mn is not supported for linux targets\");\n+      target_flags ^= MASK_NORMAL_MODE;\n+   }\n+#endif\n+\n   /* Some of the shifts are optimized for speed by default.\n      See http://gcc.gnu.org/ml/gcc-patches/2002-07/msg01858.html\n      If optimizing for size, change shift_alg for those shift to\n@@ -1006,12 +1014,12 @@ h8300_file_start (void)\n {\n   default_file_start ();\n \n-  if (TARGET_H8300H)\n-    fputs (TARGET_NORMAL_MODE ? \"\\t.h8300hn\\n\" : \"\\t.h8300h\\n\", asm_out_file);\n-  else if (TARGET_H8300SX)\n+  if (TARGET_H8300SX)\n     fputs (TARGET_NORMAL_MODE ? \"\\t.h8300sxn\\n\" : \"\\t.h8300sx\\n\", asm_out_file);\n   else if (TARGET_H8300S)\n     fputs (TARGET_NORMAL_MODE ? \"\\t.h8300sn\\n\" : \"\\t.h8300s\\n\", asm_out_file);\n+  else if (TARGET_H8300H)\n+    fputs (TARGET_NORMAL_MODE ? \"\\t.h8300hn\\n\" : \"\\t.h8300h\\n\", asm_out_file);\n }\n \n /* Output assembly language code for the end of file.  */\n@@ -4094,10 +4102,10 @@ get_shift_alg (enum shift_type shift_type, enum shift_mode shift_mode,\n   /* Find the target CPU.  */\n   if (TARGET_H8300)\n     cpu = H8_300;\n-  else if (TARGET_H8300H)\n-    cpu = H8_300H;\n-  else\n+  else if (TARGET_H8300S)\n     cpu = H8_S;\n+  else\n+    cpu = H8_300H;\n \n   /* Find the shift algorithm.  */\n   info->alg = SHIFT_LOOP;\n@@ -4540,10 +4548,10 @@ h8300_shift_needs_scratch_p (int count, machine_mode mode)\n   /* Find out the target CPU.  */\n   if (TARGET_H8300)\n     cpu = H8_300;\n-  else if (TARGET_H8300H)\n-    cpu = H8_300H;\n-  else\n+  else if (TARGET_H8300S)\n     cpu = H8_S;\n+  else\n+    cpu = H8_300H;\n \n   /* Find the shift algorithm.  */\n   switch (mode)"}, {"sha": "86fd7d1f33811b66ca7a0b1b4bd6103f6efc4b27", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -39,29 +39,29 @@ extern const char * const *h8_reg_names;\n #define TARGET_CPU_CPP_BUILTINS()\t\t\t\\\n   do\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n-      if (TARGET_H8300H)\t\t\t\t\\\n+      if (TARGET_H8300SX)\t\t\t\t\\\n \t{\t\t\t\t\t\t\\\n-\t  builtin_define (\"__H8300H__\");\t\t\\\n-\t  builtin_assert (\"cpu=h8300h\");\t\t\\\n-\t  builtin_assert (\"machine=h8300h\");\t\t\\\n+\t  builtin_define (\"__H8300SX__\");\t\t\\\n \t  if (TARGET_NORMAL_MODE)\t\t\t\\\n \t    {\t\t\t\t\t\t\\\n \t      builtin_define (\"__NORMAL_MODE__\");\t\\\n \t    }\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\\\n-      else if (TARGET_H8300SX)\t\t\t\t\\\n+      else if (TARGET_H8300S)\t\t\t\t\\\n \t{\t\t\t\t\t\t\\\n-\t  builtin_define (\"__H8300SX__\");\t\t\\\n+\t  builtin_define (\"__H8300S__\");\t\t\\\n+\t  builtin_assert (\"cpu=h8300s\");\t\t\\\n+\t  builtin_assert (\"machine=h8300s\");\t\t\\\n \t  if (TARGET_NORMAL_MODE)\t\t\t\\\n \t    {\t\t\t\t\t\t\\\n \t      builtin_define (\"__NORMAL_MODE__\");\t\\\n \t    }\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\\\n-      else if (TARGET_H8300S)\t\t\t\t\\\n+      else if (TARGET_H8300H)\t\t\t\t\\\n \t{\t\t\t\t\t\t\\\n-\t  builtin_define (\"__H8300S__\");\t\t\\\n-\t  builtin_assert (\"cpu=h8300s\");\t\t\\\n-\t  builtin_assert (\"machine=h8300s\");\t\t\\\n+\t  builtin_define (\"__H8300H__\");\t\t\\\n+\t  builtin_assert (\"cpu=h8300h\");\t\t\\\n+\t  builtin_assert (\"machine=h8300h\");\t\t\\\n \t  if (TARGET_NORMAL_MODE)\t\t\t\\\n \t    {\t\t\t\t\t\t\\\n \t      builtin_define (\"__NORMAL_MODE__\");\t\\"}, {"sha": "4079b306d5cbdfe0a206d1be99a8c20cd4b9ec67", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -5847,7 +5847,7 @@\n \t\t      (pc)))]\n   \"(TARGET_H8300H || TARGET_H8300S)\n     && peep2_reg_dead_p (1, operands[0])\n-    && ((TARGET_H8300H && INTVAL (operands[1]) == 3)\n+    && (INTVAL (operands[1]) == 3\n \t || INTVAL (operands[1]) == 7\n \t || INTVAL (operands[1]) == 15\n \t || INTVAL (operands[1]) == 31"}, {"sha": "ef31e8659f136ddb515f168d93e90c803604d3bb", "filename": "gcc/config/h8300/linux.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig%2Fh8300%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig%2Fh8300%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Flinux.h?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -0,0 +1,50 @@\n+/* Definitions of target machine for GNU compiler.\n+   Renesas H8/300 (linux variant)\n+   Copyright (C) 2015\n+   Free Software Foundation, Inc.\n+   Contributed by Yoshinori Sato <ysato@users.sourceforge.jp>\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_H8300_LINUX_H\n+#define GCC_H8300_LINUX_H\n+\n+#define TARGET_OS_CPP_BUILTINS() \\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      GNU_USER_TARGET_OS_CPP_BUILTINS();\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n+#undef LINK_SPEC\n+#define LINK_SPEC \"%{mh:-mh8300helf_linux} %{ms:-m h8300self_linux} %{msx:-m h8300sxelf_linux}\"\n+\n+#undef TARGET_DEFAULT\n+#define TARGET_DEFAULT (MASK_QUICKCALL | MASK_INT32 | MASK_H8300H)\n+\n+/* Width of a word, in units (bytes).  */\n+#undef DOUBLE_TYPE_SIZE\n+#define DOUBLE_TYPE_SIZE\t64\n+\n+#undef DEFAULT_SIGNED_CHAR\n+#define DEFAULT_SIGNED_CHAR 1\n+\n+#undef USER_LABEL_PREFIX\n+\n+#define H8300_LINUX\n+\n+#endif /* ! GCC_H8300_LINUX_H */"}, {"sha": "11237ea99f7f7b17f30faadaeb55053387fa8c77", "filename": "gcc/config/h8300/t-linux", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig%2Fh8300%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/gcc%2Fconfig%2Fh8300%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Ft-linux?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -0,0 +1,20 @@\n+# Copyright (C) 2015 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+MULTILIB_OPTIONS = ms/msx\n+MULTILIB_DIRNAMES = h8300s h8sx"}, {"sha": "c48a61cbe37551cee44803cd725228e9cc927e08", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -1,3 +1,10 @@\n+2015-04-27  Yoshinori Sato  <ysato@users.sourceforge.jp>\n+\n+\t* config.host: Add h8300-*-linux\n+\t* config/h8300/t-linux: New file.\n+\t* config/h8300/lib1funs.s: Change symbol prefix.\n+\t* config/h8300/sfp-machine.h: 64bit double support.\n+\n 2015-04-22  Gregor Richards  <gregor.richards@uwaterloo.ca>\n \t    Szabolcs Nagy  <szabolcs.nagy@arm.com>\n "}, {"sha": "570998feffab60cc4b600fe851f32fdbc74c8354", "filename": "libgcc/config.host", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -487,6 +487,10 @@ h8300-*-elf*)\n \ttm_file=\"$tm_file h8300/h8300-lib.h\"\n \textra_parts=\"$extra_parts crti.o crtn.o\"\n \t;;\n+h8300-*-linux*)\n+\ttmake_file=\"t-linux h8300/t-linux t-softfp-sfdf t-softfp\"\n+\ttm_file=\"$tm_file h8300/h8300-lib.h\"\n+\t;;\n hppa*64*-*-linux*)\n \ttmake_file=\"$tmake_file pa/t-linux pa/t-linux64\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtbeginT.o crtend.o crtendS.o\""}, {"sha": "24a74a93373e2e2b51cb28716e3c1b402751b2ac", "filename": "libgcc/config/h8300/lib1funcs.S", "status": "modified", "additions": 43, "deletions": 37, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/libgcc%2Fconfig%2Fh8300%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/libgcc%2Fconfig%2Fh8300%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fh8300%2Flib1funcs.S?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -84,6 +84,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define A3E\te3\n #endif\n \n+#define CONCAT(A,B)     A##B\n+#define LABEL0(U,X)    CONCAT(U,__##X)\n+#define LABEL0_DEF(U,X)    CONCAT(U,__##X##:)\n+#define LABEL_DEF(X)       LABEL0_DEF(__USER_LABEL_PREFIX__,X)\n+#define LABEL(X)       LABEL0(__USER_LABEL_PREFIX__,X)\n+\n #ifdef __H8300H__\n #ifdef __NORMAL_MODE__\n \t.h8300hn\n@@ -111,8 +117,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #ifdef __H8300__\n \t.section .text\n \t.align 2\n-\t.global ___cmpsi2\n-___cmpsi2:\n+\t.global LABEL(cmpsi2)\n+LABEL_DEF(cmpsi2)\n \tcmp.w\tA0,A2\n \tbne\t.L2\n \tcmp.w\tA1,A3\n@@ -137,8 +143,8 @@ ___cmpsi2:\n #ifdef __H8300__\n \t.section .text\n \t.align 2\n-\t.global ___ucmpsi2\n-___ucmpsi2:\n+\t.global LABEL(ucmpsi2)\n+LABEL_DEF(ucmpsi2)\n \tcmp.w\tA0,A2\n \tbne\t.L2\n \tcmp.w\tA1,A3\n@@ -207,10 +213,10 @@ _lab8:\trts\n \n ; A0=A0/A1 signed\n \n-\t.global\t___divhi3\n-___divhi3:\n+\t.global\tLABEL(divhi3)\n+LABEL_DEF(divhi3)\n \tbsr\tdivnorm\n-\tbsr\t___udivhi3\n+\tbsr\tLABEL(udivhi3)\n negans:\tbtst\t#3,A2L\t; should answer be negative ?\n \tbeq\t_lab4\n \tnot\tA0H\t; yes, so make it so\n@@ -220,18 +226,18 @@ _lab4:\trts\n \n ; A0=A0%A1 signed\n \n-\t.global\t___modhi3\n-___modhi3:\n+\t.global\tLABEL(modhi3)\n+LABEL_DEF(modhi3)\n \tbsr\tmodnorm\n-\tbsr\t___udivhi3\n+\tbsr\tLABEL(udivhi3)\n \tmov\tA3,A0\n \tbra\tnegans\n \n ; A0=A0%A1 unsigned\n \n-\t.global\t___umodhi3\n-___umodhi3:\n-\tbsr\t___udivhi3\n+\t.global\tLABEL(umodhi3)\n+LABEL_DEF(umodhi3)\n+\tbsr\tLABEL(udivhi3)\n \tmov\tA3,A0\n \trts\n \n@@ -251,8 +257,8 @@ ___umodhi3:\n ; The H8/300 only has a 16/8 bit divide, so we look at the incoming and\n ; see how to partition up the expression.\n \n-\t.global\t___udivhi3\n-___udivhi3:\n+\t.global\tLABEL(udivhi3)\n+LABEL_DEF(udivhi3)\n \t\t\t\t; A0 A1 A2 A3\n \t\t\t\t; Nn Dd       P\n \tsub.w\tA3,A3\t\t; Nn Dd xP 00\n@@ -418,8 +424,8 @@ mpostive2:\n \n ; numerator in A0/A1\n ; denominator in A2/A3\n-\t.global\t___modsi3\n-___modsi3:\n+\t.global\tLABEL(modsi3)\n+LABEL_DEF(modsi3)\n #ifdef __H8300__\n \tPUSHP\tS2P\n \tPUSHP\tS0P\n@@ -432,25 +438,25 @@ ___modsi3:\n #else\n \tPUSHP\tS2P\n \tbsr\tmodnorm\n-\tbsr\t___udivsi3\n+\tbsr\tLABEL(divsi3)\n \tmov.l\ter3,er0\n \tbra\texitdiv\n #endif\n \n \t;; H8/300H and H8S version of ___udivsi3 is defined later in\n \t;; the file.\n #ifdef __H8300__\n-\t.global\t___udivsi3\n-___udivsi3:\n+\t.global\tLABEL(udivsi3)\n+LABEL_DEF(udivsi3)\n \tPUSHP\tS2P\n \tPUSHP\tS0P\n \tPUSHP\tS1P\n \tbsr\tdivmodsi4\n \tbra\treti\n #endif\n \n-\t.global\t___umodsi3\n-___umodsi3:\n+\t.global\tLABEL(umodsi3)\n+LABEL_DEF(umodsi3)\n #ifdef __H8300__\n \tPUSHP\tS2P\n \tPUSHP\tS0P\n@@ -460,13 +466,13 @@ ___umodsi3:\n \tmov\tS1,A1\n \tbra\treti\n #else\n-\tbsr\t___udivsi3\n+\tbsr\tLABEL(udivsi3)\n \tmov.l\ter3,er0\n \trts\n #endif\n \n-\t.global\t___divsi3\n-___divsi3:\n+\t.global\tLABEL(divsi3)\n+LABEL_DEF(divsi3)\n #ifdef __H8300__\n \tPUSHP\tS2P\n \tPUSHP\tS0P\n@@ -476,7 +482,7 @@ ___divsi3:\n #else\n \tPUSHP\tS2P\n \tjsr\tdivnorm\n-\tbsr\t___udivsi3\n+\tbsr\tLABEL(udivsi3)\n #endif\n \n \t; examine what the sign should be\n@@ -591,8 +597,8 @@ setone:\n #else /* __H8300H__ */\n \n \t;; This function also computes the remainder and stores it in er3.\n-\t.global\t___udivsi3\n-___udivsi3:\n+\t.global\tLABEL(udivsi3)\n+LABEL_DEF(udivsi3)\n \tmov.w\tA1E,A1E\t\t; denominator top word 0?\n \tbne\tDenHighNonZero\n \n@@ -681,8 +687,8 @@ divmod_L26:\n #ifdef __H8300__\n \t.section .text\n \t.align 2\n-\t.global\t___mulhi3\n-___mulhi3:\n+\t.global\tLABEL(mulhi3)\n+LABEL_DEF(mulhi3)\n \tmov.b\tA1L,A2L\t\t; A2l gets srcb.l\n \tmulxu\tA0L,A2\t\t; A2 gets first sub product\n \n@@ -726,8 +732,8 @@ ___mulhi3:\n \n #ifdef __H8300__\n \n-\t.global\t___mulsi3\n-___mulsi3:\n+\t.global\tLABEL(mulsi3)\n+LABEL_DEF(mulsi3)\n \tPUSHP\tS0P\n \tPUSHP\tS1P\n \n@@ -785,8 +791,8 @@ _done:\n ; 32b * 32b =  92 states\n ;\n \n-\t.global\t___mulsi3\n-___mulsi3:\n+\t.global LABEL(mulsi3)\n+LABEL_DEF(mulsi3)\n \tmov.w\tr1,r2   ; ( 2 states) b * d\n \tmulxu\tr0,er2  ; (22 states)\n \n@@ -814,11 +820,11 @@ L_skip2:\n #ifdef __H8300__\n /* We still treat NANs different than libgcc2.c, but then, the\n    behavior is undefined anyways.  */\n-\t.global\t___fixunssfsi\n-___fixunssfsi:\n+\t.global LABEL(fixunssfsi)\n+LABEL_DEF(fixunssfsi)\n \tcmp.b #0x4f,r0h\n \tbge Large_num\n-\tjmp     @___fixsfsi\n+\tjmp     @LABEL(fixsfsi)\n Large_num:\n \tbhi L_huge_num\n \txor.b #0x80,A0L"}, {"sha": "6a4f97553aecdfc300014332fb7a2b8e660cf7e8", "filename": "libgcc/config/h8300/sfp-machine.h", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/libgcc%2Fconfig%2Fh8300%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/libgcc%2Fconfig%2Fh8300%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fh8300%2Fsfp-machine.h?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -0,0 +1,76 @@\n+/* Soft-FP definitions for H8/300\n+   Copyright (C) 2015 Free Software Foundation, Inc.\n+\n+This file is free software; you can redistribute it and/or modify it\n+under the terms of the GNU General Public License as published by the\n+Free Software Foundation; either version 3, or (at your option) any\n+later version.\n+\n+This file is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#define _FP_W_TYPE_SIZE\t\t32\n+#define _FP_W_TYPE\t\tunsigned long\n+#define _FP_WS_TYPE\t\tsigned long\n+#define _FP_I_TYPE\t\tlong\n+\n+#define _FP_MUL_MEAT_S(R,X,Y)\t\t\t\t\\\n+  _FP_MUL_MEAT_1_wide(_FP_WFRACBITS_S,R,X,Y,umul_ppmm)\n+#define _FP_MUL_MEAT_D(R,X,Y)\t\t\t\t\\\n+  _FP_MUL_MEAT_2_wide(_FP_WFRACBITS_D,R,X,Y,umul_ppmm)\n+#define _FP_MUL_MEAT_Q(R,X,Y)\t\t\t\t\\\n+  _FP_MUL_MEAT_4_wide(_FP_WFRACBITS_Q,R,X,Y,umul_ppmm)\n+\n+#define _FP_DIV_MEAT_S(R,X,Y)\t_FP_DIV_MEAT_1_loop(S,R,X,Y)\n+#define _FP_DIV_MEAT_D(R,X,Y)\t_FP_DIV_MEAT_2_udiv(D,R,X,Y)\n+#define _FP_DIV_MEAT_Q(R,X,Y)\t_FP_DIV_MEAT_4_udiv(Q,R,X,Y)\n+\n+#define _FP_NANFRAC_S\t\t((_FP_QNANBIT_S << 1) - 1)\n+#define _FP_NANFRAC_D\t\t((_FP_QNANBIT_D << 1) - 1), -1\n+#define _FP_NANFRAC_Q\t\t((_FP_QNANBIT_Q << 1) - 1), -1, -1, -1\n+#define _FP_NANSIGN_S\t\t0\n+#define _FP_NANSIGN_D\t\t0\n+#define _FP_NANSIGN_Q\t\t0\n+\n+#define _FP_KEEPNANFRACP 1\n+#define _FP_QNANNEGATEDP 0\n+\n+/* Someone please check this.  */\n+#define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\\\n+    if ((_FP_FRAC_HIGH_RAW_##fs(X) & _FP_QNANBIT_##fs)\t\t\\\n+\t&& !(_FP_FRAC_HIGH_RAW_##fs(Y) & _FP_QNANBIT_##fs))\t\\\n+      {\t\t\t\t\t\t\t\t\\\n+\tR##_s = Y##_s;\t\t\t\t\t\t\\\n+\t_FP_FRAC_COPY_##wc(R,Y);\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\\\n+\tR##_s = X##_s;\t\t\t\t\t\t\\\n+\t_FP_FRAC_COPY_##wc(R,X);\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\\\n+    R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n+  } while (0)\n+\n+/* Not checked.  */\n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n+#define\t__BIG_ENDIAN\t4321\n+\n+#define __BYTE_ORDER __BIG_ENDIAN\n+\n+/* Define ALIASNAME as a strong alias for NAME.  */\n+# define strong_alias(name, aliasname) _strong_alias(name, aliasname)\n+# define _strong_alias(name, aliasname) \\\n+  extern __typeof (name) aliasname __attribute__ ((alias (#name)));"}, {"sha": "a575e755a8af3d3bcaa5a762df4263be5c67506d", "filename": "libgcc/config/h8300/t-linux", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6bd6eb67a11faef36ab3420cf6783de15e4760/libgcc%2Fconfig%2Fh8300%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6bd6eb67a11faef36ab3420cf6783de15e4760/libgcc%2Fconfig%2Fh8300%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fh8300%2Ft-linux?ref=2f6bd6eb67a11faef36ab3420cf6783de15e4760", "patch": "@@ -0,0 +1,10 @@\n+LIB1ASMSRC = h8300/lib1funcs.S\n+LIB1ASMFUNCS = _cmpsi2 _ucmpsi2 _divhi3 _divsi3 _mulhi3 _mulsi3 \\\n+  _fixunssfsi_asm\n+\n+LIB2ADD += \\\n+\t$(srcdir)/config/h8300/clzhi2.c \\\n+\t$(srcdir)/config/h8300/ctzhi2.c \\\n+\t$(srcdir)/config/h8300/parityhi2.c \\\n+\t$(srcdir)/config/h8300/popcounthi2.c \\\n+\t$(srcdir)/config/h8300/fixunssfsi.c"}]}