{"sha": "11c7bfe6737c940cc35c87ff35e4cd18897f20d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFjN2JmZTY3MzdjOTQwY2MzNWM4N2ZmMzVlNGNkMTg4OTdmMjBkOA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2016-01-20T19:39:08Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2016-01-20T19:39:08Z"}, "message": "re PR target/68609 (PowerPC reciprocal estimate missed opportunities)\n\n\tPR target/68609\n        * config/rs6000/rs6000.c (rs6000_emit_swsqrt): Add vector sqrt\n        domain check.\n        * config/rs6000/vector.md (sqrt<mode>2): Call rs6000_emit_swsqrt\n        for V4SFmode.\n\nFrom-SVN: r232632", "tree": {"sha": "81b01f670cd495b1beb1406013ac7fe4e6fb2f14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81b01f670cd495b1beb1406013ac7fe4e6fb2f14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11c7bfe6737c940cc35c87ff35e4cd18897f20d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c7bfe6737c940cc35c87ff35e4cd18897f20d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11c7bfe6737c940cc35c87ff35e4cd18897f20d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11c7bfe6737c940cc35c87ff35e4cd18897f20d8/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1de98e3d9e015c9260f44a8474001d822a0304d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1de98e3d9e015c9260f44a8474001d822a0304d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1de98e3d9e015c9260f44a8474001d822a0304d"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "ee05d4966950463319496622843b8dfc3cd4f68f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c7bfe6737c940cc35c87ff35e4cd18897f20d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c7bfe6737c940cc35c87ff35e4cd18897f20d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11c7bfe6737c940cc35c87ff35e4cd18897f20d8", "patch": "@@ -1,3 +1,11 @@\n+2016-01-20  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\tPR target/68609\n+\t* config/rs6000/rs6000.c (rs6000_emit_swsqrt): Add vector sqrt\n+\tdomain check.\n+\t* config/rs6000/vector.md (sqrt<mode>2): Call rs6000_emit_swsqrt\n+\tfor V4SFmode.\n+\n 2016-01-20  Richard Henderson  <rth@redhat.com>\n \n \tPR bootstrap/69343\n@@ -43,7 +51,7 @@\n \t(pc_or_label_operand): New predicate.\n \t* config/m68k/m68k.md: Add new peephole2 patterns for GTU/LEU\n \ttests for small integers that are 2^n - 1.\n-\t\n+\n 2016-01-20  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/invoke.texi (Options Summary): Add '.' after @xref."}, {"sha": "539446ce45ff58d875c082c2778fa1a78826fbb5", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c7bfe6737c940cc35c87ff35e4cd18897f20d8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c7bfe6737c940cc35c87ff35e4cd18897f20d8/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=11c7bfe6737c940cc35c87ff35e4cd18897f20d8", "patch": "@@ -32904,10 +32904,19 @@ rs6000_emit_swsqrt (rtx dst, rtx src, bool recip)\n   if (!recip)\n     {\n       rtx zero = force_reg (mode, CONST0_RTX (mode));\n-      rtx target = emit_conditional_move (e, GT, src, zero, mode,\n-\t\t\t\t\t  e, zero, mode, 0);\n-      if (target != e)\n-\temit_move_insn (e, target);\n+\n+      if (mode == SFmode)\n+\t{\n+\t  rtx target = emit_conditional_move (e, GT, src, zero, mode,\n+\t\t\t\t\t      e, zero, mode, 0);\n+\t  if (target != e)\n+\t    emit_move_insn (e, target);\n+\t}\n+      else\n+\t{\n+\t  rtx cond = gen_rtx_GT (VOIDmode, e, zero);\n+\t  rs6000_emit_vector_cond_expr (e, e, zero, cond, src, zero);\n+\t}\n     }\n \n   /* g = sqrt estimate.  */"}, {"sha": "02fb3e3d12fc94b2e9acf6eeedd4db6d32abd55d", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11c7bfe6737c940cc35c87ff35e4cd18897f20d8/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11c7bfe6737c940cc35c87ff35e4cd18897f20d8/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=11c7bfe6737c940cc35c87ff35e4cd18897f20d8", "patch": "@@ -270,7 +270,16 @@\n   [(set (match_operand:VEC_F 0 \"vfloat_operand\" \"\")\n \t(sqrt:VEC_F (match_operand:VEC_F 1 \"vfloat_operand\" \"\")))]\n   \"VECTOR_UNIT_VSX_P (<MODE>mode)\"\n-  \"\")\n+{\n+  if (<MODE>mode == V4SFmode\n+      && !optimize_function_for_size_p (cfun)\n+      && flag_finite_math_only && !flag_trapping_math\n+      && flag_unsafe_math_optimizations)\n+    {\n+      rs6000_emit_swsqrt (operands[0], operands[1], 0);\n+      DONE;\n+    }\n+})\n \n (define_expand \"rsqrte<mode>2\"\n   [(set (match_operand:VEC_F 0 \"vfloat_operand\" \"\")"}]}