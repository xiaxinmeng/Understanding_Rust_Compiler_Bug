{"sha": "8c417c25d4d936c1036e8ae6696282752f1ef462", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM0MTdjMjVkNGQ5MzZjMTAzNmU4YWU2Njk2MjgyNzUyZjFlZjQ2Mg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2000-02-11T10:01:03Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-02-11T10:01:03Z"}, "message": "* pa.c, pa.h: Remove trigraph sequences within comments.\n\nFrom-SVN: r31914", "tree": {"sha": "731144b0d8c5c6bc97af734e6c2e09991a256743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/731144b0d8c5c6bc97af734e6c2e09991a256743"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c417c25d4d936c1036e8ae6696282752f1ef462", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c417c25d4d936c1036e8ae6696282752f1ef462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c417c25d4d936c1036e8ae6696282752f1ef462", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c417c25d4d936c1036e8ae6696282752f1ef462/comments", "author": null, "committer": null, "parents": [{"sha": "d77b4575283a31b02a3c9d64e107a99b9a931b8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d77b4575283a31b02a3c9d64e107a99b9a931b8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d77b4575283a31b02a3c9d64e107a99b9a931b8b"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "3219a5a4d70a85b9040a777be1a88ff816b00126", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c417c25d4d936c1036e8ae6696282752f1ef462/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c417c25d4d936c1036e8ae6696282752f1ef462/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c417c25d4d936c1036e8ae6696282752f1ef462", "patch": "@@ -1,3 +1,7 @@\n+Fri Feb 11 02:59:05 2000  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* pa.c, pa.h: Remove trigraph sequences within comments.\n+\n Fri Feb 11 02:51:56 2000  Pavel Roskin <pavel_roskin@geocities.com>\n \n \t* invoke.texi (PPC Options): -mno-new-mnenomics -> -mold-mnemonics."}, {"sha": "294124a6b973d438461d065ee67a7e9f41362e60", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c417c25d4d936c1036e8ae6696282752f1ef462/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c417c25d4d936c1036e8ae6696282752f1ef462/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=8c417c25d4d936c1036e8ae6696282752f1ef462", "patch": "@@ -206,7 +206,7 @@ reg_or_0_operand (op, mode)\n /* Return non-zero if OP is suitable for use in a call to a named\n    function.\n \n-   (???) For 2.5 try to eliminate either call_operand_address or\n+   For 2.5 try to eliminate either call_operand_address or\n    function_label_operand, they perform very similar functions.  */\n int\n call_operand_address (op, mode)\n@@ -1278,7 +1278,7 @@ emit_move_sequence (operands, mode, scratch_reg)\n \n      use scratch_reg to hold the address of the memory location.\n \n-     ??? The proper fix is to change PREFERRED_RELOAD_CLASS to return\n+     The proper fix is to change PREFERRED_RELOAD_CLASS to return\n      NO_REGS when presented with a const_int and an register class\n      containing only FP registers.  Doing so unfortunately creates\n      more problems than it solves.   Fix this for 2.5.  */\n@@ -4489,7 +4489,7 @@ hppa_va_arg (valist, type)\n       t = build (PLUS_EXPR, TREE_TYPE (valist), valist,\n \t\t build_int_2 (-size, -1));\n \n-      /* ??? Copied from va-pa.h, but we probably don't need to align\n+      /* Copied from va-pa.h, but we probably don't need to align\n \t to word size, since we generate and preserve that invariant.  */\n       t = build (BIT_AND_EXPR, TREE_TYPE (valist), t,\n \t\t build_int_2 ((size > 4 ? -8 : -4), -1));"}, {"sha": "f74a3177ab2c8d6b95da91c561a7df58c06733ed", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c417c25d4d936c1036e8ae6696282752f1ef462/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c417c25d4d936c1036e8ae6696282752f1ef462/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=8c417c25d4d936c1036e8ae6696282752f1ef462", "patch": "@@ -429,7 +429,7 @@ extern int target_flags;\n    Reg 20-22\t= Temporary Registers\n    Reg 23-26\t= Temporary/Parameter Registers\n    Reg 27\t= Global Data Pointer (hp)\n-   Reg 28\t= Temporary/???/Return Value register\n+   Reg 28\t= Temporary/Return Value register\n    Reg 29\t= Temporary/Static Chain/Return Value register #2\n    Reg 30\t= stack pointer\n    Reg 31\t= Temporary/Millicode Return Pointer (hp)\n@@ -609,7 +609,6 @@ extern int target_flags;\n #define ARG_POINTER_REGNUM 3\n \n /* Register in which static-chain is passed to a function.  */\n-/* ??? */\n #define STATIC_CHAIN_REGNUM 29\n \n /* Register which holds offset table for position-independent\n@@ -812,9 +811,7 @@ enum reg_class { NO_REGS, R1_REGS, GENERAL_REGS, FPUPPER_REGS, FP_REGS, GENERAL_\n    Also note that on STACK_GROWS_UPWARD machines (such as this one)\n    this is the distance from the frame pointer to the end of the first\n    argument, not it's beginning.  To get the real offset of the first\n-   argument, the size of the argument must be added.\n-\n-   ??? Have to check on this.*/\n+   argument, the size of the argument must be added.  */\n \n #define FIRST_PARM_OFFSET(FNDECL) -32\n "}]}