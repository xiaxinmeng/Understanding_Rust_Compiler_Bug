{"sha": "8055904e9e9e65241c9eeeca2e6b227f38f63b56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA1NTkwNGU5ZTllNjUyNDFjOWVlZWNhMmU2YjIyN2YzOGY2M2I1Ng==", "commit": {"author": {"name": "Julia Koval", "email": "julia.koval@intel.com", "date": "2017-06-08T11:24:50Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2017-06-08T11:24:50Z"}, "message": "[PR73350][PR80862] Improve subst for RC-capable insns.\n\nPR target/73350,80862\ngcc/\n\t* config/i386/subst.md (round): Fix round pattern.\n\t* config/i386/i386.c (ix86_erase_embedded_rounding):\n\tFix erasing rounding for the fixed pattern.\n\ngcc/testsuite/\n\t* gcc.target/i386/pr73350.c: New test.\n\nFrom-SVN: r249009", "tree": {"sha": "9c9f519e816f6404fd8426ef4195e0e733ce2570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c9f519e816f6404fd8426ef4195e0e733ce2570"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8055904e9e9e65241c9eeeca2e6b227f38f63b56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8055904e9e9e65241c9eeeca2e6b227f38f63b56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8055904e9e9e65241c9eeeca2e6b227f38f63b56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8055904e9e9e65241c9eeeca2e6b227f38f63b56/comments", "author": {"login": "vaalfreja", "id": 5216345, "node_id": "MDQ6VXNlcjUyMTYzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5216345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaalfreja", "html_url": "https://github.com/vaalfreja", "followers_url": "https://api.github.com/users/vaalfreja/followers", "following_url": "https://api.github.com/users/vaalfreja/following{/other_user}", "gists_url": "https://api.github.com/users/vaalfreja/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaalfreja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaalfreja/subscriptions", "organizations_url": "https://api.github.com/users/vaalfreja/orgs", "repos_url": "https://api.github.com/users/vaalfreja/repos", "events_url": "https://api.github.com/users/vaalfreja/events{/privacy}", "received_events_url": "https://api.github.com/users/vaalfreja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1972030cf1452d8578f367a5c716a6586bc46efb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1972030cf1452d8578f367a5c716a6586bc46efb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1972030cf1452d8578f367a5c716a6586bc46efb"}], "stats": {"total": 106, "additions": 74, "deletions": 32}, "files": [{"sha": "461c06b362302e6964f1f6afa08ec7035137b5db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8055904e9e9e65241c9eeeca2e6b227f38f63b56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8055904e9e9e65241c9eeeca2e6b227f38f63b56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8055904e9e9e65241c9eeeca2e6b227f38f63b56", "patch": "@@ -1,3 +1,10 @@\n+2017-08-08  Julia Koval  <julia.koval@intel.com>\n+\n+\tPR target/73350,80862\n+\t* config/i386/subst.md (round): Fix round pattern.\n+\t* config/i386/i386.c (ix86_erase_embedded_rounding):\n+\tFix erasing rounding for the fixed pattern.\n+\n 2017-06-08  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* cfgbuild.c (find_many_sub_basic_blocks): Fix thinko."}, {"sha": "94265b0b471b3c5f3e99cae2933bc055e6c9ae49", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 37, "deletions": 27, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8055904e9e9e65241c9eeeca2e6b227f38f63b56/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8055904e9e9e65241c9eeeca2e6b227f38f63b56/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8055904e9e9e65241c9eeeca2e6b227f38f63b56", "patch": "@@ -36460,38 +36460,48 @@ ix86_erase_embedded_rounding (rtx pat)\n   if (GET_CODE (pat) == INSN)\n     pat = PATTERN (pat);\n \n-  gcc_assert (GET_CODE (pat) == PARALLEL);\n+  if (GET_CODE (pat) == PARALLEL)\n+  {\n+    if (XVECLEN (pat, 0) == 2)\n+      {\n+\trtx p0 = XVECEXP (pat, 0, 0);\n+\trtx p1 = XVECEXP (pat, 0, 1);\n+\tgcc_assert (GET_CODE (p0) == SET\n+\t\t    && GET_CODE (p1) == UNSPEC\n+\t\t    && XINT (p1, 1) == UNSPEC_EMBEDDED_ROUNDING);\n+\treturn p0;\n+      }\n+    else\n+      {\n+\trtx *res = XALLOCAVEC (rtx, XVECLEN (pat, 0));\n+\tint i = 0;\n+\tint j = 0;\n \n-  if (XVECLEN (pat, 0) == 2)\n-    {\n-      rtx p0 = XVECEXP (pat, 0, 0);\n-      rtx p1 = XVECEXP (pat, 0, 1);\n+\tfor (; i < XVECLEN (pat, 0); ++i)\n+\t  {\n+\t    rtx elem = XVECEXP (pat, 0, i);\n+\t    if (GET_CODE (elem) != UNSPEC\n+\t\t|| XINT (elem, 1) != UNSPEC_EMBEDDED_ROUNDING)\n+\t      res[j++] = elem;\n+\t  }\n \n-      gcc_assert (GET_CODE (p0) == SET\n-\t\t  && GET_CODE (p1) == UNSPEC\n-\t\t  && XINT (p1, 1) == UNSPEC_EMBEDDED_ROUNDING);\n+\t/*  No more than 1 occurence was removed.  */\n+\tgcc_assert (j >= XVECLEN (pat, 0) - 1);\n \n-      return p0;\n+\treturn gen_rtx_PARALLEL (GET_MODE (pat), gen_rtvec_v (j, res));\n     }\n+  }\n   else\n-    {\n-      rtx *res = XALLOCAVEC (rtx, XVECLEN (pat, 0));\n-      int i = 0;\n-      int j = 0;\n-\n-      for (; i < XVECLEN (pat, 0); ++i)\n-\t{\n-\t  rtx elem = XVECEXP (pat, 0, i);\n-\t  if (GET_CODE (elem) != UNSPEC\n-\t      || XINT (elem, 1) != UNSPEC_EMBEDDED_ROUNDING)\n-\t    res [j++] = elem;\n-\t}\n-\n-      /*  No more than 1 occurence was removed.  */\n-      gcc_assert (j >= XVECLEN (pat, 0) - 1);\n-\n-      return gen_rtx_PARALLEL (GET_MODE (pat), gen_rtvec_v (j, res));\n-    }\n+  {\n+    gcc_assert (GET_CODE (pat) == SET);\n+    rtx src = SET_SRC (pat);\n+    gcc_assert (XVECLEN (src, 0) == 2);\n+    rtx p0 = XVECEXP (src, 0, 0);\n+    gcc_assert (GET_CODE (src) == UNSPEC\n+\t\t&& XINT (src, 1) == UNSPEC_EMBEDDED_ROUNDING);\n+    rtx res = gen_rtx_SET (SET_DEST (pat), p0);\n+    return res;\n+  }\n }\n \n /* Subroutine of ix86_expand_round_builtin to take care of comi insns"}, {"sha": "57fb0d471a4a23f479b2a4ede9db0cd99baa7671", "filename": "gcc/config/i386/subst.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8055904e9e9e65241c9eeeca2e6b227f38f63b56/gcc%2Fconfig%2Fi386%2Fsubst.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8055904e9e9e65241c9eeeca2e6b227f38f63b56/gcc%2Fconfig%2Fi386%2Fsubst.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsubst.md?ref=8055904e9e9e65241c9eeeca2e6b227f38f63b56", "patch": "@@ -137,12 +137,13 @@\n \n (define_subst \"round\"\n   [(set (match_operand:SUBST_A 0)\n-        (match_operand:SUBST_A 1))]\n+\t(match_operand:SUBST_A 1))]\n   \"TARGET_AVX512F\"\n-  [(parallel[\n-     (set (match_dup 0)\n-          (match_dup 1))\n-     (unspec [(match_operand:SI 2 \"const_4_or_8_to_11_operand\")] UNSPEC_EMBEDDED_ROUNDING)])])\n+  [(set (match_dup 0)\n+\t(unspec:SUBST_A [(match_dup 1)\n+\t  (match_operand:SI 2 \"const_4_or_8_to_11_operand\")]\n+\t  UNSPEC_EMBEDDED_ROUNDING))\n+])\n \n (define_subst_attr \"round_saeonly_name\" \"round_saeonly\" \"\" \"_round\")\n (define_subst_attr \"round_saeonly_mask_operand2\" \"mask\" \"%r2\" \"%r4\")"}, {"sha": "677b7d1d67c902b26499d7171a075a97f4a6a6b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8055904e9e9e65241c9eeeca2e6b227f38f63b56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8055904e9e9e65241c9eeeca2e6b227f38f63b56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8055904e9e9e65241c9eeeca2e6b227f38f63b56", "patch": "@@ -1,3 +1,8 @@\n+2017-08-08  Julia Koval  <julia.koval@intel.com>\n+\n+\tPR target/73350,80862\n+\t* gcc.target/i386/pr73350.c: New test.\n+\n 2017-06-08  Tamar Christina  <tamar.christina@arm.com>\n \n \t* gcc.target/aarch64/builtin-fpclassify.c: New codegen test."}, {"sha": "62f6cd42386cb4c519257aaff761b77418f82ea0", "filename": "gcc/testsuite/gcc.target/i386/pr73350.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8055904e9e9e65241c9eeeca2e6b227f38f63b56/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr73350.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8055904e9e9e65241c9eeeca2e6b227f38f63b56/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr73350.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr73350.c?ref=8055904e9e9e65241c9eeeca2e6b227f38f63b56", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512f\" } */\n+/* { dg-require-effective-target avx512f } */\n+#include <math.h>\n+#define AVX512F\n+#include \"avx512f-helper.h\"\n+\n+void\n+TEST (void)\n+{\n+  __m512 a = _mm512_set1_ps ((float) M_PI);\n+  __m512 b = _mm512_set1_ps ((float) 1.f);\n+\n+  __m512 result1 = _mm512_add_round_ps (a, b, (_MM_FROUND_TO_NEG_INF | _MM_FROUND_NO_EXC));\n+  __m512 result2 = _mm512_add_round_ps (a, b, (_MM_FROUND_TO_POS_INF | _MM_FROUND_NO_EXC));\n+   \n+  if (result1[0] == result2[0])\n+    abort ();\n+}"}]}