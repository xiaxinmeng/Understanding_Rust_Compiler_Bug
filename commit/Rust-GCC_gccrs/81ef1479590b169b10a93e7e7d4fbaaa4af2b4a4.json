{"sha": "81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFlZjE0Nzk1OTBiMTY5YjEwYTkzZTdlN2Q0ZmJhYWE0YWYyYjRhNA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@purist.soma.redhat.com", "date": "2000-06-24T00:56:05Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-06-24T00:56:05Z"}, "message": "fstream.tcc (basic_filebuf::basic_filebuf(fd)): Use it.\n\n\n2000-06-23  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\t* bits/fstream.tcc (basic_filebuf::basic_filebuf(fd)): Use it.\n\t(basic_filebuf::close): Use it.\n\t* bits/std_fstream.h (basic_filebuf): Remove default arguments for\n\tfilebuf ctor.\n\t(basic_filebuf): Add _M_fileno_based data member.\n        As reported by brent verner <brent@rcfile.org>\n\t* testsuite/27_io/filebuf_members.cc: New file.\n\t* testsuite/27_io/filebuf_members-1.tst: New file.\n\nFrom-SVN: r34673", "tree": {"sha": "044ed12489b8af79bffd077aac05489f86e05cd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/044ed12489b8af79bffd077aac05489f86e05cd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4/comments", "author": null, "committer": null, "parents": [{"sha": "ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba5fbc87e3cdefde1e6b814f2834d31d43c4f58f"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "1b2831260b223cf37b8f2740e425a250f86f8ca5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4", "patch": "@@ -1,5 +1,14 @@\n 2000-06-23  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n+\t* bits/fstream.tcc (basic_filebuf::basic_filebuf(fd)): Use it.\n+\t(basic_filebuf::close): Use it.\n+\t* bits/std_fstream.h (basic_filebuf): Remove default arguments for\n+\tfilebuf ctor.\n+\t(basic_filebuf): Add _M_fileno_based data member.\n+        As reported by brent verner <brent@rcfile.org> \n+\t* testsuite/27_io/filebuf_members.cc: New file.\n+\t* testsuite/27_io/filebuf_members-1.tst: New file.\n+\n \t* bits/std_fstream.h: Formatting tweaks.\n \t* testsuite/27_io/ofstream_members.cc: New file.\n \t* testsuite/27_io/ofstream_members-1.tst: New file."}, {"sha": "d5a5e97eff0248e9771fb3631f680f5a688191c4", "filename": "libstdc++-v3/bits/fstream.tcc", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc?ref=81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4", "patch": "@@ -55,19 +55,20 @@ namespace std\n   template<typename _CharT, typename _Traits>\n     basic_filebuf<_CharT, _Traits>::\n     basic_filebuf() \n-    : __streambuf_type(), _M_file(NULL), _M_last_overflowed(false), \n-    _M_state_cur(), _M_state_beg() \n+    : __streambuf_type(), _M_file(NULL), _M_state_cur(), _M_state_beg(), \n+    _M_last_overflowed(false), _M_fileno_based(false)\n     { _M_fcvt = &use_facet<__codecvt_type>(this->getloc()); }\n \n \n   template<typename _CharT, typename _Traits>\n     basic_filebuf<_CharT, _Traits>::\n     basic_filebuf(int __fd, const char* /*__name*/, ios_base::openmode __mode)\n-    : __streambuf_type(), _M_last_overflowed(false),\n-    _M_state_cur(), _M_state_beg()\n+    : __streambuf_type(), _M_state_cur(), _M_state_beg(),\n+    _M_last_overflowed(false)\n     {\n       _M_fcvt = &use_facet<__codecvt_type>(this->getloc());\n       _M_init_filebuf();\n+      _M_fileno_based = true;\n       _M_file->sys_open(__fd, __mode);\n       if (this->is_open() && _M_buf_size)\n \t{\n@@ -142,8 +143,14 @@ namespace std\n \t      _M_really_overflow(traits_type::eof());\n \t    }\n #endif\n-\t  \n-\t  if (_M_file->close())\n+\n+\t  bool __testclosed;\n+\t  if (_M_fileno_based)\n+\t    __testclosed = _M_file->sys_close();\n+\t  else\n+\t    __testclosed = _M_file->close();\n+\n+\t  if (__testclosed)\n \t    {\n \t      _M_mode = ios_base::openmode(0);\n \t      if (_M_buf_size)"}, {"sha": "063f1df50ee8484281126288d3430f70fbb0fbb4", "filename": "libstdc++-v3/bits/std_fstream.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h?ref=81ef1479590b169b10a93e7e7d4fbaaa4af2b4a4", "patch": "@@ -66,19 +66,19 @@ namespace std {\n     private:\n       // Data Members:\n       __file_type* \t\t_M_file;\n-      bool\t\t\t_M_last_overflowed;  // XXX Needed?\n       __state_type\t\t_M_state_cur;// Current state type for codecvt.\n       __state_type \t\t_M_state_beg; \t\n       const __codecvt_type*\t_M_fcvt;       // Cached value from use_facet.\n       __mutext_type           \t_M_lock;\n-\n+      bool\t\t\t_M_last_overflowed;  // XXX Needed?\n+      bool\t\t\t_M_fileno_based; // Open/closed via filenos.\n+ \n     public:\n       // Constructors/destructor:\n       basic_filebuf();\n \n       // Non-standard ctor:\n-      basic_filebuf(int __fd, const char* __name = \"unknown\", \n-\t\t    ios_base::openmode __mode = ios_base::in | ios_base::out);\n+      basic_filebuf(int __fd, const char* __name, ios_base::openmode __mode);\n \n       virtual \n       ~basic_filebuf() "}]}