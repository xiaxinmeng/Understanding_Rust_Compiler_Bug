{"sha": "89a4fa682e358203c7babc65e313388275934cef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODlhNGZhNjgyZTM1ODIwM2M3YmFiYzY1ZTMxMzM4ODI3NTkzNGNlZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2018-01-11T08:50:08Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-01-11T08:50:08Z"}, "message": "einfo.ads, einfo.adb (Activation_Record_Component, [...]): Allow E_Discriminant.\n\n2018-01-11  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* einfo.ads, einfo.adb (Activation_Record_Component,\n\tSet_Activation_Record_Component, Set_Is_Uplevel_Referenced_Entity):\n\tAllow E_Discriminant.\n\nFrom-SVN: r256481", "tree": {"sha": "a2df2881457632c8ad3efca84a466b6d151cad5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2df2881457632c8ad3efca84a466b6d151cad5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89a4fa682e358203c7babc65e313388275934cef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89a4fa682e358203c7babc65e313388275934cef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89a4fa682e358203c7babc65e313388275934cef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89a4fa682e358203c7babc65e313388275934cef/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29c02e655dca7391afb7f2cbfab7c7bcb68361ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29c02e655dca7391afb7f2cbfab7c7bcb68361ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29c02e655dca7391afb7f2cbfab7c7bcb68361ac"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "c1697e34a0e8e3febdfe5faf14a164ca64143fb6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89a4fa682e358203c7babc65e313388275934cef/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89a4fa682e358203c7babc65e313388275934cef/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=89a4fa682e358203c7babc65e313388275934cef", "patch": "@@ -1,3 +1,9 @@\n+2018-01-11  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Activation_Record_Component,\n+\tSet_Activation_Record_Component, Set_Is_Uplevel_Referenced_Entity):\n+\tAllow E_Discriminant.\n+\n 2018-01-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_component_type): Apply the check"}, {"sha": "ae37b5e6857331101b166392754fb167c9d2ff87", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89a4fa682e358203c7babc65e313388275934cef/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89a4fa682e358203c7babc65e313388275934cef/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=89a4fa682e358203c7babc65e313388275934cef", "patch": "@@ -742,6 +742,7 @@ package body Einfo is\n    function Activation_Record_Component (Id : E) return E is\n    begin\n       pragma Assert (Ekind_In (Id, E_Constant,\n+                                   E_Discriminant,\n                                    E_In_Parameter,\n                                    E_In_Out_Parameter,\n                                    E_Loop_Parameter,\n@@ -3932,6 +3933,7 @@ package body Einfo is\n    procedure Set_Activation_Record_Component (Id : E; V : E) is\n    begin\n       pragma Assert (Ekind_In (Id, E_Constant,\n+                                   E_Discriminant,\n                                    E_In_Parameter,\n                                    E_In_Out_Parameter,\n                                    E_Loop_Parameter,\n@@ -5925,7 +5927,7 @@ package body Einfo is\n    procedure Set_Is_Uplevel_Referenced_Entity (Id : E; V : B := True) is\n    begin\n       pragma Assert\n-        (Ekind_In (Id, E_Constant, E_Variable)\n+        (Ekind_In (Id, E_Constant, E_Variable, E_Discriminant)\n           or else Is_Formal (Id)\n           or else Is_Type (Id));\n       Set_Flag283 (Id, V);"}, {"sha": "e0c7fcfff8df8e35d48e2919997c5dbfad9640f5", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89a4fa682e358203c7babc65e313388275934cef/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89a4fa682e358203c7babc65e313388275934cef/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=89a4fa682e358203c7babc65e313388275934cef", "patch": "@@ -364,11 +364,12 @@ package Einfo is\n --       the IP routine to avoid performing this elaboration twice.\n \n --    Activation_Record_Component (Node31)\n---       Defined in E_Variable, E_Constant, E_Loop_Parameter, E_In_Parameter,\n---       E_Out_Parameter, E_In_Out_Parameter nodes. Used only if we are in\n---       Opt.Unnest_Subprogram_Mode, in which case for the case of an uplevel\n---       referenced entity, this field contains the entity for the component\n---       in the generated ARECnT activation record (Exp_Unst for details).\n+--       Defined in E_Variable, E_Constant, E_Discriminant, E_Loop_Parameter,\n+--       E_In_Parameter, E_Out_Parameter, E_In_Out_Parameter nodes. Used only\n+--       if we are in Opt.Unnest_Subprogram_Mode, in which case for the case of\n+--       an uplevel referenced entity, this field contains the entity for the\n+--       component in the generated ARECnT activation record (Exp_Unst for\n+--       details).\n \n --    Actual_Subtype (Node17)\n --       Defined in variables, constants, and formal parameters. This is the\n@@ -3317,11 +3318,12 @@ package Einfo is\n --       Defined in all entities. Used when unnesting subprograms to indicate\n --       that an entity is locally defined within a subprogram P, and there is\n --       a reference to the entity within a subprogram nested within P (at any\n---       depth). Set for uplevel referenced objects (variables, constants and\n---       loop parameters), and also for upreferenced dynamic types, including\n---       the cases where the reference is implicit (e.g. the type of an array\n---       used for computing the location of an element in an array. This is\n---       used internally in Exp_Unst, see this package for further details.\n+--       depth). Set for uplevel referenced objects (variables, constants,\n+--       discriminants and loop parameters), and also for upreferenced dynamic\n+--       types, including the cases where the reference is implicit (e.g. the\n+--       type of an array used for computing the location of an element in an\n+--       array. This is used internally in Exp_Unst, see this package for\n+--       further details.\n \n --    Is_Valued_Procedure (Flag127)\n --       Defined in procedure entities. Set if an Import_Valued_Procedure"}]}