{"sha": "bfb69968c361d3e08f6a639fd881ced492bd0356", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZiNjk5NjhjMzYxZDNlMDhmNmE2MzlmZDg4MWNlZDQ5MmJkMDM1Ng==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2009-04-16T18:42:29Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2009-04-16T18:42:29Z"}, "message": "except.c (eh_region_outer_p): Remove.\n\n\t* except.c (eh_region_outer_p): Remove.\n\t* except.h: Remove the prototype for eh_region_outer_p.\n\nFrom-SVN: r146210", "tree": {"sha": "74d1f368531306bb5ffca00395613c6954e77bd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74d1f368531306bb5ffca00395613c6954e77bd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfb69968c361d3e08f6a639fd881ced492bd0356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb69968c361d3e08f6a639fd881ced492bd0356", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfb69968c361d3e08f6a639fd881ced492bd0356", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb69968c361d3e08f6a639fd881ced492bd0356/comments", "author": null, "committer": null, "parents": [{"sha": "c7db7fa5ace050cbc83e047e34805769318bd423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7db7fa5ace050cbc83e047e34805769318bd423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7db7fa5ace050cbc83e047e34805769318bd423"}], "stats": {"total": 32, "additions": 5, "deletions": 27}, "files": [{"sha": "1cf6ab3867c1396eeedbe2809f2e9d4edfb00f0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfb69968c361d3e08f6a639fd881ced492bd0356/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfb69968c361d3e08f6a639fd881ced492bd0356/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bfb69968c361d3e08f6a639fd881ced492bd0356", "patch": "@@ -1,3 +1,8 @@\n+2009-04-16  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* except.c (eh_region_outer_p): Remove.\n+\t* except.h: Remove the prototype for eh_region_outer_p.\n+\n 2009-04-16  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* function.c (current_function_assembler_name): Remove."}, {"sha": "ac3fd6f274245e14ad8df936fffce6b16a7cef45", "filename": "gcc/except.c", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfb69968c361d3e08f6a639fd881ced492bd0356/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfb69968c361d3e08f6a639fd881ced492bd0356/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=bfb69968c361d3e08f6a639fd881ced492bd0356", "patch": "@@ -1224,32 +1224,6 @@ duplicate_eh_regions (struct function *ifun, duplicate_eh_regions_map map,\n   return eh_offset;\n }\n \n-/* Return true if REGION_A is outer to REGION_B in IFUN.  */\n-\n-bool\n-eh_region_outer_p (struct function *ifun, int region_a, int region_b)\n-{\n-  struct eh_region *rp_a, *rp_b;\n-\n-  gcc_assert (ifun->eh->last_region_number > 0);\n-  gcc_assert (ifun->eh->region_tree);\n-\n-  rp_a = VEC_index (eh_region, ifun->eh->region_array, region_a);\n-  rp_b = VEC_index (eh_region, ifun->eh->region_array, region_b);\n-  gcc_assert (rp_a != NULL);\n-  gcc_assert (rp_b != NULL);\n-\n-  do\n-    {\n-      if (rp_a == rp_b)\n-\treturn true;\n-      rp_b = rp_b->outer;\n-    }\n-  while (rp_b);\n-\n-  return false;\n-}\n-\n /* Return region number of region that is outer to both if REGION_A and\n    REGION_B in IFUN.  */\n "}, {"sha": "21145fd4f752ad99463a066ecbd8232804828fec", "filename": "gcc/except.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfb69968c361d3e08f6a639fd881ced492bd0356/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfb69968c361d3e08f6a639fd881ced492bd0356/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=bfb69968c361d3e08f6a639fd881ced492bd0356", "patch": "@@ -108,7 +108,6 @@ extern void collect_eh_region_array (void);\n extern void expand_resx_expr (tree);\n extern void verify_eh_tree (struct function *);\n extern void dump_eh_tree (FILE *, struct function *);\n-extern bool eh_region_outer_p (struct function *, int, int);\n extern int eh_region_outermost (struct function *, int, int);\n \n /* If non-NULL, this is a function that returns an expression to be"}]}