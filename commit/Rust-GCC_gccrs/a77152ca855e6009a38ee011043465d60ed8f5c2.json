{"sha": "a77152ca855e6009a38ee011043465d60ed8f5c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc3MTUyY2E4NTVlNjAwOWEzOGVlMDExMDQzNDY1ZDYwZWQ4ZjVjMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-23T11:57:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-23T11:57:27Z"}, "message": "[multiple changes]\n\n2017-01-23  Yannick Moy  <moy@adacore.com>\n\n\t* frontend.adb (Frontend): Do not load runtime\n\tunit for GNATprove when parsing failed.\n\t* exp_ch9.adb: minor removal of extra whitespace\n\t* exp_ch6.adb: minor typo in comment\n\t* sem_util.adb: Code cleanup.\n\t* exp_ch9.ads, par-ch2.adb: minor style fixes in whitespace and comment\n\t* a-ngcefu.adb: minor style fix in whitespace\n\n2017-01-23  Thomas Quinot  <quinot@adacore.com>\n\n\t* scos.ads: Document usage of 'd' as default SCO kind for\n\tdeclarations.\n\t* par_sco.adb (Traverse_Declarations_Or_Statements.\n\tTraverse_Degenerate_Subprogram): New supporting routine for expression\n\tfunctions and null procedures.\n\t(Traverse_Declarations_Or_Statements.Traverse_One): Add\n\tN_Expression_Function to the subprogram case; add required\n\tsupport for null procedures and expression functions.\n\n2017-01-23  Bob Duff  <duff@adacore.com>\n\n\t* namet.ads (Bounded_String): Decrease the size of type\n\tBounded_String to avoid running out of stack space.\n\t* namet.ads (Append): Don't ignore buffer overflow; raise\n\tProgram_Error instead.\n\nFrom-SVN: r244789", "tree": {"sha": "7a999150817148c9dce5567eadcda89f817965fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a999150817148c9dce5567eadcda89f817965fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a77152ca855e6009a38ee011043465d60ed8f5c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a77152ca855e6009a38ee011043465d60ed8f5c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a77152ca855e6009a38ee011043465d60ed8f5c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a77152ca855e6009a38ee011043465d60ed8f5c2/comments", "author": null, "committer": null, "parents": [{"sha": "d43584ca123f03c24aa7e59a43ecf2bd3a6e4863", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43584ca123f03c24aa7e59a43ecf2bd3a6e4863", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d43584ca123f03c24aa7e59a43ecf2bd3a6e4863"}], "stats": {"total": 257, "additions": 175, "deletions": 82}, "files": [{"sha": "df86a3a6717e9d74e5c316166ee7aa1f2bae2f5c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -1,3 +1,31 @@\n+2017-01-23  Yannick Moy  <moy@adacore.com>\n+\n+\t* frontend.adb (Frontend): Do not load runtime\n+\tunit for GNATprove when parsing failed.\n+\t* exp_ch9.adb: minor removal of extra whitespace\n+\t* exp_ch6.adb: minor typo in comment\n+\t* sem_util.adb: Code cleanup.\n+\t* exp_ch9.ads, par-ch2.adb: minor style fixes in whitespace and comment\n+\t* a-ngcefu.adb: minor style fix in whitespace\n+\n+2017-01-23  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* scos.ads: Document usage of 'd' as default SCO kind for\n+\tdeclarations.\n+\t* par_sco.adb (Traverse_Declarations_Or_Statements.\n+\tTraverse_Degenerate_Subprogram): New supporting routine for expression\n+\tfunctions and null procedures.\n+\t(Traverse_Declarations_Or_Statements.Traverse_One): Add\n+\tN_Expression_Function to the subprogram case; add required\n+\tsupport for null procedures and expression functions.\n+\n+2017-01-23  Bob Duff  <duff@adacore.com>\n+\n+\t* namet.ads (Bounded_String): Decrease the size of type\n+\tBounded_String to avoid running out of stack space.\n+\t* namet.ads (Append): Don't ignore buffer overflow; raise\n+\tProgram_Error instead.\n+\n 2017-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch5.adb, freeze.adb, par-ch4.adb, scng.adb, sem_ch13.adb,"}, {"sha": "b241f2718a0c98caf18a7183955ef84296fb11b7", "filename": "gcc/ada/a-ngcefu.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fa-ngcefu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fa-ngcefu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcefu.adb?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,10 +37,10 @@ package body Ada.Numerics.Generic_Complex_Elementary_Functions is\n       Ada.Numerics.Generic_Elementary_Functions (Real'Base);\n    use Elementary_Functions;\n \n-   PI      : constant := 3.14159_26535_89793_23846_26433_83279_50288_41971;\n-   PI_2    : constant := PI / 2.0;\n+   PI       : constant := 3.14159_26535_89793_23846_26433_83279_50288_41971;\n+   PI_2     : constant := PI / 2.0;\n    Sqrt_Two : constant := 1.41421_35623_73095_04880_16887_24209_69807_85696;\n-   Log_Two : constant := 0.69314_71805_59945_30941_72321_21458_17656_80755;\n+   Log_Two  : constant := 0.69314_71805_59945_30941_72321_21458_17656_80755;\n \n    subtype T is Real'Base;\n "}, {"sha": "a6579c28e3946d33c640c05afb19e2933aa847d9", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -6073,7 +6073,7 @@ package body Exp_Ch6 is\n       --  Exp_Ch9.Build_Simple_Entry_Call. The call is intra-object only if the\n       --  subprogram being called is in the protected body being compiled, and\n       --  if the protected object in the call is statically the enclosing type.\n-      --  The object may be an component of some other data structure, in which\n+      --  The object may be a component of some other data structure, in which\n       --  case this must be handled as an inter-object call.\n \n       if not In_Open_Scopes (Scop)"}, {"sha": "38f36f9de6b1a759ca1e29de19174465ecc9f78f", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 53, "deletions": 53, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -688,11 +688,11 @@ package body Exp_Ch9 is\n       --  The name of the formal that holds the address of the parameter block\n       --  for the call.\n \n-      Comp            : Entity_Id;\n-      Decl            : Node_Id;\n-      Formal          : Entity_Id;\n-      New_F           : Entity_Id;\n-      Renamed_Formal  : Node_Id;\n+      Comp           : Entity_Id;\n+      Decl           : Node_Id;\n+      Formal         : Entity_Id;\n+      New_F          : Entity_Id;\n+      Renamed_Formal : Node_Id;\n \n    begin\n       Formal := First_Formal (Ent);\n@@ -2117,7 +2117,7 @@ package body Exp_Ch9 is\n                Iface_Op_Param := Next (Iface_Op_Param);\n             end if;\n \n-            Wrapper_Param  := First (Wrapper_Params);\n+            Wrapper_Param := First (Wrapper_Params);\n             while Present (Iface_Op_Param)\n               and then Present (Wrapper_Param)\n             loop\n@@ -2599,7 +2599,7 @@ package body Exp_Ch9 is\n       ------------------------------\n \n       function Convert_Discriminant_Ref (Bound : Node_Id) return Node_Id is\n-         B   : Node_Id;\n+         B : Node_Id;\n \n       begin\n          if Is_Entity_Name (Bound)\n@@ -3888,22 +3888,22 @@ package body Exp_Ch9 is\n       Pid       : Node_Id;\n       N_Op_Spec : Node_Id) return Node_Id\n    is\n-      Loc          : constant Source_Ptr := Sloc (N);\n-      Op_Spec      : Node_Id;\n-      P_Op_Spec    : Node_Id;\n-      Uactuals     : List_Id;\n-      Pformal      : Node_Id;\n-      Unprot_Call  : Node_Id;\n-      Sub_Body     : Node_Id;\n-      Lock_Name    : Node_Id;\n-      Lock_Stmt    : Node_Id;\n-      R            : Node_Id;\n-      Return_Stmt  : Node_Id := Empty;    -- init to avoid gcc 3 warning\n-      Pre_Stmts    : List_Id := No_List;  -- init to avoid gcc 3 warning\n-      Stmts        : List_Id;\n-      Object_Parm  : Node_Id;\n-      Exc_Safe     : Boolean;\n-      Lock_Kind    : RE_Id;\n+      Loc         : constant Source_Ptr := Sloc (N);\n+      Op_Spec     : Node_Id;\n+      P_Op_Spec   : Node_Id;\n+      Uactuals    : List_Id;\n+      Pformal     : Node_Id;\n+      Unprot_Call : Node_Id;\n+      Sub_Body    : Node_Id;\n+      Lock_Name   : Node_Id;\n+      Lock_Stmt   : Node_Id;\n+      R           : Node_Id;\n+      Return_Stmt : Node_Id := Empty;    -- init to avoid gcc 3 warning\n+      Pre_Stmts   : List_Id := No_List;  -- init to avoid gcc 3 warning\n+      Stmts       : List_Id;\n+      Object_Parm : Node_Id;\n+      Exc_Safe    : Boolean;\n+      Lock_Kind   : RE_Id;\n \n    begin\n       Op_Spec := Specification (N);\n@@ -4143,12 +4143,12 @@ package body Exp_Ch9 is\n    ---------------------------------------------\n \n    procedure Build_Protected_Subprogram_Call_Cleanup\n-     (Op_Spec   : Node_Id;\n-      Conc_Typ  : Node_Id;\n-      Loc       : Source_Ptr;\n-      Stmts     : List_Id)\n+     (Op_Spec  : Node_Id;\n+      Conc_Typ : Node_Id;\n+      Loc      : Source_Ptr;\n+      Stmts    : List_Id)\n    is\n-      Nam       : Node_Id;\n+      Nam : Node_Id;\n \n    begin\n       --  If the associated protected object has entries, a protected\n@@ -4892,7 +4892,7 @@ package body Exp_Ch9 is\n           Identifier   => New_Occurrence_Of (Blkent, Loc),\n           Declarations => New_List (\n \n-            --  _Chain  : Activation_Chain;\n+            --  _Chain : Activation_Chain;\n \n             Make_Object_Declaration (Loc,\n               Defining_Identifier => Chain,\n@@ -4962,7 +4962,7 @@ package body Exp_Ch9 is\n           Identifier => New_Occurrence_Of (Blkent, Loc),\n           Declarations => New_List (\n \n-            --  _Chain  : Activation_Chain;\n+            --  _Chain : Activation_Chain;\n \n             Make_Object_Declaration (Loc,\n               Defining_Identifier => Chain,\n@@ -8630,7 +8630,7 @@ package body Exp_Ch9 is\n    --    type poV (discriminants) is record\n    --      _Object       : aliased <kind>Protection\n    --         [(<entry count> [, <handler count>])];\n-   --      [entry_family  : array (bounds) of Void;]\n+   --      [entry_family : array (bounds) of Void;]\n    --      <private data fields>\n    --    end record;\n \n@@ -8938,17 +8938,17 @@ package body Exp_Ch9 is\n \n       --  Local variables\n \n-      Body_Arr     : Node_Id;\n-      Body_Id      : Entity_Id;\n-      Cdecls       : List_Id;\n-      Comp         : Node_Id;\n-      Expr         : Node_Id;\n-      New_Priv     : Node_Id;\n-      Obj_Def      : Node_Id;\n-      Object_Comp  : Node_Id;\n-      Priv         : Node_Id;\n-      Rec_Decl     : Node_Id;\n-      Sub          : Node_Id;\n+      Body_Arr    : Node_Id;\n+      Body_Id     : Entity_Id;\n+      Cdecls      : List_Id;\n+      Comp        : Node_Id;\n+      Expr        : Node_Id;\n+      New_Priv    : Node_Id;\n+      Obj_Def     : Node_Id;\n+      Object_Comp : Node_Id;\n+      Priv        : Node_Id;\n+      Rec_Decl    : Node_Id;\n+      Sub         : Node_Id;\n \n    --  Start of processing for Expand_N_Protected_Type_Declaration\n \n@@ -13690,17 +13690,17 @@ package body Exp_Ch9 is\n    function Make_Initialize_Protection\n      (Protect_Rec : Entity_Id) return List_Id\n    is\n-      Loc         : constant Source_Ptr := Sloc (Protect_Rec);\n-      P_Arr       : Entity_Id;\n-      Pdec        : Node_Id;\n-      Ptyp        : constant Node_Id    :=\n-                      Corresponding_Concurrent_Type (Protect_Rec);\n-      Args        : List_Id;\n-      L           : constant List_Id    := New_List;\n-      Has_Entry   : constant Boolean    := Has_Entries (Ptyp);\n-      Prio_Type   : Entity_Id;\n-      Prio_Var    : Entity_Id           := Empty;\n-      Restricted  : constant Boolean    := Restricted_Profile;\n+      Loc        : constant Source_Ptr := Sloc (Protect_Rec);\n+      P_Arr      : Entity_Id;\n+      Pdec       : Node_Id;\n+      Ptyp       : constant Node_Id    :=\n+                     Corresponding_Concurrent_Type (Protect_Rec);\n+      Args       : List_Id;\n+      L          : constant List_Id    := New_List;\n+      Has_Entry  : constant Boolean    := Has_Entries (Ptyp);\n+      Prio_Type  : Entity_Id;\n+      Prio_Var   : Entity_Id           := Empty;\n+      Restricted : constant Boolean    := Restricted_Profile;\n \n    begin\n       --  We may need two calls to properly initialize the object, one to"}, {"sha": "60fc056132c9aa896abba20fa288926a5a77b4fa", "filename": "gcc/ada/exp_ch9.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fexp_ch9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fexp_ch9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.ads?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -273,7 +273,7 @@ package Exp_Ch9 is\n    --  is the entity for the corresponding protected type declaration.\n \n    function External_Subprogram (E : Entity_Id) return Entity_Id;\n-   --  return the external version of a protected operation, which locks\n+   --  Return the external version of a protected operation, which locks\n    --  the object before invoking the internal protected subprogram body.\n \n    function Find_Master_Scope (E : Entity_Id) return Entity_Id;"}, {"sha": "42d91d6c4adceb5335e5064b168a7a6b125ad389", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -463,9 +463,12 @@ begin\n       end if;\n    end if;\n \n-   --  In GNATprove mode, force the loading of a few RTE units\n+   --  In GNATprove mode, force the loading of a few RTE units. This step is\n+   --  skipped if we had a fatal error during parsing.\n \n-   if GNATprove_Mode then\n+   if GNATprove_Mode\n+     and then Fatal_Error (Main_Unit) /= Error_Detected\n+   then\n       declare\n          Unused : Entity_Id;\n "}, {"sha": "5bea77d93e28744d39cf3340395ace555668b84e", "filename": "gcc/ada/namet.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fnamet.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fnamet.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.adb?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -115,10 +115,12 @@ package body Namet is\n \n    procedure Append (Buf : in out Bounded_String; C : Character) is\n    begin\n-      if Buf.Length < Buf.Chars'Last then\n-         Buf.Length := Buf.Length + 1;\n-         Buf.Chars (Buf.Length) := C;\n+      if Buf.Length >= Buf.Chars'Last then\n+         raise Program_Error;\n       end if;\n+\n+      Buf.Length := Buf.Length + 1;\n+      Buf.Chars (Buf.Length) := C;\n    end Append;\n \n    procedure Append (Buf : in out Bounded_String; V : Nat) is"}, {"sha": "8c1f124991b4df7fb45d4dd2d251f3a055638411", "filename": "gcc/ada/namet.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fnamet.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fnamet.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.ads?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -31,7 +31,6 @@\n \n with Alloc;\n with Table;\n-with Hostparm; use Hostparm;\n with System;   use System;\n with Types;    use Types;\n \n@@ -149,9 +148,9 @@ package Namet is\n --  and the Boolean field is initialized to False, when a new Name table entry\n --  is created.\n \n-   type Bounded_String (Max_Length : Natural := 4 * Max_Line_Length) is limited\n-   --  The default here is intended to be an infinite value that ensures that\n-   --  we never overflow the buffer (names this long are too absurd to worry).\n+   type Bounded_String (Max_Length : Natural := 2**12) is limited\n+   --  It's unlikely to have names longer than this. But we don't want to make\n+   --  it too big, because we declare these on the stack in recursive routines.\n    record\n       Length : Natural := 0;\n       Chars  : String (1 .. Max_Length);"}, {"sha": "16e3be731c115c678662cfa184a459fca6cef33a", "filename": "gcc/ada/par-ch2.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fpar-ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fpar-ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch2.adb?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -436,7 +436,7 @@ package body Ch2 is\n    --  Error recovery: Cannot raise Error_Resync\n \n    procedure P_Pragmas_Opt (List : List_Id) is\n-      P     : Node_Id;\n+      P : Node_Id;\n \n    begin\n       while Token = Tok_Pragma loop"}, {"sha": "ceed72c8c105d823bf8a97049419b2163d3d7fea", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 72, "deletions": 3, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -1440,7 +1440,10 @@ package body Par_SCO is\n       --  This routine is logically the same as Process_Decisions, except that\n       --  the arguments are saved in the SD table for later processing when\n       --  Set_Statement_Entry is called, which goes through the saved entries\n-      --  making the corresponding calls to Process_Decision.\n+      --  making the corresponding calls to Process_Decision. Note: the\n+      --  enclosing statement must have already been added to the current\n+      --  statement sequence, so that nested decisions are properly\n+      --  identified as such.\n \n       procedure Process_Decisions_Defer (L : List_Id; T : Character);\n       pragma Inline (Process_Decisions_Defer);\n@@ -1457,6 +1460,10 @@ package body Par_SCO is\n       procedure Traverse_Aspects (N : Node_Id);\n       --  Helper for Traverse_One: traverse N's aspect specifications\n \n+      procedure Traverse_Degenerate_Subprogram (N : Node_Id);\n+      --  Common code to handle null procedures and expression functions.\n+      --  Emit a SCO of the given Kind and N outside of the dominance flow.\n+\n       -------------------------------\n       -- Extend_Statement_Sequence --\n       -------------------------------\n@@ -1514,6 +1521,9 @@ package body Par_SCO is\n                   To_Node := Defining_Identifier (N);\n                end if;\n \n+            when N_Subexpr =>\n+               To_Node := N;\n+\n             when others =>\n                null;\n          end case;\n@@ -1720,6 +1730,44 @@ package body Par_SCO is\n          end loop;\n       end Traverse_Aspects;\n \n+      ------------------------------------\n+      -- Traverse_Degenerate_Subprogram --\n+      ------------------------------------\n+\n+      procedure Traverse_Degenerate_Subprogram (N : Node_Id) is\n+      begin\n+         --  Complete current sequence of statements\n+\n+         Set_Statement_Entry;\n+\n+         declare\n+            Saved_Dominant : constant Dominant_Info := Current_Dominant;\n+            --  Save last statement in current sequence as dominant\n+\n+         begin\n+            --  Output statement SCO for degenerate subprogram body\n+            --  (null statement or freestanding expression) outside of\n+            --  the dominance chain.\n+\n+            Current_Dominant := No_Dominant;\n+            Extend_Statement_Sequence (N, Typ => ' ');\n+\n+            --  For the case of an expression-function, collect decisions\n+            --  embedded in the expression now.\n+\n+            if Nkind (N) in N_Subexpr then\n+               Process_Decisions_Defer (N, 'X');\n+            end if;\n+            Set_Statement_Entry;\n+\n+            --  Restore current dominant information designating last\n+            --  statement in previous sequence (i.e. make the dominance\n+            --  chain skip over the degenerate body).\n+\n+            Current_Dominant := Saved_Dominant;\n+         end;\n+      end Traverse_Degenerate_Subprogram;\n+\n       ------------------\n       -- Traverse_One --\n       ------------------\n@@ -1755,9 +1803,30 @@ package body Par_SCO is\n \n             when N_Subprogram_Body_Stub\n                | N_Subprogram_Declaration\n+               | N_Expression_Function\n             =>\n-               Process_Decisions_Defer\n-                 (Parameter_Specifications (Specification (N)), 'X');\n+               declare\n+                  Spec : constant Node_Id := Specification (N);\n+               begin\n+                  Process_Decisions_Defer\n+                    (Parameter_Specifications (Spec), 'X');\n+\n+                  --  Case of a null procedure: generate a NULL statement SCO\n+\n+                  if Nkind (N) = N_Subprogram_Declaration\n+                    and then Nkind (Spec) = N_Procedure_Specification\n+                    and then Null_Present (Spec)\n+                  then\n+                     Traverse_Degenerate_Subprogram (N);\n+\n+                  --  Case of an expression function: generate a statement\n+                  --  SCO for the expression (and then decision SCOs for any\n+                  --  nested decisions).\n+\n+                  elsif Nkind (N) = N_Expression_Function then\n+                     Traverse_Degenerate_Subprogram (Expression (N));\n+                  end if;\n+               end;\n \n             --  Entry declaration\n "}, {"sha": "412a45b258329795b43617302e2f7e9f3f360860", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -152,6 +152,7 @@ package SCOs is\n    --      o        object declaration\n    --      r        renaming declaration\n    --      i        generic instantiation\n+   --      d        any other kind of declaration\n    --      A        ACCEPT statement (from ACCEPT to end of parameter profile)\n    --      C        CASE statement (from CASE to end of expression)\n    --      E        EXIT statement"}, {"sha": "752a69b16e483e320e0919277ca80935166da06e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77152ca855e6009a38ee011043465d60ed8f5c2/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a77152ca855e6009a38ee011043465d60ed8f5c2", "patch": "@@ -9344,17 +9344,8 @@ package body Sem_Util is\n          --  The implicit case lacks all property pragmas\n \n          elsif No (AR) and then No (AW) and then No (ER) and then No (EW) then\n-\n-            --  A variable of a protected type only has the properties\n-            --  Async_Readers and Async_Writers. It cannot have Part_Of\n-            --  components (only protected objects can), hence it cannot\n-            --  inherit their properties Effective_Reads and Effective_Writes.\n-            --  (SPARK RM 7.1.2(16))\n-\n             if Is_Protected_Type (Etype (Item_Id)) then\n-               return\n-                 Property = Name_Async_Readers\n-                   or else Property = Name_Async_Writers;\n+               return Protected_Object_Has_Enabled_Property;\n             else\n                return True;\n             end if;"}]}