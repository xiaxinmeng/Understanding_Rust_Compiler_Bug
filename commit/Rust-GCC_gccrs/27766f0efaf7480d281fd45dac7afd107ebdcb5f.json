{"sha": "27766f0efaf7480d281fd45dac7afd107ebdcb5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc3NjZmMGVmYWY3NDgwZDI4MWZkNDVkYWM3YWZkMTA3ZWJkY2I1Zg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-01-20T17:02:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-20T17:02:10Z"}, "message": "Remove more bytecode stuff.\n\nFrom-SVN: r17436", "tree": {"sha": "095998f79a3dded1d5f2821cc8b533b1ab9975a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/095998f79a3dded1d5f2821cc8b533b1ab9975a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27766f0efaf7480d281fd45dac7afd107ebdcb5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27766f0efaf7480d281fd45dac7afd107ebdcb5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27766f0efaf7480d281fd45dac7afd107ebdcb5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27766f0efaf7480d281fd45dac7afd107ebdcb5f/comments", "author": null, "committer": null, "parents": [{"sha": "c9804136891b8770c62b71435dec014485bc7112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9804136891b8770c62b71435dec014485bc7112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9804136891b8770c62b71435dec014485bc7112"}], "stats": {"total": 37, "additions": 16, "deletions": 21}, "files": [{"sha": "d791f3ab4e793404d4d6d7f3e1684859930dd248", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27766f0efaf7480d281fd45dac7afd107ebdcb5f", "patch": "@@ -1,5 +1,10 @@\n Tue Jan 20 09:29:09 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* Makefile.in: Remove more bytecode stuff.\n+\t* expr.c, stmt.c, config/msdos/top.sed: Likewise.\n+\t* vax/xm-vms.h, winnt/config-nt.sed: Likewise.\n+\t* f/install.texi, objc/Make-lang.in: Likewise.\n+\n \t* Makefile.in: Remove all bytecode support.\n \t(OBJS): Make sure last entry is a real object file, not EXTRA_OBJS.\n \t* emit-rtl.c: Remove all bytecode support."}, {"sha": "f772a1a4eca9afbf989ce4ebace4c2abe900a03d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=27766f0efaf7480d281fd45dac7afd107ebdcb5f", "patch": "@@ -615,7 +615,6 @@ STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n  genconfig$(build_exeext) genpeep$(build_exeext) genattrtab$(build_exeext) \\\n  genattr$(build_exeext) genopinit$(build_exeext) \\\n  stamp-bcarity stamp-bcopcode stamp-bcopname \\\n- bi-arity$(build_exeext) bi-opcode$(build_exeext) bi-opname$(build_exeext) \\\n  xgcc$(exeext) cc1$(exeext) cpp$(exeext) $(EXTRA_PASSES) \\\n  $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) \\\n  $(CCCP)$(exeext) cc1obj$(exeext) enquire$(exeext) \\\n@@ -2579,8 +2578,8 @@ distdir: distdir-start lang.distdir distdir-finish\n # The -P option assumes this is GNU diff.\n diff:\n \tdiff -rc2P -x c-parse.y -x c-parse.c -x c-parse.h -x c-gperf.h \\\n-\t  -x cexp.c -x bi-parser.c -x objc-parse.y -x objc-parse.c \\\n-\t  -x bi-parser.h -x TAGS \\\n+\t  -x cexp.c -x objc-parse.y -x objc-parse.c \\\n+\t  -x TAGS \\\n \t  -x \"gcc.??\" -x \"gcc.??s\" -x gcc.aux -x \"gcc.info*\" \\\n \t  -x \"cpp.??\" -x \"cpp.??s\" -x cpp.aux -x \"cpp.info*\" \\\n \t  $(LANG_DIFF_EXCLUDES) \\"}, {"sha": "f123c9ab90a7d4484c167a4bdd950da327ef6b8a", "filename": "gcc/config/msdos/top.sed", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fconfig%2Fmsdos%2Ftop.sed", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fconfig%2Fmsdos%2Ftop.sed", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsdos%2Ftop.sed?ref=27766f0efaf7480d281fd45dac7afd107ebdcb5f", "patch": "@@ -19,9 +19,9 @@ host_xm_file=config/i386/xm-dos.h\n /^xmake_file=/ d\n /^tmake_file=/ d\n /^version=/ c\\\n-version=2.7.2\n+version=2.8.0\n /^mainversion=/ c\\\n-mainversion=2.7.2\n+mainversion=2.8.0\n s/CC = cc/CC = gcc/\n s/:\\$/: \\$/g\n s/^\t\\ *\\.\\//\t/\n@@ -48,7 +48,7 @@ s/; *@true//\n s/stamp-/s-/g\n s/tmp-/t-/g\n /> *s-objlist/ c\\\n-\techo.exe -o s-objlist $(addprefix ../,$(OBJS) $(BC_OBJS))\n+\techo.exe -o s-objlist $(addprefix ../,$(OBJS))\n /^OBJS.*s-objlist/ s?`cat ../s-objlist`?@../s-objlist?\n s/^\\(SUBDIR_OBSTACK *=\\).*$/\\1 ..\\/obstack.o/\n s/^\\(SUBDIR_USE_ALLOCA *=\\).*$/\\1/"}, {"sha": "104f5fe74d5b088a8881384b90c61c97aab5886c", "filename": "gcc/config/vax/xm-vms.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fconfig%2Fvax%2Fxm-vms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fconfig%2Fvax%2Fxm-vms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fxm-vms.h?ref=27766f0efaf7480d281fd45dac7afd107ebdcb5f", "patch": "@@ -143,7 +143,6 @@ Boston, MA 02111-1307, USA.  */\n \n /* use ANSI/SYSV style byte manipulation routines instead of BSD ones */\n /* rename all too-long external symbol names to avoid warnings */\n-#define bc_check_for_full_enumeration_handling\tbc_check_for_full_enum_handling\n #define check_for_full_enumeration_handling\tcheck_for_full_enum_handling\n #define current_function_contains_functions\tcurfunc_contains_functions\n #define current_function_epilogue_delay_list\tcurfunc_epilogue_delay_list"}, {"sha": "995158e224466b6188f12983ddb39cf7ff4a32d5", "filename": "gcc/config/winnt/config-nt.sed", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fconfig%2Fwinnt%2Fconfig-nt.sed", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fconfig%2Fwinnt%2Fconfig-nt.sed", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwinnt%2Fconfig-nt.sed?ref=27766f0efaf7480d281fd45dac7afd107ebdcb5f", "patch": "@@ -13,7 +13,7 @@ s/$(srcdir)\\/c-gperf/c-gperf/g\n /^lang_specs_files=/ d\n /^lang_options_files=/ d\n /^version=/ c\\\n-version=2.7.2\n+version=2.8.0\n s/CC = cc/CC = cl/\n s/^SHELL =.*/SHELL =/\n s/CFLAGS = -g/CFLAGS =/\n@@ -38,7 +38,7 @@ GCC_FOR_TARGET = xgcc\n ENQUIRE_LDFLAGS =\n s/; *@true//\n /> *stamp-objlist/ c\\\n-\techo.exe  $(OBJS) $(BC_OBJS) | sed -e \"s, \\([a-z]\\), ../\\1,g\" >stamp-objlist\n+\techo.exe  $(OBJS) | sed -e \"s, \\([a-z]\\), ../\\1,g\" >stamp-objlist\n /^OBJS.*stamp-objlist/ s?`cat ../stamp-objlist`?@../stamp-objlist?\n s/^\\(SUBDIR_OBSTACK *=\\).*$/\\1 ..\\/obstack.o/\n s/^\\(SUBDIR_USE_ALLOCA *=\\).*$/\\1/\n@@ -90,9 +90,6 @@ USE_HOST_ALLOCA=alloca.obj\n s/^ALLOCA =/ALLOCA = alloca.obj/\n s/^ALLOCA_FINISH = true/ALLOCA_FINISH =/\n s/\t\\.\\//\t/\n-s/^bi-\\([a-z]*\\) *:/bi-\\1.exe :/\n-s/ bi-\\([a-z]*\\)$/ bi-\\1.exe/\n-s/ bi-\\([a-z]*\\) / bi-\\1.exe /g\n s/^gen\\([a-z]*\\) *:/gen\\1.exe :/\n s/ gen\\([a-z]*\\)$/ gen\\1.exe/\n s/ gen\\([a-z]*\\) / gen\\1.exe /g"}, {"sha": "66bfda60b028d15c15641f6c0a61150d1cbf11b5", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=27766f0efaf7480d281fd45dac7afd107ebdcb5f", "patch": "@@ -147,10 +147,6 @@ struct clear_by_pieces\n   int reverse;\n };\n \n-/* Used to generate bytecodes: keep track of size of local variables,\n-   as well as depth of arithmetic stack. (Notice that variables are\n-   stored on the machine's stack, not the arithmetic stack.) */\n-\n static rtx get_push_address\tPROTO ((int));\n extern int local_vars_size;\n extern int stack_depth;"}, {"sha": "31730a1363f16260d1946599944a4fc563446e9c", "filename": "gcc/f/INSTALL", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Ff%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Ff%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FINSTALL?ref=27766f0efaf7480d281fd45dac7afd107ebdcb5f", "patch": "@@ -1453,7 +1453,7 @@ ensure that `bison' is not invoked by `make' during the build, type\n these commands:\n \n      sh# cd gcc\n-     sh# touch bi-parser.c bi-parser.h c-parse.c c-parse.h cexp.c\n+     sh# touch c-parse.c c-parse.h cexp.c\n      sh# touch cp/parse.c cp/parse.h objc-parse.c\n      sh#\n "}, {"sha": "bc0adcda2d780e49671a83b984f714b842490b92", "filename": "gcc/f/g77install.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Ff%2Fg77install.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Ff%2Fg77install.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77install.texi?ref=27766f0efaf7480d281fd45dac7afd107ebdcb5f", "patch": "@@ -1934,7 +1934,7 @@ type these commands:\n \n @example\n sh# @kbd{cd gcc}\n-sh# @kbd{touch bi-parser.c bi-parser.h c-parse.c c-parse.h cexp.c}\n+sh# @kbd{touch c-parse.c c-parse.h cexp.c}\n sh# @kbd{touch cp/parse.c cp/parse.h objc-parse.c}\n sh#\n @end example"}, {"sha": "4d91424e71ef8a61e823d1152b0d184aeeff6c10", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=27766f0efaf7480d281fd45dac7afd107ebdcb5f", "patch": "@@ -62,9 +62,9 @@ OBJC_THREAD_FILE=thr-$(GCC_THREAD_FILE)\n # Language-specific object files for Objective C.\n OBJC_OBJS = objc-parse.o objc-act.o $(C_AND_OBJC_OBJS)\n \n-cc1obj: $(P) $(OBJC_OBJS) $(OBJS) $(BC_OBJS) $(LIBDEPS)\n+cc1obj: $(P) $(OBJC_OBJS) $(OBJS) (LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(OBJC_OBJS) $(OBJS) \\\n-\t\t$(BC_OBJS) $(LIBS)\n+\t\t$(LIBS)\n \n # Objective C language specific files.\n "}, {"sha": "a1fa965fe9b9c9b700f9c655c8ed4226d79f12fe", "filename": "gcc/stmt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27766f0efaf7480d281fd45dac7afd107ebdcb5f/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=27766f0efaf7480d281fd45dac7afd107ebdcb5f", "patch": "@@ -268,7 +268,6 @@ struct nesting\n \t  struct label_chain *label_chain;\n \t  /* Number of function calls seen, as of start of this block.  */\n \t  int function_call_count;\n-\t  /* Bytecode specific: stack level to restore stack to on exit.  */\n \t  /* Nonzero if this is associated with a EH region.  */\n \t  int exception_region;\n \t  /* The saved target_temp_slot_level from our outer block."}]}