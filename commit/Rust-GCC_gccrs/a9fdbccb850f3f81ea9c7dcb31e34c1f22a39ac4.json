{"sha": "a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlmZGJjY2I4NTBmM2Y4MWVhOWM3ZGNiMzFlMzRjMWYyMmEzOWFjNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-26T10:35:52Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-26T10:35:52Z"}, "message": "[multiple changes]\n\n2015-10-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Formal_Package_Declaration): Do not set\n\tBox_Present when the formal part is (others => <>) even though\n\tit is equivalent to a formal part (<>), because ASIS tools depend\n\ton the syntactic setting of this flag.\n\n2015-10-26  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch13.adb: Minor reformatting.\n\t* einfo.ads: Minor typo.\n\n2015-10-26  Joel Brobecker  <brobecker@adacore.com brobecker>\n\n\t* adaint.c (__gnat_open_new_temp): Use mkstemp on Android.\n\nFrom-SVN: r229318", "tree": {"sha": "7956deed6960b44b0c07139d7420983b4e1e1b25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7956deed6960b44b0c07139d7420983b4e1e1b25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4/comments", "author": null, "committer": null, "parents": [{"sha": "f8ac2f077a4a36e3a7c54b289ef4a4ada15af357", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ac2f077a4a36e3a7c54b289ef4a4ada15af357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8ac2f077a4a36e3a7c54b289ef4a4ada15af357"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "1bb4fdc06fd4cc43dcf2f922be5d6f433204d54e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4", "patch": "@@ -1,3 +1,19 @@\n+2015-10-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Formal_Package_Declaration): Do not set\n+\tBox_Present when the formal part is (others => <>) even though\n+\tit is equivalent to a formal part (<>), because ASIS tools depend\n+\ton the syntactic setting of this flag.\n+\n+2015-10-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch13.adb: Minor reformatting.\n+\t* einfo.ads: Minor typo.\n+\n+2015-10-26  Joel Brobecker  <brobecker@adacore.com brobecker>\n+\n+\t* adaint.c (__gnat_open_new_temp): Use mkstemp on Android.\n+\n 2015-10-26  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb (Analyze_Formal_Package_Declaration): Code clean up."}, {"sha": "cb3e82cc8367ba8655118f66ea0387f0fe6c3f28", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4", "patch": "@@ -983,8 +983,8 @@ __gnat_open_new_temp (char *path, int fmode)\n   strcpy (path, \"GNAT-XXXXXX\");\n \n #if (defined (__FreeBSD__) || defined (__NetBSD__) || defined (__OpenBSD__) \\\n-  || defined (__linux__) || defined (__GLIBC__)) && !defined (__vxworks) \\\n-  || defined (__DragonFly__)\n+  || defined (__linux__) || defined (__GLIBC__) || defined (__ANDROID__) \\\n+  || defined (__DragonFly__)) && !defined (__vxworks)\n   return mkstemp (path);\n #elif defined (__Lynx__)\n   mktemp (path);"}, {"sha": "e2a236ad50888e4ccbd60f70efb4a94b0136c04f", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4", "patch": "@@ -3899,7 +3899,7 @@ package Einfo is\n --    Requires_Overriding (Flag213)\n --       Defined in all subprograms and entries. Set for subprograms that\n --       require overriding as defined by RM-2005-3.9.3(6/2). Note that this\n---       is True only for implicitly declare subprograms; it is not set on the\n+--       is True only for implicitly declared subprograms; it is not set on the\n --       parent type's subprogram. See also Is_Abstract_Subprogram.\n \n --    Return_Present (Flag54)"}, {"sha": "e3b6bf71276e47b24305fd09d041e7f55d953977", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=a9fdbccb850f3f81ea9c7dcb31e34c1f22a39ac4", "patch": "@@ -4014,8 +4014,7 @@ package body Sem_Ch13 is\n \n                else\n                   Illegal_Indexing\n-                    (\"indexing function already inherited \"\n-                     & \"from parent type\");\n+                    (\"indexing function already inherited from parent type\");\n                   Error_Msg_NE\n                     (\"!override & instead\",\n                      N, Entity (Expression (Inherited)));"}]}