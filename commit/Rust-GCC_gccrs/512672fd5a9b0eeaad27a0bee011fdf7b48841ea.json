{"sha": "512672fd5a9b0eeaad27a0bee011fdf7b48841ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEyNjcyZmQ1YTliMGVlYWFkMjdhMGJlZTAxMWZkZjdiNDg4NDFlYQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2001-11-09T20:00:50Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-11-09T20:00:50Z"}, "message": "pa.md (mulsi3): Remove PA64 hack to work around SUBREG issues.\n\n        * pa.md (mulsi3): Remove PA64 hack to work around SUBREG issues.\n        (muldi3): Update due to SUBREG_BYTE changes.\n        (casesi): Similarly.\n\nFrom-SVN: r46889", "tree": {"sha": "be3e69a697c104c7cb5752edea70fbe585d9b6c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be3e69a697c104c7cb5752edea70fbe585d9b6c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/512672fd5a9b0eeaad27a0bee011fdf7b48841ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512672fd5a9b0eeaad27a0bee011fdf7b48841ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/512672fd5a9b0eeaad27a0bee011fdf7b48841ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512672fd5a9b0eeaad27a0bee011fdf7b48841ea/comments", "author": null, "committer": null, "parents": [{"sha": "beda04276f74706581b73c2d3ac63f300868391b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beda04276f74706581b73c2d3ac63f300868391b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beda04276f74706581b73c2d3ac63f300868391b"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "73535812b0eb832af1976029a6e13c86033f152c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512672fd5a9b0eeaad27a0bee011fdf7b48841ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512672fd5a9b0eeaad27a0bee011fdf7b48841ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=512672fd5a9b0eeaad27a0bee011fdf7b48841ea", "patch": "@@ -1,3 +1,9 @@\n+Fri Nov  9 11:27:42 2001  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* pa.md (mulsi3): Remove PA64 hack to work around SUBREG issues.\n+\t(muldi3): Update due to SUBREG_BYTE changes.\n+\t(casesi): Similarly.\n+\n 2001-11-09  Zack Weinberg  <zack@codesourcery.com>\n \n \t* doc/invoke.texi: Remove comment referring to -xf77-version."}, {"sha": "f3757202afdb69dde02c2f68a243dc2b2742008d", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512672fd5a9b0eeaad27a0bee011fdf7b48841ea/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512672fd5a9b0eeaad27a0bee011fdf7b48841ea/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=512672fd5a9b0eeaad27a0bee011fdf7b48841ea", "patch": "@@ -3881,16 +3881,6 @@\n       operands[1] = force_reg (SImode, operands[1]);\n       operands[2] = force_reg (SImode, operands[2]);\n       emit_insn (gen_umulsidi3 (scratch, operands[1], operands[2]));\n-      /* We do not want (subreg:SI (XX:DI) 1)) for TARGET_64BIT since\n-\t that has no real meaning.  */\n-      if (TARGET_64BIT)\n-\t{\n-\t  emit_insn (gen_rtx_SET (VOIDmode,\n-\t\t\t\t  operands[0],\n-\t\t\t\t  gen_rtx_SUBREG (SImode, scratch, 0)));\n-\t  DONE;\n-\t  \n-\t}\n       emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n \t\t\t      gen_rtx_SUBREG (SImode, scratch, GET_MODE_SIZE (SImode))));\n       DONE;\n@@ -3993,10 +3983,10 @@\n \t\t\t\t\t\tGEN_INT (32)));\n   emit_move_insn (op2shifted, gen_rtx_LSHIFTRT (DImode, operands[2],\n \t\t\t\t\t\tGEN_INT (32)));\n-  op1r = gen_rtx_SUBREG (SImode, operands[1], 0);\n-  op2r = gen_rtx_SUBREG (SImode, operands[2], 0);\n-  op1l = gen_rtx_SUBREG (SImode, op1shifted, 0);\n-  op2l = gen_rtx_SUBREG (SImode, op2shifted, 0);\n+  op1r = gen_rtx_SUBREG (SImode, operands[1], 4);\n+  op2r = gen_rtx_SUBREG (SImode, operands[2], 4);\n+  op1l = gen_rtx_SUBREG (SImode, op1shifted, 4);\n+  op2l = gen_rtx_SUBREG (SImode, op2shifted, 4);\n \n   /* Emit multiplies for the cross products.  */\n   emit_insn (gen_umulsidi3 (cross_product1, op2r, op1l));\n@@ -5774,7 +5764,7 @@\n     {\n       rtx reg = gen_reg_rtx (DImode);\n       emit_insn (gen_extendsidi2 (reg, operands[0]));\n-      operands[0] = gen_rtx_SUBREG (SImode, reg, 0);\n+      operands[0] = gen_rtx_SUBREG (SImode, reg, 4);\n     }\n \n   if (!INT_5_BITS (operands[2]))"}]}