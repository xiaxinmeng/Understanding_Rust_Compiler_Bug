{"sha": "b570063aaa0fdbbfdff4327434d54a452ae2df2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU3MDA2M2FhYTBmZGJiZmRmZjQzMjc0MzRkNTRhNDUyYWUyZGYyYQ==", "commit": {"author": {"name": "Jie Zhang", "email": "jie.zhang@analog.com", "date": "2007-08-24T17:19:51Z"}, "committer": {"name": "Jie Zhang", "email": "jiez@gcc.gnu.org", "date": "2007-08-24T17:19:51Z"}, "message": "bfin.c (print_operand): Report error instead of ICE for wrong operand.\n\n\t* config/bfin/bfin.c (print_operand): Report error instead of\n\tICE for wrong operand.\n\nFrom-SVN: r127780", "tree": {"sha": "76a293a81ebba635baadf4e6cc260df4a9c5698a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76a293a81ebba635baadf4e6cc260df4a9c5698a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b570063aaa0fdbbfdff4327434d54a452ae2df2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b570063aaa0fdbbfdff4327434d54a452ae2df2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b570063aaa0fdbbfdff4327434d54a452ae2df2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b570063aaa0fdbbfdff4327434d54a452ae2df2a/comments", "author": {"login": "jiez-adi", "id": 103514486, "node_id": "U_kgDOBiuBdg", "avatar_url": "https://avatars.githubusercontent.com/u/103514486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiez-adi", "html_url": "https://github.com/jiez-adi", "followers_url": "https://api.github.com/users/jiez-adi/followers", "following_url": "https://api.github.com/users/jiez-adi/following{/other_user}", "gists_url": "https://api.github.com/users/jiez-adi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiez-adi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiez-adi/subscriptions", "organizations_url": "https://api.github.com/users/jiez-adi/orgs", "repos_url": "https://api.github.com/users/jiez-adi/repos", "events_url": "https://api.github.com/users/jiez-adi/events{/privacy}", "received_events_url": "https://api.github.com/users/jiez-adi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48f9f863e485dd375da902a2b0bdbf99668e5de4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f9f863e485dd375da902a2b0bdbf99668e5de4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f9f863e485dd375da902a2b0bdbf99668e5de4"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "18b5a0b9a47bec45f6040b6cf5cf750e84eaa262", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b570063aaa0fdbbfdff4327434d54a452ae2df2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b570063aaa0fdbbfdff4327434d54a452ae2df2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b570063aaa0fdbbfdff4327434d54a452ae2df2a", "patch": "@@ -1,3 +1,8 @@\n+2007-08-24  Jie Zhang  <jie.zhang@analog.com>\n+\n+\t* config/bfin/bfin.c (print_operand): Report error instead of\n+\tICE for wrong operand.\n+\n 2007-08-24  Michael Matz  <matz@suse.de>\n \n \t* Makefile.in (GTFILES_H): Use $(patsubst) instead of $(subst)."}, {"sha": "ac64215e26c42a875f561eb4fb6714210efd95f2", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 28, "deletions": 17, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b570063aaa0fdbbfdff4327434d54a452ae2df2a/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b570063aaa0fdbbfdff4327434d54a452ae2df2a/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=b570063aaa0fdbbfdff4327434d54a452ae2df2a", "patch": "@@ -1310,26 +1310,31 @@ print_operand (FILE *file, rtx x, char code)\n \tcase REG:\n \t  if (code == 'h')\n \t    {\n-\t      gcc_assert (REGNO (x) < 32);\n-\t      fprintf (file, \"%s\", short_reg_names[REGNO (x)]);\n-\t      /*fprintf (file, \"\\n%d\\n \", REGNO (x));*/\n-\t      break;\n+\t      if (REGNO (x) < 32)\n+\t\tfprintf (file, \"%s\", short_reg_names[REGNO (x)]);\n+\t      else\n+\t\toutput_operand_lossage (\"invalid operand for code '%c'\", code);\n \t    }\n \t  else if (code == 'd')\n \t    {\n-\t      gcc_assert (REGNO (x) < 32);\n-\t      fprintf (file, \"%s\", high_reg_names[REGNO (x)]);\n-\t      break;\n+\t      if (REGNO (x) < 32)\n+\t\tfprintf (file, \"%s\", high_reg_names[REGNO (x)]);\n+\t      else\n+\t\toutput_operand_lossage (\"invalid operand for code '%c'\", code);\n \t    }\n \t  else if (code == 'w')\n \t    {\n-\t      gcc_assert (REGNO (x) == REG_A0 || REGNO (x) == REG_A1);\n-\t      fprintf (file, \"%s.w\", reg_names[REGNO (x)]);\n+\t      if (REGNO (x) == REG_A0 || REGNO (x) == REG_A1)\n+\t\tfprintf (file, \"%s.w\", reg_names[REGNO (x)]);\n+\t      else\n+\t\toutput_operand_lossage (\"invalid operand for code '%c'\", code);\n \t    }\n \t  else if (code == 'x')\n \t    {\n-\t      gcc_assert (REGNO (x) == REG_A0 || REGNO (x) == REG_A1);\n-\t      fprintf (file, \"%s.x\", reg_names[REGNO (x)]);\n+\t      if (REGNO (x) == REG_A0 || REGNO (x) == REG_A1)\n+\t\tfprintf (file, \"%s.x\", reg_names[REGNO (x)]);\n+\t      else\n+\t\toutput_operand_lossage (\"invalid operand for code '%c'\", code);\n \t    }\n \t  else if (code == 'v')\n \t    {\n@@ -1342,18 +1347,24 @@ print_operand (FILE *file, rtx x, char code)\n \t    }\n \t  else if (code == 'D')\n \t    {\n-\t      fprintf (file, \"%s\", dregs_pair_names[REGNO (x)]);\n+\t      if (D_REGNO_P (REGNO (x)))\n+\t\tfprintf (file, \"%s\", dregs_pair_names[REGNO (x)]);\n+\t      else\n+\t\toutput_operand_lossage (\"invalid operand for code '%c'\", code);\n \t    }\n \t  else if (code == 'H')\n \t    {\n-\t      gcc_assert (mode == DImode || mode == DFmode);\n-\t      gcc_assert (REG_P (x));\n-\t      fprintf (file, \"%s\", reg_names[REGNO (x) + 1]);\n+\t      if ((mode == DImode || mode == DFmode) && REG_P (x))\n+\t\tfprintf (file, \"%s\", reg_names[REGNO (x) + 1]);\n+\t      else\n+\t\toutput_operand_lossage (\"invalid operand for code '%c'\", code);\n \t    }\n \t  else if (code == 'T')\n \t    {\n-\t      gcc_assert (D_REGNO_P (REGNO (x)));\n-\t      fprintf (file, \"%s\", byte_reg_names[REGNO (x)]);\n+\t      if (D_REGNO_P (REGNO (x)))\n+\t\tfprintf (file, \"%s\", byte_reg_names[REGNO (x)]);\n+\t      else\n+\t\toutput_operand_lossage (\"invalid operand for code '%c'\", code);\n \t    }\n \t  else \n \t    fprintf (file, \"%s\", reg_names[REGNO (x)]);"}]}