{"sha": "a816c98137888355b9370e9fd6a62877889f7410", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgxNmM5ODEzNzg4ODM1NWI5MzcwZTlmZDZhNjI4Nzc4ODlmNzQxMA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-06-04T04:50:47Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-06-04T04:50:47Z"}, "message": "fix-header.c: Remove ADD_MISSING_EXTERN_C dependend variables.\n\n\t* fix-header.c: Remove ADD_MISSING_EXTERN_C dependend variables.\n\t(write_lbrac): Remove ADD_MISSING_EXTERN_C dependend code.\n\t(recognized_function): Likewise.\n\t(read_scan_file): Likewise.\n\nFrom-SVN: r67421", "tree": {"sha": "d0a02342a21b48d8d761921a9d8ae0b6c5a259db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0a02342a21b48d8d761921a9d8ae0b6c5a259db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a816c98137888355b9370e9fd6a62877889f7410", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a816c98137888355b9370e9fd6a62877889f7410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a816c98137888355b9370e9fd6a62877889f7410", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a816c98137888355b9370e9fd6a62877889f7410/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81c0e50a305148ac13bfe10232853b12b65753e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81c0e50a305148ac13bfe10232853b12b65753e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81c0e50a305148ac13bfe10232853b12b65753e1"}], "stats": {"total": 37, "additions": 8, "deletions": 29}, "files": [{"sha": "e3070a3a92274336a5bb1c1eb9c044cd7978bf61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a816c98137888355b9370e9fd6a62877889f7410/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a816c98137888355b9370e9fd6a62877889f7410/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a816c98137888355b9370e9fd6a62877889f7410", "patch": "@@ -1,3 +1,10 @@\n+2003-06-04  Andreas Jaeger  <aj@suse.de>\n+\n+\t* fix-header.c: Remove ADD_MISSING_EXTERN_C dependend variables.\n+\t(write_lbrac): Remove ADD_MISSING_EXTERN_C dependend code.\n+\t(recognized_function): Likewise.\n+\t(read_scan_file): Likewise.\n+\n 2003-06-03  Roger Sayle  <roger@eyesopen.com>\n \n \t* optabs.c (expand_binop): Optimize complex multiplication for"}, {"sha": "6f486dea2164ec08af63df19fa78341614884f63", "filename": "gcc/fix-header.c", "status": "modified", "additions": 1, "deletions": 29, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a816c98137888355b9370e9fd6a62877889f7410/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a816c98137888355b9370e9fd6a62877889f7410/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=a816c98137888355b9370e9fd6a62877889f7410", "patch": "@@ -89,10 +89,6 @@ int verbose = 0;\n int partial_count = 0;\n int warnings = 0;\n \n-/* We no longer need to add extern \"C\", because cpp implicitly\n-   forces the standard include files to be treated as C.  */\n-/*#define ADD_MISSING_EXTERN_C 1 */\n-\n #if ADD_MISSING_EXTERN_C\n int missing_extern_C_count = 0;\n #endif\n@@ -415,11 +411,6 @@ int required_other = 0;\n static void\n write_lbrac ()\n {\n-#if ADD_MISSING_EXTERN_C\n-  if (missing_extern_C_count + required_unseen_count > 0)\n-    fprintf (outf, \"#ifdef __cplusplus\\nextern \\\"C\\\" {\\n#endif\\n\");\n-#endif\n-\n   if (partial_count)\n     {\n       fprintf (outf, \"#ifndef _PARAMS\\n\");\n@@ -527,10 +518,6 @@ recognized_function (fname, line, kind, have_arg_list)\n   struct partial_proto *partial;\n   int i;\n   struct fn_decl *fn;\n-#if ADD_MISSING_EXTERN_C\n-  if (kind == 'f')\n-    missing_extern_C_count++;\n-#endif\n \n   fn = lookup_std_proto ((const char *) NODE_NAME (fname->val.node),\n \t\t\t NODE_LEN (fname->val.node));\n@@ -734,11 +721,7 @@ read_scan_file (in_fname, argc, argv)\n \t}\n     }\n \n-  if (required_unseen_count + partial_count + required_other\n-#if ADD_MISSING_EXTERN_C\n-      + missing_extern_C_count\n-#endif\n-      == 0)\n+  if (required_unseen_count + partial_count + required_other == 0)\n     {\n       if (verbose)\n \tfprintf (stderr, \"%s: OK, nothing needs to be done.\\n\", inc_filename);\n@@ -754,12 +737,6 @@ read_scan_file (in_fname, argc, argv)\n       if (partial_count)\n \tfprintf (stderr, \"%s: %d non-prototype function declarations.\\n\",\n \t\t inc_filename, partial_count);\n-#if ADD_MISSING_EXTERN_C\n-      if (missing_extern_C_count)\n-\tfprintf (stderr,\n-\t\t \"%s: %d declarations not protected by extern \\\"C\\\".\\n\",\n-\t\t inc_filename, missing_extern_C_count);\n-#endif\n     }\n }\n \n@@ -891,11 +868,6 @@ write_rbrac ()\n       break;\n     }\n \n-\n-#if ADD_MISSING_EXTERN_C\n-  if (missing_extern_C_count + required_unseen_count > 0)\n-    fprintf (outf, \"#ifdef __cplusplus\\n}\\n#endif\\n\");\n-#endif\n }\n \n /* Returns 1 iff the file is properly protected from multiple inclusion:"}]}