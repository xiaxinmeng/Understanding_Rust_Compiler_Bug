{"sha": "da36ba2754d0ab1b9ac9603c939e8b83f1857a30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGEzNmJhMjc1NGQwYWIxYjlhYzk2MDNjOTM5ZThiODNmMTg1N2EzMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-02-05T20:40:45Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-02-05T20:40:45Z"}, "message": "re PR fortran/35093 (gfortran.dg/data_constraints_1.f90)\n\n2008-02-05  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/35093\n        * data.c (gfc_assign_data_value): Only free \"size\" if\n        it has not already been freed.\n\nFrom-SVN: r132128", "tree": {"sha": "f55c0651d9e1402d9592269de08e0587072ed722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f55c0651d9e1402d9592269de08e0587072ed722"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da36ba2754d0ab1b9ac9603c939e8b83f1857a30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da36ba2754d0ab1b9ac9603c939e8b83f1857a30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da36ba2754d0ab1b9ac9603c939e8b83f1857a30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da36ba2754d0ab1b9ac9603c939e8b83f1857a30/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a279e922880678b6be3ae437422e146c1f76009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a279e922880678b6be3ae437422e146c1f76009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a279e922880678b6be3ae437422e146c1f76009"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "72918d8287c54eda784c399914a4eaed1f6a0a70", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da36ba2754d0ab1b9ac9603c939e8b83f1857a30/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da36ba2754d0ab1b9ac9603c939e8b83f1857a30/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=da36ba2754d0ab1b9ac9603c939e8b83f1857a30", "patch": "@@ -1,3 +1,9 @@\n+2008-02-05  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/35093\n+\t* data.c (gfc_assign_data_value): Only free \"size\" if\n+\tit has not already been freed.\n+\n 2008-02-05  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/34945"}, {"sha": "654c4384de6e3e2de369fdd8063b7677bd3d119c", "filename": "gcc/fortran/data.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da36ba2754d0ab1b9ac9603c939e8b83f1857a30/gcc%2Ffortran%2Fdata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da36ba2754d0ab1b9ac9603c939e8b83f1857a30/gcc%2Ffortran%2Fdata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdata.c?ref=da36ba2754d0ab1b9ac9603c939e8b83f1857a30", "patch": "@@ -321,15 +321,17 @@ gfc_assign_data_value (gfc_expr *lvalue, gfc_expr *rvalue, mpz_t index)\n \t  else\n \t    {\n \t      mpz_t size;\n-\t      if (spec_size (ref->u.ar.as, &size) == SUCCESS\n-\t\t   && mpz_cmp (offset, size) >= 0)\n+\t      if (spec_size (ref->u.ar.as, &size) == SUCCESS)\n \t\t{\n+\t\t  if (mpz_cmp (offset, size) >= 0)\n+\t\t  {\n+\t\t    mpz_clear (size);\n+\t\t    gfc_error (\"Data element above array upper bound at %L\",\n+\t\t\t       &lvalue->where);\n+\t\t    return FAILURE;\n+\t\t  }\n \t\t  mpz_clear (size);\n-\t\t  gfc_error (\"Data element above array upper bound at %L\",\n-\t\t\t     &lvalue->where);\n-\t\t  return FAILURE;\n \t\t}\n-\t      mpz_clear (size);\n \t    }\n \n \t  /* Splay tree containing offset and gfc_constructor.  */"}]}