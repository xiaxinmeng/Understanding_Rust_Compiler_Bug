{"sha": "e1cb00db670e4eb277f8315ecc1da65a5477298d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFjYjAwZGI2NzBlNGViMjc3ZjgzMTVlY2MxZGE2NWE1NDc3Mjk4ZA==", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2019-10-03T21:54:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-10-03T21:54:47Z"}, "message": "rust-demangle.c (looks_like_rust): Remove.\n\n\t* rust-demangle.c (looks_like_rust): Remove.\n\t(rust_is_mangled): Don't check escapes.\n\t(is_prefixed_hash): Allow 0-9a-f permutations.\n\t(rust_demangle_sym): Don't bail on unknown escapes.\n\t* testsuite/rust-demangle-expected: Update 'main::$99$' test.\n\nFrom-SVN: r276539", "tree": {"sha": "235ba1d4bb16a449f4864cb9dd94ecb3260f1a20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/235ba1d4bb16a449f4864cb9dd94ecb3260f1a20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1cb00db670e4eb277f8315ecc1da65a5477298d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1cb00db670e4eb277f8315ecc1da65a5477298d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1cb00db670e4eb277f8315ecc1da65a5477298d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1cb00db670e4eb277f8315ecc1da65a5477298d/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e23390d29e19a8a6aea06fd3c4cc3990c9977ac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e23390d29e19a8a6aea06fd3c4cc3990c9977ac8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e23390d29e19a8a6aea06fd3c4cc3990c9977ac8"}], "stats": {"total": 74, "additions": 34, "deletions": 40}, "files": [{"sha": "97d9767c2ea9fa18e9942bdf5dd21202db04cce3", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1cb00db670e4eb277f8315ecc1da65a5477298d/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1cb00db670e4eb277f8315ecc1da65a5477298d/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=e1cb00db670e4eb277f8315ecc1da65a5477298d", "patch": "@@ -1,3 +1,11 @@\n+2019-10-03  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+\n+\t* rust-demangle.c (looks_like_rust): Remove.\n+\t(rust_is_mangled): Don't check escapes.\n+\t(is_prefixed_hash): Allow 0-9a-f permutations.\n+\t(rust_demangle_sym): Don't bail on unknown escapes.\n+\t* testsuite/rust-demangle-expected: Update 'main::$99$' test.\n+\n 2019-09-03  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n \n \t* rust-demangle.c (unescape): Remove."}, {"sha": "6b62e6dbd806f3f74bb23715ac26daadf7db66e6", "filename": "libiberty/rust-demangle.c", "status": "modified", "additions": 25, "deletions": 39, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1cb00db670e4eb277f8315ecc1da65a5477298d/libiberty%2Frust-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1cb00db670e4eb277f8315ecc1da65a5477298d/libiberty%2Frust-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Frust-demangle.c?ref=e1cb00db670e4eb277f8315ecc1da65a5477298d", "patch": "@@ -85,7 +85,6 @@ static const size_t hash_prefix_len = 3;\n static const size_t hash_len = 16;\n \n static int is_prefixed_hash (const char *start);\n-static int looks_like_rust (const char *sym, size_t len);\n static int parse_lower_hex_nibble (char nibble);\n static char parse_legacy_escape (const char **in);\n \n@@ -105,16 +104,13 @@ static char parse_legacy_escape (const char **in);\n       negative (the rare Rust symbol is not demangled) so this sets\n       the balance in favor of false negatives.\n \n-   3. There must be no characters other than a-zA-Z0-9 and _.:$\n-\n-   4. There must be no unrecognized $-sign sequences.\n-\n-   5. There must be no sequence of three or more dots in a row (\"...\").  */\n+   3. There must be no characters other than a-zA-Z0-9 and _.:$  */\n \n int\n rust_is_mangled (const char *sym)\n {\n   size_t len, len_without_hash;\n+  const char *end;\n \n   if (!sym)\n     return 0;\n@@ -128,12 +124,22 @@ rust_is_mangled (const char *sym)\n   if (!is_prefixed_hash (sym + len_without_hash))\n     return 0;\n \n-  return looks_like_rust (sym, len_without_hash);\n+  end = sym + len_without_hash;\n+\n+  while (sym < end)\n+    {\n+      if (*sym == '$' || *sym == '.' || *sym == '_' || *sym == ':'\n+          || ISALNUM (*sym))\n+        sym++;\n+      else\n+        return 0;\n+    }\n+\n+  return 1;\n }\n \n /* A hash is the prefix \"::h\" followed by 16 lowercase hex digits. The\n-   hex digits must comprise between 5 and 15 (inclusive) distinct\n-   digits.  */\n+   hex digits must contain at least 5 distinct digits.  */\n \n static int\n is_prefixed_hash (const char *str)\n@@ -162,28 +168,7 @@ is_prefixed_hash (const char *str)\n     if (seen[i])\n       count++;\n \n-  return count >= 5 && count <= 15;\n-}\n-\n-static int\n-looks_like_rust (const char *str, size_t len)\n-{\n-  const char *end = str + len;\n-\n-  while (str < end)\n-    {\n-      if (*str == '$')\n-        {\n-          if (!parse_legacy_escape (&str))\n-            return 0;\n-        }\n-      else if (*str == '.' || *str == '_' || *str == ':' || ISALNUM (*str))\n-        str++;\n-      else\n-        return 0;\n-    }\n-\n-  return 1;\n+  return count >= 5;\n }\n \n /*\n@@ -215,8 +200,9 @@ rust_demangle_sym (char *sym)\n           if (unescaped)\n             *out++ = unescaped;\n           else\n-            /* unexpected escape sequence, not looks_like_rust. */\n-            goto fail;\n+            /* unexpected escape sequence, skip the rest of this segment. */\n+            while (in < end && *in != ':')\n+              *out++ = *in++;\n         }\n       else if (*in == '_')\n         {\n@@ -248,14 +234,14 @@ rust_demangle_sym (char *sym)\n       else if (*in == ':' || ISALNUM (*in))\n         *out++ = *in++;\n       else\n-        /* unexpected character in symbol, not looks_like_rust.  */\n-        goto fail;\n+        {\n+          /* unexpected character in symbol, not rust_is_mangled.  */\n+          *out++ = '?'; /* This is pretty lame, but it's hard to do better. */\n+          *out = '\\0';\n+          return;\n+        }\n     }\n-  goto done;\n \n-fail:\n-  *out++ = '?'; /* This is pretty lame, but it's hard to do better. */\n-done:\n   *out = '\\0';\n }\n "}, {"sha": "74774794736a8ae1dde4e2ff59fed5a4da46b8d2", "filename": "libiberty/testsuite/rust-demangle-expected", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1cb00db670e4eb277f8315ecc1da65a5477298d/libiberty%2Ftestsuite%2Frust-demangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1cb00db670e4eb277f8315ecc1da65a5477298d/libiberty%2Ftestsuite%2Frust-demangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Frust-demangle-expected?ref=e1cb00db670e4eb277f8315ecc1da65a5477298d", "patch": "@@ -41,7 +41,7 @@ main::main::he714a2e23ed7db2g\n # $XX$ substitutions should not contain just numbers.\n --format=auto\n _ZN4main4$99$17he714a2e23ed7db23E\n-main::$99$::he714a2e23ed7db23\n+main::$99$\n # _ at start of path should be removed.\n # \"..\" translates to \"::\" \"$GT$\" to \">\" and \"$LT$\" to \"<\".\n --format=rust"}]}