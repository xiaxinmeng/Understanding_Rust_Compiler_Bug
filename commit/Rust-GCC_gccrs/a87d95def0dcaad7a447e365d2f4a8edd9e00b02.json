{"sha": "a87d95def0dcaad7a447e365d2f4a8edd9e00b02", "node_id": "C_kwDOANBUbNoAKGE4N2Q5NWRlZjBkY2FhZDdhNDQ3ZTM2NWQyZjRhOGVkZDllMDBiMDI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-04-14T11:31:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-04-14T11:32:37Z"}, "message": "vect-simd-clone testcase adjustments\n\nThe following reverts the s/avx_runtime/avx/ changes I've done,\nthey were wrong.\n\n\t* gcc.dg/vect/vect-simd-clone-16e.c: Revert back to\n\tchecking avx_runtime in dump scanning.\n\t* gcc.dg/vect/vect-simd-clone-17e.c: Likewise.\n\t* gcc.dg/vect/vect-simd-clone-18e.c: Likewise.", "tree": {"sha": "6e8ffc69bf9f447e4350fbe3beb4d7bf08d9926b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e8ffc69bf9f447e4350fbe3beb4d7bf08d9926b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a87d95def0dcaad7a447e365d2f4a8edd9e00b02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a87d95def0dcaad7a447e365d2f4a8edd9e00b02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a87d95def0dcaad7a447e365d2f4a8edd9e00b02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a87d95def0dcaad7a447e365d2f4a8edd9e00b02/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a9547f3ca6c48f116478169d5fc62165dde7f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9547f3ca6c48f116478169d5fc62165dde7f43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9547f3ca6c48f116478169d5fc62165dde7f43"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "f80b0e0581e3506945e1aed41fee3340a8666df0", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-16e.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87d95def0dcaad7a447e365d2f4a8edd9e00b02/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-16e.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87d95def0dcaad7a447e365d2f4a8edd9e00b02/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-16e.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-16e.c?ref=a87d95def0dcaad7a447e365d2f4a8edd9e00b02", "patch": "@@ -8,9 +8,9 @@\n /* Ensure the the in-branch simd clones are used on targets that support them.\n    Some targets use another call for the epilogue loops.\n    Some targets use pairs of vectors and do twice the calls.  */\n-/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 2 \"vect\" { target { { ! avx } && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n-/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 3 \"vect\" { target { avx && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n-/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 4 \"vect\" { target { { ! avx } && { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } */\n+/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 2 \"vect\" { target { { ! avx_runtime } && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n+/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 3 \"vect\" { target { avx_runtime && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n+/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 4 \"vect\" { target { { ! avx_runtime } && { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } */\n \n /* The LTO test produces two dump files and we scan the wrong one.  */\n /* { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } } */"}, {"sha": "c7c510b8a6abdaef9c7488aedd2cecf0f84c33ee", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-17e.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87d95def0dcaad7a447e365d2f4a8edd9e00b02/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-17e.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87d95def0dcaad7a447e365d2f4a8edd9e00b02/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-17e.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-17e.c?ref=a87d95def0dcaad7a447e365d2f4a8edd9e00b02", "patch": "@@ -8,9 +8,9 @@\n /* Ensure the the in-branch simd clones are used on targets that support them.\n    Some targets use another call for the epilogue loops.\n    Some targets use pairs of vectors and do twice the calls.  */\n-/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 2 \"vect\" { target { { ! avx } && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n-/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 3 \"vect\" { target { avx && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n-/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 4 \"vect\" { target { { ! avx } && { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } */\n+/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 2 \"vect\" { target { { ! avx_runtime } && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n+/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 3 \"vect\" { target { avx_runtime && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n+/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 4 \"vect\" { target { { ! avx_runtime } && { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } */\n \n /* The LTO test produces two dump files and we scan the wrong one.  */\n /* { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } } */"}, {"sha": "e00c3d78038bf26b92520432c1f1cdf09fd95dee", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-clone-18e.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87d95def0dcaad7a447e365d2f4a8edd9e00b02/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-18e.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87d95def0dcaad7a447e365d2f4a8edd9e00b02/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-18e.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-clone-18e.c?ref=a87d95def0dcaad7a447e365d2f4a8edd9e00b02", "patch": "@@ -8,9 +8,9 @@\n /* Ensure the the in-branch simd clones are used on targets that support them.\n    Some targets use another call for the epilogue loops.\n    Some targets use pairs of vectors and do twice the calls.  */\n-/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 2 \"vect\" { target { { ! avx } && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n-/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 3 \"vect\" { target { avx && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n-/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 4 \"vect\" { target { { ! avx } && { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } */\n+/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 2 \"vect\" { target { { ! avx_runtime } && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n+/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 3 \"vect\" { target { avx_runtime && { ! { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } } */\n+/* { dg-final { scan-tree-dump-times {[\\n\\r] [^\\n]* = foo\\.simdclone} 4 \"vect\" { target { { ! avx_runtime } && { { i?86-*-* x86_64-*-* } && { ! lp64 } } } } } } */\n \n /* The LTO test produces two dump files and we scan the wrong one.  */\n /* { dg-skip-if \"\" { *-*-* } { \"-flto\" } { \"\" } } */"}]}