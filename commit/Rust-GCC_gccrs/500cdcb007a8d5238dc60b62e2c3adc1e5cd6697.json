{"sha": "500cdcb007a8d5238dc60b62e2c3adc1e5cd6697", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAwY2RjYjAwN2E4ZDUyMzhkYzYwYjYyZTJjM2FkYzFlNWNkNjY5Nw==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2010-03-02T17:44:30Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2010-03-02T17:44:30Z"}, "message": "gccint.texi (menu): Add Testsuites as a chapter.\n\n\t* doc/gccint.texi (menu): Add Testsuites as a chapter.\n\t* doc/sourcebuild.texi (Testsuites): Move up a level to be a\n\tnew chapter.\n\t(Test Idioms, Test Directives, Ada Tests, C Tests, libgcj Tests,\n\tLTO Testing, gcov Testing, profopt Testing, compat Testing,\n\tTorture Tests): Change from subsection to section.\n\nFrom-SVN: r157167", "tree": {"sha": "69a1472e239b950949342f8b312d1ebf634fb069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69a1472e239b950949342f8b312d1ebf634fb069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/500cdcb007a8d5238dc60b62e2c3adc1e5cd6697", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500cdcb007a8d5238dc60b62e2c3adc1e5cd6697", "html_url": "https://github.com/Rust-GCC/gccrs/commit/500cdcb007a8d5238dc60b62e2c3adc1e5cd6697", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500cdcb007a8d5238dc60b62e2c3adc1e5cd6697/comments", "author": null, "committer": null, "parents": [{"sha": "38f86abadf307e655aa07cb5538990a291adfb21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38f86abadf307e655aa07cb5538990a291adfb21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38f86abadf307e655aa07cb5538990a291adfb21"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "5939ad52f118bedd3b371231ea57a18522b48faa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500cdcb007a8d5238dc60b62e2c3adc1e5cd6697/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500cdcb007a8d5238dc60b62e2c3adc1e5cd6697/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=500cdcb007a8d5238dc60b62e2c3adc1e5cd6697", "patch": "@@ -1,3 +1,12 @@\n+2010-03-02  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* doc/gccint.texi (menu): Add Testsuites as a chapter.\n+\t* doc/sourcebuild.texi (Testsuites): Move up a level to be a\n+\tnew chapter.\n+\t(Test Idioms, Test Directives, Ada Tests, C Tests, libgcj Tests,\n+\tLTO Testing, gcov Testing, profopt Testing, compat Testing,\n+\tTorture Tests): Change from subsection to section.\n+\n 2010-03-02  Jakub Jelinek  <jakub@redhat.com>\n \t    Steven Bosscher  <steven@gcc.gnu.org>\n "}, {"sha": "25da7f8cb7cde0a7eb47d8cf3fe9c261f9aa66f0", "filename": "gcc/doc/gccint.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500cdcb007a8d5238dc60b62e2c3adc1e5cd6697/gcc%2Fdoc%2Fgccint.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500cdcb007a8d5238dc60b62e2c3adc1e5cd6697/gcc%2Fdoc%2Fgccint.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgccint.texi?ref=500cdcb007a8d5238dc60b62e2c3adc1e5cd6697", "patch": "@@ -106,6 +106,7 @@ Additional tutorial information is linked to from\n * Libgcc::          Low-level runtime library used by GCC.\n * Languages::       Languages for which GCC front ends are written.\n * Source Tree::     GCC source tree structure and build system.\n+* Testsuites::      GCC testsuites.\n * Options::         Option specification files.\n * Passes::          Order of passes, what they do, and what each file is for.\n * Trees::           The source representation used by the C and C++ front ends."}, {"sha": "033615bddf309b803e67c32668acb7cd87b9c539", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/500cdcb007a8d5238dc60b62e2c3adc1e5cd6697/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/500cdcb007a8d5238dc60b62e2c3adc1e5cd6697/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=500cdcb007a8d5238dc60b62e2c3adc1e5cd6697", "patch": "@@ -15,7 +15,6 @@ which it is presumed that you are familiar.\n * Configure Terms:: Configuration terminology and history.\n * Top Level::       The top level source directory.\n * gcc Directory::   The @file{gcc} subdirectory.\n-* Testsuites::      The GCC testsuites.\n @end menu\n \n @include configterms.texi\n@@ -813,7 +812,7 @@ a maintainer when support is added.\n @end itemize\n \n @node Testsuites\n-@section Testsuites\n+@chapter Testsuites\n \n GCC contains several testsuites to help maintain compiler quality.\n Most of the runtime libraries and language front ends in GCC have\n@@ -834,7 +833,7 @@ here; FIXME: document the others.\n @end menu\n \n @node Test Idioms\n-@subsection Idioms Used in Testsuite Code\n+@section Idioms Used in Testsuite Code\n \n In general, C testcases have a trailing @file{-@var{n}.c}, starting\n with @file{-1.c}, in case other testcases with similar names are added\n@@ -913,7 +912,7 @@ unfortunately, the mechanisms for this differ by directory.\n FIXME: discuss non-C testsuites here.\n \n @node Test Directives\n-@subsection Directives used within DejaGnu tests\n+@section Directives used within DejaGnu tests\n \n Test directives appear within comments in a test source file and begin\n with @code{dg-}.  Some of these are defined within DejaGnu and others\n@@ -1236,7 +1235,7 @@ Check branch and/or call counts, in addition to line counts, in\n @end table\n \n @node Ada Tests\n-@subsection Ada Language Testsuites\n+@section Ada Language Testsuites\n \n The Ada testsuite includes executable tests from the ACATS 2.5\n testsuite, publicly available at\n@@ -1271,7 +1270,7 @@ These tests are run using the build tree: they can be run without doing\n a @code{make install}.\n \n @node C Tests\n-@subsection C Language Testsuites\n+@section C Language Testsuites\n \n GCC contains the following C language testsuites, in the\n @file{gcc/testsuite} directory:\n@@ -1369,7 +1368,7 @@ FIXME: merge in @file{testsuite/README.gcc} and discuss the format of\n test cases and magic comments more.\n \n @node libgcj Tests\n-@subsection The Java library testsuites.\n+@section The Java library testsuites.\n \n Runtime tests are executed via @samp{make check} in the\n @file{@var{target}/libjava/testsuite} directory in the build\n@@ -1392,7 +1391,7 @@ bugs in libgcj that had caused Mauve test failures.\n We encourage developers to contribute test cases to Mauve.\n \n @node LTO Testing\n-@subsection Support for testing link-time optimizations\n+@section Support for testing link-time optimizations\n \n Tests for link-time optimizations usually require multiple source files\n that are compiled separately, perhaps with different sets of options.\n@@ -1428,7 +1427,7 @@ each of these sets of options.\n @end table\n \n @node gcov Testing\n-@subsection Support for testing @command{gcov}\n+@section Support for testing @command{gcov}\n \n Language-independent support for testing @command{gcov}, and for checking\n that branch profiling produces expected values, is provided by the\n@@ -1494,7 +1493,7 @@ commands to check branch percentages and call return percentages can\n bracket the lines that report them.\n \n @node profopt Testing\n-@subsection Support for testing profile-directed optimizations\n+@section Support for testing profile-directed optimizations\n \n The file @file{profopt.exp} provides language-independent support for\n checking correct execution of a test built with profile-directed\n@@ -1533,7 +1532,7 @@ torture tests\n @end table\n \n @node compat Testing\n-@subsection Support for testing binary compatibility\n+@section Support for testing binary compatibility\n \n The file @file{compat.exp} provides language-independent support for\n binary compatibility testing.  It supports testing interoperability of\n@@ -1640,7 +1639,7 @@ targets.\n @end table\n \n @node Torture Tests\n-@subsection Support for torture testing using multiple options\n+@section Support for torture testing using multiple options\n \n Throughout the compiler testsuite there are several directories whose\n tests are run multiple times, each with a different set of options."}]}