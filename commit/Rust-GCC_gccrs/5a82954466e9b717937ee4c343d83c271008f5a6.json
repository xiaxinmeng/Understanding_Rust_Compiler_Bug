{"sha": "5a82954466e9b717937ee4c343d83c271008f5a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE4Mjk1NDQ2NmU5YjcxNzkzN2VlNGMzNDNkODNjMjcxMDA4ZjVhNg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-04-05T22:33:14Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2008-04-05T22:33:14Z"}, "message": "PR fortran/25829 28655\n\n2008-04-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/25829 28655\n\t* gfortran.dg/f2003_io_1.f03: New test.\n\t* gfortran.dg/f2003_io_2.f03: New test.\n\t* gfortran.dg/f2003_io_3.f03: New test.\n\t* gfortran.dg/f2003_io_4.f03: New test.\n\t* gfortran.dg/f2003_io_5.f03: New test.\n\t* gfortran.dg/f2003_io_6.f03: New test.\n\t* gfortran.dg/f2003_io_7.f03: New test.\n\nFrom-SVN: r133945", "tree": {"sha": "b19e3cb8a44a66a6af989efd3018e37e18c30dbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b19e3cb8a44a66a6af989efd3018e37e18c30dbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a82954466e9b717937ee4c343d83c271008f5a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a82954466e9b717937ee4c343d83c271008f5a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a82954466e9b717937ee4c343d83c271008f5a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a82954466e9b717937ee4c343d83c271008f5a6/comments", "author": null, "committer": null, "parents": [{"sha": "6f0f0b2eca1519fad9acf7369931fdf67d876260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f0f0b2eca1519fad9acf7369931fdf67d876260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f0f0b2eca1519fad9acf7369931fdf67d876260"}], "stats": {"total": 188, "additions": 188, "deletions": 0}, "files": [{"sha": "18a45c19282da87beb9e14cd4181db3d08c3c6dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a82954466e9b717937ee4c343d83c271008f5a6", "patch": "@@ -1,3 +1,14 @@\n+2008-04-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/25829 28655\n+\t* gfortran.dg/f2003_io_1.f03: New test.\n+\t* gfortran.dg/f2003_io_2.f03: New test.\n+\t* gfortran.dg/f2003_io_3.f03: New test.\n+\t* gfortran.dg/f2003_io_4.f03: New test.\n+\t* gfortran.dg/f2003_io_5.f03: New test.\n+\t* gfortran.dg/f2003_io_6.f03: New test.\n+\t* gfortran.dg/f2003_io_7.f03: New test.\n+\n 2008-04-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/35833"}, {"sha": "0f8bebdded24b4fa49a65b7238231d57fc61ca79", "filename": "gcc/testsuite/gfortran.dg/f2003_io_1.f03", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_1.f03?ref=5a82954466e9b717937ee4c343d83c271008f5a6", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do run }\n+! { dg-options \"-std=gnu\" }\n+! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+real :: a(4), b(4)\n+real :: c\n+integer :: istat, j\n+character(25) :: msg\n+\n+a = 23.45\n+b = 0.0\n+open(10, file='mydata', asynchronous=\"yes\", blank=\"null\")\n+\n+write(10,'(10f8.3)',  decimal=\"comma\", id=j) a\n+rewind(10)\n+read(10,'(10f8.3)', asynchronous=\"yes\", decimal=\"comma\", blank=\"zero\") b\n+if (any(b.ne.23.45)) call abort\n+\n+c = 3.14\n+write(msg, *, decimal=\"comma\") c\n+if (msg(1:7).ne.\"   3,14\") call abort\n+\n+b = 0.0\n+rewind(10)\n+write(10,'(10f8.3)', asynchronous=\"yes\", decimal=\"point\") a\n+rewind(10)\n+read(10,'(10f8.3)', asynchronous=\"yes\", decimal=\"point\") b\n+if (any(b.ne.23.45)) call abort\n+\n+wait(unit=10, err=25, iostat=istat, iomsg=msg, end=35, id=j)\n+\n+! do some stuff with a\n+25 continue\n+\n+35 continue\n+\n+close(10, status=\"delete\")\n+end"}, {"sha": "54c0516dfedfa73454c224fa6482dbaa979e1e78", "filename": "gcc/testsuite/gfortran.dg/f2003_io_2.f03", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_2.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_2.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_2.f03?ref=5a82954466e9b717937ee4c343d83c271008f5a6", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003\" }\n+! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+integer :: istat, idvar\n+character(25) :: msg\n+real, dimension(10) :: a, b\n+\n+a = 43.21\n+open(10, file='mydata', asynchronous=\"yes\")\n+write(10,'(10f8.3)', asynchronous=\"yes\", decimal=\"comma\") a\n+rewind(10)\n+read(10,'(10f8.3)', asynchronous=\"yes\", decimal=\"comma\", id=idvar) b\n+istat = 123456\n+wait(unit=10, err=25, iostat=istat, iomsg=msg, end=35, id=idvar)\n+\n+print *, istat\n+\n+25 continue\n+\n+35 continue\n+end"}, {"sha": "5b3fb59b0d7622a9053d0a9ec421896d76b700cd", "filename": "gcc/testsuite/gfortran.dg/f2003_io_3.f03", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_3.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_3.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_3.f03?ref=5a82954466e9b717937ee4c343d83c271008f5a6", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003\" }\n+! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+integer :: istat\n+character(25) :: msg\n+real, dimension(10) :: a, b\n+namelist /mynml/ a, b\n+msg = \"null\"\n+a = 43.21\n+WRITE(99,'(10f8.3)',decimal=\"comma\") a\n+rewind(99)\n+read(99,'(dc,10f8.3)',blank=msg) b\n+write(99,'(dp,10f8.3)',round=\"up\") ! { dg-error \"not implemented\" }\n+rewind(99)\n+read(99,'(10f8.3)',pad=\"yes\")\n+msg=\"suppress\"\n+write(99,'(10f8.3)',sign=msg)\n+write(99,delim=\"apostrophe\", fmt=*)\n+write(99,nml=mynml,delim=\"none\")\n+end"}, {"sha": "d253a81bb64e7767449efaf8a9339f05818ba038", "filename": "gcc/testsuite/gfortran.dg/f2003_io_4.f03", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_4.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_4.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_4.f03?ref=5a82954466e9b717937ee4c343d83c271008f5a6", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do run }\n+! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+! Test of decimal= feature\n+\n+integer :: istat\n+character(80) :: msg\n+real, dimension(4) :: a, b, c\n+namelist /mynml/ a, b\n+msg = \"yes\"\n+a = 43.21\n+b = 3.131\n+c = 5.432\n+open(99, decimal=\"comma\")\n+write(99,'(10f8.3)') a\n+a = 0.0\n+rewind(99)\n+read(99,'(10f8.3)') a\n+if (any(a.ne.43.21)) call abort\n+\n+write(msg,'(dp,f8.3,dc,f8.2,dp,f8.3)', decimal=\"comma\") a(1), b(1), c(1)\n+if (trim(msg).ne.\"  43.210    3,13   5.432\") call abort\n+\n+close(99, status=\"delete\")\n+open(99, decimal=\"comma\")\n+write(99,nml=mynml)\n+a = 0.0\n+b = 0.0\n+rewind(99)\n+read(99,nml=mynml)\n+if (any(a.ne.43.21)) call abort\n+if (any(b.ne.3.131)) call abort\n+close(99, status=\"delete\")\n+end"}, {"sha": "b816ded69c56076799ce225ab1fc65965dabafb4", "filename": "gcc/testsuite/gfortran.dg/f2003_io_5.f03", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_5.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_5.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_5.f03?ref=5a82954466e9b717937ee4c343d83c271008f5a6", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do run }\n+! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+! Test of decimal=\"comma\" in namelist and complex\n+integer :: i\n+real :: a(10) = [ (i*1.3, i=1,10) ]\n+real :: b(10)\n+complex :: c\n+character(34) :: complex\n+namelist /nm/ a\n+\n+open(99,file=\"mynml\",form=\"formatted\",decimal=\"point\",status=\"replace\")\n+write(99,nml=nm,decimal=\"comma\")\n+a = 5.55\n+rewind(99)\n+read(99,nml=nm,decimal=\"comma\")\n+if (any (a /= [ (i*1.3, i=1,10) ])) call abort\n+close(99, status=\"delete\")\n+\n+c = (3.123,4.456)\n+write(complex,*,decimal=\"comma\") c\n+if (complex.ne.\" (  3,1229999    ;  4,4559999    )\") call abort\n+c = (0.0, 0.0)\n+read(complex,*,decimal=\"comma\") c\n+if (complex.ne.\" (  3,1229999    ;  4,4559999    )\") call abort\n+\n+end"}, {"sha": "40758e2232d9d52686e812fe57f1447d1a4046f6", "filename": "gcc/testsuite/gfortran.dg/f2003_io_6.f03", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_6.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_6.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_6.f03?ref=5a82954466e9b717937ee4c343d83c271008f5a6", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do run }\n+! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+! Test of decimal=\"comma\" in namelist, checks separators\n+implicit none\n+integer :: i\n+real :: a(6) = 0.0\n+character(len=30) :: str = '&nm a = 1,3; 4, 5; 5; 7; /'\n+namelist /nm/ a\n+read(str,nml=nm,decimal='comma')\n+if (any(a.ne.[ 1.3, 4.0, 5.0, 5.0, 7.0, 0.0 ])) call abort\n+end"}, {"sha": "6d2c11dfcbe7b75b85cd0d62286d6f39cd15828d", "filename": "gcc/testsuite/gfortran.dg/f2003_io_7.f03", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_7.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a82954466e9b717937ee4c343d83c271008f5a6/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_7.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ff2003_io_7.f03?ref=5a82954466e9b717937ee4c343d83c271008f5a6", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do run }\n+! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+! Test of sign=, decimal=, and blank= .\n+program iotests\n+  implicit none\n+  character(len=45) :: a\n+  character(len=4) :: mode = \"what\"\n+  real, parameter :: pi = 3.14159265358979323846\n+  real(kind=8), dimension(3) :: b\n+  !\n+  write(a,'(f10.3,s,f10.3,sp,f10.3,ss,f10.3)',SIGN='PLUS') pi, pi, pi, pi\n+  if (a /= \"    +3.142     3.142    +3.142     3.142\") call abort\n+  !\n+  open(8,sign=\"plus\")\n+  write(8,'(f10.3,dc,f10.3,dp,f10.3)',DECIMAL='COMMA',&\n+        & sign=\"suppress\") pi, pi, pi\n+  rewind(8)\n+  read(8,'(a)') a\n+  if (a /= \"     3,142     3,142     3.142\") call abort\n+  close(8,status=\"delete\")\n+  !\n+  !              \"123456789 123456789  12345678901\n+  write(a,'(a)') \"53 256.84, 2 2 2.  ; 33.3 3   1  \"\n+  read(a, '(f9.2,1x,f8.2,2x,f11.7)', blank=\"zero\") b(1),b(2),b(3)\n+  if (any(abs(b - [530256.84, 20202.00, 33.3030001]) > .03)) call abort\n+end program iotests\n+"}]}