{"sha": "535b544aa70749ecce8ea8914831479ece53995f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM1YjU0NGFhNzA3NDllY2NlOGVhODkxNDgzMTQ3OWVjZTUzOTk1Zg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2009-04-03T20:15:40Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2009-04-03T20:15:40Z"}, "message": "omp-low.c (pass_expand_omp): Don't claim to provide PROP_gimple_lomp.\n\n\t* omp-low.c (pass_expand_omp): Don't claim to provide PROP_gimple_lomp.\n\t(execute_lower_omp): Always run but take the short way out if -fopenmp\n\tis not given.\n\t(gate_lower_omp): Remove, forcing the pass manager to always run the\n\tpass and always set PROP_gimple_lomp.\n\t(pass_lower_omp): Remove gate function.\n\t* matrix-reorg.c (pass_ipa_matrix_reorg): Don't claim to provide\n\tPROP_trees.  Instead, require it.\n\t* ipa-cp.c (pass_ipa_cp): Likewise.\n\t* ipa-inline.c (pass_early_inline): Don't claim to provide PROP_cfg.\n\t(pass_ipa_early_inline, pass_inline_parameters, pass_ipa_inline): Idem.\n\t* tree-profile.c (pass_tree_profile): Don't claim to provide PROP_cfg\n\tand PROP_gimple_leh.\n\nFrom-SVN: r145518", "tree": {"sha": "1c2b91d7f8ae11f28c85eefe1858717c4e575f3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c2b91d7f8ae11f28c85eefe1858717c4e575f3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/535b544aa70749ecce8ea8914831479ece53995f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/535b544aa70749ecce8ea8914831479ece53995f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/535b544aa70749ecce8ea8914831479ece53995f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/535b544aa70749ecce8ea8914831479ece53995f/comments", "author": null, "committer": null, "parents": [{"sha": "6f9c9d6d47751e980f0ca831f02e91c0ac424916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f9c9d6d47751e980f0ca831f02e91c0ac424916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f9c9d6d47751e980f0ca831f02e91c0ac424916"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "79061d34561360123b0cdf89da9715130304bc88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/535b544aa70749ecce8ea8914831479ece53995f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/535b544aa70749ecce8ea8914831479ece53995f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=535b544aa70749ecce8ea8914831479ece53995f", "patch": "@@ -1,3 +1,19 @@\n+2009-04-03  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* omp-low.c (pass_expand_omp): Don't claim to provide PROP_gimple_lomp.\n+\t(execute_lower_omp): Always run but take the short way out if -fopenmp\n+\tis not given.\n+\t(gate_lower_omp): Remove, forcing the pass manager to always run the\n+\tpass and always set PROP_gimple_lomp.\n+\t(pass_lower_omp): Remove gate function.\n+\t* matrix-reorg.c (pass_ipa_matrix_reorg): Don't claim to provide\n+\tPROP_trees.  Instead, require it.\n+\t* ipa-cp.c (pass_ipa_cp): Likewise.\n+\t* ipa-inline.c (pass_early_inline): Don't claim to provide PROP_cfg.\n+\t(pass_ipa_early_inline, pass_inline_parameters, pass_ipa_inline): Idem.\n+\t* tree-profile.c (pass_tree_profile): Don't claim to provide PROP_cfg\n+\tand PROP_gimple_leh.\n+\n 2009-04-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/13146"}, {"sha": "21dd8871e0a475f8ff004bb540581093315d9b84", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/535b544aa70749ecce8ea8914831479ece53995f/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/535b544aa70749ecce8ea8914831479ece53995f/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=535b544aa70749ecce8ea8914831479ece53995f", "patch": "@@ -1382,7 +1382,7 @@ struct ipa_opt_pass pass_ipa_cp =\n   0,\t\t\t\t/* static_pass_number */\n   TV_IPA_CONSTANT_PROP,\t\t/* tv_id */\n   0,\t\t\t\t/* properties_required */\n-  PROP_trees,\t\t\t/* properties_provided */\n+  0,\t\t\t\t/* properties_provided */\n   0,\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t/* todo_flags_start */\n   TODO_dump_cgraph | TODO_dump_func |"}, {"sha": "dfc346aec6a49620af206cc173922b1b7172d4c3", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/535b544aa70749ecce8ea8914831479ece53995f/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/535b544aa70749ecce8ea8914831479ece53995f/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=535b544aa70749ecce8ea8914831479ece53995f", "patch": "@@ -1561,7 +1561,7 @@ struct gimple_opt_pass pass_early_inline =\n   0,\t\t\t\t\t/* static_pass_number */\n   TV_INLINE_HEURISTICS,\t\t\t/* tv_id */\n   0,\t                                /* properties_required */\n-  PROP_cfg,\t\t\t\t/* properties_provided */\n+  0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n   TODO_dump_func    \t\t\t/* todo_flags_finish */\n@@ -1591,7 +1591,7 @@ struct simple_ipa_opt_pass pass_ipa_early_inline =\n   0,\t\t\t\t\t/* static_pass_number */\n   TV_INLINE_HEURISTICS,\t\t\t/* tv_id */\n   0,\t                                /* properties_required */\n-  PROP_cfg,\t\t\t\t/* properties_provided */\n+  0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n   TODO_dump_cgraph \t\t        /* todo_flags_finish */\n@@ -1653,7 +1653,7 @@ struct gimple_opt_pass pass_inline_parameters =\n   0,\t\t\t\t\t/* static_pass_number */\n   TV_INLINE_HEURISTICS,\t\t\t/* tv_id */\n   0,\t                                /* properties_required */\n-  PROP_cfg,\t\t\t\t/* properties_provided */\n+  0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n   0\t\t\t\t\t/* todo_flags_finish */\n@@ -1772,7 +1772,7 @@ struct ipa_opt_pass pass_ipa_inline =\n   0,\t\t\t\t\t/* static_pass_number */\n   TV_INLINE_HEURISTICS,\t\t\t/* tv_id */\n   0,\t                                /* properties_required */\n-  PROP_cfg,\t\t\t\t/* properties_provided */\n+  0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   TODO_remove_functions,\t\t/* todo_flags_finish */\n   TODO_dump_cgraph | TODO_dump_func"}, {"sha": "8f71be5381802e24bb0a38132aff135ad14f2230", "filename": "gcc/matrix-reorg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/535b544aa70749ecce8ea8914831479ece53995f/gcc%2Fmatrix-reorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/535b544aa70749ecce8ea8914831479ece53995f/gcc%2Fmatrix-reorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatrix-reorg.c?ref=535b544aa70749ecce8ea8914831479ece53995f", "patch": "@@ -2421,7 +2421,7 @@ struct simple_ipa_opt_pass pass_ipa_matrix_reorg =\n   0,\t\t\t\t/* static_pass_number */\n   0,\t\t\t\t/* tv_id */\n   0,\t\t\t\t/* properties_required */\n-  PROP_trees,\t\t\t/* properties_provided */\n+  0,\t\t\t\t/* properties_provided */\n   0,\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t/* todo_flags_start */\n   TODO_dump_cgraph | TODO_dump_func\t/* todo_flags_finish */"}, {"sha": "551af4024b00ec8ad5657e9d1045dedbb72b2feb", "filename": "gcc/omp-low.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/535b544aa70749ecce8ea8914831479ece53995f/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/535b544aa70749ecce8ea8914831479ece53995f/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=535b544aa70749ecce8ea8914831479ece53995f", "patch": "@@ -5456,7 +5456,7 @@ struct gimple_opt_pass pass_expand_omp =\n   0,\t\t\t\t\t/* static_pass_number */\n   0,\t\t\t\t\t/* tv_id */\n   PROP_gimple_any,\t\t\t/* properties_required */\n-  PROP_gimple_lomp,\t\t\t/* properties_provided */\n+  0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n   TODO_dump_func\t\t\t/* todo_flags_finish */\n@@ -6577,6 +6577,11 @@ execute_lower_omp (void)\n {\n   gimple_seq body;\n \n+  /* This pass always runs, to provide PROP_gimple_lomp.\n+     But there is nothing to do unless -fopenmp is given.  */\n+  if (flag_openmp == 0)\n+    return 0;\n+\n   all_contexts = splay_tree_new (splay_tree_compare_pointers, 0,\n \t\t\t\t delete_omp_context);\n \n@@ -6604,18 +6609,12 @@ execute_lower_omp (void)\n   return 0;\n }\n \n-static bool\n-gate_lower_omp (void)\n-{\n-  return flag_openmp != 0;\n-}\n-\n struct gimple_opt_pass pass_lower_omp = \n {\n  {\n   GIMPLE_PASS,\n   \"omplower\",\t\t\t\t/* name */\n-  gate_lower_omp,\t\t\t/* gate */\n+  NULL,\t\t\t\t\t/* gate */\n   execute_lower_omp,\t\t\t/* execute */\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */"}, {"sha": "06f113bea091bead2c27eaf716054803a09deab8", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/535b544aa70749ecce8ea8914831479ece53995f/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/535b544aa70749ecce8ea8914831479ece53995f/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=535b544aa70749ecce8ea8914831479ece53995f", "patch": "@@ -492,7 +492,7 @@ struct gimple_opt_pass pass_tree_profile =\n   0,\t\t\t\t\t/* static_pass_number */\n   TV_BRANCH_PROB,\t\t\t/* tv_id */\n   PROP_gimple_leh | PROP_cfg,\t\t/* properties_required */\n-  PROP_gimple_leh | PROP_cfg,\t\t/* properties_provided */\n+  0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n   TODO_verify_stmts | TODO_dump_func\t/* todo_flags_finish */"}]}