{"sha": "9f9ab303f713366fd57c338802735b86dcebf110", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY5YWIzMDNmNzEzMzY2ZmQ1N2MzMzg4MDI3MzViODZkY2ViZjExMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-02-06T06:19:03Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-02-06T06:19:03Z"}, "message": "re PR target/17306 (function_vector attribute in H8300H/H8S)\n\n\tPR target/17306\n\t* config/h8300/constraints.md (U): Correctly dectect\n\t\"eightbit_data\" memory addresses.\n\t* config/h8300/h8300.c (eightbit_constant_address_p): Also\n\thandle (const (plus (symbol_ref (x)))) where x is declared\n\tas an 8-bit data memory address.\n\t* config/h8300/h8300.md (call, call_value): Correctly detect\n\t\"funcvec\" functions.\n\n\tPR target/17306\n\t* gcc.target/h8300/pr17306-1.c: New test.\n\t* gcc.target/h8300/pr17306-2.c: New test.\n\nFrom-SVN: r220472", "tree": {"sha": "5cfc7f4da69207a8e4b9fc8e4803bf14c224f02b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cfc7f4da69207a8e4b9fc8e4803bf14c224f02b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f9ab303f713366fd57c338802735b86dcebf110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9ab303f713366fd57c338802735b86dcebf110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f9ab303f713366fd57c338802735b86dcebf110", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f9ab303f713366fd57c338802735b86dcebf110/comments", "author": null, "committer": null, "parents": [{"sha": "d00f6ca670050d56c3ed5ef0c8ccdcce346e1cf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d00f6ca670050d56c3ed5ef0c8ccdcce346e1cf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d00f6ca670050d56c3ed5ef0c8ccdcce346e1cf2"}], "stats": {"total": 64, "additions": 61, "deletions": 3}, "files": [{"sha": "4d84df7a1e0e502b9d5eb4b05a15156c7064a0f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f9ab303f713366fd57c338802735b86dcebf110", "patch": "@@ -1,5 +1,14 @@\n 2015-02-05  Jeff Law  <law@redhat.com>\n \n+\tPR target/17306\n+\t* config/h8300/constraints.md (U): Correctly dectect\n+\t\"eightbit_data\" memory addresses.\n+\t* config/h8300/h8300.c (eightbit_constant_address_p): Also\n+\thandle (const (plus (symbol_ref (x)))) where x is declared\n+\tas an 8-bit data memory address.\n+\t* config/h8300/h8300.md (call, call_value): Correctly detect\n+\t\"funcvec\" functions.\n+\n \tPR target/43264\n \t* config/h8300/h8300.c (get_shift_alg): Fix ASHIFTRT by\n \t24 to 28 bits for the H8/300."}, {"sha": "9b509e720c9e723f68538f7636b27ebfc94ed4bb", "filename": "gcc/config/h8300/constraints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Fconfig%2Fh8300%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Fconfig%2Fh8300%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fconstraints.md?ref=9f9ab303f713366fd57c338802735b86dcebf110", "patch": "@@ -188,7 +188,7 @@\n \t    (match_code \"symbol_ref\" \"000\")\n \t    (match_code \"const_int\" \"001\")\n \t    (ior (match_test \"TARGET_H8300S\")\n-\t\t (match_test \"SYMBOL_REF_FLAG (XEXP (XEXP (XEXP (op, 0), 0), 0))\")))\n+\t\t (match_test \"(SYMBOL_REF_FLAGS (XEXP (XEXP (XEXP (op, 0), 0), 0)) & SYMBOL_FLAG_EIGHTBIT_DATA) != 0\")))\n        (and (match_code \"mem\")\n \t    (match_test \"h8300_eightbit_constant_address_p (XEXP (op, 0))\"))\n        (and (match_code \"mem\")"}, {"sha": "ea900525b6623ac8f07efaf573e0d3add11c8e97", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=9f9ab303f713366fd57c338802735b86dcebf110", "patch": "@@ -5637,6 +5637,12 @@ h8300_eightbit_constant_address_p (rtx x)\n   if (GET_CODE (x) == SYMBOL_REF)\n     return (SYMBOL_REF_FLAGS (x) & SYMBOL_FLAG_EIGHTBIT_DATA) != 0;\n \n+  if (GET_CODE (x) == CONST\n+      && GET_CODE (XEXP (x, 0)) == PLUS\n+      && GET_CODE (XEXP (XEXP (x, 0), 0)) == SYMBOL_REF\n+      && (SYMBOL_REF_FLAGS (XEXP (XEXP (x, 0), 0)) & SYMBOL_FLAG_EIGHTBIT_DATA) != 0)\n+    return 1;\n+\n   if (GET_CODE (x) != CONST_INT)\n     return 0;\n "}, {"sha": "dfd082ce0df6dbd0cc3a27e7631083e80c90d86e", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=9f9ab303f713366fd57c338802735b86dcebf110", "patch": "@@ -2499,7 +2499,7 @@\n   \"\"\n {\n   if (GET_CODE (XEXP (operands[0], 0)) == SYMBOL_REF\n-      && SYMBOL_REF_FLAG (XEXP (operands[0], 0)))\n+      && (SYMBOL_REF_FLAGS (XEXP (operands[0], 0)) & SYMBOL_FLAG_FUNCVEC_FUNCTION))\n     return \"jsr\\\\t@%0:8\";\n   else\n     return \"jsr\\\\t%0\";\n@@ -2522,7 +2522,7 @@\n   \"\"\n {\n   if (GET_CODE (XEXP (operands[1], 0)) == SYMBOL_REF\n-      && SYMBOL_REF_FLAG (XEXP (operands[1], 0)))\n+      && (SYMBOL_REF_FLAGS (XEXP (operands[1], 0)) & SYMBOL_FLAG_FUNCVEC_FUNCTION))\n     return \"jsr\\\\t@%1:8\";\n   else\n     return \"jsr\\\\t%1\";"}, {"sha": "55715adca669e1e59bfd1a161b7aa8f170fd4228", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f9ab303f713366fd57c338802735b86dcebf110", "patch": "@@ -1,3 +1,9 @@\n+2015-02-05  Jeff Law  <law@redhat.com>\n+\n+\tPR target/17306\n+\t* gcc.target/h8300/pr17306-1.c: New test.\n+\t* gcc.target/h8300/pr17306-2.c: New test.\n+\n 2015-02-05  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/64943"}, {"sha": "010492f1cbd66095d05ec15f2803b5974e186bf6", "filename": "gcc/testsuite/gcc.target/h8300/pr17306-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Ftestsuite%2Fgcc.target%2Fh8300%2Fpr17306-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Ftestsuite%2Fgcc.target%2Fh8300%2Fpr17306-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fh8300%2Fpr17306-1.c?ref=9f9ab303f713366fd57c338802735b86dcebf110", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile }  */\n+/* { dg-options \"-mh\" }  */\n+/* { dg-final { scan-assembler-times \"@@\" 1 } }  */\n+\n+\n+void foo (void) __attribute__ ((function_vector));\n+__attribute__((noinline)) void foo (void)\n+{\n+}\n+\n+void bar (void)\n+{\n+    foo();\n+}"}, {"sha": "a407c74b4cdbb3a068b04c1253fcc8006665448a", "filename": "gcc/testsuite/gcc.target/h8300/pr17306-2.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Ftestsuite%2Fgcc.target%2Fh8300%2Fpr17306-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f9ab303f713366fd57c338802735b86dcebf110/gcc%2Ftestsuite%2Fgcc.target%2Fh8300%2Fpr17306-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fh8300%2Fpr17306-2.c?ref=9f9ab303f713366fd57c338802735b86dcebf110", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile }  */\n+/* { dg-options \"-mh -O2 -w\" }  */\n+/* { dg-final { scan-assembler-times \":8\" 2 } }  */\n+\n+\n+struct x {\n+  char x;\n+  char y;\n+};\n+\n+struct x __attribute__ ((eightbit_data)) foo;\n+\n+int bar ()\n+{\n+ if ((foo.y & 0x80) != 0)\n+   oof ();\n+}\n+\n+int com ()\n+{\n+ if ((foo.x & 0x80) != 0)\n+   oof ();\n+}"}]}