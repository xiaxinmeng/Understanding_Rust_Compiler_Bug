{"sha": "c354ab1fb22e031c69ff75e498eee0e70eaea40f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM1NGFiMWZiMjJlMDMxYzY5ZmY3NWU0OThlZWUwZTcwZWFlYTQwZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-10-18T20:29:53Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-10-18T20:29:53Z"}, "message": "Makefile.in (EXTRA_GNATRTL_NONTASKING_OBJS): Define.\n\n\t* gcc-interface/Makefile.in (EXTRA_GNATRTL_NONTASKING_OBJS): Define.\n\t(EXTRA_GNATRTL_TASKING_OBJS): Likewise.\n\t(ARM/Android): Add atomic support.\n\t(SPARC/Solaris): Simplify.\n\t(x86/Solaris): Likewise.\n\t(x86/Linux): Likewise.\n\t(x86-64/kFreeBDS): Adjust and use system-freebsd-x86.ads\n\t(x86/FreeBSD): Add s-mudido-affinity.adb.\n\t(x86-64/FreeBSD): Likewise and use system-freebsd-x86.ads.\n\t(s390/Linux): Simplify.\n\t(PowerPC/AIX): Likewise.\n\t(Cygwin/Mingw): Likewise.\n\t(MIPSel/Linux): Likewise.\n\t(ARM/Linux): Add atomic support.\n\t(Aarch64/Linux): Use system-linux-armel.ads.\n\t(SPARC/Linux): Simplify.\n\t(IA-64/Linux): Minor tweak.\n\t(IA-64/HP-UX): Likewise.\n\t(Alpha/Linux): Likewise.\n\t(x86-64/Linux): Use system-linux-x86.ads.\n\t(x86/Darwin): Simplify.\n\t(PowerPC/Darwin): Likewise.\n\t(ARM/Darwin): Use system-darwin-arm.ads.\n\t(ADA_EXCLUDE_SRCS): Minor reformatting.\n\t* system-aix.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t(Support_Atomic_Primitives): Set to True.\n\t* system-aix64.ads: Delete.\n\t* system-darwin-arm.ads: New.\n\t* system-darwin-ppc.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t(Support_Atomic_Primitives): Set to True.\n\t* system-darwin-ppc64.ads: New.\n\t* system-darwin-x86.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t* system-darwin-x86_64.ads: Delete.\n\t* system-freebsd-x86.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t* system-freebsd-x86_64.ads: Delete.\n\t* system-linux-alpha.ads (Support_Atomic_Primitives): Set to True.\n\t* system-linux-armeb.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t(Support_Atomic_Primitives): Set to True.\n\t* system-linux-armel.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t(Support_Atomic_Primitives): Set to True.\n\t* system-linux-mips.ads: (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t* system-linux-mipsel.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t* system-linux-s390.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t(Stack_Check_Probes): Set to True.\n\t* system-linux-s390x.ads: Delete.\n\t* system-linux-sparc.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t* system-linux-sparcv9.ads: Delete.\n\t* system-linux-x86.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t* system-linux-x86_64.ads: Delete.\n\t* system-mingw-x86_64.ads: Delete.\n\t* system-mingw.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t* system-solaris-sparc.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t(Support_Atomic_Primitives): Set to True.\n\t* system-solaris-sparcv9.ads: Delete.\n\t* system-solaris-x86.ads (Word_Size): Change to Standard'Word_Size.\n\t(Memory_Size): Change to 2 ** Word_Size.\n\t* system-solaris-x86_64.ads: Delete.\n\nFrom-SVN: r241316", "tree": {"sha": "e3b64620b32d527ce21d8783ed718901d2d831fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3b64620b32d527ce21d8783ed718901d2d831fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c354ab1fb22e031c69ff75e498eee0e70eaea40f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c354ab1fb22e031c69ff75e498eee0e70eaea40f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c354ab1fb22e031c69ff75e498eee0e70eaea40f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c354ab1fb22e031c69ff75e498eee0e70eaea40f/comments", "author": null, "committer": null, "parents": [{"sha": "2300c332eb046581a8135dabf66b9e85afec65b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2300c332eb046581a8135dabf66b9e85afec65b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2300c332eb046581a8135dabf66b9e85afec65b7"}], "stats": {"total": 1959, "additions": 187, "deletions": 1772}, "files": [{"sha": "6cffc9cbf4116e264d013ee8b050d555a437f879", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -1,3 +1,76 @@\n+2016-10-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/Makefile.in (EXTRA_GNATRTL_NONTASKING_OBJS): Define.\n+\t(EXTRA_GNATRTL_TASKING_OBJS): Likewise.\n+\t(ARM/Android): Add atomic support.\n+\t(SPARC/Solaris): Simplify.\n+\t(x86/Solaris): Likewise.\n+\t(x86/Linux): Likewise.\n+\t(x86-64/kFreeBDS): Adjust and use system-freebsd-x86.ads\n+\t(x86/FreeBSD): Add s-mudido-affinity.adb.\n+\t(x86-64/FreeBSD): Likewise and use system-freebsd-x86.ads.\n+\t(s390/Linux): Simplify.\n+\t(PowerPC/AIX): Likewise.\n+\t(Cygwin/Mingw): Likewise.\n+\t(MIPSel/Linux): Likewise.\n+\t(ARM/Linux): Add atomic support.\n+\t(Aarch64/Linux): Use system-linux-armel.ads.\n+\t(SPARC/Linux): Simplify.\n+\t(IA-64/Linux): Minor tweak.\n+\t(IA-64/HP-UX): Likewise.\n+\t(Alpha/Linux): Likewise.\n+\t(x86-64/Linux): Use system-linux-x86.ads.\n+\t(x86/Darwin): Simplify.\n+\t(PowerPC/Darwin): Likewise.\n+\t(ARM/Darwin): Use system-darwin-arm.ads.\n+\t(ADA_EXCLUDE_SRCS): Minor reformatting.\n+\t* system-aix.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t(Support_Atomic_Primitives): Set to True.\n+\t* system-aix64.ads: Delete.\n+\t* system-darwin-arm.ads: New.\n+\t* system-darwin-ppc.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t(Support_Atomic_Primitives): Set to True.\n+\t* system-darwin-ppc64.ads: New.\n+\t* system-darwin-x86.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t* system-darwin-x86_64.ads: Delete.\n+\t* system-freebsd-x86.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t* system-freebsd-x86_64.ads: Delete.\n+\t* system-linux-alpha.ads (Support_Atomic_Primitives): Set to True.\n+\t* system-linux-armeb.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t(Support_Atomic_Primitives): Set to True.\n+\t* system-linux-armel.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t(Support_Atomic_Primitives): Set to True.\n+\t* system-linux-mips.ads: (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t* system-linux-mipsel.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t* system-linux-s390.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t(Stack_Check_Probes): Set to True.\n+\t* system-linux-s390x.ads: Delete.\n+\t* system-linux-sparc.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t* system-linux-sparcv9.ads: Delete.\n+\t* system-linux-x86.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t* system-linux-x86_64.ads: Delete.\n+\t* system-mingw-x86_64.ads: Delete.\n+\t* system-mingw.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t* system-solaris-sparc.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t(Support_Atomic_Primitives): Set to True.\n+\t* system-solaris-sparcv9.ads: Delete.\n+\t* system-solaris-x86.ads (Word_Size): Change to Standard'Word_Size.\n+\t(Memory_Size): Change to 2 ** Word_Size.\n+\t* system-solaris-x86_64.ads: Delete.\n+\n 2016-10-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* system-darwin-ppc64.ads (Support_64_Bit_Divides): Delete."}, {"sha": "c68225cae3b753f1708454ad8429d8d3615b2dcf", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 68, "deletions": 182, "changes": 250, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -444,6 +444,12 @@ EXTRA_LIBGNAT_OBJS=\n # specific header files required to rebuild the runtime library from sources.\n EXTRA_LIBGNAT_SRCS=\n \n+# Additionnal object files from Ada sources to be added in libgnat\n+EXTRA_GNATRTL_NONTASKING_OBJS=\n+\n+# Additionnal object files from Ada sources to be added in libgnarl\n+EXTRA_GNATRTL_TASKING_OBJS=\n+\n # Subsets of extra libgnat sources that always go together\n VX_SIGTRAMP_EXTRA_SRCS=sigtramp.h sigtramp-vxworks-target.inc\n \n@@ -454,13 +460,7 @@ EXTRA_ADALIB_OBJS=\n VX_CRTBE_EXTRA_ADALIB_OBJS=vx_crtbegin.o vx_crtbegin_auto.o vx_crtend.o\n \n # GCC spec files to be installed in $(libsubdir), so --specs=<spec-filename>\n-# finds them at runtime. Sequences of alphanum characters prefixed with '_' in\n-# the filename are stripped off at installation time. This is used to strip\n-# the architecture indications in vxsim spec filenames, installing e.g.\n-# vxsim_ppc.spec as vxsim.spec. This allows setting up pretty general self\n-# specs to perform -vxsim -> --specs=<...> translations without causing\n-# conflicts since the specs are installed in a target specific subdirectory.\n-#\n+# finds them at runtime.\n GCC_SPEC_FILES=\n \n # $(filter-out PATTERN...,TEXT) removes all PATTERN words from TEXT.\n@@ -1220,6 +1220,8 @@ ifeq ($(strip $(filter-out arm% linux-androideabi,$(target_cpu) $(target_os))),)\n   s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n   system.ads<system-linux-armel.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n@@ -1237,7 +1239,7 @@ endif\n \n # Sparc Solaris\n ifeq ($(strip $(filter-out sparc% sun solaris%,$(target_cpu) $(target_vendor) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS_COMMON = \\\n+  LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-solaris.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-solaris.adb \\\n@@ -1252,32 +1254,9 @@ ifeq ($(strip $(filter-out sparc% sun solaris%,$(target_cpu) $(target_vendor) $(\n   s-tpopsp.adb<s-tpopsp-solaris.adb \\\n   g-soliop.ads<g-soliop-solaris.ads \\\n   $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n-\n-  LIBGNAT_TARGET_PAIRS_32 = \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n   system.ads<system-solaris-sparc.ads\n \n-  LIBGNAT_TARGET_PAIRS_64 = \\\n-  system.ads<system-solaris-sparcv9.ads\n-\n-  ifeq ($(strip $(filter-out sparc sun solaris%,$(target_cpu) $(target_vendor) $(target_os))),)\n-    ifeq ($(strip $(MULTISUBDIR)),/sparcv9)\n-      LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n-    else\n-      LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n-    endif\n-  else\n-    ifeq ($(strip $(MULTISUBDIR)),/sparcv8plus)\n-      LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n-    else\n-      LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n-    endif\n-  endif\n-\n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-solaris.adb\n \n   EH_MECHANISM=-gcc\n@@ -1326,37 +1305,30 @@ ifeq ($(strip $(filter-out %86 %x86_64 solaris2%,$(target_cpu) $(target_os))),)\n   s-taspri.ads<s-taspri-solaris.ads \\\n   s-tpopsp.adb<s-tpopsp-solaris.adb \\\n   g-soliop.ads<g-soliop-solaris.ads \\\n-  $(ATOMICS_TARGET_PAIRS)\n-\n-  LIBGNAT_TARGET_PAIRS_32 = \\\n-  $(X86_TARGET_PAIRS) \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n   system.ads<system-solaris-x86.ads\n \n-  LIBGNAT_TARGET_PAIRS_64 = \\\n-  $(X86_64_TARGET_PAIRS) \\\n-  system.ads<system-solaris-x86_64.ads\n-\n   ifeq ($(strip $(filter-out %86 solaris2%,$(target_cpu) $(target_os))),)\n     ifeq ($(strip $(MULTISUBDIR)),/amd64)\n       LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_64_TARGET_PAIRS)\n     else\n       LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_TARGET_PAIRS)\n     endif\n   else\n     ifeq ($(strip $(MULTISUBDIR)),/32)\n       LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_TARGET_PAIRS)\n     else\n       LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n+      $(LIBGNAT_TARGET_PAIRS_COMMON) $(X86_64_TARGET_PAIRS)\n     endif\n   endif\n \n   TOOLS_TARGET_PAIRS=mlib-tgt-specific.adb<mlib-tgt-specific-solaris.adb\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n \n   EH_MECHANISM=-gcc\n   THREADSLIB = -lposix4 -lthread\n@@ -1381,20 +1353,13 @@ ifeq ($(strip $(filter-out %86 linux%,$(target_cpu) $(target_os))),)\n   a-exetim.ads<a-exetim-default.ads \\\n   s-linux.ads<s-linux.ads \\\n   s-osinte.adb<s-osinte-posix.adb \\\n-  $(ATOMICS_TARGET_PAIRS)\n-\n-  LIBGNAT_TARGET_PAIRS_32 = \\\n-  $(X86_TARGET_PAIRS) \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n   system.ads<system-linux-x86.ads\n \n-  LIBGNAT_TARGET_PAIRS_64 = \\\n-  $(X86_64_TARGET_PAIRS) \\\n-  system.ads<system-linux-x86_64.ads\n-\n   ifeq ($(strip $(MULTISUBDIR)),/64)\n-    LIBGNAT_TARGET_PAIRS += $(LIBGNAT_TARGET_PAIRS_64)\n+    LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n   else\n-    LIBGNAT_TARGET_PAIRS += $(LIBGNAT_TARGET_PAIRS_32)\n+    LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n   endif\n \n   ifeq ($(strip $(filter-out xenomai,$(THREAD_KIND))),)\n@@ -1416,7 +1381,7 @@ ifeq ($(strip $(filter-out %86 linux%,$(target_cpu) $(target_os))),)\n \n   EH_MECHANISM=-gcc\n   THREADSLIB = -lpthread -lrt\n-  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n \n   TOOLS_TARGET_PAIRS =  \\\n@@ -1449,7 +1414,7 @@ ifeq ($(strip $(filter-out %86 kfreebsd%,$(target_cpu) $(target_os))),)\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n \n   EH_MECHANISM=-gcc\n   THREADSLIB = -lpthread\n@@ -1501,7 +1466,7 @@ ifeq ($(strip $(filter-out x86_64 kfreebsd%,$(target_cpu) $(target_os))),)\n   s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  system.ads<system-freebsd-x86_64.ads\n+  system.ads<system-freebsd-x86.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n@@ -1535,7 +1500,7 @@ ifeq ($(strip $(filter-out %86 freebsd%,$(target_cpu) $(target_os))),)\n   mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb\n   GNATLIB_SHARED = gnatlib-shared-dual\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n \n   EH_MECHANISM=-gcc\n   THREADSLIB= -lpthread\n@@ -1559,13 +1524,13 @@ ifeq ($(strip $(filter-out %86_64 freebsd%,$(target_cpu) $(target_os))),)\n   s-tpopsp.adb<s-tpopsp-posix.adb \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(X86_64_TARGET_PAIRS) \\\n-  system.ads<system-freebsd-x86_64.ads\n+  system.ads<system-freebsd-x86.ads\n \n   TOOLS_TARGET_PAIRS = \\\n   mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb\n   GNATLIB_SHARED = gnatlib-shared-dual\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n \n   EH_MECHANISM=-gcc\n   THREADSLIB= -lpthread\n@@ -1606,7 +1571,7 @@ endif\n \n # S390 Linux\n ifeq ($(strip $(filter-out s390% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS_COMMON = \\\n+  LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n@@ -1618,27 +1583,9 @@ ifeq ($(strip $(filter-out s390% linux%,$(target_cpu) $(target_os))),)\n   s-tasinf.ads<s-tasinf-linux.ads \\\n   s-tasinf.adb<s-tasinf-linux.adb \\\n   s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n-  s-tpopsp.adb<s-tpopsp-posix-foreign.adb\n-\n-  LIBGNAT_TARGET_PAIRS_32 = \\\n+  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   system.ads<system-linux-s390.ads\n \n-  LIBGNAT_TARGET_PAIRS_64 = \\\n-  system.ads<system-linux-s390x.ads\n-\n-  ifeq ($(strip $(filter-out s390x,$(target_cpu))),)\n-    ifeq ($(strip $(MULTISUBDIR)),/32)\n-      LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n-    else\n-      LIBGNAT_TARGET_PAIRS = \\\n-      $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n-    endif\n-  else\n-    LIBGNAT_TARGET_PAIRS = \\\n-    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n-  endif\n-\n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n@@ -1699,7 +1646,7 @@ endif\n \n # IBM AIX\n ifeq ($(strip $(filter-out ibm aix%,$(target_vendor) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS_COMMON = \\\n+  LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-aix.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n@@ -1710,27 +1657,16 @@ ifeq ($(strip $(filter-out ibm aix%,$(target_vendor) $(target_os))),)\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix.adb \\\n   $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n-\n-  LIBGNAT_TARGET_PAIRS_32 = \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n   system.ads<system-aix.ads\n \n-  LIBGNAT_TARGET_PAIRS_64 = \\\n-  system.ads<system-aix64.ads\n-\n   ifeq ($(findstring ppc64, \\\n \t  $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) \\\n \t\t   -print-multi-os-directory)), \\\n \tppc64)\n-    LIBGNAT_TARGET_PAIRS = \\\n-    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n-    TOOLS_TARGET_PAIRS = \\\n-    indepsw.adb<indepsw-aix.adb\n+    TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-aix.adb\n   else\n-    LIBGNAT_TARGET_PAIRS = \\\n-    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n-    TOOLS_TARGET_PAIRS = \\\n-    indepsw.adb<indepsw-gnu.adb\n+    TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb\n   endif\n \n   THREADSLIB = -lpthreads\n@@ -1819,7 +1755,8 @@ ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(target_os))),)\n   s-tasinf.ads<s-tasinf-mingw.ads \\\n   g-stsifd.adb<g-stsifd-sockets.adb \\\n   g-soliop.ads<g-soliop-mingw.ads \\\n-  $(ATOMICS_TARGET_PAIRS)\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  system.ads<system-mingw.ads\n \n   LIBGNAT_TARGET_PAIRS += \\\n   a-exetim.adb<a-exetim-mingw.adb \\\n@@ -1835,31 +1772,23 @@ ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(target_os))),)\n \n   ifeq ($(strip $(filter-out x86_64%,$(target_cpu))),)\n     ifeq ($(strip $(MULTISUBDIR)),/32)\n-      LIBGNAT_TARGET_PAIRS += \\\n-        $(X86_TARGET_PAIRS) \\\n-        system.ads<system-mingw.ads\n+      LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n       SO_OPTS= -m32 -Wl,-soname,\n     else\n-      LIBGNAT_TARGET_PAIRS += \\\n-        $(X86_64_TARGET_PAIRS) \\\n-        system.ads<system-mingw-x86_64.ads\n+      LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n       SO_OPTS = -m64 -Wl,-soname,\n     endif\n   else\n     ifeq ($(strip $(MULTISUBDIR)),/64)\n-      LIBGNAT_TARGET_PAIRS += \\\n-        $(X86_64_TARGET_PAIRS) \\\n-        system.ads<system-mingw-x86_64.ads\n+      LIBGNAT_TARGET_PAIRS += $(X86_64_TARGET_PAIRS)\n       SO_OPTS = -m64 -Wl,-soname,\n     else\n-      LIBGNAT_TARGET_PAIRS += \\\n-        $(X86_TARGET_PAIRS) \\\n-        system.ads<system-mingw.ads\n+      LIBGNAT_TARGET_PAIRS += $(X86_TARGET_PAIRS)\n       SO_OPTS = -m32 -Wl,-soname,\n     endif\n   endif\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS = \\\n+  EXTRA_GNATRTL_NONTASKING_OBJS += \\\n     s-win32.o s-winext.o g-regist.o g-sse.o g-ssvety.o\n   EXTRA_GNATRTL_TASKING_OBJS = a-exetim.o\n   EXTRA_LIBGNAT_SRCS+=mingw32.h\n@@ -1908,7 +1837,7 @@ endif\n \n # Mips/el and Mips64/el Linux\n ifeq ($(strip $(filter-out mipsel mips64el linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS_COMMON = \\\n+  LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n@@ -1921,22 +1850,9 @@ ifeq ($(strip $(filter-out mipsel mips64el linux%,$(target_cpu) $(target_os))),)\n   s-tasinf.adb<s-tasinf-linux.adb \\\n   s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  g-sercom.adb<g-sercom-linux.adb\n-\n-  LIBGNAT_TARGET_PAIRS_32 = \\\n+  g-sercom.adb<g-sercom-linux.adb \\\n   system.ads<system-linux-mipsel.ads\n \n-  LIBGNAT_TARGET_PAIRS_64 = \\\n-  system.ads<system-linux-mips64el.ads\n-\n-  ifneq (,$(or $(filter mips64el%, $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) -print-multiarch)), $(filter ../lib64, $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) -print-multi-os-directory))))\n-    LIBGNAT_TARGET_PAIRS = \\\n-    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n-  else\n-    LIBGNAT_TARGET_PAIRS = \\\n-    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n-  endif\n-\n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n@@ -2012,7 +1928,9 @@ ifeq ($(strip $(filter-out arm% linux-gnueabi%,$(target_cpu) $(target_os))),)\n   s-tasinf.ads<s-tasinf-linux.ads \\\n   s-tasinf.adb<s-tasinf-linux.adb \\\n   s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n-  s-tpopsp.adb<s-tpopsp-posix-foreign.adb\n+  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n \n   ifeq ($(strip $(filter-out arm%b,$(target_cpu))),)\n     EH_MECHANISM=\n@@ -2058,8 +1976,7 @@ ifeq ($(strip $(filter-out aarch64% linux%,$(target_cpu) $(target_os))),)\n   g-sercom.adb<g-sercom-linux.adb \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<system-linux-x86_64.ads\n-  ## ^^ Note the above is a pretty-close placeholder.\n+  system.ads<system-linux-armel.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n@@ -2075,7 +1992,7 @@ endif\n \n # Sparc Linux\n ifeq ($(strip $(filter-out sparc% linux%,$(target_cpu) $(target_os))),)\n-  LIBGNAT_TARGET_PAIRS_COMMON = \\\n+  LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\\n   s-inmaop.adb<s-inmaop-posix.adb \\\n   s-intman.adb<s-intman-posix.adb \\\n@@ -2087,22 +2004,9 @@ ifeq ($(strip $(filter-out sparc% linux%,$(target_cpu) $(target_os))),)\n   s-tasinf.ads<s-tasinf-linux.ads \\\n   s-tasinf.adb<s-tasinf-linux.adb \\\n   s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n-  s-tpopsp.adb<s-tpopsp-tls.adb\n-\n-  LIBGNAT_TARGET_PAIRS_32 = \\\n+  s-tpopsp.adb<s-tpopsp-tls.adb \\\n   system.ads<system-linux-sparc.ads\n \n-  LIBGNAT_TARGET_PAIRS_64 = \\\n-  system.ads<system-linux-sparcv9.ads\n-\n-  ifneq (,$(or $(filter sparc64-linux-gnu, $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) -print-multiarch)), $(filter ../lib64, $(shell $(GCC_FOR_TARGET) $(GNATLIBCFLAGS) -print-multi-os-directory))))\n-    LIBGNAT_TARGET_PAIRS = \\\n-    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_64)\n-  else\n-    LIBGNAT_TARGET_PAIRS = \\\n-    $(LIBGNAT_TARGET_PAIRS_COMMON) $(LIBGNAT_TARGET_PAIRS_32)\n-  endif\n-\n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n@@ -2196,9 +2100,9 @@ ifeq ($(strip $(filter-out %ia64 linux%,$(target_cpu) $(target_os))),)\n   s-tpopsp.adb<s-tpopsp-tls.adb \\\n   s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n   g-sercom.adb<g-sercom-linux.adb \\\n-  system.ads<system-linux-ia64.ads \\\n   $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<system-linux-ia64.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n@@ -2225,9 +2129,9 @@ ifeq ($(strip $(filter-out ia64% hp hpux%,$(target_cpu) $(target_vendor) $(targe\n   s-taprop.adb<s-taprop-posix.adb \\\n   s-taspri.ads<s-taspri-posix.ads \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n-  system.ads<system-hpux-ia64.ads \\\n   $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<system-hpux-ia64.ads\n \n   TOOLS_TARGET_PAIRS = \\\n   mlib-tgt-specific.adb<mlib-tgt-specific-ia64-hpux.adb\n@@ -2257,9 +2161,9 @@ ifeq ($(strip $(filter-out alpha% linux%,$(target_cpu) $(target_os))),)\n   s-tasinf.adb<s-tasinf-linux.adb \\\n   s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n   s-taspri.ads<s-taspri-posix-noaltstack.ads \\\n-  system.ads<system-linux-alpha.ads \\\n   $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+  system.ads<system-linux-alpha.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n@@ -2296,13 +2200,13 @@ ifeq ($(strip $(filter-out %x86_64 linux%,$(target_cpu) $(target_os))),)\n   g-sercom.adb<g-sercom-linux.adb \\\n   $(ATOMICS_TARGET_PAIRS) \\\n   $(X86_64_TARGET_PAIRS) \\\n-  system.ads<system-linux-x86_64.ads\n+  system.ads<system-linux-x86.ads\n \n   TOOLS_TARGET_PAIRS =  \\\n     mlib-tgt-specific.adb<mlib-tgt-specific-linux.adb \\\n     indepsw.adb<indepsw-gnu.adb\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS += g-sse.o g-ssvety.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-linux.o a-exetim.o\n   EH_MECHANISM=-gcc\n   THREADSLIB=-lpthread -lrt\n@@ -2365,17 +2269,11 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n     LIBGNAT_TARGET_PAIRS += \\\n       s-intman.adb<s-intman-susv3.adb \\\n       s-osprim.adb<s-osprim-darwin.adb \\\n-      $(ATOMICS_TARGET_PAIRS)\n+      $(ATOMICS_TARGET_PAIRS) \\\n+      system.ads<system-darwin-x86.ads\n \n     ifeq ($(strip $(MULTISUBDIR)),/x86_64)\n-      LIBGNAT_TARGET_PAIRS += \\\n-        $(X86_64_TARGET_PAIRS) \\\n-        system.ads<system-darwin-x86_64.ads\n       SO_OPTS += -m64\n-    else\n-      LIBGNAT_TARGET_PAIRS += \\\n-        $(X86_TARGET_PAIRS) \\\n-        system.ads<system-darwin-x86.ads\n     endif\n \n     EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n@@ -2387,17 +2285,11 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n       s-osprim.adb<s-osprim-darwin.adb \\\n       a-exetim.ads<a-exetim-default.ads \\\n       a-exetim.adb<a-exetim-darwin.adb \\\n-      $(ATOMICS_TARGET_PAIRS)\n+      $(ATOMICS_TARGET_PAIRS) \\\n+      system.ads<system-darwin-x86.ads\n \n     ifeq ($(strip $(MULTISUBDIR)),/i386)\n-      LIBGNAT_TARGET_PAIRS += \\\n-        $(X86_TARGET_PAIRS) \\\n-        system.ads<system-darwin-x86.ads\n       SO_OPTS += -m32\n-    else\n-      LIBGNAT_TARGET_PAIRS += \\\n-        $(X86_64_TARGET_PAIRS) \\\n-        system.ads<system-darwin-x86_64.ads\n     endif\n \n     EXTRA_GNATRTL_NONTASKING_OBJS=g-sse.o g-ssvety.o\n@@ -2411,15 +2303,11 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n       a-numaux.ads<a-numaux-darwin.ads \\\n       a-numaux.adb<a-numaux-darwin.adb \\\n       $(ATOMICS_TARGET_PAIRS) \\\n-      $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+      $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n+      system.ads<system-darwin-ppc.ads\n \n     ifeq ($(strip $(MULTISUBDIR)),/ppc64)\n-      LIBGNAT_TARGET_PAIRS += \\\n-        system.ads<system-darwin-ppc64.ads\n         SO_OPTS += -m64\n-    else\n-      LIBGNAT_TARGET_PAIRS += \\\n-      system.ads<system-darwin-ppc.ads\n     endif\n   endif\n \n@@ -2444,7 +2332,7 @@ ifeq ($(strip $(filter-out darwin%,$(target_os))),)\n     EXTRA_LIBGNAT_OBJS+=sigtramp-ios.o\n     EXTRA_LIBGNAT_SRCS+=sigtramp.h\n     LIBGNAT_TARGET_PAIRS += \\\n-      system.ads<system-darwin-arm64.ads\n+      system.ads<system-darwin-arm.ads\n   endif\n \n   TOOLS_TARGET_PAIRS =  \\\n@@ -3030,14 +2918,12 @@ gnatlib-shared:\n \t     PICFLAG_FOR_TARGET=\"$(PICFLAG_FOR_TARGET)\" \\\n              $(GNATLIB_SHARED)\n \n-# When building a SJLJ runtime for VxWorks, in addition to forcing\n-# ZCX_By_default to False, we need to ensure that extra linker options\n-# are not passed to prevent the inclusion of useless objects and\n-# potential troubles from the presence of extra symbols and references\n-# in some configurations.  The inhibition is performed by commenting\n-# the pragma instead of deleting the line, as the latter might result\n-# in getting multiple blank lines, hence a style check error, as a\n-# result.\n+# When building a SJLJ runtime for VxWorks, we need to ensure that the extra\n+# linker options needed for ZCX are not passed to prevent the inclusion of\n+# useless objects and potential troubles from the presence of extra symbols\n+# and references in some configurations.  The inhibition is performed by\n+# commenting the pragma instead of deleting the line, as the latter might\n+# result in getting multiple blank lines, hence possible style check errors.\n gnatlib-sjlj:\n \t$(MAKE) $(FLAGS_TO_PASS) EH_MECHANISM=\"\" \\\n \tTHREAD_KIND=\"$(THREAD_KIND)\" ../stamp-gnatlib1-$(RTSDIR)"}, {"sha": "95815b41f74a1cadfcb9e9d4b4114b92dbce3432", "filename": "gcc/ada/system-aix.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-aix.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n \n@@ -145,6 +145,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "aa7179883c3ccf794a8b6cbec2c41358dc4a3e88", "filename": "gcc/ada/system-aix64.ads", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-aix64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-aix64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-aix64.ads?ref=2300c332eb046581a8135dabf66b9e85afec65b7", "patch": "@@ -1,157 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                           (PPC/AIX64 Version)                            --\n---                                                                          --\n---          Copyright (C) 2009-2016, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.01;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := High_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   --  0 .. 126 corresponds to the system priority range 1 .. 127.\n-   --\n-   --  If the scheduling policy is SCHED_FIFO or SCHED_RR the runtime makes use\n-   --  of the entire range provided by the system.\n-   --\n-   --  If the scheduling policy is SCHED_OTHER the only valid system priority\n-   --  is 1 and that is the only value ever passed to the system, regardless of\n-   --  how priorities are set by user programs.\n-\n-   Max_Priority           : constant Positive := 125;\n-   Max_Interrupt_Priority : constant Positive := 126;\n-\n-   subtype Any_Priority       is Integer      range   0 .. 126;\n-   subtype Priority           is Any_Priority range   0 .. 125;\n-   subtype Interrupt_Priority is Any_Priority range 126 .. 126;\n-\n-   Default_Priority : constant Priority :=\n-     (Priority'First + Priority'Last) / 2;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-end System;"}, {"sha": "9b96bf91914db00bb5c521a7df8c3d491a98042c", "filename": "gcc/ada/system-darwin-arm.ads", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-darwin-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-darwin-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-arm.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -5,9 +5,9 @@\n --                               S Y S T E M                                --\n --                                                                          --\n --                                 S p e c                                  --\n---                         (Darwin/x86_64 Version)                          --\n+--                          (Darwin/ARM Version)                            --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n ", "previous_filename": "gcc/ada/system-darwin-x86_64.ads"}, {"sha": "b58cfed3dff305fefee979e2426b6160ad17afe6", "filename": "gcc/ada/system-darwin-ppc.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-darwin-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-darwin-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-ppc.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (Darwin/PPC Version)                            --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n \n@@ -161,6 +161,7 @@ private\n    Stack_Check_Probes        : constant Boolean := False;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "b0967a0abeb07fde654230dae5b5822055e6d50c", "filename": "gcc/ada/system-darwin-ppc64.ads", "status": "removed", "additions": 0, "deletions": 152, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-darwin-ppc64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-darwin-ppc64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-ppc64.ads?ref=2300c332eb046581a8135dabf66b9e85afec65b7", "patch": "@@ -1,152 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                         (Darwin/PPC64 Version)                           --\n---                                                                          --\n---             Copyright (C) 2011-2016, Free Software Foundation, Inc.      --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.01;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := High_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   --  The values defined here are copied from the ppc version.\n-\n-   Max_Interrupt_Priority : constant Positive := 63;\n-   Max_Priority           : constant Positive := Max_Interrupt_Priority - 1;\n-\n-   subtype Any_Priority is Integer range 0 .. Max_Interrupt_Priority;\n-   subtype Priority is Any_Priority range 0 .. Max_Priority;\n-   subtype Interrupt_Priority is Any_Priority\n-     range Priority'Last + 1 .. Max_Interrupt_Priority;\n-\n-   Default_Priority : constant Priority :=\n-     (Priority'Last - Priority'First) / 2;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := False;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-end System;"}, {"sha": "7fce58784a86e40bc1edb68f2eb85debb24d7758", "filename": "gcc/ada/system-darwin-x86.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-darwin-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-darwin-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-x86.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (Darwin/x86 Version)                            --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n "}, {"sha": "030511c2da0a251391e7c267da1fdca79c58f50d", "filename": "gcc/ada/system-freebsd-x86.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-freebsd-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-freebsd-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-freebsd-x86.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (FreeBSD/x86 Version)                           --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n "}, {"sha": "2d1e20d6cd6d8c1b0ea57df13e1b1d9b6c29034e", "filename": "gcc/ada/system-freebsd-x86_64.ads", "status": "removed", "additions": 0, "deletions": 148, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-freebsd-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-freebsd-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-freebsd-x86_64.ads?ref=2300c332eb046581a8135dabf66b9e85afec65b7", "patch": "@@ -1,148 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                         (FreeBSD/x86_64 Version)                         --\n---                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.000_001;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   Max_Priority           : constant Positive := 30;\n-   Max_Interrupt_Priority : constant Positive := 31;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 31;\n-   subtype Priority           is Any_Priority range  0 .. 30;\n-   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n-\n-   Default_Priority : constant Priority := 15;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-end System;"}, {"sha": "e78153436c25dbb51e3a9acd5ba3d56bd322c478", "filename": "gcc/ada/system-linux-alpha.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-alpha.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -135,6 +135,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "62918fdcb634551b0748f870713ee5730421b9fb", "filename": "gcc/ada/system-linux-armeb.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-armeb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-armeb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-armeb.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n \n@@ -143,6 +143,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "9c4f62388270cd620224086041144491623d3288", "filename": "gcc/ada/system-linux-armel.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-armel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-armel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-armel.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                        (GNU-Linux/ARMEL Version)                         --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n \n@@ -143,6 +143,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "5a7c21aa5cf33b76883016179ef82ec86c009245", "filename": "gcc/ada/system-linux-mips.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-mips.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n "}, {"sha": "c1d2bb1505e59ff67523b7cf7dc3fea21a8ddcab", "filename": "gcc/ada/system-linux-mips64el.ads", "status": "removed", "additions": 0, "deletions": 147, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-linux-mips64el.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-linux-mips64el.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-mips64el.ads?ref=2300c332eb046581a8135dabf66b9e85afec65b7", "patch": "@@ -1,147 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                       (GNU-Linux/MIPS64EL Version)                       --\n---                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := Integer'Last;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.000_001;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   Max_Priority           : constant Positive := 30;\n-   Max_Interrupt_Priority : constant Positive := 31;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 31;\n-   subtype Priority           is Any_Priority range  0 .. 30;\n-   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n-\n-   Default_Priority : constant Priority := 15;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-end System;"}, {"sha": "d0850df65ce6c3e3219daa1df948a47bb9177d10", "filename": "gcc/ada/system-linux-mipsel.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-mipsel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-mipsel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-mipsel.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n "}, {"sha": "485a8de8c4a62189812154c7bb9de33ab224dc76", "filename": "gcc/ada/system-linux-s390.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-s390.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-s390.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-s390.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n "}, {"sha": "64467b9c749d805d78c7bb9a095d10af8b7ade6b", "filename": "gcc/ada/system-linux-s390x.ads", "status": "removed", "additions": 0, "deletions": 147, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-linux-s390x.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-linux-s390x.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-s390x.ads?ref=2300c332eb046581a8135dabf66b9e85afec65b7", "patch": "@@ -1,147 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                          (GNU-Linux/s390x Version)                       --\n---                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := Integer'Last;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.000_001;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := High_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   Max_Priority           : constant Positive := 30;\n-   Max_Interrupt_Priority : constant Positive := 31;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 31;\n-   subtype Priority           is Any_Priority range  0 .. 30;\n-   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n-\n-   Default_Priority : constant Priority := 15;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-end System;"}, {"sha": "503adbe6f3b33e910c6ab89463fb49688f4b2aa6", "filename": "gcc/ada/system-linux-sparc.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-sparc.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n "}, {"sha": "fe0e7cb3f866b0705af4fb399a8eadda72a3c430", "filename": "gcc/ada/system-linux-sparcv9.ads", "status": "removed", "additions": 0, "deletions": 147, "changes": 147, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-linux-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-linux-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-sparcv9.ads?ref=2300c332eb046581a8135dabf66b9e85afec65b7", "patch": "@@ -1,147 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                         (GNU/Linux-SPARCV9 Version)                      --\n---                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := Integer'Last;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.000_001;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := High_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   Max_Priority           : constant Positive := 30;\n-   Max_Interrupt_Priority : constant Positive := 31;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 31;\n-   subtype Priority           is Any_Priority range  0 .. 30;\n-   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n-\n-   Default_Priority : constant Priority := 15;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-end System;"}, {"sha": "22a212e265a2f0c81d4ea897cff07c2d9a1c7d7d", "filename": "gcc/ada/system-linux-x86.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                         (GNU-Linux/x86 Version)                          --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n "}, {"sha": "fa62b94b5f9be9dd97568aae674d9c4851c1efd2", "filename": "gcc/ada/system-linux-x86_64.ads", "status": "removed", "additions": 0, "deletions": 156, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-linux-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-linux-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86_64.ads?ref=2300c332eb046581a8135dabf66b9e85afec65b7", "patch": "@@ -1,156 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                       (GNU-Linux/x86-64 Version)                         --\n---                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.000_001;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := Standard'Word_Size;\n-   Memory_Size  : constant := 2 ** Word_Size;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   --  0 .. 98 corresponds to the system priority range 1 .. 99.\n-   --\n-   --  If the scheduling policy is SCHED_FIFO or SCHED_RR the runtime makes use\n-   --  of the entire range provided by the system.\n-   --\n-   --  If the scheduling policy is SCHED_OTHER the only valid system priority\n-   --  is 1 and other values are simply ignored.\n-\n-   Max_Priority           : constant Positive := 97;\n-   Max_Interrupt_Priority : constant Positive := 98;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 98;\n-   subtype Priority           is Any_Priority range  0 .. 97;\n-   subtype Interrupt_Priority is Any_Priority range 98 .. 98;\n-\n-   Default_Priority : constant Priority := 48;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-end System;"}, {"sha": "9dff0e2347b226331c11caba5d73c14dfdbe8296", "filename": "gcc/ada/system-mingw-x86_64.ads", "status": "removed", "additions": 0, "deletions": 200, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-mingw-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-mingw-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-mingw-x86_64.ads?ref=2300c332eb046581a8135dabf66b9e85afec65b7", "patch": "@@ -1,200 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                            (Windows Version)                             --\n---                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.01;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := Standard'Word_Size;\n-   Memory_Size  : constant := 2 ** Word_Size;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   Max_Priority           : constant Positive := 30;\n-   Max_Interrupt_Priority : constant Positive := 31;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 31;\n-   subtype Priority           is Any_Priority range  0 .. 30;\n-   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n-\n-   Default_Priority : constant Priority := 15;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-   ---------------------------\n-   -- Underlying Priorities --\n-   ---------------------------\n-\n-   --  Important note: this section of the file must come AFTER the\n-   --  definition of the system implementation parameters to ensure\n-   --  that the value of these parameters is available for analysis\n-   --  of the declarations here (using Rtsfind at compile time).\n-\n-   --  The underlying priorities table provides a generalized mechanism\n-   --  for mapping from Ada priorities to system priorities. In some\n-   --  cases a 1-1 mapping is not the convenient or optimal choice.\n-\n-   type Priorities_Mapping is array (Any_Priority) of Integer;\n-   pragma Suppress_Initialization (Priorities_Mapping);\n-   --  Suppress initialization in case gnat.adc specifies Normalize_Scalars\n-\n-   Underlying_Priorities : constant Priorities_Mapping :=\n-     (Priority'First ..\n-      Default_Priority - 8    => -15,\n-      Default_Priority - 7    => -7,\n-      Default_Priority - 6    => -6,\n-      Default_Priority - 5    => -5,\n-      Default_Priority - 4    => -4,\n-      Default_Priority - 3    => -3,\n-      Default_Priority - 2    => -2,\n-      Default_Priority - 1    => -1,\n-      Default_Priority        => 0,\n-      Default_Priority + 1    => 1,\n-      Default_Priority + 2    => 2,\n-      Default_Priority + 3    => 3,\n-      Default_Priority + 4    => 4,\n-      Default_Priority + 5    => 5,\n-      Default_Priority + 6 ..\n-      Priority'Last           => 6,\n-      Interrupt_Priority      => 15);\n-   --  The default mapping preserves the standard 31 priorities of the Ada\n-   --  model, but maps them using compression onto the 7 priority levels\n-   --  available in NT and on the 16 priority levels available in 2000/XP.\n-\n-   --  To replace the default values of the Underlying_Priorities mapping,\n-   --  copy this source file into your build directory, edit the file to\n-   --  reflect your desired behavior, and recompile using Makefile.adalib\n-   --  which can be found under the adalib directory of your gnat installation\n-\n-   pragma Linker_Options (\"-Wl,--stack=0x2000000\");\n-   --  This is used to change the default stack (32 MB) size for non tasking\n-   --  programs. We change this value for GNAT on Windows here because the\n-   --  binutils on this platform have switched to a too low value for Ada\n-   --  programs. Note that we also set the stack size for tasking programs in\n-   --  System.Task_Primitives.Operations.\n-\n-end System;"}, {"sha": "82b5d0cff908b874cfaa397a33e1d6648d2ec7b4", "filename": "gcc/ada/system-mingw.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-mingw.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                            (Windows Version)                             --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n "}, {"sha": "79614aaa5208147049953b18c173eb98a6ce93c8", "filename": "gcc/ada/system-solaris-sparc.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-solaris-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-solaris-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparc.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (SUN Solaris Version)                           --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n \n@@ -135,6 +135,7 @@ private\n    Stack_Check_Probes        : constant Boolean := True;\n    Stack_Check_Limits        : constant Boolean := False;\n    Support_Aggregates        : constant Boolean := True;\n+   Support_Atomic_Primitives : constant Boolean := True;\n    Support_Composite_Assign  : constant Boolean := True;\n    Support_Composite_Compare : constant Boolean := True;\n    Support_Long_Shifts       : constant Boolean := True;"}, {"sha": "1673979d7cb49cdd7d598bec5a9ae22b58d0b3aa", "filename": "gcc/ada/system-solaris-sparcv9.ads", "status": "removed", "additions": 0, "deletions": 148, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparcv9.ads?ref=2300c332eb046581a8135dabf66b9e85afec65b7", "patch": "@@ -1,148 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                        (Solaris Sparcv9 Version)                         --\n---                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.01;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := High_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   Max_Priority           : constant Positive := 30;\n-   Max_Interrupt_Priority : constant Positive := 31;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 31;\n-   subtype Priority           is Any_Priority range  0 .. 30;\n-   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n-\n-   Default_Priority : constant Priority := 15;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-end System;"}, {"sha": "d598fe9fa43b01d9a037a5c398edc68fd6d27dab", "filename": "gcc/ada/system-solaris-x86.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-solaris-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c354ab1fb22e031c69ff75e498eee0e70eaea40f/gcc%2Fada%2Fsystem-solaris-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-x86.ads?ref=c354ab1fb22e031c69ff75e498eee0e70eaea40f", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                          (x86 Solaris Version)                           --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -69,8 +69,8 @@ package System is\n    Null_Address : constant Address;\n \n    Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Word_Size;\n \n    --  Address comparison\n "}, {"sha": "33b293530ae486bfd28fc2ce78a595c35ba4967b", "filename": "gcc/ada/system-solaris-x86_64.ads", "status": "removed", "additions": 0, "deletions": 148, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-solaris-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2300c332eb046581a8135dabf66b9e85afec65b7/gcc%2Fada%2Fsystem-solaris-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-x86_64.ads?ref=2300c332eb046581a8135dabf66b9e85afec65b7", "patch": "@@ -1,148 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                        (x86-64 Solaris Version)                          --\n---                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   pragma No_Elaboration_Code_All;\n-   --  Allow the use of that restriction in units that WITH this unit\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.01;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 64;\n-   Memory_Size  : constant := 2 ** 64;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   Max_Priority           : constant Positive := 30;\n-   Max_Interrupt_Priority : constant Positive := 31;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 31;\n-   subtype Priority           is Any_Priority range  0 .. 30;\n-   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n-\n-   Default_Priority : constant Priority := 15;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := True;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := True;\n-   Stack_Check_Limits        : constant Boolean := False;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Atomic_Primitives : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Always_Compatible_Rep     : constant Boolean := False;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := True;\n-\n-end System;"}]}