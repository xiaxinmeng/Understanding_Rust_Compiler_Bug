{"sha": "8864590b7cad2b491407069d94068b65359e78c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg2NDU5MGI3Y2FkMmI0OTE0MDcwNjlkOTQwNjhiNjUzNTllNzhjMA==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-06-29T11:25:49Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-06-29T11:25:49Z"}, "message": "[testsuite/guality] Use line number vars in gdb-test\n\n2018-06-29  Tom de Vries  <tdevries@suse.de>\n\n\t* gcc.dg/guality/pr45882.c (foo): Add line number var for breakpoint\n\tline, and use it.\n\t* lib/gcc-dg.exp (get-absolute-line): Factor out of ...\n\t(process-message): ... here.\n\t* lib/gcc-gdb-test.exp (gdb-test): Use get-absolute-line.\n\nFrom-SVN: r262248", "tree": {"sha": "8ff29fbd2b41ad193dff51e7c21dcdc9ca3020c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ff29fbd2b41ad193dff51e7c21dcdc9ca3020c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8864590b7cad2b491407069d94068b65359e78c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8864590b7cad2b491407069d94068b65359e78c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8864590b7cad2b491407069d94068b65359e78c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8864590b7cad2b491407069d94068b65359e78c0/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f10efd4ee4d62d2d7a94e518a3873687399879e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f10efd4ee4d62d2d7a94e518a3873687399879e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f10efd4ee4d62d2d7a94e518a3873687399879e"}], "stats": {"total": 94, "additions": 60, "deletions": 34}, "files": [{"sha": "c7fef19358d427cfc9c0a71372f063359b951a19", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8864590b7cad2b491407069d94068b65359e78c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8864590b7cad2b491407069d94068b65359e78c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8864590b7cad2b491407069d94068b65359e78c0", "patch": "@@ -1,3 +1,11 @@\n+2018-06-29  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gcc.dg/guality/pr45882.c (foo): Add line number var for breakpoint\n+\tline, and use it.\n+\t* lib/gcc-dg.exp (get-absolute-line): Factor out of ...\n+\t(process-message): ... here.\n+\t* lib/gcc-gdb-test.exp (gdb-test): Use get-absolute-line.\n+\n 2018-06-29  Martin Liska  <mliska@suse.cz>\n \n         PR tree-optimization/86263"}, {"sha": "da9e2755590a2e3065ef0c7ac1a3894a0d9d80c6", "filename": "gcc/testsuite/gcc.dg/guality/pr45882.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8864590b7cad2b491407069d94068b65359e78c0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45882.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8864590b7cad2b491407069d94068b65359e78c0/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45882.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr45882.c?ref=8864590b7cad2b491407069d94068b65359e78c0", "patch": "@@ -9,11 +9,11 @@ volatile short int v;\n __attribute__((noinline,noclone,used)) int\n foo (int i, int j)\n {\n-  int b = i;\t\t/* { dg-final { gdb-test 16 \"b\" \"7\" } } */\n-  int c = i + 4;\t/* { dg-final { gdb-test 16 \"c\" \"11\" } } */\n-  int d = a[i];\t\t/* { dg-final { gdb-test 16 \"d\" \"112\" } } */\n-  int e = a[i + 6];\t/* { dg-final { gdb-test 16 \"e\" \"142\" } } */\n-  ++v;\n+  int b = i;\t\t/* { dg-final { gdb-test bpline \"b\" \"7\" } } */\n+  int c = i + 4;\t/* { dg-final { gdb-test bpline \"c\" \"11\" } } */\n+  int d = a[i];\t\t/* { dg-final { gdb-test bpline \"d\" \"112\" } } */\n+  int e = a[i + 6];\t/* { dg-final { gdb-test bpline \"e\" \"142\" } } */\n+  ++v;\t\t\t/* { dg-line bpline } */\n   return ++j;\n }\n "}, {"sha": "22065c7e3fed4c5d1edda71ffdfb7cf5bdc3d27d", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 45, "deletions": 28, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8864590b7cad2b491407069d94068b65359e78c0/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8864590b7cad2b491407069d94068b65359e78c0/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=8864590b7cad2b491407069d94068b65359e78c0", "patch": "@@ -1039,6 +1039,49 @@ proc dg-line { linenr varname } {\n     }\n }\n \n+# Get the absolute line number corresponding to:\n+# - a relative line number (a non-null useline is required), or\n+# - a line number variable reference.\n+# Argument 0 is the line number on which line was used\n+# Argument 1 is the relative line number or line number variable reference\n+#\n+proc get-absolute-line { useline line } {\n+    if { [regsub \"^\\.\\[+-\\](\\[0-9\\]+)$\" $line \"\\\\1\" num] && $useline != \"\" } {\n+\t# Handle relative line specification, .+1 or .-1 etc.\n+\tset num [expr $useline [string index $line 1] $num]\n+\treturn $num\n+    }\n+\n+    if { ! [regsub \"^(\\[a-zA-Z\\]\\[a-zA-Z0-9_\\]*)$\" $line \"\\\\1\" varname] } {\n+\treturn $line\n+    }\n+\n+    # Handle linenr variable defined by dg-line\n+    set org_varname $varname\n+    set varname \"saved_linenr_$varname\"\n+    eval global $varname\n+\n+    # Generate used-but-not-defined error.\n+    eval set var_defined [info exists $varname]\n+    if { ! $var_defined } {\n+\tif { \"$useline\" != \"\" } {\n+\t    error \"dg-line var $org_varname used at line $uselinenr, but not defined\"\n+\t} else {\n+\t    error \"dg-line var $org_varname used, but not defined\"\n+\t}\n+\treturn\n+    }\n+\n+    # Note that varname has been used.\n+    set varname_used \"used_$varname\"\n+    eval global $varname_used\n+    eval set $varname_used 1\n+\n+    # Get line number from var and use it.\n+    eval set num \\$$varname\n+    set line $num\n+}\n+\n # Modify the regular expression saved by a DejaGnu message directive to\n # include a prefix and to force the expression to match a single line.\n # MSGPROC is the procedure to call.\n@@ -1049,34 +1092,8 @@ proc process-message { msgproc msgprefix dgargs } {\n     upvar dg-messages dg-messages\n \n     if { [llength $dgargs] == 5 } {\n-\tif { [regsub \"^\\.\\[+-\\](\\[0-9\\]+)$\" [lindex $dgargs 4] \"\\\\1\" num] } {\n-\t    # Handle relative line specification, .+1 or .-1 etc.\n-\t    set num [expr [lindex $dgargs 0] [string index [lindex $dgargs 4] 1] $num]\n-\t    set dgargs [lreplace $dgargs 4 4 $num]\n-\t} elseif { [regsub \"^(\\[a-zA-Z\\]\\[a-zA-Z0-9_\\]*)$\" [lindex $dgargs 4] \"\\\\1\" varname] } {\n-\t    # Handle linenr variable defined by dg-line\n-\n-\t    set org_varname $varname\n-\t    set varname \"saved_linenr_$varname\"\n-\t    eval global $varname\n-\n-\t    # Generate used-but-not-defined error.\n-\t    eval set var_defined [info exists $varname]\n-\t    if { ! $var_defined } {\n-\t\tset linenr [expr [lindex $dgargs 0]]\n-\t\terror \"dg-line var $org_varname used at line $linenr, but not defined\"\n-\t\treturn\n-\t    }\n-\n-\t    # Note that varname has been used.\n-\t    set varname_used \"used_$varname\"\n-\t    eval global $varname_used\n-\t    eval set $varname_used 1\n-\n-\t    # Get line number from var and use it.\n-\t    eval set num \\$$varname\n-\t    set dgargs [lreplace $dgargs 4 4 $num]\n-\t}\n+\tset num [get-absolute-line [lindex $dgargs 0] [lindex $dgargs 4]]\n+\tset dgargs [lreplace $dgargs 4 4 $num]\n     }\n \n     # Process the dg- directive, including adding the regular expression"}, {"sha": "5457e7a793e00f22166de6daa9ddd70c37093b0f", "filename": "gcc/testsuite/lib/gcc-gdb-test.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8864590b7cad2b491407069d94068b65359e78c0/gcc%2Ftestsuite%2Flib%2Fgcc-gdb-test.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8864590b7cad2b491407069d94068b65359e78c0/gcc%2Ftestsuite%2Flib%2Fgcc-gdb-test.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-gdb-test.exp?ref=8864590b7cad2b491407069d94068b65359e78c0", "patch": "@@ -60,7 +60,8 @@ proc gdb-test { args } {\n     set cmd_file \"[file rootname [file tail $prog]].gdb\"\n \n     set fd [open $cmd_file \"w\"]\n-    puts $fd \"break [lindex $args 0]\"\n+    set line [get-absolute-line \"\" [lindex $args 0]]\n+    puts $fd \"break $line\"\n     puts $fd \"run\"\n     puts $fd \"$command $var\"\n     if { $command == \"print\" } {"}]}