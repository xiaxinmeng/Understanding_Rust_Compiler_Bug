{"sha": "c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFkMzRmOTA1MGY0YTQ0YjUyYWU0Yjk1YTEwYTFhOGQzYjQyMDYxYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-06-01T15:54:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-06-01T15:54:33Z"}, "message": "re PR c++/13092 (Accepts invalid pointer-to-member conversion)\n\n        PR c++/13092\n        * init.c (build_offset_ref): Build SCOPE_REF with non-null\n        TREE_TYPE for non-dependent names.\n        * pt.c (type_dependent_expression_p): Handle SCOPE_REF with\n        unknown_type_node as its TREE_TYPE.\n        * cxx-pretty_print.c (pp_cxx_unqualified_id): Handle BASELINK.\n        * error.c (dump_decl) <SCOPE_REF case>: Use pp_expression.\n        (dump_expr) <SCOPE_REF case>: Likewise.\n\nFrom-SVN: r82553", "tree": {"sha": "2c5a6e3f7c2f6957d79b50267b40c99537d58b30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c5a6e3f7c2f6957d79b50267b40c99537d58b30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a/comments", "author": null, "committer": null, "parents": [{"sha": "3ff2f9d1d1316c01f2880e6408116cdc5e928ae0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff2f9d1d1316c01f2880e6408116cdc5e928ae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ff2f9d1d1316c01f2880e6408116cdc5e928ae0"}], "stats": {"total": 87, "additions": 87, "deletions": 0}, "files": [{"sha": "369e137317c7dc1b8d4dced6d2b1da223455bbb2", "filename": "gcc/testsuite/g++.dg/template/non-dependent10.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent10.C?ref=c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+\n+// Origin: Giovanni Bajo <giovannibajo@libero.it>\n+\n+// Two-phase name lookup for address of member:\n+// Detecting error during parsing\n+\n+struct S\n+{\n+  char i;\n+};\n+\n+template<int S::*p>\n+struct X\n+{};\n+\n+template <class T>\n+struct Foo\n+{\n+  X<&S::i> x;\t// { dg-error \"convert|no type\" }\n+};"}, {"sha": "c046312d558c36b89c37e291736b533d56c0a6bc", "filename": "gcc/testsuite/g++.dg/template/non-dependent7.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent7.C?ref=c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a", "patch": "@@ -0,0 +1,22 @@\n+// { dg-do compile }\n+\n+// Origin: Giovanni Bajo <giovannibajo@libero.it>\n+\n+// Two-phase name lookup for address of member:\n+// Overloading function\n+\n+struct S\n+{\n+  int f();\n+  int f(int);\n+};\n+\n+template<int (S::*p)()>\n+struct X\n+{};\n+\n+template <class T>\n+struct Foo\n+{\n+  X<&S::f> x;\n+};"}, {"sha": "0adac25f08da97de9348c0a00b8fa8fb467acf51", "filename": "gcc/testsuite/g++.dg/template/non-dependent8.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent8.C?ref=c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a", "patch": "@@ -0,0 +1,22 @@\n+// { dg-do compile }\n+\n+// Origin: Giovanni Bajo <giovannibajo@libero.it>\n+\n+// Two-phase name lookup for address of member:\n+// Detecting overloading function error during parsing\n+\n+struct S\n+{\n+  int f(char);\n+  int f(int);\n+};\n+\n+template<int (S::*p)()>\n+struct X\n+{};\n+\n+template <class T>\n+struct Foo\n+{\n+  X<&S::f> x;\t// { dg-error \"convert|no type\" }\n+};"}, {"sha": "ee34327ad63b171b2f7ea0a36229956ffadf9ca9", "filename": "gcc/testsuite/g++.dg/template/non-dependent9.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-dependent9.C?ref=c1d34f9050f4a44b52ae4b95a10a1a8d3b42061a", "patch": "@@ -0,0 +1,22 @@\n+// { dg-do compile }\n+\n+// Origin: Giovanni Bajo <giovannibajo@libero.it>\n+\n+// PR c++/13092: ICE taking address of member which is non-dependent\n+\n+struct S\n+{\n+  int i;\n+};\n+\n+template<int S::*p>\n+struct X\n+{};\n+\n+template <class T>\n+struct Foo\n+{\n+  X<&S::i> x;\n+};\n+\n+template struct Foo<void>;"}]}