{"sha": "5a35fe64c7a89935599af3d4693494ca4578cd7f", "node_id": "C_kwDOANBUbNoAKDVhMzVmZTY0YzdhODk5MzU1OTlhZjNkNDY5MzQ5NGNhNDU3OGNkN2Y", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2021-11-26T09:49:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-12-02T16:26:29Z"}, "message": "[Ada] Fix obsolete array aggregate warning being triggered by expanded code\n\ngcc/ada/\n\n\t* sem_aggr.adb (Resolve_Array_Aggregate): Filter out nodes not\n\tcoming from source before emitting the warning.", "tree": {"sha": "da10a2074e56680f13e7f0bcdc125530b17032f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da10a2074e56680f13e7f0bcdc125530b17032f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a35fe64c7a89935599af3d4693494ca4578cd7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a35fe64c7a89935599af3d4693494ca4578cd7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a35fe64c7a89935599af3d4693494ca4578cd7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a35fe64c7a89935599af3d4693494ca4578cd7f/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3f89a4510031af1913f70aad9b3ba559d326fb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3f89a4510031af1913f70aad9b3ba559d326fb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3f89a4510031af1913f70aad9b3ba559d326fb0"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "6e76e3d3c4d973f6a3f887a89187088776f8f83a", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a35fe64c7a89935599af3d4693494ca4578cd7f/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a35fe64c7a89935599af3d4693494ca4578cd7f/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=5a35fe64c7a89935599af3d4693494ca4578cd7f", "patch": "@@ -1807,6 +1807,7 @@ package body Sem_Aggr is\n         and then not Is_Enum_Array_Aggregate (N)\n         and then Is_Parenthesis_Aggregate (N)\n         and then Nkind (Parent (N)) /= N_Qualified_Expression\n+        and then Comes_From_Source (N)\n       then\n          Error_Msg_N\n            (\"?j?array aggregate using () is an\" &"}]}