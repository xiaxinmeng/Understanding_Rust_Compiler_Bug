{"sha": "667c49250fe57f73728f51a828c4a6e483bd1b5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY3YzQ5MjUwZmU1N2Y3MzcyOGY1MWE4MjhjNGE2ZTQ4M2JkMWI1Yg==", "commit": {"author": {"name": "Igor Shevlyakov", "email": "igor@windriver.com", "date": "2001-06-03T22:17:11Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2001-06-03T22:17:11Z"}, "message": "sh.c (output_branch): Support for insn with lenght attr 12 & 16 which represents cond branches...\n\n* config/sh/sh.c (output_branch): Support for insn with lenght\nattr 12 & 16 which represents cond branches outside +-4096 range.\n\nFrom-SVN: r42835", "tree": {"sha": "fe263a8412f9622fe6753493062d188712bb3a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe263a8412f9622fe6753493062d188712bb3a8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/667c49250fe57f73728f51a828c4a6e483bd1b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667c49250fe57f73728f51a828c4a6e483bd1b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/667c49250fe57f73728f51a828c4a6e483bd1b5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667c49250fe57f73728f51a828c4a6e483bd1b5b/comments", "author": null, "committer": null, "parents": [{"sha": "9d4d725bb817be97593d5f5bf345b55ee5e93427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d4d725bb817be97593d5f5bf345b55ee5e93427", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d4d725bb817be97593d5f5bf345b55ee5e93427"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "a85c01f319aaa7f7a2af99c79e3031aab518e1c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/667c49250fe57f73728f51a828c4a6e483bd1b5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/667c49250fe57f73728f51a828c4a6e483bd1b5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=667c49250fe57f73728f51a828c4a6e483bd1b5b", "patch": "@@ -1,3 +1,8 @@\n+2001-06-03  Igor Shevlyakov  <igor@windriver.com>\n+\n+\t* config/sh/sh.c (output_branch): Support for insn with lenght\n+\tattr 12 & 16 which represents cond branches outside +-4096 range.\n+\n 2001-06-03  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/sh/lib1funcs.asm (ic_invalidate): Align the"}, {"sha": "9c4924e53a87887e22ba541934bf07b70b6fb2f8", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/667c49250fe57f73728f51a828c4a6e483bd1b5b/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/667c49250fe57f73728f51a828c4a6e483bd1b5b/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=667c49250fe57f73728f51a828c4a6e483bd1b5b", "patch": "@@ -799,8 +799,12 @@ output_branch (logic, insn, operands)\n      rtx insn;\n      rtx *operands;\n {\n-  switch (get_attr_length (insn))\n+  int len = get_attr_length (insn);\n+\n+  switch (len)\n     {\n+    case 16:\n+    case 12:\n     case 6:\n       /* This can happen if filling the delay slot has caused a forward\n \t branch to exceed its range (we could reverse it, but only\n@@ -823,16 +827,24 @@ output_branch (logic, insn, operands)\n \t  if (final_sequence\n \t      && ! INSN_ANNULLED_BRANCH_P (XVECEXP (final_sequence, 0, 0)))\n \t    {\n-\t      asm_fprintf (asm_out_file, \"\\tb%s%ss\\t%LLF%d\\n\", logic ? \"f\" : \"t\",\n+\t      asm_fprintf (asm_out_file, \"\\tb%s%ss\\t%LLF%d\\n\",\n+\t\t\t   logic ? \"f\" : \"t\",\n \t                   ASSEMBLER_DIALECT ? \"/\" : \".\", label);\n \t      print_slot (final_sequence);\n \t    }\n \t  else\n-\t    asm_fprintf (asm_out_file, \"\\tb%s\\t%LLF%d\\n\", logic ? \"f\" : \"t\", label);\n+\t    asm_fprintf (asm_out_file, \"\\tb%s\\t%LLF%d\\n\", logic ? \"f\" : \"t\",\n+\t\t\t label);\n     \n-\t  output_asm_insn (\"bra\\t%l0\", &op0);\n-\t  fprintf (asm_out_file, \"\\tnop\\n\");\n-\t  ASM_OUTPUT_INTERNAL_LABEL(asm_out_file, \"LF\", label);\n+\t  if (len == 6)\n+\t    {\n+\t      output_asm_insn (\"bra\\t%l0\", &op0);\n+\t      fprintf (asm_out_file, \"\\tnop\\n\");\n+\t    }\n+\t  else\n+\t    output_far_jump (insn, op0);\n+\n+\t  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"LF\", label);\n     \n \t  return \"\";\n \t}"}]}