{"sha": "0d806438807541d31a759f687279e704ad103609", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ4MDY0Mzg4MDc1NDFkMzFhNzU5ZjY4NzI3OWU3MDRhZDEwMzYwOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-02-05T21:30:51Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-02-05T21:30:51Z"}, "message": "PR c++/89158 - by-value capture of constexpr variable broken.\n\n\t* call.c (convert_like_real) <case ck_user>: Call mark_exp_read\n\tinstead of mark_rvalue_use.\n\n\t* g++.dg/cpp0x/lambda/lambda-89158.C: New test.\n\nFrom-SVN: r268561", "tree": {"sha": "a954187353070a2b08aa7342f80baed4a15c1079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a954187353070a2b08aa7342f80baed4a15c1079"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d806438807541d31a759f687279e704ad103609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d806438807541d31a759f687279e704ad103609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d806438807541d31a759f687279e704ad103609", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d806438807541d31a759f687279e704ad103609/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b81e1cd506ad06e4eb0a658d26119129d110a5a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b81e1cd506ad06e4eb0a658d26119129d110a5a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b81e1cd506ad06e4eb0a658d26119129d110a5a9"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "8ebbc1266ed939664a0e66ea030a8cc95a771c16", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d806438807541d31a759f687279e704ad103609/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d806438807541d31a759f687279e704ad103609/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0d806438807541d31a759f687279e704ad103609", "patch": "@@ -1,3 +1,9 @@\n+2019-02-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89158 - by-value capture of constexpr variable broken.\n+\t* call.c (convert_like_real) <case ck_user>: Call mark_exp_read\n+\tinstead of mark_rvalue_use.\n+\n 2019-02-05  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR c++/87770"}, {"sha": "18b813866c80201070964b536b652293cf699ff0", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d806438807541d31a759f687279e704ad103609/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d806438807541d31a759f687279e704ad103609/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=0d806438807541d31a759f687279e704ad103609", "patch": "@@ -7006,7 +7006,9 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t    return expr;\n \t  }\n \n-\texpr = mark_rvalue_use (expr);\n+\t/* We don't know here whether EXPR is being used as an lvalue or\n+\t   rvalue, but we know it's read.  */\n+\tmark_exp_read (expr);\n \n \t/* Pass LOOKUP_NO_CONVERSION so rvalue/base handling knows not to allow\n \t   any more UDCs.  */"}, {"sha": "71ea366199582d6cf47aada09582509e61cd7cca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d806438807541d31a759f687279e704ad103609/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d806438807541d31a759f687279e704ad103609/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d806438807541d31a759f687279e704ad103609", "patch": "@@ -1,3 +1,8 @@\n+2019-02-05  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/89158 - by-value capture of constexpr variable broken.\n+\t* g++.dg/cpp0x/lambda/lambda-89158.C: New test.\n+\n 2019-02-05  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* gcc.dg/vect/pr84711.c: Use -Wno-psabi."}, {"sha": "15f15b468754d3e881a8542dc3ae918d67426b27", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-89158.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d806438807541d31a759f687279e704ad103609/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-89158.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d806438807541d31a759f687279e704ad103609/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-89158.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-89158.C?ref=0d806438807541d31a759f687279e704ad103609", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/89158\n+// { dg-do compile { target c++11 } }\n+\n+struct T { T(const int&); };\n+void Func(T);\n+\n+void test()\n+{\n+  constexpr int Val = 42;\n+  [Val]() { Func(Val); };\n+}"}]}