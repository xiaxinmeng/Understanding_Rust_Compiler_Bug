{"sha": "220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIwYzVmMGM3Zjc1ZjU1NmEzN2YwYjhhZTI1YzFmNWEzYTY5MjQwZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-09-20T20:41:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-09-20T20:41:08Z"}, "message": "re PR rtl-optimization/45728 (ICE: in gen_lowpart_general, at rtlhooks.c:59 at -O1 when comparing union members)\n\n\tPR rtl-optimization/45728\n\t* expr.c (expand_expr_real_1): If op0 isn't REG or MEM, try\n\tgen_lowpart_common first and if that fails, force_reg first\n\tbefore calling gen_lowpart.\n\n\t* gcc.c-torture/compile/pr45728.c: New test.\n\nFrom-SVN: r164456", "tree": {"sha": "fd6859a437a2904175c94cfdd0e4b0b0a34c9f46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd6859a437a2904175c94cfdd0e4b0b0a34c9f46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a7a6af67e6311a427052ef6fc21f6df72be7b51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a7a6af67e6311a427052ef6fc21f6df72be7b51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a7a6af67e6311a427052ef6fc21f6df72be7b51"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "cad3a439a6af5a4ae81a24c455016067ecea61e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f", "patch": "@@ -1,5 +1,10 @@\n 2010-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/45728\n+\t* expr.c (expand_expr_real_1): If op0 isn't REG or MEM, try\n+\tgen_lowpart_common first and if that fails, force_reg first\n+\tbefore calling gen_lowpart.\n+\n \tPR middle-end/45678\n \t* cfgexpand.c (expand_one_stack_var_at): Use\n \tcrtl->max_used_stack_slot_alignment as max_align, instead"}, {"sha": "6b56383f24974d2fdd22543cfcdf37f75eab605e", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f", "patch": "@@ -9381,7 +9381,15 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t{\n \t  if (GET_CODE (op0) == SUBREG)\n \t    op0 = force_reg (GET_MODE (op0), op0);\n-\t  op0 = gen_lowpart (mode, op0);\n+\t  temp = gen_lowpart_common (mode, op0);\n+\t  if (temp)\n+\t    op0 = temp;\n+\t  else\n+\t    {\n+\t      if (!REG_P (op0) && !MEM_P (op0))\n+\t\top0 = force_reg (GET_MODE (op0), op0);\n+\t      op0 = gen_lowpart (mode, op0);\n+\t    }\n \t}\n       /* If both types are integral, convert from one mode to the other.  */\n       else if (INTEGRAL_TYPE_P (type) && INTEGRAL_TYPE_P (TREE_TYPE (treeop0)))"}, {"sha": "13d783d058c0ca2549259d86d14e8cd43fb8487f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f", "patch": "@@ -1,3 +1,8 @@\n+2010-09-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/45728\n+\t* gcc.c-torture/compile/pr45728.c: New test.\n+\n 2010-09-20  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/45081"}, {"sha": "a6ee10b8cd18f99aeb96d68bda22408710f3d362", "filename": "gcc/testsuite/gcc.c-torture/compile/pr45728.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr45728.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr45728.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr45728.c?ref=220c5f0c7f75f556a37f0b8ae25c1f5a3a69240f", "patch": "@@ -0,0 +1,17 @@\n+/* PR rtl-optimization/45728 */\n+\n+union U\n+{\n+  int *m;\n+  double d;\n+};\n+\n+int i;\n+union U u;\n+\n+int\n+foo (void)\n+{\n+  union U v = { &i };\n+  return u.d == v.d;\n+}"}]}