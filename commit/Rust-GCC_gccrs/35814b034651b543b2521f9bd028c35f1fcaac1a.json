{"sha": "35814b034651b543b2521f9bd028c35f1fcaac1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU4MTRiMDM0NjUxYjU0M2IyNTIxZjliZDAyOGMzNWYxZmNhYWMxYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-11-29T12:30:36Z"}, "committer": {"name": "Yury Gribov", "email": "ygribov@gcc.gnu.org", "date": "2013-11-29T12:30:36Z"}, "message": "re PR sanitizer/59063 (ASAN: segfault in __interceptor_clock_gettime)\n\ngcc/\n2013-11-29  Jakub Jelinek  <jakub@redhat.com>\n            Yury Gribov  <y.gribov@samsung.com>\n\n        PR sanitizer/59063\n        * config/gnu-user.h: Removed old code for setting up sanitizer\n        libs.\n        * gcc.c: Using libsanitizer spec instead of explicit libs.\n\ngcc/testsuite/\n2013-11-29  Jakub Jelinek  <jakub@redhat.com>\n            Yury Gribov  <y.gribov@samsung.com>\n\n        PR sanitizer/59063\n        * c-c++-common/asan/pr59063-1.c: New test.\n        * c-c++-common/asan/pr59063-2.c: Likewise.\n        * lib/asan-dg.exp: Add path to libsanitizer.spec to cflags.\n        * lib/ubsan-dg.exp: Likewise.\n\nlibsanitizer/\n2013-11-29  Jakub Jelinek  <jakub@redhat.com>\n            Yury Gribov  <y.gribov@samsung.com>\n\n        PR sanitizer/59063\n        * libsanitizer.spec.in: Add spec file to hold link flags for\n        various sanitizer libs.\n        * configure.ac: Check whether clock_* routines come from librt.\n        * asan/Makefile.am (libasan_la_LDFLAGS): Libs now come from\n        configure.ac.\n        * tsan/Makefile.am (libtsan_la_LDFLAGS): Likewise.\n        * ubsan/Makefile.am (libubsan_la_LDFLAGS): Likewise.\n        * lsan/Makefile.am (liblsan_la_LDFLAGS): Likewise.\n        * asan/Makefile.in: Regenerate.\n        * interception/Makefile.in: Regenerate.\n        * lsan/Makefile.in: Regenerate.\n        * sanitizer_common/Makefile.in: Regenerate.\n        * tsan/Makefile.in: Regenerate.\n        * ubsan/Makefile.in: Regenerate.\n        * Makefile.in: Regenerate.\n        * configure: Regenerate.\n\n\nCo-Authored-By: Yury Gribov <y.gribov@samsung.com>\n\nFrom-SVN: r205524", "tree": {"sha": "0cc2ab434efd00fd5b66854aa66871625d4c011b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cc2ab434efd00fd5b66854aa66871625d4c011b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35814b034651b543b2521f9bd028c35f1fcaac1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35814b034651b543b2521f9bd028c35f1fcaac1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35814b034651b543b2521f9bd028c35f1fcaac1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35814b034651b543b2521f9bd028c35f1fcaac1a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08c5a7c685a97e0870fe278a1113523763b7af5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c5a7c685a97e0870fe278a1113523763b7af5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c5a7c685a97e0870fe278a1113523763b7af5f"}], "stats": {"total": 393, "additions": 318, "deletions": 75}, "files": [{"sha": "33fa1590e647bb6e182b4c443b6a8a28a96def76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -1,3 +1,11 @@\n+2013-11-29  Jakub Jelinek  <jakub@redhat.com>\n+\t    Yury Gribov  <y.gribov@samsung.com>\n+\n+\tPR sanitizer/59063\n+\t* config/gnu-user.h: Removed old code for setting up sanitizer\n+\tlibs.\n+\t* gcc.c: Using libsanitizer spec instead of explicit libs.\n+\n 2013-11-29  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tReverted:"}, {"sha": "60eb30dd1279768bff5821260139eea4cbfbcc9b", "filename": "gcc/config/gnu-user.h", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Fconfig%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Fconfig%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu-user.h?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -126,19 +126,3 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n   LD_STATIC_OPTION \" --whole-archive -ltsan --no-whole-archive \" \\\n   LD_DYNAMIC_OPTION \"}}%{!static-libtsan:-ltsan}\"\n #endif\n-\n-/* Additional libraries needed by -static-libasan.  */\n-#undef STATIC_LIBASAN_LIBS\n-#define STATIC_LIBASAN_LIBS \"-ldl -lpthread\"\n-\n-/* Additional libraries needed by -static-libtsan.  */\n-#undef STATIC_LIBTSAN_LIBS\n-#define STATIC_LIBTSAN_LIBS \"-ldl -lpthread\"\n-\n-/* Additional libraries needed by -static-liblsan.  */\n-#undef STATIC_LIBLSAN_LIBS\n-#define STATIC_LIBLSAN_LIBS \"-ldl -lpthread\"\n-\n-/* Additional libraries needed by -static-libubsan.  */\n-#undef STATIC_LIBUBSAN_LIBS\n-#define STATIC_LIBUBSAN_LIBS \"-ldl -lpthread\""}, {"sha": "b895f226ad0e497052e0e5de0744d621913babc1", "filename": "gcc/gcc.c", "status": "modified", "additions": 18, "deletions": 34, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -535,20 +535,16 @@ proper position among the other output files.  */\n #define STACK_SPLIT_SPEC \" %{fsplit-stack: --wrap=pthread_create}\"\n \n #ifndef LIBASAN_SPEC\n-#ifdef STATIC_LIBASAN_LIBS\n-#define ADD_STATIC_LIBASAN_LIBS \\\n-  \" %{static-libasan:\" STATIC_LIBASAN_LIBS \"}\"\n-#else\n-#define ADD_STATIC_LIBASAN_LIBS\n-#endif\n+#define STATIC_LIBASAN_LIBS \\\n+  \" %{static-libasan:%:include(libsanitizer.spec)%(link_libasan)}\"\n #ifdef LIBASAN_EARLY_SPEC\n-#define LIBASAN_SPEC ADD_STATIC_LIBASAN_LIBS\n+#define LIBASAN_SPEC STATIC_LIBASAN_LIBS\n #elif defined(HAVE_LD_STATIC_DYNAMIC)\n #define LIBASAN_SPEC \"%{static-libasan:\" LD_STATIC_OPTION \\\n \t\t     \"} -lasan %{static-libasan:\" LD_DYNAMIC_OPTION \"}\" \\\n-\t\t     ADD_STATIC_LIBASAN_LIBS\n+\t\t     STATIC_LIBASAN_LIBS\n #else\n-#define LIBASAN_SPEC \"-lasan\" ADD_STATIC_LIBASAN_LIBS\n+#define LIBASAN_SPEC \"-lasan\" STATIC_LIBASAN_LIBS\n #endif\n #endif\n \n@@ -557,20 +553,16 @@ proper position among the other output files.  */\n #endif\n \n #ifndef LIBTSAN_SPEC\n-#ifdef STATIC_LIBTSAN_LIBS\n-#define ADD_STATIC_LIBTSAN_LIBS \\\n-  \" %{static-libtsan:\" STATIC_LIBTSAN_LIBS \"}\"\n-#else\n-#define ADD_STATIC_LIBTSAN_LIBS\n-#endif\n+#define STATIC_LIBTSAN_LIBS \\\n+  \" %{static-libtsan:%:include(libsanitizer.spec)%(link_libtsan)}\"\n #ifdef LIBTSAN_EARLY_SPEC\n-#define LIBTSAN_SPEC ADD_STATIC_LIBTSAN_LIBS\n+#define LIBTSAN_SPEC STATIC_LIBTSAN_LIBS\n #elif defined(HAVE_LD_STATIC_DYNAMIC)\n #define LIBTSAN_SPEC \"%{static-libtsan:\" LD_STATIC_OPTION \\\n \t\t     \"} -ltsan %{static-libtsan:\" LD_DYNAMIC_OPTION \"}\" \\\n-\t\t     ADD_STATIC_LIBTSAN_LIBS\n+\t\t     STATIC_LIBTSAN_LIBS\n #else\n-#define LIBTSAN_SPEC \"-ltsan\" ADD_STATIC_LIBTSAN_LIBS\n+#define LIBTSAN_SPEC \"-ltsan\" STATIC_LIBTSAN_LIBS\n #endif\n #endif\n \n@@ -579,34 +571,26 @@ proper position among the other output files.  */\n #endif\n \n #ifndef LIBLSAN_SPEC\n-#ifdef STATIC_LIBLSAN_LIBS\n-#define ADD_STATIC_LIBLSAN_LIBS \\\n-  \" %{static-liblsan:\" STATIC_LIBLSAN_LIBS \"}\"\n-#else\n-#define ADD_STATIC_LIBLSAN_LIBS\n-#endif\n+#define STATIC_LIBLSAN_LIBS \\\n+  \" %{static-liblsan:%:include(libsanitizer.spec)%(link_liblsan)}\"\n #ifdef HAVE_LD_STATIC_DYNAMIC\n #define LIBLSAN_SPEC \"%{!shared:%{static-liblsan:\" LD_STATIC_OPTION \\\n \t\t     \"} -llsan %{static-liblsan:\" LD_DYNAMIC_OPTION \"}\" \\\n-\t\t     ADD_STATIC_LIBLSAN_LIBS \"}\"\n+\t\t     STATIC_LIBLSAN_LIBS \"}\"\n #else\n-#define LIBLSAN_SPEC \"%{!shared:-llsan\" ADD_STATIC_LIBLSAN_LIBS \"}\"\n+#define LIBLSAN_SPEC \"%{!shared:-llsan\" STATIC_LIBLSAN_LIBS \"}\"\n #endif\n #endif\n \n #ifndef LIBUBSAN_SPEC\n-#ifdef STATIC_LIBUBSAN_LIBS\n-#define ADD_STATIC_LIBUBSAN_LIBS \\\n-  \" %{static-libubsan:\" STATIC_LIBUBSAN_LIBS \"}\"\n-#else\n-#define ADD_STATIC_LIBUBSAN_LIBS\n-#endif\n+#define STATIC_LIBUBSAN_LIBS \\\n+  \" %{static-libubsan:%:include(libsanitizer.spec)%(link_libubsan)}\"\n #ifdef HAVE_LD_STATIC_DYNAMIC\n #define LIBUBSAN_SPEC \"%{static-libubsan:\" LD_STATIC_OPTION \\\n \t\t     \"} -lubsan %{static-libubsan:\" LD_DYNAMIC_OPTION \"}\" \\\n-\t\t     ADD_STATIC_LIBUBSAN_LIBS\n+\t\t     STATIC_LIBUBSAN_LIBS\n #else\n-#define LIBUBSAN_SPEC \"-lubsan\" ADD_STATIC_LIBUBSAN_LIBS\n+#define LIBUBSAN_SPEC \"-lubsan\" STATIC_LIBUBSAN_LIBS\n #endif\n #endif\n "}, {"sha": "75ccd0138089042074a3dfb073e60a740fb33ffe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -1,3 +1,12 @@\n+2013-11-29  Jakub Jelinek  <jakub@redhat.com>\n+\t    Yury Gribov  <y.gribov@samsung.com>\n+\n+\tPR sanitizer/59063\n+\t* c-c++-common/asan/pr59063-1.c: New test.\n+\t* c-c++-common/asan/pr59063-2.c: Likewise.\n+\t* lib/asan-dg.exp: Add path to libsanitizer.spec to cflags.\n+\t* lib/ubsan-dg.exp: Likewise.\n+\n 2013-11-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/opt29.ad[sb]: New test."}, {"sha": "a4e01f76f3a96f9536780da74ec86f9223ea7181", "filename": "gcc/testsuite/c-c++-common/asan/pr59063-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr59063-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr59063-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr59063-1.c?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do run } */\n+\n+#include <time.h>\n+static int weak_gettime (clockid_t clk_id, struct timespec *tp)\n+  __attribute__((__weakref__(\"clock_gettime\")));\n+int main() {\n+  if (!clock_gettime)\n+    return 0;\n+  struct timespec ts;\n+  return weak_gettime(CLOCK_MONOTONIC, &ts);\n+}"}, {"sha": "64354ea7831338edbd028642ae2ab2a596493af1", "filename": "gcc/testsuite/c-c++-common/asan/pr59063-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr59063-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr59063-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr59063-2.c?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do run } */\n+/* { dg-options \"-static-libasan\" } */\n+\n+#include <time.h>\n+static int weak_gettime (clockid_t clk_id, struct timespec *tp)\n+  __attribute__((__weakref__(\"clock_gettime\")));\n+int main() {\n+  if (!clock_gettime)\n+    return 0;\n+  struct timespec ts;\n+  return weak_gettime(CLOCK_MONOTONIC, &ts);\n+}"}, {"sha": "823265ccb84a1b57b66c8716c1dc3d3efdbeefce", "filename": "gcc/testsuite/lib/asan-dg.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Ftestsuite%2Flib%2Fasan-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Ftestsuite%2Flib%2Fasan-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fasan-dg.exp?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -39,9 +39,9 @@ proc asan_link_flags { paths } {\n     set shlib_ext [get_shlib_extension]\n \n     if { $gccpath != \"\" } {\n+      append flags \" -B${gccpath}/libsanitizer/asan/ \"\n       if { [file exists \"${gccpath}/libsanitizer/asan/.libs/libasan.a\"]\n \t   || [file exists \"${gccpath}/libsanitizer/asan/.libs/libasan.${shlib_ext}\"] } {\n-\t  append flags \" -B${gccpath}/libsanitizer/asan/ \"\n \t  append flags \" -L${gccpath}/libsanitizer/asan/.libs \"\n \t  append ld_library_path \":${gccpath}/libsanitizer/asan/.libs\"\n       }"}, {"sha": "2e6b272822dbaa30edf5d5fff13a152331eca5af", "filename": "gcc/testsuite/lib/ubsan-dg.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Ftestsuite%2Flib%2Fubsan-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/gcc%2Ftestsuite%2Flib%2Fubsan-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fubsan-dg.exp?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -30,9 +30,9 @@ proc ubsan_link_flags { paths } {\n     set shlib_ext [get_shlib_extension]\n \n     if { $gccpath != \"\" } {\n+      append flags \" -B${gccpath}/libsanitizer/ubsan/ \"\n       if { [file exists \"${gccpath}/libsanitizer/ubsan/.libs/libubsan.a\"]\n \t   || [file exists \"${gccpath}/libsanitizer/ubsan/.libs/libubsan.${shlib_ext}\"] } {\n-\t  append flags \" -B${gccpath}/libsanitizer/ubsan/ \"\n \t  append flags \" -L${gccpath}/libsanitizer/ubsan/.libs\"\n \t  append ld_library_path \":${gccpath}/libsanitizer/ubsan/.libs\"\n       }"}, {"sha": "8404d51a053f5d5eae00dea95558c76397e17b48", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -1,3 +1,24 @@\n+2013-11-29  Jakub Jelinek  <jakub@redhat.com>\n+\t    Yury Gribov  <y.gribov@samsung.com>\n+\n+\tPR sanitizer/59063\n+\t* libsanitizer.spec.in: Add spec file to hold link flags for\n+\tvarious sanitizer libs.\n+\t* configure.ac: Check whether clock_* routines come from librt.\n+\t* asan/Makefile.am (libasan_la_LDFLAGS): Libs now come from\n+\tconfigure.ac.\n+\t* tsan/Makefile.am (libtsan_la_LDFLAGS): Likewise.\n+\t* ubsan/Makefile.am (libubsan_la_LDFLAGS): Likewise.\n+\t* lsan/Makefile.am (liblsan_la_LDFLAGS): Likewise.\n+\t* asan/Makefile.in: Regenerate.\n+\t* interception/Makefile.in: Regenerate.\n+\t* lsan/Makefile.in: Regenerate.\n+\t* sanitizer_common/Makefile.in: Regenerate.\n+\t* tsan/Makefile.in: Regenerate.\n+\t* ubsan/Makefile.in: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2013-11-28  Jakub Jelinek  <jakub@redhat.com>\n \t    Yury Gribov  <y.gribov@samsung.com>\n "}, {"sha": "6c3e5b053a2dd2365efb6e9e4c363cf20e1de547", "filename": "libsanitizer/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.am?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -50,5 +50,7 @@ AM_MAKEFLAGS = \\\n \n MAKEOVERRIDES=\n \n+nodist_toolexeclib_HEADERS = libsanitizer.spec\n+\n ## ################################################################\n "}, {"sha": "9424c59fe3741c154ca4e9cfcc616ed9f7fce453", "filename": "libsanitizer/Makefile.in", "status": "modified", "additions": 67, "deletions": 11, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.in?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -14,6 +14,7 @@\n # PARTICULAR PURPOSE.\n \n @SET_MAKE@\n+\n VPATH = @srcdir@\n pkgdatadir = $(datadir)/@PACKAGE@\n pkgincludedir = $(includedir)/@PACKAGE@\n@@ -37,7 +38,7 @@ target_triplet = @target@\n subdir = .\n DIST_COMMON = ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n-\t$(srcdir)/../mkinstalldirs\n+\t$(srcdir)/../mkinstalldirs $(srcdir)/libsanitizer.spec.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n@@ -54,7 +55,7 @@ am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n  configure.lineno config.status.lineno\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n-CONFIG_CLEAN_FILES =\n+CONFIG_CLEAN_FILES = libsanitizer.spec\n CONFIG_CLEAN_VPATH_FILES =\n SOURCES =\n MULTISRCTOP = \n@@ -70,6 +71,29 @@ RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\\n \tinstall-pdf-recursive install-ps-recursive install-recursive \\\n \tinstallcheck-recursive installdirs-recursive pdf-recursive \\\n \tps-recursive uninstall-recursive\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n+HEADERS = $(nodist_toolexeclib_HEADERS)\n RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive\t\\\n   distclean-recursive maintainer-clean-recursive\n AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\\n@@ -183,6 +207,10 @@ infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n+link_libasan = @link_libasan@\n+link_liblsan = @link_liblsan@\n+link_libtsan = @link_libtsan@\n+link_libubsan = @link_libubsan@\n localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n@@ -252,6 +280,7 @@ AM_MAKEFLAGS = \\\n \t\"DESTDIR=$(DESTDIR)\"\n \n MAKEOVERRIDES = \n+nodist_toolexeclib_HEADERS = libsanitizer.spec\n all: all-recursive\n \n .SUFFIXES:\n@@ -289,6 +318,8 @@ $(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n \t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n $(am__aclocal_m4_deps):\n+libsanitizer.spec: $(top_builddir)/config.status $(srcdir)/libsanitizer.spec.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $@\n \n mostlyclean-libtool:\n \t-rm -f *.lo\n@@ -315,6 +346,26 @@ distclean-multi:\n \t$(MULTICLEAN) $(AM_MAKEFLAGS) DO=distclean multi-clean # $(MAKE)\n maintainer-clean-multi:\n \t$(MULTICLEAN) $(AM_MAKEFLAGS) DO=maintainer-clean multi-clean # $(MAKE)\n+install-nodist_toolexeclibHEADERS: $(nodist_toolexeclib_HEADERS)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(toolexeclibdir)\" || $(MKDIR_P) \"$(DESTDIR)$(toolexeclibdir)\"\n+\t@list='$(nodist_toolexeclib_HEADERS)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  echo \"$$d$$p\"; \\\n+\tdone | $(am__base_list) | \\\n+\twhile read files; do \\\n+\t  echo \" $(INSTALL_HEADER) $$files '$(DESTDIR)$(toolexeclibdir)'\"; \\\n+\t  $(INSTALL_HEADER) $$files \"$(DESTDIR)$(toolexeclibdir)\" || exit $$?; \\\n+\tdone\n+\n+uninstall-nodist_toolexeclibHEADERS:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(nodist_toolexeclib_HEADERS)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n+\ttest -n \"$$files\" || exit 0; \\\n+\techo \" ( cd '$(DESTDIR)$(toolexeclibdir)' && rm -f\" $$files \")\"; \\\n+\tcd \"$(DESTDIR)$(toolexeclibdir)\" && rm -f $$files\n \n # This directory's subdirectories are mostly independent; you can cd\n # into them and run `make' without going through this Makefile.\n@@ -452,9 +503,12 @@ distclean-tags:\n \t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n check-am: all-am\n check: check-recursive\n-all-am: Makefile all-multi\n+all-am: Makefile all-multi $(HEADERS)\n installdirs: installdirs-recursive\n installdirs-am:\n+\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n install: install-recursive\n install-exec: install-exec-recursive\n install-data: install-data-recursive\n@@ -508,7 +562,7 @@ install-dvi: install-dvi-recursive\n \n install-dvi-am:\n \n-install-exec-am: install-multi\n+install-exec-am: install-multi install-nodist_toolexeclibHEADERS\n \n install-html: install-html-recursive\n \n@@ -548,7 +602,7 @@ ps: ps-recursive\n \n ps-am:\n \n-uninstall-am:\n+uninstall-am: uninstall-nodist_toolexeclibHEADERS\n \n .MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all-multi \\\n \tclean-multi ctags-recursive distclean-multi install-am \\\n@@ -563,12 +617,14 @@ uninstall-am:\n \tinstall-am install-data install-data-am install-dvi \\\n \tinstall-dvi-am install-exec install-exec-am install-html \\\n \tinstall-html-am install-info install-info-am install-man \\\n-\tinstall-multi install-pdf install-pdf-am install-ps \\\n-\tinstall-ps-am install-strip installcheck installcheck-am \\\n-\tinstalldirs installdirs-am maintainer-clean \\\n-\tmaintainer-clean-generic maintainer-clean-multi mostlyclean \\\n-\tmostlyclean-generic mostlyclean-libtool mostlyclean-multi pdf \\\n-\tpdf-am ps ps-am tags tags-recursive uninstall uninstall-am\n+\tinstall-multi install-nodist_toolexeclibHEADERS install-pdf \\\n+\tinstall-pdf-am install-ps install-ps-am install-strip \\\n+\tinstallcheck installcheck-am installdirs installdirs-am \\\n+\tmaintainer-clean maintainer-clean-generic \\\n+\tmaintainer-clean-multi mostlyclean mostlyclean-generic \\\n+\tmostlyclean-libtool mostlyclean-multi pdf pdf-am ps ps-am tags \\\n+\ttags-recursive uninstall uninstall-am \\\n+\tuninstall-nodist_toolexeclibHEADERS\n \n \n # Tell versions [3.59,3.63) of GNU make to not export all variables."}, {"sha": "58defae04b719068b977714803be18af3b489adc", "filename": "libsanitizer/asan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fasan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fasan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.am?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -43,7 +43,7 @@ libasan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(to\n endif\n libasan_la_LIBADD += $(LIBSTDCXX_RAW_CXX_LDFLAGS)\n \n-libasan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n+libasan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(link_libasan)\n \n libasan_preinit.o: asan_preinit.o\n \tcp $< $@"}, {"sha": "e86d7b5b34bdd231537940898706e3546c7442ed", "filename": "libsanitizer/asan/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fasan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fasan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.in?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -224,6 +224,10 @@ infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n+link_libasan = @link_libasan@\n+link_liblsan = @link_liblsan@\n+link_libtsan = @link_libtsan@\n+link_libubsan = @link_libubsan@\n localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n@@ -289,7 +293,7 @@ libasan_la_SOURCES = $(asan_files)\n @USING_MAC_INTERPOSE_TRUE@libasan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la \\\n @USING_MAC_INTERPOSE_TRUE@\t$(top_builddir)/lsan/libsanitizer_lsan.la \\\n @USING_MAC_INTERPOSE_TRUE@\t$(LIBSTDCXX_RAW_CXX_LDFLAGS)\n-libasan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n+libasan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(link_libasan)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "e5c320604d3eeee23e81259ee23f99e5ea14314e", "filename": "libsanitizer/configure", "status": "modified", "additions": 91, "deletions": 3, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -606,6 +606,10 @@ LTLIBOBJS\n LIBOBJS\n USING_MAC_INTERPOSE_FALSE\n USING_MAC_INTERPOSE_TRUE\n+link_liblsan\n+link_libubsan\n+link_libtsan\n+link_libasan\n LSAN_SUPPORTED_FALSE\n LSAN_SUPPORTED_TRUE\n TSAN_SUPPORTED_FALSE\n@@ -11119,7 +11123,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11122 \"configure\"\n+#line 11126 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11225,7 +11229,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11228 \"configure\"\n+#line 11232 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14544,6 +14548,89 @@ else\n fi\n \n \n+# Check for functions needed.\n+for ac_func in clock_getres clock_gettime clock_settime\n+do :\n+  as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n+ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n+eval as_val=\\$$as_ac_var\n+   if test \"x$as_val\" = x\"\"yes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define `$as_echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n+_ACEOF\n+\n+fi\n+done\n+\n+\n+# Common libraries that we need to link against for all sanitizer libs.\n+link_sanitizer_common='-lpthread -ldl'\n+\n+# Set up the set of additional libraries that we need to link against for libasan.\n+link_libasan=$link_sanitizer_common\n+\n+\n+# Set up the set of additional libraries that we need to link against for libtsan.\n+link_libtsan=$link_sanitizer_common\n+\n+\n+# Set up the set of additional libraries that we need to link against for libubsan.\n+link_libubsan=$link_sanitizer_common\n+\n+\n+# Set up the set of additional libraries that we need to link against for liblsan.\n+link_liblsan=$link_sanitizer_common\n+\n+\n+# At least for glibc, clock_gettime is in librt.  But don't pull that\n+# in if it still doesn't give us the function we want.  This\n+# test is copied from libgomp.\n+if test $ac_cv_func_clock_gettime = no; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for clock_gettime in -lrt\" >&5\n+$as_echo_n \"checking for clock_gettime in -lrt... \" >&6; }\n+if test \"${ac_cv_lib_rt_clock_gettime+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lrt  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char clock_gettime ();\n+int\n+main ()\n+{\n+return clock_gettime ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_rt_clock_gettime=yes\n+else\n+  ac_cv_lib_rt_clock_gettime=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_rt_clock_gettime\" >&5\n+$as_echo \"$ac_cv_lib_rt_clock_gettime\" >&6; }\n+if test \"x$ac_cv_lib_rt_clock_gettime\" = x\"\"yes; then :\n+  link_libasan=\"-lrt $link_libasan\"\n+link_libtsan=\"-lrt $link_libtsan\"\n+# Other sanitizers do not override clock_* API\n+\n+fi\n+\n+fi\n+\n case \"$host\" in\n   *-*-darwin*) MAC_INTERPOSE=true ; enable_static=no ;;\n   *) MAC_INTERPOSE=false ;;\n@@ -14557,7 +14644,7 @@ else\n fi\n \n \n-ac_config_files=\"$ac_config_files Makefile\"\n+ac_config_files=\"$ac_config_files Makefile libsanitizer.spec\"\n \n \n ac_config_files=\"$ac_config_files interception/Makefile sanitizer_common/Makefile lsan/Makefile asan/Makefile ubsan/Makefile\"\n@@ -15692,6 +15779,7 @@ do\n     \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n     \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n     \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n+    \"libsanitizer.spec\") CONFIG_FILES=\"$CONFIG_FILES libsanitizer.spec\" ;;\n     \"interception/Makefile\") CONFIG_FILES=\"$CONFIG_FILES interception/Makefile\" ;;\n     \"sanitizer_common/Makefile\") CONFIG_FILES=\"$CONFIG_FILES sanitizer_common/Makefile\" ;;\n     \"lsan/Makefile\") CONFIG_FILES=\"$CONFIG_FILES lsan/Makefile\" ;;"}, {"sha": "7f9327904dae44bb7d77b10c70e417817e44a5cf", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -83,13 +83,46 @@ unset LSAN_SUPPORTED\n AM_CONDITIONAL(TSAN_SUPPORTED, [test \"x$TSAN_SUPPORTED\" = \"xyes\"])\n AM_CONDITIONAL(LSAN_SUPPORTED, [test \"x$LSAN_SUPPORTED\" = \"xyes\"])\n \n+# Check for functions needed.\n+AC_CHECK_FUNCS(clock_getres clock_gettime clock_settime)\n+\n+# Common libraries that we need to link against for all sanitizer libs.\n+link_sanitizer_common='-lpthread -ldl'\n+\n+# Set up the set of additional libraries that we need to link against for libasan.\n+link_libasan=$link_sanitizer_common\n+AC_SUBST(link_libasan)\n+\n+# Set up the set of additional libraries that we need to link against for libtsan.\n+link_libtsan=$link_sanitizer_common\n+AC_SUBST(link_libtsan)\n+\n+# Set up the set of additional libraries that we need to link against for libubsan.\n+link_libubsan=$link_sanitizer_common\n+AC_SUBST(link_libubsan)\n+\n+# Set up the set of additional libraries that we need to link against for liblsan.\n+link_liblsan=$link_sanitizer_common\n+AC_SUBST(link_liblsan)\n+\n+# At least for glibc, clock_gettime is in librt.  But don't pull that\n+# in if it still doesn't give us the function we want.  This\n+# test is copied from libgomp.\n+if test $ac_cv_func_clock_gettime = no; then\n+  AC_CHECK_LIB(rt, clock_gettime,\n+    [link_libasan=\"-lrt $link_libasan\"\n+link_libtsan=\"-lrt $link_libtsan\"\n+# Other sanitizers do not override clock_* API\n+])\n+fi\n+\n case \"$host\" in\n   *-*-darwin*) MAC_INTERPOSE=true ; enable_static=no ;;\n   *) MAC_INTERPOSE=false ;;\n esac\n AM_CONDITIONAL(USING_MAC_INTERPOSE, $MAC_INTERPOSE)\n \n-AC_CONFIG_FILES([Makefile])\n+AC_CONFIG_FILES([Makefile libsanitizer.spec])\n \n AC_CONFIG_FILES(AC_FOREACH([DIR], [interception sanitizer_common lsan asan ubsan], [DIR/Makefile ]),\n   [cat > vpsed$$ << \\_EOF"}, {"sha": "52a06d6345882d9fb46fa48cfe5f8c3e51fba2c9", "filename": "libsanitizer/interception/Makefile.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Finterception%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Finterception%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Finterception%2FMakefile.in?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -181,6 +181,10 @@ infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n+link_libasan = @link_libasan@\n+link_liblsan = @link_liblsan@\n+link_libtsan = @link_libtsan@\n+link_libubsan = @link_libubsan@\n localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@"}, {"sha": "a4fa87d8dfc51549b0f932b31a610db1a2e86c29", "filename": "libsanitizer/libsanitizer.spec.in", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Flibsanitizer.spec.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Flibsanitizer.spec.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flibsanitizer.spec.in?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -0,0 +1,11 @@\n+# This spec file is read by gcc when linking.  It is used to specify the\n+# standard libraries we need in order to link with various sanitizer libs.\n+\n+*link_libasan: @link_libasan@\n+\n+*link_libtsan: @link_libtsan@\n+\n+*link_libubsan: @link_libubsan@\n+\n+*link_liblsan: @link_liblsan@\n+"}, {"sha": "36fd6058841ce62867bf0fd1cf186aa6620024bb", "filename": "libsanitizer/lsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Flsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Flsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.am?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -28,7 +28,7 @@ libsanitizer_lsan_la_SOURCES = $(sanitizer_lsan_files)\n \n liblsan_la_SOURCES = $(lsan_files)\n liblsan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(LIBSTDCXX_RAW_CXX_LDFLAGS)\n-liblsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n+liblsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(link_liblsan)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "9296b7048abe024cb6e5e121ebfe484e8a28355c", "filename": "libsanitizer/lsan/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Flsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Flsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.in?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -215,6 +215,10 @@ infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n+link_libasan = @link_libasan@\n+link_liblsan = @link_liblsan@\n+link_libtsan = @link_libtsan@\n+link_libubsan = @link_libubsan@\n localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n@@ -265,7 +269,7 @@ lsan_files = \\\n libsanitizer_lsan_la_SOURCES = $(sanitizer_lsan_files)\n liblsan_la_SOURCES = $(lsan_files)\n liblsan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(LIBSTDCXX_RAW_CXX_LDFLAGS)\n-liblsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n+liblsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(link_liblsan)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "9bbdfd6acfe7fea38fb44e184d5815fb6ddce1ed", "filename": "libsanitizer/sanitizer_common/Makefile.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fsanitizer_common%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fsanitizer_common%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2FMakefile.in?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -192,6 +192,10 @@ infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n+link_libasan = @link_libasan@\n+link_liblsan = @link_liblsan@\n+link_libtsan = @link_libtsan@\n+link_libubsan = @link_libubsan@\n localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@"}, {"sha": "9b039d229d77f1864ccfc2fc9023087cd97705d1", "filename": "libsanitizer/tsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Ftsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Ftsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.am?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -39,7 +39,7 @@ tsan_files = \\\n \n libtsan_la_SOURCES = $(tsan_files) \n libtsan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(LIBSTDCXX_RAW_CXX_LDFLAGS)\n-libtsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n+libtsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(link_libtsan)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "eb5c7e7a84b090f79168bea990ee6a6321210c5e", "filename": "libsanitizer/tsan/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Ftsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Ftsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.in?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -231,6 +231,10 @@ infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n+link_libasan = @link_libasan@\n+link_liblsan = @link_liblsan@\n+link_libtsan = @link_libtsan@\n+link_libubsan = @link_libubsan@\n localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n@@ -295,7 +299,7 @@ tsan_files = \\\n \n libtsan_la_SOURCES = $(tsan_files) \n libtsan_la_LIBADD = $(top_builddir)/sanitizer_common/libsanitizer_common.la $(top_builddir)/interception/libinterception.la $(LIBSTDCXX_RAW_CXX_LDFLAGS)\n-libtsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n+libtsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(link_libtsan)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}, {"sha": "24e405bd146e2e397409be15f80a5f28db8ae39d", "filename": "libsanitizer/ubsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fubsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fubsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fubsan%2FMakefile.am?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -23,7 +23,7 @@ if !USING_MAC_INTERPOSE\n libubsan_la_LIBADD += $(top_builddir)/interception/libinterception.la\n endif\n libubsan_la_LIBADD += $(LIBSTDCXX_RAW_CXX_LDFLAGS)\n-libubsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n+libubsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(link_libubsan)\n \n # Use special rules for files that require RTTI support.\n ubsan_handlers_cxx.% ubsan_type_hash.% : AM_CXXFLAGS += -frtti"}, {"sha": "dcb04c72d4dae444c86a15bbde1a49a85735ac4a", "filename": "libsanitizer/ubsan/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fubsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35814b034651b543b2521f9bd028c35f1fcaac1a/libsanitizer%2Fubsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fubsan%2FMakefile.in?ref=35814b034651b543b2521f9bd028c35f1fcaac1a", "patch": "@@ -210,6 +210,10 @@ infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n+link_libasan = @link_libasan@\n+link_liblsan = @link_liblsan@\n+link_libtsan = @link_libtsan@\n+link_libubsan = @link_libubsan@\n localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n@@ -256,7 +260,7 @@ libubsan_la_SOURCES = $(ubsan_files)\n libubsan_la_LIBADD =  \\\n \t$(top_builddir)/sanitizer_common/libsanitizer_common.la \\\n \t$(am__append_1) $(LIBSTDCXX_RAW_CXX_LDFLAGS)\n-libubsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` -lpthread -ldl\n+libubsan_la_LDFLAGS = -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(link_libubsan)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and"}]}