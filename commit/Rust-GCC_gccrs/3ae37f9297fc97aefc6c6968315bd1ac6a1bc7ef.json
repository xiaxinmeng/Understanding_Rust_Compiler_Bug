{"sha": "3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FlMzdmOTI5N2ZjOTdhZWZjNmM2OTY4MzE1YmQxYWM2YTFiYzdlZg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-01-27T15:20:10Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-01-27T15:20:10Z"}, "message": "Add __gcov_indirect_call_profiler_v4_atomic.\n\n\tPR gcov-profile/93403\n\t* tree-profile.c (gimple_init_gcov_profiler): Generate\n\tboth __gcov_indirect_call_profiler_v4 and\n\t__gcov_indirect_call_profiler_v4_atomic.\n\tPR gcov-profile/93403\n\t* libgcov-profiler.c (__gcov_indirect_call_profiler_v4):\n\tCall __gcov_indirect_call_profiler_body.\n\t(__gcov_indirect_call_profiler_body): New.\n\t(__gcov_indirect_call_profiler_v4_atomic): New.\n\t* libgcov.h (__gcov_indirect_call_profiler_v4_atomic):\n\tNew declaration.", "tree": {"sha": "ac9381bb63fe63370b33c674a651116a9f52fd46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac9381bb63fe63370b33c674a651116a9f52fd46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl4u/6oACgkQTcGC3A+n\nN4UTZggAjCoHj2PYeYlw8Yb+woJE8UUIhB5mSuRMKZUETUBZgFAOXLmzphmHQcT5\nkak2evPUYecxAnNgKsVYx4bJT8icMKQcVE3elNXr2vEZ6yt3ve0j7/yZseu99x58\nxetIPu2XwEpDPJhhzVDlbLMRYoVICSaa14ETsjSb1SE4aMak3jOIkIbTWaOSQidp\nrlmrkOUORTQqU2eX6tCO0B/LlCrOUn0wgz+bkhDnLipjIVGkuNEtBFcc8f96ABV4\nrMwIKrQUkgc/P/VyeWZrcOL8phhmrd/b3PjyfGMEqcbWx003Ap6HuNb0izXpX48b\nNdz2DQ2pxkkFkTHQ/FY+tLeHzwx+qA==\n=z/Cs\n-----END PGP SIGNATURE-----", "payload": "tree ac9381bb63fe63370b33c674a651116a9f52fd46\nparent 6a81cabc14426b642271647b03218a3af19d600f\nauthor Martin Liska <mliska@suse.cz> 1580138410 +0100\ncommitter Martin Liska <mliska@suse.cz> 1580138410 +0100\n\nAdd __gcov_indirect_call_profiler_v4_atomic.\n\n\tPR gcov-profile/93403\n\t* tree-profile.c (gimple_init_gcov_profiler): Generate\n\tboth __gcov_indirect_call_profiler_v4 and\n\t__gcov_indirect_call_profiler_v4_atomic.\n\tPR gcov-profile/93403\n\t* libgcov-profiler.c (__gcov_indirect_call_profiler_v4):\n\tCall __gcov_indirect_call_profiler_body.\n\t(__gcov_indirect_call_profiler_body): New.\n\t(__gcov_indirect_call_profiler_v4_atomic): New.\n\t* libgcov.h (__gcov_indirect_call_profiler_v4_atomic):\n\tNew declaration.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a81cabc14426b642271647b03218a3af19d600f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a81cabc14426b642271647b03218a3af19d600f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a81cabc14426b642271647b03218a3af19d600f"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "b3624b15195dda5082e0f0e711da166b291c8f42", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef", "patch": "@@ -1,3 +1,10 @@\n+2020-01-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/93403\n+\t* tree-profile.c (gimple_init_gcov_profiler): Generate\n+\tboth __gcov_indirect_call_profiler_v4 and\n+\t__gcov_indirect_call_profiler_v4_atomic.\n+\n 2020-01-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR target/92822"}, {"sha": "6c0838261a19829d4e1239254c6748cdfe644b80", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef", "patch": "@@ -120,7 +120,6 @@ gimple_init_gcov_profiler (void)\n   tree gcov_type_ptr;\n   tree ic_profiler_fn_type;\n   tree average_profiler_fn_type;\n-  const char *profiler_fn_name;\n   const char *fn_name;\n \n   if (!gcov_type_node)\n@@ -167,6 +166,7 @@ gimple_init_gcov_profiler (void)\n       fn_name = concat (\"__gcov_topn_values_profiler\", fn_suffix, NULL);\n       tree_topn_values_profiler_fn\n \t= build_fn_decl (fn_name, topn_values_profiler_fn_type);\n+      free (CONST_CAST (char *, fn_name));\n \n       TREE_NOTHROW (tree_topn_values_profiler_fn) = 1;\n       DECL_ATTRIBUTES (tree_topn_values_profiler_fn)\n@@ -181,10 +181,10 @@ gimple_init_gcov_profiler (void)\n \t\t\t\t\t  gcov_type_node,\n \t\t\t\t\t  ptr_type_node,\n \t\t\t\t\t  NULL_TREE);\n-      profiler_fn_name = \"__gcov_indirect_call_profiler_v4\";\n-\n+      fn_name = concat (\"__gcov_indirect_call_profiler_v4\", fn_suffix, NULL);\n       tree_indirect_call_profiler_fn\n-\t      = build_fn_decl (profiler_fn_name, ic_profiler_fn_type);\n+\t= build_fn_decl (fn_name, ic_profiler_fn_type);\n+      free (CONST_CAST (char *, fn_name));\n \n       TREE_NOTHROW (tree_indirect_call_profiler_fn) = 1;\n       DECL_ATTRIBUTES (tree_indirect_call_profiler_fn)"}, {"sha": "20cb222d0799e41cfa539d4eaa25f6674f4c2094", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef", "patch": "@@ -1,3 +1,13 @@\n+2020-01-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/93403\n+\t* libgcov-profiler.c (__gcov_indirect_call_profiler_v4):\n+\tCall __gcov_indirect_call_profiler_body.\n+\t(__gcov_indirect_call_profiler_body): New.\n+\t(__gcov_indirect_call_profiler_v4_atomic): New.\n+\t* libgcov.h (__gcov_indirect_call_profiler_v4_atomic):\n+\tNew declaration.\n+\n 2020-01-27  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/crti.S: Add RF16 object attribute."}, {"sha": "6043ac4c7a116aa3e451f60ff9499fc8f4fe1183", "filename": "libgcc/libgcov-profiler.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef/libgcc%2Flibgcov-profiler.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef/libgcc%2Flibgcov-profiler.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-profiler.c?ref=3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef", "patch": "@@ -199,19 +199,36 @@ struct indirect_call_tuple __gcov_indirect_call;\n    as a pointer to a function.  */\n \n /* Tries to determine the most common value among its inputs. */\n-void\n-__gcov_indirect_call_profiler_v4 (gcov_type value, void* cur_func)\n+static inline void\n+__gcov_indirect_call_profiler_body (gcov_type value, void *cur_func,\n+\t\t\t\t    int use_atomic)\n {\n   /* If the C++ virtual tables contain function descriptors then one\n      function may have multiple descriptors and we need to dereference\n      the descriptors to see if they point to the same function.  */\n   if (cur_func == __gcov_indirect_call.callee\n       || (__LIBGCC_VTABLE_USES_DESCRIPTORS__\n \t  && *(void **) cur_func == *(void **) __gcov_indirect_call.callee))\n-    __gcov_topn_values_profiler_body (__gcov_indirect_call.counters, value, 0);\n+    __gcov_topn_values_profiler_body (__gcov_indirect_call.counters, value,\n+\t\t\t\t      use_atomic);\n \n   __gcov_indirect_call.callee = NULL;\n }\n+\n+void\n+__gcov_indirect_call_profiler_v4 (gcov_type value, void *cur_func)\n+{\n+  __gcov_indirect_call_profiler_body (value, cur_func, 0);\n+}\n+\n+#if GCOV_SUPPORTS_ATOMIC\n+void\n+__gcov_indirect_call_profiler_v4_atomic (gcov_type value, void *cur_func)\n+{\n+  __gcov_indirect_call_profiler_body (value, cur_func, 1);\n+}\n+#endif\n+\n #endif\n \n #ifdef L_gcov_time_profiler"}, {"sha": "023293e05ec5e79f51cfa4fd4a1c9defe1e574fc", "filename": "libgcc/libgcov.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef/libgcc%2Flibgcov.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef/libgcc%2Flibgcov.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov.h?ref=3ae37f9297fc97aefc6c6968315bd1ac6a1bc7ef", "patch": "@@ -274,6 +274,7 @@ extern void __gcov_pow2_profiler_atomic (gcov_type *, gcov_type);\n extern void __gcov_topn_values_profiler (gcov_type *, gcov_type);\n extern void __gcov_topn_values_profiler_atomic (gcov_type *, gcov_type);\n extern void __gcov_indirect_call_profiler_v4 (gcov_type, void *);\n+extern void __gcov_indirect_call_profiler_v4_atomic (gcov_type, void *);\n extern void __gcov_time_profiler (gcov_type *);\n extern void __gcov_time_profiler_atomic (gcov_type *);\n extern void __gcov_average_profiler (gcov_type *, gcov_type);"}]}