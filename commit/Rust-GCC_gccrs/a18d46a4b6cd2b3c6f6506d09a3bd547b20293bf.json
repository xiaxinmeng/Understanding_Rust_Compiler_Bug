{"sha": "a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE4ZDQ2YTRiNmNkMmIzYzZmNjUwNmQwOWEzYmQ1NDdiMjAyOTNiZg==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-11-12T08:38:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-30T14:16:18Z"}, "message": "[Ada] Implement -gnateb switch\n\ngcc/ada/\n\n\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst:\n\tDescribe -gnateb switch.\n\t* doc/gnat_ugn/the_gnat_compilation_model.rst: Mention -gnateb\n\tswitch in configuration pragma files section.\n\t* gnat_ugn.texi: Regenerate.\n\t* lib-writ.adb (Write_ALI): Strip directories from configuration\n\tfiles path if needed.\n\t* opt.ads: Declare Config_Files_Store_Basename option.\n\t* par.adb (Par): Save configuration file checksum.\n\t* switch-c.adb (Scan_Front_End_Switches): Set\n\tConfig_Files_Store_Basename true if -gnateb is present.", "tree": {"sha": "233dbccaf253b1af1fa284e358ce8124f6a2339f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/233dbccaf253b1af1fa284e358ce8124f6a2339f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b514643caeac517d06482a70f8fa38328601dd7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b514643caeac517d06482a70f8fa38328601dd7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b514643caeac517d06482a70f8fa38328601dd7a"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "9c62d6e4a918c94be488fbdbdec4694dd47b2b82", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf", "patch": "@@ -1517,6 +1517,13 @@ Alphabetical List of All Switches\n   an exception because ``Self(Obj)`` produces an anonymous object which does\n   not share the memory location of ``Obj``.\n \n+.. index:: -gnateb  (gcc)\n+\n+:switch:`-gnateb`\n+  Store configuration files by their basename in ALI files. This switch is\n+  used for instance by gprbuild for distributed builds in order to prevent\n+  issues where machine-specific absolute paths could end up being stored in\n+  ALI files.\n \n .. index:: -gnatec  (gcc)\n "}, {"sha": "46d589a85976f065928a3bb107ffdffdc46d5d1c", "filename": "gcc/ada/doc/gnat_ugn/the_gnat_compilation_model.rst", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst?ref=a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf", "patch": "@@ -1560,6 +1560,10 @@ temporary files that are immediately deleted; it doesn't make sense to\n depend on a file that no longer exists. Such tools include\n ``gprbuild``, ``gnatmake``, and ``gnatcheck``.\n \n+By default, configuration pragma files are stored by their absolute paths in\n+ALI files. You can use the :switch:`-gnateb` switch in order to store them by\n+their basename instead.\n+\n If you are using project file, a separate mechanism is provided using\n project attributes.\n "}, {"sha": "14e92715ae20837b181dbb496e052e11030dd820", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf", "patch": "@@ -2970,6 +2970,10 @@ temporary files that are immediately deleted; it doesn't make sense to\n depend on a file that no longer exists. Such tools include\n @code{gprbuild}, @code{gnatmake}, and @code{gnatcheck}.\n \n+By default, configuration pragma files are stored by their absolute paths in\n+ALI files. You can use the @code{-gnateb} switch in order to store them by\n+their basename instead.\n+\n If you are using project file, a separate mechanism is provided using\n project attributes.\n \n@@ -8968,6 +8972,19 @@ an exception because @code{Self(Obj)} produces an anonymous object which does\n not share the memory location of @code{Obj}.\n @end table\n \n+@geindex -gnateb (gcc)\n+\n+\n+@table @asis\n+\n+@item @code{-gnateb}\n+\n+Store configuration files by their basename in ALI files. This switch is\n+used for instance by gprbuild for distributed builds in order to prevent\n+issues where machine-specific absolute paths could end up being stored in\n+ALI files.\n+@end table\n+\n @geindex -gnatec (gcc)\n \n "}, {"sha": "f5b9e3032c8e78be5bff590aa014adeb355e6ac5", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf", "patch": "@@ -1476,11 +1476,8 @@ package body Lib.Writ is\n             --  Normal case of a unit entry with a source index\n \n             if Sind > No_Source_File then\n-               --  We never want directory information in ALI files\n-               --  ???But back out this change temporarily until\n-               --  gprbuild is fixed.\n \n-               if False then\n+               if Config_Files_Store_Basename then\n                   Fname := Strip_Directory (File_Name (Sind));\n                else\n                   Fname := File_Name (Sind);"}, {"sha": "f55e9c665e2da0a1330a47b2655b013c756a5e7c", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf", "patch": "@@ -364,6 +364,11 @@ package Opt is\n    --  GNAT\n    --  Names of configuration pragmas files (given by switches -gnatec)\n \n+   Config_Files_Store_Basename : Boolean := False;\n+   --  GNAT\n+   --  Set True for -gnateb. Tells GNAT that config files should be referred to\n+   --  by their basename and their checksums computed in ALI files.\n+\n    Configurable_Run_Time_Mode : Boolean := False;\n    --  GNAT, GNATBIND\n    --  Set True if the compiler is operating in configurable run-time mode."}, {"sha": "95695d25696a1f4c4168dce5310ffd8d3e92c54f", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf", "patch": "@@ -1546,6 +1546,10 @@ begin\n          end loop;\n       end;\n \n+      if Config_Files_Store_Basename then\n+         Complete_Source_File_Entry;\n+      end if;\n+\n    --  Normal case of compilation unit\n \n    else"}, {"sha": "c6eb063771e88530dc5bf8471e0f491e31fb50b3", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=a18d46a4b6cd2b3c6f6506d09a3bd547b20293bf", "patch": "@@ -486,6 +486,12 @@ package body Switch.C is\n                      Ptr := Ptr + 1;\n                      Check_Aliasing_Of_Parameters := True;\n \n+                  --  -gnateb (config file basenames and checksums in ALI)\n+\n+                  when 'b' =>\n+                     Ptr := Ptr + 1;\n+                     Config_Files_Store_Basename := True;\n+\n                   --  -gnatec (configuration pragmas)\n \n                   when 'c' =>"}]}