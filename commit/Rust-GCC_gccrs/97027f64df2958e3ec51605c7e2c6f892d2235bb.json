{"sha": "97027f64df2958e3ec51605c7e2c6f892d2235bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcwMjdmNjRkZjI5NThlM2VjNTE2MDVjN2UyYzZmODkyZDIyMzViYg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2014-02-24T16:01:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-24T16:01:26Z"}, "message": "sem_ch5.adb, [...]: Change spelling 'parametrization' to 'parameterization'.\n\n2014-02-24  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch5.adb, sem_aux.ads, sem_ch12.adb, gnat_ugn.texi, par.adb,\n\tpar-ch12.adb: Change spelling 'parametrization' to 'parameterization'.\n\nFrom-SVN: r208075", "tree": {"sha": "d4cc7bf3b34f1596ebc49d571f6d67addb05429f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4cc7bf3b34f1596ebc49d571f6d67addb05429f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97027f64df2958e3ec51605c7e2c6f892d2235bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97027f64df2958e3ec51605c7e2c6f892d2235bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97027f64df2958e3ec51605c7e2c6f892d2235bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97027f64df2958e3ec51605c7e2c6f892d2235bb/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5f50020ac14244ded8437ae24f9d9a72fbbbf08d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f50020ac14244ded8437ae24f9d9a72fbbbf08d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f50020ac14244ded8437ae24f9d9a72fbbbf08d"}], "stats": {"total": 61, "additions": 33, "deletions": 28}, "files": [{"sha": "2dfcb64a41ded721f800a23192cee10fa09522dc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=97027f64df2958e3ec51605c7e2c6f892d2235bb", "patch": "@@ -1,3 +1,8 @@\n+2014-02-24  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch5.adb, sem_aux.ads, sem_ch12.adb, gnat_ugn.texi, par.adb,\n+\tpar-ch12.adb: Change spelling 'parametrization' to 'parameterization'.\n+\n 2014-02-24  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sinfo.ads, sinfo.adb: New attribute Generalized_Indexing, for"}, {"sha": "a57715a8a26fcc1d4474cf08b2f0e7d03a50c81e", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=97027f64df2958e3ec51605c7e2c6f892d2235bb", "patch": "@@ -3927,7 +3927,7 @@ alignment in bits. The name is followed by at least two blanks, fields\n are separated by at least one blank, and a LF character immediately\n follows the alignment field.\n \n-Here is an example of target parametrization file:\n+Here is an example of a target parameterization file:\n \n @smallexample\n Bits_BE                       0"}, {"sha": "e13216ac880085c7831fe097f0a50e71295a2d98", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=97027f64df2958e3ec51605c7e2c6f892d2235bb", "patch": "@@ -350,7 +350,7 @@ package body Ch12 is\n       if Token = Tok_Others then\n          if Ada_Version < Ada_2005 then\n             Error_Msg_SP\n-              (\"partial parametrization of formal packages\" &\n+              (\"partial parameterization of formal packages\" &\n                 \" is an Ada 2005 extension\");\n             Error_Msg_SP\n               (\"\\unit must be compiled with -gnat05 switch\");"}, {"sha": "88720dbc8d6aa13727bfbd649187ed40057074cf", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=97027f64df2958e3ec51605c7e2c6f892d2235bb", "patch": "@@ -360,7 +360,7 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n       Pbod : Boolean;                  -- True if proper body OK\n       Rnam : Boolean;                  -- True if renaming declaration OK\n       Stub : Boolean;                  -- True if body stub OK\n-      Pexp : Boolean;                  -- True if parametrized expression OK\n+      Pexp : Boolean;                  -- True if parameterized expression OK\n       Fil2 : Boolean;                  -- Filler to fill to 8 bits\n    end record;\n    pragma Pack (Pf_Rec);"}, {"sha": "6a3ebeb7840a8c1ca7557c98f89fd9ec76536258", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=97027f64df2958e3ec51605c7e2c6f892d2235bb", "patch": "@@ -282,7 +282,7 @@ package Sem_Aux is\n    function Is_Generic_Formal (E : Entity_Id) return Boolean;\n    --  Determine whether E is a generic formal parameter. In particular this is\n    --  used to set the visibility of generic formals of a generic package\n-   --  declared with a box or with partial parametrization.\n+   --  declared with a box or with partial parameterization.\n \n    function Is_Indefinite_Subtype (Ent : Entity_Id) return Boolean;\n    --  Ent is any entity. Determines if given entity is an unconstrained array"}, {"sha": "a1107f86e63831e9a91573eaa5810d3c6e88748a", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=97027f64df2958e3ec51605c7e2c6f892d2235bb", "patch": "@@ -244,9 +244,9 @@ package body Sem_Ch12 is\n    --  This should really be reset on encountering a new main unit, but in\n    --  practice we are not using multiple main units so it is not critical.\n \n-   -------------------------------------------------\n-   -- Formal packages and partial parametrization --\n-   -------------------------------------------------\n+   --------------------------------------------------\n+   -- Formal packages and partial parameterization --\n+   --------------------------------------------------\n \n    --  When compiling a generic, a formal package is a local instantiation. If\n    --  declared with a box, its generic formals are visible in the enclosing\n@@ -263,7 +263,7 @@ package body Sem_Ch12 is\n \n    --  In a generic, a formal package is treated like a special instantiation.\n    --  Our Ada 95 compiler handled formals with and without box in different\n-   --  ways. With partial parametrization, we use a single model for both.\n+   --  ways. With partial parameterization, we use a single model for both.\n    --  We create a package declaration that consists of the specification of\n    --  the generic package, and a set of declarations that map the actuals\n    --  into local renamings, just as we do for bona fide instantiations. For\n@@ -951,7 +951,7 @@ package body Sem_Ch12 is\n \n       Others_Present : Boolean := False;\n       Others_Choice  : Node_Id := Empty;\n-      --  In Ada 2005, indicates partial parametrization of a formal\n+      --  In Ada 2005, indicates partial parameterization of a formal\n       --  package. As usual an other association must be last in the list.\n \n       procedure Check_Overloaded_Formal_Subprogram (Formal : Entity_Id);\n@@ -978,7 +978,7 @@ package body Sem_Ch12 is\n       --  but return Empty for the actual itself. In this case the code below\n       --  creates a corresponding declaration for the formal.\n \n-      function Partial_Parametrization return Boolean;\n+      function Partial_Parameterization return Boolean;\n       --  Ada 2005: if no match is found for a given formal, check if the\n       --  association for it includes a box, or whether the associations\n       --  include an Others clause.\n@@ -1168,15 +1168,15 @@ package body Sem_Ch12 is\n          return Act;\n       end Matching_Actual;\n \n-      -----------------------------\n-      -- Partial_Parametrization --\n-      -----------------------------\n+      ------------------------------\n+      -- Partial_Parameterization --\n+      ------------------------------\n \n-      function Partial_Parametrization return Boolean is\n+      function Partial_Parameterization return Boolean is\n       begin\n          return Others_Present\n           or else (Present (Found_Assoc) and then Box_Present (Found_Assoc));\n-      end Partial_Parametrization;\n+      end Partial_Parameterization;\n \n       ---------------------\n       -- Process_Default --\n@@ -1289,7 +1289,7 @@ package body Sem_Ch12 is\n \n       if Present (Actuals) then\n \n-         --  Check for an Others choice, indicating a partial parametrization\n+         --  Check for an Others choice, indicating a partial parameterization\n          --  for a formal package.\n \n          Actual := First (Actuals);\n@@ -1388,7 +1388,7 @@ package body Sem_Ch12 is\n                       Defining_Identifier (Formal),\n                       Defining_Identifier (Analyzed_Formal));\n \n-                  if No (Match) and then Partial_Parametrization then\n+                  if No (Match) and then Partial_Parameterization then\n                      Process_Default (Formal);\n                   else\n                      Append_List\n@@ -1403,7 +1403,7 @@ package body Sem_Ch12 is\n                       Defining_Identifier (Analyzed_Formal));\n \n                   if No (Match) then\n-                     if Partial_Parametrization then\n+                     if Partial_Parameterization then\n                         Process_Default (Formal);\n \n                      else\n@@ -1506,10 +1506,10 @@ package body Sem_Ch12 is\n                   end if;\n \n                   --  If there is no corresponding actual, this may be case of\n-                  --  partial parametrization, or else the formal has a default\n-                  --  or a box.\n+                  --  partial parameterization, or else the formal has a\n+                  --  default or a box.\n \n-                  if No (Match) and then Partial_Parametrization then\n+                  if No (Match) and then Partial_Parameterization then\n                      Process_Default (Formal);\n \n                      if Nkind (I_Node) = N_Formal_Package_Declaration then\n@@ -1571,7 +1571,7 @@ package body Sem_Ch12 is\n                       Defining_Identifier (Original_Node (Analyzed_Formal)));\n \n                   if No (Match) then\n-                     if Partial_Parametrization then\n+                     if Partial_Parameterization then\n                         Process_Default (Formal);\n \n                      else\n@@ -9089,11 +9089,11 @@ package body Sem_Ch12 is\n          --  actual parameter associations for later formals that depend on\n          --  actuals declared in the formal package.\n \n-         --  In Ada 2005, partial parametrization requires that we make visible\n-         --  the actuals corresponding to formals that were defaulted in the\n-         --  formal package. There formals are identified because they remain\n-         --  formal generics within the formal package, rather than being\n-         --  renamings of the actuals supplied.\n+         --  In Ada 2005, partial parameterization requires that we make\n+         --  visible the actuals corresponding to formals that were defaulted\n+         --  in the formal package. There formals are identified because they\n+         --  remain formal generics within the formal package, rather than\n+         --  being renamings of the actuals supplied.\n \n          declare\n             Gen_Decl : constant Node_Id :="}, {"sha": "491e97c6a58170cc0de57c058f75b0ff47826d3c", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97027f64df2958e3ec51605c7e2c6f892d2235bb/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=97027f64df2958e3ec51605c7e2c6f892d2235bb", "patch": "@@ -2525,7 +2525,7 @@ package body Sem_Ch5 is\n \n                --  Suppress the warning if inside a generic template or\n                --  instance, since in practice they tend to be dubious in these\n-               --  cases since they can result from intended parametrization.\n+               --  cases since they can result from intended parameterization.\n \n                if not Inside_A_Generic and then not In_Instance then\n "}]}