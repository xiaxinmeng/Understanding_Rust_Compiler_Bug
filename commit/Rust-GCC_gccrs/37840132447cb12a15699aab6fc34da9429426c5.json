{"sha": "37840132447cb12a15699aab6fc34da9429426c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc4NDAxMzI0NDdjYjEyYTE1Njk5YWFiNmZjMzRkYTk0Mjk0MjZjNQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2004-08-24T20:59:34Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-08-24T20:59:34Z"}, "message": "re PR middle-end/17044 (libgcc2.c:169: internal compiler error: Segmentation fault)\n\n\tPR middle-end/17044\n\t* tree-ssa-threadupdate.c (redirection_data): Make static.\n\t(thread_block): Use ggc_alloc_cleared to allocate struct\n\tredirection_data.  Don't free elements in redirection_data.\n\nFrom-SVN: r86519", "tree": {"sha": "5b7454c7dee1a71674b5a33553de434a72cbb94e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b7454c7dee1a71674b5a33553de434a72cbb94e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37840132447cb12a15699aab6fc34da9429426c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37840132447cb12a15699aab6fc34da9429426c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37840132447cb12a15699aab6fc34da9429426c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37840132447cb12a15699aab6fc34da9429426c5/comments", "author": null, "committer": null, "parents": [{"sha": "cf1d880b5f6314fce9ae12978a30efe450b1b6cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf1d880b5f6314fce9ae12978a30efe450b1b6cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf1d880b5f6314fce9ae12978a30efe450b1b6cf"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "785e1b400049063635d7fc84f106c67ebfce2f48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37840132447cb12a15699aab6fc34da9429426c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37840132447cb12a15699aab6fc34da9429426c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37840132447cb12a15699aab6fc34da9429426c5", "patch": "@@ -1,3 +1,10 @@\n+2004-08-24  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR middle-end/17044\n+\t* tree-ssa-threadupdate.c (redirection_data): Make static.\n+\t(thread_block): Use ggc_alloc_cleared to allocate struct\n+\tredirection_data.  Don't free elements in redirection_data.\n+\n 2004-08-24  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/predicates.md (small_data_pattern): Match prefetches."}, {"sha": "43b6b88ac57b4808085448c52043e799eadc1cea", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37840132447cb12a15699aab6fc34da9429426c5/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37840132447cb12a15699aab6fc34da9429426c5/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=37840132447cb12a15699aab6fc34da9429426c5", "patch": "@@ -92,6 +92,9 @@ struct redirection_data\n   edge outgoing_edge;\n };\n \n+/* Main data structure to hold information for duplicates of BB.  */\n+static varray_type redirection_data;\n+\n /* For each PHI node in BB, find or create a PHI node in NEW_BB for the\n    same PHI_RESULT.  Add an argument to the PHI node in NEW_BB which\n    corresponds to the same PHI argument associated with edge E in BB.  */\n@@ -239,8 +242,6 @@ thread_block (basic_block bb)\n      be threaded to a duplicate of BB.  */\n   bool all = true;\n \n-  /* Main data structure to hold information for duplicates of BB.  */\n-  varray_type redirection_data;\n   unsigned int i;\n \n   VARRAY_GENERIC_PTR_INIT (redirection_data, 2, \"redirection data\");\n@@ -278,7 +279,7 @@ thread_block (basic_block bb)\n \t    {\n \t      struct redirection_data *rd;\n \n-\t      rd = xcalloc (1, sizeof (redirection_data));\n+\t      rd = ggc_alloc_cleared (sizeof (struct redirection_data));\n \t      rd->outgoing_edge = e->aux;\n \t      VARRAY_PUSH_GENERIC_PTR (redirection_data, rd);\n \t    }\n@@ -372,14 +373,7 @@ thread_block (basic_block bb)\n       remove_last_stmt_and_useless_edges (bb, rd->outgoing_edge->dest);\n     }\n \n-  /* Done with this block.  Free any memory we have allocated, clear\n-     REDIRECTION_DATA and unmark this block as needing incoming\n-     edge redirections.  */\n-  for (i = 0; i < VARRAY_ACTIVE_SIZE (redirection_data); i++)\n-    {\n-      struct redirection_data *rd = VARRAY_GENERIC_PTR (redirection_data, i);\n-      free (rd);\n-    }\n+  /* Done with this block.  Clear REDIRECTION_DATA.  */\n   VARRAY_CLEAR (redirection_data);\n }\n "}]}