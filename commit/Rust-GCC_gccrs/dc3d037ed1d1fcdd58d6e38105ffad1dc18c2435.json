{"sha": "dc3d037ed1d1fcdd58d6e38105ffad1dc18c2435", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMzZDAzN2VkMWQxZmNkZDU4ZDZlMzgxMDVmZmFkMWRjMThjMjQzNQ==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-21T14:57:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-21T14:57:38Z"}, "message": "Fix bogous dates in gcc/ada/ChangeLog\n\nFrom-SVN: r260472", "tree": {"sha": "d210a86a9da703fcdb8b6db3c8d405f7b6af4c50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d210a86a9da703fcdb8b6db3c8d405f7b6af4c50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc3d037ed1d1fcdd58d6e38105ffad1dc18c2435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc3d037ed1d1fcdd58d6e38105ffad1dc18c2435", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc3d037ed1d1fcdd58d6e38105ffad1dc18c2435", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc3d037ed1d1fcdd58d6e38105ffad1dc18c2435/comments", "author": null, "committer": null, "parents": [{"sha": "f9e9ab637986a24d7cd8538ff5bd68e599ce6e12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9e9ab637986a24d7cd8538ff5bd68e599ce6e12"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "783519964a3f0dc1ae99694f7d439983787b59a3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc3d037ed1d1fcdd58d6e38105ffad1dc18c2435/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc3d037ed1d1fcdd58d6e38105ffad1dc18c2435/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dc3d037ed1d1fcdd58d6e38105ffad1dc18c2435", "patch": "@@ -5,11 +5,11 @@\n \tinitialization, if the declaration carries an aspect\n \tSuppress_Initialization.\n \n-2018-04-04  Daniel Mercier  <mercier@adacore.com>\n+2018-05-21  Daniel Mercier  <mercier@adacore.com>\n \n \t* pprint.adb: Use mixed case for attribute names.\n \n-2018-04-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+2018-05-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Generic_Subprogram_Body): Rename the call to\n \tAnalyze_Aspect_Specifications_On_Body_Or_Stub.\n@@ -32,12 +32,12 @@\n \t* sem_prag.adb: Code reformatting.\n \t(Analyze_Refined_Depends_Global_Post): Consider task body stubs.\n \n-2018-04-04  Jerome Lambourg  <lambourg@adacore.com>\n+2018-05-21  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* gcc-interface/Makefile.in: Add g-soliop__qnx.ads to the runtime build\n \tfor\u00a0QNX.\n \n-2018-04-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+2018-05-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_cg.adb: Remove with and use clause for Exp_Disp.\n \t* exp_ch9.adb: Remove with and use clause for Exp_Disp.\n@@ -63,7 +63,7 @@\n \t(Is_Predefined_Interface_Primitive): Moved from Exp_Disp.\n \t(Is_Predefined_Internal_Operation): Moved from Exp_Disp.\n \n-2018-04-04  Ed Schonberg  <schonberg@adacore.com>\n+2018-05-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_res.adb (Valid_Conversion): Improve error message on an illegal\n \ttype conversion whose expression has a limited view of a type.\n@@ -74,20 +74,20 @@\n \texplicit name for iterator loop, preserve that name in expanded\n \tconstruct, for possible use in exit statements.\n \n-2018-04-04  Javier Miranda  <miranda@adacore.com>\n+2018-05-21  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch4.adb (Analyze_Membership_Op): Avoid compiler crash when the\n \tspec of a unit has Ada 2012 membership tests with multiple choices and\n \tthe unit body is not compiled under Ada 2012 mode.\n \n-2018-04-04  Doug Rupp  <rupp@adacore.com>\n+2018-05-21  Doug Rupp  <rupp@adacore.com>\n \n \t* sigtramp-vxworks-target.inc: Set cfa_reg properly from sigcontext\n \tpregs.\n \t(CFI_COMMON_REGS): Restore LR jic probed from prologue.\n \t(REGNO_PC_OFFSET): Change to correct value for Aarch64.\n \n-2018-04-04  Jose Ruiz  <ruiz@adacore.com>\n+2018-05-21  Jose Ruiz  <ruiz@adacore.com>\n \n \t* doc/gnat_ugn/gnat_utility_programs.rst, exp_attr.adb,\n \tlibgnarl/s-tassta.adb: Minor typo fixes\n@@ -98,21 +98,21 @@\n \tindexed call originally in prefix forn is itself the prefix of a\n \tfurther call.\n \n-2018-04-04  Piotr Trojanek  <trojanek@adacore.com>\n+2018-05-21  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* sem_eval.adb (Is_Null_Range): Clarify access to the full view of a\n \ttype.\n \t(Not_Null_Range): Same as above.\n \n-2018-04-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+2018-05-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch3.adb: Minor reformatting.\n \t* exp_ch6.adb: Likewise.\n \t* freeze.adb: Likewise.\n \t* inline.adb: Likewise.\n \t* sem_util.adb: Likewise.\n \n-2018-04-04  Yannick Moy  <moy@adacore.com>\n+2018-05-21  Yannick Moy  <moy@adacore.com>\n \n \t* inline.adb (Expand_Inlined_Call.Process_Formals): Use a type\n \tconversion instead of an unchecked type conversion when inlining a\n@@ -121,7 +121,7 @@\n \taccess types).\n \t* opt.ads: Update comment.\n \n-2018-04-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+2018-05-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): Install the elaboration\n \tmodel of the compilation unit spec, if any.\n@@ -147,20 +147,20 @@\n \tdocumentation of pragma Elaboration_Checks.\n \t* gnat_rm.texi: Regenerate.\n \n-2018-04-04  Olivier Hainque  <hainque@adacore.com>\n+2018-05-21  Olivier Hainque  <hainque@adacore.com>\n \n \t* libgnat/s-trasym__dwarf.adb (Executable_Name): Return argv[0] instead\n \tof empty string when argv[0] couldn't be found on PATH.\n \t(Enable_Cache): Raise Program_Error instead of attempting a null\n \tpointer dereference when the Exec_Module initialization failed.\n \n-2018-04-04  Piotr Trojanek  <trojanek@adacore.com>\n+2018-05-21  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* libgnarl/a-reatim.ads (Clock_Time): Remove External aspect.\n \t* libgnarl/a-taside.ads (Tasking_State): Likewise.\n \t* libgnat/a-calend.ads (Clock_Time): Likewise.\n \n-2018-04-04  Yannick Moy  <moy@adacore.com>\n+2018-05-21  Yannick Moy  <moy@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Procedure_Call): Refine test to recognize prefix\n \tcall notation in inlined call in GNATprove mode.\n@@ -177,12 +177,12 @@\n \tExternal have precedence over option Synchronous when determining\n \twhether a property is in effect.\n \n-2018-04-04  Yannick Moy  <moy@adacore.com>\n+2018-05-21  Yannick Moy  <moy@adacore.com>\n \n \t* sem_eval.adb (Static_Length): Take into account case of variable of\n \tsubtype string literal.\n \n-2018-04-04  Olivier Hainque  <hainque@adacore.com>\n+2018-05-21  Olivier Hainque  <hainque@adacore.com>\n \n \t* libgnat/s-objrea.ads (Get_Memory_Bounds): Rename as Get_Xcode_Bounds.\n \t(Object_Section): Rename Flag_Alloc component as Flag_Xcode.\n@@ -192,7 +192,7 @@\n \t* libgnat/s-dwalin.adb (Open): Adjust to the Get_Memory_Bounds name\n \tchange.\n \n-2018-04-04  Olivier Hainque  <hainque@adacore.com>\n+2018-05-21  Olivier Hainque  <hainque@adacore.com>\n \n \t* libgnat/s-dwalin.ads (Dwarf_Context): Change type of Load_Address to\n \tAddress, and type of Low, High to Storage_Offset.\n@@ -212,22 +212,22 @@\n \t(Multi_Module_Symbolic_Traceback): Compare address in traceback\n \twith module Low_Address instead of Low.\n \n-2018-04-04  Olivier Hainque  <hainque@adacore.com>\n+2018-05-21  Olivier Hainque  <hainque@adacore.com>\n \n \t* libgnat/s-dwalin.ads (Dwarf_Context): Rename Load_Slide as\n \tLoad_Address.\n \t* libgnat/s-dwalin.adb (Is_Inside): Adjust accordingly.\n \t(Set_Load_Address): Likewise.\n \t(Symbolic_Traceback): Likewise.\n \n-2018-04-04  Olivier Hainque  <hainque@adacore.com>\n+2018-05-21  Olivier Hainque  <hainque@adacore.com>\n \n \t* libgnat/s-trasym__dwarf.adb (Add_Module_To_Cache): Expect a\n \tLoad_Address argument and pass it down to Init_Module.\n \t* libgnat/s-tsmona__linux.adb (Build_Cache_For_All_Modules): Pass\n \tlm.l_addr as the Load_Address to Add_Module_To_Cache.\n \n-2018-04-04  Piotr Trojanek  <trojanek@adacore.com>\n+2018-05-21  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* einfo.adb (Has_Discriminants): Stronger assertion.\n \t(Set_Has_Discriminants): Stronger assertion.\n@@ -241,22 +241,22 @@\n \t* sem_ch3.adb (Derived_Type_Declaration): Only call\n \tSet_Has_Discriminant on type entities.\n \n-2018-04-04  Arnaud Charlet  <charlet@adacore.com>\n+2018-05-21  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_unst.adb (Unnest_Subprogram): Unnest all subprograms relevant for\n \tcode generation.\n \n-2018-04-04  Piotr Trojanek  <trojanek@adacore.com>\n+2018-05-21  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* lib.ads: Fix typo in enumeration in comment.\n \n-2018-04-04  Ed Schonberg  <schonberg@adacore.com>\n+2018-05-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_attr.adb (Analyze_Attribute, case Scalar_Storage_Order): The\n \tattribute reference is legal within a generic unit when the prefix is a\n \tformal private type.\n \n-2018-04-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+2018-05-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch7.adb (Establish_Transient_Scope): Code cleanup. Do not\n \tdelegate the secondary stack management when there is no suitable\n@@ -278,7 +278,7 @@\n \t(Requires_Transient_Scope) to determine that the function will emply\n \tthe secondary stack.\n \n-2018-04-04  Piotr Trojanek  <trojanek@adacore.com>\n+2018-05-21  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* ada_get_targ.adb: Fix subprogram body headers.\n \t* adabkend.adb: Likewise."}]}