{"sha": "ec1a23e60be615ad0d491952df1dad0a96b2b1e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMxYTIzZTYwYmU2MTVhZDBkNDkxOTUyZGYxZGFkMGE5NmIyYjFlNQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-01-31T07:48:54Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-01-31T07:48:54Z"}, "message": "cpphash.h (struct cpp_reader): New saved_flags.\n\n        * cpphash.h (struct cpp_reader): New saved_flags.\n        * cppmacro.c (cpp_get_token): Use saved_flags to remember\n        to avoid a paste after a pasted token.\n\nFrom-SVN: r39366", "tree": {"sha": "8b9564ea8b420982bc623a4c87b79e5a4a0cd950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b9564ea8b420982bc623a4c87b79e5a4a0cd950"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec1a23e60be615ad0d491952df1dad0a96b2b1e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec1a23e60be615ad0d491952df1dad0a96b2b1e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec1a23e60be615ad0d491952df1dad0a96b2b1e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec1a23e60be615ad0d491952df1dad0a96b2b1e5/comments", "author": null, "committer": null, "parents": [{"sha": "5d0e648684ed1f9d4d24bf1ba2b98a78e183256a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d0e648684ed1f9d4d24bf1ba2b98a78e183256a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d0e648684ed1f9d4d24bf1ba2b98a78e183256a"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "e4016f1313823c63737fb8fdb07fc7f68f6aae7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1a23e60be615ad0d491952df1dad0a96b2b1e5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1a23e60be615ad0d491952df1dad0a96b2b1e5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec1a23e60be615ad0d491952df1dad0a96b2b1e5", "patch": "@@ -1,3 +1,9 @@\n+2001-01-31  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+        * cpphash.h (struct cpp_reader): New saved_flags.\n+        * cppmacro.c (cpp_get_token): Use saved_flags to remember\n+        to avoid a paste after a pasted token.\n+\t  \n 2001-01-31  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* libgcc2.h (Wtype_MAX, Wtype_MIN): Define."}, {"sha": "6874c21d41c68221ff3bd27cf14c383d5e2436e2", "filename": "gcc/cpphash.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1a23e60be615ad0d491952df1dad0a96b2b1e5/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1a23e60be615ad0d491952df1dad0a96b2b1e5/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=ec1a23e60be615ad0d491952df1dad0a96b2b1e5", "patch": "@@ -331,6 +331,9 @@ struct cpp_reader\n   /* We're printed a warning recommending against using #import.  */\n   unsigned char import_warning;\n \n+  /* Used to flag the token after a paste AVOID_LPASTE.  */\n+  unsigned char saved_flags;\n+\n   /* True after cpp_start_read completes.  Used to inhibit some\n      warnings while parsing the command line.  */\n   unsigned char done_initializing;"}, {"sha": "2d4663d46711584a591e5beaf5258cc9bf7478ad", "filename": "gcc/cppmacro.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1a23e60be615ad0d491952df1dad0a96b2b1e5/gcc%2Fcppmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1a23e60be615ad0d491952df1dad0a96b2b1e5/gcc%2Fcppmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmacro.c?ref=ec1a23e60be615ad0d491952df1dad0a96b2b1e5", "patch": "@@ -906,7 +906,9 @@ cpp_get_token (pfile, token)\n      cpp_reader *pfile;\n      cpp_token *token;\n {\n-  unsigned char flags = 0;\n+  unsigned char flags = pfile->saved_flags;\n+\n+  pfile->saved_flags = 0;\n \n   for (;;)\n     {\n@@ -922,7 +924,10 @@ cpp_get_token (pfile, token)\n \t  *token = *context->list.first++;\n \t  /* PASTE_LEFT tokens can only appear in macro expansions.  */\n \t  if (token->flags & PASTE_LEFT)\n-\t    paste_all_tokens (pfile, token);\n+\t    {\n+\t      paste_all_tokens (pfile, token);\n+\t      pfile->saved_flags = AVOID_LPASTE;\n+\t    }\n \t}\n       else\n \t{"}]}