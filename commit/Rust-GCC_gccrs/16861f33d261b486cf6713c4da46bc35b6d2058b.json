{"sha": "16861f33d261b486cf6713c4da46bc35b6d2058b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY4NjFmMzNkMjYxYjQ4NmNmNjcxM2M0ZGE0NmJjMzViNmQyMDU4Yg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-05-20T02:31:24Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-05-20T02:31:24Z"}, "message": "rs6000.h (FUNCTION_VALUE): Only return vectors in an altivec register if TARGET_ALTIVEC.\n\n2002-05-19  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config/rs6000/rs6000.h (FUNCTION_VALUE): Only return vectors in\n        an altivec register if TARGET_ALTIVEC.\n\n        * config/rs600/rs6000.c (rs6000_emit_move): Change VECTOR_MODE_P\n        to ALTIVEC_VECTOR_MODE.\n        (rs6000_va_arg): Only vectors of type AltiVec are 16 byte aligned.\n        (rs6000_va_arg): Vectors may go in registers if they are not\n        altivec vectors.\n\nFrom-SVN: r53645", "tree": {"sha": "e6390ec5fda5a72c7e3f96c49244630019fc64c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6390ec5fda5a72c7e3f96c49244630019fc64c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16861f33d261b486cf6713c4da46bc35b6d2058b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16861f33d261b486cf6713c4da46bc35b6d2058b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16861f33d261b486cf6713c4da46bc35b6d2058b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16861f33d261b486cf6713c4da46bc35b6d2058b/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "23459e152d4a0d5d945b427a7c7601e35dac653e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23459e152d4a0d5d945b427a7c7601e35dac653e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23459e152d4a0d5d945b427a7c7601e35dac653e"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "bf0d2b7da148030bbbbdf30454d800851944f4c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16861f33d261b486cf6713c4da46bc35b6d2058b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16861f33d261b486cf6713c4da46bc35b6d2058b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16861f33d261b486cf6713c4da46bc35b6d2058b", "patch": "@@ -1,3 +1,14 @@\n+2002-05-19  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/rs6000/rs6000.h (FUNCTION_VALUE): Only return vectors in\n+        an altivec register if TARGET_ALTIVEC.\n+\n+        * config/rs600/rs6000.c (rs6000_emit_move): Change VECTOR_MODE_P\n+        to ALTIVEC_VECTOR_MODE.\n+        (rs6000_va_arg): Only vectors of type AltiVec are 16 byte aligned.\n+        (rs6000_va_arg): Vectors may go in registers if they are not\n+        altivec vectors.\n+\n 2002-05-19  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* protoize.c: Fix formatting."}, {"sha": "071e400188acae0e135736bc85f64bd98796e7ad", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16861f33d261b486cf6713c4da46bc35b6d2058b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16861f33d261b486cf6713c4da46bc35b6d2058b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=16861f33d261b486cf6713c4da46bc35b6d2058b", "patch": "@@ -2315,7 +2315,7 @@ rs6000_emit_move (dest, source, mode)\n \n   /* Handle the case where reload calls us with an invalid address;\n      and the case of CONSTANT_P_RTX.  */\n-  if (!VECTOR_MODE_P (mode)\n+  if (!ALTIVEC_VECTOR_MODE (mode)\n       && (! general_operand (operands[1], mode)\n \t  || ! nonimmediate_operand (operands[0], mode)\n \t  || GET_CODE (operands[1]) == CONSTANT_P_RTX))\n@@ -3225,8 +3225,8 @@ rs6000_va_arg (valist, type)\n   lab_over = gen_label_rtx ();\n   addr_rtx = gen_reg_rtx (Pmode);\n \n-  /*  Vectors never go in registers.  */\n-  if (TREE_CODE (type) != VECTOR_TYPE)\n+  /*  AltiVec vectors never go in registers.  */\n+  if (!TARGET_ALTIVEC || TREE_CODE (type) != VECTOR_TYPE)\n     {\n       TREE_THIS_VOLATILE (reg) = 1;\n       emit_cmp_and_jump_insns\n@@ -3280,7 +3280,8 @@ rs6000_va_arg (valist, type)\n      All AltiVec vectors go in the overflow area.  So in the AltiVec\n      case we need to get the vectors from the overflow area, but\n      remember where the GPRs and FPRs are.  */\n-  if (n_reg > 1 && TREE_CODE (type) != VECTOR_TYPE)\n+  if (n_reg > 1 && (TREE_CODE (type) != VECTOR_TYPE\n+\t\t    || !TARGET_ALTIVEC))\n     {\n       t = build (MODIFY_EXPR, TREE_TYPE (reg), reg, build_int_2 (8, 0));\n       TREE_SIDE_EFFECTS (t) = 1;\n@@ -3294,8 +3295,8 @@ rs6000_va_arg (valist, type)\n     {\n       int align;\n \n-      /* Vectors are 16 byte aligned.  */\n-      if (TREE_CODE (type) == VECTOR_TYPE)\n+      /* AltiVec vectors are 16 byte aligned.  */\n+      if (TARGET_ALTIVEC && TREE_CODE (type) == VECTOR_TYPE)\n \talign = 15;\n       else\n \talign = 7;"}, {"sha": "4e9edffe82aa1e60f7b4b04139f376ee9321c328", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16861f33d261b486cf6713c4da46bc35b6d2058b/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16861f33d261b486cf6713c4da46bc35b6d2058b/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=16861f33d261b486cf6713c4da46bc35b6d2058b", "patch": "@@ -1460,7 +1460,8 @@ typedef struct rs6000_stack {\n \t\t&& TYPE_PRECISION (VALTYPE) < BITS_PER_WORD)\t\\\n \t       || POINTER_TYPE_P (VALTYPE)\t\t\t\\\n \t       ? word_mode : TYPE_MODE (VALTYPE),\t\t\\\n-\t       TREE_CODE (VALTYPE) == VECTOR_TYPE ? ALTIVEC_ARG_RETURN \\\n+\t       TREE_CODE (VALTYPE) == VECTOR_TYPE\t\t\\\n+\t       && TARGET_ALTIVEC ? ALTIVEC_ARG_RETURN\t\t\\\n \t       : TREE_CODE (VALTYPE) == REAL_TYPE && TARGET_HARD_FLOAT \\\n                ? FP_ARG_RETURN : GP_ARG_RETURN)\n "}]}