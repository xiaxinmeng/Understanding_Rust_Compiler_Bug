{"sha": "3de627ffe4b51b3d82acdb5fb04c189978697832", "node_id": "C_kwDOANBUbNoAKDNkZTYyN2ZmZTRiNTFiM2Q4MmFjZGI1ZmIwNGMxODk5Nzg2OTc4MzI", "commit": {"author": {"name": "Weimin Pan", "email": "weimin.pan@oracle.com", "date": "2022-11-25T14:26:35Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-11-25T15:48:03Z"}, "message": "sync libsframe toplevel from binutils-gdb\n\nThis pulls in the toplevel portion of this binutils-gdb commit:\n   19e559f1c91bfaedbd2f91d85ee161f3f03fda3c libsframe: add the SFrame library\n\nChangeLog:\n\t* Makefile.def: Add libsframe as new module with its dependencies.\n\t* Makefile.in: Regenerated.\n\t* configure.ac: Add libsframe to host_libs.\n\t* configure: Regenerated.", "tree": {"sha": "d4c95e5d67e606bc590b8f20eea6fa94b4d150cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4c95e5d67e606bc590b8f20eea6fa94b4d150cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3de627ffe4b51b3d82acdb5fb04c189978697832", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3de627ffe4b51b3d82acdb5fb04c189978697832", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3de627ffe4b51b3d82acdb5fb04c189978697832", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3de627ffe4b51b3d82acdb5fb04c189978697832/comments", "author": {"login": "wmwpan", "id": 50341885, "node_id": "MDQ6VXNlcjUwMzQxODg1", "avatar_url": "https://avatars.githubusercontent.com/u/50341885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wmwpan", "html_url": "https://github.com/wmwpan", "followers_url": "https://api.github.com/users/wmwpan/followers", "following_url": "https://api.github.com/users/wmwpan/following{/other_user}", "gists_url": "https://api.github.com/users/wmwpan/gists{/gist_id}", "starred_url": "https://api.github.com/users/wmwpan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wmwpan/subscriptions", "organizations_url": "https://api.github.com/users/wmwpan/orgs", "repos_url": "https://api.github.com/users/wmwpan/repos", "events_url": "https://api.github.com/users/wmwpan/events{/privacy}", "received_events_url": "https://api.github.com/users/wmwpan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b648e8313fdad9b782986eabf0c25253e6ff37e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b648e8313fdad9b782986eabf0c25253e6ff37e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b648e8313fdad9b782986eabf0c25253e6ff37e"}], "stats": {"total": 1294, "additions": 1287, "deletions": 7}, "files": [{"sha": "83ae77586ad618f00bd957ebc1e9505f0ec0b797", "filename": "Makefile.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de627ffe4b51b3d82acdb5fb04c189978697832/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de627ffe4b51b3d82acdb5fb04c189978697832/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=3de627ffe4b51b3d82acdb5fb04c189978697832", "patch": "@@ -145,6 +145,7 @@ host_modules= { module= lto-plugin; bootstrap=true;\n host_modules= { module= libcc1; extra_configure_flags=--enable-shared; };\n host_modules= { module= gotools; };\n host_modules= { module= libctf; bootstrap=true; };\n+host_modules= { module= libsframe; bootstrap=true; };\n \n target_modules = { module= libstdc++-v3;\n \t\t   bootstrap=true;\n@@ -470,6 +471,7 @@ dependencies = { module=all-binutils; on=all-intl; };\n dependencies = { module=all-binutils; on=all-gas; };\n dependencies = { module=all-binutils; on=all-libctf; };\n dependencies = { module=all-ld; on=all-libctf; };\n+dependencies = { module=all-binutils; on=all-libsframe; };\n \n // We put install-opcodes before install-binutils because the installed\n // binutils might be on PATH, and they might need the shared opcodes"}, {"sha": "e5bed1bea3a5c00f6bd797483a44b9924dc0a79d", "filename": "Makefile.in", "status": "modified", "additions": 1283, "deletions": 5, "changes": 1288, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de627ffe4b51b3d82acdb5fb04c189978697832/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de627ffe4b51b3d82acdb5fb04c189978697832/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=3de627ffe4b51b3d82acdb5fb04c189978697832", "patch": "@@ -1097,7 +1097,8 @@ configure-host:  \\\n     maybe-configure-lto-plugin \\\n     maybe-configure-libcc1 \\\n     maybe-configure-gotools \\\n-    maybe-configure-libctf\n+    maybe-configure-libctf \\\n+    maybe-configure-libsframe\n .PHONY: configure-target\n configure-target:  \\\n     maybe-configure-target-libstdc++-v3 \\\n@@ -1273,6 +1274,9 @@ all-host: maybe-all-gotools\n @if libctf-no-bootstrap\n all-host: maybe-all-libctf\n @endif libctf-no-bootstrap\n+@if libsframe-no-bootstrap\n+all-host: maybe-all-libsframe\n+@endif libsframe-no-bootstrap\n \n .PHONY: all-target\n \n@@ -1384,6 +1388,7 @@ info-host: maybe-info-lto-plugin\n info-host: maybe-info-libcc1\n info-host: maybe-info-gotools\n info-host: maybe-info-libctf\n+info-host: maybe-info-libsframe\n \n .PHONY: info-target\n \n@@ -1472,6 +1477,7 @@ dvi-host: maybe-dvi-lto-plugin\n dvi-host: maybe-dvi-libcc1\n dvi-host: maybe-dvi-gotools\n dvi-host: maybe-dvi-libctf\n+dvi-host: maybe-dvi-libsframe\n \n .PHONY: dvi-target\n \n@@ -1560,6 +1566,7 @@ pdf-host: maybe-pdf-lto-plugin\n pdf-host: maybe-pdf-libcc1\n pdf-host: maybe-pdf-gotools\n pdf-host: maybe-pdf-libctf\n+pdf-host: maybe-pdf-libsframe\n \n .PHONY: pdf-target\n \n@@ -1648,6 +1655,7 @@ html-host: maybe-html-lto-plugin\n html-host: maybe-html-libcc1\n html-host: maybe-html-gotools\n html-host: maybe-html-libctf\n+html-host: maybe-html-libsframe\n \n .PHONY: html-target\n \n@@ -1736,6 +1744,7 @@ TAGS-host: maybe-TAGS-lto-plugin\n TAGS-host: maybe-TAGS-libcc1\n TAGS-host: maybe-TAGS-gotools\n TAGS-host: maybe-TAGS-libctf\n+TAGS-host: maybe-TAGS-libsframe\n \n .PHONY: TAGS-target\n \n@@ -1824,6 +1833,7 @@ install-info-host: maybe-install-info-lto-plugin\n install-info-host: maybe-install-info-libcc1\n install-info-host: maybe-install-info-gotools\n install-info-host: maybe-install-info-libctf\n+install-info-host: maybe-install-info-libsframe\n \n .PHONY: install-info-target\n \n@@ -1912,6 +1922,7 @@ install-dvi-host: maybe-install-dvi-lto-plugin\n install-dvi-host: maybe-install-dvi-libcc1\n install-dvi-host: maybe-install-dvi-gotools\n install-dvi-host: maybe-install-dvi-libctf\n+install-dvi-host: maybe-install-dvi-libsframe\n \n .PHONY: install-dvi-target\n \n@@ -2000,6 +2011,7 @@ install-pdf-host: maybe-install-pdf-lto-plugin\n install-pdf-host: maybe-install-pdf-libcc1\n install-pdf-host: maybe-install-pdf-gotools\n install-pdf-host: maybe-install-pdf-libctf\n+install-pdf-host: maybe-install-pdf-libsframe\n \n .PHONY: install-pdf-target\n \n@@ -2088,6 +2100,7 @@ install-html-host: maybe-install-html-lto-plugin\n install-html-host: maybe-install-html-libcc1\n install-html-host: maybe-install-html-gotools\n install-html-host: maybe-install-html-libctf\n+install-html-host: maybe-install-html-libsframe\n \n .PHONY: install-html-target\n \n@@ -2176,6 +2189,7 @@ installcheck-host: maybe-installcheck-lto-plugin\n installcheck-host: maybe-installcheck-libcc1\n installcheck-host: maybe-installcheck-gotools\n installcheck-host: maybe-installcheck-libctf\n+installcheck-host: maybe-installcheck-libsframe\n \n .PHONY: installcheck-target\n \n@@ -2264,6 +2278,7 @@ mostlyclean-host: maybe-mostlyclean-lto-plugin\n mostlyclean-host: maybe-mostlyclean-libcc1\n mostlyclean-host: maybe-mostlyclean-gotools\n mostlyclean-host: maybe-mostlyclean-libctf\n+mostlyclean-host: maybe-mostlyclean-libsframe\n \n .PHONY: mostlyclean-target\n \n@@ -2352,6 +2367,7 @@ clean-host: maybe-clean-lto-plugin\n clean-host: maybe-clean-libcc1\n clean-host: maybe-clean-gotools\n clean-host: maybe-clean-libctf\n+clean-host: maybe-clean-libsframe\n \n .PHONY: clean-target\n \n@@ -2440,6 +2456,7 @@ distclean-host: maybe-distclean-lto-plugin\n distclean-host: maybe-distclean-libcc1\n distclean-host: maybe-distclean-gotools\n distclean-host: maybe-distclean-libctf\n+distclean-host: maybe-distclean-libsframe\n \n .PHONY: distclean-target\n \n@@ -2528,6 +2545,7 @@ maintainer-clean-host: maybe-maintainer-clean-lto-plugin\n maintainer-clean-host: maybe-maintainer-clean-libcc1\n maintainer-clean-host: maybe-maintainer-clean-gotools\n maintainer-clean-host: maybe-maintainer-clean-libctf\n+maintainer-clean-host: maybe-maintainer-clean-libsframe\n \n .PHONY: maintainer-clean-target\n \n@@ -2673,7 +2691,8 @@ check-host:  \\\n     maybe-check-lto-plugin \\\n     maybe-check-libcc1 \\\n     maybe-check-gotools \\\n-    maybe-check-libctf\n+    maybe-check-libctf \\\n+    maybe-check-libsframe\n \n .PHONY: check-target\n check-target:  \\\n@@ -2808,7 +2827,8 @@ install-host-nogcc:  \\\n     maybe-install-lto-plugin \\\n     maybe-install-libcc1 \\\n     maybe-install-gotools \\\n-    maybe-install-libctf\n+    maybe-install-libctf \\\n+    maybe-install-libsframe\n \n .PHONY: install-host\n install-host:  \\\n@@ -2862,7 +2882,8 @@ install-host:  \\\n     maybe-install-lto-plugin \\\n     maybe-install-libcc1 \\\n     maybe-install-gotools \\\n-    maybe-install-libctf\n+    maybe-install-libctf \\\n+    maybe-install-libsframe\n \n .PHONY: install-target\n install-target:  \\\n@@ -2970,7 +2991,8 @@ install-strip-host:  \\\n     maybe-install-strip-lto-plugin \\\n     maybe-install-strip-libcc1 \\\n     maybe-install-strip-gotools \\\n-    maybe-install-strip-libctf\n+    maybe-install-strip-libctf \\\n+    maybe-install-strip-libsframe\n \n .PHONY: install-strip-target\n install-strip-target:  \\\n@@ -42376,6 +42398,1146 @@ maintainer-clean-libctf:\n \n \n \n+.PHONY: configure-libsframe maybe-configure-libsframe\n+maybe-configure-libsframe:\n+@if gcc-bootstrap\n+configure-libsframe: stage_current\n+@endif gcc-bootstrap\n+@if libsframe\n+maybe-configure-libsframe: configure-libsframe\n+configure-libsframe: \n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\ttest ! -f $(HOST_SUBDIR)/libsframe/Makefile || exit 0; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe; \\\n+\t$(HOST_EXPORTS)  \\\n+\techo Configuring in $(HOST_SUBDIR)/libsframe; \\\n+\tcd \"$(HOST_SUBDIR)/libsframe\" || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libsframe/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libsframe; \\\n+\t$(SHELL) \\\n+\t  $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias}  \\\n+\t  || exit 1\n+@endif libsframe\n+\n+\n+\n+.PHONY: configure-stage1-libsframe maybe-configure-stage1-libsframe\n+maybe-configure-stage1-libsframe:\n+@if libsframe-bootstrap\n+maybe-configure-stage1-libsframe: configure-stage1-libsframe\n+configure-stage1-libsframe:\n+\t@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE1_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libsframe/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE1_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE1_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(LIBCFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 1 in $(HOST_SUBDIR)/libsframe; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe; \\\n+\tcd $(HOST_SUBDIR)/libsframe || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libsframe/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libsframe; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t   \\\n+\t  $(STAGE1_CONFIGURE_FLAGS)\n+@endif libsframe-bootstrap\n+\n+.PHONY: configure-stage2-libsframe maybe-configure-stage2-libsframe\n+maybe-configure-stage2-libsframe:\n+@if libsframe-bootstrap\n+maybe-configure-stage2-libsframe: configure-stage2-libsframe\n+configure-stage2-libsframe:\n+\t@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE2_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libsframe/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE2_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE2_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE2_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 2 in $(HOST_SUBDIR)/libsframe; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe; \\\n+\tcd $(HOST_SUBDIR)/libsframe || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libsframe/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libsframe; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGE2_CONFIGURE_FLAGS)\n+@endif libsframe-bootstrap\n+\n+.PHONY: configure-stage3-libsframe maybe-configure-stage3-libsframe\n+maybe-configure-stage3-libsframe:\n+@if libsframe-bootstrap\n+maybe-configure-stage3-libsframe: configure-stage3-libsframe\n+configure-stage3-libsframe:\n+\t@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE3_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libsframe/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE3_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE3_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE3_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 3 in $(HOST_SUBDIR)/libsframe; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe; \\\n+\tcd $(HOST_SUBDIR)/libsframe || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libsframe/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libsframe; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGE3_CONFIGURE_FLAGS)\n+@endif libsframe-bootstrap\n+\n+.PHONY: configure-stage4-libsframe maybe-configure-stage4-libsframe\n+maybe-configure-stage4-libsframe:\n+@if libsframe-bootstrap\n+maybe-configure-stage4-libsframe: configure-stage4-libsframe\n+configure-stage4-libsframe:\n+\t@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE4_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libsframe/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGE4_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGE4_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGE4_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage 4 in $(HOST_SUBDIR)/libsframe; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe; \\\n+\tcd $(HOST_SUBDIR)/libsframe || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libsframe/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libsframe; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGE4_CONFIGURE_FLAGS)\n+@endif libsframe-bootstrap\n+\n+.PHONY: configure-stageprofile-libsframe maybe-configure-stageprofile-libsframe\n+maybe-configure-stageprofile-libsframe:\n+@if libsframe-bootstrap\n+maybe-configure-stageprofile-libsframe: configure-stageprofile-libsframe\n+configure-stageprofile-libsframe:\n+\t@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libsframe/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEprofile_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEprofile_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEprofile_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage profile in $(HOST_SUBDIR)/libsframe; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe; \\\n+\tcd $(HOST_SUBDIR)/libsframe || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libsframe/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libsframe; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEprofile_CONFIGURE_FLAGS)\n+@endif libsframe-bootstrap\n+\n+.PHONY: configure-stagetrain-libsframe maybe-configure-stagetrain-libsframe\n+maybe-configure-stagetrain-libsframe:\n+@if libsframe-bootstrap\n+maybe-configure-stagetrain-libsframe: configure-stagetrain-libsframe\n+configure-stagetrain-libsframe:\n+\t@[ $(current_stage) = stagetrain ] || $(MAKE) stagetrain-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libsframe/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEtrain_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEtrain_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEtrain_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage train in $(HOST_SUBDIR)/libsframe; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe; \\\n+\tcd $(HOST_SUBDIR)/libsframe || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libsframe/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libsframe; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEtrain_CONFIGURE_FLAGS)\n+@endif libsframe-bootstrap\n+\n+.PHONY: configure-stagefeedback-libsframe maybe-configure-stagefeedback-libsframe\n+maybe-configure-stagefeedback-libsframe:\n+@if libsframe-bootstrap\n+maybe-configure-stagefeedback-libsframe: configure-stagefeedback-libsframe\n+configure-stagefeedback-libsframe:\n+\t@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libsframe/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEfeedback_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEfeedback_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEfeedback_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage feedback in $(HOST_SUBDIR)/libsframe; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe; \\\n+\tcd $(HOST_SUBDIR)/libsframe || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libsframe/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libsframe; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEfeedback_CONFIGURE_FLAGS)\n+@endif libsframe-bootstrap\n+\n+.PHONY: configure-stageautoprofile-libsframe maybe-configure-stageautoprofile-libsframe\n+maybe-configure-stageautoprofile-libsframe:\n+@if libsframe-bootstrap\n+maybe-configure-stageautoprofile-libsframe: configure-stageautoprofile-libsframe\n+configure-stageautoprofile-libsframe:\n+\t@[ $(current_stage) = stageautoprofile ] || $(MAKE) stageautoprofile-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libsframe/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEautoprofile_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEautoprofile_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEautoprofile_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage autoprofile in $(HOST_SUBDIR)/libsframe; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe; \\\n+\tcd $(HOST_SUBDIR)/libsframe || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libsframe/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libsframe; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEautoprofile_CONFIGURE_FLAGS)\n+@endif libsframe-bootstrap\n+\n+.PHONY: configure-stageautofeedback-libsframe maybe-configure-stageautofeedback-libsframe\n+maybe-configure-stageautofeedback-libsframe:\n+@if libsframe-bootstrap\n+maybe-configure-stageautofeedback-libsframe: configure-stageautofeedback-libsframe\n+configure-stageautofeedback-libsframe:\n+\t@[ $(current_stage) = stageautofeedback ] || $(MAKE) stageautofeedback-start\n+\t@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\"; \\\n+\ttest ! -f $(HOST_SUBDIR)/libsframe/Makefile || exit 0; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS) \\\n+\tCFLAGS=\"$(STAGEautofeedback_CFLAGS)\"; export CFLAGS; \\\n+\tCXXFLAGS=\"$(STAGEautofeedback_CXXFLAGS)\"; export CXXFLAGS; \\\n+\tLIBCFLAGS=\"$(STAGEautofeedback_CFLAGS)\"; export LIBCFLAGS;  \\\n+\techo Configuring stage autofeedback in $(HOST_SUBDIR)/libsframe; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/libsframe; \\\n+\tcd $(HOST_SUBDIR)/libsframe || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(HOST_SUBDIR)/libsframe/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libsframe; \\\n+\t$(SHELL) $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \\\n+\t  --target=${target_alias} \\\n+\t  --with-build-libsubdir=$(HOST_SUBDIR) \\\n+\t  $(STAGEautofeedback_CONFIGURE_FLAGS)\n+@endif libsframe-bootstrap\n+\n+\n+\n+\n+\n+.PHONY: all-libsframe maybe-all-libsframe\n+maybe-all-libsframe:\n+@if gcc-bootstrap\n+all-libsframe: stage_current\n+@endif gcc-bootstrap\n+@if libsframe\n+TARGET-libsframe=all\n+maybe-all-libsframe: all-libsframe\n+all-libsframe: configure-libsframe\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS)  \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n+\t\t$(TARGET-libsframe))\n+@endif libsframe\n+\n+\n+\n+.PHONY: all-stage1-libsframe maybe-all-stage1-libsframe\n+.PHONY: clean-stage1-libsframe maybe-clean-stage1-libsframe\n+maybe-all-stage1-libsframe:\n+maybe-clean-stage1-libsframe:\n+@if libsframe-bootstrap\n+maybe-all-stage1-libsframe: all-stage1-libsframe\n+all-stage1: all-stage1-libsframe\n+TARGET-stage1-libsframe = $(TARGET-libsframe)\n+all-stage1-libsframe: configure-stage1-libsframe\n+\t@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE1_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE1_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE1_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE1_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(LIBCFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE1_TFLAGS)\"  \\\n+\t\t$(TARGET-stage1-libsframe)\n+\n+maybe-clean-stage1-libsframe: clean-stage1-libsframe\n+clean-stage1: clean-stage1-libsframe\n+clean-stage1-libsframe:\n+\t@if [ $(current_stage) = stage1 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libsframe/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage1-libsframe/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage1-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n+@endif libsframe-bootstrap\n+\n+\n+.PHONY: all-stage2-libsframe maybe-all-stage2-libsframe\n+.PHONY: clean-stage2-libsframe maybe-clean-stage2-libsframe\n+maybe-all-stage2-libsframe:\n+maybe-clean-stage2-libsframe:\n+@if libsframe-bootstrap\n+maybe-all-stage2-libsframe: all-stage2-libsframe\n+all-stage2: all-stage2-libsframe\n+TARGET-stage2-libsframe = $(TARGET-libsframe)\n+all-stage2-libsframe: configure-stage2-libsframe\n+\t@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE2_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE2_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE2_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE2_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE2_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE2_TFLAGS)\"  \\\n+\t\t$(TARGET-stage2-libsframe)\n+\n+maybe-clean-stage2-libsframe: clean-stage2-libsframe\n+clean-stage2: clean-stage2-libsframe\n+clean-stage2-libsframe:\n+\t@if [ $(current_stage) = stage2 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libsframe/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage2-libsframe/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage2-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libsframe-bootstrap\n+\n+\n+.PHONY: all-stage3-libsframe maybe-all-stage3-libsframe\n+.PHONY: clean-stage3-libsframe maybe-clean-stage3-libsframe\n+maybe-all-stage3-libsframe:\n+maybe-clean-stage3-libsframe:\n+@if libsframe-bootstrap\n+maybe-all-stage3-libsframe: all-stage3-libsframe\n+all-stage3: all-stage3-libsframe\n+TARGET-stage3-libsframe = $(TARGET-libsframe)\n+all-stage3-libsframe: configure-stage3-libsframe\n+\t@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE3_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE3_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE3_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE3_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE3_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE3_TFLAGS)\"  \\\n+\t\t$(TARGET-stage3-libsframe)\n+\n+maybe-clean-stage3-libsframe: clean-stage3-libsframe\n+clean-stage3: clean-stage3-libsframe\n+clean-stage3-libsframe:\n+\t@if [ $(current_stage) = stage3 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libsframe/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage3-libsframe/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage3-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libsframe-bootstrap\n+\n+\n+.PHONY: all-stage4-libsframe maybe-all-stage4-libsframe\n+.PHONY: clean-stage4-libsframe maybe-clean-stage4-libsframe\n+maybe-all-stage4-libsframe:\n+maybe-clean-stage4-libsframe:\n+@if libsframe-bootstrap\n+maybe-all-stage4-libsframe: all-stage4-libsframe\n+all-stage4: all-stage4-libsframe\n+TARGET-stage4-libsframe = $(TARGET-libsframe)\n+all-stage4-libsframe: configure-stage4-libsframe\n+\t@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGE4_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGE4_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGE4_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGE4_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGE4_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGE4_TFLAGS)\"  \\\n+\t\t$(TARGET-stage4-libsframe)\n+\n+maybe-clean-stage4-libsframe: clean-stage4-libsframe\n+clean-stage4: clean-stage4-libsframe\n+clean-stage4-libsframe:\n+\t@if [ $(current_stage) = stage4 ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libsframe/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stage4-libsframe/Makefile ] || exit 0; \\\n+\t  $(MAKE) stage4-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libsframe-bootstrap\n+\n+\n+.PHONY: all-stageprofile-libsframe maybe-all-stageprofile-libsframe\n+.PHONY: clean-stageprofile-libsframe maybe-clean-stageprofile-libsframe\n+maybe-all-stageprofile-libsframe:\n+maybe-clean-stageprofile-libsframe:\n+@if libsframe-bootstrap\n+maybe-all-stageprofile-libsframe: all-stageprofile-libsframe\n+all-stageprofile: all-stageprofile-libsframe\n+TARGET-stageprofile-libsframe = $(TARGET-libsframe)\n+all-stageprofile-libsframe: configure-stageprofile-libsframe\n+\t@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEprofile_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEprofile_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEprofile_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEprofile_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEprofile_TFLAGS)\"  \\\n+\t\t$(TARGET-stageprofile-libsframe)\n+\n+maybe-clean-stageprofile-libsframe: clean-stageprofile-libsframe\n+clean-stageprofile: clean-stageprofile-libsframe\n+clean-stageprofile-libsframe:\n+\t@if [ $(current_stage) = stageprofile ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libsframe/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stageprofile-libsframe/Makefile ] || exit 0; \\\n+\t  $(MAKE) stageprofile-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libsframe-bootstrap\n+\n+\n+.PHONY: all-stagetrain-libsframe maybe-all-stagetrain-libsframe\n+.PHONY: clean-stagetrain-libsframe maybe-clean-stagetrain-libsframe\n+maybe-all-stagetrain-libsframe:\n+maybe-clean-stagetrain-libsframe:\n+@if libsframe-bootstrap\n+maybe-all-stagetrain-libsframe: all-stagetrain-libsframe\n+all-stagetrain: all-stagetrain-libsframe\n+TARGET-stagetrain-libsframe = $(TARGET-libsframe)\n+all-stagetrain-libsframe: configure-stagetrain-libsframe\n+\t@[ $(current_stage) = stagetrain ] || $(MAKE) stagetrain-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEtrain_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEtrain_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEtrain_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEtrain_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEtrain_TFLAGS)\"  \\\n+\t\t$(TARGET-stagetrain-libsframe)\n+\n+maybe-clean-stagetrain-libsframe: clean-stagetrain-libsframe\n+clean-stagetrain: clean-stagetrain-libsframe\n+clean-stagetrain-libsframe:\n+\t@if [ $(current_stage) = stagetrain ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libsframe/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stagetrain-libsframe/Makefile ] || exit 0; \\\n+\t  $(MAKE) stagetrain-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libsframe-bootstrap\n+\n+\n+.PHONY: all-stagefeedback-libsframe maybe-all-stagefeedback-libsframe\n+.PHONY: clean-stagefeedback-libsframe maybe-clean-stagefeedback-libsframe\n+maybe-all-stagefeedback-libsframe:\n+maybe-clean-stagefeedback-libsframe:\n+@if libsframe-bootstrap\n+maybe-all-stagefeedback-libsframe: all-stagefeedback-libsframe\n+all-stagefeedback: all-stagefeedback-libsframe\n+TARGET-stagefeedback-libsframe = $(TARGET-libsframe)\n+all-stagefeedback-libsframe: configure-stagefeedback-libsframe\n+\t@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEfeedback_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEfeedback_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEfeedback_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEfeedback_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEfeedback_TFLAGS)\"  \\\n+\t\t$(TARGET-stagefeedback-libsframe)\n+\n+maybe-clean-stagefeedback-libsframe: clean-stagefeedback-libsframe\n+clean-stagefeedback: clean-stagefeedback-libsframe\n+clean-stagefeedback-libsframe:\n+\t@if [ $(current_stage) = stagefeedback ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libsframe/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stagefeedback-libsframe/Makefile ] || exit 0; \\\n+\t  $(MAKE) stagefeedback-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libsframe-bootstrap\n+\n+\n+.PHONY: all-stageautoprofile-libsframe maybe-all-stageautoprofile-libsframe\n+.PHONY: clean-stageautoprofile-libsframe maybe-clean-stageautoprofile-libsframe\n+maybe-all-stageautoprofile-libsframe:\n+maybe-clean-stageautoprofile-libsframe:\n+@if libsframe-bootstrap\n+maybe-all-stageautoprofile-libsframe: all-stageautoprofile-libsframe\n+all-stageautoprofile: all-stageautoprofile-libsframe\n+TARGET-stageautoprofile-libsframe = $(TARGET-libsframe)\n+all-stageautoprofile-libsframe: configure-stageautoprofile-libsframe\n+\t@[ $(current_stage) = stageautoprofile ] || $(MAKE) stageautoprofile-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t$$s/gcc/config/i386/$(AUTO_PROFILE) \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEautoprofile_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEautoprofile_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEautoprofile_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEautoprofile_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEautoprofile_TFLAGS)\"  \\\n+\t\t$(TARGET-stageautoprofile-libsframe)\n+\n+maybe-clean-stageautoprofile-libsframe: clean-stageautoprofile-libsframe\n+clean-stageautoprofile: clean-stageautoprofile-libsframe\n+clean-stageautoprofile-libsframe:\n+\t@if [ $(current_stage) = stageautoprofile ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libsframe/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stageautoprofile-libsframe/Makefile ] || exit 0; \\\n+\t  $(MAKE) stageautoprofile-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libsframe-bootstrap\n+\n+\n+.PHONY: all-stageautofeedback-libsframe maybe-all-stageautofeedback-libsframe\n+.PHONY: clean-stageautofeedback-libsframe maybe-clean-stageautofeedback-libsframe\n+maybe-all-stageautofeedback-libsframe:\n+maybe-clean-stageautofeedback-libsframe:\n+@if libsframe-bootstrap\n+maybe-all-stageautofeedback-libsframe: all-stageautofeedback-libsframe\n+all-stageautofeedback: all-stageautofeedback-libsframe\n+TARGET-stageautofeedback-libsframe = $(TARGET-libsframe)\n+all-stageautofeedback-libsframe: configure-stageautofeedback-libsframe\n+\t@[ $(current_stage) = stageautofeedback ] || $(MAKE) stageautofeedback-start\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\"; \\\n+\t$(HOST_EXPORTS) \\\n+\t$(POSTSTAGE1_HOST_EXPORTS)  \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t \\\n+\t$(MAKE) $(BASE_FLAGS_TO_PASS) \\\n+\t\tCFLAGS=\"$(STAGEautofeedback_CFLAGS)\" \\\n+\t\tGENERATOR_CFLAGS=\"$(STAGEautofeedback_GENERATOR_CFLAGS)\" \\\n+\t\tCXXFLAGS=\"$(STAGEautofeedback_CXXFLAGS)\" \\\n+\t\tLIBCFLAGS=\"$(STAGEautofeedback_CFLAGS)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n+\t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\t$(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  \\\n+\t\tTFLAGS=\"$(STAGEautofeedback_TFLAGS)\" PERF_DATA=perf.data \\\n+\t\t$(TARGET-stageautofeedback-libsframe)\n+\n+maybe-clean-stageautofeedback-libsframe: clean-stageautofeedback-libsframe\n+clean-stageautofeedback: clean-stageautofeedback-libsframe\n+clean-stageautofeedback-libsframe:\n+\t@if [ $(current_stage) = stageautofeedback ]; then \\\n+\t  [ -f $(HOST_SUBDIR)/libsframe/Makefile ] || exit 0; \\\n+\telse \\\n+\t  [ -f $(HOST_SUBDIR)/stageautofeedback-libsframe/Makefile ] || exit 0; \\\n+\t  $(MAKE) stageautofeedback-start; \\\n+\tfi; \\\n+\tcd $(HOST_SUBDIR)/libsframe && \\\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n+@endif libsframe-bootstrap\n+\n+\n+\n+\n+\n+.PHONY: check-libsframe maybe-check-libsframe\n+maybe-check-libsframe:\n+@if libsframe\n+maybe-check-libsframe: check-libsframe\n+\n+check-libsframe:\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  $(EXTRA_BOOTSTRAP_FLAGS) check)\n+\n+@endif libsframe\n+\n+.PHONY: install-libsframe maybe-install-libsframe\n+maybe-install-libsframe:\n+@if libsframe\n+maybe-install-libsframe: install-libsframe\n+\n+install-libsframe: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  install)\n+\n+@endif libsframe\n+\n+.PHONY: install-strip-libsframe maybe-install-strip-libsframe\n+maybe-install-strip-libsframe:\n+@if libsframe\n+maybe-install-strip-libsframe: install-strip-libsframe\n+\n+install-strip-libsframe: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  install-strip)\n+\n+@endif libsframe\n+\n+# Other targets (info, dvi, pdf, etc.)\n+\n+.PHONY: maybe-info-libsframe info-libsframe\n+maybe-info-libsframe:\n+@if libsframe\n+maybe-info-libsframe: info-libsframe\n+\n+info-libsframe: \\\n+    configure-libsframe \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing info in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          info) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-dvi-libsframe dvi-libsframe\n+maybe-dvi-libsframe:\n+@if libsframe\n+maybe-dvi-libsframe: dvi-libsframe\n+\n+dvi-libsframe: \\\n+    configure-libsframe \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing dvi in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          dvi) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-pdf-libsframe pdf-libsframe\n+maybe-pdf-libsframe:\n+@if libsframe\n+maybe-pdf-libsframe: pdf-libsframe\n+\n+pdf-libsframe: \\\n+    configure-libsframe \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing pdf in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          pdf) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-html-libsframe html-libsframe\n+maybe-html-libsframe:\n+@if libsframe\n+maybe-html-libsframe: html-libsframe\n+\n+html-libsframe: \\\n+    configure-libsframe \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing html in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          html) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-TAGS-libsframe TAGS-libsframe\n+maybe-TAGS-libsframe:\n+@if libsframe\n+maybe-TAGS-libsframe: TAGS-libsframe\n+\n+TAGS-libsframe: \\\n+    configure-libsframe \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing TAGS in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          TAGS) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-install-info-libsframe install-info-libsframe\n+maybe-install-info-libsframe:\n+@if libsframe\n+maybe-install-info-libsframe: install-info-libsframe\n+\n+install-info-libsframe: \\\n+    configure-libsframe \\\n+    info-libsframe \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing install-info in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          install-info) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-install-dvi-libsframe install-dvi-libsframe\n+maybe-install-dvi-libsframe:\n+@if libsframe\n+maybe-install-dvi-libsframe: install-dvi-libsframe\n+\n+install-dvi-libsframe: \\\n+    configure-libsframe \\\n+    dvi-libsframe \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing install-dvi in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          install-dvi) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-install-pdf-libsframe install-pdf-libsframe\n+maybe-install-pdf-libsframe:\n+@if libsframe\n+maybe-install-pdf-libsframe: install-pdf-libsframe\n+\n+install-pdf-libsframe: \\\n+    configure-libsframe \\\n+    pdf-libsframe \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing install-pdf in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          install-pdf) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-install-html-libsframe install-html-libsframe\n+maybe-install-html-libsframe:\n+@if libsframe\n+maybe-install-html-libsframe: install-html-libsframe\n+\n+install-html-libsframe: \\\n+    configure-libsframe \\\n+    html-libsframe \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing install-html in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          install-html) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-installcheck-libsframe installcheck-libsframe\n+maybe-installcheck-libsframe:\n+@if libsframe\n+maybe-installcheck-libsframe: installcheck-libsframe\n+\n+installcheck-libsframe: \\\n+    configure-libsframe \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing installcheck in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          installcheck) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-mostlyclean-libsframe mostlyclean-libsframe\n+maybe-mostlyclean-libsframe:\n+@if libsframe\n+maybe-mostlyclean-libsframe: mostlyclean-libsframe\n+\n+mostlyclean-libsframe: \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing mostlyclean in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          mostlyclean) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-clean-libsframe clean-libsframe\n+maybe-clean-libsframe:\n+@if libsframe\n+maybe-clean-libsframe: clean-libsframe\n+\n+clean-libsframe: \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing clean in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          clean) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-distclean-libsframe distclean-libsframe\n+maybe-distclean-libsframe:\n+@if libsframe\n+maybe-distclean-libsframe: distclean-libsframe\n+\n+distclean-libsframe: \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing distclean in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          distclean) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+.PHONY: maybe-maintainer-clean-libsframe maintainer-clean-libsframe\n+maybe-maintainer-clean-libsframe:\n+@if libsframe\n+maybe-maintainer-clean-libsframe: maintainer-clean-libsframe\n+\n+maintainer-clean-libsframe: \n+\t@[ -f ./libsframe/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\tfor flag in $(EXTRA_HOST_FLAGS) ; do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\techo \"Doing maintainer-clean in libsframe\"; \\\n+\t(cd $(HOST_SUBDIR)/libsframe && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t          maintainer-clean) \\\n+\t  || exit 1\n+\n+@endif libsframe\n+\n+\n+\n # ---------------------------------------\n # Modules which run on the target machine\n # ---------------------------------------\n@@ -60262,6 +61424,11 @@ stage1-start::\n \t  mkdir stage1-libctf; \\\n \tmv stage1-libctf libctf\n @endif libctf\n+@if libsframe\n+\t@cd $(HOST_SUBDIR); [ -d stage1-libsframe ] || \\\n+\t  mkdir stage1-libsframe; \\\n+\tmv stage1-libsframe libsframe\n+@endif libsframe\n \t@[ -d stage1-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stage1-$(TARGET_SUBDIR); \\\n \tmv stage1-$(TARGET_SUBDIR) $(TARGET_SUBDIR)\n@@ -60382,6 +61549,11 @@ stage1-end::\n \t  cd $(HOST_SUBDIR); mv libctf stage1-libctf; \\\n \tfi\n @endif libctf\n+@if libsframe\n+\t@if test -d $(HOST_SUBDIR)/libsframe; then \\\n+\t  cd $(HOST_SUBDIR); mv libsframe stage1-libsframe; \\\n+\tfi\n+@endif libsframe\n \t@if test -d $(TARGET_SUBDIR); then \\\n \t  mv $(TARGET_SUBDIR) stage1-$(TARGET_SUBDIR); \\\n \tfi\n@@ -60568,6 +61740,12 @@ stage2-start::\n \tmv stage2-libctf libctf; \\\n \tmv stage1-libctf prev-libctf || test -f stage1-lean \n @endif libctf\n+@if libsframe\n+\t@cd $(HOST_SUBDIR); [ -d stage2-libsframe ] || \\\n+\t  mkdir stage2-libsframe; \\\n+\tmv stage2-libsframe libsframe; \\\n+\tmv stage1-libsframe prev-libsframe || test -f stage1-lean \n+@endif libsframe\n \t@[ -d stage2-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stage2-$(TARGET_SUBDIR); \\\n \tmv stage2-$(TARGET_SUBDIR) $(TARGET_SUBDIR); \\\n@@ -60712,6 +61890,12 @@ stage2-end::\n \t  mv prev-libctf stage1-libctf; : ; \\\n \tfi\n @endif libctf\n+@if libsframe\n+\t@if test -d $(HOST_SUBDIR)/libsframe; then \\\n+\t  cd $(HOST_SUBDIR); mv libsframe stage2-libsframe; \\\n+\t  mv prev-libsframe stage1-libsframe; : ; \\\n+\tfi\n+@endif libsframe\n \t@if test -d $(TARGET_SUBDIR); then \\\n \t  mv $(TARGET_SUBDIR) stage2-$(TARGET_SUBDIR); \\\n \t  mv prev-$(TARGET_SUBDIR) stage1-$(TARGET_SUBDIR); : ; \\\n@@ -60922,6 +62106,12 @@ stage3-start::\n \tmv stage3-libctf libctf; \\\n \tmv stage2-libctf prev-libctf || test -f stage2-lean \n @endif libctf\n+@if libsframe\n+\t@cd $(HOST_SUBDIR); [ -d stage3-libsframe ] || \\\n+\t  mkdir stage3-libsframe; \\\n+\tmv stage3-libsframe libsframe; \\\n+\tmv stage2-libsframe prev-libsframe || test -f stage2-lean \n+@endif libsframe\n \t@[ -d stage3-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stage3-$(TARGET_SUBDIR); \\\n \tmv stage3-$(TARGET_SUBDIR) $(TARGET_SUBDIR); \\\n@@ -61066,6 +62256,12 @@ stage3-end::\n \t  mv prev-libctf stage2-libctf; : ; \\\n \tfi\n @endif libctf\n+@if libsframe\n+\t@if test -d $(HOST_SUBDIR)/libsframe; then \\\n+\t  cd $(HOST_SUBDIR); mv libsframe stage3-libsframe; \\\n+\t  mv prev-libsframe stage2-libsframe; : ; \\\n+\tfi\n+@endif libsframe\n \t@if test -d $(TARGET_SUBDIR); then \\\n \t  mv $(TARGET_SUBDIR) stage3-$(TARGET_SUBDIR); \\\n \t  mv prev-$(TARGET_SUBDIR) stage2-$(TARGET_SUBDIR); : ; \\\n@@ -61332,6 +62528,12 @@ stage4-start::\n \tmv stage4-libctf libctf; \\\n \tmv stage3-libctf prev-libctf || test -f stage3-lean \n @endif libctf\n+@if libsframe\n+\t@cd $(HOST_SUBDIR); [ -d stage4-libsframe ] || \\\n+\t  mkdir stage4-libsframe; \\\n+\tmv stage4-libsframe libsframe; \\\n+\tmv stage3-libsframe prev-libsframe || test -f stage3-lean \n+@endif libsframe\n \t@[ -d stage4-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stage4-$(TARGET_SUBDIR); \\\n \tmv stage4-$(TARGET_SUBDIR) $(TARGET_SUBDIR); \\\n@@ -61476,6 +62678,12 @@ stage4-end::\n \t  mv prev-libctf stage3-libctf; : ; \\\n \tfi\n @endif libctf\n+@if libsframe\n+\t@if test -d $(HOST_SUBDIR)/libsframe; then \\\n+\t  cd $(HOST_SUBDIR); mv libsframe stage4-libsframe; \\\n+\t  mv prev-libsframe stage3-libsframe; : ; \\\n+\tfi\n+@endif libsframe\n \t@if test -d $(TARGET_SUBDIR); then \\\n \t  mv $(TARGET_SUBDIR) stage4-$(TARGET_SUBDIR); \\\n \t  mv prev-$(TARGET_SUBDIR) stage3-$(TARGET_SUBDIR); : ; \\\n@@ -61730,6 +62938,12 @@ stageprofile-start::\n \tmv stageprofile-libctf libctf; \\\n \tmv stage1-libctf prev-libctf || test -f stage1-lean \n @endif libctf\n+@if libsframe\n+\t@cd $(HOST_SUBDIR); [ -d stageprofile-libsframe ] || \\\n+\t  mkdir stageprofile-libsframe; \\\n+\tmv stageprofile-libsframe libsframe; \\\n+\tmv stage1-libsframe prev-libsframe || test -f stage1-lean \n+@endif libsframe\n \t@[ -d stageprofile-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stageprofile-$(TARGET_SUBDIR); \\\n \tmv stageprofile-$(TARGET_SUBDIR) $(TARGET_SUBDIR); \\\n@@ -61874,6 +63088,12 @@ stageprofile-end::\n \t  mv prev-libctf stage1-libctf; : ; \\\n \tfi\n @endif libctf\n+@if libsframe\n+\t@if test -d $(HOST_SUBDIR)/libsframe; then \\\n+\t  cd $(HOST_SUBDIR); mv libsframe stageprofile-libsframe; \\\n+\t  mv prev-libsframe stage1-libsframe; : ; \\\n+\tfi\n+@endif libsframe\n \t@if test -d $(TARGET_SUBDIR); then \\\n \t  mv $(TARGET_SUBDIR) stageprofile-$(TARGET_SUBDIR); \\\n \t  mv prev-$(TARGET_SUBDIR) stage1-$(TARGET_SUBDIR); : ; \\\n@@ -62061,6 +63281,12 @@ stagetrain-start::\n \tmv stagetrain-libctf libctf; \\\n \tmv stageprofile-libctf prev-libctf || test -f stageprofile-lean \n @endif libctf\n+@if libsframe\n+\t@cd $(HOST_SUBDIR); [ -d stagetrain-libsframe ] || \\\n+\t  mkdir stagetrain-libsframe; \\\n+\tmv stagetrain-libsframe libsframe; \\\n+\tmv stageprofile-libsframe prev-libsframe || test -f stageprofile-lean \n+@endif libsframe\n \t@[ -d stagetrain-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stagetrain-$(TARGET_SUBDIR); \\\n \tmv stagetrain-$(TARGET_SUBDIR) $(TARGET_SUBDIR); \\\n@@ -62205,6 +63431,12 @@ stagetrain-end::\n \t  mv prev-libctf stageprofile-libctf; : ; \\\n \tfi\n @endif libctf\n+@if libsframe\n+\t@if test -d $(HOST_SUBDIR)/libsframe; then \\\n+\t  cd $(HOST_SUBDIR); mv libsframe stagetrain-libsframe; \\\n+\t  mv prev-libsframe stageprofile-libsframe; : ; \\\n+\tfi\n+@endif libsframe\n \t@if test -d $(TARGET_SUBDIR); then \\\n \t  mv $(TARGET_SUBDIR) stagetrain-$(TARGET_SUBDIR); \\\n \t  mv prev-$(TARGET_SUBDIR) stageprofile-$(TARGET_SUBDIR); : ; \\\n@@ -62392,6 +63624,12 @@ stagefeedback-start::\n \tmv stagefeedback-libctf libctf; \\\n \tmv stagetrain-libctf prev-libctf || test -f stagetrain-lean \n @endif libctf\n+@if libsframe\n+\t@cd $(HOST_SUBDIR); [ -d stagefeedback-libsframe ] || \\\n+\t  mkdir stagefeedback-libsframe; \\\n+\tmv stagefeedback-libsframe libsframe; \\\n+\tmv stagetrain-libsframe prev-libsframe || test -f stagetrain-lean \n+@endif libsframe\n \t@[ -d stagefeedback-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stagefeedback-$(TARGET_SUBDIR); \\\n \tmv stagefeedback-$(TARGET_SUBDIR) $(TARGET_SUBDIR); \\\n@@ -62536,6 +63774,12 @@ stagefeedback-end::\n \t  mv prev-libctf stagetrain-libctf; : ; \\\n \tfi\n @endif libctf\n+@if libsframe\n+\t@if test -d $(HOST_SUBDIR)/libsframe; then \\\n+\t  cd $(HOST_SUBDIR); mv libsframe stagefeedback-libsframe; \\\n+\t  mv prev-libsframe stagetrain-libsframe; : ; \\\n+\tfi\n+@endif libsframe\n \t@if test -d $(TARGET_SUBDIR); then \\\n \t  mv $(TARGET_SUBDIR) stagefeedback-$(TARGET_SUBDIR); \\\n \t  mv prev-$(TARGET_SUBDIR) stagetrain-$(TARGET_SUBDIR); : ; \\\n@@ -62746,6 +63990,12 @@ stageautoprofile-start::\n \tmv stageautoprofile-libctf libctf; \\\n \tmv stage1-libctf prev-libctf || test -f stage1-lean \n @endif libctf\n+@if libsframe\n+\t@cd $(HOST_SUBDIR); [ -d stageautoprofile-libsframe ] || \\\n+\t  mkdir stageautoprofile-libsframe; \\\n+\tmv stageautoprofile-libsframe libsframe; \\\n+\tmv stage1-libsframe prev-libsframe || test -f stage1-lean \n+@endif libsframe\n \t@[ -d stageautoprofile-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stageautoprofile-$(TARGET_SUBDIR); \\\n \tmv stageautoprofile-$(TARGET_SUBDIR) $(TARGET_SUBDIR); \\\n@@ -62890,6 +64140,12 @@ stageautoprofile-end::\n \t  mv prev-libctf stage1-libctf; : ; \\\n \tfi\n @endif libctf\n+@if libsframe\n+\t@if test -d $(HOST_SUBDIR)/libsframe; then \\\n+\t  cd $(HOST_SUBDIR); mv libsframe stageautoprofile-libsframe; \\\n+\t  mv prev-libsframe stage1-libsframe; : ; \\\n+\tfi\n+@endif libsframe\n \t@if test -d $(TARGET_SUBDIR); then \\\n \t  mv $(TARGET_SUBDIR) stageautoprofile-$(TARGET_SUBDIR); \\\n \t  mv prev-$(TARGET_SUBDIR) stage1-$(TARGET_SUBDIR); : ; \\\n@@ -63077,6 +64333,12 @@ stageautofeedback-start::\n \tmv stageautofeedback-libctf libctf; \\\n \tmv stageautoprofile-libctf prev-libctf || test -f stageautoprofile-lean \n @endif libctf\n+@if libsframe\n+\t@cd $(HOST_SUBDIR); [ -d stageautofeedback-libsframe ] || \\\n+\t  mkdir stageautofeedback-libsframe; \\\n+\tmv stageautofeedback-libsframe libsframe; \\\n+\tmv stageautoprofile-libsframe prev-libsframe || test -f stageautoprofile-lean \n+@endif libsframe\n \t@[ -d stageautofeedback-$(TARGET_SUBDIR) ] || \\\n \t  mkdir stageautofeedback-$(TARGET_SUBDIR); \\\n \tmv stageautofeedback-$(TARGET_SUBDIR) $(TARGET_SUBDIR); \\\n@@ -63221,6 +64483,12 @@ stageautofeedback-end::\n \t  mv prev-libctf stageautoprofile-libctf; : ; \\\n \tfi\n @endif libctf\n+@if libsframe\n+\t@if test -d $(HOST_SUBDIR)/libsframe; then \\\n+\t  cd $(HOST_SUBDIR); mv libsframe stageautofeedback-libsframe; \\\n+\t  mv prev-libsframe stageautoprofile-libsframe; : ; \\\n+\tfi\n+@endif libsframe\n \t@if test -d $(TARGET_SUBDIR); then \\\n \t  mv $(TARGET_SUBDIR) stageautofeedback-$(TARGET_SUBDIR); \\\n \t  mv prev-$(TARGET_SUBDIR) stageautoprofile-$(TARGET_SUBDIR); : ; \\\n@@ -64160,6 +65428,16 @@ all-stagetrain-ld: maybe-all-stagetrain-libctf\n all-stagefeedback-ld: maybe-all-stagefeedback-libctf\n all-stageautoprofile-ld: maybe-all-stageautoprofile-libctf\n all-stageautofeedback-ld: maybe-all-stageautofeedback-libctf\n+all-binutils: maybe-all-libsframe\n+all-stage1-binutils: maybe-all-stage1-libsframe\n+all-stage2-binutils: maybe-all-stage2-libsframe\n+all-stage3-binutils: maybe-all-stage3-libsframe\n+all-stage4-binutils: maybe-all-stage4-libsframe\n+all-stageprofile-binutils: maybe-all-stageprofile-libsframe\n+all-stagetrain-binutils: maybe-all-stagetrain-libsframe\n+all-stagefeedback-binutils: maybe-all-stagefeedback-libsframe\n+all-stageautoprofile-binutils: maybe-all-stageautoprofile-libsframe\n+all-stageautofeedback-binutils: maybe-all-stageautofeedback-libsframe\n install-binutils: maybe-install-opcodes\n install-strip-binutils: maybe-install-strip-opcodes\n install-libctf: maybe-install-bfd"}, {"sha": "86942b24b622134ef68b1ceadaf2cdbaeb47ec02", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de627ffe4b51b3d82acdb5fb04c189978697832/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de627ffe4b51b3d82acdb5fb04c189978697832/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=3de627ffe4b51b3d82acdb5fb04c189978697832", "patch": "@@ -2803,7 +2803,7 @@ build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n #f\n-host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libiconv libctf\"\n+host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libiconv libctf libsframe\"\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to"}, {"sha": "07f4cc8a261412c5d688a692c858da5de2ea3445", "filename": "configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de627ffe4b51b3d82acdb5fb04c189978697832/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de627ffe4b51b3d82acdb5fb04c189978697832/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=3de627ffe4b51b3d82acdb5fb04c189978697832", "patch": "@@ -132,7 +132,7 @@ build_tools=\"build-texinfo build-flex build-bison build-m4 build-fixincludes\"\n \n # these libraries are used by various programs built for the host environment\n #f\n-host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libiconv libctf\"\n+host_libs=\"intl libiberty opcodes bfd readline tcl tk itcl libgui zlib libbacktrace libcpp libcody libdecnumber gmp mpfr mpc isl libiconv libctf libsframe\"\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to"}]}