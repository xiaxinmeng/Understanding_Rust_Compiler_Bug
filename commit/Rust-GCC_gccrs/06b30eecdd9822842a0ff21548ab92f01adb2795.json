{"sha": "06b30eecdd9822842a0ff21548ab92f01adb2795", "node_id": "C_kwDOANBUbNoAKDA2YjMwZWVjZGQ5ODIyODQyYTBmZjIxNTQ4YWI5MmYwMWFkYjI3OTU", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-12T11:04:02Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-12T13:08:38Z"}, "message": "frange::set_signbit: Avoid changing sign when already in the correct sign.\n\nWe should avoid pessimizing the signbit when it's already correct.  In\nthis particular case we were trying to change the signbit to \"unknown\",\nwhen it was obviously negative.\n\nThis test is actually slated for removal with my upcoming revamp of the\nsignbit and NAN tracking, per the conversations regarding tristate.  The\nsignbit will be removed in favor of keeping track of it in the range\nitself, and NAN will just be a pair of boolean flags.  However, I don't\nplan to disturb the tree until after Cauldron.\n\nTested on x86-64 Linux including mpfr tests.  Also tested selftests with\n-ffinite-math-only on x86-64 as well as on a cross to pdp11-aout.\n\ngcc/ChangeLog:\n\n\t* value-range.cc (frange::set_signbit): Avoid changing sign when\n\talready in the correct sign.", "tree": {"sha": "185106e1413cf61cc10e97bb1a793fca12599915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/185106e1413cf61cc10e97bb1a793fca12599915"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06b30eecdd9822842a0ff21548ab92f01adb2795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06b30eecdd9822842a0ff21548ab92f01adb2795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06b30eecdd9822842a0ff21548ab92f01adb2795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06b30eecdd9822842a0ff21548ab92f01adb2795/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71cd6a0430ca2a2c44e3cf4cc9f3c96d3aef1ab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71cd6a0430ca2a2c44e3cf4cc9f3c96d3aef1ab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71cd6a0430ca2a2c44e3cf4cc9f3c96d3aef1ab7"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "6f0609959b3bc5a808e131f8cd3a34b7be21f5ea", "filename": "gcc/value-range.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06b30eecdd9822842a0ff21548ab92f01adb2795/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06b30eecdd9822842a0ff21548ab92f01adb2795/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=06b30eecdd9822842a0ff21548ab92f01adb2795", "patch": "@@ -316,9 +316,13 @@ frange::set_signbit (fp_prop::kind k)\n   // Ignore sign changes when they're set correctly.\n   if (!maybe_nan ())\n     {\n-      if (real_less (&m_max, &dconst0))\n+      // It's negative and we're trying to make it negative or varying.\n+      if (real_less (&m_max, &dconst0) && (k == fp_prop::YES\n+\t\t\t\t\t   || k == fp_prop::VARYING))\n \treturn;\n-      if (real_less (&dconst0, &m_min))\n+      // It's positive and we're trying to make it positive or varying.\n+      if (real_less (&dconst0, &m_min) && (k == fp_prop::NO\n+\t\t\t\t\t   || k == fp_prop::VARYING))\n \treturn;\n     }\n   // Adjust the range depending on the sign bit."}]}