{"sha": "0e3030707bfcd196fd678a25bf28fbdb925914c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUzMDMwNzA3YmZjZDE5NmZkNjc4YTI1YmYyOGZiZGI5MjU5MTRjNA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-08-31T11:22:06Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-08-31T11:22:06Z"}, "message": "Add iterate helper for TypePaths", "tree": {"sha": "c1a77c3ae3d0e8bb47e6cee9159100558c7ac7a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1a77c3ae3d0e8bb47e6cee9159100558c7ac7a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e3030707bfcd196fd678a25bf28fbdb925914c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3030707bfcd196fd678a25bf28fbdb925914c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e3030707bfcd196fd678a25bf28fbdb925914c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3030707bfcd196fd678a25bf28fbdb925914c4/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82e1061579796adaa39ab34da77b6c8c6ea82539", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82e1061579796adaa39ab34da77b6c8c6ea82539", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82e1061579796adaa39ab34da77b6c8c6ea82539"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "8992993c15d931480fb9140941bc6ce3d45a04a0", "filename": "gcc/rust/ast/rust-path.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3030707bfcd196fd678a25bf28fbdb925914c4/gcc%2Frust%2Fast%2Frust-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3030707bfcd196fd678a25bf28fbdb925914c4/gcc%2Frust%2Fast%2Frust-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-path.h?ref=0e3030707bfcd196fd678a25bf28fbdb925914c4", "patch": "@@ -1029,6 +1029,15 @@ class QualifiedPathInType : public TypeNoBounds\n   }\n \n   Location get_locus () const override final { return locus; }\n+\n+  void iterate_segments (std::function<bool (TypePathSegment *)> cb)\n+  {\n+    for (auto it = segments.begin (); it != segments.end (); it++)\n+      {\n+\tif (!cb ((*it).get ()))\n+\t  return;\n+      }\n+  }\n };\n } // namespace AST\n } // namespace Rust"}]}