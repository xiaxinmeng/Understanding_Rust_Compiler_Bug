{"sha": "9fbbba710567dbfbd86f972f58be13e2309a265a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZiYmJhNzEwNTY3ZGJmYmQ4NmY5NzJmNThiZTEzZTIzMDlhMjY1YQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2017-03-29T12:56:26Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2017-03-29T12:56:26Z"}, "message": "re PR tree-optimization/80158 (ICE in all_phi_incrs_profitable)\n\n2017-03-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\tPR tree-optimization/80158\n\t* gimple-ssa-strength-reduction.c (replace_mult_candidate):\n\tHandle possible future case of more than one alternate\n\tinterpretation.\n\t(replace_rhs_if_not_dup): Likewise.\n\t(replace_one_candidate): Likewise.\n\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r246567", "tree": {"sha": "a546c709d4baf01819f17ae69063196433f8347b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a546c709d4baf01819f17ae69063196433f8347b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fbbba710567dbfbd86f972f58be13e2309a265a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fbbba710567dbfbd86f972f58be13e2309a265a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fbbba710567dbfbd86f972f58be13e2309a265a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fbbba710567dbfbd86f972f58be13e2309a265a/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0000fd8cfd4ec4d053a003dc72d50dc8db553d09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0000fd8cfd4ec4d053a003dc72d50dc8db553d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0000fd8cfd4ec4d053a003dc72d50dc8db553d09"}], "stats": {"total": 59, "additions": 46, "deletions": 13}, "files": [{"sha": "d04ac1a3df750b2b934091c1118a62059a6d4f4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fbbba710567dbfbd86f972f58be13e2309a265a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fbbba710567dbfbd86f972f58be13e2309a265a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9fbbba710567dbfbd86f972f58be13e2309a265a", "patch": "@@ -1,3 +1,12 @@\n+2017-03-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\tPR tree-optimization/80158\n+\t* gimple-ssa-strength-reduction.c (replace_mult_candidate):\n+\tHandle possible future case of more than one alternate\n+\tinterpretation.\n+\t(replace_rhs_if_not_dup): Likewise.\n+\t(replace_one_candidate): Likewise.\n+\n 2017-03-28  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/80193\n@@ -553,7 +562,7 @@\n \tmatching condition.\n \n 2017-03-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n-            Richard Biener  <rguenth@suse.com>\n+            Richard Biener  <rguenth@suse.de>\n \n \tPR tree-optimization/79908\n \tPR tree-optimization/80136"}, {"sha": "92d32f117f33fa1177a66223107a1be0d895e8ca", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 36, "deletions": 12, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fbbba710567dbfbd86f972f58be13e2309a265a/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fbbba710567dbfbd86f972f58be13e2309a265a/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=9fbbba710567dbfbd86f972f58be13e2309a265a", "patch": "@@ -2086,11 +2086,15 @@ replace_mult_candidate (slsr_cand_t c, tree basis_name, widest_int bump)\n \t  tree lhs = gimple_assign_lhs (c->cand_stmt);\n \t  gassign *copy_stmt = gimple_build_assign (lhs, basis_name);\n \t  gimple_stmt_iterator gsi = gsi_for_stmt (c->cand_stmt);\n+\t  slsr_cand_t cc = c;\n \t  gimple_set_location (copy_stmt, gimple_location (c->cand_stmt));\n \t  gsi_replace (&gsi, copy_stmt, false);\n \t  c->cand_stmt = copy_stmt;\n-\t  if (c->next_interp)\n-\t    lookup_cand (c->next_interp)->cand_stmt = copy_stmt;\n+\t  while (cc->next_interp)\n+\t    {\n+\t      cc = lookup_cand (cc->next_interp);\n+\t      cc->cand_stmt = copy_stmt;\n+\t    }\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    stmt_to_print = copy_stmt;\n \t}\n@@ -2116,12 +2120,16 @@ replace_mult_candidate (slsr_cand_t c, tree basis_name, widest_int bump)\n \t  else\n \t    {\n \t      gimple_stmt_iterator gsi = gsi_for_stmt (c->cand_stmt);\n+\t      slsr_cand_t cc = c;\n \t      gimple_assign_set_rhs_with_ops (&gsi, code,\n \t\t\t\t\t      basis_name, bump_tree);\n \t      update_stmt (gsi_stmt (gsi));\n               c->cand_stmt = gsi_stmt (gsi);\n-\t      if (c->next_interp)\n-\t\tlookup_cand (c->next_interp)->cand_stmt = gsi_stmt (gsi);\n+\t      while (cc->next_interp)\n+\t\t{\n+\t\t  cc = lookup_cand (cc->next_interp);\n+\t\t  cc->cand_stmt = gsi_stmt (gsi);\n+\t\t}\n \t      if (dump_file && (dump_flags & TDF_DETAILS))\n \t\tstmt_to_print = gsi_stmt (gsi);\n \t    }\n@@ -3406,11 +3414,15 @@ replace_rhs_if_not_dup (enum tree_code new_code, tree new_rhs1, tree new_rhs2,\n \t      || !operand_equal_p (new_rhs2, old_rhs1, 0))))\n     {\n       gimple_stmt_iterator gsi = gsi_for_stmt (c->cand_stmt);\n+      slsr_cand_t cc = c;\n       gimple_assign_set_rhs_with_ops (&gsi, new_code, new_rhs1, new_rhs2);\n       update_stmt (gsi_stmt (gsi));\n       c->cand_stmt = gsi_stmt (gsi);\n-      if (c->next_interp)\n-\tlookup_cand (c->next_interp)->cand_stmt = gsi_stmt (gsi);\n+      while (cc->next_interp)\n+\t{\n+\t  cc = lookup_cand (cc->next_interp);\n+\t  cc->cand_stmt = gsi_stmt (gsi);\n+\t}\n \n       if (dump_file && (dump_flags & TDF_DETAILS))\n \treturn gsi_stmt (gsi);\n@@ -3514,11 +3526,15 @@ replace_one_candidate (slsr_cand_t c, unsigned i, tree basis_name)\n \t  || !operand_equal_p (rhs2, orig_rhs2, 0))\n \t{\n \t  gimple_stmt_iterator gsi = gsi_for_stmt (c->cand_stmt);\n+\t  slsr_cand_t cc = c;\n \t  gimple_assign_set_rhs_with_ops (&gsi, MINUS_EXPR, basis_name, rhs2);\n \t  update_stmt (gsi_stmt (gsi));\n           c->cand_stmt = gsi_stmt (gsi);\n-\t  if (c->next_interp)\n-\t    lookup_cand (c->next_interp)->cand_stmt = gsi_stmt (gsi);\n+\t  while (cc->next_interp)\n+\t    {\n+\t      cc = lookup_cand (cc->next_interp);\n+\t      cc->cand_stmt = gsi_stmt (gsi);\n+\t    }\n \n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    stmt_to_print = gsi_stmt (gsi);\n@@ -3537,11 +3553,15 @@ replace_one_candidate (slsr_cand_t c, unsigned i, tree basis_name)\n \t{\n \t  gassign *copy_stmt = gimple_build_assign (lhs, basis_name);\n \t  gimple_stmt_iterator gsi = gsi_for_stmt (c->cand_stmt);\n+\t  slsr_cand_t cc = c;\n \t  gimple_set_location (copy_stmt, gimple_location (c->cand_stmt));\n \t  gsi_replace (&gsi, copy_stmt, false);\n \t  c->cand_stmt = copy_stmt;\n-\t  if (c->next_interp)\n-\t    lookup_cand (c->next_interp)->cand_stmt = copy_stmt;\n+\t  while (cc->next_interp)\n+\t    {\n+\t      cc = lookup_cand (cc->next_interp);\n+\t      cc->cand_stmt = copy_stmt;\n+\t    }\n \n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    stmt_to_print = copy_stmt;\n@@ -3550,11 +3570,15 @@ replace_one_candidate (slsr_cand_t c, unsigned i, tree basis_name)\n \t{\n \t  gimple_stmt_iterator gsi = gsi_for_stmt (c->cand_stmt);\n \t  gassign *cast_stmt = gimple_build_assign (lhs, NOP_EXPR, basis_name);\n+\t  slsr_cand_t cc = c;\n \t  gimple_set_location (cast_stmt, gimple_location (c->cand_stmt));\n \t  gsi_replace (&gsi, cast_stmt, false);\n \t  c->cand_stmt = cast_stmt;\n-\t  if (c->next_interp)\n-\t    lookup_cand (c->next_interp)->cand_stmt = cast_stmt;\n+\t  while (cc->next_interp)\n+\t    {\n+\t      cc = lookup_cand (cc->next_interp);\n+\t      cc->cand_stmt = cast_stmt;\n+\t    }\n \n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n \t    stmt_to_print = cast_stmt;"}]}