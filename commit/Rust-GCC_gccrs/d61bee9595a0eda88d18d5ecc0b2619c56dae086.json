{"sha": "d61bee9595a0eda88d18d5ecc0b2619c56dae086", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYxYmVlOTU5NWEwZWRhODhkMThkNWVjYzBiMjYxOWM1NmRhZTA4Ng==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-04-06T22:50:58Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-04-06T22:50:58Z"}, "message": "(emit_library_call_value): New variable is_const.\n\n(emit_library_call_value): New variable is_const.  Clear\nit for functions that return an aggregate in memory.\n\nFrom-SVN: r6991", "tree": {"sha": "dfd229e9c2e3ad04c4dc3d94458a1c254fc78fc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfd229e9c2e3ad04c4dc3d94458a1c254fc78fc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d61bee9595a0eda88d18d5ecc0b2619c56dae086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d61bee9595a0eda88d18d5ecc0b2619c56dae086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d61bee9595a0eda88d18d5ecc0b2619c56dae086", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d61bee9595a0eda88d18d5ecc0b2619c56dae086/comments", "author": null, "committer": null, "parents": [{"sha": "151f13beabf2943cd4a922928cdc9b97fc7031f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/151f13beabf2943cd4a922928cdc9b97fc7031f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/151f13beabf2943cd4a922928cdc9b97fc7031f7"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "a5246b177cc7793799cf5e6aba0934c8635e4f48", "filename": "gcc/calls.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d61bee9595a0eda88d18d5ecc0b2619c56dae086/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d61bee9595a0eda88d18d5ecc0b2619c56dae086/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=d61bee9595a0eda88d18d5ecc0b2619c56dae086", "patch": "@@ -2411,6 +2411,7 @@ emit_library_call_value VPROTO((rtx orgfun, rtx value, int no_queue,\n   int struct_value_size = 0;\n   /* library calls are never indirect calls.  */\n   int current_call_is_indirect = 0;\n+  int is_const;\n \n   VA_START (p, nargs);\n \n@@ -2422,12 +2423,16 @@ emit_library_call_value VPROTO((rtx orgfun, rtx value, int no_queue,\n   nargs = va_arg (p, int);\n #endif\n \n+  is_const = no_queue;\n   fun = orgfun;\n \n   /* If this kind of value comes back in memory,\n      decide where in memory it should come back.  */\n   if (aggregate_value_p (type_for_mode (outmode, 0)))\n     {\n+      /* This call returns a big structure.  */\n+      is_const = 0;\n+\n #ifdef PCC_STATIC_STRUCT_RETURN\n       rtx pointer_reg\n \t= hard_function_value (build_pointer_type (type_for_mode (outmode, 0)),\n@@ -2729,7 +2734,7 @@ emit_library_call_value VPROTO((rtx orgfun, rtx value, int no_queue,\n \t       FUNCTION_ARG (args_so_far, VOIDmode, void_type_node, 1),\n \t       (outmode != VOIDmode && mem_value == 0\n \t\t? hard_libcall_value (outmode) : NULL_RTX),\n-\t       old_inhibit_defer_pop + 1, use_insns, no_queue);\n+\t       old_inhibit_defer_pop + 1, use_insns, is_const);\n \n   /* Now restore inhibit_defer_pop to its actual original value.  */\n   OK_DEFER_POP;"}]}