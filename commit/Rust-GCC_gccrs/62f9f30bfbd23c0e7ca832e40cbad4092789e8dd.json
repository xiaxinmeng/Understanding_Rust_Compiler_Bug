{"sha": "62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJmOWYzMGJmYmQyM2MwZTdjYTgzMmU0MGNiYWQ0MDkyNzg5ZThkZA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-05-22T01:03:11Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-05-22T01:03:11Z"}, "message": "always define STACK_GROWS_DOWNWARD\n\ngcc/c-family/ChangeLog:\n\n2015-05-20  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* c-cppbuiltin.c (c_cpp_builtins): Check the value of\n\tSTACK_GROWS_DOWNWARD rather than if it is defined.\n\ngcc/ChangeLog:\n\n2015-05-20  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* *.c: Check the value of STACK_GROWS_DOWNWARD rather than if it\n\tis defined.\n\t* config/**/*.h: Define STACK_GROWS_DOWNWARD to an integer.\n\t* defaults.h: Provide default for STACK_GROWS_DOWNWARD.\n\t* doc/tm.texi.in: Update references to STACK_GROWS_DOWNWARD.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r223513", "tree": {"sha": "caef8679017f122961809268806166d9b3586a86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caef8679017f122961809268806166d9b3586a86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/comments", "author": null, "committer": null, "parents": [{"sha": "47d30549f5d8a59f95202a0ddebf281d98230528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47d30549f5d8a59f95202a0ddebf281d98230528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47d30549f5d8a59f95202a0ddebf281d98230528"}], "stats": {"total": 195, "additions": 81, "deletions": 114}, "files": [{"sha": "3fadbaf0e4c6016dacc0a4cd448b3eba936db11b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -1,3 +1,12 @@\n+2015-05-20  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* *.c: Check the value of STACK_GROWS_DOWNWARD rather than if it\n+\tis defined.\n+\t* config/**/*.h: Define STACK_GROWS_DOWNWARD to an integer.\n+\t* defaults.h: Provide default for STACK_GROWS_DOWNWARD.\n+\t* doc/tm.texi.in: Update references to STACK_GROWS_DOWNWARD.\n+\t* doc/tm.texi: Regenerate.\n+\n 2015-05-21  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/66232"}, {"sha": "e81ab04ae7a8f0841a864a821e719ae4520fbb12", "filename": "gcc/builtins.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -1521,7 +1521,7 @@ expand_builtin_apply_args_1 (void)\n \n   /* Save the arg pointer to the block.  */\n   tem = copy_to_reg (crtl->args.internal_arg_pointer);\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n   /* We need the pointer as the caller actually passed them to us, not\n      as we might have pretended they were passed.  Make sure it's a valid\n      operand, as emit_move_insn isn't expected to handle a PLUS.  */\n@@ -1613,7 +1613,7 @@ expand_builtin_apply (rtx function, rtx arguments, rtx argsize)\n   /* Fetch the arg pointer from the ARGUMENTS block.  */\n   incoming_args = gen_reg_rtx (Pmode);\n   emit_move_insn (incoming_args, gen_rtx_MEM (Pmode, arguments));\n-#ifndef STACK_GROWS_DOWNWARD\n+#if !STACK_GROWS_DOWNWARD\n   incoming_args = expand_simple_binop (Pmode, MINUS, incoming_args, argsize,\n \t\t\t\t       incoming_args, 0, OPTAB_LIB_WIDEN);\n #endif\n@@ -1646,7 +1646,7 @@ expand_builtin_apply (rtx function, rtx arguments, rtx argsize)\n     crtl->need_drap = true;\n \n   dest = virtual_outgoing_args_rtx;\n-#ifndef STACK_GROWS_DOWNWARD\n+#if !STACK_GROWS_DOWNWARD\n   if (CONST_INT_P (argsize))\n     dest = plus_constant (Pmode, dest, -INTVAL (argsize));\n   else"}, {"sha": "5408a12b24b5fcec18902732987d5901b6d145f6", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -1,3 +1,8 @@\n+2015-05-20  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* c-cppbuiltin.c (c_cpp_builtins): Check the value of\n+\tSTACK_GROWS_DOWNWARD rather than if it is defined.\n+\n 2015-05-21  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \t\n \tPR c/52952"}, {"sha": "da9cb2f355c6bc4ef8b44762395e8c4da2d806bc", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -1138,7 +1138,7 @@ c_cpp_builtins (cpp_reader *pfile)\n \t\t\t\t     TRAMPOLINE_SIZE);\n \n       /* For libgcc generic-morestack.c and unwinder code.  */\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n       cpp_define (pfile, \"__LIBGCC_STACK_GROWS_DOWNWARD__\");\n #endif\n "}, {"sha": "afe61f47d879f49f4a6150162cfe0346ee212453", "filename": "gcc/calls.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -82,14 +82,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl-chkp.h\"\n \n \n-/* Redefine STACK_GROWS_DOWNWARD in terms of 0 or 1.  */\n-#ifdef STACK_GROWS_DOWNWARD\n-# undef STACK_GROWS_DOWNWARD\n-# define STACK_GROWS_DOWNWARD 1\n-#else\n-# define STACK_GROWS_DOWNWARD 0\n-#endif\n-\n /* Like PREFERRED_STACK_BOUNDARY but in units of bytes, not bits.  */\n #define STACK_BYTES (PREFERRED_STACK_BOUNDARY / BITS_PER_UNIT)\n "}, {"sha": "4d40e4ea06233a15bab8519c251f7c166107922c", "filename": "gcc/combine-stack-adj.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fcombine-stack-adj.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fcombine-stack-adj.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine-stack-adj.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -84,14 +84,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"rtl-iter.h\"\n \n \f\n-/* Turn STACK_GROWS_DOWNWARD into a boolean.  */\n-#ifdef STACK_GROWS_DOWNWARD\n-#undef STACK_GROWS_DOWNWARD\n-#define STACK_GROWS_DOWNWARD 1\n-#else\n-#define STACK_GROWS_DOWNWARD 0\n-#endif\n-\n /* This structure records two kinds of stack references between stack\n    adjusting instructions: stack references in memory addresses for\n    regular insns and all stack references for debug insns.  */"}, {"sha": "8d2ab238157fd2098e0f4d390f261d5a73e6f43c", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -564,7 +564,7 @@ extern int alpha_memory_latency;\n \n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Define this to nonzero if the nominal address of the stack frame\n    is at the high-address end of the local variables;"}, {"sha": "4fdd6543415a8ab59f16479030b725a8e596a8a9", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -765,7 +765,7 @@ extern enum reg_class arc_regno_reg_class[];\n \n /* Define this macro if pushing a word onto the stack moves the stack\n    pointer to a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Define this if the nominal address of the stack frame\n    is at the high-address end of the local variables;"}, {"sha": "74399647e0a57372853d57ab8993da1ac670c2eb", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -290,7 +290,7 @@ enum reg_class {\n \n #define STACK_PUSH_CODE POST_DEC\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n #define STARTING_FRAME_OFFSET avr_starting_frame_offset()\n "}, {"sha": "b0d017ebf5c8fac6c0ecff275974eb2793c1958b", "filename": "gcc/config/bfin/bfin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fbfin%2Fbfin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fbfin%2Fbfin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -233,7 +233,7 @@ extern const char *bfin_library_id_string;\n \n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n #define STACK_PUSH_CODE PRE_DEC\n "}, {"sha": "1c304697db2ac72c369b3bd8121391a86be0068e", "filename": "gcc/config/c6x/c6x.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fc6x%2Fc6x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fc6x%2Fc6x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -313,7 +313,7 @@ enum reg_class\n #define FIRST_PARM_OFFSET(fundecl) 4\n #define STARTING_FRAME_OFFSET 0\n #define FRAME_GROWS_DOWNWARD 1\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n #define STACK_POINTER_REGNUM REG_B15\n #define HARD_FRAME_POINTER_REGNUM REG_A15"}, {"sha": "5767be9f44f9f53c9f613f49f92f639a94941f26", "filename": "gcc/config/cr16/cr16.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fcr16%2Fcr16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fcr16%2Fcr16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcr16%2Fcr16.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -368,7 +368,7 @@ enum reg_class\n        && GET_CODE (XEXP ((XEXP (OP, 0)), 1)) == CONST_INT))\n \n /* Stack layout and calling conventions.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n #define STARTING_FRAME_OFFSET   0\n "}, {"sha": "aa7dc17f2d9e41b8defa690360ae246cb89d03c3", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -620,7 +620,7 @@ enum reg_class\n \n /* Node: Frame Layout */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n #define FRAME_GROWS_DOWNWARD 1\n \n /* It seems to be indicated in the code (at least 2.1) that this is"}, {"sha": "5515edbe9f066f3a07e32226ea180b6a4d5e1930", "filename": "gcc/config/epiphany/epiphany.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fepiphany%2Fepiphany.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fepiphany%2Fepiphany.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -467,7 +467,7 @@ typedef struct GTY (()) machine_function\n \n /* Define this macro if pushing a word onto the stack moves the stack\n    pointer to a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Define this to nonzero if the nominal address of the stack frame\n    is at the high-address end of the local variables;"}, {"sha": "a829cfa91008b264a3a0ad2027fae7a6b8fa291c", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -360,7 +360,7 @@ enum reg_class {\n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Define this to nonzero if the nominal address of the stack frame\n    is at the high-address end of the local variables;"}, {"sha": "40e8f834e6f51804dd18482966befdd13a8d0ac9", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -1564,7 +1564,7 @@ enum reg_class\n \n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Define this to nonzero if the nominal address of the stack frame\n    is at the high-address end of the local variables;"}, {"sha": "14a68ce40a5f30f787b16a929fd41b32b4f1f219", "filename": "gcc/config/iq2000/iq2000.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fiq2000%2Fiq2000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fiq2000%2Fiq2000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -230,7 +230,7 @@ enum reg_class\n \f\n /* Basic Stack Layout.  */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n #define FRAME_GROWS_DOWNWARD 0\n "}, {"sha": "66ceae0c1814c681a7e0e8e924a08feb241e049b", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -524,7 +524,7 @@ extern enum reg_class m32r_regno_reg_class[FIRST_PSEUDO_REGISTER];\n \n /* Define this macro if pushing a word onto the stack moves the stack\n    pointer to a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Offset from frame pointer to start allocating local variables at.\n    If FRAME_GROWS_DOWNWARD, this is the offset to the END of the"}, {"sha": "0aa96807b71422a897a0fbfeea2e83955fa23569", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -415,7 +415,7 @@ extern const enum reg_class regno_reg_class[FIRST_PSEUDO_REGISTER];\n \n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n-#define STACK_GROWS_DOWNWARD  \n+#define STACK_GROWS_DOWNWARD 1\n \n /* Offset within stack frame to start allocating local variables at.\n    If FRAME_GROWS_DOWNWARD, this is the offset to the END of the"}, {"sha": "c832fa0fe93323e3537f38bb32fdaab71bf038a8", "filename": "gcc/config/microblaze/microblaze.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -413,7 +413,7 @@ extern enum reg_class microblaze_regno_to_class[];\n \n /* Stack layout; function entry, exit and calling.  */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Changed the starting frame offset to including the new link stuff */\n #define STARTING_FRAME_OFFSET\t\t\t\t\t\t\\"}, {"sha": "bceef31b4a3b6cd99dfc08d5dead926ac5eb15b1", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -2234,7 +2234,7 @@ enum reg_class\n \f\n /* Stack layout; function entry, exit and calling.  */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n #define FRAME_GROWS_DOWNWARD flag_stack_protect\n "}, {"sha": "61ae4d694eb623afc301703131ecd5fed74ada76", "filename": "gcc/config/mmix/mmix.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmmix%2Fmmix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmmix%2Fmmix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -451,7 +451,7 @@ enum reg_class\n \n /* Node: Frame Layout */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n #define FRAME_GROWS_DOWNWARD 1\n \n #define STARTING_FRAME_OFFSET \\"}, {"sha": "e5fa70bd7a8508aac708fb80077351352c8159fd", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -404,7 +404,7 @@ enum reg_class\n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Define this to nonzero if the nominal address of the stack frame\n    is at the high-address end of the local variables;"}, {"sha": "d20d2140778833cd8186e27987eeaaa28d923bbd", "filename": "gcc/config/moxie/moxie.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fmoxie%2Fmoxie.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -247,7 +247,7 @@ enum reg_class\n \n /* Define this macro if pushing a word onto the stack moves the stack\n    pointer to a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n #define INITIAL_FRAME_POINTER_OFFSET(DEPTH) (DEPTH) = 0\n "}, {"sha": "dcecea7220807b37987999bd0d7919ff742e6e7b", "filename": "gcc/config/nds32/nds32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fnds32%2Fnds32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fnds32%2Fnds32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -696,7 +696,7 @@ enum reg_class\n \f\n /* Stack Layout and Calling Conventions.  */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n #define FRAME_GROWS_DOWNWARD 1\n "}, {"sha": "45eb70b7cec16b4cf5724d9f2d0c04a047e4148c", "filename": "gcc/config/nios2/nios2.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fnios2%2Fnios2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fnios2%2Fnios2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -230,7 +230,7 @@ enum reg_class\n #define TRAMPOLINE_SIZE 20\n \n /* Stack layout.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n #define STARTING_FRAME_OFFSET 0\n #define FIRST_PARM_OFFSET(FUNDECL) 0\n "}, {"sha": "502e43d6fd117566a1f370fc063b06b9d031519c", "filename": "gcc/config/nvptx/nvptx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fnvptx%2Fnvptx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -150,7 +150,7 @@ enum reg_class\n \n #define STARTING_FRAME_OFFSET 0\n #define FRAME_GROWS_DOWNWARD 0\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n #define STACK_POINTER_REGNUM 1\n #define HARD_FRAME_POINTER_REGNUM 2"}, {"sha": "1d947f38a9714bd9ae07be09d67822dbb878db4a", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -289,7 +289,7 @@ enum reg_class { NO_REGS, MUL_REGS, GENERAL_REGS, LOAD_FPU_REGS, NO_LOAD_FPU_REG\n \n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Define this to nonzero if the nominal address of the stack frame\n    is at the high-address end of the local variables;"}, {"sha": "bbecf58d9dfd696e874f5a78983fbb81068960f4", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -1563,7 +1563,7 @@ extern enum reg_class rs6000_constraints[RS6000_CONSTRAINT_MAX];\n \n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Offsets recorded in opcodes are a multiple of this alignment factor.  */\n #define DWARF_CIE_DATA_ALIGNMENT (-((int) (TARGET_32BIT ? 4 : 8)))"}, {"sha": "a9bf9b5b1cbd0418edbc319c0af16e0e7243acba", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -561,7 +561,7 @@ extern const enum reg_class regclass_map[FIRST_PSEUDO_REGISTER];\n /* Our stack grows from higher to lower addresses.  However, local variables\n    are accessed by positive offsets, and function arguments are stored at\n    increasing addresses.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n #define FRAME_GROWS_DOWNWARD 1\n /* #undef ARGS_GROW_DOWNWARD */\n "}, {"sha": "3078880a69a82c2f0cecb3596a3afc42a5caf7ee", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -1223,7 +1223,7 @@ extern enum reg_class regno_reg_class[FIRST_PSEUDO_REGISTER];\n \n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /*  Define this macro to nonzero if the addresses of local variable slots\n     are at negative offsets from the frame pointer.  */"}, {"sha": "ce1b68b1b442c920ce9334b7504f039bc3a8ed6d", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -1074,7 +1074,7 @@ extern char leaf_reg_remap[];\n \n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Define this to nonzero if the nominal address of the stack frame\n    is at the high-address end of the local variables;"}, {"sha": "25fa43563ee628c411f3d3e3449a8c8e6b59d190", "filename": "gcc/config/spu/spu.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fspu%2Fspu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fspu%2Fspu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -237,7 +237,7 @@ targetm.resolve_overloaded_builtin = spu_resolve_overloaded_builtin;\t\\\n \f\n /* Frame Layout */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n #define FRAME_GROWS_DOWNWARD 1\n "}, {"sha": "5fa10b39e394e98f1f7b9e87577ce47f62fe49c4", "filename": "gcc/config/tilegx/tilegx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Ftilegx%2Ftilegx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Ftilegx%2Ftilegx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -257,7 +257,7 @@ enum reg_class\n \n /* Stack layout; function entry, exit and calling.  */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n #define FRAME_GROWS_DOWNWARD 1\n #define STARTING_FRAME_OFFSET 0\n "}, {"sha": "f2b7b163270fef1eb0fb7f9f045a08b576249f64", "filename": "gcc/config/tilepro/tilepro.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Ftilepro%2Ftilepro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Ftilepro%2Ftilepro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Ftilepro.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -221,7 +221,7 @@ enum reg_class\n \n /* Stack layout; function entry, exit and calling.  */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n #define FRAME_GROWS_DOWNWARD 1\n #define STARTING_FRAME_OFFSET 0\n "}, {"sha": "e40fd87789a97acb2c932732dfb678d6978f50fa", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -411,7 +411,7 @@ enum reg_class\n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Define this to nonzero if the nominal address of the stack frame\n    is at the high-address end of the local variables;"}, {"sha": "0b19014d57f61e46427981bc636e20be5564ea34", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -238,7 +238,7 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n \n /* Define this if pushing a word on the stack\n    makes the stack pointer a smaller address.  */\n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Define this to nonzero if the nominal address of the stack frame\n    is at the high-address end of the local variables;"}, {"sha": "615f7412fa74cdc10038fe16a28040457baf5dc3", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -459,7 +459,7 @@ enum reg_class\n \n /* Stack layout; function entry, exit and calling.  */\n \n-#define STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 1\n \n /* Offset within stack frame to start allocating local variables at.  */\n #define STARTING_FRAME_OFFSET\t\t\t\t\t\t\\"}, {"sha": "a01969a482952da11f6208c233bf4f8d16538b9c", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -1229,6 +1229,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define ARGS_GROW_DOWNWARD 0\n #endif\n \n+#ifndef STACK_GROWS_DOWNWARD\n+#define STACK_GROWS_DOWNWARD 0\n+#endif\n+\n #ifdef GCC_INSN_FLAGS_H\n /* Dependent default target macro definitions\n "}, {"sha": "f2f34978db424d0f259750abed689ed37524ed10", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -2921,12 +2921,8 @@ This describes the stack layout and calling conventions.\n Here is the basic stack layout.\n \n @defmac STACK_GROWS_DOWNWARD\n-Define this macro if pushing a word onto the stack moves the stack\n-pointer to a smaller address.\n-\n-When we say, ``define this macro if @dots{}'', it means that the\n-compiler checks this macro only with @code{#ifdef} so the precise\n-definition used does not matter.\n+Define this macro to be true if pushing a word onto the stack moves the stack\n+pointer to a smaller address, and false otherwise.\n @end defmac\n \n @defmac STACK_PUSH_CODE\n@@ -2941,7 +2937,7 @@ to the last item on the stack or whether it points to the\n space for the next item on the stack.\n \n The default is @code{PRE_DEC} when @code{STACK_GROWS_DOWNWARD} is\n-defined, which is almost always right, and @code{PRE_INC} otherwise,\n+true, which is almost always right, and @code{PRE_INC} otherwise,\n which is often wrong.\n @end defmac\n \n@@ -9038,7 +9034,7 @@ The default size is @code{FIRST_PSEUDO_REGISTER * sizeof(void *)}.\n This macro need only be defined if the target might save registers in the\n function prologue at an offset to the stack pointer that is not aligned to\n @code{UNITS_PER_WORD}.  The definition should be the negative minimum\n-alignment if @code{STACK_GROWS_DOWNWARD} is defined, and the positive\n+alignment if @code{STACK_GROWS_DOWNWARD} is true, and the positive\n minimum alignment otherwise.  @xref{SDB and DWARF}.  Only applicable if\n the target supports DWARF 2 frame unwind information.\n @end defmac"}, {"sha": "35b02b7632c174c8e81f5c9180c29cdd0d34c273", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -2527,12 +2527,8 @@ This describes the stack layout and calling conventions.\n Here is the basic stack layout.\n \n @defmac STACK_GROWS_DOWNWARD\n-Define this macro if pushing a word onto the stack moves the stack\n-pointer to a smaller address.\n-\n-When we say, ``define this macro if @dots{}'', it means that the\n-compiler checks this macro only with @code{#ifdef} so the precise\n-definition used does not matter.\n+Define this macro to be true if pushing a word onto the stack moves the stack\n+pointer to a smaller address, and false otherwise.\n @end defmac\n \n @defmac STACK_PUSH_CODE\n@@ -2547,7 +2543,7 @@ to the last item on the stack or whether it points to the\n space for the next item on the stack.\n \n The default is @code{PRE_DEC} when @code{STACK_GROWS_DOWNWARD} is\n-defined, which is almost always right, and @code{PRE_INC} otherwise,\n+true, which is almost always right, and @code{PRE_INC} otherwise,\n which is often wrong.\n @end defmac\n \n@@ -6559,7 +6555,7 @@ The default size is @code{FIRST_PSEUDO_REGISTER * sizeof(void *)}.\n This macro need only be defined if the target might save registers in the\n function prologue at an offset to the stack pointer that is not aligned to\n @code{UNITS_PER_WORD}.  The definition should be the negative minimum\n-alignment if @code{STACK_GROWS_DOWNWARD} is defined, and the positive\n+alignment if @code{STACK_GROWS_DOWNWARD} is true, and the positive\n minimum alignment otherwise.  @xref{SDB and DWARF}.  Only applicable if\n the target supports DWARF 2 frame unwind information.\n @end defmac"}, {"sha": "8b8931f1d6869b6db241d067167da2a6d9763a5e", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -944,7 +944,7 @@ notice_args_size (rtx_insn *insn)\n \n       /* Convert a change in args_size (always a positive in the\n \t direction of stack growth) to a change in stack pointer.  */\n-#ifndef STACK_GROWS_DOWNWARD\n+#if !STACK_GROWS_DOWNWARD\n       delta = -delta;\n #endif\n       cur_cfa->offset += delta;\n@@ -2347,7 +2347,7 @@ maybe_record_trace_start_abnormal (rtx_insn *start, rtx_insn *origin)\n     {\n       /* Convert a change in args_size (always a positive in the\n \t direction of stack growth) to a change in stack pointer.  */\n-#ifndef STACK_GROWS_DOWNWARD\n+#if !STACK_GROWS_DOWNWARD\n       delta = -delta;\n #endif\n       cur_row->cfa.offset += delta;"}, {"sha": "39b63ed7e39cf99092b0801c6e9f1b25914a5fa3", "filename": "gcc/explow.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -866,7 +866,7 @@ adjust_stack_1 (rtx adjust, bool anti_p)\n   rtx temp;\n   rtx_insn *insn;\n \n-#ifndef STACK_GROWS_DOWNWARD\n+#if !STACK_GROWS_DOWNWARD\n   /* Hereafter anti_p means subtract_p.  */\n   anti_p = !anti_p;\n #endif\n@@ -1414,7 +1414,7 @@ allocate_dynamic_stack_space (rtx size, unsigned size_align,\n     {\n       int saved_stack_pointer_delta;\n \n-#ifndef STACK_GROWS_DOWNWARD\n+#if !STACK_GROWS_DOWNWARD\n       emit_move_insn (target, virtual_stack_dynamic_rtx);\n #endif\n \n@@ -1423,7 +1423,7 @@ allocate_dynamic_stack_space (rtx size, unsigned size_align,\n \t{\n \t  rtx available;\n \t  rtx_code_label *space_available = gen_label_rtx ();\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n \t  available = expand_binop (Pmode, sub_optab,\n \t\t\t\t    stack_pointer_rtx, stack_limit_rtx,\n \t\t\t\t    NULL_RTX, 1, OPTAB_WIDEN);\n@@ -1456,7 +1456,7 @@ allocate_dynamic_stack_space (rtx size, unsigned size_align,\n \t crtl->preferred_stack_boundary alignment.  */\n       stack_pointer_delta = saved_stack_pointer_delta;\n \n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n       emit_move_insn (target, virtual_stack_dynamic_rtx);\n #endif\n     }\n@@ -1545,7 +1545,7 @@ emit_stack_probe (rtx address)\n \n #define PROBE_INTERVAL (1 << STACK_CHECK_PROBE_INTERVAL_EXP)\n \n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n #define STACK_GROW_OP MINUS\n #define STACK_GROW_OPTAB sub_optab\n #define STACK_GROW_OFF(off) -(off)"}, {"sha": "3d691de6baac0465ce1eb644ff14aa45fb8cf855", "filename": "gcc/expr.c", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -99,7 +99,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ccmp.h\"\n \n #ifndef STACK_PUSH_CODE\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n #define STACK_PUSH_CODE PRE_DEC\n #else\n #define STACK_PUSH_CODE PRE_INC\n@@ -869,7 +869,7 @@ move_by_pieces (rtx to, rtx from, unsigned HOST_WIDE_INT len,\n       to_addr = NULL_RTX;\n       data.to = NULL_RTX;\n       data.autinc_to = 1;\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n       data.reverse = 1;\n #else\n       data.reverse = 0;\n@@ -3792,11 +3792,7 @@ push_block (rtx size, int extra, int below)\n       anti_adjust_stack (temp);\n     }\n \n-#ifndef STACK_GROWS_DOWNWARD\n-  if (0)\n-#else\n-  if (1)\n-#endif\n+  if (STACK_GROWS_DOWNWARD)\n     {\n       temp = virtual_outgoing_args_rtx;\n       if (extra != 0 && below)\n@@ -4004,7 +4000,7 @@ fixup_args_size_notes (rtx_insn *prev, rtx_insn *last, int end_args_size)\n \tsaw_unknown = true;\n \n       add_reg_note (insn, REG_ARGS_SIZE, GEN_INT (args_size));\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n       this_delta = -(unsigned HOST_WIDE_INT) this_delta;\n #endif\n       args_size -= this_delta;\n@@ -4049,7 +4045,7 @@ emit_single_push_insn_1 (machine_mode mode, rtx x, tree type)\n \n       emit_move_insn (stack_pointer_rtx,\n \t\t      expand_binop (Pmode,\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n \t\t\t\t    sub_optab,\n #else\n \t\t\t\t    add_optab,\n@@ -4059,7 +4055,7 @@ emit_single_push_insn_1 (machine_mode mode, rtx x, tree type)\n \t\t\t\t    NULL_RTX, 0, OPTAB_LIB_WIDEN));\n \n       offset = (HOST_WIDE_INT) padding_size;\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n       if (STACK_PUSH_CODE == POST_DEC)\n \t/* We have already decremented the stack pointer, so get the\n \t   previous value.  */\n@@ -4075,7 +4071,7 @@ emit_single_push_insn_1 (machine_mode mode, rtx x, tree type)\n     }\n   else\n     {\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n       /* ??? This seems wrong if STACK_PUSH_CODE == POST_DEC.  */\n       dest_addr = gen_rtx_PLUS (Pmode, stack_pointer_rtx,\n \t\t\t\tgen_int_mode (-(HOST_WIDE_INT) rounded_size,\n@@ -4168,7 +4164,7 @@ emit_push_insn (rtx x, machine_mode mode, tree type, rtx size,\n {\n   rtx xinner;\n   enum direction stack_direction\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n     = downward;\n #else\n     = upward;"}, {"sha": "4750714d78d074bd12e01ca3b2afc9de6a4cd523", "filename": "gcc/ira-color.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -3854,14 +3854,6 @@ coalesced_pseudo_reg_freq_compare (const void *v1p, const void *v2p)\n    It is used for sorting pseudo registers.  */\n static unsigned int *regno_max_ref_width;\n \n-/* Redefine STACK_GROWS_DOWNWARD in terms of 0 or 1.  */\n-#ifdef STACK_GROWS_DOWNWARD\n-# undef STACK_GROWS_DOWNWARD\n-# define STACK_GROWS_DOWNWARD 1\n-#else\n-# define STACK_GROWS_DOWNWARD 0\n-#endif\n-\n /* Sort pseudos according their slot numbers (putting ones with\n   smaller numbers first, or last when the frame pointer is not\n   needed).  */"}, {"sha": "6d2ba2902c65a978a9ee664c74ee18b6752b0201", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -68,13 +68,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"lower-subreg.h\"\n #include \"rtl-iter.h\"\n \n-#ifdef STACK_GROWS_DOWNWARD\n-# undef STACK_GROWS_DOWNWARD\n-# define STACK_GROWS_DOWNWARD 1\n-#else\n-# define STACK_GROWS_DOWNWARD 0\n-#endif\n-\n \n /* Decompose multi-word pseudo-registers into individual\n    pseudo-registers when possible and profitable.  This is possible"}, {"sha": "19ece20d4fa84642d5c81e5322bbf7afeb0321f5", "filename": "gcc/lra-spills.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Flra-spills.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Flra-spills.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-spills.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -230,14 +230,6 @@ regno_freq_compare (const void *v1p, const void *v2p)\n   return regno1 - regno2;\n }\n \n-/* Redefine STACK_GROWS_DOWNWARD in terms of 0 or 1.  */\n-#ifdef STACK_GROWS_DOWNWARD\n-# undef STACK_GROWS_DOWNWARD\n-# define STACK_GROWS_DOWNWARD 1\n-#else\n-# define STACK_GROWS_DOWNWARD 0\n-#endif\n-\n /* Sort pseudos according to their slots, putting the slots in the order\n    that they should be allocated.  Slots with lower numbers have the highest\n    priority and should get the smallest displacement from the stack or"}, {"sha": "4a7aa67cf9a5a8565ac427e7674be030039f2a2f", "filename": "gcc/recog.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -69,15 +69,15 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-codes.h\"\n \n #ifndef STACK_PUSH_CODE\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n #define STACK_PUSH_CODE PRE_DEC\n #else\n #define STACK_PUSH_CODE PRE_INC\n #endif\n #endif\n \n #ifndef STACK_POP_CODE\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n #define STACK_POP_CODE POST_INC\n #else\n #define STACK_POP_CODE POST_DEC\n@@ -1332,7 +1332,7 @@ push_operand (rtx op, machine_mode mode)\n \t  || GET_CODE (XEXP (op, 1)) != PLUS\n \t  || XEXP (XEXP (op, 1), 0) != XEXP (op, 0)\n \t  || !CONST_INT_P (XEXP (XEXP (op, 1), 1))\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n \t  || INTVAL (XEXP (XEXP (op, 1), 1)) != - (int) rounded_size\n #else\n \t  || INTVAL (XEXP (XEXP (op, 1), 1)) != (int) rounded_size"}, {"sha": "206da5a55f25b23d833e88c6980dc033e1d063ad", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9f30bfbd23c0e7ca832e40cbad4092789e8dd/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=62f9f30bfbd23c0e7ca832e40cbad4092789e8dd", "patch": "@@ -4734,7 +4734,7 @@ parse_add_or_inc (struct mem_inc_info *mii, rtx_insn *insn, bool before_mem)\n   if (regs_equal && REGNO (SET_DEST (pat)) == STACK_POINTER_REGNUM)\n     {\n       /* Note that the sign has already been reversed for !before_mem.  */\n-#ifdef STACK_GROWS_DOWNWARD\n+#if STACK_GROWS_DOWNWARD\n       return mii->inc_constant > 0;\n #else\n       return mii->inc_constant < 0;"}]}