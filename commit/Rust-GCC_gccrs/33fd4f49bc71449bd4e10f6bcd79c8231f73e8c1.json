{"sha": "33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNmZDRmNDliYzcxNDQ5YmQ0ZTEwZjZiY2Q3OWM4MjMxZjczZThjMQ==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2006-02-13T22:05:40Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-02-13T22:05:40Z"}, "message": "decl.c (grokdeclarator): Return NULL_TREE instead of 0.\n\n\t* decl.c (grokdeclarator): Return NULL_TREE instead of 0.\n\t* typeck.c (unary_complex_lvalue): Likewise.\n\nFrom-SVN: r110933", "tree": {"sha": "032cd92f197980b9fc68c1a6d8266a5e39d01992", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/032cd92f197980b9fc68c1a6d8266a5e39d01992"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1/comments", "author": null, "committer": null, "parents": [{"sha": "ebf0088aec8584ae3fe0df08860b0842ac8e3920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebf0088aec8584ae3fe0df08860b0842ac8e3920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebf0088aec8584ae3fe0df08860b0842ac8e3920"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "eac70313bfe575f1b7ec1d6de81c9e6cabac4835", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1", "patch": "@@ -1,3 +1,8 @@\n+2006-02-13  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* decl.c (grokdeclarator): Return NULL_TREE instead of 0.\n+\t* typeck.c (unary_complex_lvalue): Likewise.\n+\n 2006-02-13  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \t* lex.c (parse_strconst_pragma): Return error_mark_node instead of"}, {"sha": "61a3545b1a37273104a9b701025e228f411977c5", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1", "patch": "@@ -6815,7 +6815,7 @@ grokdeclarator (const cp_declarator *declarator,\n      a function declarator.  */\n \n   if (funcdef_flag && innermost_code != cdk_function)\n-    return 0;\n+    return NULL_TREE;\n \n   if (((dname && IDENTIFIER_OPNAME_P (dname)) || flags == TYPENAME_FLAG)\n       && innermost_code != cdk_function"}, {"sha": "52e7fb6d2d35486bfcc01230e0d04f0a34b7371b", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=33fd4f49bc71449bd4e10f6bcd79c8231f73e8c1", "patch": "@@ -4343,7 +4343,7 @@ unary_complex_lvalue (enum tree_code code, tree arg)\n     }\n \n   if (code != ADDR_EXPR)\n-    return 0;\n+    return NULL_TREE;\n \n   /* Handle (a = b) used as an \"lvalue\" for `&'.  */\n   if (TREE_CODE (arg) == MODIFY_EXPR\n@@ -4384,7 +4384,7 @@ unary_complex_lvalue (enum tree_code code, tree arg)\n   }\n \n   /* Don't let anything else be handled specially.  */\n-  return 0;\n+  return NULL_TREE;\n }\n \f\n /* Mark EXP saying that we need to be able to take the"}]}