{"sha": "47dd40babb7af080ee9935406111a17ec3f87a0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdkZDQwYmFiYjdhZjA4MGVlOTkzNTQwNjExMWExN2VjM2Y4N2EwYg==", "commit": {"author": {"name": "Ramon Fernandez", "email": "fernandez@adacore.com", "date": "2006-02-17T16:09:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-17T16:09:11Z"}, "message": "expander.adb: Fix typo in comment\n\n2006-02-17  Ramon Fernandez  <fernandez@adacore.com>\n\t    Thomas Quinot  <quinot@adacore.com>\n\t    Robert Dewar  <dewar@adacore.com>\n\t    Javier Miranda  <miranda@adacore.com>\n\n\t* expander.adb: Fix typo in comment\n\n\t* exp_pakd.adb: Fix typo\n\tMinor comment reformatting.\n\n\t* g-dyntab.adb: Minor reformatting\n\n\t* exp_ch6.adb (Register_Interface_DT_Entry): Traverse the list of\n\taliased subprograms to look for the abstract interface subprogram.\n\nFrom-SVN: r111199", "tree": {"sha": "595ec323529782b06dead213612ac6f6707b874d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/595ec323529782b06dead213612ac6f6707b874d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47dd40babb7af080ee9935406111a17ec3f87a0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47dd40babb7af080ee9935406111a17ec3f87a0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47dd40babb7af080ee9935406111a17ec3f87a0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47dd40babb7af080ee9935406111a17ec3f87a0b/comments", "author": {"login": "ramonfernandez", "id": 1686707, "node_id": "MDQ6VXNlcjE2ODY3MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1686707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramonfernandez", "html_url": "https://github.com/ramonfernandez", "followers_url": "https://api.github.com/users/ramonfernandez/followers", "following_url": "https://api.github.com/users/ramonfernandez/following{/other_user}", "gists_url": "https://api.github.com/users/ramonfernandez/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramonfernandez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramonfernandez/subscriptions", "organizations_url": "https://api.github.com/users/ramonfernandez/orgs", "repos_url": "https://api.github.com/users/ramonfernandez/repos", "events_url": "https://api.github.com/users/ramonfernandez/events{/privacy}", "received_events_url": "https://api.github.com/users/ramonfernandez/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f813ac73e9991904d0aec7b4f59a12563b9882e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f813ac73e9991904d0aec7b4f59a12563b9882e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f813ac73e9991904d0aec7b4f59a12563b9882e3"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "304919fb19054167f11ef5148bf78c52a4deeb99", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47dd40babb7af080ee9935406111a17ec3f87a0b/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47dd40babb7af080ee9935406111a17ec3f87a0b/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=47dd40babb7af080ee9935406111a17ec3f87a0b", "patch": "@@ -4404,6 +4404,7 @@ package body Exp_Ch6 is\n         (Prim                : Entity_Id;\n          Ancestor_Iface_Prim : Entity_Id := Empty)\n       is\n+         E            : Entity_Id;\n          Prim_Typ     : Entity_Id;\n          Prim_Op      : Entity_Id;\n          Iface_Typ    : Entity_Id;\n@@ -4422,7 +4423,18 @@ package body Exp_Ch6 is\n \n          if No (Ancestor_Iface_Prim) then\n             Prim_Typ  := Scope (DTC_Entity (Alias (Prim)));\n-            Iface_Typ := Scope (DTC_Entity (Abstract_Interface_Alias (Prim)));\n+\n+            --  Look for the abstract interface subprogram\n+\n+            E := Abstract_Interface_Alias (Prim);\n+            while Present (E)\n+              and then Is_Abstract (E)\n+              and then not Is_Interface (Scope (DTC_Entity (E)))\n+            loop\n+               E := Alias (E);\n+            end loop;\n+\n+            Iface_Typ := Scope (DTC_Entity (E));\n \n             --  Generate the code of the thunk only when this primitive\n             --  operation is associated with a secondary dispatch table."}, {"sha": "472c0daa6b9f6c79687ea639ffe44715199e154d", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47dd40babb7af080ee9935406111a17ec3f87a0b/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47dd40babb7af080ee9935406111a17ec3f87a0b/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=47dd40babb7af080ee9935406111a17ec3f87a0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -682,9 +682,9 @@ package body Exp_Pakd is\n       Act_ST := Underlying_Type (Etype (Aexp));\n       Create_Packed_Array_Type (Act_ST);\n \n-      --  Just replace the eEype with the packed array type. This works\n-      --  because the expression will not be further analyzed, and Gigi\n-      --  considers the two types equivalent in any case.\n+      --  Just replace the etype with the packed array type. This works because\n+      --  the expression will not be further analyzed, and Gigi considers the\n+      --  two types equivalent in any case.\n \n       --  This is not strictly the case ??? If the reference is an actual in\n       --  call, the expansion of the prefix is delayed, and must be reanalyzed,"}, {"sha": "1c732ce139835bc69ccdc636b30f2d8e1c24772f", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47dd40babb7af080ee9935406111a17ec3f87a0b/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47dd40babb7af080ee9935406111a17ec3f87a0b/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=47dd40babb7af080ee9935406111a17ec3f87a0b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,7 +75,7 @@ package body Expander is\n    procedure Expand (N : Node_Id) is\n    begin\n       --  If we were analyzing a default expression the Full_Analysis flag\n-      --  must have be off. If we are in expansion mode then we must be\n+      --  must be off. If we are in expansion mode then we must be\n       --  performing a full analysis. If we are analyzing a generic then\n       --  Expansion must be off.\n "}, {"sha": "c25b6738aa506a330bbc515e61bb7b7729e85039", "filename": "gcc/ada/g-dyntab.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47dd40babb7af080ee9935406111a17ec3f87a0b/gcc%2Fada%2Fg-dyntab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47dd40babb7af080ee9935406111a17ec3f87a0b/gcc%2Fada%2Fg-dyntab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.adb?ref=47dd40babb7af080ee9935406111a17ec3f87a0b", "patch": "@@ -286,7 +286,6 @@ package body GNAT.Dynamic_Tables is\n       function Index_Of (Idx : Natural) return Table_Index_Type is\n          J : constant Integer'Base :=\n                Table_Index_Type'Pos (First) + Idx - 1;\n-\n       begin\n          return Table_Index_Type'Val (J);\n       end Index_Of;"}]}