{"sha": "6170a99877476a4af173c3a6a27a69590457ab15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE3MGE5OTg3NzQ3NmE0YWYxNzNjM2E2YTI3YTY5NTkwNDU3YWIxNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2007-02-12T21:01:33Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-02-12T21:01:33Z"}, "message": "tree.h (DECL_IGNORED_P): Document further effect for FUNCTION_DECL.\n\n\t* tree.h (DECL_IGNORED_P): Document further effect for FUNCTION_DECL.\n\t* cgraphunit.c (cgraph_expand_function): If DECL_IGNORED_P is set on\n\tthe function, temporarily point the debug interface to the null one.\n\nFrom-SVN: r121861", "tree": {"sha": "7ba2251e6039eacb4bbf44e7e7ebd743914b4d81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ba2251e6039eacb4bbf44e7e7ebd743914b4d81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6170a99877476a4af173c3a6a27a69590457ab15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6170a99877476a4af173c3a6a27a69590457ab15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6170a99877476a4af173c3a6a27a69590457ab15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6170a99877476a4af173c3a6a27a69590457ab15/comments", "author": null, "committer": null, "parents": [{"sha": "b9a8f075b650714eaa4a7f182302d8dc715dd50e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9a8f075b650714eaa4a7f182302d8dc715dd50e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9a8f075b650714eaa4a7f182302d8dc715dd50e"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "bd541e5b676718d4a8830fa906cb724ee0c18716", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6170a99877476a4af173c3a6a27a69590457ab15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6170a99877476a4af173c3a6a27a69590457ab15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6170a99877476a4af173c3a6a27a69590457ab15", "patch": "@@ -1,3 +1,9 @@\n+2007-02-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* tree.h (DECL_IGNORED_P): Document further effect for FUNCTION_DECL.\n+\t* cgraphunit.c (cgraph_expand_function): If DECL_IGNORED_P is set on\n+\tthe function, temporarily point the debug interface to the null one.\n+\n 2007-02-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* dwarf2out.c (round_up_to_align): New static function."}, {"sha": "f7274ee1fcf8e8c4a33296e1657e96b3d3d5ccf4", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6170a99877476a4af173c3a6a27a69590457ab15/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6170a99877476a4af173c3a6a27a69590457ab15/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=6170a99877476a4af173c3a6a27a69590457ab15", "patch": "@@ -984,6 +984,8 @@ cgraph_mark_functions_to_output (void)\n static void\n cgraph_expand_function (struct cgraph_node *node)\n {\n+  enum debug_info_type save_write_symbols = NO_DEBUG;\n+  const struct gcc_debug_hooks *save_debug_hooks = NULL;\n   tree decl = node->decl;\n \n   /* We ought to not compile any inline clones.  */\n@@ -994,13 +996,27 @@ cgraph_expand_function (struct cgraph_node *node)\n \n   gcc_assert (node->lowered);\n \n+  if (DECL_IGNORED_P (decl))\n+    {\n+      save_write_symbols = write_symbols;\n+      write_symbols = NO_DEBUG;\n+      save_debug_hooks = debug_hooks;\n+      debug_hooks = &do_nothing_debug_hooks;\n+    }\n+\n   /* Generate RTL for the body of DECL.  */\n   lang_hooks.callgraph.expand_function (decl);\n \n   /* Make sure that BE didn't give up on compiling.  */\n   /* ??? Can happen with nested function of extern inline.  */\n   gcc_assert (TREE_ASM_WRITTEN (node->decl));\n \n+  if (DECL_IGNORED_P (decl))\n+    {\n+      write_symbols = save_write_symbols;\n+      debug_hooks = save_debug_hooks;\n+    }\n+\n   current_function_decl = NULL;\n   if (!cgraph_preserve_function_body_p (node->decl))\n     {"}, {"sha": "50b014962ad2307b83fa54f421c9ade67991117f", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6170a99877476a4af173c3a6a27a69590457ab15/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6170a99877476a4af173c3a6a27a69590457ab15/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=6170a99877476a4af173c3a6a27a69590457ab15", "patch": "@@ -2540,7 +2540,8 @@ struct tree_memory_partition_tag GTY(())\n   (DECL_COMMON_CHECK (NODE)->decl_common.debug_expr_is_from)\n \n /* Nonzero for a given ..._DECL node means that the name of this node should\n-   be ignored for symbolic debug purposes.  */\n+   be ignored for symbolic debug purposes.  Moreover, for a FUNCTION_DECL,\n+   the body of the function should also be ignored.  */\n #define DECL_IGNORED_P(NODE) (DECL_COMMON_CHECK (NODE)->decl_common.ignored_flag)\n \n /* Nonzero for a given ..._DECL node means that this node represents an"}]}