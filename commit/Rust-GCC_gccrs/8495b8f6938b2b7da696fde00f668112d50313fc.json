{"sha": "8495b8f6938b2b7da696fde00f668112d50313fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ5NWI4ZjY5MzhiMmI3ZGE2OTZmZGUwMGY2NjgxMTJkNTAzMTNmYw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-12-04T10:31:56Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2014-12-04T10:31:56Z"}, "message": "install.texi: Remove mentions of cloog and ppl.\n\n\t* doc/install.texi: Remove mentions of cloog and ppl.\n\t* doc/invoke.texi: Likewise\n\nFrom-SVN: r218348", "tree": {"sha": "3b06f99f18247f726a88bf1ad737c25d8fcdda4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b06f99f18247f726a88bf1ad737c25d8fcdda4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8495b8f6938b2b7da696fde00f668112d50313fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8495b8f6938b2b7da696fde00f668112d50313fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8495b8f6938b2b7da696fde00f668112d50313fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8495b8f6938b2b7da696fde00f668112d50313fc/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c05eeebc177336309489b7abaf03e9e8e623bae3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05eeebc177336309489b7abaf03e9e8e623bae3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05eeebc177336309489b7abaf03e9e8e623bae3"}], "stats": {"total": 42, "additions": 19, "deletions": 23}, "files": [{"sha": "61b1a3026a9f200e8200168613547bb0f1ef985c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8495b8f6938b2b7da696fde00f668112d50313fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8495b8f6938b2b7da696fde00f668112d50313fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8495b8f6938b2b7da696fde00f668112d50313fc", "patch": "@@ -1,3 +1,8 @@\n+2014-12-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* doc/install.texi: Remove mentions of cloog and ppl.\n+\t* doc/invoke.texi: Likewise\n+\n 2014-12-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/56493"}, {"sha": "59bbac7382d6fe34ec689a4d78bf204e29f73ec0", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8495b8f6938b2b7da696fde00f668112d50313fc/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8495b8f6938b2b7da696fde00f668112d50313fc/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=8495b8f6938b2b7da696fde00f668112d50313fc", "patch": "@@ -1719,21 +1719,13 @@ a cross compiler, they will not be used to configure target libraries.\n @item --with-isl=@var{pathname}\n @itemx --with-isl-include=@var{pathname}\n @itemx --with-isl-lib=@var{pathname}\n-@itemx --with-cloog=@var{pathname}\n-@itemx --with-cloog-include=@var{pathname}\n-@itemx --with-cloog-lib=@var{pathname}\n-If you do not have ISL and the CLooG\n-libraries installed in a standard location and you want to build GCC,\n-you can explicitly specify the directory where they are installed\n-(@samp{--with-isl=@/@var{islinstalldir}},\n-@samp{--with-cloog=@/@var{clooginstalldir}}). The\n+If you do not have the ISL library installed in a standard location and you\n+want to build GCC, you can explicitly specify the directory where it is\n+installed (@samp{--with-isl=@/@var{islinstalldir}}). The\n @option{--with-isl=@/@var{islinstalldir}} option is shorthand for\n @option{--with-isl-lib=@/@var{islinstalldir}/lib} and\n-@option{--with-isl-include=@/@var{islinstalldir}/include}.  Likewise the\n-@option{--with-cloog=@/@var{clooginstalldir}} option is shorthand for\n-@option{--with-cloog-lib=@/@var{clooginstalldir}/lib} and\n-@option{--with-cloog-include=@/@var{clooginstalldir}/include}.  If these\n-shorthand assumptions are not correct, you can use the explicit\n+@option{--with-isl-include=@/@var{islinstalldir}/include}. If this\n+shorthand assumption is not correct, you can use the explicit\n include and lib options directly.\n \n These flags are applicable to the host platform only.  When building"}, {"sha": "82f079420fc8eb2f83aca9f60b36fd301112246c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8495b8f6938b2b7da696fde00f668112d50313fc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8495b8f6938b2b7da696fde00f668112d50313fc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8495b8f6938b2b7da696fde00f668112d50313fc", "patch": "@@ -8245,8 +8245,8 @@ at @option{-O} and higher.\n @opindex ftree-loop-linear\n Perform loop interchange transformations on tree.  Same as\n @option{-floop-interchange}.  To use this code transformation, GCC has\n-to be configured with @option{--with-ppl} and @option{--with-cloog} to\n-enable the Graphite loop transformation infrastructure.\n+to be configured with @option{--with-isl} to enable the Graphite loop\n+transformation infrastructure.\n \n @item -floop-interchange\n @opindex floop-interchange\n@@ -8274,8 +8274,8 @@ contiguously by column, and the original loop iterates over rows,\n potentially creating at each access a cache miss.  This optimization\n applies to all the languages supported by GCC and is not limited to\n Fortran.  To use this code transformation, GCC has to be configured\n-with @option{--with-ppl} and @option{--with-cloog} to enable the\n-Graphite loop transformation infrastructure.\n+with @option{--with-isl} to enable the Graphite loop transformation\n+infrastructure.\n \n @item -floop-strip-mine\n @opindex floop-strip-mine\n@@ -8300,8 +8300,8 @@ ENDDO\n @end smallexample\n This optimization applies to all the languages supported by GCC and is\n not limited to Fortran.  To use this code transformation, GCC has to\n-be configured with @option{--with-ppl} and @option{--with-cloog} to\n-enable the Graphite loop transformation infrastructure.\n+be configured with @option{--with-isl} to enable the Graphite loop\n+transformation infrastructure.\n \n @item -floop-block\n @opindex floop-block\n@@ -8333,17 +8333,16 @@ which can be beneficial when @code{M} is larger than the caches,\n because the innermost loop iterates over a smaller amount of data\n which can be kept in the caches.  This optimization applies to all the\n languages supported by GCC and is not limited to Fortran.  To use this\n-code transformation, GCC has to be configured with @option{--with-ppl}\n-and @option{--with-cloog} to enable the Graphite loop transformation\n-infrastructure.\n+code transformation, GCC has to be configured with @option{--with-isl}\n+to enable the Graphite loop transformation infrastructure.\n \n @item -fgraphite-identity\n @opindex fgraphite-identity\n Enable the identity transformation for graphite.  For every SCoP we generate\n the polyhedral representation and transform it back to gimple.  Using\n @option{-fgraphite-identity} we can check the costs or benefits of the\n GIMPLE -> GRAPHITE -> GIMPLE transformation.  Some minimal optimizations\n-are also performed by the code generator CLooG, like index splitting and\n+are also performed by the code generator ISL, like index splitting and\n dead code elimination in loops.\n \n @item -floop-nest-optimize"}]}