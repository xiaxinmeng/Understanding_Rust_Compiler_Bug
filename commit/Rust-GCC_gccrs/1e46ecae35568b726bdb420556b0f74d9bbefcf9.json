{"sha": "1e46ecae35568b726bdb420556b0f74d9bbefcf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU0NmVjYWUzNTU2OGI3MjZiZGI0MjA1NTZiMGY3NGQ5YmJlZmNmOQ==", "commit": {"author": {"name": "Dominik Infuehr", "email": "dominik.infuehr@theobroma-systems.com", "date": "2017-11-15T09:24:01Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2017-11-15T09:24:01Z"}, "message": "[AArch64] Improve scheduling model for X-Gene\n\n2017-11-15  Dominik Infuehr  <dominik.infuehr@theobroma-systems.com>\n\n\t* config/arm/xgene1.md (xgene1): Split into automatons\n\txgene1_main, xgene1_decoder, xgene1_div, xgene1_simd.\n\t(xgene1_f_load): Adjust reservations and/or types.\n\t(xgene1_f_store): Likewise.\n\t(xgene1_load_pair): Likewise.\n\t(xgene1_store_pair): Likewise.\n\t(xgene1_fp_load1): Likewise.\n\t(xgene1_load1): Likewise.\n\t(xgene1_store1): Likewise.\n\t(xgene1_move): Likewise.\n\t(xgene1_alu): Likewise.\n\t(xgene1_simd): Likewise.\n\t(xgene1_bfm): Likewise.\n\t(xgene1_neon_load1): Likewise.\n\t(xgene1_neon_store1): Likewise.\n\t(xgene1_neon_logic): Likewise.\n\t(xgene1_neon_st1): Likewise.\n\t(xgene1_neon_ld1r): Likewise.\n\t(xgene1_alu_cond): Added.\n\t(xgene1_shift_reg): Likwise.\n\t(xgene1_bfx): Likewise.\n\t(xgene1_mul): Split into xgene1_mul32, xgene1_mul64.\n\nFrom-SVN: r254759", "tree": {"sha": "937520a5d269808950643dfb3cb4dd8829f6b841", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/937520a5d269808950643dfb3cb4dd8829f6b841"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e46ecae35568b726bdb420556b0f74d9bbefcf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e46ecae35568b726bdb420556b0f74d9bbefcf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e46ecae35568b726bdb420556b0f74d9bbefcf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e46ecae35568b726bdb420556b0f74d9bbefcf9/comments", "author": null, "committer": null, "parents": [{"sha": "0b99f25372431148e637b98f02e7cbe03feef7f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b99f25372431148e637b98f02e7cbe03feef7f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b99f25372431148e637b98f02e7cbe03feef7f9"}], "stats": {"total": 149, "additions": 105, "deletions": 44}, "files": [{"sha": "63e904ce4a723b4718277cd930500c4f72d0bd58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e46ecae35568b726bdb420556b0f74d9bbefcf9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e46ecae35568b726bdb420556b0f74d9bbefcf9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e46ecae35568b726bdb420556b0f74d9bbefcf9", "patch": "@@ -1,3 +1,28 @@\n+2017-11-15  Dominik Infuehr  <dominik.infuehr@theobroma-systems.com>\n+\n+\t* config/arm/xgene1.md (xgene1): Split into automatons\n+\txgene1_main, xgene1_decoder, xgene1_div, xgene1_simd.\n+\t(xgene1_f_load): Adjust reservations and/or types.\n+\t(xgene1_f_store): Likewise.\n+\t(xgene1_load_pair): Likewise.\n+\t(xgene1_store_pair): Likewise.\n+\t(xgene1_fp_load1): Likewise.\n+\t(xgene1_load1): Likewise.\n+\t(xgene1_store1): Likewise.\n+\t(xgene1_move): Likewise.\n+\t(xgene1_alu): Likewise.\n+\t(xgene1_simd): Likewise.\n+\t(xgene1_bfm): Likewise.\n+\t(xgene1_neon_load1): Likewise.\n+\t(xgene1_neon_store1): Likewise.\n+\t(xgene1_neon_logic): Likewise.\n+\t(xgene1_neon_st1): Likewise.\n+\t(xgene1_neon_ld1r): Likewise.\n+\t(xgene1_alu_cond): Added.\n+\t(xgene1_shift_reg): Likwise.\n+\t(xgene1_bfx): Likewise.\n+\t(xgene1_mul): Split into xgene1_mul32, xgene1_mul64.\n+\n 2017-11-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/82981"}, {"sha": "cf0694a5cc76853aac1d815da4b97b70ad4b0fba", "filename": "gcc/config/arm/xgene1.md", "status": "modified", "additions": 80, "deletions": 44, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e46ecae35568b726bdb420556b0f74d9bbefcf9/gcc%2Fconfig%2Farm%2Fxgene1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e46ecae35568b726bdb420556b0f74d9bbefcf9/gcc%2Fconfig%2Farm%2Fxgene1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fxgene1.md?ref=1e46ecae35568b726bdb420556b0f74d9bbefcf9", "patch": "@@ -20,17 +20,26 @@\n \n ;; Pipeline description for the xgene1 micro-architecture\n \n-(define_automaton \"xgene1\")\n+(define_automaton \"xgene1_main, xgene1_decoder, xgene1_div, xgene1_simd\")\n \n-(define_cpu_unit \"xgene1_decode_out0\" \"xgene1\")\n-(define_cpu_unit \"xgene1_decode_out1\" \"xgene1\")\n-(define_cpu_unit \"xgene1_decode_out2\" \"xgene1\")\n-(define_cpu_unit \"xgene1_decode_out3\" \"xgene1\")\n+(define_cpu_unit \"xgene1_decode_out0\" \"xgene1_decoder\")\n+(define_cpu_unit \"xgene1_decode_out1\" \"xgene1_decoder\")\n+(define_cpu_unit \"xgene1_decode_out2\" \"xgene1_decoder\")\n+(define_cpu_unit \"xgene1_decode_out3\" \"xgene1_decoder\")\n \n-(define_cpu_unit \"xgene1_divide\" \"xgene1\")\n-(define_cpu_unit \"xgene1_fp_divide\" \"xgene1\")\n-(define_cpu_unit \"xgene1_fsu\" \"xgene1\")\n-(define_cpu_unit \"xgene1_fcmp\" \"xgene1\")\n+(define_cpu_unit \"xgene1_IXA\" \"xgene1_main\")\n+(define_cpu_unit \"xgene1_IXB\" \"xgene1_main\")\n+(define_cpu_unit \"xgene1_IXB_compl\" \"xgene1_main\")\n+\n+(define_reservation \"xgene1_IXn\" \"(xgene1_IXA | xgene1_IXB)\")\n+\n+(define_cpu_unit \"xgene1_multiply\" \"xgene1_main\")\n+(define_cpu_unit \"xgene1_divide\" \"xgene1_div\")\n+(define_cpu_unit \"xgene1_fp_divide\" \"xgene1_div\")\n+(define_cpu_unit \"xgene1_fsu\" \"xgene1_simd\")\n+(define_cpu_unit \"xgene1_fcmp\" \"xgene1_simd\")\n+(define_cpu_unit \"xgene1_ld\" \"xgene1_main\")\n+(define_cpu_unit \"xgene1_st\" \"xgene1_main\")\n \n (define_reservation \"xgene1_decode1op\"\n         \"( xgene1_decode_out0 )\n@@ -68,12 +77,12 @@\n (define_insn_reservation \"xgene1_f_load\" 10\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"f_loadd,f_loads\"))\n-  \"xgene1_decode2op\")\n+  \"xgene1_decode2op, xgene1_ld\")\n \n (define_insn_reservation \"xgene1_f_store\" 4\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"f_stored,f_stores\"))\n-  \"xgene1_decode2op\")\n+  \"xgene1_decode2op, xgene1_st\")\n \n (define_insn_reservation \"xgene1_fmov\" 2\n   (and (eq_attr \"tune\" \"xgene1\")\n@@ -92,85 +101,108 @@\n \n (define_insn_reservation \"xgene1_load_pair\" 6\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"load_8, load_16\"))\n-  \"xgene1_decodeIsolated\")\n+       (eq_attr \"type\" \"load_16\"))\n+  \"xgene1_decodeIsolated, xgene1_ld*2\")\n \n (define_insn_reservation \"xgene1_store_pair\" 2\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"store_8, store_16\"))\n-  \"xgene1_decodeIsolated\")\n+       (eq_attr \"type\" \"store_16\"))\n+  \"xgene1_decodeIsolated, xgene1_st*2\")\n \n (define_insn_reservation \"xgene1_fp_load1\" 10\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"load_4\")\n+       (eq_attr \"type\" \"load_4, load_8\")\n        (eq_attr \"fp\" \"yes\"))\n-  \"xgene1_decode1op\")\n+  \"xgene1_decode1op, xgene1_ld\")\n \n (define_insn_reservation \"xgene1_load1\" 5\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"load_4\"))\n-  \"xgene1_decode1op\")\n+       (eq_attr \"type\" \"load_4, load_8\"))\n+  \"xgene1_decode1op, xgene1_ld\")\n \n-(define_insn_reservation \"xgene1_store1\" 2\n+(define_insn_reservation \"xgene1_store1\" 1\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"store_4\"))\n-  \"xgene1_decode2op\")\n+       (eq_attr \"type\" \"store_4, store_8\"))\n+  \"xgene1_decode1op, xgene1_st\")\n \n (define_insn_reservation \"xgene1_move\" 1\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"mov_reg,mov_imm,mrs\"))\n-  \"xgene1_decode1op\")\n+  \"xgene1_decode1op, xgene1_IXn\")\n+\n+(define_insn_reservation \"xgene1_alu_cond\" 1\n+  (and (eq_attr \"tune\" \"xgene1\")\n+       (eq_attr \"type\" \"csel\"))\n+  \"xgene1_decode1op, xgene1_IXn\")\n \n (define_insn_reservation \"xgene1_alu\" 1\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"alu_imm,alu_sreg,alu_shift_imm,\\\n-                        alu_ext,adc_reg,csel,logic_imm,\\\n+                        alu_ext,adc_reg,logic_imm,\\\n                         logic_reg,logic_shift_imm,clz,\\\n-                        rbit,shift_reg,adr,mov_reg,\\\n-                        mov_imm,extend\"))\n-  \"xgene1_decode1op\")\n+                        rbit,adr,mov_reg,shift_imm,\\\n+                        mov_imm,extend,multiple\"))\n+  \"xgene1_decode1op, xgene1_IXn\")\n+\n+(define_insn_reservation \"xgene1_shift_rotate\" 2\n+  (and (eq_attr \"tune\" \"xgene1\")\n+       (eq_attr \"type\" \"shift_reg\"))\n+  \"xgene1_decode1op, xgene1_IXB, xgene1_IXB_compl\")\n \n-(define_insn_reservation \"xgene1_simd\" 1\n+(define_insn_reservation \"xgene1_simd\" 2\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"rev\"))\n-  \"xgene1_decode1op\")\n+  \"xgene1_decode1op, xgene1_IXB, xgene1_IXB_compl\")\n \n (define_insn_reservation \"xgene1_alus\" 1\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"alus_imm,alu_sreg,alus_shift_imm,\\\n+       (eq_attr \"type\" \"alus_imm,alus_sreg,alus_shift_imm,\\\n                         alus_ext,logics_imm,logics_reg,\\\n                         logics_shift_imm\"))\n-  \"xgene1_decode1op\")\n+  \"xgene1_decode1op, xgene1_IXB, xgene1_IXB_compl\")\n+\n+(define_bypass 2 \"xgene1_alus\"\n+  \"xgene1_alu_cond, xgene1_branch\")\n \n-(define_insn_reservation \"xgene1_mul\" 6\n+(define_insn_reservation \"xgene1_mul32\" 4\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"mul,mla,smull,umull,smlal,umlal\"))\n-  \"xgene1_decode2op\")\n+       (eq_attr \"mul32\" \"yes\"))\n+  \"xgene1_decode2op, xgene1_IXB + xgene1_multiply, xgene1_multiply, nothing, xgene1_IXB_compl\")\n+\n+(define_insn_reservation \"xgene1_mul64\" 5\n+  (and (eq_attr \"tune\" \"xgene1\")\n+       (eq_attr \"mul64\" \"yes\"))\n+  \"xgene1_decode2op, xgene1_IXB + xgene1_multiply, xgene1_multiply, nothing*2, xgene1_IXB_compl\")\n \n (define_insn_reservation \"xgene1_div\" 34\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"sdiv,udiv\"))\n-  \"xgene1_decode1op,xgene1_divide*7\")\n+  \"xgene1_decode1op, xgene1_IXB + xgene1_divide*7\")\n \n (define_insn_reservation \"xgene1_fcmp\" 10\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"fcmpd,fcmps,fccmpd,fccmps\"))\n-  \"xgene1_decode1op,xgene1_fsu+xgene1_fcmp*3\")\n+  \"xgene1_decode1op, xgene1_fsu + xgene1_fcmp*3\")\n \n (define_insn_reservation \"xgene1_fcsel\" 3\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"fcsel\"))\n-  \"xgene1_decode1op,xgene1_fsu\")\n+  \"xgene1_decode1op, xgene1_fsu\")\n+\n+(define_insn_reservation \"xgene1_bfx\" 1\n+  (and (eq_attr \"tune\" \"xgene1\")\n+       (eq_attr \"type\" \"bfx\"))\n+  \"xgene1_decode1op, xgene1_IXn\")\n \n (define_insn_reservation \"xgene1_bfm\" 2\n   (and (eq_attr \"tune\" \"xgene1\")\n-       (eq_attr \"type\" \"bfm,bfx\"))\n-  \"xgene1_decode1op,xgene1_fsu\")\n+       (eq_attr \"type\" \"bfm\"))\n+  \"xgene1_decode1op, xgene1_IXB, xgene1_IXB_compl\")\n \n (define_insn_reservation \"xgene1_f_rint\" 5\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"f_rintd,f_rints\"))\n-  \"xgene1_decode1op,xgene1_fsu\")\n+  \"xgene1_decode1op, xgene1_fsu\")\n \n (define_insn_reservation \"xgene1_f_cvt\" 3\n   (and (eq_attr \"tune\" \"xgene1\")\n@@ -225,12 +257,12 @@\n (define_insn_reservation \"xgene1_neon_load1\" 11\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"neon_load1_1reg, neon_load1_1reg_q\"))\n-  \"xgene1_decode2op,xgene1_fsu\")\n+  \"xgene1_decode2op, xgene1_ld\")\n \n (define_insn_reservation \"xgene1_neon_store1\" 5\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"neon_store1_1reg, neon_store1_1reg_q\"))\n-  \"xgene1_decode2op,xgene1_fsu\")\n+  \"xgene1_decode2op, xgene1_st\")\n \n (define_insn_reservation \"xgene1_neon_logic\" 2\n   (and (eq_attr \"tune\" \"xgene1\")\n@@ -300,6 +332,8 @@\n                         neon_compare_zero_q,\\\n                         neon_tst,\\\n                         neon_tst_q,\\\n+                        neon_minmax,\\\n+                        neon_minmax_q,\\\n                        \"))\n   \"xgene1_decode1op,xgene1_fsu\")\n \n@@ -439,8 +473,10 @@\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"neon_store1_one_lane,\\\n                         neon_store1_one_lane_q,\\\n+                        neon_stp,\\\n+                        neon_stp_q,\\\n                        \"))\n-  \"xgene1_decode1op\")\n+  \"xgene1_decodeIsolated, xgene1_st\")\n \n (define_insn_reservation \"xgene1_neon_halve_narrow\" 6\n   (and (eq_attr \"tune\" \"xgene1\")\n@@ -499,7 +535,7 @@\n   (and (eq_attr \"tune\" \"xgene1\")\n        (eq_attr \"type\" \"neon_load1_all_lanes,\\\n                        \"))\n-  \"xgene1_decode1op\")\n+  \"xgene1_decode1op, xgene1_ld\")\n \n (define_insn_reservation \"xgene1_neon_fp_recp\" 3\n   (and (eq_attr \"tune\" \"xgene1\")"}]}