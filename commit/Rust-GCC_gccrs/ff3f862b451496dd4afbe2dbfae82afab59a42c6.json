{"sha": "ff3f862b451496dd4afbe2dbfae82afab59a42c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYzZjg2MmI0NTE0OTZkZDRhZmJlMmRiZmFlODJhZmFiNTlhNDJjNg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-03-04T16:58:33Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-04-10T13:34:22Z"}, "message": "Handle 'omp declare target' attribute set for both OpenACC and OpenMP 'target' [PR89433, PR93465]\n\n... which as of PR89433 commit b48f44bf77a39fefc238a16cf1225c6464c82406 causes\nan ICE.  Not sure if this is actually supposed to be valid or invalid code.\nUntil the interactions between OpenACC and OpenMP 'target' get defined\nproperly, make this a compile-time error.\n\n\tgcc/\n\tPR middle-end/89433\n\tPR middle-end/93465\n\t* omp-general.c (oacc_verify_routine_clauses): Diagnose if\n\t\"#pragma omp declare target\" has also been applied.\n\tgcc/testsuite/\n\tPR middle-end/89433\n\tPR middle-end/93465\n\t* c-c++-common/goacc-gomp/pr93465-1.c: New file.", "tree": {"sha": "ec5183c87d18e1eccd02b89002e63bab156662a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec5183c87d18e1eccd02b89002e63bab156662a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff3f862b451496dd4afbe2dbfae82afab59a42c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff3f862b451496dd4afbe2dbfae82afab59a42c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff3f862b451496dd4afbe2dbfae82afab59a42c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff3f862b451496dd4afbe2dbfae82afab59a42c6/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7478addd84ab6808307f4f285ab05f3a76bbb257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7478addd84ab6808307f4f285ab05f3a76bbb257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7478addd84ab6808307f4f285ab05f3a76bbb257"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "33e980bd977a5775afc83e4b04de44356c8a22ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f862b451496dd4afbe2dbfae82afab59a42c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f862b451496dd4afbe2dbfae82afab59a42c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff3f862b451496dd4afbe2dbfae82afab59a42c6", "patch": "@@ -1,3 +1,10 @@\n+2020-04-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/89433\n+\tPR middle-end/93465\n+\t* omp-general.c (oacc_verify_routine_clauses): Diagnose if\n+\t\"#pragma omp declare target\" has also been applied.\n+\n 2020-04-09  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* config/msp430/msp430.c (msp430_expand_epilogue): Use emit_jump_insn"}, {"sha": "49023f42c473ae52ef0827d856f98537d99ed101", "filename": "gcc/omp-general.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f862b451496dd4afbe2dbfae82afab59a42c6/gcc%2Fomp-general.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f862b451496dd4afbe2dbfae82afab59a42c6/gcc%2Fomp-general.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-general.c?ref=ff3f862b451496dd4afbe2dbfae82afab59a42c6", "patch": "@@ -1776,6 +1776,19 @@ oacc_verify_routine_clauses (tree fndecl, tree *clauses, location_t loc,\n     = lookup_attribute (\"omp declare target\", DECL_ATTRIBUTES (fndecl));\n   if (attr != NULL_TREE)\n     {\n+      /* Diagnose if \"#pragma omp declare target\" has also been applied.  */\n+      if (TREE_VALUE (attr) == NULL_TREE)\n+\t{\n+\t  /* See <https://gcc.gnu.org/PR93465>; the semantics of combining\n+\t     OpenACC and OpenMP 'target' are not clear.  */\n+\t  error_at (loc,\n+\t\t    \"cannot apply %<%s%> to %qD, which has also been\"\n+\t\t    \" marked with an OpenMP 'declare target' directive\",\n+\t\t    routine_str, fndecl);\n+\t  /* Incompatible.  */\n+\t  return -1;\n+\t}\n+\n       /* If a \"#pragma acc routine\" has already been applied, just verify\n \t this one for compatibility.  */\n       /* Collect previous directive's clauses.  */"}, {"sha": "235d481e6cf3ea9a4df426c1200ab48cb07308d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f862b451496dd4afbe2dbfae82afab59a42c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f862b451496dd4afbe2dbfae82afab59a42c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ff3f862b451496dd4afbe2dbfae82afab59a42c6", "patch": "@@ -1,3 +1,9 @@\n+2020-04-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/89433\n+\tPR middle-end/93465\n+\t* c-c++-common/goacc-gomp/pr93465-1.c: New file.\n+\n 2020-04-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* lib/gdc.exp (gdc_link_flags): Remove libdruntime library paths."}, {"sha": "c8b9135d9973bea3cb696dd089eef33df6cb8df3", "filename": "gcc/testsuite/c-c++-common/goacc-gomp/pr93465-1.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff3f862b451496dd4afbe2dbfae82afab59a42c6/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc-gomp%2Fpr93465-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff3f862b451496dd4afbe2dbfae82afab59a42c6/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc-gomp%2Fpr93465-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc-gomp%2Fpr93465-1.c?ref=ff3f862b451496dd4afbe2dbfae82afab59a42c6", "patch": "@@ -0,0 +1,56 @@\n+#pragma omp declare target\n+#pragma acc routine seq /* { dg-error \"cannot apply '#pragma acc routine' to '\\(void \\)?f1\\(\\\\(\\\\)\\)?', which has also been marked with an OpenMP 'declare target' directive\" } */\n+void f1 (void) {}\n+#pragma omp end declare target\n+\n+#pragma omp declare target\n+void f1 (void);\n+\n+#pragma acc routine seq /* { dg-error \"cannot apply '#pragma acc routine' to '\\(void \\)?f1\\(\\\\(\\\\)\\)?', which has also been marked with an OpenMP 'declare target' directive\" } */\n+void f1 (void);\n+\n+\n+\n+#pragma omp declare target\n+#pragma acc routine /* { dg-error \"cannot apply '#pragma acc routine' to '\\(void \\)?f2\\(\\\\(\\\\)\\)?', which has also been marked with an OpenMP 'declare target' directive\" } */\n+extern void f2 (void);\n+#pragma omp end declare target\n+\n+#pragma omp declare target\n+extern void f2 (void);\n+#pragma omp end declare target\n+\n+#pragma acc routine gang /* { dg-error \"cannot apply '#pragma acc routine' to '\\(void \\)?f2\\(\\\\(\\\\)\\)?', which has also been marked with an OpenMP 'declare target' directive\" } */\n+extern void f2 (void);\n+\n+\n+#pragma omp declare target\n+#pragma acc routine gang /* { dg-error \"cannot apply '#pragma acc routine' to '\\(void \\)?f3\\(\\\\(\\\\)\\)?', which has also been marked with an OpenMP 'declare target' directive\" } */\n+void f3 (void);\n+#pragma omp end declare target\n+\n+#pragma omp declare target\n+void f3 (void) {}\n+#pragma omp end declare target\n+\n+#pragma acc routine (f3) gang /* { dg-error \"cannot apply '#pragma acc routine' to '\\(void \\)?f3\\(\\\\(\\\\)\\)?', which has also been marked with an OpenMP 'declare target' directive\" } */\n+\n+\n+/* Surprisingly, this diagnosis also works for '#pragma acc routine' first,\n+   followed by '#pragma omp declare target'; the latter gets applied first.  */\n+\n+\n+#pragma acc routine /* { dg-error \"cannot apply '#pragma acc routine' to '\\(void \\)?f4\\(\\\\(\\\\)\\)?', which has also been marked with an OpenMP 'declare target' directive\" } */\n+extern void f4 (void);\n+\n+#pragma omp declare target\n+extern void f4 (void);\n+#pragma omp end declare target\n+\n+\n+#pragma acc routine gang /* { dg-error \"cannot apply '#pragma acc routine' to '\\(void \\)?f5\\(\\\\(\\\\)\\)?', which has also been marked with an OpenMP 'declare target' directive\" } */\n+void f5 (void) {}\n+\n+#pragma omp declare target\n+extern void f5 (void);\n+#pragma omp end declare target"}]}