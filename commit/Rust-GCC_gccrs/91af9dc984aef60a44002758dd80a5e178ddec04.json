{"sha": "91af9dc984aef60a44002758dd80a5e178ddec04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFhZjlkYzk4NGFlZjYwYTQ0MDAyNzU4ZGQ4MGE1ZTE3OGRkZWMwNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-10-08T11:58:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-10-08T11:58:03Z"}, "message": "re PR tree-optimization/54825 (ICE with vector extension)\n\n2012-10-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/54825\n\t* tree-ssa-sccvn.c (vn_nary_length_from_stmt): Handle BIT_FIELD_REF.\n\t(init_vn_nary_op_from_stmt): Likewise.\n\t* tree-ssa-pre.c (compute_avail): Use vn_nary_op_lookup_stmt.\n\t* tree-ssa-sccvn.h (sizeof_vn_nary_op): Avoid overflow.\n\nFrom-SVN: r192205", "tree": {"sha": "0366d9fd3496ec410bfcf8987b7f5b77736e7c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0366d9fd3496ec410bfcf8987b7f5b77736e7c41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91af9dc984aef60a44002758dd80a5e178ddec04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91af9dc984aef60a44002758dd80a5e178ddec04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91af9dc984aef60a44002758dd80a5e178ddec04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91af9dc984aef60a44002758dd80a5e178ddec04/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "585d0dc43c1323a1b1fde9de6f6ee95dfc065ff2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/585d0dc43c1323a1b1fde9de6f6ee95dfc065ff2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/585d0dc43c1323a1b1fde9de6f6ee95dfc065ff2"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "b9eb340befdf7c1b4a971e74d4363d64467a5397", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91af9dc984aef60a44002758dd80a5e178ddec04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91af9dc984aef60a44002758dd80a5e178ddec04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91af9dc984aef60a44002758dd80a5e178ddec04", "patch": "@@ -1,3 +1,11 @@\n+2012-10-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/54825\n+\t* tree-ssa-sccvn.c (vn_nary_length_from_stmt): Handle BIT_FIELD_REF.\n+\t(init_vn_nary_op_from_stmt): Likewise.\n+\t* tree-ssa-pre.c (compute_avail): Use vn_nary_op_lookup_stmt.\n+\t* tree-ssa-sccvn.h (sizeof_vn_nary_op): Avoid overflow.\n+\n 2012-10-08  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-pre.c (postorder_num): New global."}, {"sha": "fe9186cefa94bcdc80ff220923eed1d90a8768c9", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91af9dc984aef60a44002758dd80a5e178ddec04/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91af9dc984aef60a44002758dd80a5e178ddec04/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=91af9dc984aef60a44002758dd80a5e178ddec04", "patch": "@@ -3849,11 +3849,7 @@ compute_avail (void)\n \t\t\t  || code == VEC_COND_EXPR)\n \t\t\tcontinue;\n \n-\t\t      vn_nary_op_lookup_pieces (gimple_num_ops (stmt) - 1,\n-\t\t\t\t\t\tcode,\n-\t\t\t\t\t\tgimple_expr_type (stmt),\n-\t\t\t\t\t\tgimple_assign_rhs1_ptr (stmt),\n-\t\t\t\t\t\t&nary);\n+\t\t      vn_nary_op_lookup_stmt (stmt, &nary);\n \t\t      if (!nary)\n \t\t\tcontinue;\n "}, {"sha": "2391632364d9951cbe2c93096b1b93a22f3e195f", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91af9dc984aef60a44002758dd80a5e178ddec04/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91af9dc984aef60a44002758dd80a5e178ddec04/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=91af9dc984aef60a44002758dd80a5e178ddec04", "patch": "@@ -2194,6 +2194,9 @@ vn_nary_length_from_stmt (gimple stmt)\n     case VIEW_CONVERT_EXPR:\n       return 1;\n \n+    case BIT_FIELD_REF:\n+      return 3;\n+\n     case CONSTRUCTOR:\n       return CONSTRUCTOR_NELTS (gimple_assign_rhs1 (stmt));\n \n@@ -2220,13 +2223,21 @@ init_vn_nary_op_from_stmt (vn_nary_op_t vno, gimple stmt)\n       vno->op[0] = TREE_OPERAND (gimple_assign_rhs1 (stmt), 0);\n       break;\n \n+    case BIT_FIELD_REF:\n+      vno->length = 3;\n+      vno->op[0] = TREE_OPERAND (gimple_assign_rhs1 (stmt), 0);\n+      vno->op[1] = TREE_OPERAND (gimple_assign_rhs1 (stmt), 1);\n+      vno->op[2] = TREE_OPERAND (gimple_assign_rhs1 (stmt), 2);\n+      break;\n+\n     case CONSTRUCTOR:\n       vno->length = CONSTRUCTOR_NELTS (gimple_assign_rhs1 (stmt));\n       for (i = 0; i < vno->length; ++i)\n \tvno->op[i] = CONSTRUCTOR_ELT (gimple_assign_rhs1 (stmt), i)->value;\n       break;\n \n     default:\n+      gcc_checking_assert (!gimple_assign_single_p (stmt));\n       vno->length = gimple_num_ops (stmt) - 1;\n       for (i = 0; i < vno->length; ++i)\n \tvno->op[i] = gimple_op (stmt, i + 1);"}, {"sha": "cd418da8704242207879057cc5002a5aaedca89a", "filename": "gcc/tree-ssa-sccvn.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91af9dc984aef60a44002758dd80a5e178ddec04/gcc%2Ftree-ssa-sccvn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91af9dc984aef60a44002758dd80a5e178ddec04/gcc%2Ftree-ssa-sccvn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.h?ref=91af9dc984aef60a44002758dd80a5e178ddec04", "patch": "@@ -51,7 +51,7 @@ typedef const struct vn_nary_op_s *const_vn_nary_op_t;\n static inline size_t\n sizeof_vn_nary_op (unsigned int length)\n {\n-  return sizeof (struct vn_nary_op_s) + sizeof (tree) * (length - 1);\n+  return sizeof (struct vn_nary_op_s) + sizeof (tree) * length - sizeof (tree);\n }\n \n /* Phi nodes in the hashtable consist of their non-VN_TOP phi"}]}