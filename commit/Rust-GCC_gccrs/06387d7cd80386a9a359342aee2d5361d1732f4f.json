{"sha": "06387d7cd80386a9a359342aee2d5361d1732f4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYzODdkN2NkODAzODZhOWEzNTkzNDJhZWUyZDUzNjFkMTczMmY0Zg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-21T20:55:52Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-21T20:55:52Z"}, "message": "Clarify comment.\n\nFrom-SVN: r17176", "tree": {"sha": "e8f5ed1e0d5b3cd073bfed8415dbea706bf867ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8f5ed1e0d5b3cd073bfed8415dbea706bf867ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06387d7cd80386a9a359342aee2d5361d1732f4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06387d7cd80386a9a359342aee2d5361d1732f4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06387d7cd80386a9a359342aee2d5361d1732f4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06387d7cd80386a9a359342aee2d5361d1732f4f/comments", "author": null, "committer": null, "parents": [{"sha": "44201dba495937d57fac14288c0659e0a7816d62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44201dba495937d57fac14288c0659e0a7816d62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44201dba495937d57fac14288c0659e0a7816d62"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "cfe748e7fc2a3b5c439d4f6161e7429df4ced458", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06387d7cd80386a9a359342aee2d5361d1732f4f/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06387d7cd80386a9a359342aee2d5361d1732f4f/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=06387d7cd80386a9a359342aee2d5361d1732f4f", "patch": "@@ -1247,7 +1247,7 @@ emit_move_sequence (operands, mode, scratch_reg)\n   /* Simplify the source if we need to.\n      Note we do have to handle function labels here, even though we do\n      not consider them legitimate constants.  Loop optimizations can\n-     call the emit_move_xxx with one a function as a source.  */\n+     call the emit_move_xxx with one as a source.  */\n   if ((GET_CODE (operand1) != HIGH && immediate_operand (operand1, mode))\n       || function_label_operand (operand1, mode)\n       || (GET_CODE (operand1) == HIGH"}]}