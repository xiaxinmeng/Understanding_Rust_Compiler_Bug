{"sha": "7ead14d420b671bbc3e3eff8976fa80b09a7766b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VhZDE0ZDQyMGI2NzFiYmMzZTNlZmY4OTc2ZmE4MGIwOWE3NzY2Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-03-05T22:25:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-03-05T22:25:43Z"}, "message": "re PR rtl-optimization/56484 (ICE in assign_by_spills, at lra-assigns.c:1268)\n\n\tPR rtl-optimization/56484\n\t* ifcvt.c (noce_process_if_block): If else_bb is NULL, avoid extending\n\tlifetimes of hard registers on small register class machines.\n\nFrom-SVN: r196478", "tree": {"sha": "0859b99a62412f9160eef192b41558a061831d2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0859b99a62412f9160eef192b41558a061831d2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ead14d420b671bbc3e3eff8976fa80b09a7766b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ead14d420b671bbc3e3eff8976fa80b09a7766b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ead14d420b671bbc3e3eff8976fa80b09a7766b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ead14d420b671bbc3e3eff8976fa80b09a7766b/comments", "author": null, "committer": null, "parents": [{"sha": "ee61ea3844e8deee83cee22e037b15339f823171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee61ea3844e8deee83cee22e037b15339f823171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee61ea3844e8deee83cee22e037b15339f823171"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "f081ecd33534a9e57a25b7c411333ff9bf1b74c4", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ead14d420b671bbc3e3eff8976fa80b09a7766b/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ead14d420b671bbc3e3eff8976fa80b09a7766b/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=7ead14d420b671bbc3e3eff8976fa80b09a7766b", "patch": "@@ -2491,6 +2491,12 @@ noce_process_if_block (struct noce_if_info *if_info)\n \t  || ! noce_operand_ok (SET_SRC (set_b))\n \t  || reg_overlap_mentioned_p (x, SET_SRC (set_b))\n \t  || modified_between_p (SET_SRC (set_b), insn_b, jump)\n+\t  /* Avoid extending the lifetime of hard registers on small\n+\t     register class machines.  */\n+\t  || (REG_P (SET_SRC (set_b))\n+\t      && HARD_REGISTER_P (SET_SRC (set_b))\n+\t      && targetm.small_register_classes_for_mode_p\n+\t\t   (GET_MODE (SET_SRC (set_b))))\n \t  /* Likewise with X.  In particular this can happen when\n \t     noce_get_condition looks farther back in the instruction\n \t     stream than one might expect.  */"}, {"sha": "894862cd461c4ebf669b66b94697ed2e4f3021c3", "filename": "gcc/testsuite/gcc.c-torture/compile/pr56484.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ead14d420b671bbc3e3eff8976fa80b09a7766b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr56484.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ead14d420b671bbc3e3eff8976fa80b09a7766b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr56484.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr56484.c?ref=7ead14d420b671bbc3e3eff8976fa80b09a7766b", "patch": "@@ -0,0 +1,17 @@\n+/* PR rtl-optimization/56484 */\n+\n+unsigned char b[4096];\n+int bar (void);\n+\n+int\n+foo (void)\n+{\n+  int a = 0;\n+  while (bar ())\n+    {\n+      int c = bar ();\n+      a = a < 0 ? a : c;\n+      __builtin_memset (b, 0, sizeof b);\n+    }\n+  return a;\n+}"}]}