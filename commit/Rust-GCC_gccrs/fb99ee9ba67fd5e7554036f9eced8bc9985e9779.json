{"sha": "fb99ee9ba67fd5e7554036f9eced8bc9985e9779", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI5OWVlOWJhNjdmZDVlNzU1NDAzNmY5ZWNlZDhiYzk5ODVlOTc3OQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2012-05-01T16:34:26Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2012-05-01T16:34:26Z"}, "message": "ira.c (allocated_reg_info_size): New static variable.\n\n\t* ira.c (allocated_reg_info_size): New static variable.\n\t(expand_reg_info): Manage it. Call\n\tsetup_preferred_alternate_classes_for_new_pseudos.\n\t(ira): Don't do it here.  Remove local allocated_reg_info_size,\n\tset the global before calling find_moveable_pseudos.\n\t(find_moveable_pseudos): Call expand_reg_info rather than\n\tresize_reg_info.\n\nFrom-SVN: r187019", "tree": {"sha": "fac3de40d168869175a365542774f52d8b14f3d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fac3de40d168869175a365542774f52d8b14f3d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb99ee9ba67fd5e7554036f9eced8bc9985e9779", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb99ee9ba67fd5e7554036f9eced8bc9985e9779", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb99ee9ba67fd5e7554036f9eced8bc9985e9779", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb99ee9ba67fd5e7554036f9eced8bc9985e9779/comments", "author": null, "committer": null, "parents": [{"sha": "483104922ad93037381da8f37a8b2bb471799650", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/483104922ad93037381da8f37a8b2bb471799650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/483104922ad93037381da8f37a8b2bb471799650"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "d86d30e1e04bc8b235dad20419ca255a8ddb35dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb99ee9ba67fd5e7554036f9eced8bc9985e9779/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb99ee9ba67fd5e7554036f9eced8bc9985e9779/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb99ee9ba67fd5e7554036f9eced8bc9985e9779", "patch": "@@ -1,3 +1,13 @@\n+2012-05-01  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* ira.c (allocated_reg_info_size): New static variable.\n+\t(expand_reg_info): Manage it. Call\n+\tsetup_preferred_alternate_classes_for_new_pseudos.\n+\t(ira): Don't do it here.  Remove local allocated_reg_info_size,\n+\tset the global before calling find_moveable_pseudos.\n+\t(find_moveable_pseudos): Call expand_reg_info rather than\n+\tresize_reg_info.\n+\n 2012-05-01  Richard Henderson  <rth@redhat.com>\n \n \t* common.opt (fsync-libcalls): New."}, {"sha": "456c5f0bcb3bd6decf43aa664e3d8d49f2622b47", "filename": "gcc/ira.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb99ee9ba67fd5e7554036f9eced8bc9985e9779/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb99ee9ba67fd5e7554036f9eced8bc9985e9779/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=fb99ee9ba67fd5e7554036f9eced8bc9985e9779", "patch": "@@ -2238,18 +2238,22 @@ setup_preferred_alternate_classes_for_new_pseudos (int start)\n }\n \n \f\n+/* The number of entries allocated in teg_info.  */\n+static int allocated_reg_info_size;\n \n /* Regional allocation can create new pseudo-registers.  This function\n    expands some arrays for pseudo-registers.  */\n static void\n-expand_reg_info (int old_size)\n+expand_reg_info (void)\n {\n   int i;\n   int size = max_reg_num ();\n \n   resize_reg_info ();\n-  for (i = old_size; i < size; i++)\n+  for (i = allocated_reg_info_size; i < size; i++)\n     setup_reg_classes (i, GENERAL_REGS, ALL_REGS, GENERAL_REGS);\n+  setup_preferred_alternate_classes_for_new_pseudos (allocated_reg_info_size);\n+  allocated_reg_info_size = size;\n }\n \n /* Return TRUE if there is too high register pressure in the function.\n@@ -3984,7 +3988,7 @@ find_moveable_pseudos (void)\n   last_moveable_pseudo = max_reg_num ();\n \n   fix_reg_equiv_init ();\n-  resize_reg_info ();\n+  expand_reg_info ();\n   regstat_free_n_sets_and_refs ();\n   regstat_free_ri ();\n   regstat_init_n_sets_and_refs ();\n@@ -4044,7 +4048,6 @@ static int saved_flag_ira_share_spill_slots;\n static void\n ira (FILE *f)\n {\n-  int allocated_reg_info_size;\n   bool loops_p;\n   int max_regno_before_ira, ira_max_point_before_emit;\n   int rebuild_p;\n@@ -4121,9 +4124,10 @@ ira (FILE *f)\n \t}\n     }\n \n+  allocated_reg_info_size = max_reg_num ();\n   find_moveable_pseudos ();\n \n-  max_regno_before_ira = allocated_reg_info_size = max_reg_num ();\n+  max_regno_before_ira = max_reg_num ();\n   ira_setup_eliminable_regset ();\n \n   ira_overall_cost = ira_reg_cost = ira_mem_cost = 0;\n@@ -4169,10 +4173,7 @@ ira (FILE *f)\n \tira_initiate_assign ();\n       else\n \t{\n-\t  expand_reg_info (allocated_reg_info_size);\n-\t  setup_preferred_alternate_classes_for_new_pseudos\n-\t    (allocated_reg_info_size);\n-\t  allocated_reg_info_size = max_regno;\n+\t  expand_reg_info ();\n \n \t  if (internal_flag_ira_verbose > 0 && ira_dump_file != NULL)\n \t    fprintf (ira_dump_file, \"Flattening IR\\n\");"}]}