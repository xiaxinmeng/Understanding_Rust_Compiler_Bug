{"sha": "9f25a338f91f9c448d57681b6d17a91233222d43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYyNWEzMzhmOTFmOWM0NDhkNTc2ODFiNmQxN2E5MTIzMzIyMmQ0Mw==", "commit": {"author": {"name": "Trevor Saunders", "email": "tsaunders@mozilla.com", "date": "2014-08-07T20:52:50Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2014-08-07T20:52:50Z"}, "message": "remove pointer-set.[ch]\n\ngcc/\n\n\t* Makefile.in: Remove references to pointer-set.c and pointer-set.h.\n\t* alias.c, cfgexpand.c, cgraphbuild.c,\n\tconfig/aarch64/aarch64-builtins.c, config/aarch64/aarch64.c,\n\tconfig/alpha/alpha.c, config/darwin.c, config/i386/i386.c,\n\tconfig/i386/winnt.c, config/ia64/ia64.c, config/m32c/m32c.c,\n\tconfig/mep/mep.c, config/mips/mips.c, config/rs6000/rs6000.c,\n\tconfig/s390/s390.c, config/sh/sh.c, config/sparc/sparc.c,\n\tconfig/spu/spu.c, config/stormy16/stormy16.c, config/tilegx/tilegx.c,\n\tconfig/tilepro/tilepro.c, config/xtensa/xtensa.c, dominance.c,\n\tdse.c, except.c, gengtype.c, gimple-expr.c,\n\tgimple-ssa-strength-reduction.c, gimplify.c, ifcvt.c,\n\tipa-visibility.c, lto-streamer.h, omp-low.c, predict.c, stmt.c,\n\ttree-affine.c, tree-cfg.c, tree-eh.c, tree-inline.c, tree-nested.c,\n\ttree-scalar-evolution.c, tree-ssa-loop-im.c, tree-ssa-loop-niter.c,\n\ttree-ssa-phiopt.c, tree-ssa-structalias.c, tree-ssa-uninit.c,\n\ttree-ssa.c, tree.c, var-tracking.c, varpool.c: Remove includes of\n\tpointer-set.h.\n\t* pointer-set.c: Remove file.\n\t* pointer-set.h: Remove file.\n\ngcc/c-family/\n\n\t* c-gimplify.c, cilk.c: Remove includes of pointer-set.h.\n\ngcc/c/\n\n\t* c-typeck.c: Remove include of pointer-set.h.\n\ngcc/cp/\n\n\t* class.c, cp-gimplify.c, decl.c, decl2.c, error.c, method.c,\n\toptimize.c, pt.c, semantics.c: Remove includes of pointer-set.h.\n\nFrom-SVN: r213738", "tree": {"sha": "2f04d8ba00f9eb6f8c4049c37c92a052fba7d137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f04d8ba00f9eb6f8c4049c37c92a052fba7d137"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f25a338f91f9c448d57681b6d17a91233222d43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f25a338f91f9c448d57681b6d17a91233222d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f25a338f91f9c448d57681b6d17a91233222d43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f25a338f91f9c448d57681b6d17a91233222d43/comments", "author": null, "committer": null, "parents": [{"sha": "4e48c109686c38cc96415ac7200b269058e0326d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e48c109686c38cc96415ac7200b269058e0326d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e48c109686c38cc96415ac7200b269058e0326d"}], "stats": {"total": 441, "additions": 39, "deletions": 402}, "files": [{"sha": "8eba08d457f4e00ca8c22d9e778080f5421e7c70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -1,3 +1,25 @@\n+2014-08-07  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\t* Makefile.in: Remove references to pointer-set.c and pointer-set.h.\n+\t* alias.c, cfgexpand.c, cgraphbuild.c,\n+\tconfig/aarch64/aarch64-builtins.c, config/aarch64/aarch64.c,\n+\tconfig/alpha/alpha.c, config/darwin.c, config/i386/i386.c,\n+\tconfig/i386/winnt.c, config/ia64/ia64.c, config/m32c/m32c.c,\n+\tconfig/mep/mep.c, config/mips/mips.c, config/rs6000/rs6000.c,\n+\tconfig/s390/s390.c, config/sh/sh.c, config/sparc/sparc.c,\n+\tconfig/spu/spu.c, config/stormy16/stormy16.c, config/tilegx/tilegx.c,\n+\tconfig/tilepro/tilepro.c, config/xtensa/xtensa.c, dominance.c,\n+\tdse.c, except.c, gengtype.c, gimple-expr.c,\n+\tgimple-ssa-strength-reduction.c, gimplify.c, ifcvt.c,\n+\tipa-visibility.c, lto-streamer.h, omp-low.c, predict.c, stmt.c,\n+\ttree-affine.c, tree-cfg.c, tree-eh.c, tree-inline.c, tree-nested.c,\n+\ttree-scalar-evolution.c, tree-ssa-loop-im.c, tree-ssa-loop-niter.c,\n+\ttree-ssa-phiopt.c, tree-ssa-structalias.c, tree-ssa-uninit.c,\n+\ttree-ssa.c, tree.c, var-tracking.c, varpool.c: Remove includes of\n+\tpointer-set.h.\n+\t* pointer-set.c: Remove file.\n+\t* pointer-set.h: Remove file.\n+\n 2014-08-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm.md (*cmov<mode>): Set type attribute to fcsel."}, {"sha": "31c1f4d59b481d58d4a12de9eba2180ad6730005", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -892,7 +892,7 @@ TREE_H = tree.h $(TREE_CORE_H)  tree-check.h\n REGSET_H = regset.h $(BITMAP_H) hard-reg-set.h\n BASIC_BLOCK_H = basic-block.h $(PREDICT_H) $(VEC_H) $(FUNCTION_H) \\\n \tcfg-flags.def cfghooks.h\n-GIMPLE_H = gimple.h gimple.def gsstruct.def pointer-set.h $(VEC_H) \\\n+GIMPLE_H = gimple.h gimple.def gsstruct.def $(VEC_H) \\\n \t$(GGC_H) $(BASIC_BLOCK_H) $(TREE_H) tree-ssa-operands.h \\\n \ttree-ssa-alias.h $(INTERNAL_FN_H) $(HASH_TABLE_H) is-a.h\n GCOV_IO_H = gcov-io.h gcov-iov.h auto-host.h gcov-counter.def\n@@ -950,7 +950,7 @@ TREE_INLINE_H = tree-inline.h\n REAL_H = real.h $(MACHMODE_H)\n LTO_STREAMER_H = lto-streamer.h $(LINKER_PLUGIN_API_H) $(TARGET_H) \\\n \t\t$(CGRAPH_H) $(VEC_H) $(HASH_TABLE_H) $(TREE_H) $(GIMPLE_H) \\\n-\t\t$(GCOV_IO_H) $(DIAGNOSTIC_H) alloc-pool.h pointer-set.h\n+\t\t$(GCOV_IO_H) $(DIAGNOSTIC_H) alloc-pool.h\n IPA_PROP_H = ipa-prop.h $(TREE_H) $(VEC_H) $(CGRAPH_H) $(GIMPLE_H) alloc-pool.h\n BITMAP_H = bitmap.h $(HASHTAB_H) statistics.h\n GCC_PLUGIN_H = gcc-plugin.h highlev-plugin-common.h plugin.def \\\n@@ -1329,7 +1329,6 @@ OBJS = \\\n \topts-global.o \\\n \tpasses.o \\\n \tplugin.o \\\n-\tpointer-set.o \\\n \tpostreload-gcse.o \\\n \tpostreload.o \\\n \tpredict.o \\\n@@ -3140,7 +3139,7 @@ installdirs:\n \t$(mkinstalldirs) $(DESTDIR)$(man7dir)\n \n PLUGIN_HEADERS = $(TREE_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  toplev.h $(DIAGNOSTIC_CORE_H) $(BASIC_BLOCK_H) pointer-set.h $(HASH_TABLE_H) \\\n+  toplev.h $(DIAGNOSTIC_CORE_H) $(BASIC_BLOCK_H) $(HASH_TABLE_H) \\\n   tree-ssa-alias.h $(INTERNAL_FN_H) gimple-fold.h tree-eh.h gimple-expr.h \\\n   gimple.h is-a.h $(TREE_PASS_H) $(GCC_PLUGIN_H) \\\n   $(GGC_H) $(TREE_DUMP_H) $(PRETTY_PRINT_H) $(OPTS_H) $(PARAMS_H) \\"}, {"sha": "39df09b4e88853aa9da88262e58cbabdd3e9b9dc", "filename": "gcc/alias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -42,7 +42,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"df.h\"\n #include \"tree-ssa-alias.h\"\n-#include \"pointer-set.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\"\n #include \"is-a.h\""}, {"sha": "803eb7b401994fae7be36e6b97ff70e9ac41138d", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -1,3 +1,7 @@\n+2014-08-07  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\t* c-gimplify.c, cilk.c: Remove includes of pointer-set.h.\n+\n 2014-08-03  Marek Polacek  <polacek@redhat.com>\n \n \t* c-common.c (check_case_value):  Add location_t parameter.  Use it."}, {"sha": "8f7cf42a09136349cd22f38f62b8d38440f82107", "filename": "gcc/c-family/c-gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fc-family%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fc-family%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -46,7 +46,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"cilk.h\"\n #include \"c-ubsan.h\"\n-#include \"pointer-set.h\"\n \n /*  The gimplification pass converts the language-dependent trees\n     (ld-trees) emitted by the parser into language-independent trees"}, {"sha": "20b343214d4fff334e61866360aa1b25946da322", "filename": "gcc/c-family/cilk.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fc-family%2Fcilk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fc-family%2Fcilk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fcilk.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -27,7 +27,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"calls.h\"\n #include \"langhooks.h\"\n-#include \"pointer-set.h\"\n #include \"gimple-expr.h\"\n #include \"gimplify.h\"\n #include \"tree-iterator.h\""}, {"sha": "3dcd81f9c45b837b35754ef335b23d4c79546799", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -1,3 +1,7 @@\n+2014-08-07  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\t* c-typeck.c: Remove include of pointer-set.h.\n+\n 2014-08-07  Marek Polacek  <polacek@redhat.com>\n \n \t* c-typeck.c (pointer_diff): Remove P - (P + CST) optimization."}, {"sha": "f8a231617aec167561bcec5b435e4a8bf9fcab51", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -40,7 +40,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"tree-iterator.h\"\n #include \"bitmap.h\"\n-#include \"pointer-set.h\"\n #include \"basic-block.h\"\n #include \"gimple-expr.h\"\n #include \"gimplify.h\""}, {"sha": "ea53d2a3bdf0291a66b0a67132c3bccc3406ca5f", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"bitmap.h\"\n #include \"hash-set.h\"\n-#include \"pointer-set.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"tree-eh.h\""}, {"sha": "b10061bc8f43953da8a2931982d11bbfea3992a4", "filename": "gcc/cgraphbuild.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcgraphbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcgraphbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"pointer-set.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "5217f4a5f39224dbf8029542ad33790ef2c191be", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -33,7 +33,6 @@\n #include \"langhooks.h\"\n #include \"diagnostic-core.h\"\n #include \"optabs.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"ggc.h\""}, {"sha": "e7946fc0b70ced70a4e98caa0a33121f29242aad", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -46,7 +46,6 @@\n #include \"recog.h\"\n #include \"langhooks.h\"\n #include \"diagnostic-core.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"basic-block.h\""}, {"sha": "59bcdd4356757bdf4c8704d15a7dc0431cad19ee", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -51,7 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"debug.h\"\n #include \"langhooks.h\"\n #include \"splay-tree.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"basic-block.h\""}, {"sha": "60c8d1ef37c2141029255db14f24d7380e3e7b9d", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -48,7 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"df.h\"\n #include \"debug.h\"\n #include \"obstack.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"basic-block.h\""}, {"sha": "6b43fd43d7302b0aab9fa04d687a1ba7572ce695", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -52,7 +52,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"reload.h\"\n #include \"cgraph.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"basic-block.h\""}, {"sha": "a9ca2fd2aca10fef5e5c24b0f1f5f005f1d79908", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"target.h\"\n #include \"except.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"basic-block.h\""}, {"sha": "cb840fd8a9bfb7510ca73c5042f1b097c43d4f97", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -53,7 +53,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"hash-table.h\"\n #include \"langhooks.h\"\n-#include \"pointer-set.h\"\n #include \"vec.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\""}, {"sha": "23fd1cc5935a005b53ba270294e13914ceee9cd1", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -48,7 +48,6 @@\n #include \"target-def.h\"\n #include \"tm_p.h\"\n #include \"langhooks.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"basic-block.h\""}, {"sha": "dadd92bab211af41633875f57fbbb52248a40497", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -51,7 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target-def.h\"\n #include \"langhooks.h\"\n #include \"df.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"basic-block.h\""}, {"sha": "d2c9b4c78a2032b7fecb1639e27f89d04913c1be", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -54,7 +54,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"common/common-target.h\"\n #include \"langhooks.h\"\n #include \"sched-int.h\"\n-#include \"pointer-set.h\"\n #include \"vec.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\""}, {"sha": "4b19a666eaa68c0e52f992e98a8e2298e9834828", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -56,7 +56,6 @@\n #include \"reload.h\"\n #include \"cfgloop.h\"\n #include \"sched-int.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"basic-block.h\""}, {"sha": "a2617a86e6455e2d1bb1f11e6a795a20bca78fe0", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -52,7 +52,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"debug.h\"\n #include \"langhooks.h\"\n #include \"optabs.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"basic-block.h\""}, {"sha": "c74200f6bae5dbb765de0bf1dff306e06c208975", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -56,7 +56,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"sched-int.h\"\n #include \"params.h\"\n #include \"ggc.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "595939d5a8e844152563d6a39987c1b3f45ebbac", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -50,7 +50,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"target-def.h\"\n #include \"common/common-target.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"basic-block.h\""}, {"sha": "60d537ff64d044356b7f5969c1f04d505c9c1152", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -49,7 +49,6 @@\n #include \"sched-int.h\"\n #include \"params.h\"\n #include \"machmode.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "df207c03e7c686500f97bbc30834094ae768e6fb", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -47,7 +47,6 @@\n #include \"target-def.h\"\n #include \"tm_p.h\"\n #include \"langhooks.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"ggc.h\""}, {"sha": "69c9be4f9b6e363c44c53835f5be4687be06c46e", "filename": "gcc/config/tilegx/tilegx.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -40,7 +40,6 @@\n #include \"dwarf2.h\"\n #include \"timevar.h\"\n #include \"tree.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"ggc.h\""}, {"sha": "d36c06599694ff83c3a01bf6fdbc945f357b3a09", "filename": "gcc/config/tilepro/tilepro.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Ftilepro.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -41,7 +41,6 @@\n #include \"dwarf2.h\"\n #include \"timevar.h\"\n #include \"tree.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"ggc.h\""}, {"sha": "173b27b95881d7aa19f3d94ced3d0559ab648d09", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -50,7 +50,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"target-def.h\"\n #include \"langhooks.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "23afac42f14af5e16dced3b4ba5a5b13c0c401fe", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -1,3 +1,8 @@\n+2014-08-07  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\t* class.c, cp-gimplify.c, decl.c, decl2.c, error.c, method.c,\n+\toptimize.c, pt.c, semantics.c: Remove includes of pointer-set.h.\n+\n 2014-08-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51312"}, {"sha": "7f6952ae9083d27d826f680d05089914db22cc46", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"attribs.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\""}, {"sha": "e2bf5470799428f739d283e9bd3d6e75da5c81a7", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\"\n #include \"tree-iterator.h\"\n-#include \"pointer-set.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "79e7362497358bf32890aaa9f912186e7f3b7285", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -55,7 +55,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"debug.h\"\n #include \"timevar.h\"\n-#include \"pointer-set.h\"\n #include \"splay-tree.h\"\n #include \"plugin.h\"\n #include \"cgraph.h\""}, {"sha": "1740a2e7340acf474e8c25c32decb0ebc24c899a", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"attribs.h\"\n #include \"stor-layout.h\"\n #include \"calls.h\"\n-#include \"pointer-set.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"decl.h\""}, {"sha": "2ce6490681bb1be91b18e23b11483734822c8aec", "filename": "gcc/cp/error.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intl.h\"\n #include \"cxx-pretty-print.h\"\n #include \"tree-pretty-print.h\"\n-#include \"pointer-set.h\"\n #include \"c-family/c-objc.h\"\n #include \"ubsan.h\"\n "}, {"sha": "d0e010500f83b088a4c48d4655a9e5e55da25f3d", "filename": "gcc/cp/method.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"common/common-target.h\"\n #include \"diagnostic.h\"\n #include \"cgraph.h\"\n-#include \"pointer-set.h\"\n \n /* Various flags to control the mangling process.  */\n "}, {"sha": "f9a236e84277bb3666f25b7da80fac5e3323c77a", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"langhooks.h\"\n #include \"diagnostic-core.h\"\n #include \"dumpfile.h\"\n-#include \"pointer-set.h\"\n #include \"tree-iterator.h\"\n #include \"cgraph.h\"\n "}, {"sha": "30d8950e204eb9aaf05e680cd572cf4ff222bf3b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"attribs.h\"\n #include \"stor-layout.h\"\n #include \"intl.h\"\n-#include \"pointer-set.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"c-family/c-common.h\""}, {"sha": "14bf82d6f0a072413f332059df13b03d06839c23", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -44,7 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"tree-iterator.h\"\n #include \"target.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"gimplify.h\"\n #include \"bitmap.h\""}, {"sha": "c8b47a3cf3e0151a8437b9fd1798dbb0de30bae5", "filename": "gcc/dominance.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fdominance.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fdominance.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdominance.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -44,7 +44,6 @@\n #include \"et-forest.h\"\n #include \"timevar.h\"\n #include \"hash-map.h\"\n-#include \"pointer-set.h\"\n #include \"graphds.h\"\n #include \"bitmap.h\"\n "}, {"sha": "8c3d84143e45c84791e2b9f8626d65c481eef220", "filename": "gcc/dse.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -47,7 +47,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dbgcnt.h\"\n #include \"target.h\"\n #include \"params.h\"\n-#include \"pointer-set.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\""}, {"sha": "58ee4bb505d8b120688e95f607a77a748a965b61", "filename": "gcc/except.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -139,7 +139,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"tree-pretty-print.h\"\n #include \"tree-pass.h\"\n-#include \"pointer-set.h\"\n #include \"cfgloop.h\"\n #include \"builtins.h\"\n "}, {"sha": "c1f9e693c22f9d9d1b200942dd99ea5aff53f0f7", "filename": "gcc/gengtype.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -1825,7 +1825,7 @@ open_base_files (void)\n       \"tree.h\", \"rtl.h\", \"wide-int.h\", \"function.h\", \"insn-config.h\", \"expr.h\",\n       \"hard-reg-set.h\", \"basic-block.h\", \"cselib.h\", \"insn-addr.h\",\n       \"optabs.h\", \"libfuncs.h\", \"debug.h\", \"ggc.h\", \"cgraph.h\",\n-      \"pointer-set.h\", \"hash-table.h\", \"vec.h\", \"ggc.h\", \"basic-block.h\",\n+      \"hash-table.h\", \"vec.h\", \"ggc.h\", \"basic-block.h\",\n       \"tree-ssa-alias.h\", \"internal-fn.h\", \"gimple-fold.h\", \"tree-eh.h\",\n       \"gimple-expr.h\", \"is-a.h\",\n       \"gimple.h\", \"gimple-iterator.h\", \"gimple-ssa.h\", \"tree-cfg.h\","}, {"sha": "0e8a01ac87722dcac34ad61504b0e8a93b9d0212", "filename": "gcc/gimple-expr.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fgimple-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fgimple-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"pointer-set.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "6bf54d64605bd5f0493101aae02516a87378abba", "filename": "gcc/gimple-ssa-strength-reduction.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fgimple-ssa-strength-reduction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fgimple-ssa-strength-reduction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-strength-reduction.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -37,7 +37,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tree.h\"\n-#include \"pointer-set.h\"\n #include \"hash-map.h\"\n #include \"hash-table.h\"\n #include \"basic-block.h\""}, {"sha": "279158d4d4a7e79c8c856a0a2de9368dca7ec0eb", "filename": "gcc/gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"expr.h\"\n #include \"hash-set.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\""}, {"sha": "754a707cd3501f30a331bbd992f7c351e2f42cdb", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -41,7 +41,6 @@\n #include \"tree-pass.h\"\n #include \"df.h\"\n #include \"vec.h\"\n-#include \"pointer-set.h\"\n #include \"dbgcnt.h\"\n \n #ifndef HAVE_conditional_move"}, {"sha": "110d22b43c0bd5cb3257c7ffade9d2223b688d56", "filename": "gcc/ipa-visibility.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fipa-visibility.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fipa-visibility.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-visibility.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -79,7 +79,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"cgraph.h\"\n #include \"tree-pass.h\"\n-#include \"pointer-set.h\"\n #include \"calls.h\"\n #include \"gimple-expr.h\"\n #include \"varasm.h\""}, {"sha": "9f89a6c7ed6fd678240ea3a3de6a87c9dc4efae9", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -32,7 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"alloc-pool.h\"\n #include \"gcov-io.h\"\n #include \"diagnostic.h\"\n-#include \"pointer-set.h\"\n \n /* Define when debugging the LTO streamer.  This causes the writer\n    to output the numeric value for the memory address of the tree node"}, {"sha": "7f268650e10e57d80c37d5ae15f8249a76e3e744", "filename": "gcc/omp-low.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"stringpool.h\"\n #include \"stor-layout.h\"\n #include \"rtl.h\"\n-#include \"pointer-set.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "8b6a73257d6caa7564243647b037e4150028562c", "filename": "gcc/pointer-set.c", "status": "removed", "additions": 0, "deletions": 271, "changes": 271, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e48c109686c38cc96415ac7200b269058e0326d/gcc%2Fpointer-set.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e48c109686c38cc96415ac7200b269058e0326d/gcc%2Fpointer-set.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpointer-set.c?ref=4e48c109686c38cc96415ac7200b269058e0326d", "patch": "@@ -1,271 +0,0 @@\n-/* Set operations on pointers\n-   Copyright (C) 2004-2014 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"pointer-set.h\"\n-\n-\n-/* Use the multiplicative method, as described in Knuth 6.4, to obtain\n-   a hash code for P in the range [0, MAX).  MAX == 2^LOGMAX.\n-\n-   Summary of this method: Multiply p by some number A that's\n-   relatively prime to 2^sizeof(size_t).  The result is two words.\n-   Discard the most significant word, and return the most significant\n-   N bits of the least significant word.  As suggested by Knuth, our\n-   choice for A is the integer part of (ULONG_MAX + 1.0) / phi, where phi\n-   is the golden ratio.\n-\n-   We don't need to do anything special for full-width multiplication\n-   because we're only interested in the least significant word of the\n-   product, and unsigned arithmetic in C is modulo the word size.  */\n-\n-static inline size_t\n-hash1 (const void *p, unsigned long max, unsigned long logmax)\n-{\n-#if HOST_BITS_PER_LONG == 32\n-  const unsigned long A = 0x9e3779b9u;\n-#elif HOST_BITS_PER_LONG == 64\n-  const unsigned long A = 0x9e3779b97f4a7c16ul;\n-#else\n-  const unsigned long A\n-    = (ULONG_MAX + 1.0L) * 0.6180339887498948482045868343656381177203L;\n-#endif\n-  const unsigned long shift = HOST_BITS_PER_LONG - logmax;\n-\n-  return ((A * (uintptr_t) p) >> shift) & (max - 1);\n-}\n-\n-\n-/* Allocate an empty pointer set.  */\n-struct pointer_set_t *\n-pointer_set_create (void)\n-{\n-  struct pointer_set_t *result = XNEW (struct pointer_set_t);\n-\n-  result->n_elements = 0;\n-  result->log_slots = 8;\n-  result->n_slots = (size_t) 1 << result->log_slots;\n-\n-  result->slots = XCNEWVEC (const void *, result->n_slots);\n-  return result;\n-}\n-\n-/* Reclaims all memory associated with PSET.  */\n-void\n-pointer_set_destroy (struct pointer_set_t *pset)\n-{\n-  XDELETEVEC (pset->slots);\n-  XDELETE (pset);\n-}\n-\n-\n-/* Lookup the slot for the pointer P and return true if it exists,\n-   otherwise return false in which case *IX points to the slot that\n-   would be used on insertion.  */\n-\n-bool\n-pointer_set_lookup (const pointer_set_t *pset, const void *p, size_t *ix)\n-{\n-  size_t n = hash1 (p, pset->n_slots, pset->log_slots);\n-\n-  while (true)\n-    {\n-      if (pset->slots[n] == p)\n-\t{\n-\t  *ix = n;\n-\t  return true;\n-\t}\n-      else if (pset->slots[n] == 0)\n-\t{\n-\t  *ix = n;\n-\t  return false;\n-\t}\n-      else\n-       {\n-         ++n;\n-         if (n == pset->n_slots)\n-           n = 0;\n-       }\n-    }\n-}\n-\n-/* Returns nonzero if PSET contains P.  P must be nonnull.\n-\n-   Collisions are resolved by linear probing.  */\n-int\n-pointer_set_contains (const struct pointer_set_t *pset, const void *p)\n-{\n-  size_t n;\n-  return pointer_set_lookup (pset, p, &n);\n-}\n-\n-/* Inserts P into PSET if it wasn't already there.  Returns nonzero\n-   if it was already there. P must be nonnull.  */\n-int\n-pointer_set_insert (struct pointer_set_t *pset, const void *p)\n-{\n-  size_t n;\n-\n-  /* For simplicity, expand the set even if P is already there.  This can be\n-     superfluous but can happen at most once.  */\n-  if (pset->n_elements > pset->n_slots / 4)\n-    {\n-      size_t old_n_slots = pset->n_slots;\n-      const void **old_slots = pset->slots;\n-      pset->log_slots = pset->log_slots + 1;\n-      pset->n_slots = pset->n_slots * 2;\n-      pset->slots = XCNEWVEC (const void *, pset->n_slots);\n-      size_t i;\n-\n-      for (i = 0; i < old_n_slots; ++i)\n-        {\n-\t  const void *value = old_slots[i];\n-\t  pointer_set_lookup (pset, value, &n);\n-\t  pset->slots[n] = value;\n-\t}\n-\n-      XDELETEVEC (old_slots);\n-    }\n-\n-  if (pointer_set_lookup (pset, p, &n))\n-    return 1;\n-\n-  pset->slots[n] = p;\n-  ++pset->n_elements;\n-  return 0;\n-}\n-\n-/* Pass each pointer in PSET to the function in FN, together with the fixed\n-   parameter DATA.  If FN returns false, the iteration stops.  */\n-\n-void pointer_set_traverse (const struct pointer_set_t *pset,\n-\t\t\t   bool (*fn) (const void *, void *), void *data)\n-{\n-  size_t i;\n-  for (i = 0; i < pset->n_slots; ++i)\n-    if (pset->slots[i] && !fn (pset->slots[i], data))\n-      break;\n-}\n-\n-\f\n-/* A pointer map is represented the same way as a pointer_set, so\n-   the hash code is based on the address of the key, rather than\n-   its contents.  Null keys are a reserved value.  Deletion is not\n-   supported (yet).  There is no mechanism for user control of hash\n-   function, equality comparison, initial size, or resizing policy.  */\n-\n-struct pointer_map_t\n-{\n-  pointer_set_t pset;\n-  void **values;\n-};\n-\n-/* Allocate an empty pointer map.  */\n-struct pointer_map_t *\n-pointer_map_create (void)\n-{\n-  struct pointer_map_t *result = XNEW (struct pointer_map_t);\n-\n-  result->pset.n_elements = 0;\n-  result->pset.log_slots = 8;\n-  result->pset.n_slots = (size_t) 1 << result->pset.log_slots;\n-\n-  result->pset.slots = XCNEWVEC (const void *, result->pset.n_slots);\n-  result->values = XCNEWVEC (void *, result->pset.n_slots);\n-  return result;\n-}\n-\n-/* Reclaims all memory associated with PMAP.  */\n-void pointer_map_destroy (struct pointer_map_t *pmap)\n-{\n-  XDELETEVEC (pmap->pset.slots);\n-  XDELETEVEC (pmap->values);\n-  XDELETE (pmap);\n-}\n-\n-/* Returns a pointer to the value to which P maps, if PMAP contains P.  P\n-   must be nonnull.  Return NULL if PMAP does not contain P.\n-\n-   Collisions are resolved by linear probing.  */\n-void **\n-pointer_map_contains (const struct pointer_map_t *pmap, const void *p)\n-{\n-  size_t n;\n-  if (pointer_set_lookup (&pmap->pset, p, &n))\n-    return &pmap->values[n];\n-  else\n-    return NULL;\n-}\n-\n-/* Inserts P into PMAP if it wasn't already there.  Returns a pointer\n-   to the value.  P must be nonnull.  */\n-void **\n-pointer_map_insert (struct pointer_map_t *pmap, const void *p)\n-{\n-  size_t n;\n-\n-  /* For simplicity, expand the map even if P is already there.  This can be\n-     superfluous but can happen at most once.  */\n-  if (pmap->pset.n_elements > pmap->pset.n_slots / 4)\n-    {\n-      size_t old_n_slots = pmap->pset.n_slots;\n-      const void **old_keys = pmap->pset.slots;\n-      void **old_values = pmap->values;\n-      pmap->pset.log_slots = pmap->pset.log_slots + 1;\n-      pmap->pset.n_slots = pmap->pset.n_slots * 2;\n-      pmap->pset.slots = XCNEWVEC (const void *, pmap->pset.n_slots);\n-      pmap->values = XCNEWVEC (void *, pmap->pset.n_slots);\n-      size_t i;\n-\n-      for (i = 0; i < old_n_slots; ++i)\n-\tif (old_keys[i])\n-\t  {\n-\t    const void *key = old_keys[i];\n-\t    pointer_set_lookup (&pmap->pset, key, &n);\n-\t    pmap->pset.slots[n] = key;\n-\t    pmap->values[n] = old_values[i];\n-\t  }\n-\n-      XDELETEVEC (old_keys);\n-      XDELETEVEC (old_values);\n-    }\n-\n-  if (!pointer_set_lookup (&pmap->pset, p, &n))\n-    {\n-      ++pmap->pset.n_elements;\n-      pmap->pset.slots[n] = p;\n-    }\n-\n-  return &pmap->values[n];\n-}\n-\n-/* Pass each pointer in PMAP to the function in FN, together with the pointer\n-   to the value and the fixed parameter DATA.  If FN returns false, the\n-   iteration stops.  */\n-\n-void pointer_map_traverse (const struct pointer_map_t *pmap,\n-\t\t\t   bool (*fn) (const void *, void **, void *), void *data)\n-{\n-  size_t i;\n-  for (i = 0; i < pmap->pset.n_slots; ++i)\n-    if (pmap->pset.slots[i]\n-\t&& !fn (pmap->pset.slots[i], &pmap->values[i], data))\n-      break;\n-}"}, {"sha": "fc5921218721f899edeb7bb32cd3c1b79f316e99", "filename": "gcc/pointer-set.h", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e48c109686c38cc96415ac7200b269058e0326d/gcc%2Fpointer-set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e48c109686c38cc96415ac7200b269058e0326d/gcc%2Fpointer-set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpointer-set.h?ref=4e48c109686c38cc96415ac7200b269058e0326d", "patch": "@@ -1,59 +0,0 @@\n-/* Set operations on pointers\n-   Copyright (C) 2004-2014 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#ifndef POINTER_SET_H\n-#define POINTER_SET_H\n-\n-\n-/* A pointer set is represented as a simple open-addressing hash\n-   table.  Simplifications: The hash code is based on the value of the\n-   pointer, not what it points to.  The number of buckets is always a\n-   power of 2.  Null pointers are a reserved value.  Deletion is not\n-   supported (yet).  There is no mechanism for user control of hash\n-   function, equality comparison, initial size, or resizing policy.  */\n-\n-struct pointer_set_t\n-{\n-  size_t log_slots;\n-  size_t n_slots;\t\t/* n_slots = 2^log_slots */\n-  size_t n_elements;\n-  const void **slots;\n-};\n-\n-struct pointer_set_t *pointer_set_create (void);\n-void pointer_set_destroy (struct pointer_set_t *pset);\n-int pointer_set_contains (const struct pointer_set_t *pset, const void *p);\n-int pointer_set_insert (struct pointer_set_t *pset, const void *p);\n-void pointer_set_traverse (const struct pointer_set_t *,\n-\t\t\t   bool (*) (const void *, void *),\n-\t\t\t   void *);\n-bool pointer_set_lookup (const pointer_set_t *, const void *, size_t *);\n-\n-\n-struct pointer_map_t;\n-pointer_map_t *pointer_map_create (void);\n-void pointer_map_destroy (pointer_map_t *pmap);\n-\n-void **pointer_map_contains (const pointer_map_t *pmap, const void *p);\n-void **pointer_map_insert (pointer_map_t *pmap, const void *p);\n-void pointer_map_traverse (const pointer_map_t *,\n-\t\t\t   bool (*) (const void *, void **, void *), void *);\n-\n-\n-#endif  /* POINTER_SET_H  */"}, {"sha": "835c6181ffc734cc0cb6258e8454445ff4506416", "filename": "gcc/predict.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -51,7 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n #include \"target.h\"\n #include \"cfgloop.h\"\n-#include \"pointer-set.h\"\n #include \"hash-map.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "8e6d3a5fd686b2243f56dd01203bb8c5d03f1c56", "filename": "gcc/stmt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -48,7 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"optabs.h\"\n #include \"target.h\"\n #include \"hash-set.h\"\n-#include \"pointer-set.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "cfddada9e53f4bec86740529eae59bd294780a86", "filename": "gcc/testsuite/g++.dg/plugin/selfassign.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fselfassign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fselfassign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fplugin%2Fselfassign.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -11,7 +11,6 @@\n #include \"stringpool.h\"\n #include \"toplev.h\"\n #include \"basic-block.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"ggc.h\""}, {"sha": "1b4f7cc26fc0f21c442de09345f42e1ee5b0918c", "filename": "gcc/testsuite/gcc.dg/plugin/finish_unit_plugin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Ffinish_unit_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Ffinish_unit_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Ffinish_unit_plugin.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -9,7 +9,6 @@\n #include \"tree.h\"\n #include \"toplev.h\"\n #include \"basic-block.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"ggc.h\""}, {"sha": "65d848e9740335810b71595578e403085b214023", "filename": "gcc/testsuite/gcc.dg/plugin/ggcplug.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fggcplug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fggcplug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fggcplug.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -8,7 +8,6 @@\n #include \"tree.h\"\n #include \"toplev.h\"\n #include \"basic-block.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"ggc.h\""}, {"sha": "bd1c0f0e57948e995f1b63d89be12a3512701926", "filename": "gcc/testsuite/gcc.dg/plugin/one_time_plugin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fone_time_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fone_time_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fone_time_plugin.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -6,7 +6,6 @@\n #include \"tree.h\"\n #include \"tm.h\"\n #include \"toplev.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"ggc.h\""}, {"sha": "80c59bb344a91c57b4da8ef4ff13b66b4eeb6d26", "filename": "gcc/testsuite/gcc.dg/plugin/selfassign.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fselfassign.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -11,7 +11,6 @@\n #include \"stringpool.h\"\n #include \"toplev.h\"\n #include \"basic-block.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"ggc.h\""}, {"sha": "b98cf55eddd4bce6844d147eb8c315111cc17839", "filename": "gcc/testsuite/gcc.dg/plugin/start_unit_plugin.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit_plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit_plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fstart_unit_plugin.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -14,7 +14,6 @@\n #include \"stringpool.h\"\n #include \"toplev.h\"\n #include \"basic-block.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"vec.h\"\n #include \"ggc.h\""}, {"sha": "18b44c15ed3495430500a78543cbf96bea603754", "filename": "gcc/tree-affine.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-affine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-affine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-affine.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -23,7 +23,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"expr.h\"\n #include \"tree-pretty-print.h\"\n-#include \"pointer-set.h\"\n #include \"tree-affine.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\""}, {"sha": "9d1de01021cfda296c3fe53c9212c3aa6bd627c5", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -33,7 +33,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"function.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"pointer-set.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-fold.h\""}, {"sha": "6c6faf303644cef8cc1962a77250d01241aadbf4", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function.h\"\n #include \"except.h\"\n #include \"hash-set.h\"\n-#include \"pointer-set.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "b6ecaa4b25a9a7f907ace67332ae6b1540189c4c", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -36,7 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"tree-iterator.h\"\n #include \"intl.h\"\n-#include \"pointer-set.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-fold.h\""}, {"sha": "07d6c79a271a74273c6c5f70785b80af04d8e70d", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -28,7 +28,6 @@\n #include \"function.h\"\n #include \"tree-dump.h\"\n #include \"tree-inline.h\"\n-#include \"pointer-set.h\"\n #include \"basic-block.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "248bb8db069150c13f160a6d193ad74cdabd4e2d", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -280,7 +280,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa.h\"\n #include \"cfgloop.h\"\n #include \"tree-chrec.h\"\n-#include \"pointer-set.h\"\n #include \"tree-affine.h\"\n #include \"tree-scalar-evolution.h\"\n #include \"dumpfile.h\""}, {"sha": "a3ebe729a6adfdeb0b3dab74781a3f54cc800e88", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -25,7 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"pointer-set.h\"\n #include \"hash-map.h\"\n #include \"hash-table.h\"\n #include \"tree-ssa-alias.h\""}, {"sha": "d4d3e539771d83bd7dd8eb9014cff1d019c7dbdd", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -29,7 +29,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-pretty-print.h\"\n #include \"intl.h\"\n #include \"hash-set.h\"\n-#include \"pointer-set.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\""}, {"sha": "f62010fd2d971e4b1e1a732a92f43fbecdd774c7", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -28,7 +28,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"basic-block.h\"\n #include \"hash-set.h\"\n-#include \"pointer-set.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\""}, {"sha": "3f18d82da0e30cca3114c8ed69da12d5a34f0bff", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -30,7 +30,6 @@\n #include \"tree.h\"\n #include \"stor-layout.h\"\n #include \"stmt.h\"\n-#include \"pointer-set.h\"\n #include \"hash-table.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\""}, {"sha": "3b38fd480d32f143befdacc935b8a86b04fda1f0", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-pretty-print.h\"\n #include \"bitmap.h\"\n #include \"hash-set.h\"\n-#include \"pointer-set.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\""}, {"sha": "b6b371801c53c551c44d2fdd37a70c1ae99fd458", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -30,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"function.h\"\n #include \"gimple-pretty-print.h\"\n-#include \"pointer-set.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-fold.h\""}, {"sha": "49cb5c03a31766735a7c312d6b666faf8c27b698", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -52,7 +52,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-iterator.h\"\n #include \"basic-block.h\"\n #include \"bitmap.h\"\n-#include \"pointer-set.h\"\n #include \"tree-ssa-alias.h\"\n #include \"internal-fn.h\"\n #include \"gimple-expr.h\""}, {"sha": "4f4780824aaee8cc8baeedabc7c6c4566a3f1cd5", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -93,7 +93,6 @@\n #include \"tree.h\"\n #include \"varasm.h\"\n #include \"stor-layout.h\"\n-#include \"pointer-set.h\"\n #include \"hash-map.h\"\n #include \"hash-table.h\"\n #include \"basic-block.h\""}, {"sha": "b5fe71ee1e93c586264cce4175d6a2cdc6e86bc4", "filename": "gcc/varpool.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f25a338f91f9c448d57681b6d17a91233222d43/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=9f25a338f91f9c448d57681b6d17a91233222d43", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"gimple-expr.h\"\n #include \"flags.h\"\n-#include \"pointer-set.h\"\n #include \"tree-ssa-alias.h\"\n #include \"gimple.h\"\n #include \"lto-streamer.h\""}]}