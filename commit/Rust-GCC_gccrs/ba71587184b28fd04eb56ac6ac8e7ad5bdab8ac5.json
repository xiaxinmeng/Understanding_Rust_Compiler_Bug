{"sha": "ba71587184b28fd04eb56ac6ac8e7ad5bdab8ac5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE3MTU4NzE4NGIyOGZkMDRlYjU2YWM2YWM4ZTdhZDViZGFiOGFjNQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2021-03-23T23:03:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-18T08:36:54Z"}, "message": "[Ada] Additional error checking on index constraints with fixed-lower-bound ranges\n\ngcc/ada/\n\n\t* sem_ch3.adb (Constrain_Array): Add error checking for\n\tfixed-lower-bound and constrained index ranges applied\n\tinappropriately on subtypes of unconstrained and\n\tfixed-lower-bound array types.\n\t(Constrain_Index): Correct and refine comment related to\n\tfixed-lower-bound index ranges.", "tree": {"sha": "ba3a7db27b41fb8c13fff4cca409db5c88802d30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba3a7db27b41fb8c13fff4cca409db5c88802d30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba71587184b28fd04eb56ac6ac8e7ad5bdab8ac5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba71587184b28fd04eb56ac6ac8e7ad5bdab8ac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba71587184b28fd04eb56ac6ac8e7ad5bdab8ac5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba71587184b28fd04eb56ac6ac8e7ad5bdab8ac5/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "161e220201436a641df5f5d86fdbaebb599302fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/161e220201436a641df5f5d86fdbaebb599302fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/161e220201436a641df5f5d86fdbaebb599302fc"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "4982fcd4721f625ea6b1d8cb122155259d943b37", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 37, "deletions": 5, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba71587184b28fd04eb56ac6ac8e7ad5bdab8ac5/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba71587184b28fd04eb56ac6ac8e7ad5bdab8ac5/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ba71587184b28fd04eb56ac6ac8e7ad5bdab8ac5", "patch": "@@ -13373,8 +13373,40 @@ package body Sem_Ch3 is\n                --  entity will need to be marked as being a fixed-lower-bound\n                --  array subtype.\n \n-               if Is_Fixed_Lower_Bound_Index_Subtype (Etype (S)) then\n-                  Is_FLB_Array_Subtype := True;\n+               if S = First (Constraints (C)) then\n+                  Is_FLB_Array_Subtype :=\n+                    Is_Fixed_Lower_Bound_Index_Subtype (Etype (S));\n+\n+                  --  If the parent subtype (or should this be Etype of that?)\n+                  --  is an FLB array subtype, we flag an error, because we\n+                  --  don't currently allow subtypes of such subtypes to\n+                  --  specify a fixed lower bound for any of their indexes,\n+                  --  even if the index of the parent subtype is a \"range <>\"\n+                  --  index.\n+\n+                  if Is_FLB_Array_Subtype\n+                    and then Is_Fixed_Lower_Bound_Array_Subtype (T)\n+                  then\n+                     Error_Msg_NE\n+                       (\"index with fixed lower bound not allowed for subtype \"\n+                          & \"of fixed-lower-bound }\", S, T);\n+\n+                     Is_FLB_Array_Subtype := False;\n+                  end if;\n+\n+               elsif Is_FLB_Array_Subtype\n+                 and then not Is_Fixed_Lower_Bound_Index_Subtype (Etype (S))\n+               then\n+                  Error_Msg_NE\n+                    (\"constrained index not allowed for fixed-lower-bound \"\n+                       & \"subtype of}\", S, T);\n+\n+               elsif not Is_FLB_Array_Subtype\n+                 and then Is_Fixed_Lower_Bound_Index_Subtype (Etype (S))\n+               then\n+                  Error_Msg_NE\n+                    (\"index with fixed lower bound not allowed for \"\n+                       & \"constrained subtype of}\", S, T);\n                end if;\n \n                Next (Index);\n@@ -14396,9 +14428,9 @@ package body Sem_Ch3 is\n       Set_First_Rep_Item (Def_Id, First_Rep_Item (T));\n \n       --  If this is a range for a fixed-lower-bound subtype, then set the\n-      --  index itype's lower bound to the FLB and the index type's upper bound\n-      --  to the high bound of the index subtype's high bound, mark the itype\n-      --  as an FLB index subtype, and set the range's Etype to the itype.\n+      --  index itype's low bound to the FLB and the index itype's upper bound\n+      --  to the high bound of the parent array type's index subtype. Also,\n+      --  mark the itype as an FLB index subtype.\n \n       if Nkind (S) = N_Range and then Is_FLB_Index then\n          Set_Scalar_Range"}]}