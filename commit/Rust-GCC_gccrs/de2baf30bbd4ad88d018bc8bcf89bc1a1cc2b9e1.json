{"sha": "de2baf30bbd4ad88d018bc8bcf89bc1a1cc2b9e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUyYmFmMzBiYmQ0YWQ4OGQwMThiYzhiY2Y4OWJjMWExY2MyYjllMQ==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2002-12-30T07:16:59Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2002-12-30T07:16:59Z"}, "message": "StringBuffer.java (getChars): Remove wrong dstOffset check against count.\n\n        * java/lang/StringBuffer.java (getChars): Remove wrong dstOffset check\n        against count.\n\nFrom-SVN: r60616", "tree": {"sha": "e99a584eb3879986e2b2c867bd1c655a2485ba10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e99a584eb3879986e2b2c867bd1c655a2485ba10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de2baf30bbd4ad88d018bc8bcf89bc1a1cc2b9e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de2baf30bbd4ad88d018bc8bcf89bc1a1cc2b9e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de2baf30bbd4ad88d018bc8bcf89bc1a1cc2b9e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de2baf30bbd4ad88d018bc8bcf89bc1a1cc2b9e1/comments", "author": null, "committer": null, "parents": [{"sha": "70e12fb914c9274060b46b046ad04c67e66624b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e12fb914c9274060b46b046ad04c67e66624b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e12fb914c9274060b46b046ad04c67e66624b2"}], "stats": {"total": 44, "additions": 25, "deletions": 19}, "files": [{"sha": "3831b9548cb5ba1322aa4498a2e7c3a7deb85b05", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de2baf30bbd4ad88d018bc8bcf89bc1a1cc2b9e1/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de2baf30bbd4ad88d018bc8bcf89bc1a1cc2b9e1/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=de2baf30bbd4ad88d018bc8bcf89bc1a1cc2b9e1", "patch": "@@ -1,3 +1,8 @@\n+2002-12-30  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/lang/StringBuffer.java (getChars): Remove wrong dstOffset check\n+\tagainst count.\n+\n 2002-12-27  Mark Mitchell  <mark@codesourcery.com>\n \n \t* boehm.cc: Remove stray semicolon."}, {"sha": "922d6bb6d241cdf1943d9a7942c92658a09fa011", "filename": "libjava/java/lang/StringBuffer.java", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de2baf30bbd4ad88d018bc8bcf89bc1a1cc2b9e1/libjava%2Fjava%2Flang%2FStringBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de2baf30bbd4ad88d018bc8bcf89bc1a1cc2b9e1/libjava%2Fjava%2Flang%2FStringBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FStringBuffer.java?ref=de2baf30bbd4ad88d018bc8bcf89bc1a1cc2b9e1", "patch": "@@ -308,26 +308,27 @@ private void ensureCapacity_unsynchronized (int minimumCapacity)\n       }\n   }\n \n-  /** Get the specified array of characters.\n-   *  The characters will be copied into the array you pass in.\n-   *  @param srcOffset the index to start copying from in the\n-   *         <code>StringBuffer</code>.\n-   *  @param srcEnd the number of characters to copy.\n-   *  @param dst the array to copy into.\n-   *  @param dstOffset the index to start copying into <code>dst</code>.\n-   *  @exception NullPointerException if dst is null.\n-   *  @exception IndexOutOfBoundsException if any source or target\n-   *             indices are out of range.\n-   *  @see java.lang.System#arraycopy(java.lang.Object,int,java.lang.Object,int,int)\n-   */\n-  public synchronized void getChars (int srcOffset, int srcEnd,\n-\t\t\t\t     char[] dst, int dstOffset)\n-  {\n-    if (srcOffset < 0 || srcOffset > srcEnd)\n-      throw new StringIndexOutOfBoundsException (srcOffset);\n+  /**\n+   * Get the specified array of characters. <code>srcOffset - srcEnd</code>\n+   * characters will be copied into the array you pass in.\n+   *\n+   * @param srcOffset the index to start copying from (inclusive)\n+   * @param srcEnd the index to stop copying from (exclusive)\n+   * @param dst the array to copy into\n+   * @param dstOffset the index to start copying into\n+   * @throws NullPointerException if dst is null\n+   * @throws IndexOutOfBoundsException if any source or target indices are\n+   *         out of range (while unspecified, source problems cause a\n+   *         StringIndexOutOfBoundsException, and dest problems cause an\n+   *         ArrayIndexOutOfBoundsException)\n+   * @see System#arraycopy(Object, int, Object, int, int)\n+   */\n+  public synchronized void getChars(int srcOffset, int srcEnd,\n+                                    char[] dst, int dstOffset)\n+  {\n     int todo = srcEnd - srcOffset;\n-    if (srcEnd > count || dstOffset + todo > count)\n-      throw new StringIndexOutOfBoundsException (srcEnd);\n+    if (srcOffset < 0 || srcEnd > count || todo < 0)\n+      throw new StringIndexOutOfBoundsException();\n     System.arraycopy(value, srcOffset, dst, dstOffset, todo);\n   }\n "}]}