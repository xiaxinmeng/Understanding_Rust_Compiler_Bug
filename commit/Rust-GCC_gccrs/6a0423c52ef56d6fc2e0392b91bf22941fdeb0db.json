{"sha": "6a0423c52ef56d6fc2e0392b91bf22941fdeb0db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEwNDIzYzUyZWY1NmQ2ZmMyZTAzOTJiOTFiZjIyOTQxZmRlYjBkYg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-10-02T08:36:17Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-10-02T08:36:17Z"}, "message": "Implement irange::fits_p.\n\nThis should have been included in the irange_allocator patch, as\na method to see if the current object can hold a passed range\nwithout truncation.\n\ngcc/ChangeLog:\n\n\t* value-range.h (irange::fits_p): New.", "tree": {"sha": "4d4e2447df085ec55450896565dac2bcba9528dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d4e2447df085ec55450896565dac2bcba9528dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a0423c52ef56d6fc2e0392b91bf22941fdeb0db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a0423c52ef56d6fc2e0392b91bf22941fdeb0db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a0423c52ef56d6fc2e0392b91bf22941fdeb0db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a0423c52ef56d6fc2e0392b91bf22941fdeb0db/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c2675fa2bbcfe37308af593edb18e2c1c8eabf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c2675fa2bbcfe37308af593edb18e2c1c8eabf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c2675fa2bbcfe37308af593edb18e2c1c8eabf0"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "94b48e55e778cd6842ee080b7c55fa260ac64801", "filename": "gcc/value-range.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a0423c52ef56d6fc2e0392b91bf22941fdeb0db/gcc%2Fvalue-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a0423c52ef56d6fc2e0392b91bf22941fdeb0db/gcc%2Fvalue-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.h?ref=6a0423c52ef56d6fc2e0392b91bf22941fdeb0db", "patch": "@@ -81,6 +81,7 @@ class irange\n   bool operator!= (const irange &r) const { return !(*this == r); }\n \n   // Misc methods.\n+  bool fits_p (const irange &r) { return m_max_ranges >= r.num_pairs (); }\n   void dump (FILE * = stderr) const;\n \n   // Deprecated legacy public methods."}]}