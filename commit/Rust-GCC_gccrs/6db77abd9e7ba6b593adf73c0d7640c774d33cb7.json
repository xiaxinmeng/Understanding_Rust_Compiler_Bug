{"sha": "6db77abd9e7ba6b593adf73c0d7640c774d33cb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRiNzdhYmQ5ZTdiYTZiNTkzYWRmNzNjMGQ3NjQwYzc3NGQzM2NiNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-01T11:06:13Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-01T11:06:13Z"}, "message": "(minsf3, maxdf3, mindf3): Properly insert constant of zero into\npatterns.\n\nFrom-SVN: r6455", "tree": {"sha": "7e41b74371e8c06600b6c6a7a0e629bbe31bdece", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e41b74371e8c06600b6c6a7a0e629bbe31bdece"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6db77abd9e7ba6b593adf73c0d7640c774d33cb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db77abd9e7ba6b593adf73c0d7640c774d33cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6db77abd9e7ba6b593adf73c0d7640c774d33cb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db77abd9e7ba6b593adf73c0d7640c774d33cb7/comments", "author": null, "committer": null, "parents": [{"sha": "bb562bfc33ca838b0b859532e0be9a166054cecc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb562bfc33ca838b0b859532e0be9a166054cecc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb562bfc33ca838b0b859532e0be9a166054cecc"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "ec82ae5fa5259ab8ce79bb456fc106d6dda5ee96", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db77abd9e7ba6b593adf73c0d7640c774d33cb7/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db77abd9e7ba6b593adf73c0d7640c774d33cb7/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=6db77abd9e7ba6b593adf73c0d7640c774d33cb7", "patch": "@@ -1,5 +1,5 @@\n ;;- Machine description for DEC Alpha for GNU C compiler\n-;;   Copyright (C) 1992, 1993 Free Software Foundation, Inc.\n+;;   Copyright (C) 1992, 1993, 1994 Free Software Foundation, Inc.\n ;;   Contributed by Richard Kenner (kenner@nyu.edu)\n \n ;; This file is part of GNU CC.\n@@ -1675,23 +1675,25 @@\n \t(le:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"\")\n \t       (match_operand:DF 2 \"reg_or_fp0_operand\" \"\")))\n    (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(if_then_else:DF (eq (match_dup 3) (const_int 0))\n+\t(if_then_else:DF (eq (match_dup 3) (match_dup 4))\n \t\t\t (match_dup 1) (match_dup 2)))]\n   \"TARGET_FP\"\n   \"\n { operands[3] = gen_reg_rtx (DFmode);\n+  operands[4] = CONST0_RTX (DFmode);\n }\")\n \n (define_expand \"mindf3\"\n   [(set (match_dup 3)\n \t(lt:DF (match_operand:DF 1 \"reg_or_fp0_operand\" \"\")\n \t       (match_operand:DF 2 \"reg_or_fp0_operand\" \"\")))\n    (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(if_then_else:DF (ne (match_dup 3) (const_int 0))\n+\t(if_then_else:DF (ne (match_dup 3) (match_dup 4))\n \t\t\t (match_dup 1) (match_dup 2)))]\n   \"TARGET_FP\"\n   \"\n { operands[3] = gen_reg_rtx (DFmode);\n+  operands[4] = CONST0_RTX (DFmode);\n }\")\n \n (define_expand \"maxsf3\"\n@@ -1712,7 +1714,7 @@\n \t(lt:DF (float_extend:DF (match_operand:SF 1 \"reg_or_fp0_operand\" \"\"))\n \t       (float_extend:DF (match_operand:SF 2 \"reg_or_fp0_operand\" \"\"))))\n    (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(if_then_else:SF (ne (match_dup 3) (const_int 0))\n+\t(if_then_else:SF (ne (match_dup 3) (match_dup 4))\n \t\t      (match_dup 1) (match_dup 2)))]\n   \"TARGET_FP\"\n   \""}]}