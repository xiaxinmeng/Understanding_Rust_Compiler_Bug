{"sha": "97c6bea819ec0a773041308e62a7c05c33f093b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdjNmJlYTgxOWVjMGE3NzMwNDEzMDhlNjJhN2MwNWMzM2YwOTNiMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-10-28T13:42:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-10-28T13:42:03Z"}, "message": "re PR tree-optimization/92241 (ice in vect_mark_pattern_st mts, at tree-vect-patterns.c:5175)\n\n2019-10-28  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/92241\n\t* tree-vect-loop.c (vect_fixup_scalar_cycles_with_patterns): When\n\twe failed to update the reduction index do not use the pattern\n\tstmts for the reduction chain.\n\t(vectorizable_reduction): When the reduction chain is corrupt,\n\tfail.\n\t* tree-vect-patterns.c (vect_mark_pattern_stmts): Stop when we\n\tfail to update the reduction chain.\n\n\t* gcc.dg/torture/pr92241.c: New testcase.\n\nFrom-SVN: r277516", "tree": {"sha": "fd82c1940beb67c5d5fae3fcd85d1f4ef7a94fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd82c1940beb67c5d5fae3fcd85d1f4ef7a94fc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97c6bea819ec0a773041308e62a7c05c33f093b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97c6bea819ec0a773041308e62a7c05c33f093b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97c6bea819ec0a773041308e62a7c05c33f093b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97c6bea819ec0a773041308e62a7c05c33f093b0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14c835a01ceac44e685589489b46ffaabd034177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14c835a01ceac44e685589489b46ffaabd034177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14c835a01ceac44e685589489b46ffaabd034177"}], "stats": {"total": 60, "additions": 52, "deletions": 8}, "files": [{"sha": "98090400569218f92c0566d8f67d6cc067dc4b5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c6bea819ec0a773041308e62a7c05c33f093b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c6bea819ec0a773041308e62a7c05c33f093b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97c6bea819ec0a773041308e62a7c05c33f093b0", "patch": "@@ -1,3 +1,14 @@\n+2019-10-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92241\n+\t* tree-vect-loop.c (vect_fixup_scalar_cycles_with_patterns): When\n+\twe failed to update the reduction index do not use the pattern\n+\tstmts for the reduction chain.\n+\t(vectorizable_reduction): When the reduction chain is corrupt,\n+\tfail.\n+\t* tree-vect-patterns.c (vect_mark_pattern_stmts): Stop when we\n+\tfail to update the reduction chain.\n+\n 2019-10-28  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-loop.c (vect_create_epilog_for_reduction): Use"}, {"sha": "41dea35bdc6723e2f7f75f03d9fffb0c8de7fe8d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c6bea819ec0a773041308e62a7c05c33f093b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c6bea819ec0a773041308e62a7c05c33f093b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=97c6bea819ec0a773041308e62a7c05c33f093b0", "patch": "@@ -1,3 +1,8 @@\n+2019-10-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92241\n+\t* gcc.dg/torture/pr92241.c: New testcase.\n+\n 2019-10-28  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/92225"}, {"sha": "331d03b3d449e7e5a47b1e093c9c65c6bc933853", "filename": "gcc/testsuite/gcc.dg/torture/pr92241.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c6bea819ec0a773041308e62a7c05c33f093b0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92241.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c6bea819ec0a773041308e62a7c05c33f093b0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92241.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr92241.c?ref=97c6bea819ec0a773041308e62a7c05c33f093b0", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-ftree-vectorize\" } */\n+\n+int a, b;\n+char c[2];\n+void d() {\n+  char e;\n+  for (; b; b--) {\n+    e = 0;\n+    for (; e <= 1; e++)\n+      a &= c[b + e] && 1;\n+  }\n+}"}, {"sha": "d11a1f9f9f54215b9929e6ceb1c78ac17915143b", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c6bea819ec0a773041308e62a7c05c33f093b0/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c6bea819ec0a773041308e62a7c05c33f093b0/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=97c6bea819ec0a773041308e62a7c05c33f093b0", "patch": "@@ -689,13 +689,16 @@ vect_fixup_scalar_cycles_with_patterns (loop_vec_info loop_vinfo)\n \tstmt_vec_info next = REDUC_GROUP_NEXT_ELEMENT (first);\n \twhile (next)\n \t  {\n-\t    if (! STMT_VINFO_IN_PATTERN_P (next))\n+\t    if (! STMT_VINFO_IN_PATTERN_P (next)\n+\t\t|| STMT_VINFO_REDUC_IDX (STMT_VINFO_RELATED_STMT (next)) == -1)\n \t      break;\n \t    next = REDUC_GROUP_NEXT_ELEMENT (next);\n \t  }\n-\t/* If not all stmt in the chain are patterns try to handle\n-\t   the chain without patterns.  */\n-\tif (! next)\n+\t/* If not all stmt in the chain are patterns or if we failed\n+\t   to update STMT_VINFO_REDUC_IDX try to handle the chain\n+\t   without patterns.  */\n+\tif (! next\n+\t    && STMT_VINFO_REDUC_IDX (STMT_VINFO_RELATED_STMT (first)) != -1)\n \t  {\n \t    vect_fixup_reduc_chain (first);\n \t    LOOP_VINFO_REDUCTION_CHAINS (loop_vinfo)[i]\n@@ -5730,7 +5733,13 @@ vectorizable_reduction (stmt_vec_info stmt_info, slp_tree slp_node,\n     {\n       stmt_vec_info def = loop_vinfo->lookup_def (reduc_def);\n       def = vect_stmt_to_vectorize (def);\n-      gcc_assert (STMT_VINFO_REDUC_IDX (def) != -1);\n+      if (STMT_VINFO_REDUC_IDX (def) == -1)\n+\t{\n+\t  if (dump_enabled_p ())\n+\t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t     \"reduction chain broken by patterns.\\n\");\n+\t  return false;\n+\t}\n       if (!REDUC_GROUP_FIRST_ELEMENT (def))\n \tonly_slp_reduc_chain = false;\n       reduc_def = gimple_op (def->stmt, 1 + STMT_VINFO_REDUC_IDX (def));"}, {"sha": "c0fdde686976172f61ec796d9d19d7ae442bfecd", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97c6bea819ec0a773041308e62a7c05c33f093b0/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97c6bea819ec0a773041308e62a7c05c33f093b0/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=97c6bea819ec0a773041308e62a7c05c33f093b0", "patch": "@@ -5110,6 +5110,9 @@ vect_mark_pattern_stmts (stmt_vec_info orig_stmt_info, gimple *pattern_stmt,\n     for (gimple_stmt_iterator si = gsi_start (def_seq);\n \t !gsi_end_p (si); gsi_next (&si))\n       {\n+\tif (dump_enabled_p ())\n+\t  dump_printf_loc (MSG_NOTE, vect_location,\n+\t\t\t   \"extra pattern stmt: %G\", gsi_stmt (si));\n \tstmt_vec_info pattern_stmt_info\n \t  = vect_init_pattern_stmt (gsi_stmt (si),\n \t\t\t\t    orig_stmt_info, pattern_vectype);\n@@ -5169,10 +5172,13 @@ vect_mark_pattern_stmts (stmt_vec_info orig_stmt_info, gimple *pattern_stmt,\n \t\tfound = true;\n \t\tbreak;\n \t      }\n-\t  if (found && s == pattern_stmt)\n-\t    break;\n \t  if (s == pattern_stmt)\n-\t    gcc_unreachable ();\n+\t    {\n+\t      if (!found && dump_enabled_p ())\n+\t\tdump_printf_loc (MSG_NOTE, vect_location,\n+\t\t\t\t \"failed to update reduction index.\\n\");\n+\t      break;\n+\t    }\n \t  if (gsi_end_p (si))\n \t    s = pattern_stmt;\n \t  else"}]}