{"sha": "ad1121d10ea102d3f193413a4c80e3b48a4ecec2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQxMTIxZDEwZWExMDJkM2YxOTM0MTNhNGM4MGUzYjQ4YTRlY2VjMg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-12-11T03:15:14Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-12-11T03:15:14Z"}, "message": "Makefile.in: Rebuilt.\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (nat_source_files): Added natVMClassLoader.cc.\n\t* gnu/gcj/runtime/natVMClassLoader.cc: New file.\n\t(gnu::gcj::runtime::VMClassLoader::findClass): Moved here.\n\t* java/lang/natClassLoader.cc\n\t(gnu::gcj::runtime::VMClassLoader::findClass): Removed.\n\nFrom-SVN: r60020", "tree": {"sha": "b22d13e76c99db3d512cbaf990977196e108fb80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b22d13e76c99db3d512cbaf990977196e108fb80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad1121d10ea102d3f193413a4c80e3b48a4ecec2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1121d10ea102d3f193413a4c80e3b48a4ecec2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad1121d10ea102d3f193413a4c80e3b48a4ecec2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1121d10ea102d3f193413a4c80e3b48a4ecec2/comments", "author": null, "committer": null, "parents": [{"sha": "a7e693d5d2ae7ddd3a14e4420ab88f677efbcebe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7e693d5d2ae7ddd3a14e4420ab88f677efbcebe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7e693d5d2ae7ddd3a14e4420ab88f677efbcebe"}], "stats": {"total": 145, "additions": 87, "deletions": 58}, "files": [{"sha": "e9fe22c7231a898342820e9e86c9768ea0f4c876", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1121d10ea102d3f193413a4c80e3b48a4ecec2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1121d10ea102d3f193413a4c80e3b48a4ecec2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ad1121d10ea102d3f193413a4c80e3b48a4ecec2", "patch": "@@ -1,3 +1,12 @@\n+2002-12-10  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (nat_source_files): Added natVMClassLoader.cc.\n+\t* gnu/gcj/runtime/natVMClassLoader.cc: New file.\n+\t(gnu::gcj::runtime::VMClassLoader::findClass): Moved here.\n+\t* java/lang/natClassLoader.cc\n+\t(gnu::gcj::runtime::VMClassLoader::findClass): Removed.\n+\n 2002-12-10  Mark Wielaard  <mark@klomp.org>\n             Tom Tromey  <tromey@redhat.com>\n "}, {"sha": "0db820f360fe1c9c4cd892f69b1f1d31554665c8", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1121d10ea102d3f193413a4c80e3b48a4ecec2/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1121d10ea102d3f193413a4c80e3b48a4ecec2/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=ad1121d10ea102d3f193413a4c80e3b48a4ecec2", "patch": "@@ -2320,6 +2320,7 @@ gnu/gcj/runtime/natNameFinder.cc \\\n gnu/gcj/runtime/natSharedLibLoader.cc \\\n gnu/gcj/runtime/natStackTrace.cc \\\n gnu/gcj/runtime/natStringBuffer.cc \\\n+gnu/gcj/runtime/natVMClassLoader.cc \\\n java/io/natFile.cc \\\n java/io/natFileDescriptor.cc \\\n java/io/natObjectInputStream.cc \\"}, {"sha": "c8d722f052152066c312c32ba903187454ecef6f", "filename": "libjava/Makefile.in", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1121d10ea102d3f193413a4c80e3b48a4ecec2/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1121d10ea102d3f193413a4c80e3b48a4ecec2/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=ad1121d10ea102d3f193413a4c80e3b48a4ecec2", "patch": "@@ -2069,6 +2069,7 @@ gnu/gcj/runtime/natNameFinder.cc \\\n gnu/gcj/runtime/natSharedLibLoader.cc \\\n gnu/gcj/runtime/natStackTrace.cc \\\n gnu/gcj/runtime/natStringBuffer.cc \\\n+gnu/gcj/runtime/natVMClassLoader.cc \\\n java/io/natFile.cc \\\n java/io/natFileDescriptor.cc \\\n java/io/natObjectInputStream.cc \\\n@@ -2239,12 +2240,13 @@ gnu/gcj/io/shs.lo gnu/gcj/protocol/core/natCoreInputStream.lo \\\n gnu/gcj/runtime/natFinalizerThread.lo gnu/gcj/runtime/natFirstThread.lo \\\n gnu/gcj/runtime/natNameFinder.lo gnu/gcj/runtime/natSharedLibLoader.lo \\\n gnu/gcj/runtime/natStackTrace.lo gnu/gcj/runtime/natStringBuffer.lo \\\n-java/io/natFile.lo java/io/natFileDescriptor.lo \\\n-java/io/natObjectInputStream.lo java/io/natObjectOutputStream.lo \\\n-java/lang/natCharacter.lo java/lang/natClass.lo \\\n-java/lang/natClassLoader.lo java/lang/natConcreteProcess.lo \\\n-java/lang/natDouble.lo java/lang/natFloat.lo java/lang/natMath.lo \\\n-java/lang/natObject.lo java/lang/natRuntime.lo java/lang/natString.lo \\\n+gnu/gcj/runtime/natVMClassLoader.lo java/io/natFile.lo \\\n+java/io/natFileDescriptor.lo java/io/natObjectInputStream.lo \\\n+java/io/natObjectOutputStream.lo java/lang/natCharacter.lo \\\n+java/lang/natClass.lo java/lang/natClassLoader.lo \\\n+java/lang/natConcreteProcess.lo java/lang/natDouble.lo \\\n+java/lang/natFloat.lo java/lang/natMath.lo java/lang/natObject.lo \\\n+java/lang/natRuntime.lo java/lang/natString.lo \\\n java/lang/natStringBuffer.lo java/lang/natSystem.lo \\\n java/lang/natThread.lo java/lang/natVMSecurityManager.lo \\\n java/lang/ref/natReference.lo java/lang/reflect/natArray.lo \\\n@@ -2363,7 +2365,8 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/runtime/natNameFinder.P \\\n .deps/gnu/gcj/runtime/natSharedLibLoader.P \\\n .deps/gnu/gcj/runtime/natStackTrace.P \\\n-.deps/gnu/gcj/runtime/natStringBuffer.P .deps/gnu/gcj/xlib/Clip.P \\\n+.deps/gnu/gcj/runtime/natStringBuffer.P \\\n+.deps/gnu/gcj/runtime/natVMClassLoader.P .deps/gnu/gcj/xlib/Clip.P \\\n .deps/gnu/gcj/xlib/Colormap.P .deps/gnu/gcj/xlib/Display.P \\\n .deps/gnu/gcj/xlib/Drawable.P .deps/gnu/gcj/xlib/Font.P \\\n .deps/gnu/gcj/xlib/GC.P .deps/gnu/gcj/xlib/Pixmap.P \\"}, {"sha": "33b63d6759a1931fdd4de3e14ae6123a73097688", "filename": "libjava/gnu/gcj/runtime/natVMClassLoader.cc", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1121d10ea102d3f193413a4c80e3b48a4ecec2/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatVMClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1121d10ea102d3f193413a4c80e3b48a4ecec2/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatVMClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatVMClassLoader.cc?ref=ad1121d10ea102d3f193413a4c80e3b48a4ecec2", "patch": "@@ -0,0 +1,67 @@\n+// Native code for VMClassLoader\n+\n+/* Copyright (C) 2002  Free Software Foundation\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+#include <config.h>\n+\n+#include <gcj/cni.h>\n+#include <jvm.h>\n+\n+#include <gnu/gcj/runtime/VMClassLoader.h>\n+#include <java/lang/Class.h>\n+#include <java/lang/StringBuffer.h>\n+#include <java/net/URLClassLoader.h>\n+#include <java/lang/Runtime.h>\n+\n+jclass\n+gnu::gcj::runtime::VMClassLoader::findClass (jstring name)\n+{\n+  _Jv_Utf8Const *name_u = _Jv_makeUtf8Const (name);\n+  jclass klass = _Jv_FindClassInCache (name_u, 0);\n+\n+  if (! klass)\n+    {\n+      // Turn `gnu.pkg.quux' into `lib-gnu-pkg-quux'.  Then search for\n+      // a module named (eg, on Linux) `lib-gnu-pkg-quux.so', followed\n+      // by `lib-gnu-pkg.so' and `lib-gnu.so'.  If loading one of\n+      // these causes the class to appear in the cache, then use it.\n+      java::lang::StringBuffer *sb = new java::lang::StringBuffer (JvNewStringLatin1(\"lib-\"));\n+      // Skip inner classes\n+      jstring cn;\n+      jint ci = name->indexOf('$');\n+      if (ci == -1)\n+\tcn = name;\n+      else\n+\tcn = name->substring (0, ci);\n+      jstring so_base_name = (sb->append (cn)->toString ())->replace ('.', '-');\n+\n+      // Compare against `3' because that is the length of \"lib\".\n+      while (! klass && so_base_name && so_base_name->length() > 3)\n+\t{\n+\t  using namespace ::java::lang;\n+\t  Runtime *rt = Runtime::getRuntime();\n+\t  jboolean loaded = rt->loadLibraryInternal (so_base_name);\n+\n+\t  jint nd = so_base_name->lastIndexOf ('-');\n+\t  if (nd == -1)\n+\t    so_base_name = NULL;\n+\t  else\n+\t    so_base_name = so_base_name->substring (0, nd);\n+\n+\t  if (loaded)\n+\t    klass = _Jv_FindClassInCache (name_u, 0);\n+\t}\n+    }\n+\n+  // Now try loading using the interpreter.\n+  if (! klass)\n+    klass = java::net::URLClassLoader::findClass (name);\n+\n+  return klass;\n+}"}, {"sha": "db5ac9431d345a7cb2e07856d5c3747b1ab979a2", "filename": "libjava/java/lang/natClassLoader.cc", "status": "modified", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1121d10ea102d3f193413a4c80e3b48a4ecec2/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1121d10ea102d3f193413a4c80e3b48a4ecec2/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClassLoader.cc?ref=ad1121d10ea102d3f193413a4c80e3b48a4ecec2", "patch": "@@ -189,57 +189,6 @@ java::lang::VMClassLoader::getPrimitiveClass (jchar type)\n   return _Jv_FindClassFromSignature (sig, NULL);\n }\n \n-// This is the findClass() implementation for the System classloader. It is \n-// the only native method in VMClassLoader, so we define it here.\n-jclass\n-gnu::gcj::runtime::VMClassLoader::findClass (jstring name)\n-{\n-  _Jv_Utf8Const *name_u = _Jv_makeUtf8Const (name);\n-  jclass klass = _Jv_FindClassInCache (name_u, 0);\n-\n-  if (! klass)\n-    {\n-      // Turn `gnu.pkg.quux' into `lib-gnu-pkg-quux'.  Then search for\n-      // a module named (eg, on Linux) `lib-gnu-pkg-quux.so', followed\n-      // by `lib-gnu-pkg.so' and `lib-gnu.so'.  If loading one of\n-      // these causes the class to appear in the cache, then use it.\n-      java::lang::StringBuffer *sb = new java::lang::StringBuffer (JvNewStringLatin1(\"lib-\"));\n-      // Skip inner classes\n-      jstring cn;\n-      jint ci = name->indexOf('$');\n-      if (ci == -1)\n-\tcn = name;\n-      else\n-\tcn = name->substring (0, ci);\n-      jstring so_base_name = (sb->append (cn)->toString ())->replace ('.', '-');\n-\n-      // Compare against `3' because that is the length of \"lib\".\n-      while (! klass && so_base_name && so_base_name->length() > 3)\n-\t{\n-\t  using namespace ::java::lang;\n-\t  Runtime *rt = Runtime::getRuntime();\n-\t  jboolean loaded = rt->loadLibraryInternal (so_base_name);\n-\n-\t  jint nd = so_base_name->lastIndexOf ('-');\n-\t  if (nd == -1)\n-\t    so_base_name = NULL;\n-\t  else\n-\t    so_base_name = so_base_name->substring (0, nd);\n-\n-\t  if (loaded)\n-\t    klass = _Jv_FindClassInCache (name_u, 0);\n-\t}\n-    }\n-\n-  // Now try loading using the interpreter.\n-  if (! klass)\n-    {\n-      klass = java::net::URLClassLoader::findClass (name);\n-    }\n-\n-  return klass;\n-}\n-\n jclass\n java::lang::ClassLoader::findLoadedClass (jstring name)\n {"}]}