{"sha": "87679b76c3469211fe25d876d717b64fcbd336c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc2NzliNzZjMzQ2OTIxMWZlMjVkODc2ZDcxN2I2NGZjYmQzMzZjNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-07-14T16:20:47Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-07-14T16:20:47Z"}, "message": "pt.c (check_template_shadow): Emit error + inform instead of two errors.\n\n/cp\n2015-07-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* pt.c (check_template_shadow): Emit error + inform instead of\n\ttwo errors.\n\n/testsuite\n2015-07-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/template/crash81.C: Adjust for error + inform change.\n\t* g++.dg/template/pr58878.C: Likewise.\n\t* g++.dg/template/shadow1.C: Likewise.\n\t* g++.dg/template/shadow2.C: Likewise.\n\t* g++.old-deja/g++.benjamin/tem03.C: Likewise.\n\t* g++.old-deja/g++.benjamin/tem04.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash7.C: Likewise.\n\t* g++.old-deja/g++.pt/shadow2.C: Likewise.\n\nFrom-SVN: r225783", "tree": {"sha": "a336d92b35e4e0350c0e9c94777420a84d8b6ed1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a336d92b35e4e0350c0e9c94777420a84d8b6ed1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87679b76c3469211fe25d876d717b64fcbd336c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87679b76c3469211fe25d876d717b64fcbd336c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87679b76c3469211fe25d876d717b64fcbd336c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87679b76c3469211fe25d876d717b64fcbd336c7/comments", "author": null, "committer": null, "parents": [{"sha": "721c82511ec2a50292bb8f3ed5bf181ced42b732", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721c82511ec2a50292bb8f3ed5bf181ced42b732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/721c82511ec2a50292bb8f3ed5bf181ced42b732"}], "stats": {"total": 119, "additions": 67, "deletions": 52}, "files": [{"sha": "d2e5502f4c8bf5185b852d40b3a64f221c2d3bb3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=87679b76c3469211fe25d876d717b64fcbd336c7", "patch": "@@ -1,3 +1,8 @@\n+2015-07-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* pt.c (check_template_shadow): Emit error + inform instead of\n+\ttwo errors.\n+\n 2015-07-13  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/65186"}, {"sha": "718befd3f7b2a5542657ad941730fbddbd285939", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=87679b76c3469211fe25d876d717b64fcbd336c7", "patch": "@@ -3661,8 +3661,13 @@ check_template_shadow (tree decl)\n   if (DECL_SELF_REFERENCE_P (decl))\n     return false;\n \n-  error (\"declaration of %q+#D\", decl);\n-  error (\" shadows template parm %q+#D\", olddecl);\n+  if (DECL_TEMPLATE_PARM_P (decl))\n+    error (\"declaration of template parameter %q+D shadows \"\n+\t   \"template parameter\", decl);\n+  else\n+    error (\"declaration of %q+#D shadows template parameter\", decl);\n+  inform (DECL_SOURCE_LOCATION (olddecl),\n+\t  \"template parameter %qD declared here\", olddecl);\n   return false;\n }\n "}, {"sha": "c0932facf701aa18acee570370fa2ca339baabf8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=87679b76c3469211fe25d876d717b64fcbd336c7", "patch": "@@ -1,3 +1,14 @@\n+2015-07-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/template/crash81.C: Adjust for error + inform change.\n+\t* g++.dg/template/pr58878.C: Likewise.\n+\t* g++.dg/template/shadow1.C: Likewise.\n+\t* g++.dg/template/shadow2.C: Likewise.\n+\t* g++.old-deja/g++.benjamin/tem03.C: Likewise.\n+\t* g++.old-deja/g++.benjamin/tem04.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash7.C: Likewise.\n+\t* g++.old-deja/g++.pt/shadow2.C: Likewise.\n+\n 2015-07-14  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66863"}, {"sha": "54efba65aa993c43971c26e1ad6642712f7019c4", "filename": "gcc/testsuite/g++.dg/template/crash81.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash81.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash81.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash81.C?ref=87679b76c3469211fe25d876d717b64fcbd336c7", "patch": "@@ -3,6 +3,5 @@\n struct A\n {\n   template<T::X> struct X; // { dg-error \"'T' has not been declared\" \"T\" }\n-  // { dg-error \"declaration of 'template<int X> struct A::X'\" \"A::X\" { target *-*-* } 5 }\n-  // { dg-error \"shadows template parm 'int X'\" \"shadow\" { target *-*-* } 5 }\n+  // { dg-bogus \"declaration\" \"\" { xfail *-*-* } 5 }\n };"}, {"sha": "79fcd84bebde02e902ceaa70947f3e20008a4846", "filename": "gcc/testsuite/g++.dg/template/pr58878.C", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr58878.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr58878.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr58878.C?ref=87679b76c3469211fe25d876d717b64fcbd336c7", "patch": "@@ -3,59 +3,59 @@\n // Template-members of non-template class\n struct A\n {\n-    template <typename t>    // { dg-error \"shadows\" }\n+    template <typename t>    // { dg-message \"template parameter\" }\n         void f()\n         {\n-            int t = 1;       // { dg-error \"declaration\" }\n+            int t = 1;       // { dg-error \"shadows\" }\n         }\n \n     template <typename t>\n         void g();\n };\n \n-template <typename t>        // { dg-error \"shadows\" }\n+template <typename t>        // { dg-message \"template parameter\" }\n void A::g()\n {\n-    int t = 2;               // { dg-error \"declaration\" }\n+    int t = 2;               // { dg-error \"shadows\" }\n }\n \n // (Non-template) Members of template class\n-template <typename t>        // { dg-error \"shadows\" }\n+template <typename t>        // { dg-message \"template parameter\" }\n struct B\n {\n     void f()\n     {\n-        int t = 3;           // { dg-error \"declaration\" }\n+        int t = 3;           // { dg-error \"shadows\" }\n     }\n \n     void g();\n };\n \n-template <typename t>        // { dg-error \"shadows\" }\n+template <typename t>        // { dg-message \"template parameter\" }\n void B<t>::g()\n {\n-    int t = 4;               // { dg-error \"declaration\" }\n+    int t = 4;               // { dg-error \"shadows\" }\n }\n \n // Template members of template class\n-template <typename t>        // { dg-error \"shadows\" }\n+template <typename t>        // { dg-message \"template parameter\" }\n struct C\n {\n-    template <typename s>    // { dg-error \"shadows\" }\n+    template <typename s>    // { dg-message \"template parameter\" }\n     void f()\n     {\n-        int t = 5;           // { dg-error \"declaration\" }\n-        int s = 6;           // { dg-error \"declaration\" }\n+        int t = 5;           // { dg-error \"shadows\" }\n+        int s = 6;           // { dg-error \"shadows\" }\n     }\n \n     template <typename s>\n     void g();\n };\n \n-template <typename t>        // { dg-error \"shadows\" }\n-template <typename s>        // { dg-error \"shadows\" }\n+template <typename t>        // { dg-message \"template parameter\" }\n+template <typename s>        // { dg-message \"template parameter\" }\n void C<t>::g()\n {\n-    int t = 7;               // { dg-error \"declaration\" }\n-    int s = 8;               // { dg-error \"declaration\" }\n+    int t = 7;               // { dg-error \"shadows\" }\n+    int s = 8;               // { dg-error \"shadows\" }\n }"}, {"sha": "612570403b1443e55f94d01127d59294b34d492b", "filename": "gcc/testsuite/g++.dg/template/shadow1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshadow1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshadow1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshadow1.C?ref=87679b76c3469211fe25d876d717b64fcbd336c7", "patch": "@@ -1,4 +1,4 @@\n // PR c++/58632\n \n-template<template<int I> class A> // { dg-message \"shadows\" }\n-class A {};\t\t\t// { dg-error \"declaration\" }\n+template<template<int I> class A> // { dg-message \"template parameter\" }\n+class A {};\t\t\t// { dg-error \"shadows\" }"}, {"sha": "22d6a28e0161e0a12a6a31e7f0ca6bfab61b5042", "filename": "gcc/testsuite/g++.dg/template/shadow2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshadow2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshadow2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fshadow2.C?ref=87679b76c3469211fe25d876d717b64fcbd336c7", "patch": "@@ -1,3 +1,3 @@\n-template <class A, // { dg-error \"shadows template parm 'class A'\" }\n-          template <class A> class B> // { dg-error \"declaration of 'class A'\" }\n+template <class A, // { dg-message \"template parameter 'A'\" }\n+          template <class A> class B> // { dg-error \"declaration of template parameter 'A' shadows\" }\n class X;"}, {"sha": "c68d5546fc51e25a30bf623030e98994039462e8", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/tem03.C", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem03.C?ref=87679b76c3469211fe25d876d717b64fcbd336c7", "patch": "@@ -18,7 +18,7 @@\n \n // 01 \n // declared friend template\n-template <class T4>// { dg-error \"\" } .*\n+template <class T4>// { dg-message \"\" } .*\n class Xone {\n protected:\n   T4* next;\n@@ -38,7 +38,7 @@ public:\n \n // 02\n // nested template class\n-template <class T6>// { dg-error \"\" } .*\n+template <class T6>// { dg-message \"\" } .*\n class Xtwo {\n protected:\n   T6* next;\n@@ -58,7 +58,7 @@ public:\n \n // 03\n // member templates\n-template <class T8>// { dg-error \"\" } .*\n+template <class T8>// { dg-message \"\" } .*\n class Xthree {\n protected:\n   T8* next;\n@@ -80,7 +80,7 @@ public:\n \n // 04\n // local names (14.6.1 p 4)\n-template <class T10, int i> struct Xfour {// { dg-error \"\" } .*\n+template <class T10, int i> struct Xfour {// { dg-message \"\" } .*\n   int T10; // { dg-error \"\" } .*\n   void f(){\n     char T10; // { dg-error \"declaration of 'char T10'\" }\n@@ -94,7 +94,7 @@ template <class T12, int i> struct Xfive {\n   void f();\n };\n \n-template <class T13, int i> void Xfive<T13,i>::f() {// { dg-error \"\" } .*\n+template <class T13, int i> void Xfive<T13,i>::f() {// { dg-message \"\" } .*\n   int T13; // { dg-error \"\" } .*\n   int T12; //should be ok\n }\n@@ -116,14 +116,14 @@ template <class T12> class T12; // { dg-error \"\" } .*\n \n // 08 \n // with multiple template params, and second (third) one is redeclared\n-template <class T16, int i, class T161> class Xseven { // { dg-error \"\" } .*\n+template <class T16, int i, class T161> class Xseven { // { dg-message \"\" } .*\n private:\n   char T161; // { dg-error \"\" } .*\n public:\n   template <class U>\n   friend bool fooy(U u);\n \n-  template <class T161> // { dg-error \"declaration of 'class T161'\" }\n+  template <class T161> // { dg-error \"declaration of template parameter 'T161'\" }\n   friend bool foo(T161 u)\n     {\n       Xseven<T161, 5, int> obj;\n@@ -158,14 +158,14 @@ struct S1\n // 10 \n // check for non-type parameters, should still be able to redeclare?\n // local names (14.6.1 p 4)\n-template <class T18, int i> class Xten {// { dg-error \"\" } .*\n+template <class T18, int i> class Xten {// { dg-message \"\" } .*\n   float i; // { dg-error \"\" } .*\n };\n \n \n // 11 \n // declared friend template, non-type parameters\n-template <long l>// { dg-error \"\" } .*\n+template <long l>// { dg-message \"\" } .*\n class Xeleven {\n public:\n   template <long l> friend bool isequal (Xeleven<5> lhs, Xeleven<5> rhs);  // { dg-error \"\" } .*\n@@ -175,7 +175,7 @@ public:\n \n // 12\n // nested template class, non-type parameters\n-template <long l>// { dg-error \"\" } .*\n+template <long l>// { dg-message \"\" } .*\n class Xtwelve {\n public:\n   template <long l> class nested {// { dg-error \"\" } .\n@@ -188,7 +188,7 @@ public:\n \n // 13\n // member templates, non-type parameters\n-template <long l>// { dg-error \"\" } .*\n+template <long l>// { dg-message \"\" } .*\n struct Xthirteen {\n   template <long l> long comp_ge(long test) {// { dg-error \"\" } .\n     long local_value;"}, {"sha": "1fd45bc3af5d5148a6c19ac17789fd0f95b47ae2", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/tem04.C", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem04.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem04.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem04.C?ref=87679b76c3469211fe25d876d717b64fcbd336c7", "patch": "@@ -18,7 +18,7 @@\n \n // 14 \n // declared friend template (v3, template type parameters)\n-template <class T4>// { dg-error \"\" } .*\n+template <class T4>// { dg-message \"\" } .*\n class Xfourteen {\n protected:\n   T4 value;\n@@ -31,7 +31,7 @@ public:\n \n // 15\n // nested template class (v3, template type parameters)\n-template <class T6>// { dg-error \"\" } .*\n+template <class T6>// { dg-message \"\" } .*\n class Xfifteen {\n protected:\n   T6 value;\n@@ -48,7 +48,7 @@ public:\n \n // 16\n // member templates (v3, template type parameters)\n-template <class T8>// { dg-error \"\" } .*\n+template <class T8>// { dg-message \"\" } .*\n class Xsixteen {\n protected:\n   T8 value;\n@@ -88,7 +88,7 @@ public:\n \n // 18\n // more template template redecl tests\n-template <typename T14, template <typename T15> class C12>// { dg-error \"\" } .*\n+template <typename T14, template <typename T15> class C12>// { dg-message \"\" } .*\n class Xeighteen {\n protected:\n   C12<T14> value;\n@@ -98,7 +98,7 @@ protected:\n \n // 19\n // more template template redecl tests\n-template <typename T16, template <typename T17> class C14>// { dg-error \"\" } .*\n+template <typename T16, template <typename T17> class C14>// { dg-message \"\" } .*\n class Xnineteen{\n protected:\n   C14<T16> value;\n@@ -137,7 +137,7 @@ template <class T17, int i> struct Xtwenty {\n // non-type template parameters v1: enum\n enum my_enum {my_A = 45, my_B, my_C};\n \n-template <my_enum T18> class Xtwentyone {// { dg-error \"\" } .*\n+template <my_enum T18> class Xtwentyone {// { dg-message \"\" } .*\n   float T18; // { dg-error \"\" } .*\n };\n \n@@ -149,34 +149,29 @@ struct base {\n   int ret_gcount() {return gcount;}\n };\n \n-template <class T20, base* b> class Xtwentytwo {// { dg-error \"\" } .*\n+template <class T20, base* b> class Xtwentytwo {// { dg-message \"\" } .*\n   float b; // { dg-error \"\" } .*\n };\n \n \n // 23\n // non-type template parameters v2: reference to object\n-template <class T20, base& b2> class Xtwentythree {// { dg-error \"\" } .*\n+template <class T20, base& b2> class Xtwentythree {// { dg-message \"\" } .*\n   float b2; // { dg-error \"\" } .*\n };\n \n \n // 24\n // non-type template parameters v3: pointer to member\n-template <class T20, int base::* b3> class Xtwentyfour {// { dg-error \"\" } .*\n+template <class T20, int base::* b3> class Xtwentyfour {// { dg-message \"\" } .*\n   float b3; // { dg-error \"\" } .*\n };\n \n \n // 25\n // non-type template parms that use push_class_level\n-template <class T22> void f1() {// { dg-error \"\" } .*\n+template <class T22> void f1() {// { dg-message \"\" } .*\n   struct foo { \n     enum T22 { un, du, toi }; // { dg-error \"\" } .*\n   };\n }\n-\n-\n-\n-\n-"}, {"sha": "242277a6fe898854d5afeb59fb2c1c1797a8b9d0", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash7.C?ref=87679b76c3469211fe25d876d717b64fcbd336c7", "patch": "@@ -13,7 +13,7 @@ public:\n   int size () { return sz; }\n };\n \n-template<class T>// { dg-error \"\" } previous definition of T\n+template<class T>// { dg-message \"\" } previous definition of T\n struct Comparator\n {\n   typedef T T;// { dg-error \"\" } use of template type T in typedef to T"}, {"sha": "41c1bb2d01c38c1f20a2b534d89e0401fcfe527d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/shadow2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fshadow2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87679b76c3469211fe25d876d717b64fcbd336c7/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fshadow2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fshadow2.C?ref=87679b76c3469211fe25d876d717b64fcbd336c7", "patch": "@@ -1,7 +1,7 @@\n // { dg-do assemble  }\n // Origin: Jason Merrill <jason@cygnus.com>\n \n-template <class T> struct A { // { dg-error \"\" } shadowed parameter\n+template <class T> struct A { // { dg-message \"\" } shadowed parameter\n   struct B {\n     void T(); // { dg-error \"\" } shadows template parameter\n   };"}]}