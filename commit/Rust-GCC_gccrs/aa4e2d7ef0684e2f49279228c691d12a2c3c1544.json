{"sha": "aa4e2d7ef0684e2f49279228c691d12a2c3c1544", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE0ZTJkN2VmMDY4NGUyZjQ5Mjc5MjI4YzY5MWQxMmEyYzNjMTU0NA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:23:26Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:23:26Z"}, "message": "fwprop.c: Include rtl-iter.h.\n\ngcc/\n\t* fwprop.c: Include rtl-iter.h.\n\t(varying_mem_p): Turn from being a for_each_rtx callback to being\n\ta function that examines each subrtx itself.\n\t(propagate_rtx): Update accordingly.\n\nFrom-SVN: r214641", "tree": {"sha": "5ce2ad43e445eeddc8f9c53e194202e2c0f54aa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ce2ad43e445eeddc8f9c53e194202e2c0f54aa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa4e2d7ef0684e2f49279228c691d12a2c3c1544", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4e2d7ef0684e2f49279228c691d12a2c3c1544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4e2d7ef0684e2f49279228c691d12a2c3c1544", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4e2d7ef0684e2f49279228c691d12a2c3c1544/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b87048010c87e66ae5c2d329cf12541a16812ac0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87048010c87e66ae5c2d329cf12541a16812ac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b87048010c87e66ae5c2d329cf12541a16812ac0"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "36b25cb13101cf97e14e2f52a83f91e7c35d400b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4e2d7ef0684e2f49279228c691d12a2c3c1544/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4e2d7ef0684e2f49279228c691d12a2c3c1544/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa4e2d7ef0684e2f49279228c691d12a2c3c1544", "patch": "@@ -1,3 +1,10 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* fwprop.c: Include rtl-iter.h.\n+\t(varying_mem_p): Turn from being a for_each_rtx callback to being\n+\ta function that examines each subrtx itself.\n+\t(propagate_rtx): Update accordingly.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* function.c: Include rtl-iter.h"}, {"sha": "f166bdeb3fb3ad29751717e4dca88d6da839423c", "filename": "gcc/fwprop.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4e2d7ef0684e2f49279228c691d12a2c3c1544/gcc%2Ffwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4e2d7ef0684e2f49279228c691d12a2c3c1544/gcc%2Ffwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffwprop.c?ref=aa4e2d7ef0684e2f49279228c691d12a2c3c1544", "patch": "@@ -38,6 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n #include \"domwalk.h\"\n #include \"emit-rtl.h\"\n+#include \"rtl-iter.h\"\n \n \n /* This pass does simple forward propagation and simplification when an\n@@ -623,14 +624,16 @@ propagate_rtx_1 (rtx *px, rtx old_rtx, rtx new_rtx, int flags)\n }\n \n \n-/* for_each_rtx traversal function that returns 1 if BODY points to\n-   a non-constant mem.  */\n+/* Return true if X constains a non-constant mem.  */\n \n-static int\n-varying_mem_p (rtx *body, void *data ATTRIBUTE_UNUSED)\n+static bool\n+varying_mem_p (const_rtx x)\n {\n-  rtx x = *body;\n-  return MEM_P (x) && !MEM_READONLY_P (x);\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, x, NONCONST)\n+    if (MEM_P (*iter) && !MEM_READONLY_P (*iter))\n+      return true;\n+  return false;\n }\n \n \n@@ -661,7 +664,7 @@ propagate_rtx (rtx x, enum machine_mode mode, rtx old_rtx, rtx new_rtx,\n \t  && (GET_MODE_SIZE (mode)\n \t      <= GET_MODE_SIZE (GET_MODE (SUBREG_REG (new_rtx))))))\n     flags |= PR_CAN_APPEAR;\n-  if (!for_each_rtx (&new_rtx, varying_mem_p, NULL))\n+  if (!varying_mem_p (new_rtx))\n     flags |= PR_HANDLE_MEM;\n \n   if (speed)"}]}