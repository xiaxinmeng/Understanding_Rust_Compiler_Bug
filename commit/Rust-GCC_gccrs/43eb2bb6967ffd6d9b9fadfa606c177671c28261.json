{"sha": "43eb2bb6967ffd6d9b9fadfa606c177671c28261", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNlYjJiYjY5NjdmZmQ2ZDliOWZhZGZhNjA2YzE3NzY3MWMyODI2MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-08-12T08:59:02Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-12T08:59:02Z"}, "message": "[Ada] Plug small loophole in Discrete_Range_Check\n\nThis routine would not return if range checks are suppressed.\n\n2019-08-12  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch4.adb (Discrete_Range_Check): Return if checks are\n\tsuppressed.\n\nFrom-SVN: r274282", "tree": {"sha": "635eabb828234fd50167e8898221eeaa9dce1bea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/635eabb828234fd50167e8898221eeaa9dce1bea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43eb2bb6967ffd6d9b9fadfa606c177671c28261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43eb2bb6967ffd6d9b9fadfa606c177671c28261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43eb2bb6967ffd6d9b9fadfa606c177671c28261", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43eb2bb6967ffd6d9b9fadfa606c177671c28261/comments", "author": null, "committer": null, "parents": [{"sha": "4d7d2736587ecfb99b513645dda7460f9100f69c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d7d2736587ecfb99b513645dda7460f9100f69c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d7d2736587ecfb99b513645dda7460f9100f69c"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "df19f1bf69bc3def04008c29adc92f857153e7b3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43eb2bb6967ffd6d9b9fadfa606c177671c28261/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43eb2bb6967ffd6d9b9fadfa606c177671c28261/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=43eb2bb6967ffd6d9b9fadfa606c177671c28261", "patch": "@@ -1,3 +1,8 @@\n+2019-08-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch4.adb (Discrete_Range_Check): Return if checks are\n+\tsuppressed.\n+\n 2019-08-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sem_res.adb: Add with & use clause for Sem_Mech and"}, {"sha": "425c505bef56e0725bed5d9cf44d85e3feaf489b", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43eb2bb6967ffd6d9b9fadfa606c177671c28261/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43eb2bb6967ffd6d9b9fadfa606c177671c28261/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=43eb2bb6967ffd6d9b9fadfa606c177671c28261", "patch": "@@ -10969,7 +10969,9 @@ package body Exp_Ch4 is\n       -- Discrete_Range_Check --\n       --------------------------\n \n-      --  Case of conversions to a discrete type\n+      --  Case of conversions to a discrete type. We let Generate_Range_Check\n+      --  do the heavy lifting, after converting a fixed-point operand to an\n+      --  appropriate integer type.\n \n       procedure Discrete_Range_Check is\n          Expr : Node_Id;\n@@ -10984,6 +10986,21 @@ package body Exp_Ch4 is\n \n          Expr := Expression (N);\n \n+         --  Nothing to do if range checks suppressed\n+\n+         if Range_Checks_Suppressed (Target_Type) then\n+            return;\n+         end if;\n+\n+         --  Nothing to do if expression is an entity on which checks have been\n+         --  suppressed.\n+\n+         if Is_Entity_Name (Expr)\n+           and then Range_Checks_Suppressed (Entity (Expr))\n+         then\n+            return;\n+         end if;\n+\n          --  Before we do a range check, we have to deal with treating\n          --  a fixed-point operand as an integer. The way we do this\n          --  is simply to do an unchecked conversion to an appropriate"}]}