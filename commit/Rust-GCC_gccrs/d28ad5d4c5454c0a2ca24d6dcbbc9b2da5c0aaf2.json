{"sha": "d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI4YWQ1ZDRjNTQ1NGMwYTJjYTI0ZDZkY2JiYzliMmRhNWMwYWFmMg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2015-04-29T16:52:45Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2015-04-29T16:52:45Z"}, "message": "Fix libgcc installation for offload targets.\n\n\t* Makefile.in (real_host_noncanonical): New variable.\n\t(libsubdir): Use it.\n\t* configure.ac (real_host_noncanonical): Compute.  Remove special\n\tcase for intelmicemul.\n\t* configure: Regenerate.\n\nFrom-SVN: r222585", "tree": {"sha": "43954c0b36be2904d356738ea45ea25f8ef192bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43954c0b36be2904d356738ea45ea25f8ef192bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2/comments", "author": null, "committer": null, "parents": [{"sha": "f82a9d904e8adb894033aa75740c9759b17bea0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f82a9d904e8adb894033aa75740c9759b17bea0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f82a9d904e8adb894033aa75740c9759b17bea0f"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "39c9433d6443cdd04594cf8abb9aa6157e55a37f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2", "patch": "@@ -1,3 +1,11 @@\n+2014-04-29  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* Makefile.in (real_host_noncanonical): New variable.\n+\t(libsubdir): Use it.\n+\t* configure.ac (real_host_noncanonical): Compute.  Remove special\n+\tcase for intelmicemul.\n+\t* configure: Regenerate.\n+\n 2015-04-28  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/frv/elf-lib.h: New file."}, {"sha": "1ab188d632104b73cd8f44413cd7589cbef68886", "filename": "libgcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2/libgcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2/libgcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FMakefile.in?ref=d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2", "patch": "@@ -45,6 +45,7 @@ fixed_point = @fixed_point@\n with_aix_soname = @with_aix_soname@\n \n host_noncanonical = @host_noncanonical@\n+real_host_noncanonical = @real_host_noncanonical@\n target_noncanonical = @target_noncanonical@\n \n # List of extra object files that should be compiled for this target machine.\n@@ -185,7 +186,7 @@ STRIP = @STRIP@\n STRIP_FOR_TARGET = $(STRIP)\n \n # Directory in which the compiler finds libraries etc.\n-libsubdir = $(libdir)/gcc/$(host_noncanonical)/$(version)@accel_dir_suffix@\n+libsubdir = $(libdir)/gcc/$(real_host_noncanonical)/$(version)@accel_dir_suffix@\n # Used to install the shared libgcc.\n slibdir = @slibdir@\n # Maybe used for DLLs on Windows targets."}, {"sha": "e911a9dcb466fdd77483894e513acda29f570d24", "filename": "libgcc/configure", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2", "patch": "@@ -566,6 +566,7 @@ sfp_machine_header\n set_use_emutls\n set_have_cc_tls\n vis_hide\n+real_host_noncanonical\n accel_dir_suffix\n force_explicit_eh_registry\n fixed_point\n@@ -4778,17 +4779,14 @@ esac\n \n # Used for constructing correct paths for offload compilers.\n accel_dir_suffix=\n+real_host_noncanonical=${host_noncanonical}\n if test x\"$enable_as_accelerator_for\" != x; then\n   accel_dir_suffix=/accel/${target_noncanonical}\n-  case \"${target_noncanonical}\" in\n-    *-intelmicemul-*)\n-      # In this case we expect offload compiler to be built as native, so we\n-      # need to change install directory for driver to be able to find libgcc.\n-      host_noncanonical=${enable_as_accelerator_for} ;;\n-  esac\n+  real_host_noncanonical=${enable_as_accelerator_for}\n fi\n \n \n+\n if test x\"$enable_offload_targets\" != x; then\n   extra_parts=\"${extra_parts} crtoffloadbegin.o crtoffloadend.o\"\n fi"}, {"sha": "48fd5b9abc1beac8ec9e8719f74715deca1c9aed", "filename": "libgcc/configure.ac", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=d28ad5d4c5454c0a2ca24d6dcbbc9b2da5c0aaf2", "patch": "@@ -403,16 +403,13 @@ esac\n \n # Used for constructing correct paths for offload compilers.\n accel_dir_suffix=\n+real_host_noncanonical=${host_noncanonical}\n if test x\"$enable_as_accelerator_for\" != x; then\n   accel_dir_suffix=/accel/${target_noncanonical}\n-  case \"${target_noncanonical}\" in\n-    *-intelmicemul-*)\n-      # In this case we expect offload compiler to be built as native, so we\n-      # need to change install directory for driver to be able to find libgcc.\n-      host_noncanonical=${enable_as_accelerator_for} ;;\n-  esac\n+  real_host_noncanonical=${enable_as_accelerator_for}\n fi\n AC_SUBST(accel_dir_suffix)\n+AC_SUBST(real_host_noncanonical)\n \n if test x\"$enable_offload_targets\" != x; then\n   extra_parts=\"${extra_parts} crtoffloadbegin.o crtoffloadend.o\""}]}