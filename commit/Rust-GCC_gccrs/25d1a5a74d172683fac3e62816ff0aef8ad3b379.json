{"sha": "25d1a5a74d172683fac3e62816ff0aef8ad3b379", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVkMWE1YTc0ZDE3MjY4M2ZhYzNlNjI4MTZmZjBhZWY4YWQzYjM3OQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2015-01-17T00:41:52Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2015-01-17T00:41:52Z"}, "message": "cprop.c (do_local_cprop): Disallow replacement of fixed hard registers.\n\n\t* cprop.c (do_local_cprop): Disallow replacement of fixed\n\thard registers.\n\nFrom-SVN: r219786", "tree": {"sha": "907e3b5f119b8c42e572927a2f304f0bebd603e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/907e3b5f119b8c42e572927a2f304f0bebd603e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25d1a5a74d172683fac3e62816ff0aef8ad3b379", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25d1a5a74d172683fac3e62816ff0aef8ad3b379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25d1a5a74d172683fac3e62816ff0aef8ad3b379", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25d1a5a74d172683fac3e62816ff0aef8ad3b379/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ecec1eff783311415180f8d53cbbf782698960f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ecec1eff783311415180f8d53cbbf782698960f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ecec1eff783311415180f8d53cbbf782698960f"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "aa60d5ddbe2d298b981f3ed9976ffcfb207cbf63", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25d1a5a74d172683fac3e62816ff0aef8ad3b379/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25d1a5a74d172683fac3e62816ff0aef8ad3b379/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25d1a5a74d172683fac3e62816ff0aef8ad3b379", "patch": "@@ -1,3 +1,8 @@\n+2015-01-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* cprop.c (do_local_cprop): Disallow replacement of fixed\n+\thard registers.\n+\n 2015-01-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/62066"}, {"sha": "e8182dbfb8f196133c3516b1d9b47d5afed0be99", "filename": "gcc/cprop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25d1a5a74d172683fac3e62816ff0aef8ad3b379/gcc%2Fcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25d1a5a74d172683fac3e62816ff0aef8ad3b379/gcc%2Fcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcprop.c?ref=25d1a5a74d172683fac3e62816ff0aef8ad3b379", "patch": "@@ -1189,10 +1189,12 @@ do_local_cprop (rtx x, rtx_insn *insn)\n   rtx newreg = NULL, newcnst = NULL;\n \n   /* Rule out USE instructions and ASM statements as we don't want to\n-     change the hard registers mentioned.  */\n+     change the hard registers mentioned, and don't change fixed hard\n+     registers.  */\n   if (REG_P (x)\n       && (REGNO (x) >= FIRST_PSEUDO_REGISTER\n           || (GET_CODE (PATTERN (insn)) != USE\n+\t      && !fixed_regs[REGNO (x)]\n \t      && asm_noperands (PATTERN (insn)) < 0)))\n     {\n       cselib_val *val = cselib_lookup (x, GET_MODE (x), 0, VOIDmode);"}]}