{"sha": "4515e413cb72d3a71b41d3e85da1be03fa88677d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUxNWU0MTNjYjcyZDNhNzFiNDFkM2U4NWRhMWJlMDNmYTg4Njc3ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-05-22T09:55:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-05-22T09:55:49Z"}, "message": "re PR tree-optimization/85863 (ICE in compiling spec2006 fortran test case solib.fppized.f starting with r260283)\n\n2018-05-22  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/85863\n\t* tree-vect-stmts.c (vect_is_simple_cond): Only widen invariant\n\tcomparisons when vectype is specified.\n\t(vectorizable_condition): Do not specify vectype for\n\tvect_is_simple_cond when SLP vectorizing.\n\n\t* gfortran.fortran-torture/compile/pr85863.f: New testcase.\n\nFrom-SVN: r260501", "tree": {"sha": "2dfce6df605e1feeece53b2e077e8649db576436", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dfce6df605e1feeece53b2e077e8649db576436"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4515e413cb72d3a71b41d3e85da1be03fa88677d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4515e413cb72d3a71b41d3e85da1be03fa88677d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4515e413cb72d3a71b41d3e85da1be03fa88677d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4515e413cb72d3a71b41d3e85da1be03fa88677d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c5470754d0371c375ddf7f63b398fe97cf18c939", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5470754d0371c375ddf7f63b398fe97cf18c939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5470754d0371c375ddf7f63b398fe97cf18c939"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "c3ecb0be3a296d820406f5776a8e6a37ea7dbe17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4515e413cb72d3a71b41d3e85da1be03fa88677d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4515e413cb72d3a71b41d3e85da1be03fa88677d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4515e413cb72d3a71b41d3e85da1be03fa88677d", "patch": "@@ -1,3 +1,11 @@\n+2018-05-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/85863\n+\t* tree-vect-stmts.c (vect_is_simple_cond): Only widen invariant\n+\tcomparisons when vectype is specified.\n+\t(vectorizable_condition): Do not specify vectype for\n+\tvect_is_simple_cond when SLP vectorizing.\n+\n 2018-05-21  Michael Meissner  <meissner@linux.ibm.com>\n \n \tPR target/85657"}, {"sha": "939702c3187a3144f0c9c79748d91cc018bc0263", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4515e413cb72d3a71b41d3e85da1be03fa88677d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4515e413cb72d3a71b41d3e85da1be03fa88677d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4515e413cb72d3a71b41d3e85da1be03fa88677d", "patch": "@@ -1,3 +1,8 @@\n+2018-05-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/85863\n+\t* gfortran.fortran-torture/compile/pr85863.f: New testcase.\n+\n 2018-05-22  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/85841"}, {"sha": "57673fd0461639f97922479af69210a2329e666d", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/pr85863.f", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4515e413cb72d3a71b41d3e85da1be03fa88677d/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr85863.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4515e413cb72d3a71b41d3e85da1be03fa88677d/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr85863.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fpr85863.f?ref=4515e413cb72d3a71b41d3e85da1be03fa88677d", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-ffast-math -ftree-vectorize\" }\n+      SUBROUTINE SOBOOK(MHSO,HSOMAX,MS)\n+      IMPLICIT DOUBLE PRECISION(A-H,O-Z)\n+      COMPLEX*16 HSOT,HSO1(2)\n+      PARAMETER (ZERO=0.0D+00,TWO=2.0D+00)\n+      DIMENSION SOL1(3,2),SOL2(3)\n+      CALL FOO(SOL1,SOL2)\n+      SQRT2=SQRT(TWO)\n+      DO IH=1,MHSO\n+        IF(MS.EQ.0) THEN\n+          HSO1(IH) =  DCMPLX(ZERO,-SOL1(3,IH))\n+          HSOT =  DCMPLX(ZERO,-SOL2(3))\n+        ELSE\n+          HSO1(IH) =  DCMPLX(-SOL1(2,IH),SOL1(1,IH))/SQRT2\n+          HSOT =  DCMPLX(-SOL2(2),SOL2(1))/SQRT2\n+        ENDIF\n+      ENDDO\n+      HSOT=HSOT+HSO1(1)\n+      HSOMAX=MAX(HSOMAX,ABS(HSOT))\n+      RETURN\n+      END"}, {"sha": "169d8c029e8701e8b20c8cd5a816bb67bae5117e", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4515e413cb72d3a71b41d3e85da1be03fa88677d/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4515e413cb72d3a71b41d3e85da1be03fa88677d/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=4515e413cb72d3a71b41d3e85da1be03fa88677d", "patch": "@@ -8661,7 +8661,7 @@ vect_is_simple_cond (tree cond, vec_info *vinfo,\n \n   *comp_vectype = vectype1 ? vectype1 : vectype2;\n   /* Invariant comparison.  */\n-  if (! *comp_vectype)\n+  if (! *comp_vectype && vectype)\n     {\n       tree scalar_type = TREE_TYPE (lhs);\n       /* If we can widen the comparison to match vectype do so.  */\n@@ -8773,7 +8773,7 @@ vectorizable_condition (gimple *stmt, gimple_stmt_iterator *gsi,\n   else_clause = gimple_assign_rhs3 (stmt);\n \n   if (!vect_is_simple_cond (cond_expr, stmt_info->vinfo,\n-\t\t\t    &comp_vectype, &dts[0], vectype)\n+\t\t\t    &comp_vectype, &dts[0], slp_node ? NULL : vectype)\n       || !comp_vectype)\n     return false;\n "}]}