{"sha": "42b5ebf32cc8da61acd04925d8736c7827549dfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJiNWViZjMyY2M4ZGE2MWFjZDA0OTI1ZDg3MzZjNzgyNzU0OWRmYQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2016-08-12T15:23:34Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2016-08-12T15:23:34Z"}, "message": "rs6000.c (rs6000_builtin_vectorization_cost): Correct costs for vec_construct.\n\n2016-08-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost):\n\tCorrect costs for vec_construct.\n\nFrom-SVN: r239417", "tree": {"sha": "bf06d0240cfb2afe03fadf214b8cbd141e4c1fb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf06d0240cfb2afe03fadf214b8cbd141e4c1fb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42b5ebf32cc8da61acd04925d8736c7827549dfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42b5ebf32cc8da61acd04925d8736c7827549dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42b5ebf32cc8da61acd04925d8736c7827549dfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42b5ebf32cc8da61acd04925d8736c7827549dfa/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8eb414aa6c71225d941e24572d5cdd9ce6feee50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb414aa6c71225d941e24572d5cdd9ce6feee50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eb414aa6c71225d941e24572d5cdd9ce6feee50"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "49f0b6d073c1c6f21cf72b0ca406cc80edbde2c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42b5ebf32cc8da61acd04925d8736c7827549dfa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42b5ebf32cc8da61acd04925d8736c7827549dfa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42b5ebf32cc8da61acd04925d8736c7827549dfa", "patch": "@@ -1,3 +1,8 @@\n+2016-08-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost):\n+\tCorrect costs for vec_construct.\n+\n 2016-08-12  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/69848"}, {"sha": "e58ede1e9f278392c6110b7a20823ad36e5f8c57", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42b5ebf32cc8da61acd04925d8736c7827549dfa/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42b5ebf32cc8da61acd04925d8736c7827549dfa/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=42b5ebf32cc8da61acd04925d8736c7827549dfa", "patch": "@@ -5266,16 +5266,20 @@ rs6000_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n         return 2;\n \n       case vec_construct:\n-\telements = TYPE_VECTOR_SUBPARTS (vectype);\n+\t/* This is a rough approximation assuming non-constant elements\n+\t   constructed into a vector via element insertion.  FIXME:\n+\t   vec_construct is not granular enough for uniformly good\n+\t   decisions.  If the initialization is a splat, this is\n+\t   cheaper than we estimate.  Improve this someday.  */\n \telem_type = TREE_TYPE (vectype);\n \t/* 32-bit vectors loaded into registers are stored as double\n-\t   precision, so we need n/2 converts in addition to the usual\n-\t   n/2 merges to construct a vector of short floats from them.  */\n+\t   precision, so we need 2 permutes, 2 converts, and 1 merge\n+\t   to construct a vector of short floats from them.  */\n \tif (SCALAR_FLOAT_TYPE_P (elem_type)\n \t    && TYPE_PRECISION (elem_type) == 32)\n-\t  return elements + 1;\n+\t  return 5;\n \telse\n-\t  return elements / 2 + 1;\n+\t  return max (2, TYPE_VECTOR_SUBPARTS (vectype) - 1);\n \n       default:\n         gcc_unreachable ();"}]}