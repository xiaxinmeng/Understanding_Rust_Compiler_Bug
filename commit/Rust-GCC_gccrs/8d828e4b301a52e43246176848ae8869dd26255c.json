{"sha": "8d828e4b301a52e43246176848ae8869dd26255c", "node_id": "C_kwDOANBUbNoAKDhkODI4ZTRiMzAxYTUyZTQzMjQ2MTc2ODQ4YWU4ODY5ZGQyNjI1NWM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-05-09T14:32:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-09T14:32:00Z"}, "message": "Merge #1228\n\n1228: Fix match tests on 32bit systems r=philberty a=philberty\n\nPrinting i64's on 32bit systems requires the proper format specifier\r\nthis amends these test cases to 32bit integers so %i works as expected.\r\nI was able to use gdb to verify that these values are computed properly\r\nfrom the structure on 32 bit systems.\r\n\r\nKeeping the structures as i32 we can ignore platform-specific format\r\nspecifiers.\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "6d9c7bd2feb578bfb922a405a9ee3f33f06272e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d9c7bd2feb578bfb922a405a9ee3f33f06272e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d828e4b301a52e43246176848ae8869dd26255c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJieSXgCRBK7hj4Ov3rIwAAKqQIAHf7OOcNqx7TuE0r/z4gTa+s\nAX86aoH92x5SASUnVLG9LzL84IscGzD5RWL6h7JJoqXAFQqI3J6ZzwXTYMeYxv16\n9593GmNN/0YepgrXnGBwfBHTGuKLPbQawCJJvKOZ2WzGwN0NI9Ekiiji0sPw+P99\nAc46MYyN+lnpF4dq2b7xe5KRMdRTMnaGttPkecln20E77q0njhOte+QPw6oDPiQ9\nNvplZNonS7/hUy0rNsryhdSpuCenRtPQj08pbMhbx+euy9prOG3JCfAuOALPz4NQ\n4a2BB22ByZvRnqrIcwjkB3jNpCfae8XqWGfqXZCA9NW/6SLmsl9L1Z57Sxo2RXg=\n=k0Ka\n-----END PGP SIGNATURE-----\n", "payload": "tree 6d9c7bd2feb578bfb922a405a9ee3f33f06272e1\nparent 140f6a698b4d7157e6a33cd7b41c27b39ecbf76e\nparent dd213da6a3bd0587dc1e85a94674f935360ee5af\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1652106720 +0000\ncommitter GitHub <noreply@github.com> 1652106720 +0000\n\nMerge #1228\n\n1228: Fix match tests on 32bit systems r=philberty a=philberty\n\nPrinting i64's on 32bit systems requires the proper format specifier\r\nthis amends these test cases to 32bit integers so %i works as expected.\r\nI was able to use gdb to verify that these values are computed properly\r\nfrom the structure on 32 bit systems.\r\n\r\nKeeping the structures as i32 we can ignore platform-specific format\r\nspecifiers.\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d828e4b301a52e43246176848ae8869dd26255c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d828e4b301a52e43246176848ae8869dd26255c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d828e4b301a52e43246176848ae8869dd26255c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "140f6a698b4d7157e6a33cd7b41c27b39ecbf76e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/140f6a698b4d7157e6a33cd7b41c27b39ecbf76e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/140f6a698b4d7157e6a33cd7b41c27b39ecbf76e"}, {"sha": "dd213da6a3bd0587dc1e85a94674f935360ee5af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd213da6a3bd0587dc1e85a94674f935360ee5af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd213da6a3bd0587dc1e85a94674f935360ee5af"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e5af512f15d813aaa96b74a67d3d1cc64d93eb2a", "filename": "gcc/testsuite/rust/execute/torture/match1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d828e4b301a52e43246176848ae8869dd26255c/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmatch1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d828e4b301a52e43246176848ae8869dd26255c/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmatch1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmatch1.rs?ref=8d828e4b301a52e43246176848ae8869dd26255c", "patch": "@@ -7,7 +7,7 @@ enum Foo {\n     A,\n     B,\n     C(char),\n-    D { x: i64, y: i64 },\n+    D { x: i32, y: i32 },\n }\n \n fn inspect(f: Foo) {"}, {"sha": "8cded3044df046457589e7140003655efbe466d5", "filename": "gcc/testsuite/rust/execute/torture/match3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d828e4b301a52e43246176848ae8869dd26255c/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmatch3.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d828e4b301a52e43246176848ae8869dd26255c/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmatch3.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fmatch3.rs?ref=8d828e4b301a52e43246176848ae8869dd26255c", "patch": "@@ -7,7 +7,7 @@ enum Foo {\n     A,\n     B,\n     C(char),\n-    D { x: i64, y: i64 },\n+    D { x: i32, y: i32 },\n }\n \n fn inspect(f: Foo) {"}]}