{"sha": "bc436e10e0b892b6953e19776367170cd982367c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM0MzZlMTBlMGI4OTJiNjk1M2UxOTc3NjM2NzE3MGNkOTgyMzY3Yw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-04-12T21:58:54Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-04-12T21:58:54Z"}, "message": "re PR fortran/83064 (DO CONCURRENT and auto-parallelization)\n\n2018-04-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/83064\n\tPR testsuite/85346\n\t* trans-stmt.c (gfc_trans_forall_loop): Use annot_expr_ivdep_kind\n\tfor annotation and remove dependence on -ftree-parallelize-loops.\n\n2018-04-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/83064\n\tPR testsuite/85346\n\t* gfortran.dg/do_concurrent_5.f90: Dynamically allocate main work\n\tarray and move test to libgomp/testsuite/libgomp.fortran.\n\t* gfortran.dg/do_concurrent_6.f90: New test.\n\n2018-04-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/83064\n\tPR testsuite/85346\n\t* testsuite/libgomp.fortran/do_concurrent_5.f90: Move modified\n\ttest from gfortran.dg to here.\n\nFrom-SVN: r259359", "tree": {"sha": "da5f112edc134a59ec2b35f11b0d84c478bb05e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da5f112edc134a59ec2b35f11b0d84c478bb05e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc436e10e0b892b6953e19776367170cd982367c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc436e10e0b892b6953e19776367170cd982367c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc436e10e0b892b6953e19776367170cd982367c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc436e10e0b892b6953e19776367170cd982367c/comments", "author": null, "committer": null, "parents": [{"sha": "741346a2af437a013f9ba01742588d75f933fa78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/741346a2af437a013f9ba01742588d75f933fa78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/741346a2af437a013f9ba01742588d75f933fa78"}], "stats": {"total": 55, "additions": 46, "deletions": 9}, "files": [{"sha": "3064ab6e9214d4ea6c702d29590a54861184f365", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc436e10e0b892b6953e19776367170cd982367c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc436e10e0b892b6953e19776367170cd982367c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bc436e10e0b892b6953e19776367170cd982367c", "patch": "@@ -1,3 +1,10 @@\n+2018-04-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/83064\n+\tPR testsuite/85346\n+\t* trans-stmt.c (gfc_trans_forall_loop): Use annot_expr_ivdep_kind\n+\tfor annotation and remove dependence on -ftree-parallelize-loops.\n+\n 2018-04-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/85313"}, {"sha": "1952f6cdc0847fb6b945cddb9dab469291187dd3", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc436e10e0b892b6953e19776367170cd982367c/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc436e10e0b892b6953e19776367170cd982367c/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=bc436e10e0b892b6953e19776367170cd982367c", "patch": "@@ -3643,12 +3643,12 @@ gfc_trans_forall_loop (forall_info *forall_tmp, tree body,\n       cond = fold_build2_loc (input_location, LE_EXPR, logical_type_node,\n \t\t\t      count, build_int_cst (TREE_TYPE (count), 0));\n \n-      /* PR 83064 means that we cannot use the annotation if the\n-\t autoparallelizer is active.  */\n-      if (forall_tmp->do_concurrent && ! flag_tree_parallelize_loops)\n+      /* PR 83064 means that we cannot use annot_expr_parallel_kind until\n+       the autoparallelizer can hande this.  */\n+      if (forall_tmp->do_concurrent)\n \tcond = build3 (ANNOTATE_EXPR, TREE_TYPE (cond), cond,\n \t\t       build_int_cst (integer_type_node,\n-\t\t\t\t      annot_expr_parallel_kind),\n+\t\t\t\t      annot_expr_ivdep_kind),\n \t\t       integer_zero_node);\n \n       tmp = build1_v (GOTO_EXPR, exit_label);"}, {"sha": "16d39a283cfcf6c9fd4ba522552c9df680aff98d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc436e10e0b892b6953e19776367170cd982367c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc436e10e0b892b6953e19776367170cd982367c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc436e10e0b892b6953e19776367170cd982367c", "patch": "@@ -1,3 +1,11 @@\n+2018-04-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/83064\n+\tPR testsuite/85346\n+\t* gfortran.dg/do_concurrent_5.f90: Dynamically allocate main work\n+\tarray and move test to libgomp/testsuite/libgomp.fortran.\n+\t* gfortran.dg/do_concurrent_6.f90: New test.\n+\n 2018-04-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/85258"}, {"sha": "9585a9f96f431d9f5399cc6056726c8c194c320d", "filename": "gcc/testsuite/gfortran.dg/do_concurrent_6.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc436e10e0b892b6953e19776367170cd982367c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_concurrent_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc436e10e0b892b6953e19776367170cd982367c/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_concurrent_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_concurrent_6.f90?ref=bc436e10e0b892b6953e19776367170cd982367c", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+! { dg-additional-options \"-fdump-tree-original\" }\n+\n+program main\n+  real, dimension(100) :: a,b\n+  call random_number(a)\n+  do concurrent (i=1:100)\n+     b(i) = a(i)*a(i)\n+  end do\n+  print *,sum(a)\n+end program main\n+\n+! { dg-final { scan-tree-dump-times \"ivdep\" 1 \"original\" } }"}, {"sha": "9568a73738ef4f0b46b9e212131aac81dba63487", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc436e10e0b892b6953e19776367170cd982367c/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc436e10e0b892b6953e19776367170cd982367c/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=bc436e10e0b892b6953e19776367170cd982367c", "patch": "@@ -1,3 +1,10 @@\n+2018-04-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/83064\n+\tPR testsuite/85346\n+\t* testsuite/libgomp.fortran/do_concurrent_5.f90: Move modified\n+\ttest from gfortran.dg to here.\n+\n 2018-04-05  Tom de Vries  <tom@codesourcery.com>\n \n \tPR target/85204"}, {"sha": "6fb9d1e8d964ec245ffc954d6134ab268522148a", "filename": "libgomp/testsuite/libgomp.fortran/do_concurrent_5.f90", "status": "renamed", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc436e10e0b892b6953e19776367170cd982367c/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo_concurrent_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc436e10e0b892b6953e19776367170cd982367c/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo_concurrent_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdo_concurrent_5.f90?ref=bc436e10e0b892b6953e19776367170cd982367c", "patch": "@@ -1,17 +1,19 @@\n ! { dg-do  run }\n ! PR 83064 - this used to give wrong results.\n-! { dg-options \"-O3 -ftree-parallelize-loops=2\" }\n+! { dg-additional-options \"-O1 -ftree-parallelize-loops=2\" }\n ! Original test case by Christian Felter\n \n program main\n     use, intrinsic :: iso_fortran_env\n     implicit none\n \n     integer, parameter :: nsplit = 4\n-    integer(int64), parameter :: ne = 20000000\n-    integer(int64) :: stride, low(nsplit), high(nsplit), edof(ne), i\n+    integer(int64), parameter :: ne = 2**20\n+    integer(int64) :: stride, low(nsplit), high(nsplit), i\n     real(real64), dimension(nsplit) :: pi\n-    \n+    integer(int64), dimension(:), allocatable :: edof \n+\n+    allocate (edof(ne))\n     edof(1::4) = 1\n     edof(2::4) = 2\n     edof(3::4) = 3\n@@ -31,7 +33,7 @@ program main\n     do concurrent (i = 1:nsplit)\n         pi(i) = sum(compute( low(i), high(i) ))\n     end do\n-    if (abs (sum(pi) - atan(1.0d0)) > 1e-5) call abort\n+    if (abs (sum(pi) - atan(1.0d0)) > 1e-5) STOP 1\n     \n contains\n     ", "previous_filename": "gcc/testsuite/gfortran.dg/do_concurrent_5.f90"}]}