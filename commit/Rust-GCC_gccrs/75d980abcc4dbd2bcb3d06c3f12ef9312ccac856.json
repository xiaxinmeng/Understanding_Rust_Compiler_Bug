{"sha": "75d980abcc4dbd2bcb3d06c3f12ef9312ccac856", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVkOTgwYWJjYzRkYmQyYmNiM2QwNmMzZjEyZWY5MzEyY2NhYzg1Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-09-24T15:13:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-09-24T15:13:08Z"}, "message": "error.c (dump_expr): Print conversion between reference and pointer to the same type as \"*\" or \"&\".\n\n\t* error.c (dump_expr) [CASE_CONVERT]: Print conversion between\n\treference and pointer to the same type as \"*\" or \"&\".\n\nFrom-SVN: r164597", "tree": {"sha": "8efc3a34511bdfb3668ce18abfd09a592bd99821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8efc3a34511bdfb3668ce18abfd09a592bd99821"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32990d5bc27147c3f6e53324b37089b104c864cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32990d5bc27147c3f6e53324b37089b104c864cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32990d5bc27147c3f6e53324b37089b104c864cc"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "f457d0cf019dce7a49c0ebfdf237cde4eaaef9c2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=75d980abcc4dbd2bcb3d06c3f12ef9312ccac856", "patch": "@@ -1,3 +1,8 @@\n+2010-09-24  Jason Merrill  <jason@redhat.com>\n+\n+\t* error.c (dump_expr) [CASE_CONVERT]: Print conversion between\n+\treference and pointer to the same type as \"*\" or \"&\".\n+\n 2010-09-24  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* typeck.c (warn_args_num): Use warning 'too many arguments to"}, {"sha": "be3dd2c9ad18b932eb270790630cabbd4c3c32cf", "filename": "gcc/cp/error.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=75d980abcc4dbd2bcb3d06c3f12ef9312ccac856", "patch": "@@ -1949,8 +1949,21 @@ dump_expr (tree t, int flags)\n     case VIEW_CONVERT_EXPR:\n       {\n \ttree op = TREE_OPERAND (t, 0);\n-\n-\tif (!same_type_p (TREE_TYPE (op), TREE_TYPE (t)))\n+\ttree ttype = TREE_TYPE (t);\n+\ttree optype = TREE_TYPE (op);\n+\n+\tif (TREE_CODE (ttype) != TREE_CODE (optype)\n+\t    && POINTER_TYPE_P (ttype)\n+\t    && POINTER_TYPE_P (optype)\n+\t    && same_type_p (TREE_TYPE (optype),\n+\t\t\t    TREE_TYPE (ttype)))\n+\t  {\n+\t    if (TREE_CODE (ttype) == REFERENCE_TYPE)\n+\t      dump_unary_op (\"*\", t, flags);\n+\t    else\n+\t      dump_unary_op (\"&\", t, flags);\n+\t  }\n+\telse if (!same_type_p (TREE_TYPE (op), TREE_TYPE (t)))\n \t  {\n \t    /* It is a cast, but we cannot tell whether it is a\n \t       reinterpret or static cast. Use the C style notation.  */"}, {"sha": "659dab282b99a09997a71b5b6b08c4670ee94901", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75d980abcc4dbd2bcb3d06c3f12ef9312ccac856", "patch": "@@ -1,3 +1,7 @@\n+2010-09-24  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/other/error10.C: Adjust expected output.\n+\n 2010-09-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/45234"}, {"sha": "26f7ca53f293c4d6cddfaa2d53cdb1ba60e314e7", "filename": "gcc/testsuite/g++.dg/other/error10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d980abcc4dbd2bcb3d06c3f12ef9312ccac856/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror10.C?ref=75d980abcc4dbd2bcb3d06c3f12ef9312ccac856", "patch": "@@ -6,7 +6,7 @@ template<int> struct A {};\n \n template<int N>\n void foo(const A<N> &a)\n-{ -A<N>(a); } // { dg-error \"\\\\(\\\\(const A<0>\\\\*\\\\)a\\\\)\" \"\" }\n+{ -A<N>(a); } // { dg-error \"\\\\(\\\\* & a\\\\)\" \"\" }\n \n void bar()\n {"}]}