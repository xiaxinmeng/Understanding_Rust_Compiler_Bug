{"sha": "69a8af43607b00f63fdc84cc1d267eea4c4dc39e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlhOGFmNDM2MDdiMDBmNjNmZGM4NGNjMWQyNjdlZWE0YzRkYzM5ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@paru.cas.cz", "date": "1999-04-02T10:44:02Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-02T10:44:02Z"}, "message": "i386.c (print_operand_address, case REG): Do not use ESI addressing mode for the K6.\n\n        * i386.c (print_operand_address, case REG): Do not use ESI addressing\n        mode for the K6.\n        * i386.c (print_operand_address, case MULT): Use more efficient\n        encoding (mult (reg) (const_int 2)).\n\nFrom-SVN: r26116", "tree": {"sha": "98a2b8c2178850fa0cc6ce74f4ea55937bcd88da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98a2b8c2178850fa0cc6ce74f4ea55937bcd88da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69a8af43607b00f63fdc84cc1d267eea4c4dc39e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a8af43607b00f63fdc84cc1d267eea4c4dc39e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a8af43607b00f63fdc84cc1d267eea4c4dc39e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a8af43607b00f63fdc84cc1d267eea4c4dc39e/comments", "author": null, "committer": null, "parents": [{"sha": "57b1ca433d13996af8de478aefa2f72a24758434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b1ca433d13996af8de478aefa2f72a24758434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57b1ca433d13996af8de478aefa2f72a24758434"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "af1042da6df5ca2dd33944a18df260acb1743647", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a8af43607b00f63fdc84cc1d267eea4c4dc39e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a8af43607b00f63fdc84cc1d267eea4c4dc39e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69a8af43607b00f63fdc84cc1d267eea4c4dc39e", "patch": "@@ -1,3 +1,11 @@\n+Fri Apr  2 11:36:12 1999  Jan Hubicka  (hubicka@paru.cas.cz)\n+\n+\t* i386.c (print_operand_address, case REG): Do not use ESI addressing\n+\tmode for the K6.\n+\n+\t* i386.c (print_operand_address, case MULT): Use more efficient\n+\tencoding (mult (reg) (const_int 2)).\n+\n Thu Apr  1 17:01:50 1999  Richard Henderson  <rth@cygnus.com>\n \n \tMove over patch from Bernd Schmidt from GC branch:"}, {"sha": "7a3c332ac0c14acde78e9852089bebe0ed30c802", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a8af43607b00f63fdc84cc1d267eea4c4dc39e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a8af43607b00f63fdc84cc1d267eea4c4dc39e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=69a8af43607b00f63fdc84cc1d267eea4c4dc39e", "patch": "@@ -3772,6 +3772,11 @@ print_operand_address (file, addr)\n   switch (GET_CODE (addr))\n     {\n     case REG:\n+      /* ESI addressing makes instruction vector decoded on the K6.  We can\n+\t avoid this by ESI+0 addressing.  */\n+      if (REGNO_REG_CLASS (REGNO (addr)) == SIREG\n+\t  && ix86_cpu == PROCESSOR_K6 && !optimize_size)\n+\toutput_addr_const (file, const0_rtx);\n       ADDR_BEG (file);\n       fprintf (file, \"%se\", RP);\n       fputs (hi_reg_name[REGNO (addr)], file);\n@@ -3887,8 +3892,16 @@ print_operand_address (file, addr)\n \t    ireg = XEXP (addr, 0);\n \t  }\n \n-\toutput_addr_const (file, const0_rtx);\n-\tPRINT_B_I_S (NULL_RTX, ireg, scale, file);\n+\t/* (reg,reg,) is shorter than (,reg,2).  */\n+\tif(scale == 2)\n+\t  {\n+\t    PRINT_B_I_S (ireg, ireg, 1, file);\n+\t  } \n+\telse \n+\t  {\n+\t    output_addr_const (file, const0_rtx);\n+\t    PRINT_B_I_S (NULL_RTX, ireg, scale, file);\n+\t  }\n       }\n       break;\n "}]}