{"sha": "8b968bd15512fc8905e53bfb7ab326d0cacb147d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI5NjhiZDE1NTEyZmM4OTA1ZTUzYmZiN2FiMzI2ZDBjYWNiMTQ3ZA==", "commit": {"author": {"name": "Matthew Woodcraft", "email": "mattheww@chiark.greenend.org.uk", "date": "2002-05-31T21:01:28Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-05-31T21:01:28Z"}, "message": "gcc.c (cpp_unique_options): Remove \"-d\" options.\n\n        * gcc.c (cpp_unique_options): Remove \"-d\" options.\n        (cpp_debug_options): New spec string.\n        (default_compilers): Use it.\n        * objc/lang-specs.h: Likewise.\n        * cp/lang-specs.h: Likewise.\n        * f/lang-specs.h: Likewise.\n\nFrom-SVN: r54121", "tree": {"sha": "9c4109cc13d3f32305225743e2636a77f228f461", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c4109cc13d3f32305225743e2636a77f228f461"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b968bd15512fc8905e53bfb7ab326d0cacb147d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b968bd15512fc8905e53bfb7ab326d0cacb147d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b968bd15512fc8905e53bfb7ab326d0cacb147d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b968bd15512fc8905e53bfb7ab326d0cacb147d/comments", "author": {"login": "mattheww", "id": 395747, "node_id": "MDQ6VXNlcjM5NTc0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/395747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattheww", "html_url": "https://github.com/mattheww", "followers_url": "https://api.github.com/users/mattheww/followers", "following_url": "https://api.github.com/users/mattheww/following{/other_user}", "gists_url": "https://api.github.com/users/mattheww/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattheww/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattheww/subscriptions", "organizations_url": "https://api.github.com/users/mattheww/orgs", "repos_url": "https://api.github.com/users/mattheww/repos", "events_url": "https://api.github.com/users/mattheww/events{/privacy}", "received_events_url": "https://api.github.com/users/mattheww/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "efe1f3579517846471024d65e165da022e57ef45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe1f3579517846471024d65e165da022e57ef45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe1f3579517846471024d65e165da022e57ef45"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "098f7f2db6b6f6d00110506feaa72e799ea45c2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b968bd15512fc8905e53bfb7ab326d0cacb147d", "patch": "@@ -1,3 +1,10 @@\n+2002-05-31  Matthew Woodcraft  <mattheww@chiark.greenend.org.uk>\n+\n+\t* gcc.c (cpp_unique_options): Remove \"-d\" options.\n+\t(cpp_debug_options): New spec string.\n+\t(default_compilers): Use it.\n+\t* objc/lang-specs.h: Likewise.\n+\n 2002-05-31  Nathanael Nerode  <neroden@twcny.rr.com>\n \n \t* gcc/Makefile.in: Replace HOST_PREFIX, HOST_PREFIX_1 with "}, {"sha": "75e7599869a78dbed35e0e06cb3cbec0bafa2920", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8b968bd15512fc8905e53bfb7ab326d0cacb147d", "patch": "@@ -1,3 +1,7 @@\n+2002-05-31  Matthew Woodcraft  <mattheww@chiark.greenend.org.uk>\n+\n+\t* lang-specs.h: Use cpp_debug_options.\n+\n 2002-05-28  Zack Weinberg  <zack@codesourcery.com>\n \n \t* mangle.c, tree.c: Include real.h."}, {"sha": "8d220eefab6f9227bfa50d3ccf41aa14e615de45", "filename": "gcc/cp/lang-specs.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Fcp%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Fcp%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-specs.h?ref=8b968bd15512fc8905e53bfb7ab326d0cacb147d", "patch": "@@ -39,7 +39,8 @@ Boston, MA 02111-1307, USA.  */\n        %{!Wno-deprecated:-D__DEPRECATED}\\\n        %{!fno-exceptions:-D__EXCEPTIONS}\\\n        -D__GXX_ABI_VERSION=100\\\n-       %{ansi:-D__STRICT_ANSI__ -trigraphs -$} %(cpp_options)}\\\n+       %{ansi:-D__STRICT_ANSI__ -trigraphs -$} %(cpp_options)\\\n+       %(cpp_debug_options)}\\\n      %{!E:%{!M:%{!MM:\\\n        %{save-temps:cc1plus -E \\\n \t\t    %{!no-gcc:-D__GNUG__=%v1}\\"}, {"sha": "005b151bbdc6f02299977b04988cb5346a223163", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=8b968bd15512fc8905e53bfb7ab326d0cacb147d", "patch": "@@ -1,3 +1,7 @@\n+2002-05-31  Matthew Woodcraft  <mattheww@chiark.greenend.org.uk>\n+\n+\t* lang-specs.h: Use cpp_debug_options.\n+\n 2002-05-28  Zack Weinberg  <zack@codesourcery.com>\n \n \t* bld.c, com.c, expr.c, target.c: Include real.h."}, {"sha": "c22837a7b938d87a28ced1f7136013d7944b2348", "filename": "gcc/f/lang-specs.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Ff%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Ff%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang-specs.h?ref=8b968bd15512fc8905e53bfb7ab326d0cacb147d", "patch": "@@ -28,7 +28,9 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n   {\".fpp\", \"@f77-cpp-input\", 0},\n   {\".FPP\", \"@f77-cpp-input\", 0},\n   {\"@f77-cpp-input\",\n-   \"tradcpp0 -lang-fortran %(cpp_options) %{!M:%{!MM:%{!E:%{!pipe:%g.f} |\\n\\\n+   \"tradcpp0 -lang-fortran %(cpp_options) \\\n+        %{E|M|MM:%(cpp_debug_options)}\\\n+        %{!M:%{!MM:%{!E:%{!pipe:%g.f} |\\n\\\n     f771 %{!pipe:%g.f} %(cc1_options) %{I*} %{!fsyntax-only:%(invoke_as)}}}}\", 0},\n   {\".r\", \"@ratfor\", 0},\n   {\"@ratfor\","}, {"sha": "50b219f3569e660073697df437705c7d4ad67022", "filename": "gcc/gcc.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=8b968bd15512fc8905e53bfb7ab326d0cacb147d", "patch": "@@ -694,9 +694,13 @@ static const char *cpp_unique_options =\n /* This contains cpp options which are common with cc1_options and are passed\n    only when preprocessing only to avoid duplication.  */\n static const char *cpp_options =\n-\"%(cpp_unique_options) %{std*} %{d*} %{W*&pedantic*} %{w} %{m*} %{f*}\\\n+\"%(cpp_unique_options) %{std*} %{W*&pedantic*} %{w} %{m*} %{f*}\\\n  %{O*} %{undef}\";\n \n+/* This contains cpp options which are not passed when the preprocessor\n+   output will be used by another program.  */\n+static const char *cpp_debug_options = \"%{d*}\";\n+\n /* NB: This is shared amongst all front-ends.  */\n static const char *cc1_options =\n \"%{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n@@ -832,7 +836,8 @@ static const struct compiler default_compilers[] =\n   {\"@c\",\n    /* cc1 has an integrated ISO C preprocessor.  We should invoke the\n       external preprocessor if -save-temps is given.  */\n-     \"%{E|M|MM:%(trad_capable_cpp) %{ansi:-std=c89} %(cpp_options)}\\\n+     \"%{E|M|MM:%(trad_capable_cpp) %{ansi:-std=c89} %(cpp_options)\\\n+\t  %(cpp_debug_options)}\\\n       %{!E:%{!M:%{!MM:\\\n           %{traditional|ftraditional:\\\n %eGNU C no longer supports -traditional without -E}\\\n@@ -848,7 +853,8 @@ static const struct compiler default_compilers[] =\n   {\".h\", \"@c-header\", 0},\n   {\"@c-header\",\n    \"%{!E:%ecompilation of header file requested} \\\n-    %(trad_capable_cpp) %{ansi:-std=c89} %(cpp_options)\", 0},\n+    %(trad_capable_cpp) %{ansi:-std=c89} %(cpp_options) %(cpp_debug_options)\",\n+   0},\n   {\".i\", \"@cpp-output\", 0},\n   {\"@cpp-output\",\n    \"%{!M:%{!MM:%{!E:cc1 -fpreprocessed %i %(cc1_options) %{!fsyntax-only:%(invoke_as)}}}}\", 0},\n@@ -858,6 +864,7 @@ static const struct compiler default_compilers[] =\n   {\".S\", \"@assembler-with-cpp\", 0},\n   {\"@assembler-with-cpp\",\n    \"%(trad_capable_cpp) -lang-asm %(cpp_options)\\\n+      %{E|M|MM:%(cpp_debug_options)}\\\n       %{!M:%{!MM:%{!E:%{!S:-o %{|!pipe:%g.s} |\\n\\\n        as %(asm_debug) %(asm_options) %{!pipe:%g.s} %A }}}}\", 0},\n #include \"specs.h\"\n@@ -1369,6 +1376,7 @@ static struct spec_list static_specs[] =\n   INIT_STATIC_SPEC (\"invoke_as\",\t\t&invoke_as),\n   INIT_STATIC_SPEC (\"cpp\",\t\t\t&cpp_spec),\n   INIT_STATIC_SPEC (\"cpp_options\",\t\t&cpp_options),\n+  INIT_STATIC_SPEC (\"cpp_debug_options\",\t&cpp_debug_options),\n   INIT_STATIC_SPEC (\"cpp_unique_options\",\t&cpp_unique_options),\n   INIT_STATIC_SPEC (\"trad_capable_cpp\",\t\t&trad_capable_cpp),\n   INIT_STATIC_SPEC (\"cc1\",\t\t\t&cc1_spec),"}, {"sha": "e4c1e0fbaa6fec5e27b965e8eb528c8f4796300f", "filename": "gcc/objc/lang-specs.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Fobjc%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b968bd15512fc8905e53bfb7ab326d0cacb147d/gcc%2Fobjc%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Flang-specs.h?ref=8b968bd15512fc8905e53bfb7ab326d0cacb147d", "patch": "@@ -25,7 +25,8 @@ Boston, MA 02111-1307, USA.  */\n   {\"@objective-c\",\n    /* cc1obj has an integrated ISO C preprocessor.  We should invoke the\n       external preprocessor if -save-temps or -traditional is given.  */\n-     \"%{E|M|MM:%(trad_capable_cpp) -lang-objc %{ansi:-std=c89} %(cpp_options)}\\\n+     \"%{E|M|MM:%(trad_capable_cpp)\\\n+          -lang-objc %{ansi:-std=c89} %(cpp_options) %(cpp_debug_options)}\\\n       %{!E:%{!M:%{!MM:\\\n \t%{traditional|ftraditional|traditional-cpp:\\\n %eGNU Objective C no longer supports traditional compilation}\\"}]}