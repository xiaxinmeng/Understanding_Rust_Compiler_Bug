{"sha": "e34716b8dd8836a565b4cf0c26f7244161f194f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM0NzE2YjhkZDg4MzZhNTY1YjRjZjBjMjZmNzI0NDE2MWYxOTRmMQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2019-09-17T08:02:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-17T08:02:56Z"}, "message": "[Ada] Fix rounding of fixed-point arithmetic operation\n\nFixed-point multiplication, division and conversion may lead to calling\nthe function Double_Divide in s-arit64 runtime unit. In the special case\nwhere arguments have the special values X = -2**63 and the absolute\nvalue of the product of its other arguments Y*Z = 2**64, the rounded\nvalue should be either -1 or 1, but currently Double_Divide returns a\nquotient of 0.\n\nRounding only applies when Round attribute is called on the arithmetic\noperation for a decimal fixed-point result, or the result type is\ninteger.\n\nThis fixes correctly applies rounding away from 0 in that special case.\n\n2019-09-17  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/s-arit64.adb (Double_Divide): Correctly handle the\n\tspecial case when rounding.\n\ngcc/testsuite/\n\n\t* gnat.dg/fixedpnt7.adb: New testcase.\n\nFrom-SVN: r275796", "tree": {"sha": "65a5f634701b28725bcded695f9b90b8a2b74351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65a5f634701b28725bcded695f9b90b8a2b74351"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e34716b8dd8836a565b4cf0c26f7244161f194f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34716b8dd8836a565b4cf0c26f7244161f194f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e34716b8dd8836a565b4cf0c26f7244161f194f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34716b8dd8836a565b4cf0c26f7244161f194f1/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d4fcc9f622ee428849091c51108a4823819e9a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d4fcc9f622ee428849091c51108a4823819e9a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d4fcc9f622ee428849091c51108a4823819e9a6"}], "stats": {"total": 72, "additions": 64, "deletions": 8}, "files": [{"sha": "6c4eaf762ef602f08f27ebc81bc2d7b38bc84617", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34716b8dd8836a565b4cf0c26f7244161f194f1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34716b8dd8836a565b4cf0c26f7244161f194f1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e34716b8dd8836a565b4cf0c26f7244161f194f1", "patch": "@@ -1,3 +1,8 @@\n+2019-09-17  Yannick Moy  <moy@adacore.com>\n+\n+\t* libgnat/s-arit64.adb (Double_Divide): Correctly handle the\n+\tspecial case when rounding.\n+\n 2019-09-17  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch3.adb (Complete_Private_Subtype): Propagate attributes"}, {"sha": "ede756292e673de96364377c286c0964367d78e1", "filename": "gcc/ada/libgnat/s-arit64.adb", "status": "modified", "additions": 35, "deletions": 8, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34716b8dd8836a565b4cf0c26f7244161f194f1/gcc%2Fada%2Flibgnat%2Fs-arit64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34716b8dd8836a565b4cf0c26f7244161f194f1/gcc%2Fada%2Flibgnat%2Fs-arit64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-arit64.adb?ref=e34716b8dd8836a565b4cf0c26f7244161f194f1", "patch": "@@ -147,13 +147,31 @@ package body System.Arith_64 is\n          Raise_Error;\n       end if;\n \n+      --  Set final signs (RM 4.5.5(27-30))\n+\n+      Den_Pos := (Y < 0) = (Z < 0);\n+\n       --  Compute Y * Z. Note that if the result overflows 64 bits unsigned,\n-      --  then the rounded result is clearly zero (since the dividend is at\n-      --  most 2**63 - 1, the extra bit of precision is nice here).\n+      --  then the rounded result is zero, except for the very special case\n+      --  where X = -2**63 and abs(Y*Z) = 2**64, when Round is True.\n \n       if Yhi /= 0 then\n          if Zhi /= 0 then\n-            Q := 0;\n+\n+            --  Handle the special case when Round is True\n+\n+            if Yhi = 1\n+              and then Zhi = 1\n+              and then Ylo = 0\n+              and then Zlo = 0\n+              and then X = Int64'First\n+              and then Round\n+            then\n+               Q := (if Den_Pos then -1 else 1);\n+            else\n+               Q := 0;\n+            end if;\n+\n             R := X;\n             return;\n          else\n@@ -168,17 +186,26 @@ package body System.Arith_64 is\n       T2 := T2 + Hi (T1);\n \n       if Hi (T2) /= 0 then\n-         Q := 0;\n+\n+         --  Handle the special case when Round is True\n+\n+         if Hi (T2) = 1\n+           and then Lo (T2) = 0\n+           and then Lo (T1) = 0\n+           and then X = Int64'First\n+           and then Round\n+         then\n+            Q := (if Den_Pos then -1 else 1);\n+         else\n+            Q := 0;\n+         end if;\n+\n          R := X;\n          return;\n       end if;\n \n       Du := Lo (T2) & Lo (T1);\n \n-      --  Set final signs (RM 4.5.5(27-30))\n-\n-      Den_Pos := (Y < 0) = (Z < 0);\n-\n       --  Check overflow case of largest negative number divided by -1\n \n       if X = Int64'First and then Du = 1 and then not Den_Pos then"}, {"sha": "56d58cc64a2613ebf8670c2bd4e431f24031c575", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34716b8dd8836a565b4cf0c26f7244161f194f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34716b8dd8836a565b4cf0c26f7244161f194f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e34716b8dd8836a565b4cf0c26f7244161f194f1", "patch": "@@ -1,3 +1,7 @@\n+2019-09-17  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat.dg/fixedpnt7.adb: New testcase.\n+\n 2019-09-17  Yannick Moy  <moy@adacore.com>\n \n \t* gnat.dg/multfixed.adb: New testcase."}, {"sha": "635b9847db7f0d32da3d9e81ad3d243408d8c17a", "filename": "gcc/testsuite/gnat.dg/fixedpnt7.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34716b8dd8836a565b4cf0c26f7244161f194f1/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34716b8dd8836a565b4cf0c26f7244161f194f1/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt7.adb?ref=e34716b8dd8836a565b4cf0c26f7244161f194f1", "patch": "@@ -0,0 +1,20 @@\n+--  { dg-do run }\n+\n+procedure Fixedpnt7 is\n+   type F1 is delta 1.0 range -2.0**63 .. 0.0\n+     with Small => 1.0;\n+   type F2 is delta 4.0 range 0.0 .. 2.0**64\n+     with Small => 4.0;\n+   type D is delta 1.0 digits 18;\n+\n+   XX : constant := -2.0**63;\n+   YY : constant := 2.0**64;\n+\n+   X : F1 := XX;\n+   Y : F2 := YY;\n+   U : D := D'Round(X / Y);\n+begin\n+   if U /= -1.0 then\n+      raise Program_Error;\n+   end if;\n+end Fixedpnt7;\n\\ No newline at end of file"}]}