{"sha": "f5df292efc42b912b8babdd3593545fa3ec0842c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVkZjI5MmVmYzQyYjkxMmI4YmFiZGQzNTkzNTQ1ZmEzZWMwODQyYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-12-27T03:55:29Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-12-27T03:55:29Z"}, "message": "(store_bit_field): If VALUE needs to be narrowed, do\nit with gen_lowpart, not an explicit SUBREG.\n\nFrom-SVN: r2920", "tree": {"sha": "a470983d15aef01440ea07de263ad3c9c3f8ee32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a470983d15aef01440ea07de263ad3c9c3f8ee32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5df292efc42b912b8babdd3593545fa3ec0842c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5df292efc42b912b8babdd3593545fa3ec0842c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5df292efc42b912b8babdd3593545fa3ec0842c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5df292efc42b912b8babdd3593545fa3ec0842c/comments", "author": null, "committer": null, "parents": [{"sha": "66212c2f764860e8b40ec23c1a45b9bf754c5354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66212c2f764860e8b40ec23c1a45b9bf754c5354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66212c2f764860e8b40ec23c1a45b9bf754c5354"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "2c95a86374eee54b55b44c33449ddb30329200b1", "filename": "gcc/expmed.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5df292efc42b912b8babdd3593545fa3ec0842c/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5df292efc42b912b8babdd3593545fa3ec0842c/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=f5df292efc42b912b8babdd3593545fa3ec0842c", "patch": "@@ -402,12 +402,18 @@ store_bit_field (str_rtx, bitsize, bitnum, fieldmode, value, align, total_size)\n \t  if (GET_MODE_BITSIZE (GET_MODE (value)) >= bitsize)\n \t    {\n \t      /* Optimization: Don't bother really extending VALUE\n-\t\t if it has all the bits we will actually use.  */\n+\t\t if it has all the bits we will actually use.  However,\n+\t\t if we must narrow it, be sure we do it correctly.  */\n \n-\t      /* Avoid making subreg of a subreg, or of a mem.  */\n-\t      if (GET_CODE (value1) != REG)\n+\t      if (GET_MODE_SIZE (GET_MODE (value)) < GET_MODE_SIZE (maxmode))\n+\t\t{\n+\t\t  /* Avoid making subreg of a subreg, or of a mem.  */\n+\t\t  if (GET_CODE (value1) != REG)\n \t\tvalue1 = copy_to_reg (value1);\n-\t      value1 = gen_rtx (SUBREG, maxmode, value1, 0);\n+\t\t  value1 = gen_rtx (SUBREG, maxmode, value1, 0);\n+\t\t}\n+\t      else\n+\t\tvalue1 = gen_lowpart (maxmode, value1);\n \t    }\n \t  else if (!CONSTANT_P (value))\n \t    /* Parse phase is supposed to make VALUE's data type"}]}