{"sha": "8a2cb59f1c4a4822f727a5cd8fdfc7d87636508e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGEyY2I1OWYxYzRhNDgyMmY3MjdhNWNkOGZkZmM3ZDg3NjM2NTA4ZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-10-04T18:52:22Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-10-04T18:52:22Z"}, "message": "reflect: Fix calling Interface method on value created by MakeFunc.\n\nFrom-SVN: r203212", "tree": {"sha": "8959671884352d02a3071c84bdd700af6043564d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8959671884352d02a3071c84bdd700af6043564d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a2cb59f1c4a4822f727a5cd8fdfc7d87636508e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2cb59f1c4a4822f727a5cd8fdfc7d87636508e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a2cb59f1c4a4822f727a5cd8fdfc7d87636508e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2cb59f1c4a4822f727a5cd8fdfc7d87636508e/comments", "author": null, "committer": null, "parents": [{"sha": "c6d2bfbb441ed464ed61e0ee7045c77cf4a94b06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d2bfbb441ed464ed61e0ee7045c77cf4a94b06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6d2bfbb441ed464ed61e0ee7045c77cf4a94b06"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "526f09bb2ca1acaaa19f333aeb4a7712bfc8df63", "filename": "libgo/go/reflect/all_test.go", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a2cb59f1c4a4822f727a5cd8fdfc7d87636508e/libgo%2Fgo%2Freflect%2Fall_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a2cb59f1c4a4822f727a5cd8fdfc7d87636508e/libgo%2Fgo%2Freflect%2Fall_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fall_test.go?ref=8a2cb59f1c4a4822f727a5cd8fdfc7d87636508e", "patch": "@@ -1454,6 +1454,30 @@ func TestMakeFunc(t *testing.T) {\n \t}\n }\n \n+func TestMakeFuncInterface(t *testing.T) {\n+\tswitch runtime.GOARCH {\n+\tcase \"amd64\", \"386\":\n+\tdefault:\n+\t\tt.Skip(\"MakeFunc not implemented for \" + runtime.GOARCH)\n+\t}\n+\n+\tfn := func(i int) int { return i }\n+\tincr := func(in []Value) []Value {\n+\t\treturn []Value{ValueOf(int(in[0].Int() + 1))}\n+\t}\n+\tfv := MakeFunc(TypeOf(fn), incr)\n+\tValueOf(&fn).Elem().Set(fv)\n+\tif r := fn(2); r != 3 {\n+\t\tt.Errorf(\"Call returned %d, want 3\", r)\n+\t}\n+\tif r := fv.Call([]Value{ValueOf(14)})[0].Int(); r != 15 {\n+\t\tt.Errorf(\"Call returned %d, want 15\", r)\n+\t}\n+\tif r := fv.Interface().(func(int) int)(26); r != 27 {\n+\t\tt.Errorf(\"Call returned %d, want 27\", r)\n+\t}\n+}\n+\n type Point struct {\n \tx, y int\n }"}, {"sha": "3e8085bec65d81839e14fc6ad4b52db2371cc20c", "filename": "libgo/go/reflect/makefunc.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a2cb59f1c4a4822f727a5cd8fdfc7d87636508e/libgo%2Fgo%2Freflect%2Fmakefunc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a2cb59f1c4a4822f727a5cd8fdfc7d87636508e/libgo%2Fgo%2Freflect%2Fmakefunc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefunc.go?ref=8a2cb59f1c4a4822f727a5cd8fdfc7d87636508e", "patch": "@@ -63,7 +63,7 @@ func MakeFunc(typ Type, fn func(args []Value) (results []Value)) Value {\n \n \timpl := &makeFuncImpl{code: code, typ: ftyp, fn: fn}\n \n-\treturn Value{t, unsafe.Pointer(impl), flag(Func) << flagKindShift}\n+\treturn Value{t, unsafe.Pointer(&impl), flag(Func<<flagKindShift) | flagIndir}\n }\n \n // makeFuncStub is an assembly function that is the code half of"}]}