{"sha": "ec233c75fbec8a4a8dd5a8dc3479acc44eeb1afa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMyMzNjNzVmYmVjOGE0YThkZDVhOGRjMzQ3OWFjYzQ0ZWViMWFmYQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-05-23T07:05:14Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-05-23T07:05:14Z"}, "message": "libstdc++-v3-dg.exp (libstdc++-v3-init): Set ld_library_path.\n\n\n2001-05-22  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tlibstdc++/2841\n\t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Set\n\tld_library_path.\n\t(libstdc++-v3_set_ld_library_path): New, copied from g++.exp.\n\t(libstdc++-v3-finish): Remove.\n\t(libstdc++-v3_exit): Remove.\n\nFrom-SVN: r42487", "tree": {"sha": "a7a5c9eee4aaba601a1166dd58c393f1e12c808d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7a5c9eee4aaba601a1166dd58c393f1e12c808d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec233c75fbec8a4a8dd5a8dc3479acc44eeb1afa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec233c75fbec8a4a8dd5a8dc3479acc44eeb1afa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec233c75fbec8a4a8dd5a8dc3479acc44eeb1afa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec233c75fbec8a4a8dd5a8dc3479acc44eeb1afa/comments", "author": null, "committer": null, "parents": [{"sha": "d5bf11434788c415a53f27a7f5fc278920941869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5bf11434788c415a53f27a7f5fc278920941869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5bf11434788c415a53f27a7f5fc278920941869"}], "stats": {"total": 72, "additions": 40, "deletions": 32}, "files": [{"sha": "fe5bdc3a6f37d4fd565533a3a5ef2e5b41eb037e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec233c75fbec8a4a8dd5a8dc3479acc44eeb1afa/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec233c75fbec8a4a8dd5a8dc3479acc44eeb1afa/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ec233c75fbec8a4a8dd5a8dc3479acc44eeb1afa", "patch": "@@ -1,3 +1,12 @@\n+2001-05-22  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tlibstdc++/2841\n+\t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Set\n+\tld_library_path.  \n+\t(libstdc++-v3_set_ld_library_path): New, copied from g++.exp.\n+\t(libstdc++-v3-finish): Remove.\n+\t(libstdc++-v3_exit): Remove.\n+\n 2001-05-22  Phil Edwards  <pme@sources.redhat.com>\n \n \t* docs/html/documentation.html:  Point to doxygen output.\n@@ -35,7 +44,7 @@\n \t(wcsstr): Same.\n \t(wmemchr): Same.\n \n-2001-05-21  Benjamin Kosnik  <bkoz@kredhat.com>\n+2001-05-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/21_strings/c_strings.cc (main): Fix.\n "}, {"sha": "76eeeac5eca28b091b2ca05c8c9097066b50c4bc", "filename": "libstdc++-v3/testsuite/lib/libstdc++-v3-dg.exp", "status": "modified", "additions": 30, "deletions": 31, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec233c75fbec8a4a8dd5a8dc3479acc44eeb1afa/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec233c75fbec8a4a8dd5a8dc3479acc44eeb1afa/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp?ref=ec233c75fbec8a4a8dd5a8dc3479acc44eeb1afa", "patch": "@@ -28,9 +28,29 @@ proc libstdc++-v3-init { args } {\n     global cxxflags\n     global objdir\n     global gluefile wrap_flags\n+    global ld_library_path\n \n     set blddir   [lookfor_file $outdir libstdc++-v3]\n \n+   # By default, we assume we want to run program images.\n+    global dg-do-what-default\n+    set dg-do-what-default run\n+\n+    # Copy any required data files.\n+    foreach tst [glob -nocomplain \"$srcdir/*/*.tst\"] {\n+\tfile copy -force $tst $outdir\n+    }\n+    foreach txt [glob -nocomplain \"$srcdir/*/*.txt\"] {\n+\tfile copy -force $txt $outdir\n+    }\n+\n+    # set LD_LIBRARY_PATH so that libgcc_s, libstdc++ binaries can be found.\n+    set ld_library_path \".\"\n+    append ld_library_path \":${blddir}/../../gcc\"\n+    append ld_library_path \":${blddir}/src/.libs\"\n+\n+    # Do a bunch of handstands and backflips for cross compiling and\n+    # finding simulators...\n     if [is_remote host] {\n         set header [remote_download host ${srcdir}/debug_assert.h]\n         if { $header == \"\" } {\n@@ -54,18 +74,6 @@ proc libstdc++-v3-init { args } {\n         }\n     }\n \n-    # By default, we assume we want to run program images.\n-    global dg-do-what-default\n-    set dg-do-what-default run\n-\n-    # Copy any required data files.\n-    foreach tst [glob -nocomplain \"$srcdir/*/*.tst\"] {\n-\tfile copy -force $tst $outdir\n-    }\n-    foreach txt [glob -nocomplain \"$srcdir/*/*.txt\"] {\n-\tfile copy -force $txt $outdir\n-    }\n-\n     if { [target_info needs_status_wrapper]!=\"\" && ![info exists gluefile] } {\n       set gluefile ${objdir}/testglue.o;\n       set result [build_wrapper $gluefile];\n@@ -76,7 +84,6 @@ proc libstdc++-v3-init { args } {\n           unset gluefile\n       }\n     }\n-\n }\n \n proc libstdc++-v3-dg-test { prog do_what extra_tool_flags } {\n@@ -143,28 +150,20 @@ proc libstdc++-v3_target_compile { source dest type options } {\n     set cxx_final [concat $cxx_final $cxxflags]\n     set cxx_final [concat $cxx_final $includes]\n \n-    # XXX \n-    set cxx_final [concat $cxx_final -static]\n-\n     lappend options \"compiler=$cxx_final\";\n \n     return [target_compile $source $dest $type $options]\n }\n \n-\n-proc libstdc++-v3_exit { args } {\n-    global gluefile;\n-\n-    if [info exists gluefile] {\n-\tfile_on_build delete $gluefile;\n-\tunset gluefile;\n-    }\n-}\n-\n-proc libstdc++-v3-finish { } {\n-    # do hacks to remove any check-DEJAGNU errors\n-set exit_status 0\n-set status 0\n-#return 0\n+# On IRIX 6, we have to set variables akin to LD_LIBRARY_PATH, but\n+# called LD_LIBRARYN32_PATH (for the N32 ABI) and LD_LIBRARY64_PATH\n+# (for the 64-bit ABI).  The right way to do this would be to modify\n+# unix.exp -- but that's not an option since it's part of DejaGNU\n+# proper, so we do it here, by trickery.  We really only need to do \n+# this on IRIX, but it shouldn't hurt to do it anywhere else.\n+proc libstdc++-v3_set_ld_library_path { name element op } {\n+  setenv LD_LIBRARYN32_PATH [getenv LD_LIBRARY_PATH]\n+  setenv LD_LIBRARY64_PATH [getenv LD_LIBRARY_PATH]\n }\n \n+trace variable env(LD_LIBRARY_PATH) w libstdc++-v3_set_ld_library_path"}]}