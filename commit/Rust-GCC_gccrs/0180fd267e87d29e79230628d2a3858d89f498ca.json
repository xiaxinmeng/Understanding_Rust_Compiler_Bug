{"sha": "0180fd267e87d29e79230628d2a3858d89f498ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE4MGZkMjY3ZTg3ZDI5ZTc5MjMwNjI4ZDJhMzg1OGQ4OWY0OThjYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T09:22:03Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T09:22:03Z"}, "message": "[multiple changes]\n\n2011-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* sem_attr.adb (Result): modify error message for misplaced 'Result\n\n2011-08-04  Sergey Rybin  <rybin@adacore.com>\n\n\t* gnat_rm.texi (pragma Annotate): Fix syntax description to make it\n\tclear that the second argument must be an identifier.\n\n2011-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch9.adb (Build_Barrier_Function): When compiling with\n\t-fpreserve-control-flow, insert an IF statement on the barrier\n\tcondition to ensure that a conditional branch instruction is generated.\n\n2011-08-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-part.adb, prj.adb, prj.ads, prj-tree.ads\n\t(Processing_Flags.Ignore_Missing_With): new flag.\n\n2011-08-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-nmsc.adb (Find_Sources, Path_Name_Of): Fix handling of\n\tSource_List_File on case-insensitive systems where the file is actually\n\ton a case-sensitive file system (NFS,...).\n\n2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Function_Return): In a rare case where a\n\tfunction return contains a controlled [extension] aggregate and the\n\treturn statement is not part of a handled sequence of statements, wrap\n\tthe return in a block. This ensures that all controlled temporaries\n\tgenerated during aggregate resolution will be picked up by the\n\tfinalization machinery.\n\n2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Aggregate): If aggregate has box-initialized\n\tcomponents, freeze type before resolution, to ensure that default\n\tinitializations are present for all components.\n\t* sem_res.adb (Resolve_Actuals): the designated object of an\n\taccces-to-constant type is a legal actual in a call to an\n\tinitialization procedure.\n\n2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb (Extract_Renamed_Object): Add N_Type_Conversion and\n\tN_Unchecked_Type_Conversion to the possible containers of a renamed\n\ttransient variable.\n\nFrom-SVN: r177343", "tree": {"sha": "e66a7f20bfc819cec36dd2b9951ce8f23678a83e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e66a7f20bfc819cec36dd2b9951ce8f23678a83e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0180fd267e87d29e79230628d2a3858d89f498ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0180fd267e87d29e79230628d2a3858d89f498ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0180fd267e87d29e79230628d2a3858d89f498ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0180fd267e87d29e79230628d2a3858d89f498ca/comments", "author": null, "committer": null, "parents": [{"sha": "78efd7125942f0707f1853749c8a77f498061635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78efd7125942f0707f1853749c8a77f498061635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78efd7125942f0707f1853749c8a77f498061635"}], "stats": {"total": 242, "additions": 200, "deletions": 42}, "files": [{"sha": "9e5ec15de31388910000804e27a6d70112c14cd4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -1,3 +1,53 @@\n+2011-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_attr.adb (Result): modify error message for misplaced 'Result\n+\n+2011-08-04  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_rm.texi (pragma Annotate): Fix syntax description to make it\n+\tclear that the second argument must be an identifier.\n+\n+2011-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch9.adb (Build_Barrier_Function): When compiling with\n+\t-fpreserve-control-flow, insert an IF statement on the barrier\n+\tcondition to ensure that a conditional branch instruction is generated.\n+\n+2011-08-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-part.adb, prj.adb, prj.ads, prj-tree.ads\n+\t(Processing_Flags.Ignore_Missing_With): new flag.\n+\n+2011-08-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-nmsc.adb (Find_Sources, Path_Name_Of): Fix handling of\n+\tSource_List_File on case-insensitive systems where the file is actually\n+\ton a case-sensitive file system (NFS,...).\n+\n+2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Function_Return): In a rare case where a\n+\tfunction return contains a controlled [extension] aggregate and the\n+\treturn statement is not part of a handled sequence of statements, wrap\n+\tthe return in a block. This ensures that all controlled temporaries\n+\tgenerated during aggregate resolution will be picked up by the\n+\tfinalization machinery.\n+\n+2011-08-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Aggregate): If aggregate has box-initialized\n+\tcomponents, freeze type before resolution, to ensure that default\n+\tinitializations are present for all components.\n+\t* sem_res.adb (Resolve_Actuals): the designated object of an\n+\taccces-to-constant type is a legal actual in a call to an\n+\tinitialization procedure.\n+\n+2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb (Extract_Renamed_Object): Add N_Type_Conversion and\n+\tN_Unchecked_Type_Conversion to the possible containers of a renamed\n+\ttransient variable.\n+\n 2011-08-04  Yannick Moy  <moy@adacore.com>\n \n \t* par-ch13.adb (Aspect_Specifications_Present): recognize"}, {"sha": "13396c993bcd55a727bf907fa19d364427f87a01", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 32, "deletions": 7, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -921,19 +921,46 @@ package body Exp_Ch9 is\n       Ent : Entity_Id;\n       Pid : Node_Id) return Node_Id\n    is\n-      Loc         : constant Source_Ptr := Sloc (N);\n-      Func_Id     : constant Entity_Id  := Barrier_Function (Ent);\n       Ent_Formals : constant Node_Id    := Entry_Body_Formal_Part (N);\n+      Cond        : constant Node_Id    := Condition (Ent_Formals);\n+      Loc         : constant Source_Ptr := Sloc (Cond);\n+      Func_Id     : constant Entity_Id  := Barrier_Function (Ent);\n       Op_Decls    : constant List_Id    := New_List;\n+      Stmt        : Node_Id;\n       Func_Body   : Node_Id;\n \n    begin\n       --  Add a declaration for the Protection object, renaming declarations\n       --  for the discriminals and privals and finally a declaration for the\n       --  entry family index (if applicable).\n \n-      Install_Private_Data_Declarations\n-        (Loc, Func_Id, Pid, N, Op_Decls, True, Ekind (Ent) = E_Entry_Family);\n+      Install_Private_Data_Declarations (Sloc (N),\n+         Spec_Id  => Func_Id,\n+         Conc_Typ => Pid,\n+         Body_Nod => N,\n+         Decls    => Op_Decls,\n+         Barrier  => True,\n+         Family   => Ekind (Ent) = E_Entry_Family);\n+\n+      --  If compiling with -fpreserve-control-flow, make sure we insert an\n+      --  IF statement so that the back-end knows to generate a conditional\n+      --  branch instruction, even if the condition is just the name of a\n+      --  boolean object.\n+\n+      if Opt.Suppress_Control_Flow_Optimizations then\n+         Stmt := Make_Implicit_If_Statement (Cond,\n+                   Condition       =>\n+                     Cond,\n+                   Then_Statements => New_List (\n+                     Make_Simple_Return_Statement (Loc,\n+                       New_Occurrence_Of (Standard_True, Loc))),\n+                   Else_Statements => New_List (\n+                     Make_Simple_Return_Statement (Loc,\n+                       New_Occurrence_Of (Standard_False, Loc))));\n+\n+      else\n+         Stmt := Make_Simple_Return_Statement (Loc, Cond);\n+      end if;\n \n       --  Note: the condition in the barrier function needs to be properly\n       --  processed for the C/Fortran boolean possibility, but this happens\n@@ -947,9 +974,7 @@ package body Exp_Ch9 is\n           Declarations => Op_Decls,\n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc,\n-              Statements => New_List (\n-                Make_Simple_Return_Statement (Loc,\n-                  Expression => Condition (Ent_Formals)))));\n+              Statements => New_List (Stmt)));\n       Set_Is_Entry_Barrier_Function (Func_Body);\n \n       return Func_Body;"}, {"sha": "c8411f94480479910dfdbd5dbf08d724c0ab441e", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -3888,7 +3888,13 @@ package body Exp_Util is\n                                      N_Selected_Component)\n                then\n                   Ren_Obj := Prefix (Ren_Obj);\n-                  Change := True;\n+                  Change  := True;\n+\n+               elsif Nkind_In (Ren_Obj, N_Type_Conversion,\n+                                        N_Unchecked_Type_Conversion)\n+               then\n+                  Ren_Obj := Expression (Ren_Obj);\n+                  Change  := True;\n                end if;\n             end loop;\n "}, {"sha": "9d3730de492831b42d2c7116741b72a76eb0de72", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -984,7 +984,7 @@ same syntax and effect.\n @noindent\n Syntax:\n @smallexample @c ada\n-pragma Annotate (IDENTIFIER [,IDENTIFIER] @{, ARG@});\n+pragma Annotate (IDENTIFIER [,IDENTIFIER @{, ARG@}]);\n \n ARG ::= NAME | EXPRESSION\n @end smallexample"}, {"sha": "70d0b2b91a7cf7bc41a42ddcb2534da8948b7ebc", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -6262,7 +6262,7 @@ package body Prj.Nmsc is\n             Source_File_Path_Name : constant String :=\n               Path_Name_Of\n                 (File_Name_Type (Source_List_File.Value),\n-                 Project.Project.Directory.Name);\n+                 Project.Project.Directory.Display_Name);\n \n          begin\n             Has_Explicit_Sources := True;\n@@ -7819,6 +7819,9 @@ package body Prj.Nmsc is\n       The_Directory : constant String := Get_Name_String (Directory);\n \n    begin\n+      Debug_Output (\"Path_Name_Of file_name=\", Name_Id (File_Name));\n+      Debug_Output (\"Path_Name_Of directory=\",\n+                    Name_Id (Directory));\n       Get_Name_String (File_Name);\n       Result :=\n         Locate_Regular_File\n@@ -7829,10 +7832,9 @@ package body Prj.Nmsc is\n          return \"\";\n       else\n          declare\n-            R : String := Result.all;\n+            R : constant String := Result.all;\n          begin\n             Free (Result);\n-            Canonical_Case_File_Name (R);\n             return R;\n          end;\n       end if;"}, {"sha": "8985e9711a38b16503c94acc17b006ac66f401f5", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -460,6 +460,8 @@ package body Prj.Part is\n       Path_Name_Id : Path_Name_Type;\n \n    begin\n+      In_Tree.Incomplete_With := False;\n+\n       if not Is_Initialized (Env.Project_Path) then\n          Prj.Env.Initialize_Default_Project_Path\n            (Env.Project_Path, Target_Name);\n@@ -794,24 +796,29 @@ package body Prj.Part is\n                Path              => Imported_Path_Name_Id);\n \n             if Imported_Path_Name_Id = No_Path then\n+               if Env.Flags.Ignore_Missing_With then\n+                  In_Tree.Incomplete_With := True;\n \n-               --  The project file cannot be found\n+               else\n+                  --  The project file cannot be found\n \n-               Error_Msg_File_1 := File_Name_Type (Current_With.Path);\n-               Error_Msg\n-                 (Env.Flags, \"unknown project file: {\", Current_With.Location);\n+                  Error_Msg_File_1 := File_Name_Type (Current_With.Path);\n+                  Error_Msg\n+                    (Env.Flags, \"unknown project file: {\",\n+                     Current_With.Location);\n \n-               --  If this is not imported by the main project file, display\n-               --  the import path.\n+                  --  If this is not imported by the main project file, display\n+                  --  the import path.\n \n-               if Project_Stack.Last > 1 then\n-                  for Index in reverse 1 .. Project_Stack.Last loop\n-                     Error_Msg_File_1 :=\n-                       File_Name_Type\n-                         (Project_Stack.Table (Index).Path_Name);\n-                     Error_Msg\n-                       (Env.Flags, \"\\imported by {\", Current_With.Location);\n-                  end loop;\n+                  if Project_Stack.Last > 1 then\n+                     for Index in reverse 1 .. Project_Stack.Last loop\n+                        Error_Msg_File_1 :=\n+                          File_Name_Type\n+                            (Project_Stack.Table (Index).Path_Name);\n+                        Error_Msg\n+                          (Env.Flags, \"\\imported by {\", Current_With.Location);\n+                     end loop;\n+                  end if;\n                end if;\n \n             else"}, {"sha": "a16409965d00a76ab64bf25dbf5646a31374a581", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -1505,6 +1505,11 @@ package Prj.Tree is\n    type Project_Node_Tree_Data is record\n       Project_Nodes : Tree_Private_Part.Project_Node_Table.Instance;\n       Projects_HT   : Tree_Private_Part.Projects_Htable.Instance;\n+\n+      Incomplete_With : Boolean := False;\n+      --  Set to True if the projects were loaded with the flag\n+      --  Ignore_Missing_With set to True, and there were indeed some with\n+      --  statements that could not be resolved\n    end record;\n \n    procedure Free (Proj : in out Project_Node_Tree_Ref);"}, {"sha": "670a0a074c352e048faeaa25875781802df8cb25", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -1377,7 +1377,8 @@ package body Prj is\n       Error_On_Unknown_Language  : Boolean       := True;\n       Require_Obj_Dirs           : Error_Warning := Error;\n       Allow_Invalid_External     : Error_Warning := Error;\n-      Missing_Source_Files       : Error_Warning := Error)\n+      Missing_Source_Files       : Error_Warning := Error;\n+      Ignore_Missing_With        : Boolean       := False)\n       return Processing_Flags\n    is\n    begin\n@@ -1390,7 +1391,8 @@ package body Prj is\n          Compiler_Driver_Mandatory  => Compiler_Driver_Mandatory,\n          Require_Obj_Dirs           => Require_Obj_Dirs,\n          Allow_Invalid_External     => Allow_Invalid_External,\n-         Missing_Source_Files       => Missing_Source_Files);\n+         Missing_Source_Files       => Missing_Source_Files,\n+         Ignore_Missing_With        => Ignore_Missing_With);\n    end Create_Flags;\n \n    ------------"}, {"sha": "5942abc17d25ae3cc17cbaecf7f4168ab8f88098", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -1630,7 +1630,8 @@ package Prj is\n       Error_On_Unknown_Language  : Boolean       := True;\n       Require_Obj_Dirs           : Error_Warning := Error;\n       Allow_Invalid_External     : Error_Warning := Error;\n-      Missing_Source_Files       : Error_Warning := Error)\n+      Missing_Source_Files       : Error_Warning := Error;\n+      Ignore_Missing_With        : Boolean       := False)\n       return Processing_Flags;\n    --  Function used to create Processing_Flags structure\n    --\n@@ -1668,6 +1669,16 @@ package Prj is\n    --  a source file mentioned in the Source_Files attributes is not actually\n    --  found in the source directories. This also impacts errors for missing\n    --  source directories.\n+   --\n+   --  If Ignore_Missing_With is True, then a \"with\" statement that cannot be\n+   --  resolved will simply be ignored. However, in such a case, the flag\n+   --  Incomplete_With in the project tree will be set to True.\n+   --  This is meant for use by tools so that they can properly set the\n+   --  project path in such a case:\n+   --       * no \"gnatls\" found (so no default project path)\n+   --       * user project sets Project.IDE'gnatls attribute to a cross gnatls\n+   --       * user project also includes a \"with\" that can only be resolved\n+   --         once we have found the gnatls\n \n    Gprbuild_Flags : constant Processing_Flags;\n    Gprclean_Flags : constant Processing_Flags;\n@@ -1813,6 +1824,7 @@ private\n       Require_Obj_Dirs           : Error_Warning;\n       Allow_Invalid_External     : Error_Warning;\n       Missing_Source_Files       : Error_Warning;\n+      Ignore_Missing_With        : Boolean;\n    end record;\n \n    Gprbuild_Flags : constant Processing_Flags :=\n@@ -1824,7 +1836,8 @@ private\n       Error_On_Unknown_Language  => True,\n       Require_Obj_Dirs           => Error,\n       Allow_Invalid_External     => Error,\n-      Missing_Source_Files       => Error);\n+      Missing_Source_Files       => Error,\n+      Ignore_Missing_With        => False);\n \n    Gprclean_Flags : constant Processing_Flags :=\n      (Report_Error               => null,\n@@ -1835,7 +1848,8 @@ private\n       Error_On_Unknown_Language  => True,\n       Require_Obj_Dirs           => Warning,\n       Allow_Invalid_External     => Error,\n-      Missing_Source_Files       => Error);\n+      Missing_Source_Files       => Error,\n+      Ignore_Missing_With        => False);\n \n    Gnatmake_Flags : constant Processing_Flags :=\n      (Report_Error               => null,\n@@ -1846,6 +1860,7 @@ private\n       Error_On_Unknown_Language  => False,\n       Require_Obj_Dirs           => Error,\n       Allow_Invalid_External     => Error,\n-      Missing_Source_Files       => Error);\n+      Missing_Source_Files       => Error,\n+      Ignore_Missing_With        => False);\n \n end Prj;"}, {"sha": "948410db57995a2d109ee337d0d8b061b81033ce", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -978,6 +978,30 @@ package body Sem_Aggr is\n          return;\n       end if;\n \n+      --  If the aggregate has box-initialized components, its type must be\n+      --  frozen so that initialization procedures can properly be called\n+      --  in the resolution that follows.  The replacement of boxes with\n+      --  initialization calls is properly an expansion activity but it must\n+      --  be done during revolution.\n+\n+      if Expander_Active\n+        and then  Present (Component_Associations (N))\n+      then\n+         declare\n+            Comp : Node_Id;\n+\n+         begin\n+            Comp := First (Component_Associations (N));\n+            while Present (Comp) loop\n+               if Box_Present (Comp) then\n+                  Insert_Actions (N, Freeze_Entity (Typ, N));\n+                  exit;\n+               end if;\n+               Next (Comp);\n+            end loop;\n+         end;\n+      end if;\n+\n       --  An unqualified aggregate is restricted in SPARK to:\n \n       --    An aggregate item inside an aggregate for a multi-dimensional array"}, {"sha": "70c745d6c54f5478ae2314aaa39ff9f7dc74f851", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -4102,15 +4102,9 @@ package body Sem_Attr is\n                Analyze_And_Resolve (N, Etype (PS));\n \n             else\n-               if Ada_Version >= Ada_2012 then\n-                  Error_Attr\n-                    (\"% attribute can only appear\" &\n-                      \" in function Postcondition pragma or Post aspect\", P);\n-               else\n-                  Error_Attr\n-                    (\"% attribute can only appear\" &\n-                      \" in function Postcondition pragma\", P);\n-               end if;\n+               Error_Attr\n+                 (\"% attribute can only appear in postcondition of function\",\n+                  P);\n             end if;\n          end if;\n       end Result;"}, {"sha": "054c7a82d40ba6204cf0566a338598abe2c1d2ba", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -638,6 +638,28 @@ package body Sem_Ch6 is\n             return;\n \n          else\n+            --  The resolution of a controlled [extension] aggregate associated\n+            --  with a return statement creates a temporary which needs to be\n+            --  finalized on function exit. Wrap the return statement inside a\n+            --  block so that the finalization machinery can detect this case.\n+            --  This early expansion is done only when the return statement is\n+            --  not part of a handled sequence of statements.\n+\n+            if Nkind_In (Expr, N_Aggregate,\n+                               N_Extension_Aggregate)\n+              and then Needs_Finalization (R_Type)\n+              and then Nkind (Parent (N)) /= N_Handled_Sequence_Of_Statements\n+            then\n+               Rewrite (N,\n+                 Make_Block_Statement (Loc,\n+                   Handled_Statement_Sequence =>\n+                     Make_Handled_Sequence_Of_Statements (Loc,\n+                       Statements => New_List (Relocate_Node (N)))));\n+\n+               Analyze (N);\n+               return;\n+            end if;\n+\n             Analyze_And_Resolve (Expr, R_Type);\n             Check_Limited_Return (Expr);\n          end if;"}, {"sha": "56f1457140e9ac37a8bce082f9473c5c76ee5f79", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0180fd267e87d29e79230628d2a3858d89f498ca/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=0180fd267e87d29e79230628d2a3858d89f498ca", "patch": "@@ -3736,7 +3736,13 @@ package body Sem_Res is\n                --  Is_OK_Variable_For_Out_Formal generates the required\n                --  reference in this case.\n \n-               if not Is_OK_Variable_For_Out_Formal (A) then\n+               --  A call to an initialization procedure for an aggregate\n+               --  component may initialize a nested component of a constant\n+               --  designated object. In this context the object is variable.\n+\n+               if not Is_OK_Variable_For_Out_Formal (A)\n+                 and then not Is_Init_Proc (Nam)\n+               then\n                   Error_Msg_NE (\"actual for& must be a variable\", A, F);\n                end if;\n "}]}