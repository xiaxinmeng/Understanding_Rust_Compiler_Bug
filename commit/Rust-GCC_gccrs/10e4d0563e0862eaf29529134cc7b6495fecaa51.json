{"sha": "10e4d0563e0862eaf29529134cc7b6495fecaa51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBlNGQwNTYzZTA4NjJlYWYyOTUyOTEzNGNjN2I2NDk1ZmVjYWE1MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-06-06T10:00:32Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-06-06T10:00:32Z"}, "message": "utils.c: Include diagnostic.h.\n\n\t* gcc-interface/utils.c: Include diagnostic.h.\n\t(gnat_write_global_declarations): Output debug information for all\n\tglobal type declarations before finalizing the compilation unit.\n\t* gcc-interface/Make-lang.in (ada/utils.o): Add dependency.\n\nFrom-SVN: r174687", "tree": {"sha": "95670f8be314f1ca9d4417d4ca2a1c6333a55f00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95670f8be314f1ca9d4417d4ca2a1c6333a55f00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10e4d0563e0862eaf29529134cc7b6495fecaa51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10e4d0563e0862eaf29529134cc7b6495fecaa51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10e4d0563e0862eaf29529134cc7b6495fecaa51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10e4d0563e0862eaf29529134cc7b6495fecaa51/comments", "author": null, "committer": null, "parents": [{"sha": "aa4203e7344b980828998592db0d60f8bc77261e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4203e7344b980828998592db0d60f8bc77261e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4203e7344b980828998592db0d60f8bc77261e"}], "stats": {"total": 165, "additions": 138, "deletions": 27}, "files": [{"sha": "1ea386b3912afc35f27a1872bbcf7bca0ff8919f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -1,3 +1,10 @@\n+2011-06-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils.c: Include diagnostic.h.\n+\t(gnat_write_global_declarations): Output debug information for all\n+\tglobal type declarations before finalizing the compilation unit.\n+\t* gcc-interface/Make-lang.in (ada/utils.o): Add dependency.\n+\n 2011-05-25  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc-interface/utils.c (def_fn_type): Remove extra va_end."}, {"sha": "53f9f8d3f1a2d0177d54036029ef263e7ab6fa51", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -1237,7 +1237,7 @@ ada/trans.o : ada/gcc-interface/trans.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \n ada/utils.o : ada/gcc-interface/utils.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) $(TREE_H) $(FLAGS_H) toplev.h $(RTL_H) output.h debug.h convert.h \\\n-   $(TARGET_H) function.h langhooks.h $(CGRAPH_H) \\\n+   $(TARGET_H) function.h langhooks.h $(CGRAPH_H) $(DIAGNOSTIC_H) \\\n    $(TREE_DUMP_H) $(TREE_INLINE_H) tree-iterator.h \\\n    ada/gcc-interface/ada.h ada/types.h ada/atree.h ada/elists.h ada/namet.h \\\n    ada/nlists.h ada/stringt.h ada/uintp.h ada/fe.h ada/sinfo.h ada/einfo.h \\"}, {"sha": "0f2a331f809181f37d7fddceedf0c024f310c316", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -38,6 +38,7 @@\n #include \"target.h\"\n #include \"langhooks.h\"\n #include \"cgraph.h\"\n+#include \"diagnostic.h\"\n #include \"tree-dump.h\"\n #include \"tree-inline.h\"\n #include \"tree-iterator.h\"\n@@ -4756,6 +4757,9 @@ static GTY (()) tree dummy_global;\n void\n gnat_write_global_declarations (void)\n {\n+  unsigned int i;\n+  tree iter;\n+\n   /* If we have declared types as used at the global level, insert them in\n      the global hash table.  We use a dummy variable for this purpose.  */\n   if (!VEC_empty (tree, types_used_by_cur_var_decl))\n@@ -4773,13 +4777,28 @@ gnat_write_global_declarations (void)\n \t}\n     }\n \n+  /* Output debug information for all global type declarations first.  This\n+     ensures that global types whose compilation hasn't been finalized yet,\n+     for example pointers to Taft amendment types, have their compilation\n+     finalized in the right context.  */\n+  FOR_EACH_VEC_ELT (tree, global_decls, i, iter)\n+    if (TREE_CODE (iter) == TYPE_DECL)\n+      debug_hooks->global_decl (iter);\n+\n   /* Proceed to optimize and emit assembly.\n      FIXME: shouldn't be the front end's responsibility to call this.  */\n   cgraph_finalize_compilation_unit ();\n \n-  /* Emit debug info for all global declarations.  */\n-  emit_debug_global_declarations (VEC_address (tree, global_decls),\n-\t\t\t\t  VEC_length (tree, global_decls));\n+  /* After cgraph has had a chance to emit everything that's going to\n+     be emitted, output debug information for the rest of globals.  */\n+  if (!seen_error ())\n+    {\n+      timevar_push (TV_SYMOUT);\n+      FOR_EACH_VEC_ELT (tree, global_decls, i, iter)\n+\tif (TREE_CODE (iter) != TYPE_DECL)\n+\t  debug_hooks->global_decl (iter);\n+      timevar_pop (TV_SYMOUT);\n+    }\n }\n \n /* ************************************************************************"}, {"sha": "749949f810f59547d3b507ea5954f1fd7550f66a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -1,3 +1,16 @@\n+2011-06-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/test_tamdt.adb: Rename to...\n+\t* gnat.dg/taft_type1.adb: ...this.\n+\t* gnat.dg/tamdt.ad[sb]: Rename to...\n+\t* gnat.dg/taft_type1_pkg1.ad[sb]: ...this.\n+\t* gnat.dg/tamdt_aux.ads: Rename to...\n+\t* gnat.dg/taft_type1_pkg2.ads: ...this.\n+\t* gnat.dg/taft_type2.ad[sb]: New test.\n+\t* gnat.dg/taft_type2_pkg.ads: New helper.\n+\t* gnat.dg/taft_type3.adb: New test.\n+\t* gnat.dg/taft_type3_pkg.ads: New helper.\n+\n 2011-06-05  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/49255"}, {"sha": "3f3cc3a3e81d4f6068931bb284a2ee4f3013e9bb", "filename": "gcc/testsuite/gnat.dg/taft_type1.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1.adb?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -0,0 +1,8 @@\n+-- { dg-do run }\n+\n+with Taft_Type1_Pkg1;\n+\n+procedure Taft_Type1 is\n+begin\n+   Taft_Type1_Pkg1.Check;\n+end;"}, {"sha": "7e456709971f7f21bc824e3dcf1de98c03c055b7", "filename": "gcc/testsuite/gnat.dg/taft_type1_pkg1.adb", "status": "renamed", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1_pkg1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1_pkg1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1_pkg1.adb?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -1,9 +1,8 @@\n+with Taft_Type1_Pkg2;\n \n-with Tamdt_Aux;\n-\n-package body TAMDT is\n-   type TAMT1 is new Tamdt_Aux.Priv (X => 1);\n-   type TAMT2 is new Tamdt_Aux.Priv;\n+package body Taft_Type1_Pkg1 is\n+   type TAMT1 is new Taft_Type1_Pkg2.Priv (X => 1);\n+   type TAMT2 is new Taft_Type1_Pkg2.Priv;\n \n    procedure Check is\n       Ptr1 : TAMT1_Access := new TAMT1;\n@@ -16,4 +15,4 @@ package body TAMDT is\n          raise Program_Error;\n       end if;\n    end;\n-end;\n+end Taft_Type1_Pkg1;", "previous_filename": "gcc/testsuite/gnat.dg/tamdt.adb"}, {"sha": "da656f88ec990cbf63c675bd035f8642e8635c9d", "filename": "gcc/testsuite/gnat.dg/taft_type1_pkg1.ads", "status": "renamed", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1_pkg1.ads?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -1,10 +1,9 @@\n-\n-package TAMDT is\n+package Taft_Type1_Pkg1 is\n    procedure Check;\n private\n    type TAMT1;\n    type TAMT1_Access is access TAMT1;\n \n    type TAMT2;\n    type TAMT2_Access is access TAMT2;\n-end;\n+end Taft_Type1_Pkg1;", "previous_filename": "gcc/testsuite/gnat.dg/tamdt.ads"}, {"sha": "4761840a5f2cab4524c3588b2af082132b283518", "filename": "gcc/testsuite/gnat.dg/taft_type1_pkg2.ads", "status": "renamed", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type1_pkg2.ads?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -1,9 +1,5 @@\n-\n-package Tamdt_Aux is\n+package Taft_Type1_Pkg2 is\n    type Priv (X : Integer) is private;\n private\n    type Priv (X : Integer) is null record;\n-end;\n-\n-\n-\n+end Taft_Type1_Pkg2;", "previous_filename": "gcc/testsuite/gnat.dg/tamdt_aux.ads"}, {"sha": "c855ab6e96729bba96e765f5063dce5d25e65682", "filename": "gcc/testsuite/gnat.dg/taft_type2.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.adb?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -0,0 +1,22 @@\n+-- { dg-do compile }\r\n+-- { dg-options \"-g\" }\r\n+\r\n+with Taft_Type2_Pkg; use Taft_Type2_Pkg;\r\n+\r\n+package body Taft_Type2 is\r\n+\r\n+   procedure Proc is\r\n+      A : T;\r\n+\r\n+      function F return T is\r\n+         My_T : T;\r\n+      begin\r\n+         My_T := Open;\r\n+         return My_T;\r\n+      end;\r\n+\r\n+   begin\r\n+      A := F;\r\n+   end;\r\n+\r\n+end Taft_Type2;\r"}, {"sha": "539c1069875f156608f728c2fb6e38a135e5ef52", "filename": "gcc/testsuite/gnat.dg/taft_type2.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2.ads?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -0,0 +1,5 @@\n+package Taft_Type2 is\r\n+\r\n+   procedure Proc;\r\n+\r\n+end Taft_Type2;\r"}, {"sha": "689b3f1a6a8e10e46e234243d51e37aea40b4168", "filename": "gcc/testsuite/gnat.dg/taft_type2_pkg.ads", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type2_pkg.ads?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -0,0 +1,12 @@\n+package Taft_Type2_Pkg  is\r\n+\r\n+   type T is private;\r\n+\r\n+   function Open return T;\r\n+\r\n+private\r\n+\r\n+   type Buffer_T;\r\n+   type T is access Buffer_T;\r\n+\r\n+end Taft_Type2_Pkg;\r"}, {"sha": "569312214926f3ac5927edcdc0ba802e3888c641", "filename": "gcc/testsuite/gnat.dg/taft_type3.adb", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type3.adb?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -0,0 +1,29 @@\n+-- { dg-do compile }\n+-- { dg-options \"-g\" }\n+\n+with Taft_Type3_Pkg; use Taft_Type3_Pkg;\n+\n+procedure Taft_Type3 is\n+\n+  subtype S is String (1..32);\n+\n+  Empty : constant S := (others => ' ');\n+\n+  procedure Proc (Data : in out T) is begin null; end;\n+\n+  task type Task_T is\n+    entry Send (Data : in out T);\n+  end;\n+\n+  task body Task_T is\n+    type List_T is array (1 .. 4) of S;\n+    L : List_T := (others => Empty);\n+  begin\n+    accept Send (Data : in out T) do\n+      Proc (Data);\n+    end;\n+  end;\n+\n+begin\n+  null;\n+end;"}, {"sha": "578c51894b3d6ba895522efa72570422ded232b1", "filename": "gcc/testsuite/gnat.dg/taft_type3_pkg.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type3_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10e4d0563e0862eaf29529134cc7b6495fecaa51/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type3_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftaft_type3_pkg.ads?ref=10e4d0563e0862eaf29529134cc7b6495fecaa51", "patch": "@@ -0,0 +1,10 @@\n+package Taft_Type3_Pkg is\n+\n+  type T is private;\n+\n+private\n+\n+  type Buffer_T;\n+  type T is access Buffer_T;\n+\n+end Taft_Type3_Pkg;"}, {"sha": "d0658ecc4a2d5c7b586e910a7fc4e470369877f6", "filename": "gcc/testsuite/gnat.dg/test_tamdt.adb", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4203e7344b980828998592db0d60f8bc77261e/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_tamdt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4203e7344b980828998592db0d60f8bc77261e/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_tamdt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_tamdt.adb?ref=aa4203e7344b980828998592db0d60f8bc77261e", "patch": "@@ -1,8 +0,0 @@\n--- { dg-do run }\n-\n-with Tamdt;\n-\n-procedure Test_Tamdt is\n-begin\n-   Tamdt.Check;\n-end;"}]}