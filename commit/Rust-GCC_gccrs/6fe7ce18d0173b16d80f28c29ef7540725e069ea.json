{"sha": "6fe7ce18d0173b16d80f28c29ef7540725e069ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZlN2NlMThkMDE3M2IxNmQ4MGYyOGMyOWVmNzU0MDcyNWUwNjllYQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-03-01T15:57:46Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-03-01T15:57:46Z"}, "message": "PR c++/89537 - missing location for error with non-static member fn.\n\n\t* call.c (resolve_args): Use EXPR_LOCATION.\n\t* typeck.c (build_class_member_access_expr): Use input_location.\n\n\t* g++.dg/diagnostic/member-fn-1.C: New test.\n\nFrom-SVN: r269318", "tree": {"sha": "ac2f628c744bbf22c002a129b05491cb0e9cc4c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac2f628c744bbf22c002a129b05491cb0e9cc4c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fe7ce18d0173b16d80f28c29ef7540725e069ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fe7ce18d0173b16d80f28c29ef7540725e069ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fe7ce18d0173b16d80f28c29ef7540725e069ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fe7ce18d0173b16d80f28c29ef7540725e069ea/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d724d2aff687414567caad50eda806a28480c771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d724d2aff687414567caad50eda806a28480c771", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d724d2aff687414567caad50eda806a28480c771"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "bc6754ec819e4317ce14d60b09f0609fb59fabd6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fe7ce18d0173b16d80f28c29ef7540725e069ea/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fe7ce18d0173b16d80f28c29ef7540725e069ea/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6fe7ce18d0173b16d80f28c29ef7540725e069ea", "patch": "@@ -1,5 +1,9 @@\n 2019-03-01  Marek Polacek  <polacek@redhat.com>\n \n+\tPR c++/89537 - missing location for error with non-static member fn.\n+\t* call.c (resolve_args): Use EXPR_LOCATION.\n+\t* typeck.c (build_class_member_access_expr): Use input_location.\n+\n \tPR c++/89532 - ICE with incomplete type in decltype.\n \t* semantics.c (finish_compound_literal): Return error_mark_node\n \tif digest_init_flags returns error_mark_node."}, {"sha": "d9073d7c23dc737350461cca5105e21a83951aac", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fe7ce18d0173b16d80f28c29ef7540725e069ea/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fe7ce18d0173b16d80f28c29ef7540725e069ea/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6fe7ce18d0173b16d80f28c29ef7540725e069ea", "patch": "@@ -4246,7 +4246,7 @@ resolve_args (vec<tree, va_gc> *args, tsubst_flags_t complain)\n \t    error (\"invalid use of void expression\");\n \t  return NULL;\n \t}\n-      else if (invalid_nonstatic_memfn_p (arg->exp.locus, arg, complain))\n+      else if (invalid_nonstatic_memfn_p (EXPR_LOCATION (arg), arg, complain))\n \treturn NULL;\n     }\n   return args;"}, {"sha": "1bf9ad88141b6c6a7970a4d0472f2e489e68d3d4", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fe7ce18d0173b16d80f28c29ef7540725e069ea/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fe7ce18d0173b16d80f28c29ef7540725e069ea/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=6fe7ce18d0173b16d80f28c29ef7540725e069ea", "patch": "@@ -2562,7 +2562,8 @@ build_class_member_access_expr (cp_expr object, tree member,\n \ttype = unknown_type_node;\n       /* Note that we do not convert OBJECT to the BASELINK_BINFO\n \t base.  That will happen when the function is called.  */\n-      result = build3 (COMPONENT_REF, type, object, member, NULL_TREE);\n+      result = build3_loc (input_location, COMPONENT_REF, type, object, member,\n+\t\t\t   NULL_TREE);\n     }\n   else if (TREE_CODE (member) == CONST_DECL)\n     {"}, {"sha": "398b45e2dc70ffac3d7a13f4c51404ff44b76ad3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fe7ce18d0173b16d80f28c29ef7540725e069ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fe7ce18d0173b16d80f28c29ef7540725e069ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6fe7ce18d0173b16d80f28c29ef7540725e069ea", "patch": "@@ -1,5 +1,8 @@\n 2019-03-01  Marek Polacek  <polacek@redhat.com>\n \n+\tPR c++/89537 - missing location for error with non-static member fn.\n+\t* g++.dg/diagnostic/member-fn-1.C: New test.\n+\n \tPR c++/89532 - ICE with incomplete type in decltype.\n \t* g++.dg/cpp2a/nontype-class14.C: New test.\n "}, {"sha": "6d965d464fbc9409f980210fc108bd0661a19161", "filename": "gcc/testsuite/g++.dg/diagnostic/member-fn-1.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fe7ce18d0173b16d80f28c29ef7540725e069ea/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmember-fn-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fe7ce18d0173b16d80f28c29ef7540725e069ea/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmember-fn-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdiagnostic%2Fmember-fn-1.C?ref=6fe7ce18d0173b16d80f28c29ef7540725e069ea", "patch": "@@ -0,0 +1,38 @@\n+// PR c++/89537\n+// { dg-do compile { target c++11 } }\n+\n+template <typename> class A {};\n+template <typename, typename, typename, typename> class B;\n+class C {\n+  using mapped_type = int;\n+\n+public:\n+  template <typename _Compare>\n+  C(B<mapped_type, _Compare, A<int>, A<int>> *p1, unsigned)\n+      : keys(p1->keys), // { dg-error \"18: invalid use of non-static member function\" }\n+        values(p1->values) {} // { dg-error \"20: invalid use of non-static member function\" }\n+  A<int> keys;\n+  A<int> values;\n+};\n+class D {\n+public:\n+  using key_compare = int;\n+  template <typename _Alloc> D(key_compare, _Alloc);\n+};\n+template <typename _Tp, typename, typename, typename = A<_Tp>> class B {\n+  using _Impl = D;\n+  _Impl _M_impl;\n+\n+public:\n+  using key_compare = int;\n+  using iterator = C;\n+  template <typename _Alloc> B(key_compare p1, _Alloc p2) : _M_impl(p1, p2) {}\n+  template <typename _Alloc> B(_Alloc p1) : B(key_compare(), p1) {}\n+  iterator begin() { return {this, 0}; }\n+  void keys();\n+  void values();\n+};\n+void fn1() {\n+  B<int, int, A<int>> m(fn1);\n+  m.begin();\n+}"}]}