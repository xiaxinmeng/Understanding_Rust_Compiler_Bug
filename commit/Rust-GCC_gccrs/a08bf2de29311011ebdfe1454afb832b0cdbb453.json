{"sha": "a08bf2de29311011ebdfe1454afb832b0cdbb453", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA4YmYyZGUyOTMxMTAxMWViZGZlMTQ1NGFmYjgzMmIwY2RiYjQ1Mw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-29T13:11:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T13:11:55Z"}, "message": "freeze.adb (Freeze_Entity, [...]): Add a guard to make sure that the Etype of a component of the corresponding...\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb (Freeze_Entity, Concurrent_Type case): Add a guard\n\tto make sure that the Etype of a component of the corresponding\n\trecord type is present before trying to freeze it.\n\t* sem_ch5.adb: Minor reformatting.\n\nFrom-SVN: r213165", "tree": {"sha": "fd167988bfb3ee4c2e970cfc1afc024fba592b18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd167988bfb3ee4c2e970cfc1afc024fba592b18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a08bf2de29311011ebdfe1454afb832b0cdbb453", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a08bf2de29311011ebdfe1454afb832b0cdbb453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a08bf2de29311011ebdfe1454afb832b0cdbb453", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a08bf2de29311011ebdfe1454afb832b0cdbb453/comments", "author": null, "committer": null, "parents": [{"sha": "b8b2d9829aa9c3caa053de687701de3ebb506b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8b2d9829aa9c3caa053de687701de3ebb506b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8b2d9829aa9c3caa053de687701de3ebb506b4c"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "917f4beb415c1d45b2fbec0d2ad712f5fc57f236", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a08bf2de29311011ebdfe1454afb832b0cdbb453/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a08bf2de29311011ebdfe1454afb832b0cdbb453/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a08bf2de29311011ebdfe1454afb832b0cdbb453", "patch": "@@ -1,3 +1,10 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity, Concurrent_Type case): Add a guard\n+\tto make sure that the Etype of a component of the corresponding\n+\trecord type is present before trying to freeze it.\n+\t* sem_ch5.adb: Minor reformatting.\n+\n 2014-07-29  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_attr.adb, types.ads, types.h, exp_ch11.adb, a-except.adb,"}, {"sha": "9aee0a128a9bcee8f52341fc6c06ddf3aed961c5", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a08bf2de29311011ebdfe1454afb832b0cdbb453/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a08bf2de29311011ebdfe1454afb832b0cdbb453/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=a08bf2de29311011ebdfe1454afb832b0cdbb453", "patch": "@@ -4710,13 +4710,19 @@ package body Freeze is\n                   Freeze_And_Append (Comp, N, Result);\n \n                elsif (Ekind (Comp)) /= E_Function then\n-                  if Is_Itype (Etype (Comp))\n-                    and then Underlying_Type (Scope (Etype (Comp))) = E\n-                  then\n-                     Undelay_Type (Etype (Comp));\n-                  end if;\n \n-                  Freeze_And_Append (Etype (Comp), N, Result);\n+                  --  The guard on the presence of the Etype seems to be needed\n+                  --  for some CodePeer (-gnatcC) cases, but not clear why???\n+\n+                  if Present (Etype (Comp)) then\n+                     if Is_Itype (Etype (Comp))\n+                       and then Underlying_Type (Scope (Etype (Comp))) = E\n+                     then\n+                        Undelay_Type (Etype (Comp));\n+                     end if;\n+\n+                     Freeze_And_Append (Etype (Comp), N, Result);\n+                  end if;\n                end if;\n \n                Next_Entity (Comp);"}, {"sha": "c52f242d8f4cfdece3d9bd6eb26a68901540e998", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a08bf2de29311011ebdfe1454afb832b0cdbb453/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a08bf2de29311011ebdfe1454afb832b0cdbb453/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=a08bf2de29311011ebdfe1454afb832b0cdbb453", "patch": "@@ -3184,6 +3184,7 @@ package body Sem_Ch5 is\n \n                   --  We skip this step if we are not in code generation mode\n                   --  or CodePeer mode.\n+\n                   --  This is the one case where we remove dead code in the\n                   --  semantics as opposed to the expander, and we do not want\n                   --  to remove code if we are not in code generation mode,"}]}