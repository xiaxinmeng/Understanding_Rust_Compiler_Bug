{"sha": "1acbaa7530d7ec1e38fe8f5f1c5313b0d12a4f97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFjYmFhNzUzMGQ3ZWMxZTM4ZmU4ZjVmMWM1MzEzYjBkMTJhNGY5Nw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-09-02T07:09:39Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-09-02T07:09:39Z"}, "message": "Fix thinko in early bail out in tree-switch-conversion.\n\n2019-09-02  Martin Liska  <mliska@suse.cz>\n\n\t* tree-switch-conversion.c (jump_table_cluster::find_jump_tables):\n\tBail out when we'll end up with the same number of clusters as\n\tat the beginning.\n\t(bit_test_cluster::find_bit_tests): Likewise for bit tests.\n\t(jump_table_cluster::can_be_handled): Remove the guard\n\tas it's already handled in ::is_enabled.  Allocate output\n\tafter early bail out.\n\nFrom-SVN: r275293", "tree": {"sha": "fa7d92210c72bfdc809824d297f11c8b02974a7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa7d92210c72bfdc809824d297f11c8b02974a7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1acbaa7530d7ec1e38fe8f5f1c5313b0d12a4f97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1acbaa7530d7ec1e38fe8f5f1c5313b0d12a4f97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1acbaa7530d7ec1e38fe8f5f1c5313b0d12a4f97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1acbaa7530d7ec1e38fe8f5f1c5313b0d12a4f97/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae0d3f6a593058ab9fd56a34f604852ea2dec79b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0d3f6a593058ab9fd56a34f604852ea2dec79b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0d3f6a593058ab9fd56a34f604852ea2dec79b"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "990c895f69dced5e2ddb967bc1a87a6535fa925d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1acbaa7530d7ec1e38fe8f5f1c5313b0d12a4f97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1acbaa7530d7ec1e38fe8f5f1c5313b0d12a4f97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1acbaa7530d7ec1e38fe8f5f1c5313b0d12a4f97", "patch": "@@ -1,3 +1,13 @@\n+2019-09-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-switch-conversion.c (jump_table_cluster::find_jump_tables):\n+\tBail out when we'll end up with the same number of clusters as\n+\tat the beginning.\n+\t(bit_test_cluster::find_bit_tests): Likewise for bit tests.\n+\t(jump_table_cluster::can_be_handled): Remove the guard\n+\tas it's already handled in ::is_enabled.  Allocate output\n+\tafter early bail out.\n+\n 2019-09-02  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/91601"}, {"sha": "b7149039ae4310ae70dd5237fe977c0cec4ec7c0", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1acbaa7530d7ec1e38fe8f5f1c5313b0d12a4f97/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1acbaa7530d7ec1e38fe8f5f1c5313b0d12a4f97/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=1acbaa7530d7ec1e38fe8f5f1c5313b0d12a4f97", "patch": "@@ -1214,14 +1214,14 @@ jump_table_cluster::find_jump_tables (vec<cluster *> &clusters)\n     }\n \n   /* No result.  */\n-  if (min[l].m_count == INT_MAX)\n+  if (min[l].m_count == l)\n     return clusters.copy ();\n \n   vec<cluster *> output;\n   output.create (4);\n \n   /* Find and build the clusters.  */\n-  for (int end = l;;)\n+  for (unsigned int end = l;;)\n     {\n       int start = min[end].m_start;\n \n@@ -1258,11 +1258,9 @@ jump_table_cluster::can_be_handled (const vec<cluster *> &clusters,\n      make a sequence of conditional branches instead of a dispatch.\n \n      The definition of \"much bigger\" depends on whether we are\n-     optimizing for size or for speed.  */\n-  if (!flag_jump_tables)\n-    return false;\n+     optimizing for size or for speed.\n \n-  /* For algorithm correctness, jump table for a single case must return\n+     For algorithm correctness, jump table for a single case must return\n      true.  We bail out in is_beneficial if it's called just for\n      a single case.  */\n   if (start == end)\n@@ -1312,9 +1310,6 @@ jump_table_cluster::is_beneficial (const vec<cluster *> &,\n vec<cluster *>\n bit_test_cluster::find_bit_tests (vec<cluster *> &clusters)\n {\n-  vec<cluster *> output;\n-  output.create (4);\n-\n   unsigned l = clusters.length ();\n   auto_vec<min_cluster_item> min;\n   min.reserve (l + 1);\n@@ -1337,9 +1332,12 @@ bit_test_cluster::find_bit_tests (vec<cluster *> &clusters)\n     }\n \n   /* No result.  */\n-  if (min[l].m_count == INT_MAX)\n+  if (min[l].m_count == l)\n     return clusters.copy ();\n \n+  vec<cluster *> output;\n+  output.create (4);\n+\n   /* Find and build the clusters.  */\n   for (unsigned end = l;;)\n     {"}]}