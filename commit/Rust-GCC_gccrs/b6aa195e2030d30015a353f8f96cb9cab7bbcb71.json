{"sha": "b6aa195e2030d30015a353f8f96cb9cab7bbcb71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZhYTE5NWUyMDMwZDMwMDE1YTM1M2Y4Zjk2Y2I5Y2FiN2JiY2I3MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-10-02T17:26:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-10-02T17:26:16Z"}, "message": "bastring.h: Move exception stuff after definition of string.\n\n\t* std/bastring.h: Move exception stuff after definition of string.\n\tMove typedef of string here.\n\t* string: From here.\n\nFrom-SVN: r15832", "tree": {"sha": "dfd482af6f25c8ca1b9eaced75135363406f588d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfd482af6f25c8ca1b9eaced75135363406f588d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6aa195e2030d30015a353f8f96cb9cab7bbcb71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6aa195e2030d30015a353f8f96cb9cab7bbcb71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6aa195e2030d30015a353f8f96cb9cab7bbcb71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6aa195e2030d30015a353f8f96cb9cab7bbcb71/comments", "author": null, "committer": null, "parents": [{"sha": "15039abedc2563946ce873dc986eb71acc5e1e0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15039abedc2563946ce873dc986eb71acc5e1e0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15039abedc2563946ce873dc986eb71acc5e1e0f"}], "stats": {"total": 74, "additions": 43, "deletions": 31}, "files": [{"sha": "f58f3da2d596a10ca6a9af57fee03965ecdb1547", "filename": "libstdc++/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6aa195e2030d30015a353f8f96cb9cab7bbcb71/libstdc%2B%2B%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6aa195e2030d30015a353f8f96cb9cab7bbcb71/libstdc%2B%2B%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FChangeLog?ref=b6aa195e2030d30015a353f8f96cb9cab7bbcb71", "patch": "@@ -1,3 +1,9 @@\n+Thu Oct  2 00:08:18 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* std/bastring.h: Move exception stuff after definition of string.\n+\tMove typedef of string here.\n+\t* string: From here.\n+\n Sat Sep 27 16:48:00 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* std/complext.h: Lose injection decls."}, {"sha": "629bb583f3d2ee705a2e81cdfb5d7ccf1c460f8e", "filename": "libstdc++/std/bastring.h", "status": "modified", "additions": 37, "deletions": 26, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6aa195e2030d30015a353f8f96cb9cab7bbcb71/libstdc%2B%2B%2Fstd%2Fbastring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6aa195e2030d30015a353f8f96cb9cab7bbcb71/libstdc%2B%2B%2Fstd%2Fbastring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.h?ref=b6aa195e2030d30015a353f8f96cb9cab7bbcb71", "patch": "@@ -35,22 +35,6 @@\n #include <cstddef>\n #include <std/straits.h>\n \n-#ifdef __STL_USE_EXCEPTIONS\n-\n-#include <stdexcept>\n-#define OUTOFRANGE(cond) \\\n-  do { if (!(cond)) throw out_of_range (#cond); } while (0)\n-#define LENGTHERROR(cond) \\\n-  do { if (!(cond)) throw length_error (#cond); } while (0)\n-\n-#else\n-\n-#include <cassert>\n-#define OUTOFRANGE(cond) assert (!(cond))\n-#define LENGTHERROR(cond) assert (!(cond))\n-\n-#endif\n-\n extern \"C++\" {\n class istream; class ostream;\n \n@@ -278,16 +262,8 @@ class basic_string\n   reference operator[] (size_type pos)\n     { unique (); return (*rep ())[pos]; }\n \n-  reference at (size_type pos)\n-    {\n-      OUTOFRANGE (pos >= length ());\n-      return (*this)[pos];\n-    }\n-  const_reference at (size_type pos) const\n-    {\n-      OUTOFRANGE (pos >= length ());\n-      return data ()[pos];\n-    }\n+  inline reference at (size_type pos);\n+  inline const_reference at (size_type pos) const;\n \n private:\n   void terminate () const\n@@ -383,6 +359,41 @@ class basic_string\n   charT *dat;\n };\n \n+typedef basic_string <char> string;\n+// typedef basic_string <wchar_t> wstring;\n+\n+#ifdef __STL_USE_EXCEPTIONS\n+\n+#include <stdexcept>\n+#define OUTOFRANGE(cond) \\\n+  do { if (!(cond)) throw out_of_range (#cond); } while (0)\n+#define LENGTHERROR(cond) \\\n+  do { if (!(cond)) throw length_error (#cond); } while (0)\n+\n+#else\n+\n+#include <cassert>\n+#define OUTOFRANGE(cond) assert (!(cond))\n+#define LENGTHERROR(cond) assert (!(cond))\n+\n+#endif\n+\n+template <class charT, class traits>\n+inline basic_string <charT, traits>::reference\n+basic_string <charT, traits>::at (size_type pos)\n+{\n+  OUTOFRANGE (pos >= length ());\n+  return (*this)[pos];\n+}\n+\n+template <class charT, class traits>\n+inline basic_string <charT, traits>::const_reference\n+basic_string <charT, traits>::at (size_type pos) const\n+{\n+  OUTOFRANGE (pos >= length ());\n+  return data ()[pos];\n+}\n+\n #ifdef __STL_MEMBER_TEMPLATES\n template <class charT, class traits> template <class InputIterator>\n basic_string <charT, traits>& basic_string <charT, traits>::"}, {"sha": "f18c1cfbddafb40058efb3dad40ee9f4eac040e1", "filename": "libstdc++/string", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6aa195e2030d30015a353f8f96cb9cab7bbcb71/libstdc%2B%2B%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6aa195e2030d30015a353f8f96cb9cab7bbcb71/libstdc%2B%2B%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstring?ref=b6aa195e2030d30015a353f8f96cb9cab7bbcb71", "patch": "@@ -5,9 +5,4 @@\n \n #include <std/bastring.h>\n \n-extern \"C++\" {\n-typedef basic_string <char> string;\n-// typedef basic_string <wchar_t> wstring;\n-} // extern \"C++\"\n-\n #endif"}]}