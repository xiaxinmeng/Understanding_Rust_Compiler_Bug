{"sha": "5249b4b0ce7cccf9299f7911eb8919b3006f90a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI0OWI0YjBjZTdjY2NmOTI5OWY3OTExZWI4OTE5YjMwMDZmOTBhMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-12-29T12:11:27Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-12-29T12:11:27Z"}, "message": "type_traits: Add has_nothrow_constructor.\n\n2004-12-29  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/type_traits: Add has_nothrow_constructor.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\thas_nothrow_constructor/has_nothrow_constructor.cc: New.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\thas_nothrow_constructor/typedefs.cc: Likewise.\n\nFrom-SVN: r92699", "tree": {"sha": "11e060ee350aa77d583d318af3580db0b215df06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11e060ee350aa77d583d318af3580db0b215df06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5249b4b0ce7cccf9299f7911eb8919b3006f90a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5249b4b0ce7cccf9299f7911eb8919b3006f90a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5249b4b0ce7cccf9299f7911eb8919b3006f90a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5249b4b0ce7cccf9299f7911eb8919b3006f90a1/comments", "author": null, "committer": null, "parents": [{"sha": "410d1a45e2e91a8764f05c394d31d5aa97f93c51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/410d1a45e2e91a8764f05c394d31d5aa97f93c51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/410d1a45e2e91a8764f05c394d31d5aa97f93c51"}], "stats": {"total": 110, "additions": 110, "deletions": 0}, "files": [{"sha": "c6705aa0c8a04828ac7b3798c2696faa73852db2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5249b4b0ce7cccf9299f7911eb8919b3006f90a1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5249b4b0ce7cccf9299f7911eb8919b3006f90a1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5249b4b0ce7cccf9299f7911eb8919b3006f90a1", "patch": "@@ -1,3 +1,11 @@\n+2004-12-29  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/type_traits: Add has_nothrow_constructor.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\thas_nothrow_constructor/has_nothrow_constructor.cc: New.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\thas_nothrow_constructor/typedefs.cc: Likewise.\n+\n 2004-12-28  David Edelsohn  <edelsohn@gnu.org>\n \n \t* configure.host (aix4*|aix5*): Add atomic_word_dir."}, {"sha": "3cca0202ba5e80b92a5c09a1761f87b1f81b0b05", "filename": "libstdc++-v3/include/tr1/type_traits", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5249b4b0ce7cccf9299f7911eb8919b3006f90a1/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5249b4b0ce7cccf9299f7911eb8919b3006f90a1/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits?ref=5249b4b0ce7cccf9299f7911eb8919b3006f90a1", "patch": "@@ -280,6 +280,10 @@ namespace tr1\n     struct has_trivial_destructor\n     : public integral_constant<bool, is_pod<_Tp>::value> { };\n \n+  template<typename _Tp>\n+    struct has_nothrow_constructor\n+    : public integral_constant<bool, is_pod<_Tp>::value> { };\n+\n   template<typename>\n     struct has_virtual_destructor\n     : public false_type { };"}, {"sha": "3db624154bb108ff7652c804772bbc0ebde5f6e8", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_nothrow_constructor/has_nothrow_constructor.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5249b4b0ce7cccf9299f7911eb8919b3006f90a1/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_nothrow_constructor%2Fhas_nothrow_constructor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5249b4b0ce7cccf9299f7911eb8919b3006f90a1/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_nothrow_constructor%2Fhas_nothrow_constructor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_nothrow_constructor%2Fhas_nothrow_constructor.cc?ref=5249b4b0ce7cccf9299f7911eb8919b3006f90a1", "patch": "@@ -0,0 +1,62 @@\n+// 2004-12-29  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 4.5.3 Type properties\n+\n+#include <tr1/type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::has_nothrow_constructor;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (test_category<has_nothrow_constructor, void>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor, int>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor, float>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor, EnumType>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor, int*>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor, int(*)(int)>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor, int (ClassType::*)>(true)) );\n+  // Temporarily disabled because of c++/19076 :-(\n+  // VERIFY( (test_category<has_nothrow_constructor,\n+  //   int (ClassType::*) (int)>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor, int[2]>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor, float[][3]>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor, EnumType[2][3][4]>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor, int*[3]>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor, int(*[][2])(int)>(true)) );\n+  VERIFY( (test_category<has_nothrow_constructor,\n+\t   int (ClassType::*[2][3])>(true)) );\n+  // Temporarily disabled because of c++/19076 :-(\n+  // VERIFY( (test_category<has_nothrow_constructor,\n+  //   int (ClassType::*[][2][3]) (int)>(true)) );\n+\n+  // Sanity check.\n+  VERIFY( (test_category<has_nothrow_constructor, ClassType>(false)) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "926d0f50fadd921d1f8354a4e531b390ae215be4", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_nothrow_constructor/typedefs.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5249b4b0ce7cccf9299f7911eb8919b3006f90a1/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_nothrow_constructor%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5249b4b0ce7cccf9299f7911eb8919b3006f90a1/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_nothrow_constructor%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_nothrow_constructor%2Ftypedefs.cc?ref=5249b4b0ce7cccf9299f7911eb8919b3006f90a1", "patch": "@@ -0,0 +1,36 @@\n+// 2004-12-29  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// \n+// NB: This file is for testing tr1/type_traits with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+// { dg-do compile }\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::tr1::has_nothrow_constructor<int>    test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}]}