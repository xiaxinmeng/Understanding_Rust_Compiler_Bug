{"sha": "c133e33c68938cc2b9e6de3fc73e672654513bed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzEzM2UzM2M2ODkzOGNjMmI5ZTZkZTNmYzczZTY3MjY1NDUxM2JlZA==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1997-05-16T01:00:58Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1997-05-16T01:00:58Z"}, "message": "except.c (expand_start_all_catch): If the machine needs to perform any actions at the start of an expcetion...\n\n\t* except.c (expand_start_all_catch): If the machine needs to\n\tperform any actions at the start of an expcetion handler that\n\thasn't already been done, use gen_exception_receiver to emit it.\n\t(expand_leftover_cleanups): Likewise.\n\t* alpha/alpha.md (exception_receiver): Use it.\n\t* pa/pa.h (exception_receiver): Use it.\n\nFrom-SVN: r14071", "tree": {"sha": "bceaa95a86e8d130cd3662e224ef9e5689d7be49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bceaa95a86e8d130cd3662e224ef9e5689d7be49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c133e33c68938cc2b9e6de3fc73e672654513bed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c133e33c68938cc2b9e6de3fc73e672654513bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c133e33c68938cc2b9e6de3fc73e672654513bed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c133e33c68938cc2b9e6de3fc73e672654513bed/comments", "author": null, "committer": null, "parents": [{"sha": "f51430ed7aa820f0c77e0095a5b7a1a7846fc345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f51430ed7aa820f0c77e0095a5b7a1a7846fc345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f51430ed7aa820f0c77e0095a5b7a1a7846fc345"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "7b7cb09c7f7efde8e121987a4f02b226363d8b34", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c133e33c68938cc2b9e6de3fc73e672654513bed/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c133e33c68938cc2b9e6de3fc73e672654513bed/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=c133e33c68938cc2b9e6de3fc73e672654513bed", "patch": "@@ -4382,6 +4382,11 @@\n     }\n }\")\n \n+(define_insn \"exception_receiver\"\n+  [(unspec_volatile [(const_int 0)] 2)]\n+  \"! TARGET_OPEN_VMS && ! TARGET_WINDOWS_NT\"\n+  \".long 0xc3a00000\\;ldgp $29,0($29)\")\n+\n (define_expand \"nonlocal_goto_receiver\"\n   [(unspec_volatile [(const_int 0)] 1)\n    (set (reg:DI 27) (mem:DI (reg:DI 29)))"}, {"sha": "3ac0bece7dbd7eba436a5201b8717779b4e58c5e", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c133e33c68938cc2b9e6de3fc73e672654513bed/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c133e33c68938cc2b9e6de3fc73e672654513bed/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=c133e33c68938cc2b9e6de3fc73e672654513bed", "patch": "@@ -5155,4 +5155,24 @@\n ;; Out of range and PIC \n \t  (const_int 44)))])\n \n+;; On the PA, the PIC register is call clobbered, so it must\n+;; be saved & restored around calls by the caller.  If the call\n+;; doesn't return normally (nonlocal goto, or an exception is\n+;; thrown), then the code at the exception handler label must\n+;; restore the PIC register.\n+(define_expand \"exception_receiver\"\n+  [(const_int 4)]\n+  \"!TARGET_PORTABLE_RUNTIME && flag_pic\"\n+  \"\n+{\n+  /* Load the PIC register from the stack slot (in our caller's\n+     frame).  */\n+  emit_move_insn (pic_offset_table_rtx,\n+\t\t  gen_rtx (MEM, SImode,\n+\t\t\t   plus_constant (stack_pointer_rtx, -32)));\n+  emit_insn (gen_rtx (USE, VOIDmode, pic_offset_table_rtx));\n+  emit_insn (gen_blockage ());\n+  DONE;\n+}\")\n+\n "}]}