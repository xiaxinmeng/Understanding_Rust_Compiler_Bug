{"sha": "bf85ff03b3e6a17da5bee164114721ea076e33ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY4NWZmMDNiM2U2YTE3ZGE1YmVlMTY0MTE0NzIxZWEwNzZlMzNhZA==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-10-28T10:03:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-27T09:15:44Z"}, "message": "[Ada] Emit error messages for null/generic nonreturning procedures\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Pragma): declare new Check_No_Return\n\tfunction and call it.", "tree": {"sha": "0d88cdf0ec89d00322763dd0af54b0cbe0a3e7ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d88cdf0ec89d00322763dd0af54b0cbe0a3e7ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf85ff03b3e6a17da5bee164114721ea076e33ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf85ff03b3e6a17da5bee164114721ea076e33ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf85ff03b3e6a17da5bee164114721ea076e33ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf85ff03b3e6a17da5bee164114721ea076e33ad/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78287696dc5f788b28f8541c93809e002f722f81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78287696dc5f788b28f8541c93809e002f722f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78287696dc5f788b28f8541c93809e002f722f81"}], "stats": {"total": 66, "additions": 62, "deletions": 4}, "files": [{"sha": "bb891326b33fd65dbeff5e0d73c6f78956a263dc", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 62, "deletions": 4, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf85ff03b3e6a17da5bee164114721ea076e33ad/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf85ff03b3e6a17da5bee164114721ea076e33ad/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=bf85ff03b3e6a17da5bee164114721ea076e33ad", "patch": "@@ -19670,7 +19670,59 @@ package body Sem_Prag is\n \n          --  pragma No_Return (procedure_LOCAL_NAME {, procedure_Local_Name});\n \n-         when Pragma_No_Return => No_Return : declare\n+         when Pragma_No_Return => Prag_No_Return : declare\n+\n+            function Check_No_Return\n+               (E : Entity_Id;\n+                N : Node_Id) return Boolean;\n+            --  Check rule 6.5.1 4/3 of the Ada Ref Manual. If the rule is\n+            --  violated, emit an error message and return False, otherwise\n+            --  return True.\n+            --  6.5.1 Nonreturning procedures:\n+            --  4/3 \"Aspect No_Return shall not be specified for a null\n+            --  procedure nor an instance of a generic unit.\"\n+\n+            ---------------------\n+            -- Check_No_Return --\n+            ---------------------\n+\n+            function Check_No_Return\n+               (E : Entity_Id;\n+                N : Node_Id) return Boolean\n+            is\n+               Ok : Boolean := True;\n+            begin\n+               if Ekind (E) = E_Procedure then\n+\n+                  --  If E is a generic instance, marking it with No_Return is\n+                  --  forbidden, but having it inherit the No_Return of the\n+                  --  generic is allowed. We check if E is inheriting its\n+                  --  No_Return flag from the generic by checking if No_Return\n+                  --  is already set.\n+\n+                  if Is_Generic_Instance (E) and then not No_Return (E) then\n+                     Error_Msg_NE\n+                       (\"generic instance & is marked as No_Return\", N, E);\n+                     Error_Msg_NE\n+                       (\"\\generic procedure & must be marked No_Return\",\n+                        N,\n+                        Generic_Parent (Parent (E)));\n+                     Ok := False;\n+\n+                  else\n+                     if Null_Present (Subprogram_Specification (E)) then\n+                        Error_Msg_NE\n+                          (\"null procedure & cannot be marked No_Return\",\n+                           N,\n+                           E);\n+                        Ok := False;\n+                     end if;\n+                  end if;\n+               end if;\n+\n+               return Ok;\n+            end Check_No_Return;\n+\n             Arg   : Node_Id;\n             E     : Entity_Id;\n             Found : Boolean;\n@@ -19742,7 +19794,9 @@ package body Sem_Prag is\n                         end if;\n                      end if;\n \n-                     Set_No_Return (E);\n+                     if Check_No_Return (E, N) then\n+                        Set_No_Return (E);\n+                     end if;\n \n                      --  A pragma that applies to a Ghost entity becomes Ghost\n                      --  for the purposes of legality checks and removal of\n@@ -19781,7 +19835,10 @@ package body Sem_Prag is\n \n                      --  Set flag on any alias as well\n \n-                     if Is_Overloadable (E) and then Present (Alias (E)) then\n+                     if Is_Overloadable (E)\n+                       and then Present (Alias (E))\n+                       and then Check_No_Return (Alias (E), N)\n+                     then\n                         Set_No_Return (Alias (E));\n                      end if;\n \n@@ -19798,6 +19855,7 @@ package body Sem_Prag is\n                if not Found then\n                   if Entity (Id) = Current_Scope\n                     and then From_Aspect_Specification (N)\n+                    and then Check_No_Return (Entity (Id), N)\n                   then\n                      Set_No_Return (Entity (Id));\n \n@@ -19812,7 +19870,7 @@ package body Sem_Prag is\n \n                Next (Arg);\n             end loop;\n-         end No_Return;\n+         end Prag_No_Return;\n \n          -----------------\n          -- No_Run_Time --"}]}