{"sha": "b3638b64c3645bd3bd5dbf0e9d826557a14e1e82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM2MzhiNjRjMzY0NWJkM2JkNWRiZjBlOWQ4MjY1NTdhMTRlMWU4Mg==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2006-05-06T20:57:18Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2006-05-06T20:57:18Z"}, "message": "jni.exp (gcj_jni_compile_c_to_so): Add check for HP-UX and add appropriate extension for shared libraries, sl.\n\n2006-05-06  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* testsuite/libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Add check for\n\tHP-UX and add appropriate extension for shared libraries, sl.\n\t(gcj_jni_test_one): Likewise.\n\t\n\t* testsuite/lib/libjava.exp (libjava_find_lib): Add sl to the shared\n\tlibrary extensions.\n\nFrom-SVN: r113587", "tree": {"sha": "b821e5243a831b6ef7260527ae9d32f5892eceb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b821e5243a831b6ef7260527ae9d32f5892eceb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3638b64c3645bd3bd5dbf0e9d826557a14e1e82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3638b64c3645bd3bd5dbf0e9d826557a14e1e82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3638b64c3645bd3bd5dbf0e9d826557a14e1e82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3638b64c3645bd3bd5dbf0e9d826557a14e1e82/comments", "author": null, "committer": null, "parents": [{"sha": "ed1a08a75981e44e3fe6ac91f18a9b4900bbb43d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed1a08a75981e44e3fe6ac91f18a9b4900bbb43d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed1a08a75981e44e3fe6ac91f18a9b4900bbb43d"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "e9618172d2c9ecfd2a1884a6f2c40de8ab0dce3d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3638b64c3645bd3bd5dbf0e9d826557a14e1e82/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3638b64c3645bd3bd5dbf0e9d826557a14e1e82/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b3638b64c3645bd3bd5dbf0e9d826557a14e1e82", "patch": "@@ -1,3 +1,12 @@\n+2006-05-06  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Add check for\n+\tHP-UX and add appropriate extension for shared libraries, sl.\n+\t(gcj_jni_test_one): Likewise.\n+\t\n+\t* testsuite/lib/libjava.exp (libjava_find_lib): Add sl to the shared\n+\tlibrary extensions.\n+\n 2006-05-05  Tom Tromey  <tromey@redhat.com>\n \n \tPR libgcj/27294:\n@@ -10,7 +19,7 @@\n \t* java/lang/Class.java (getClassLoader(Class)): New.\n \tforName(String, Class): New.\n \t* java/lang/natClass.cc (getClassLoader(Class)): New.\n-\t\n+\n 2006-05-02  Andrew Haley  <aph@redhat.com>\n \n \t* prims.cc (_Jv_NewMultiArray): Check for phantom class.\n@@ -73,7 +82,7 @@\n \tNullPointerException every time.\n \t* include/java-interp.h (_Jv_ResolvedMethod): Remove vtable_index\n \tfield.\n-\t* include/execution.h (resolve_method): Remove vtable_index argument.\t\n+\t* include/execution.h (resolve_method): Remove vtable_index argument.\n \n 2006-04-28  Andreas Tobler  <a.tobler@schweiz.ch>\n "}, {"sha": "fa9c0444733d5ffca360f27c5763554eab1b7843", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3638b64c3645bd3bd5dbf0e9d826557a14e1e82/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3638b64c3645bd3bd5dbf0e9d826557a14e1e82/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=b3638b64c3645bd3bd5dbf0e9d826557a14e1e82", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation\n+# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006 Free Software Foundation\n \n proc load_gcc_lib { filename } {\n     global srcdir\n@@ -242,7 +242,7 @@ proc libjava_init { args } {\n proc libjava_find_lib {dir name} {\n     global base_dir\n     set gp [get_multilibs]\n-    foreach extension {so dll dylib a} {\n+    foreach extension {so dll dylib sl a} {\n \tforeach sub {.libs _libs} {\n \t    if {$gp != \"\"} {\n \t\tif {[file exists $gp/$dir/$sub/lib${name}.${extension}]} then {"}, {"sha": "6cd677d77aa17d67d5843eae28b9544c6ced8d7b", "filename": "libjava/testsuite/libjava.jni/jni.exp", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3638b64c3645bd3bd5dbf0e9d826557a14e1e82/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3638b64c3645bd3bd5dbf0e9d826557a14e1e82/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp?ref=b3638b64c3645bd3bd5dbf0e9d826557a14e1e82", "patch": "@@ -10,13 +10,17 @@ proc gcj_jni_compile_c_to_so {file {options {}}} {\n   set options_cxx $options\n   set options \"\"\n \n-# apple uses a different extension for shared/dynamic libraries\n+# Apple uses a different extension for shared/dynamic libraries\n # so we check against powerpc-apple-darwin and set them to\n-# dylib, else we assume it's .so\n+# dylib.\n+# HP-UX uses sl, so we check this too, otherwise we take so.\n \n   if { [istarget \"*-*-darwin*\"] } {\n       set so_extension \"dylib\"\n       set so_flag \"-dynamiclib\"\n+  } elseif { [istarget \"hppa*-hp-hpux*\"] } {\n+      set so_extension \"sl\"\n+      set so_flag \"-shared\"\n   } else {\n       set so_extension \"so\"\n       set so_flag \"-shared\"\n@@ -76,12 +80,15 @@ proc gcj_jni_test_one {file} {\n   global host_triplet\n   global INTERPRETER\n \n-# apple uses a different extension for shared/dynamic libraries\n+# Apple uses a different extension for shared/dynamic libraries\n # so we check against powerpc-apple-darwin and set them to\n-# dylib, else we assume it's .so\n+# dylib.\n+# HP-UX uses sl, so we check this too, otherwise we take so.\n \n   if { [istarget \"*-*-darwin*\"] } {\n       set so_extension \"dylib\"\n+  } elseif { [istarget \"hppa*-hp-hpux*\"] } {\n+      set so_extension \"sl\"\n   } else {\n       set so_extension \"so\"\n   }"}]}