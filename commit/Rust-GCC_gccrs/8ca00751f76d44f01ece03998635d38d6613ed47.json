{"sha": "8ca00751f76d44f01ece03998635d38d6613ed47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNhMDA3NTFmNzZkNDRmMDFlY2UwMzk5ODYzNWQzOGQ2NjEzZWQ0Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-30T23:13:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-30T23:13:44Z"}, "message": "(emit_block_move): Only use movstr if size is small enough constant or\nMODE is at least BITS_PER_WORD.\n\nFrom-SVN: r8585", "tree": {"sha": "ad0fb6ead21f20e5ce348ce8dfdb56abde3903f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad0fb6ead21f20e5ce348ce8dfdb56abde3903f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ca00751f76d44f01ece03998635d38d6613ed47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca00751f76d44f01ece03998635d38d6613ed47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ca00751f76d44f01ece03998635d38d6613ed47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca00751f76d44f01ece03998635d38d6613ed47/comments", "author": null, "committer": null, "parents": [{"sha": "8922eb5b249f40a3f6835570eebba2126aa32aa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8922eb5b249f40a3f6835570eebba2126aa32aa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8922eb5b249f40a3f6835570eebba2126aa32aa2"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "4c2ac5470d72f0cf3e504039fe0e02184ab3109d", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca00751f76d44f01ece03998635d38d6613ed47/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca00751f76d44f01ece03998635d38d6613ed47/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=8ca00751f76d44f01ece03998635d38d6613ed47", "patch": "@@ -1624,7 +1624,10 @@ emit_block_move (x, y, size, align)\n \t\t here because if SIZE is less than the mode mask, as it is\n \t\t returned by the macro, it will definitely be less than the\n \t\t actual mode mask.  */\n-\t      && (unsigned HOST_WIDE_INT) INTVAL (size) <= GET_MODE_MASK (mode)\n+\t      && ((GET_CODE (size) == CONST_INT\n+\t\t   && ((unsigned HOST_WIDE_INT) INTVAL (size)\n+\t\t       <= GET_MODE_MASK (mode)))\n+\t\t  || GET_MODE_BITSIZE (mode) >= BITS_PER_WORD)\n \t      && (insn_operand_predicate[(int) code][0] == 0\n \t\t  || (*insn_operand_predicate[(int) code][0]) (x, BLKmode))\n \t      && (insn_operand_predicate[(int) code][1] == 0"}]}