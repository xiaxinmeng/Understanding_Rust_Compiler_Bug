{"sha": "3090fa556b469453c5dcddf6617443d26365d9d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA5MGZhNTU2YjQ2OTQ1M2M1ZGNkZGY2NjE3NDQzZDI2MzY1ZDlkMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-11-10T14:06:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-11-10T14:06:56Z"}, "message": "re PR tree-optimization/63798 (FAIL: gcc.target/powerpc/ppc-fmadd-1.c scan-assembler-not f(add|sub|mul|neg))\n\n2014-11-10  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/63798\n\t* expr.c (expand_expr_real_2): When expanding FMA_EXPRs\n\tproperly treat the embedded multiplication as commutative\n\twhen looking for feeding negates.\n\nFrom-SVN: r217287", "tree": {"sha": "f4818fc8c8e6bf0a682024c1468df6402331438b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4818fc8c8e6bf0a682024c1468df6402331438b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3090fa556b469453c5dcddf6617443d26365d9d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3090fa556b469453c5dcddf6617443d26365d9d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3090fa556b469453c5dcddf6617443d26365d9d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3090fa556b469453c5dcddf6617443d26365d9d0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27be769ce52a87d88ee63707fe8c0fb4fe7bfd06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27be769ce52a87d88ee63707fe8c0fb4fe7bfd06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27be769ce52a87d88ee63707fe8c0fb4fe7bfd06"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "a2157f63203c3eeccb0d709244af886cbf144620", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3090fa556b469453c5dcddf6617443d26365d9d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3090fa556b469453c5dcddf6617443d26365d9d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3090fa556b469453c5dcddf6617443d26365d9d0", "patch": "@@ -1,3 +1,10 @@\n+2014-11-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/63798\n+\t* expr.c (expand_expr_real_2): When expanding FMA_EXPRs\n+\tproperly treat the embedded multiplication as commutative\n+\twhen looking for feeding negates.\n+\n 2014-11-10  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* config/avr/avr.h (CPLUSPLUS_CPP_SPEC): Define."}, {"sha": "0ef06ea98ae5d8d5a9fd1813d2a4c6f91ab11943", "filename": "gcc/expr.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3090fa556b469453c5dcddf6617443d26365d9d0/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3090fa556b469453c5dcddf6617443d26365d9d0/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=3090fa556b469453c5dcddf6617443d26365d9d0", "patch": "@@ -8621,6 +8621,19 @@ expand_expr_real_2 (sepops ops, rtx target, machine_mode tmode,\n \t  }\n \n \tdef0 = get_def_for_expr (treeop0, NEGATE_EXPR);\n+\t/* The multiplication is commutative - look at its 2nd operand\n+\t   if the first isn't fed by a negate.  */\n+\tif (!def0)\n+\t  {\n+\t    def0 = get_def_for_expr (treeop1, NEGATE_EXPR);\n+\t    /* Swap operands if the 2nd operand is fed by a negate.  */\n+\t    if (def0)\n+\t      {\n+\t\ttree tem = treeop0;\n+\t\ttreeop0 = treeop1;\n+\t\ttreeop1 = tem;\n+\t      }\n+\t  }\n \tdef2 = get_def_for_expr (treeop2, NEGATE_EXPR);\n \n \top0 = op2 = NULL;"}]}