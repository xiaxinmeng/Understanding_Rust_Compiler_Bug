{"sha": "c7e936dbc7f59ad09c28ef57e5399a4256061747", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdlOTM2ZGJjN2Y1OWFkMDljMjhlZjU3ZTUzOTlhNDI1NjA2MTc0Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-03-12T03:19:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-03-12T03:19:22Z"}, "message": "PR c++/86521 - wrong overload resolution with ref-qualifiers.\n\nHere we were wrongly treating binding a const lvalue ref to an xvalue as\ndirect binding, which is wrong under [dcl.init.ref] and [over.match.ref].\n\n\t* call.c (build_user_type_conversion_1): Don't use a conversion to a\n\treference of the wrong rvalueness for direct binding.\n\nFrom-SVN: r269602", "tree": {"sha": "97f7d2633863ab739c04134466c4d3070ac089b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97f7d2633863ab739c04134466c4d3070ac089b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7e936dbc7f59ad09c28ef57e5399a4256061747", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e936dbc7f59ad09c28ef57e5399a4256061747", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7e936dbc7f59ad09c28ef57e5399a4256061747", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e936dbc7f59ad09c28ef57e5399a4256061747/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d5d5cb5b2e9be633aaa398cd90e6cff9ee06bc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d5d5cb5b2e9be633aaa398cd90e6cff9ee06bc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d5d5cb5b2e9be633aaa398cd90e6cff9ee06bc9"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "334023998861545fb96a65c069412c5c1477b14e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e936dbc7f59ad09c28ef57e5399a4256061747/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e936dbc7f59ad09c28ef57e5399a4256061747/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c7e936dbc7f59ad09c28ef57e5399a4256061747", "patch": "@@ -1,3 +1,9 @@\n+2019-03-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/86521 - wrong overload resolution with ref-qualifiers.\n+\t* call.c (build_user_type_conversion_1): Don't use a conversion to a\n+\treference of the wrong rvalueness for direct binding.\n+\n 2019-03-11  Martin Liska  <mliska@suse.cz>\n \n \t* cvt.c (build_expr_type_conversion): Wrap apostrophes"}, {"sha": "bf48ae2c27a7e12a145874cee88349084588634c", "filename": "gcc/cp/call.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e936dbc7f59ad09c28ef57e5399a4256061747/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e936dbc7f59ad09c28ef57e5399a4256061747/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=c7e936dbc7f59ad09c28ef57e5399a4256061747", "patch": "@@ -4039,6 +4039,14 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags,\n \t\t\t\t\t\t       rettype, totype,\n \t\t\t\t\t\t       EXPR_LOCATION (expr));\n \t    }\n+\t  else if (TYPE_REF_P (totype) && !ics->rvaluedness_matches_p\n+\t\t   && TREE_CODE (TREE_TYPE (totype)) != FUNCTION_TYPE)\n+\t    {\n+\t      /* If we are called to convert to a reference type, we are trying\n+\t\t to find a direct binding per [over.match.ref], so rvaluedness\n+\t\t must match for non-functions.  */\n+\t      cand->viable = 0;\n+\t    }\n \t  else if (DECL_NONCONVERTING_P (cand->fn)\n \t\t   && ics->rank > cr_exact)\n \t    {"}, {"sha": "42a135dbf4449aadfb6497c3c7bb4696d99eb301", "filename": "gcc/testsuite/g++.dg/cpp0x/overload-conv-3.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e936dbc7f59ad09c28ef57e5399a4256061747/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverload-conv-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e936dbc7f59ad09c28ef57e5399a4256061747/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverload-conv-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverload-conv-3.C?ref=c7e936dbc7f59ad09c28ef57e5399a4256061747", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/86521\n+// { dg-do compile { target c++11 } }\n+\n+template <class T> T&& move (T&);\n+\n+struct Dest {\n+  Dest() = default;\n+  Dest( Dest && ) = default;\n+  Dest( Dest const & ) = delete;\n+};\n+\n+struct Source {\n+  Dest val;\n+  operator Dest () && { return move( val ); }\n+  operator Dest const & () const & { return val; }\n+};\n+\n+int main() {\n+  Source x;\n+  Dest d(move(x));\t\t// { dg-error \"ambiguous\" }\n+}"}, {"sha": "57487df500bde303d0a30265735dc0c77ad58c9d", "filename": "libstdc++-v3/testsuite/20_util/is_constructible/value-2.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7e936dbc7f59ad09c28ef57e5399a4256061747/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_constructible%2Fvalue-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7e936dbc7f59ad09c28ef57e5399a4256061747/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_constructible%2Fvalue-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fis_constructible%2Fvalue-2.cc?ref=c7e936dbc7f59ad09c28ef57e5399a4256061747", "patch": "@@ -806,10 +806,12 @@ static_assert(!std::is_constructible<int&&, ExplicitTo<int>>::value, \"Error\");\n // Binding through reference-compatible type is required to perform\n // direct-initialization as described in [over.match.ref] p. 1 b. 1:\n static_assert(std::is_constructible<int&, ExplicitTo<int&>>::value, \"Error\");\n-static_assert(std::is_constructible<const int&, ExplicitTo<int&&>>::value,\n-\t      \"Error\");\n static_assert(std::is_constructible<int&&, ExplicitTo<int&&>>::value, \"Error\");\n \n+// But an xvalue doesn't count for direct binding.\n+static_assert(!std::is_constructible<const int&, ExplicitTo<int&&>>::value,\n+\t      \"Error\");\n+\n // Binding through temporary behaves like copy-initialization,\n // see [dcl.init.ref] p. 5, very last sub-bullet:\n static_assert(!std::is_constructible<const int&, ExplicitTo<double&&>>::value,"}]}