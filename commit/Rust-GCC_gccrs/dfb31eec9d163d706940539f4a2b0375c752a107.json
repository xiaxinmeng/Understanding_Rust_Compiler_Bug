{"sha": "dfb31eec9d163d706940539f4a2b0375c752a107", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZiMzFlZWM5ZDE2M2Q3MDY5NDA1MzlmNGEyYjAzNzVjNzUyYTEwNw==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1999-01-09T17:10:22Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "1999-01-09T17:10:22Z"}, "message": "c4x.md: (in_annul_slot_3): Allow unarycc and binarycc operations in 3rd annulled delay slot.\n\n\t* config/c4x/c4x.md: (in_annul_slot_3): Allow unarycc and binarycc\n\toperations in 3rd annulled delay slot.\n\t(*lshrqi3_const_set): Disallow c constraint for operand0.\n\t(modhi3+1, modhi3+2): Set attribute type to multi.\n\t* config/c4x/c4x.c (c4x_S_constraint): Removed space in middle of\n\t!= operator.\n\nFrom-SVN: r24592", "tree": {"sha": "47b5352918cf45866ffeb63c638f2f32b161c97a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47b5352918cf45866ffeb63c638f2f32b161c97a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfb31eec9d163d706940539f4a2b0375c752a107", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfb31eec9d163d706940539f4a2b0375c752a107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfb31eec9d163d706940539f4a2b0375c752a107", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfb31eec9d163d706940539f4a2b0375c752a107/comments", "author": null, "committer": null, "parents": [{"sha": "377d43163e3e3375c76b94f76f8f348597a07aa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/377d43163e3e3375c76b94f76f8f348597a07aa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/377d43163e3e3375c76b94f76f8f348597a07aa8"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "408772ccc94534ea480fc6004aa25290c78652ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfb31eec9d163d706940539f4a2b0375c752a107/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfb31eec9d163d706940539f4a2b0375c752a107/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dfb31eec9d163d706940539f4a2b0375c752a107", "patch": "@@ -1,3 +1,12 @@\n+Sun Jan 10 14:04:51 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.md: (in_annul_slot_3): Allow unarycc and binarycc\n+\toperations in 3rd annulled delay slot.\n+\t(*lshrqi3_const_set): Disallow c constraint for operand0.\n+\t(modhi3+1, modhi3+2): Set attribute type to multi.\n+\t* config/c4x/c4x.c (c4x_S_constraint): Removed space in middle of \n+\t!= operator.\n+\n Sat Jan  9 11:44:55 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gansidecl.h: Allow attribute unused on labels only when we are"}, {"sha": "a4aa23a21a96bcff0d1c003198b25bd60ecf5794", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfb31eec9d163d706940539f4a2b0375c752a107/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfb31eec9d163d706940539f4a2b0375c752a107/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=dfb31eec9d163d706940539f4a2b0375c752a107", "patch": "@@ -2417,7 +2417,7 @@ c4x_S_constraint (op)\n \tif (REG_P (op1))\n \t  return 1;\n \n-\tif (GET_CODE (op1) ! = CONST_INT)\n+\tif (GET_CODE (op1) != CONST_INT)\n \t  return 0;\n \t\n \t/* HImode and HFmode must be offsettable.  */"}, {"sha": "1a0eec77f517d3550fefc33c435384c5f0f67ff4", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfb31eec9d163d706940539f4a2b0375c752a107/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfb31eec9d163d706940539f4a2b0375c752a107/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=dfb31eec9d163d706940539f4a2b0375c752a107", "patch": "@@ -369,7 +369,7 @@\n \n (define_attr \"in_annul_slot_3\" \"false,true\"\n   (if_then_else (and (eq_attr \"cpu\" \"c4x\")\n-\t\t     (eq_attr \"type\" \"!jump,call,rets,jmpc,unarycc,binarycc,compare,db,dbc,repeat,repeat_top,laj,push,pop,multi\"))\n+\t\t     (eq_attr \"type\" \"!jump,call,rets,jmpc,db,dbc,repeat,repeat_top,laj,push,pop,multi\"))\n \t\t(const_string \"true\")\n \t\t(const_string \"false\")))\n \n@@ -2480,19 +2480,17 @@\n (define_insn \"*lshrqi3_const_set\"\n   [(set (reg:CC 21)\n         (compare:CC\n-          (lshiftrt:QI (match_operand:QI 1 \"src_operand\" \"0,0,r,r\")\n-                       (match_operand:QI 2 \"const_int_operand\" \"n,n,J,J\"))\n+          (lshiftrt:QI (match_operand:QI 1 \"src_operand\" \"0,r\")\n+                       (match_operand:QI 2 \"const_int_operand\" \"n,J\"))\n           (const_int 0)))\n-   (set (match_operand:QI 0 \"reg_operand\" \"=?d,?c,d,c\")\n+   (set (match_operand:QI 0 \"reg_operand\" \"=?d,d\")\n         (lshiftrt:QI (match_dup 1)\n                      (match_dup 2)))]\n   \"valid_operands (LSHIFTRT, operands, QImode)\"\n   \"@\n    lsh\\\\t%n2,%0\n-   lsh\\\\t%n2,%0\n-   lsh3\\\\t%n2,%1,%0\n    lsh3\\\\t%n2,%1,%0\"\n-  [(set_attr \"type\" \"binarycc,binarycc,binarycc,binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc\")])\n \n (define_insn \"*lshrqi3_nonconst_clobber\"\n   [(set (match_operand:QI 0 \"reg_operand\" \"=d,?d,d,c,?c,c\")\n@@ -6192,7 +6190,8 @@\n                    (const_int -1)))\n      (clobber (reg:CC_NOOV 21))])]\n   \"! c4x_label_conflict (insn, operands[2], operands[1])\"\n-  \"db%I3\\\\t%0,%l1\\\\n\\\\tb%3\\\\t%l2\")\n+  \"db%I3\\\\t%0,%l1\\\\n\\\\tb%3\\\\t%l2\"\n+  [(set_attr \"type\" \"multi\")])\n \n (define_peephole\n   [(set (pc) (if_then_else (match_operator 3 \"comparison_operator\"\n@@ -6211,7 +6210,8 @@\n                    (const_int -1)))\n      (clobber (reg:CC_NOOV 21))])]\n   \"! c4x_label_conflict (insn, operands[2], operands[1])\"\n-  \"db%I3\\\\t%0,%l1\\\\n\\\\tb%3\\\\t%l2\")\n+  \"db%I3\\\\t%0,%l1\\\\n\\\\tb%3\\\\t%l2\"\n+  [(set_attr \"type\" \"multi\")])\n \n ;\n ; Peepholes to convert 'call label; rets' into jump label"}]}