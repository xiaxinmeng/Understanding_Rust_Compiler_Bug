{"sha": "d86c2d9495583ed214132bf5b3ca43b87026db68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg2YzJkOTQ5NTU4M2VkMjE0MTMyYmY1YjNjYTQzYjg3MDI2ZGI2OA==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2012-02-13T15:18:14Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2012-02-13T15:18:14Z"}, "message": "re PR libffi/52221 ([libffi] r183675,r184021 needs to be fixed.)\n\n        PR libffi/52221\n        * src/x86/ffi.c (ffi_prep_raw_closure_loc): Add thiscall\n        support for X86_WIN32.\n        (FFI_INIT_TRAMPOLINE_THISCALL): Fix displacement.\n\nFrom-SVN: r184155", "tree": {"sha": "34ae0d61921efe6ef8675e314bd135d30145aefc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34ae0d61921efe6ef8675e314bd135d30145aefc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d86c2d9495583ed214132bf5b3ca43b87026db68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d86c2d9495583ed214132bf5b3ca43b87026db68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d86c2d9495583ed214132bf5b3ca43b87026db68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d86c2d9495583ed214132bf5b3ca43b87026db68/comments", "author": null, "committer": null, "parents": [{"sha": "1eb3478fe884103b774ddaeba795c33adb4ca517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb3478fe884103b774ddaeba795c33adb4ca517", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eb3478fe884103b774ddaeba795c33adb4ca517"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "3b3167ae77bc949e920518f4c2f1275c1a8f4696", "filename": "libffi/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d86c2d9495583ed214132bf5b3ca43b87026db68/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d86c2d9495583ed214132bf5b3ca43b87026db68/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=d86c2d9495583ed214132bf5b3ca43b87026db68", "patch": "@@ -1,3 +1,10 @@\n+2012-02-13  Kai Tietz  <ktietz@redhat.com>\n+\n+\tPR libffi/52221\n+\t* src/x86/ffi.c (ffi_prep_raw_closure_loc): Add thiscall\n+\tsupport for X86_WIN32.\n+\t(FFI_INIT_TRAMPOLINE_THISCALL): Fix displacement.\n+\n 2012-02-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* src/sparc/v9.S (STACKFRAME): Bump to 176."}, {"sha": "88edbc102f9fb8eab3b5bb834f4e052d981818bd", "filename": "libffi/src/x86/ffi.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d86c2d9495583ed214132bf5b3ca43b87026db68/libffi%2Fsrc%2Fx86%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d86c2d9495583ed214132bf5b3ca43b87026db68/libffi%2Fsrc%2Fx86%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffi.c?ref=d86c2d9495583ed214132bf5b3ca43b87026db68", "patch": "@@ -614,7 +614,7 @@ ffi_prep_incoming_args_SYSV(char *stack, void **rvalue, void **avalue,\n { unsigned char *__tramp = (unsigned char*)(TRAMP); \\\n    unsigned int  __fun = (unsigned int)(FUN); \\\n    unsigned int  __ctx = (unsigned int)(CTX); \\\n-   unsigned int  __dis = __fun - (__ctx + 22);  \\\n+   unsigned int  __dis = __fun - (__ctx + 49);  \\\n    unsigned short __size = (unsigned short)(SIZE); \\\n    *(unsigned int *) &__tramp[0] = 0x8324048b;\t/* mov (%esp), %eax */ \\\n    *(unsigned int *) &__tramp[4] = 0x4c890cec;\t/* sub $12, %esp */ \\\n@@ -720,6 +720,9 @@ ffi_prep_raw_closure_loc (ffi_raw_closure* closure,\n   int i;\n \n   if (cif->abi != FFI_SYSV) {\n+#ifdef X86_WIN32\n+    if (cif->abi != FFI_THISCALL)\n+#endif\n     return FFI_BAD_ABI;\n   }\n \n@@ -734,10 +737,20 @@ ffi_prep_raw_closure_loc (ffi_raw_closure* closure,\n       FFI_ASSERT (cif->arg_types[i]->type != FFI_TYPE_LONGDOUBLE);\n     }\n   \n-\n+#ifdef X86_WIN32\n+  if (cif->abi == FFI_SYSV)\n+    {\n+#endif\n   FFI_INIT_TRAMPOLINE (&closure->tramp[0], &ffi_closure_raw_SYSV,\n                        codeloc);\n-    \n+#ifdef X86_WIN32\n+    }\n+  else if (cif->abi == FFI_THISCALL)\n+    {\n+      FFI_INIT_TRAMPOLINE_THISCALL (&closure->tramp[0], &ffi_closure_raw_SYSV,\n+\t\t\t\t    codeloc, cif->bytes);\n+    }\n+#endif\n   closure->cif  = cif;\n   closure->user_data = user_data;\n   closure->fun  = fun;"}]}