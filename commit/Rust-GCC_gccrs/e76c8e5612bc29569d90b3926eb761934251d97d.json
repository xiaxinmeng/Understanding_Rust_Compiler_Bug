{"sha": "e76c8e5612bc29569d90b3926eb761934251d97d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc2YzhlNTYxMmJjMjk1NjlkOTBiMzkyNmViNzYxOTM0MjUxZDk3ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-19T17:28:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-19T17:28:29Z"}, "message": "aarch64.c (aarch64_stack_protect_guard): Move outside of #if CHECKING_P code.\n\n\t* config/aarch64/aarch64.c (aarch64_stack_protect_guard): Move\n\toutside of #if CHECKING_P code.\n\nFrom-SVN: r268095", "tree": {"sha": "915505f77963619d9907f84ce66c71cd9e004d4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/915505f77963619d9907f84ce66c71cd9e004d4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e76c8e5612bc29569d90b3926eb761934251d97d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76c8e5612bc29569d90b3926eb761934251d97d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e76c8e5612bc29569d90b3926eb761934251d97d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76c8e5612bc29569d90b3926eb761934251d97d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e047844bd6af7b167eb06c570c2c79b800165bfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e047844bd6af7b167eb06c570c2c79b800165bfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e047844bd6af7b167eb06c570c2c79b800165bfb"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "01d4e7e6bb024dd7d46d9a112f5052de575f9c50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76c8e5612bc29569d90b3926eb761934251d97d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76c8e5612bc29569d90b3926eb761934251d97d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e76c8e5612bc29569d90b3926eb761934251d97d", "patch": "@@ -1,3 +1,8 @@\n+2019-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_stack_protect_guard): Move\n+\toutside of #if CHECKING_P code.\n+\n 2019-01-19  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gimple-loop-versioning.cc (loop_versioning::dump_inner_likelihood):"}, {"sha": "5df5a8b78439e69705e62845a4d1f86166a01894", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76c8e5612bc29569d90b3926eb761934251d97d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76c8e5612bc29569d90b3926eb761934251d97d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=e76c8e5612bc29569d90b3926eb761934251d97d", "patch": "@@ -18662,6 +18662,19 @@ aarch64_simd_clone_usable (struct cgraph_node *node)\n     }\n }\n \n+/* Implement TARGET_STACK_PROTECT_GUARD. In case of a\n+   global variable based guard use the default else\n+   return a null tree.  */\n+static tree\n+aarch64_stack_protect_guard (void)\n+{\n+  if (aarch64_stack_protector_guard == SSP_GLOBAL)\n+    return default_stack_protect_guard ();\n+\n+  return NULL_TREE;\n+}\n+\n+\n /* Target-specific selftests.  */\n \n #if CHECKING_P\n@@ -18706,19 +18719,6 @@ aarch64_run_selftests (void)\n \n } // namespace selftest\n \n-/* Implement TARGET_STACK_PROTECT_GUARD. In case of a\n-   global variable based guard use the default else\n-   return a null tree.  */\n-static tree\n-aarch64_stack_protect_guard (void)\n-{\n-  if (aarch64_stack_protector_guard == SSP_GLOBAL)\n-    return default_stack_protect_guard ();\n-\n-  return NULL_TREE;\n-}\n-\n-\n #endif /* #if CHECKING_P */\n \n #undef TARGET_STACK_PROTECT_GUARD"}]}