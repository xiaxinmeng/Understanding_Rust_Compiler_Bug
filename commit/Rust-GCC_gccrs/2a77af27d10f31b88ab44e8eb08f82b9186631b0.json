{"sha": "2a77af27d10f31b88ab44e8eb08f82b9186631b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE3N2FmMjdkMTBmMzFiODhhYjQ0ZThlYjA4ZjgyYjkxODY2MzFiMA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2002-12-22T06:42:16Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2002-12-22T06:42:16Z"}, "message": "integrate.c (output_inline_function): Don't hold private pointers to 'struct function' over GC calls.\n\n\t* integrate.c (output_inline_function): Don't hold private\n\tpointers to 'struct function' over GC calls.\n\nFrom-SVN: r60396", "tree": {"sha": "1680d76b12c6fb40e5c473f32fa276772622c57a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1680d76b12c6fb40e5c473f32fa276772622c57a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a77af27d10f31b88ab44e8eb08f82b9186631b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a77af27d10f31b88ab44e8eb08f82b9186631b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a77af27d10f31b88ab44e8eb08f82b9186631b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a77af27d10f31b88ab44e8eb08f82b9186631b0/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5040eb00ef09b13bdc682ac0c20673665d61a781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5040eb00ef09b13bdc682ac0c20673665d61a781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5040eb00ef09b13bdc682ac0c20673665d61a781"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "807897d060e3e88c56ba9d7d24ae60ef85d562cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a77af27d10f31b88ab44e8eb08f82b9186631b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a77af27d10f31b88ab44e8eb08f82b9186631b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a77af27d10f31b88ab44e8eb08f82b9186631b0", "patch": "@@ -1,3 +1,8 @@\n+2002-12-21  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* integrate.c (output_inline_function): Don't hold private\n+\tpointers to 'struct function' over GC calls.\n+\n 2002-12-21  Kaz kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/lib1funcs.asm (__fpscr_values): Conditionalize with"}, {"sha": "7e1f29f5bb07057adbf21a0dd6439b8b937be617", "filename": "gcc/integrate.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a77af27d10f31b88ab44e8eb08f82b9186631b0/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a77af27d10f31b88ab44e8eb08f82b9186631b0/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=2a77af27d10f31b88ab44e8eb08f82b9186631b0", "patch": "@@ -3004,15 +3004,17 @@ set_decl_abstract_flags (decl, setting)\n    from its DECL_SAVED_INSNS.  Used for inline functions that are output\n    at end of compilation instead of where they came in the source.  */\n \n+static GTY(()) struct function *old_cfun;\n+\n void\n output_inline_function (fndecl)\n      tree fndecl;\n {\n-  struct function *old_cfun = cfun;\n   enum debug_info_type old_write_symbols = write_symbols;\n   const struct gcc_debug_hooks *const old_debug_hooks = debug_hooks;\n   struct function *f = DECL_SAVED_INSNS (fndecl);\n \n+  old_cfun = cfun;\n   cfun = f;\n   current_function_decl = fndecl;\n "}]}