{"sha": "8824edffd65df2586dac35322a6c9feb465959ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgyNGVkZmZkNjVkZjI1ODZkYWMzNTMyMmE2YzlmZWI0NjU5NTlhZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-01-24T16:59:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-24T16:59:44Z"}, "message": "re PR c/56078 (causes cc1 to crash)\n\n\tPR c/56078\n\t* c-typeck.c (set_nonincremental_init_from_string): If\n\tconstructor_max_index is NULL, treat it as if tree_int_cst_lt\n\treturned false.\n\t(process_init_element): Likewise.\n\n\t* gcc.dg/pr56078.c: New test.\n\t* gcc.c-torture/compile/20030305-1.c: Add dg-error lines.\n\nFrom-SVN: r195432", "tree": {"sha": "36f4072e307eac2f4d911a7cf4d0ab3e54d7dc0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36f4072e307eac2f4d911a7cf4d0ab3e54d7dc0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8824edffd65df2586dac35322a6c9feb465959ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8824edffd65df2586dac35322a6c9feb465959ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8824edffd65df2586dac35322a6c9feb465959ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8824edffd65df2586dac35322a6c9feb465959ad/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1513a0d4948d50037ff798e884987d30c83f6cab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1513a0d4948d50037ff798e884987d30c83f6cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1513a0d4948d50037ff798e884987d30c83f6cab"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "b78666c9bcda30527ace0fdcd785e628ca37df93", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8824edffd65df2586dac35322a6c9feb465959ad/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8824edffd65df2586dac35322a6c9feb465959ad/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=8824edffd65df2586dac35322a6c9feb465959ad", "patch": "@@ -1,3 +1,11 @@\n+2013-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/56078\n+\t* c-typeck.c (set_nonincremental_init_from_string): If\n+\tconstructor_max_index is NULL, treat it as if tree_int_cst_lt\n+\treturned false.\n+\t(process_init_element): Likewise.\n+\n 2012-12-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/55619"}, {"sha": "ddb6d39774f95bf6724aaca87d9fff9fa3061d20", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8824edffd65df2586dac35322a6c9feb465959ad/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8824edffd65df2586dac35322a6c9feb465959ad/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=8824edffd65df2586dac35322a6c9feb465959ad", "patch": "@@ -7574,7 +7574,9 @@ set_nonincremental_init_from_string (tree str,\n   end = p + TREE_STRING_LENGTH (str);\n \n   for (purpose = bitsize_zero_node;\n-       p < end && !tree_int_cst_lt (constructor_max_index, purpose);\n+       p < end\n+       && !(constructor_max_index\n+\t    && tree_int_cst_lt (constructor_max_index, purpose));\n        purpose = size_binop (PLUS_EXPR, purpose, bitsize_one_node))\n     {\n       if (wchar_bytes == 1)\n@@ -8106,9 +8108,9 @@ process_init_element (struct c_expr value, bool implicit,\n \t\t\t      true, braced_init_obstack);\n       else if ((TREE_CODE (constructor_type) == ARRAY_TYPE\n \t        || TREE_CODE (constructor_type) == VECTOR_TYPE)\n-\t       && (constructor_max_index == 0\n-\t\t   || tree_int_cst_lt (constructor_max_index,\n-\t\t\t\t       constructor_index)))\n+\t       && constructor_max_index\n+\t       && tree_int_cst_lt (constructor_max_index,\n+\t\t\t\t   constructor_index))\n \tprocess_init_element (pop_init_level (1, braced_init_obstack),\n \t\t\t      true, braced_init_obstack);\n       else"}, {"sha": "f26db9c48c457df424c1843b990445a74f06ee47", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8824edffd65df2586dac35322a6c9feb465959ad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8824edffd65df2586dac35322a6c9feb465959ad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8824edffd65df2586dac35322a6c9feb465959ad", "patch": "@@ -1,3 +1,9 @@\n+2013-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/56078\n+\t* gcc.dg/pr56078.c: New test.\n+\t* gcc.c-torture/compile/20030305-1.c: Add dg-error lines.\n+\n 2013-01-24  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/55927"}, {"sha": "c8e4072055d1119ce993c9e5d14a71d239ff1846", "filename": "gcc/testsuite/gcc.c-torture/compile/20030305-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8824edffd65df2586dac35322a6c9feb465959ad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030305-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8824edffd65df2586dac35322a6c9feb465959ad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030305-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030305-1.c?ref=8824edffd65df2586dac35322a6c9feb465959ad", "patch": "@@ -12,7 +12,7 @@ typedef struct {\n } s2_t;\n \n static s2_t s2_array[]= {\n-    { 1, 4 },\n-    { 2, 5 },\n-    { 3, 6 }\n+    { 1, 4 },\t/* { dg-error \"(initialization of flexible array member|near)\" } */\n+    { 2, 5 },\t/* { dg-error \"(initialization of flexible array member|near)\" } */\n+    { 3, 6 }\t/* { dg-error \"(initialization of flexible array member|near)\" } */\n };"}, {"sha": "ba759f2209b55a9a1f6e6157f08bbc6e69f6395e", "filename": "gcc/testsuite/gcc.dg/pr56078.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8824edffd65df2586dac35322a6c9feb465959ad/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56078.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8824edffd65df2586dac35322a6c9feb465959ad/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56078.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56078.c?ref=8824edffd65df2586dac35322a6c9feb465959ad", "patch": "@@ -0,0 +1,25 @@\n+/* PR c/56078 */\n+/* { dg-do run } */\n+/* { dg-options \"-std=gnu99\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+extern int memcmp (const void *, const void *, size_t);\n+extern void abort (void);\n+\n+struct T { int a; char b[]; };\n+struct T t1 = { .a = 1, .b = \"abcd\", .b[0] = '2' };\n+struct T t2 = { .a = 1, .b = \"2bcd\" };\n+struct T t3 = { .a = 1, .b[2] = 'a' };\n+struct T t4 = { .a = 1, .b = { '\\0', '\\0', 'a' } };\n+struct T t5 = { .a = 1, .b = { [0] = 'a', [1] = 'b', [2] = 'c' } };\n+struct T t6 = { .a = 1, .b[2] = 'c', .b[1] = 'x', .b[0] = 'a', .b[1] = 'b' };\n+\n+int\n+main ()\n+{\n+  if (memcmp (t1.b, t2.b, sizeof (\"abcd\")) != 0\n+      || memcmp (t3.b, t4.b, 3) != 0\n+      || memcmp (t5.b, t6.b, 3) != 0)\n+    abort ();\n+  return 0;\n+}"}]}