{"sha": "6fa5c10660a128a81dbdc1c117ed6680a7eafb2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZhNWMxMDY2MGExMjhhODFkYmRjMWMxMTdlZDY2ODBhN2VhZmIyZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:37:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-08-03T01:37:21Z"}, "message": "(find_use_as_address): Use HOST_WIDE_INT instead of int when comparing a pointer to an integer constant...\n\n(find_use_as_address): Use HOST_WIDE_INT instead of int when comparing a\npointer to an integer constant; also when returning int.\n\nFrom-SVN: r1748", "tree": {"sha": "9b996279b731664a7690f0a4ac49c4f3e7778bc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b996279b731664a7690f0a4ac49c4f3e7778bc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fa5c10660a128a81dbdc1c117ed6680a7eafb2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa5c10660a128a81dbdc1c117ed6680a7eafb2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fa5c10660a128a81dbdc1c117ed6680a7eafb2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa5c10660a128a81dbdc1c117ed6680a7eafb2f/comments", "author": null, "committer": null, "parents": [{"sha": "854e97f078ce701fa812d598f86e78e298b829f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/854e97f078ce701fa812d598f86e78e298b829f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/854e97f078ce701fa812d598f86e78e298b829f3"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "93b76f7bccc489fd650fa97bb304ea882ee8c780", "filename": "gcc/flow.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa5c10660a128a81dbdc1c117ed6680a7eafb2f/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa5c10660a128a81dbdc1c117ed6680a7eafb2f/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=6fa5c10660a128a81dbdc1c117ed6680a7eafb2f", "patch": "@@ -2523,11 +2523,11 @@ find_use_as_address (x, reg, plusconst)\n       /* If REG occurs inside a MEM used in a bit-field reference,\n \t that is unacceptable.  */\n       if (find_use_as_address (XEXP (x, 0), reg, 0) != 0)\n-\treturn (rtx) 1;\n+\treturn (rtx) (HOST_WIDE_INT) 1;\n     }\n \n   if (x == reg)\n-    return (rtx) 1;\n+    return (rtx) (HOST_WIDE_INT) 1;\n \n   for (i = GET_RTX_LENGTH (code) - 1; i >= 0; i--)\n     {\n@@ -2537,7 +2537,7 @@ find_use_as_address (x, reg, plusconst)\n \t  if (value == 0)\n \t    value = tem;\n \t  else if (tem != 0)\n-\t    return (rtx) 1;\n+\t    return (rtx) (HOST_WIDE_INT) 1;\n \t}\n       if (fmt[i] == 'E')\n \t{\n@@ -2548,7 +2548,7 @@ find_use_as_address (x, reg, plusconst)\n \t      if (value == 0)\n \t\tvalue = tem;\n \t      else if (tem != 0)\n-\t\treturn (rtx) 1;\n+\t\treturn (rtx) (HOST_WIDE_INT) 1;\n \t    }\n \t}\n     }"}]}