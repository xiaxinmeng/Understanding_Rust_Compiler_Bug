{"sha": "60aeab7f32837b7512fddbe221b0cac475716a6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBhZWFiN2YzMjgzN2I3NTEyZmRkYmUyMjFiMGNhYzQ3NTcxNmE2Zg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "1998-07-26T00:12:12Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-07-26T00:12:12Z"}, "message": "i386.c (output_to_reg): Add code to emulate non-popping DImode case.\n\n\ufffd\n        * i386.c (output_to_reg): Add code to emulate non-popping DImode\n        case.\n\nFrom-SVN: r21389", "tree": {"sha": "9f9c52891b9ee1d5662b269b9f82fd696c53f85c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f9c52891b9ee1d5662b269b9f82fd696c53f85c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60aeab7f32837b7512fddbe221b0cac475716a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60aeab7f32837b7512fddbe221b0cac475716a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60aeab7f32837b7512fddbe221b0cac475716a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60aeab7f32837b7512fddbe221b0cac475716a6f/comments", "author": null, "committer": null, "parents": [{"sha": "bc6bd744c5c1afa8f2afce8b56c3ae170ab3b30c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc6bd744c5c1afa8f2afce8b56c3ae170ab3b30c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc6bd744c5c1afa8f2afce8b56c3ae170ab3b30c"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "fd398090fa3d4d9792ab784dbc4b31463d81e1ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aeab7f32837b7512fddbe221b0cac475716a6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aeab7f32837b7512fddbe221b0cac475716a6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60aeab7f32837b7512fddbe221b0cac475716a6f", "patch": "@@ -1,3 +1,8 @@\n+Sun Jul 26 01:11:12 1998  H.J. Lu  (hjl@gnu.org)\n+\n+\t* i386.c (output_to_reg): Add code to emulate non-popping DImode\n+\tcase.\n+\n Sun Jul 26 01:01:32 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* regmove.c (regmove_optimize): Fix typo initializing regmove_bb_head."}, {"sha": "8e5211f133793cddd4776b6517c1936764a66939", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60aeab7f32837b7512fddbe221b0cac475716a6f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60aeab7f32837b7512fddbe221b0cac475716a6f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=60aeab7f32837b7512fddbe221b0cac475716a6f", "patch": "@@ -891,6 +891,17 @@ output_to_reg (dest, dies, scratch_mem)\n     {\n       if (dies)\n \toutput_asm_insn (AS1 (fistp%z3,%y0), xops);\n+      else if (GET_MODE (xops[3]) == DImode && ! dies)\n+\t{\n+\t  /* There is no DImode version of this without a stack pop, so\n+\t     we must emulate it.  It doesn't matter much what the second\n+\t     instruction is, because the value being pushed on the FP stack\n+\t     is not used except for the following stack popping store.\n+\t     This case can only happen without optimization, so it doesn't\n+\t     matter that it is inefficient.  */\n+\t  output_asm_insn (AS1 (fistp%z3,%0), xops);\n+\t  output_asm_insn (AS1 (fild%z3,%0), xops);\n+\t}\n       else\n \toutput_asm_insn (AS1 (fist%z3,%y0), xops);\n     }"}]}