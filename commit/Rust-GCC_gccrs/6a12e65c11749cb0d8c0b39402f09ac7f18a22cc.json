{"sha": "6a12e65c11749cb0d8c0b39402f09ac7f18a22cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmExMmU2NWMxMTc0OWNiMGQ4YzBiMzk0MDJmMDlhYzdmMThhMjJjYw==", "commit": {"author": {"name": "Ingo Proetel", "email": "proetel@aicas.com", "date": "2003-10-11T18:30:22Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-11T18:30:22Z"}, "message": "RMIClassLoader.java: Identify cached classloaders by codebase and context classloader.\n\n2003-10-11  Ingo Proetel  <proetel@aicas.com>\n\n\t* java/rmi/server/RMIClassLoader.java: Identify cached classloaders by\n\tcodebase and context classloader.\n\nFrom-SVN: r72351", "tree": {"sha": "eee4d0ef5b246a75c1b52d7d0a19bc3e3a83da5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eee4d0ef5b246a75c1b52d7d0a19bc3e3a83da5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a12e65c11749cb0d8c0b39402f09ac7f18a22cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a12e65c11749cb0d8c0b39402f09ac7f18a22cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a12e65c11749cb0d8c0b39402f09ac7f18a22cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a12e65c11749cb0d8c0b39402f09ac7f18a22cc/comments", "author": {"login": "iproetel", "id": 895564, "node_id": "MDQ6VXNlcjg5NTU2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/895564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iproetel", "html_url": "https://github.com/iproetel", "followers_url": "https://api.github.com/users/iproetel/followers", "following_url": "https://api.github.com/users/iproetel/following{/other_user}", "gists_url": "https://api.github.com/users/iproetel/gists{/gist_id}", "starred_url": "https://api.github.com/users/iproetel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iproetel/subscriptions", "organizations_url": "https://api.github.com/users/iproetel/orgs", "repos_url": "https://api.github.com/users/iproetel/repos", "events_url": "https://api.github.com/users/iproetel/events{/privacy}", "received_events_url": "https://api.github.com/users/iproetel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7bcb09dccabcdc5518ac9f2eb7a3118fd8c42eb"}], "stats": {"total": 78, "additions": 73, "deletions": 5}, "files": [{"sha": "24acb5a7f405ff70b8f64fbc6f62a26f0ed1d75f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a12e65c11749cb0d8c0b39402f09ac7f18a22cc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a12e65c11749cb0d8c0b39402f09ac7f18a22cc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6a12e65c11749cb0d8c0b39402f09ac7f18a22cc", "patch": "@@ -1,3 +1,8 @@\n+2003-10-11  Ingo Proetel  <proetel@aicas.com>\n+\n+\t* java/rmi/server/RMIClassLoader.java: Identify cached classloaders by \n+\tcodebase and context classloader.\n+\n 2003-10-11  Michael Koch  <konqueror@gmx.de>\n \n \t* java/beans/beancontext/BeanContext.java,"}, {"sha": "57e52a363bae26d934146e88d9c3f387def096f7", "filename": "libjava/java/rmi/server/RMIClassLoader.java", "status": "modified", "additions": 68, "deletions": 5, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a12e65c11749cb0d8c0b39402f09ac7f18a22cc/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a12e65c11749cb0d8c0b39402f09ac7f18a22cc/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java?ref=6a12e65c11749cb0d8c0b39402f09ac7f18a22cc", "patch": "@@ -91,6 +91,63 @@ public final String getClassAnnotation()\n     }\n \n     private final String annotation;\n+  }\n+  \n+  /** \n+   * This class is used to identify a cached classloader by its codebase and \n+   * the context classloader that is its parent.\n+   */  \n+  private static class CacheKey\n+  {\n+     private String mCodeBase;\n+     private ClassLoader mContextClassLoader;\n+  \t\n+     public CacheKey (String theCodebase, ClassLoader theContextClassLoader)\n+     {\n+       mCodeBase = theCodebase;\n+       mContextClassLoader = theContextClassLoader;\n+     }\n+  \t\n+    /**\n+     * @return true if the codebase and the context classloader are equal\n+     */\n+    public boolean equals (Object theOther)\n+    {\n+      if (theOther != null\n+          && theOther instanceof CacheKey)\n+      {\n+      \tCacheKey key = (CacheKey) theOther;\n+\t\n+      \treturn (equals (this.mCodeBase,key.mCodeBase)\n+                && equals (this.mContextClassLoader, key.mContextClassLoader));\n+        }\n+      return false;\n+    }\n+    \n+    /**\n+     * Test if the two objects are equal or both null.\n+     * @param theOne\n+     * @param theOther\n+     * @return\n+     */\n+    private boolean equals (Object theOne, Object theOther)\n+    {\n+      return theOne != null ? theOne.equals (theOther) : theOther == null;\n+    }\n+\n+    /**\n+     * @return hashCode  \n+     */\n+    public int hashCode()\n+    {\n+      return ((mCodeBase != null           ? mCodeBase.hashCode()           :  0) \n+              ^(mContextClassLoader != null ? mContextClassLoader.hashCode() : -1));\n+    }\n+\n+    public String toString()\n+    {\n+      return \"[\" + mCodeBase + \",\" + mContextClassLoader + \"]\"; \n+    }\n \n   }\n \n@@ -129,7 +186,9 @@ public final String getClassAnnotation()\n       {\n         defaultLoader = new MyClassLoader (new URL[] { defaultCodebase }, null,\n                                            defaultAnnotation);\n-        cacheLoaders.put(defaultAnnotation, defaultLoader);\n+        cacheLoaders.put (new CacheKey (defaultAnnotation,\n+                                        Thread.currentThread().getContextClassLoader()),\n+                                        defaultLoader);\n       }\n     }\n \n@@ -189,8 +248,11 @@ public static Class loadClass (String codebases, String name)\n   private static ClassLoader getClassLoader (String codebases) \n     throws MalformedURLException\n   {\n-    ClassLoader loader = (ClassLoader) cacheLoaders.get (codebases);\n-\t\n+    ClassLoader loader;\n+    CacheKey loaderKey = new CacheKey\n+      (codebases, Thread.currentThread().getContextClassLoader());\n+    loader = (ClassLoader) cacheLoaders.get (loaderKey);\n+      \n     if (loader == null)\n       {\n         //create an entry in cacheLoaders mapping a loader to codebases.\n@@ -202,8 +264,9 @@ private static ClassLoader getClassLoader (String codebases)\n           urls.add (new URL (tok.nextToken()));\n       \n         loader = new MyClassLoader ((URL[]) urls.toArray (new URL [urls.size()]),\n-    \t\t\t\t    null, codebases);\n-        cacheLoaders.put (codebases, loader);\n+                                    Thread.currentThread().getContextClassLoader(),\n+                                    codebases);\n+        cacheLoaders.put (loaderKey, loader);\n       }\n            \n     return loader;"}]}