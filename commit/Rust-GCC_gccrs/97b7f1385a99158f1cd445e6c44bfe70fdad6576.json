{"sha": "97b7f1385a99158f1cd445e6c44bfe70fdad6576", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdiN2YxMzg1YTk5MTU4ZjFjZDQ0NWU2YzQ0YmZlNzBmZGFkNjU3Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2015-12-23T18:17:19Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-12-23T18:17:19Z"}, "message": "cgraph.h (decl_in_symtab_p): Revert check DECL_IN_CONSTANT_POOL.\n\n\tgcc/\n\t* cgraph.h (decl_in_symtab_p): Revert check DECL_IN_CONSTANT_POOL.\n\n\tgcc/testsuite/\n\t* gcc.dg/alias-15.c: Revert.\n\nFrom-SVN: r231931", "tree": {"sha": "7b6abd6791e997d5364b5b11a3b4e9392e851b40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b6abd6791e997d5364b5b11a3b4e9392e851b40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97b7f1385a99158f1cd445e6c44bfe70fdad6576", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b7f1385a99158f1cd445e6c44bfe70fdad6576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97b7f1385a99158f1cd445e6c44bfe70fdad6576", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b7f1385a99158f1cd445e6c44bfe70fdad6576/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd602b7fcb5fdd849e1054cb5a49c47e7dd382ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd602b7fcb5fdd849e1054cb5a49c47e7dd382ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd602b7fcb5fdd849e1054cb5a49c47e7dd382ee"}], "stats": {"total": 31, "additions": 9, "deletions": 22}, "files": [{"sha": "addc54af887764399201953354c5285493f0889e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b7f1385a99158f1cd445e6c44bfe70fdad6576/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b7f1385a99158f1cd445e6c44bfe70fdad6576/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97b7f1385a99158f1cd445e6c44bfe70fdad6576", "patch": "@@ -1,3 +1,7 @@\n+2015-12-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cgraph.h (decl_in_symtab_p): Revert check DECL_IN_CONSTANT_POOL.\n+\n 2015-12-23  Nathan Sidwell  <nathan@acm.org>\n \n \t* config/nvptx/nvptx-protos.h"}, {"sha": "ba14215ed6f1b0e88b004c12c851534be9704a2a", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b7f1385a99158f1cd445e6c44bfe70fdad6576/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b7f1385a99158f1cd445e6c44bfe70fdad6576/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=97b7f1385a99158f1cd445e6c44bfe70fdad6576", "patch": "@@ -2294,19 +2294,13 @@ symtab_node::real_symbol_p (void)\n }\n \n /* Return true if DECL should have entry in symbol table if used.\n-   Those are functions and static & external non-constpool variables.\n-   We do not expect constant pool variables in the varpool, as they're\n-   not related to other variables, and simply lazily inserting them\n-   using the regular interface results in varpool thinking they are\n-   externally provided -- which results in erroneous assembly emission\n-   as an undefined decl.  */\n+   Those are functions and static & external veriables*/\n \n static inline bool\n decl_in_symtab_p (const_tree decl)\n {\n   return (TREE_CODE (decl) == FUNCTION_DECL\n           || (TREE_CODE (decl) == VAR_DECL\n-\t      && !DECL_IN_CONSTANT_POOL (decl)\n \t      && (TREE_STATIC (decl) || DECL_EXTERNAL (decl))));\n }\n "}, {"sha": "1ab9fab5a75bf26ea691cfe316ba129c55f7258f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b7f1385a99158f1cd445e6c44bfe70fdad6576/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b7f1385a99158f1cd445e6c44bfe70fdad6576/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=97b7f1385a99158f1cd445e6c44bfe70fdad6576", "patch": "@@ -1,3 +1,7 @@\n+2015-12-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcc.dg/alias-15.c: Revert.\n+\n 2015-12-23  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \tPR testsuite/68232"}, {"sha": "0a8e69b61eceef95e61f16d7874b5a4204e0594f", "filename": "gcc/testsuite/gcc.dg/alias-15.c", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd602b7fcb5fdd849e1054cb5a49c47e7dd382ee/gcc%2Ftestsuite%2Fgcc.dg%2Falias-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd602b7fcb5fdd849e1054cb5a49c47e7dd382ee/gcc%2Ftestsuite%2Fgcc.dg%2Falias-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falias-15.c?ref=bd602b7fcb5fdd849e1054cb5a49c47e7dd382ee", "patch": "@@ -1,15 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-additional-options  \"-O2 -fdump-ipa-cgraph\" } */\n-\n-/* RTL-level CSE shouldn't introduce LCO (for the string) into varpool */\n-char *p;\n-\n-void foo ()\n-{\n-  p = \"abc\\n\";\n-\n-  while (*p != '\\n')\n-    p++;\n-}\n-\n-/* { dg-final { scan-ipa-dump-not \"LC0\" \"cgraph\" } } */"}]}