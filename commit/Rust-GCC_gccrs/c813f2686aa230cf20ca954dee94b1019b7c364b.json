{"sha": "c813f2686aa230cf20ca954dee94b1019b7c364b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgxM2YyNjg2YWEyMzBjZjIwY2E5NTRkZWU5NGIxMDE5YjdjMzY0Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-22T12:15:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-22T12:15:38Z"}, "message": "re PR fortran/77678 (ICE in fold_read_from_constant_string, at fold-const.c:13706)\n\n2016-09-22  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/77678\n\t* expr.c (expand_expr_real_1): Guard array access against negative\n\toffset.\n\nFrom-SVN: r240351", "tree": {"sha": "b36d87ac28037a7dbaa8da78ddb9c97733ec4f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b36d87ac28037a7dbaa8da78ddb9c97733ec4f75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c813f2686aa230cf20ca954dee94b1019b7c364b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c813f2686aa230cf20ca954dee94b1019b7c364b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c813f2686aa230cf20ca954dee94b1019b7c364b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c813f2686aa230cf20ca954dee94b1019b7c364b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8ffdd9730b00a64e85eb2e3881b9006932b41bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ffdd9730b00a64e85eb2e3881b9006932b41bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8ffdd9730b00a64e85eb2e3881b9006932b41bb"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "9b1792596fc0da72d10700a47c54f79cbf2d6d5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c813f2686aa230cf20ca954dee94b1019b7c364b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c813f2686aa230cf20ca954dee94b1019b7c364b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c813f2686aa230cf20ca954dee94b1019b7c364b", "patch": "@@ -1,3 +1,9 @@\n+2016-09-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/77678\n+\t* expr.c (expand_expr_real_1): Guard array access against negative\n+\toffset.\n+\n 2016-09-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gimple-ssa-sprintf.c (format_floating_max): Use GMP_RNDN instead"}, {"sha": "2e97030c5b884b046fa6d2867f5c63680f32af85", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c813f2686aa230cf20ca954dee94b1019b7c364b/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c813f2686aa230cf20ca954dee94b1019b7c364b/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c813f2686aa230cf20ca954dee94b1019b7c364b", "patch": "@@ -10274,7 +10274,8 @@ expand_expr_real_1 (tree exp, rtx target, machine_mode tmode,\n \t\t\t\t\t    fold_convert_loc (loc, sizetype,\n \t\t\t\t\t\t\t      low_bound));\n \n-\t\tif (compare_tree_int (index1, TREE_STRING_LENGTH (init)) < 0)\n+\t\tif (tree_fits_uhwi_p (index1)\n+\t\t    && compare_tree_int (index1, TREE_STRING_LENGTH (init)) < 0)\n \t\t  {\n \t\t    tree type = TREE_TYPE (TREE_TYPE (init));\n \t\t    machine_mode mode = TYPE_MODE (type);"}]}