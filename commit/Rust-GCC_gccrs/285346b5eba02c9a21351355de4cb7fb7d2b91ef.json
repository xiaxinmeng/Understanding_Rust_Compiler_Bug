{"sha": "285346b5eba02c9a21351355de4cb7fb7d2b91ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg1MzQ2YjVlYmEwMmM5YTIxMzUxMzU1ZGU0Y2I3ZmI3ZDJiOTFlZg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2017-11-16T18:35:42Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2017-11-16T18:35:42Z"}, "message": "rs6000.c (rs6000_expand_builtin): Do not do the switch statement mapping KF built-ins to TF built-ins if...\n\n[gcc]\n2017-11-15  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.c (rs6000_expand_builtin): Do not do the\n\tswitch statement mapping KF built-ins to TF built-ins if we don't\n\thave the proper ISA 3.0 assembler support.\n\n[gcc/testsuite]\n2017-11-15  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/bfp/bfp.exp: Look for *.c files, not *.c*\n\tfiles to prevent ~ files from getting recognized.\n\t* gcc.target/powerpc/dfp/dfp.exp: Likewise.\n\t* gcc.target/powerpc/vsu/vsu.exp: Likewise.\n\nFrom-SVN: r254839", "tree": {"sha": "b8ec31b4c708b12abd82f17753c7a6f7dd4c8d2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8ec31b4c708b12abd82f17753c7a6f7dd4c8d2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/285346b5eba02c9a21351355de4cb7fb7d2b91ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/285346b5eba02c9a21351355de4cb7fb7d2b91ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/285346b5eba02c9a21351355de4cb7fb7d2b91ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/285346b5eba02c9a21351355de4cb7fb7d2b91ef/comments", "author": null, "committer": null, "parents": [{"sha": "9d99775c34864d030d97b6a5ea5987616ff37468", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d99775c34864d030d97b6a5ea5987616ff37468", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d99775c34864d030d97b6a5ea5987616ff37468"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "b5ef10ef28f5319616ae489c1130c42fa9baee12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=285346b5eba02c9a21351355de4cb7fb7d2b91ef", "patch": "@@ -1,3 +1,9 @@\n+2017-11-15  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_expand_builtin): Do not do the\n+\tswitch statement mapping KF built-ins to TF built-ins if we don't\n+\thave the proper ISA 3.0 assembler support.\n+\n 2017-11-16  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-emutls.c (lower_emutls_data): Remove unused bb_freq."}, {"sha": "d19a4cfb806b0ab4aae80a386bed43bd9b707da6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=285346b5eba02c9a21351355de4cb7fb7d2b91ef", "patch": "@@ -16690,7 +16690,10 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n      double (KFmode) or long double is IEEE 128-bit (TFmode).  It is simpler if\n      we only define one variant of the built-in function, and switch the code\n      when defining it, rather than defining two built-ins and using the\n-     overload table in rs6000-c.c to switch between the two.  */\n+     overload table in rs6000-c.c to switch between the two.  If we don't have\n+     the proper assembler, don't do this switch because CODE_FOR_*kf* and\n+     CODE_FOR_*tf* will be CODE_FOR_nothing.  */\n+#ifdef HAVE_AS_POWER9\n   if (FLOAT128_IEEE_P (TFmode))\n     switch (icode)\n       {\n@@ -16711,6 +16714,7 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n       case CODE_FOR_xsiexpqpf_kf:\ticode = CODE_FOR_xsiexpqpf_tf;\tbreak;\n       case CODE_FOR_xststdcqp_kf:\ticode = CODE_FOR_xststdcqp_tf;\tbreak;\n       }\n+#endif\n \n   if (TARGET_DEBUG_BUILTIN)\n     {"}, {"sha": "180f4db0cdc59f1931b131239d3a015499d73518", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=285346b5eba02c9a21351355de4cb7fb7d2b91ef", "patch": "@@ -1,3 +1,10 @@\n+2017-11-15  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/bfp/bfp.exp: Look for *.c files, not *.c*\n+\tfiles to prevent ~ files from getting recognized.\n+\t* gcc.target/powerpc/dfp/dfp.exp: Likewise.\n+\t* gcc.target/powerpc/vsu/vsu.exp: Likewise.\n+\n 2017-11-16  Henry Linjam\u00e4ki  <henry.linjamaki@parmance.com>\n \n \t* brig.dg/test/gimple/vector.hsail: Update for HSA registers' tree"}, {"sha": "ced58fc2e4e7ed386bdded2e535c1abdcd48488e", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/bfp.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fbfp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fbfp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fbfp.exp?ref=285346b5eba02c9a21351355de4cb7fb7d2b91ef", "patch": "@@ -34,7 +34,7 @@ load_lib torture-options.exp\n # Initialize.\n dg-init\n \n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c*]] \"\" $DEFAULT_CFLAGS\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \"\" $DEFAULT_CFLAGS\n \n # All done.\n dg-finish"}, {"sha": "5c192e48e7cf88b9ec5d3753245a6a425a835594", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dfp.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdfp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdfp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdfp.exp?ref=285346b5eba02c9a21351355de4cb7fb7d2b91ef", "patch": "@@ -33,7 +33,7 @@ load_lib torture-options.exp\n # Initialize.\n dg-init\n \n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c*]] \"\" $DEFAULT_CFLAGS\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \"\" $DEFAULT_CFLAGS\n \n # All done.\n dg-finish"}, {"sha": "ced58fc2e4e7ed386bdded2e535c1abdcd48488e", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vsu.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvsu.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285346b5eba02c9a21351355de4cb7fb7d2b91ef/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvsu.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvsu.exp?ref=285346b5eba02c9a21351355de4cb7fb7d2b91ef", "patch": "@@ -34,7 +34,7 @@ load_lib torture-options.exp\n # Initialize.\n dg-init\n \n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c*]] \"\" $DEFAULT_CFLAGS\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \"\" $DEFAULT_CFLAGS\n \n # All done.\n dg-finish"}]}