{"sha": "10670d47c659d4280d459ebd0231f2395e29505f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTA2NzBkNDdjNjU5ZDQyODBkNDU5ZWJkMDIzMWYyMzk1ZTI5NTA1Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-17T22:06:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-17T22:06:24Z"}, "message": "Don't use the extsd/extd instructions on the ns32532.\n\nFrom-SVN: r7321", "tree": {"sha": "e0aa1f1e3abc29ea3dffcd351ff90fee856f1c96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0aa1f1e3abc29ea3dffcd351ff90fee856f1c96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10670d47c659d4280d459ebd0231f2395e29505f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10670d47c659d4280d459ebd0231f2395e29505f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10670d47c659d4280d459ebd0231f2395e29505f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10670d47c659d4280d459ebd0231f2395e29505f/comments", "author": null, "committer": null, "parents": [{"sha": "6baa89b548a5855adba2115f04edea7b276593d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6baa89b548a5855adba2115f04edea7b276593d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6baa89b548a5855adba2115f04edea7b276593d5"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "2adef963310812d29c5d58a0ffaed5fbfa7d5bc5", "filename": "gcc/config/ns32k/ns32k.md", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10670d47c659d4280d459ebd0231f2395e29505f/gcc%2Fconfig%2Fns32k%2Fns32k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10670d47c659d4280d459ebd0231f2395e29505f/gcc%2Fconfig%2Fns32k%2Fns32k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.md?ref=10670d47c659d4280d459ebd0231f2395e29505f", "patch": "@@ -1,6 +1,6 @@\n ;;- Machine description for GNU compiler, ns32000 Version\n ;;  Copyright (C) 1988, 1994 Free Software Foundation, Inc.\n-;;  Contributed by Michael Tiemann (tiemann@mcc.com)\n+;;  Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n ;; This file is part of GNU CC.\n \n@@ -1861,12 +1861,29 @@\n     return \\\"adjspb %$-4\\\";\n }\")\n \n+;; The extsd/extd isntructions have the problem that they always access\n+;; 32 bits even if the bitfield is smaller. For example the instruction\n+;; \textsd 7(r1),r0,2,5\n+;; would read not only at address 7(r1) but also at 8(r1) to 10(r1).\n+;; If these addresses are in a different (unmapped) page a memory fault\n+;; is the result.\n+;;\n+;; Timing considerations:\n+;;\tmovd\t0(r1),r0\t3 bytes\n+;;\tlshd\t-26,r0\t\t4\n+;;\tandd\t0x1f,r0\t\t5\n+;; takes about 13 cycles on the 532 while\n+;;\textsd\t7(r1),r0,2,5\t5 bytes\n+;; takes about 21 cycles.\n+;;\n+;; So lets forget about extsd/extd on the 532.\n+\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"general_operand\" \"=g<\")\n \t(zero_extract:SI (match_operand:SI 1 \"register_operand\" \"g\")\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"i\")\n \t\t\t (match_operand:SI 3 \"general_operand\" \"rK\")))]\n-  \"\"\n+  \"! TARGET_32532\"\n   \"*\n { if (GET_CODE (operands[3]) == CONST_INT)\n     return \\\"extsd %1,%0,%3,%2\\\";\n@@ -1878,7 +1895,7 @@\n \t(zero_extract:SI (match_operand:QI 1 \"general_operand\" \"g\")\n \t\t\t (match_operand:SI 2 \"const_int_operand\" \"i\")\n \t\t\t (match_operand:SI 3 \"general_operand\" \"rK\")))]\n-  \"\"\n+  \"! TARGET_32532\"\n   \"*\n { if (GET_CODE (operands[3]) == CONST_INT)\n     return \\\"extsd %1,%0,%3,%2\\\";"}]}