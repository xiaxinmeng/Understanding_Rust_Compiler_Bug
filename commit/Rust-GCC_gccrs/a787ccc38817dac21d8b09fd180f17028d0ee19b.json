{"sha": "a787ccc38817dac21d8b09fd180f17028d0ee19b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc4N2NjYzM4ODE3ZGFjMjFkOGIwOWZkMTgwZjE3MDI4ZDBlZTE5Yg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-11-18T17:31:38Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-11-18T17:31:38Z"}, "message": "expr.c (expand_assignment): Don't set MEM_KEEP_ALIAS_SET_P here.\n\ngcc/\n\t* expr.c (expand_assignment): Don't set MEM_KEEP_ALIAS_SET_P here.\n\t* emit-rtl.c (set_mem_attributes_minus_bitpos): Handle DECL_BIT_FIELDs,\n\tusing their size instead of the COMPONENT_REF's.\n\nFrom-SVN: r193599", "tree": {"sha": "83179683634ebcdb0a796f5d430da437a6d28e8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83179683634ebcdb0a796f5d430da437a6d28e8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a787ccc38817dac21d8b09fd180f17028d0ee19b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a787ccc38817dac21d8b09fd180f17028d0ee19b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a787ccc38817dac21d8b09fd180f17028d0ee19b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a787ccc38817dac21d8b09fd180f17028d0ee19b/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3808f68ef811f22a3fd2dc0c8507b9b3e3dadb4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3808f68ef811f22a3fd2dc0c8507b9b3e3dadb4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3808f68ef811f22a3fd2dc0c8507b9b3e3dadb4e"}], "stats": {"total": 40, "additions": 18, "deletions": 22}, "files": [{"sha": "b9d7a75653fc236006793b6bdd19082f92bdbab8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a787ccc38817dac21d8b09fd180f17028d0ee19b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a787ccc38817dac21d8b09fd180f17028d0ee19b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a787ccc38817dac21d8b09fd180f17028d0ee19b", "patch": "@@ -1,3 +1,9 @@\n+2012-11-18  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* expr.c (expand_assignment): Don't set MEM_KEEP_ALIAS_SET_P here.\n+\t* emit-rtl.c (set_mem_attributes_minus_bitpos): Handle DECL_BIT_FIELDs,\n+\tusing their size instead of the COMPONENT_REF's.\n+\n 2012-11-17  Matthias Klose  <doko@ubuntu.com>\n \n \t* config/mips/t-linux64: Add multiarch names in MULTILIB_OSDIRNAMES."}, {"sha": "e16215d548e6511e5ba874e58e1c68a8aba1ecbb", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a787ccc38817dac21d8b09fd180f17028d0ee19b/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a787ccc38817dac21d8b09fd180f17028d0ee19b/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=a787ccc38817dac21d8b09fd180f17028d0ee19b", "patch": "@@ -1678,11 +1678,7 @@ set_mem_attributes_minus_bitpos (rtx ref, tree t, int objectp,\n     attrs.align = MAX (attrs.align, TYPE_ALIGN (type));\n \n   /* If the size is known, we can set that.  */\n-  if (TYPE_SIZE_UNIT (type) && host_integerp (TYPE_SIZE_UNIT (type), 1))\n-    {\n-      attrs.size_known_p = true;\n-      attrs.size = tree_low_cst (TYPE_SIZE_UNIT (type), 1);\n-    }\n+  tree new_size = TYPE_SIZE_UNIT (type);\n \n   /* If T is not a type, we may be able to deduce some more information about\n      the expression.  */\n@@ -1741,13 +1737,7 @@ set_mem_attributes_minus_bitpos (rtx ref, tree t, int objectp,\n \t  attrs.offset_known_p = true;\n \t  attrs.offset = 0;\n \t  apply_bitpos = bitpos;\n-\t  if (DECL_SIZE_UNIT (t) && host_integerp (DECL_SIZE_UNIT (t), 1))\n-\t    {\n-\t      attrs.size_known_p = true;\n-\t      attrs.size = tree_low_cst (DECL_SIZE_UNIT (t), 1);\n-\t    }\n-\t  else\n-\t    attrs.size_known_p = false;\n+\t  new_size = DECL_SIZE_UNIT (t);\n \t  attrs.align = DECL_ALIGN (t);\n \t  align_computed = true;\n \t}\n@@ -1762,19 +1752,15 @@ set_mem_attributes_minus_bitpos (rtx ref, tree t, int objectp,\n \t  align_computed = true;\n \t}\n \n-      /* If this is a field reference and not a bit-field, record it.  */\n-      /* ??? There is some information that can be gleaned from bit-fields,\n-\t such as the word offset in the structure that might be modified.\n-\t But skip it for now.  */\n-      else if (TREE_CODE (t) == COMPONENT_REF\n-\t       && ! DECL_BIT_FIELD (TREE_OPERAND (t, 1)))\n+      /* If this is a field reference, record it.  */\n+      else if (TREE_CODE (t) == COMPONENT_REF)\n \t{\n \t  attrs.expr = t;\n \t  attrs.offset_known_p = true;\n \t  attrs.offset = 0;\n \t  apply_bitpos = bitpos;\n-\t  /* ??? Any reason the field size would be different than\n-\t     the size we got from the type?  */\n+\t  if (DECL_BIT_FIELD (TREE_OPERAND (t, 1)))\n+\t    new_size = DECL_SIZE_UNIT (TREE_OPERAND (t, 1));\n \t}\n \n       /* If this is an array reference, look for an outer field reference.  */\n@@ -1860,6 +1846,12 @@ set_mem_attributes_minus_bitpos (rtx ref, tree t, int objectp,\n   else\n     as = TYPE_ADDR_SPACE (type);\n \n+  if (host_integerp (new_size, 1))\n+    {\n+      attrs.size_known_p = true;\n+      attrs.size = tree_low_cst (new_size, 1);\n+    }\n+\n   /* If we modified OFFSET based on T, then subtract the outstanding\n      bit position offset.  Similarly, increase the size of the accessed\n      object to contain the negative offset.  */"}, {"sha": "48e2581bdaf22003b29602d36ef6ed19a3c662cc", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a787ccc38817dac21d8b09fd180f17028d0ee19b/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a787ccc38817dac21d8b09fd180f17028d0ee19b/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a787ccc38817dac21d8b09fd180f17028d0ee19b", "patch": "@@ -4818,8 +4818,6 @@ expand_assignment (tree to, tree from, bool nontemporal)\n \t\t done for MEM.  Also set MEM_KEEP_ALIAS_SET_P if needed.  */\n \t      if (volatilep)\n \t\tMEM_VOLATILE_P (to_rtx) = 1;\n-\t      if (component_uses_parent_alias_set (to))\n-\t\tMEM_KEEP_ALIAS_SET_P (to_rtx) = 1;\n \t    }\n \n \t  if (optimize_bitfield_assignment_op (bitsize, bitpos,"}]}