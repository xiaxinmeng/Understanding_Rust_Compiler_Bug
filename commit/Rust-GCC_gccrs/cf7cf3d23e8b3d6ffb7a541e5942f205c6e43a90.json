{"sha": "cf7cf3d23e8b3d6ffb7a541e5942f205c6e43a90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y3Y2YzZDIzZThiM2Q2ZmZiN2E1NDFlNTk0MmYyMDVjNmU0M2E5MA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-08-12T01:40:29Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-08-12T01:40:29Z"}, "message": "Make-lang.in (CXX_SRCS): Remove sig.c.\n\n\t* Make-lang.in (CXX_SRCS): Remove sig.c.\n\t* Makefile.in (CXX_OBJS): Remove sig.o.\n\t(sig.o): Remove.\n\t* cp-tree.h (CPTI_OPAQUE_TYPE): Remove.\n\t(CPTI_SIGNATURE_TYPE): Likewise.\n\t(CPTI_SIGTABLE_ENTRY_TYPE): Likewise.\n\t(opaque_type_node): Likewise.\n\t(signature_type_node): Likewise.\n\t(sigtable_entry_type): Likewise.\n\t(flag_handle_signatures): Likewise.\n\t(lang_type): Remove is_signature, is_signature_pointer,\n\tis_signature_reference, has_opaque_typedecls,\n\tsigtables_has_been_generated.  Adjust dummy.  Remove signature,\n\tsignature_pointer_to, signature_reference_to.\n\t(IS_SIGNATURE): Remove.\n\t(SET_SIGNATURE): Remove.\n\t(CLEAR_SIGNATURE): Remove.\n\t(IS_SIGNATURE_POINTER): Remove.\n\t(IS_SIGNATURE_REFERENCE): Remove.\n\t(SIGNATURE_HAS_OPAQUE_TYPEDECLS): Remove.\n\t(SIGTABLE_HAS_BEEN_GENERATED): Remove.\n\t(CLASSTYPE_SIGNATURE): Remove.\n\t(SIGNATURE_TYPE): Remove.\n\t(SIGNATURE_METHOD_VEC): Remove.\n\t(SIGNATURE_POINTER_TO): Remove.\n\t(SIGNATURE_REFERENCE_TO): Remove.\n\t(lang_decl_flags): Remove is_default_implementation.  Rename\n\tmemfunc_pointer_to to saved_tree.\n\t(IS_DEFAULT_IMPLEMENTATION): Remove.\n\t(DECL_MEMFUNC_POINTER_TO): Remove.\n\t(DECL_MEMFUNC_POINTING_TO): Remove.\n\t(DECL_SAVED_TREE): Adjust definition.\n\t(tag_types): Remove signature_type_node.\n\t(SIGNATURE_FIELD_NAME): Remove.\n\t(SIGNATURE_FIELD_NAME_FORMAT): Likewise.\n\t(SIGNATURE_OPTR_NAME): Likewise.\n\t(SIGNATURE_SPTR_NAME): Likewise.\n\t(SIGNATURE_POINTER_NAME): Likewise.\n\t(SIGNATURE_POINTER_NAME_FORMAT): Likewise.\n\t(SIGNATURE_REFERENCE_NAME): Likewise.\n\t(SIGNATURE_REFERNECE_NAME_FORMAT): Likewise.\n\t(SIGTABLE_PTR_TYPE): Likewise.\n\t(SIGTABLE_NAME_FORMAT): Likewise.\n\t(SIGTABLE_NAME_FORMAT_LONG): Likewise.\n\t(SIGTABLE_TAG_NAME): Likewise.\n\t(SIGTABLE_VB_OFF_NAME): Likewise.\n\t(SIGTABLE_VT_OFF_NAME): Likewise.\n\t(finish_base_specifiers): Change prototype.\n\t(build_signature_pointer_type): Remove.\n\t(build_signature_reference_type): Remove.\n\t(build_signature_pointer_constructor): Remove.\n\t(build_signature_method_call): Remove.\n\t(build_optr_ref): Likewise.\n\t(append_signature_fields): Likewise.\n\t(signature_error): Likewise.\n\t* call.c (build_this): Remove signature support.\n\t(build_over_call): Likewise.\n\t(build_new_method_call): Likewise.\n\t* class.c (add_implicitly_declared_members): Likewise.\n\t(finish_struct_1): Likewise.\n\t(finish_struct): Likewise.\n\t* cvt.c (cp_convert_to_pointer): Likewise.\n\t(convert_to_pointer_force): Likewise.\n\t(ocp_convert): Likewise.\n\t* decl.c (sigtable_decl_p): Remove.\n\t(init_decl_processing): Remove support for signatures.\n\t(cp_finish_decl): Likewise.\n\t(grokdeclarator): Likewise.\n\t(grokparms): Likewise.\n\t(xref_tag): Likewise.\n\t(start_function): Likewise.\n\t(start_method): Likewise.\n\t* decl2.c (finish_sigtable_vardecl): Remove.\n\t(flag_handle_signatures): Remove.\n\t(lang_f_options): Remove handle-signatures.\n\t(grokfield): Remove support for signatures.\n\t(grokbitfield): Likewise.\n\t(finish_file): Likewise.\n\t(reparse_absdcl_as_casts): Likewise.\n\t* error.c (dump_type_real): Likewise.\n\t(dump_function_decl): Likewise.\n\t* friend.c (make_friend_class): Likewise.\n\t* gxx.gperf: Remove __signature__, signature, __sigof__, sigof.\n\t* hash.h: Regenerated.\n\t* init.c (build_new_1): Remove support for signatures.\n\t* lang-options.h: Remove -fhandle-signatures,\n\t-fno-handle-signatures.\n\t* lex.c (init_parse): Remove support for signatures.\n\t(yyprint): Likewise.\n\t* lex.h (rid): Remove RID_SIGNATURE.\n\t* method.c (build_decl_overload_real): Remove support for\n\tsignatures.\n\t(hack_identifier): Likewise.\n\t* parse.y (base_class): Likewise.\n\t(base_class.1): Likewise.\n\t(access_specifier): Likewise.\n\t* search.c (lookup_member): Likewise.\n\t* semantics.c (finish_qualified_object_call_expr): Likewise.\n\t(finish_template_type_parm): Likewise.\n\t(begin_class_definition): Likewise.\n\t(finish_base_specifier): Likewise.\n\t* sig.c: Remove.\n\t* tree.c (build_cplus_method_type): Remove support for signatures.\n\t* typeck.c (require_complete_type): Likewise.\n\t(c_sizeof): Likewise.\n\t(c_alignof): Likewise.\n\t(build_object_ref): Likewise.\n\t(build_component_ref): Likewise.\n\t(build_indirect_ref): Likewise.\n\t(build_c_cast): Likewise.\n\t(build_modify_expr): Likewise.\n\t(convert_for_initialization): Likewise.\n\t* typeck2.c (signature_error): Remove.\n\t(store_init_value): Remove support for signatures.\n\t(digest_init): Likewise.\n\t(build_x_arrow): Likewise.\n\t(build_functional_cast): Likewise.\n\t* xref.c (GNU_xref_decl): Likewise.\n\nFrom-SVN: r28681", "tree": {"sha": "d7708f4facc7d82e07e1b1ba1b07837462c38931", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7708f4facc7d82e07e1b1ba1b07837462c38931"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf7cf3d23e8b3d6ffb7a541e5942f205c6e43a90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf7cf3d23e8b3d6ffb7a541e5942f205c6e43a90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf7cf3d23e8b3d6ffb7a541e5942f205c6e43a90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf7cf3d23e8b3d6ffb7a541e5942f205c6e43a90/comments", "author": null, "committer": null, "parents": [{"sha": "48ff99d10db63adaefda390e28e7d7cbadb0b1cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48ff99d10db63adaefda390e28e7d7cbadb0b1cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48ff99d10db63adaefda390e28e7d7cbadb0b1cd"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "9c99d3e4e304fc402861de7cf7f32012c5e3a465", "filename": "gcc/cp/NEWS", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf7cf3d23e8b3d6ffb7a541e5942f205c6e43a90/gcc%2Fcp%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf7cf3d23e8b3d6ffb7a541e5942f205c6e43a90/gcc%2Fcp%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FNEWS?ref=cf7cf3d23e8b3d6ffb7a541e5942f205c6e43a90", "patch": "@@ -1,5 +1,7 @@\n *** Changes in GCC 3.0:\n \n+* Support for signatures, a G++ extension, have been removed.\n+\n * Certain invalid conversions that were previously accepted will now\n   be rejected.  For example, assigning function pointers of one type\n   to function pointers of another type now requires a cast, whereas"}]}