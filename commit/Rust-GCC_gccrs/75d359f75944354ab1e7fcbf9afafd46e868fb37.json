{"sha": "75d359f75944354ab1e7fcbf9afafd46e868fb37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVkMzU5Zjc1OTQ0MzU0YWIxZTdmY2JmOWFmYWZkNDZlODY4ZmIzNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-03-15T20:11:48Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-03-15T20:11:48Z"}, "message": "PR libstdc++/62045 fix O(N) insertion in pd_ds binary heap\n\n2017-03-15\u00a0\u00a0Xi Ruoyao\u00a0\u00a0<ryxi@stu.xidian.edu.cn>\n\n\tPR libstdc++/62045\n\t* include/ext/pb_ds/qdetail/binary_heap_/binary_heap_.hpp\n\t(is_heap): Remove.\n\t(push_heap): Remove the wrong checking using is_heap.\n\t(make_heap): Remove the assertion using is_heap.\n\t* include/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp\n\t(modify): Ditto.\n\t(resize_for_insert_if_needed): Add PB_DS_ASSERT_VALID after\n\tcalling make_heap.\n\n2017-03-15  Jonathan Wakely  <jwakely@redhat.com>\n\n\tPR libstdc++/62045\n\t* testsuite/ext/pb_ds/regression/priority_queue_binary_heap-62045.cc:\n\tNew test.\n\t* testsuite/ext/pb_ds/regression/priority_queues.cc: Fix copy&paste\n\terror in comment.\n\nFrom-SVN: r246173", "tree": {"sha": "378a37f9de23aceafda17406a7f093e8bfdf74d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/378a37f9de23aceafda17406a7f093e8bfdf74d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75d359f75944354ab1e7fcbf9afafd46e868fb37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d359f75944354ab1e7fcbf9afafd46e868fb37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75d359f75944354ab1e7fcbf9afafd46e868fb37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d359f75944354ab1e7fcbf9afafd46e868fb37/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fb22ebe018682ebcddc069c0ba39d82c3e91eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb22ebe018682ebcddc069c0ba39d82c3e91eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fb22ebe018682ebcddc069c0ba39d82c3e91eb8"}], "stats": {"total": 95, "additions": 75, "deletions": 20}, "files": [{"sha": "59976bd4b74afdccb9aecb336704c0a44a2ccf9d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d359f75944354ab1e7fcbf9afafd46e868fb37/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d359f75944354ab1e7fcbf9afafd46e868fb37/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=75d359f75944354ab1e7fcbf9afafd46e868fb37", "patch": "@@ -1,3 +1,23 @@\n+2017-03-15\u00a0\u00a0Xi Ruoyao\u00a0\u00a0<ryxi@stu.xidian.edu.cn>\n+\n+\tPR libstdc++/62045\n+\t* include/ext/pb_ds/qdetail/binary_heap_/binary_heap_.hpp\n+\t(is_heap): Remove.\n+\t(push_heap): Remove the wrong checking using is_heap.\n+\t(make_heap): Remove the assertion using is_heap.\n+\t* include/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp\n+\t(modify): Ditto.\n+\t(resize_for_insert_if_needed): Add PB_DS_ASSERT_VALID after\n+\tcalling make_heap.\n+\n+2017-03-15  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/62045\n+\t* testsuite/ext/pb_ds/regression/priority_queue_binary_heap-62045.cc:\n+\tNew test.\n+\t* testsuite/ext/pb_ds/regression/priority_queues.cc: Fix copy&paste\n+\terror in comment.\n+\n 2017-03-15  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* acinclude.m4 (GLIBCXX_CHECK_S_ISREG_OR_S_IFREG): Fix typo in"}, {"sha": "f653a1e4b9e85ee1579e9f7f93c09263b8eb6620", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d359f75944354ab1e7fcbf9afafd46e868fb37/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fbinary_heap_.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d359f75944354ab1e7fcbf9afafd46e868fb37/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fbinary_heap_.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Fbinary_heap_.hpp?ref=75d359f75944354ab1e7fcbf9afafd46e868fb37", "patch": "@@ -266,20 +266,14 @@ namespace __gnu_pbds\n \tconst entry_cmp& m_cmp = static_cast<entry_cmp&>(*this);\n \tentry_pointer end = m_a_entries + m_size;\n \tstd::make_heap(m_a_entries, end, m_cmp);\n-\t_GLIBCXX_DEBUG_ASSERT(is_heap());\n       }\n \n       void\n       push_heap()\n       {\n-\tif (!is_heap())\n-\t  make_heap();\n-\telse\n-\t  {\n-\t    const entry_cmp& m_cmp = static_cast<entry_cmp&>(*this);\n-\t    entry_pointer end = m_a_entries + m_size;\n-\t    std::push_heap(m_a_entries, end, m_cmp);\n-\t  }\n+\tconst entry_cmp& m_cmp = static_cast<entry_cmp&>(*this);\n+\tentry_pointer end = m_a_entries + m_size;\n+\tstd::push_heap(m_a_entries, end, m_cmp);\n       }\n \n       void\n@@ -290,15 +284,6 @@ namespace __gnu_pbds\n \tstd::pop_heap(m_a_entries, end, m_cmp);\n       }\n \n-      bool\n-      is_heap()\n-      {\n-\tconst entry_cmp& m_cmp = static_cast<entry_cmp&>(*this);\n-\tentry_pointer end = m_a_entries + m_size;\n-\tbool p = std::__is_heap(m_a_entries, end, m_cmp);\n-\treturn p;\n-      }\n-\n #ifdef _GLIBCXX_DEBUG\n       void\n       assert_valid(const char*, int) const;"}, {"sha": "d21fe3c307079d2c21e8df161ba7d1c6cbfd4dec", "filename": "libstdc++-v3/include/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d359f75944354ab1e7fcbf9afafd46e868fb37/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Finsert_fn_imps.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d359f75944354ab1e7fcbf9afafd46e868fb37/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Finsert_fn_imps.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fdetail%2Fbinary_heap_%2Finsert_fn_imps.hpp?ref=75d359f75944354ab1e7fcbf9afafd46e868fb37", "patch": "@@ -103,7 +103,6 @@ modify(point_iterator it, const_reference r_new_val)\n   swap_value_imp(it.m_p_e, r_new_val, s_no_throw_copies_ind);\n   fix(it.m_p_e);\n   PB_DS_ASSERT_VALID((*this))\n-  _GLIBCXX_DEBUG_ASSERT(is_heap());\n }\n \n PB_DS_CLASS_T_DEC"}, {"sha": "a61d36f67b3febb99d9d2da429f37d60bc208197", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/priority_queue_binary_heap-62045.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d359f75944354ab1e7fcbf9afafd46e868fb37/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queue_binary_heap-62045.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d359f75944354ab1e7fcbf9afafd46e868fb37/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queue_binary_heap-62045.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queue_binary_heap-62045.cc?ref=75d359f75944354ab1e7fcbf9afafd46e868fb37", "patch": "@@ -0,0 +1,51 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run }\n+\n+#include <ext/pb_ds/priority_queue.hpp>\n+#include <testsuite_hooks.h>\n+\n+int count = 0;\n+\n+struct less\n+{\n+  bool operator()(int i, int j) const\n+  {\n+    ++count;\n+    return i < j;\n+  }\n+};\n+\n+void\n+test01()\n+{\n+  __gnu_pbds::priority_queue<int, less, __gnu_pbds::binary_heap_tag> c;\n+  c.push(1);\n+  c.push(2);\n+  c.push(3);\n+  c.push(4);\n+  count = 0;\n+  c.push(5);\n+  VERIFY( count < c.size() );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "6b27ac42fcc586a1c913712e5504b184439b1dca", "filename": "libstdc++-v3/testsuite/ext/pb_ds/regression/priority_queues.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d359f75944354ab1e7fcbf9afafd46e868fb37/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queues.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d359f75944354ab1e7fcbf9afafd46e868fb37/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queues.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fregression%2Fpriority_queues.cc?ref=75d359f75944354ab1e7fcbf9afafd46e868fb37", "patch": "@@ -108,7 +108,7 @@ priority_queue_link_regression_test_0()\n \n   {\n     /*\n-     *  Perform operations on a binomial-heap queue.\n+     *  Perform operations on a binary-heap queue.\n      */\n     cout << \"Binary heap\" << endl;\n     __gnu_pbds::priority_queue<int, less<int>, binary_heap_tag> c;"}]}