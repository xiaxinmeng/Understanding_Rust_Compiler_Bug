{"sha": "9318a011e0a99293d4627c4c0ebb5e3fda3c2fa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMxOGEwMTFlMGE5OTI5M2Q0NjI3YzRjMGViYjVlM2ZkYTNjMmZhMA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2013-09-25T16:27:49Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2013-09-25T16:27:49Z"}, "message": "Make-lang.in (gospec.o): Remove.\n\n\t* Make-lang.in (gospec.o): Remove.\n\t(CFLAGS-go/gospec.o): New variable.\n\t(GCCGO_OBJS): Update to use go/gospec.o.\n\t(go_OBJS): Define.\n\t(GO_SYSTEM_H, GO_C_H, GO_LINEMAP_H, GO_LEX_H, GO_PARSE_H)\n\t(GO_GOGO_H, GO_TYPES_H, GO_STATEMENTS_H, GO_EXPRESSIONS_H)\n\t(GO_EXPORT_H, GO_IMPORT_H, GO_RUNTIME_H, GO_AST_DUMP_H)\n\t(go/go-backend.o, go/go-lang.o, go/go-gcc.o, go/go-linemap.o)\n\t(go/ast-dump.o, go/dataflow.o, go/export.o, go/expressions.o)\n\t(go/go.o, go/go-dump.o, go/go-optimize.o, go/gogo-tree.o)\n\t(go/gogo.o, go/import.o, go/import-archive.o, go/lex.o)\n\t(go/parse.o, go/runtime.o, go/statements.o, go/types.o)\n\t(go/unsafe.o): Remove.\n\t(CFLAGS-go/go-gcc.o, CFLAGS-go/go-linemap.o): New variables.\n\t(go/%.o: go/gofrontend/%.cc): Use COMPILE and POSTCOMPILE.\n\nFrom-SVN: r202905", "tree": {"sha": "ffb69244ac6cee4db3c5d919f60a6374c9d23c48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffb69244ac6cee4db3c5d919f60a6374c9d23c48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9318a011e0a99293d4627c4c0ebb5e3fda3c2fa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9318a011e0a99293d4627c4c0ebb5e3fda3c2fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9318a011e0a99293d4627c4c0ebb5e3fda3c2fa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9318a011e0a99293d4627c4c0ebb5e3fda3c2fa0/comments", "author": null, "committer": null, "parents": [{"sha": "9e33f723008728c9c3e4e320db07c2a48086a930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e33f723008728c9c3e4e320db07c2a48086a930", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e33f723008728c9c3e4e320db07c2a48086a930"}], "stats": {"total": 117, "additions": 26, "deletions": 91}, "files": [{"sha": "eefbe37eb9ddb08ad0cc23b343bd7241f40b9cb7", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9318a011e0a99293d4627c4c0ebb5e3fda3c2fa0/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9318a011e0a99293d4627c4c0ebb5e3fda3c2fa0/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=9318a011e0a99293d4627c4c0ebb5e3fda3c2fa0", "patch": "@@ -1,3 +1,21 @@\n+2013-09-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Make-lang.in (gospec.o): Remove.\n+\t(CFLAGS-go/gospec.o): New variable.\n+\t(GCCGO_OBJS): Update to use go/gospec.o.\n+\t(go_OBJS): Define.\n+\t(GO_SYSTEM_H, GO_C_H, GO_LINEMAP_H, GO_LEX_H, GO_PARSE_H)\n+\t(GO_GOGO_H, GO_TYPES_H, GO_STATEMENTS_H, GO_EXPRESSIONS_H)\n+\t(GO_EXPORT_H, GO_IMPORT_H, GO_RUNTIME_H, GO_AST_DUMP_H)\n+\t(go/go-backend.o, go/go-lang.o, go/go-gcc.o, go/go-linemap.o)\n+\t(go/ast-dump.o, go/dataflow.o, go/export.o, go/expressions.o)\n+\t(go/go.o, go/go-dump.o, go/go-optimize.o, go/gogo-tree.o)\n+\t(go/gogo.o, go/import.o, go/import-archive.o, go/lex.o)\n+\t(go/parse.o, go/runtime.o, go/statements.o, go/types.o)\n+\t(go/unsafe.o): Remove.\n+\t(CFLAGS-go/go-gcc.o, CFLAGS-go/go-linemap.o): New variables.\n+\t(go/%.o: go/gofrontend/%.cc): Use COMPILE and POSTCOMPILE.\n+\n 2013-09-25  Tom Tromey  <tromey@redhat.com>\n \n \t* Make-lang.in (gospec.o): Don't use subshell."}, {"sha": "e4bceb21c088e02db5d29898f9ddba49642ba352", "filename": "gcc/go/Make-lang.in", "status": "modified", "additions": 8, "deletions": 91, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9318a011e0a99293d4627c4c0ebb5e3fda3c2fa0/gcc%2Fgo%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9318a011e0a99293d4627c4c0ebb5e3fda3c2fa0/gcc%2Fgo%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FMake-lang.in?ref=9318a011e0a99293d4627c4c0ebb5e3fda3c2fa0", "patch": "@@ -30,12 +30,9 @@ go: go1$(exeext)\n \n .PHONY: go\n \n-gospec.o: $(srcdir)/go/gospec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n-    $(CONFIG_H) opts.h\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n-\t\t$(INCLUDES) $(srcdir)/go/gospec.c\n+CFLAGS-go/gospec.o += $(DRIVER_DEFINES)\n \n-GCCGO_OBJS = $(GCC_OBJS) gospec.o\n+GCCGO_OBJS = $(GCC_OBJS) go/gospec.o\n gccgo$(exeext): $(GCCGO_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GCCGO_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \\\n@@ -74,6 +71,8 @@ GO_OBJS = \\\n \tgo/types.o \\\n \tgo/unsafe.o\n \n+go_OBJS = $(GO_OBJS) go/gospec.o\n+\n go1$(exeext): $(GO_OBJS) attribs.o $(BACKEND) $(LIBDEPS)\n \t+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(GO_OBJS) attribs.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n@@ -222,96 +221,14 @@ go.stageprofile: stageprofile-start\n go.stagefeedback: stagefeedback-start\n \t-mv go/*$(objext) stagefeedback/go\n \n-GO_SYSTEM_H = go/go-system.h $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(DIAGNOSTIC_CORE_H) $(INPUT_H) intl.h\n-\n-GO_C_H = go/go-c.h $(MACHMODE_H)\n-GO_LINEMAP_H = go/gofrontend/go-linemap.h $(GO_SYSTEM_H) go/go-location.h\n-GO_LEX_H = go/gofrontend/lex.h go/gofrontend/operator.h $(GO_LINEMAP_H)\n-GO_PARSE_H = go/gofrontend/parse.h\n-GO_GOGO_H = go/gofrontend/gogo.h $(GO_LINEMAP_H)\n-GO_TYPES_H = go/gofrontend/types.h $(GO_LINEMAP_H)\n-GO_STATEMENTS_H = go/gofrontend/statements.h go/gofrontend/operator.h\n-GO_EXPRESSIONS_H = go/gofrontend/expressions.h go/gofrontend/operator.h\n-GO_EXPORT_H = go/gofrontend/export.h go/gofrontend/string-dump.h\n-GO_IMPORT_H = go/gofrontend/import.h $(GO_EXPORT_H) $(GO_LINEMAP_H)\n-GO_RUNTIME_H = go/gofrontend/runtime.h go/gofrontend/runtime.def\n-GO_AST_DUMP_H = go/gofrontend/ast-dump.h go/gofrontend/string-dump.h\n-\n-go/go-backend.o: go/go-backend.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-\t$(TM_H) $(TREE_H) $(TM_P_H) output.h $(TARGET_H) \\\n-\t$(COMMON_TARGET_H)\n-\n CFLAGS-go/go-lang.o += -DDEFAULT_TARGET_VERSION=\\\"$(version)\\\" \\\n \t-DDEFAULT_TARGET_MACHINE=\\\"$(target_noncanonical)\\\"\n-go/go-lang.o: go/go-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(OPTS_H) \\\n-\t\t$(TREE_H) $(GIMPLE_H) $(GGC_H) $(TOPLEV_H) debug.h options.h \\\n-\t\t$(FLAGS_H) convert.h $(DIAGNOSTIC_H) langhooks.h \\\n-\t\t$(LANGHOOKS_DEF_H) $(TARGET_H) $(GO_C_H) \\\n-\t\tgt-go-go-lang.h gtype-go.h $(COMMON_TARGET_H)\n \n GOINCLUDES = -I $(srcdir)/go -I $(srcdir)/go/gofrontend\n \n-go/go-gcc.o: go/go-gcc.cc $(GO_SYSTEM_H) $(TREE_H) tree-iterator.h \\\n-\t\t$(GIMPLE_H) toplev.h output.h $(GO_C_H) $(GO_GOGO_H) \\\n-\t\tgo/gofrontend/backend.h\n-\t$(CXX) -c $(GOINCLUDES) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $< $(OUTPUT_OPTION)\n-\n-go/go-linemap.o: go/go-linemap.cc $(GO_SYSTEM_H) $(GO_LINEMAP_H)\n-\t$(CXX) -c $(GOINCLUDES) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $< $(OUTPUT_OPTION)\n+CFLAGS-go/go-gcc.o += $(GOINCLUDES)\n+CFLAGS-go/go-linemap.o += $(GOINCLUDES)\n \n go/%.o: go/gofrontend/%.cc\n-\t$(CXX) -c $(GOINCLUDES) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $< $(OUTPUT_OPTION)\n-\n-go/ast-dump.o: go/gofrontend/ast-dump.cc $(GO_SYSTME_H) $(GO_GOGO_H) \\\n-\t$(GO_EXPRESSIONS_H) $(GO_STATEMENTS_H) $(GO_TYPES_H) \\\n-\t$(GO_AST_DUMP_H) $(GO_C_H) go/gofrontend/go-dump.h\n-go/dataflow.o: go/gofrontend/dataflow.cc $(GO_SYSTEM_H) $(GO_GOGO_H) \\\n-\t$(GO_EXPRESSIONS_H) $(GO_STATEMENTS_H) go/gofrontend/dataflow.h\n-go/export.o: go/gofrontend/export.cc $(GO_SYSTEM_H) \\\n-\t$(srcdir)/../include/sha1.h $(GO_C_H) $(GO_GOGO_H) $(GO_TYPES_H) \\\n-\t$(GO_STATEMENTS_H) $(GO_EXPORT_H)\n-go/expressions.o: go/gofrontend/expressions.cc $(GO_SYSTEM_H) $(TOPLEV_H) \\\n-\tintl.h $(TREE_H) $(GIMPLE_H) tree-iterator.h convert.h $(REAL_H) \\\n-\trealmpfr.h $(GO_C_H) $(GO_GOGO_H) $(GO_TYPES_H) \\\n-\t$(GO_EXPORT_H) $(GO_IMPORT_H) $(GO_STATEMENTS_H) $(GO_LEX_H) \\\n-\t$(GO_RUNTIME_H) go/gofrontend/backend.h $(GO_EXPRESSIONS_H) \\\n-\t$(GO_AST_DUMP_H)\n-go/go.o: go/gofrontend/go.cc $(GO_SYSTEM_H) $(GO_C_H) $(GO_LEX_H) \\\n-\t$(GO_PARSE_H) go/gofrontend/backend.h $(GO_GOGO_H)\n-go/go-dump.o: go/gofrontend/go-dump.cc $(GO_SYSTEM_H) $(GO_C_H) \\\n-\tgo/gofrontend/go-dump.h\n-go/go-optimize.o: go/gofrontend/go-optimize.cc $(GO_SYSTEM_H) $(GO_C_H) \\\n-\tgo/gofrontend/go-optimize.h\n-go/gogo-tree.o: go/gofrontend/gogo-tree.cc $(GO_SYSTEM_H) $(TOPLEV_H) \\\n-\t$(TREE_H) $(GIMPLE_H) tree-iterator.h $(CGRAPH_H) langhooks.h \\\n-\tconvert.h output.h $(DIAGNOSTIC_H) $(GO_TYPES_H) \\\n-\t$(GO_EXPRESSIONS_H) $(GO_STATEMENTS_H) $(GO_RUNTIME_H) \\\n-\tgo/gofrontend/backend.h $(GO_GOGO_H)\n-go/gogo.o: go/gofrontend/gogo.cc $(GO_SYSTEM_H) \\\n-\t$(srcdir)/../include/filenames.h $(GO_C_H) go/gofrontend/go-dump.h \\\n-\t$(GO_LEX_H) $(GO_TYPES_H) $(GO_STATEMENTS_H) $(GO_EXPRESSIONS_H) \\\n-\tgo/gofrontend/dataflow.h $(GO_RUNTIME_H) $(GO_IMPORT_H) \\\n-\t$(GO_EXPORT_H) go/gofrontend/backend.h $(GO_GOGO_H)\n-go/import.o: go/gofrontend/import.cc $(GO_SYSTEM_H) \\\n-\t$(srcdir)/../include/filenames.h $(srcdir)/../include/simple-object.h \\\n-\t$(GO_C_H) $(GO_GOGO_H) $(GO_LEX_H) $(GO_TYPES_H) $(GO_EXPORT_H) \\\n-\t$(GO_IMPORT_H)\n-go/import-archive.o: go/gofrontend/import-archive.cc $(GO_SYSTEM_H) \\\n-\t$(GO_IMPORT_H)\n-go/lex.o: go/gofrontend/lex.cc $(GO_LEX_H) $(GO_SYSTEM_H)\n-go/parse.o: go/gofrontend/parse.cc $(GO_SYSTEM_H) $(GO_LEX_H) $(GO_GOGO_H) \\\n-\t$(GO_TYPES_H) $(GO_STATEMENTS_H) $(GO_EXPRESSIONS_H) $(GO_PARSE_H)\n-go/runtime.o: go/gofrontend/runtime.cc $(GO_SYSTEM_H) $(GO_GOGO_H) \\\n-\t$(GO_TYPES_H) $(GO_EXPRESSIONS_H) $(GO_RUNTIME_H) \\\n-\tgo/gofrontend/runtime.def\n-go/statements.o: go/gofrontend/statements.cc $(GO_SYSTEM_H) \\\n-\t$(GO_C_H) $(GO_TYPES_H) $(GO_EXPRESSIONS_H) $(GO_GOGO_H) \\\n-\t$(GO_RUNTIME_H) go/gofrontend/backend.h $(GO_STATEMENTS_H) \\\n-\t$(GO_AST_DUMP_H)\n-go/types.o: go/gofrontend/types.cc $(GO_SYSTEM_H) $(TOPLEV_H) intl.h $(TREE_H) \\\n-\t$(GIMPLE_H) $(REAL_H) convert.h $(GO_C_H) $(GO_GOGO_H) \\\n-\tgo/gofrontend/operator.h $(GO_EXPRESSIONS_H) $(GO_STATEMENTS_H) \\\n-\t$(GO_EXPORT_H) $(GO_IMPORT_H) go/gofrontend/backend.h $(GO_TYPES_H)\n-go/unsafe.o: go/gofrontend/unsafe.cc $(GO_SYSTEM_H) $(GO_C_H) $(GO_TYPES_H) \\\n-\t$(GO_GOGO_H)\n+\t$(COMPILE) $(GOINCLUDES) $<\n+\t$(POSTCOMPILE)"}]}