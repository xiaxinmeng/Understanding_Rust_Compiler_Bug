{"sha": "7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q2YWE5YTYwNWEwZjhjYjAwMGZlNmQ5NDEyYjAwZmE3NmFmMzNmMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-06-13T23:11:27Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-06-13T23:11:27Z"}, "message": "* Partially revert my previous commit.\n\nFrom-SVN: r237418", "tree": {"sha": "b0f1f69d6423cadc10006215a17ee7f6d81b519c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0f1f69d6423cadc10006215a17ee7f6d81b519c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/comments", "author": null, "committer": null, "parents": [{"sha": "385c7747b78f0e178666fb7f376d21389a3f0bb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/385c7747b78f0e178666fb7f376d21389a3f0bb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/385c7747b78f0e178666fb7f376d21389a3f0bb8"}], "stats": {"total": 198, "additions": 33, "deletions": 165}, "files": [{"sha": "5c3375e550e11fa482fd51af76533ef808756a87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -1,15 +1,7 @@\n 2016-06-13  Uros Bizjak  <ubizjak@gmail.com>\n \n-\t* config/i386/i386-builtin-types.def (INT_FTYPE_FLOAT128):\n-\tNew function type.\n-\t* config/i386/i386.c (enum ix86_builtins) [IX86_BUILTIN_SIGNBITQ]: New.\n-\t(ix86_init_builtins): Add __builtin_signbitq function.\n-\t(ix86_expand_args_builtin): Handle INT_FTYPE_FLOAT128.\n-\t(ix86_expand_builtin): Handle IX86_BUILTIN_SIGNBITQ.\n \t* config/i386/i386.md (signbittf2): New expander.\n \t* config/i386/sse.md (ptesttf2): New insn pattern.\n-\t* doc/extend.texi (x86 Built-in Functions): Document\n-\t__builtin_signbitq.\n \n 2016-06-13  David Malcolm  <dmalcolm@redhat.com>\n "}, {"sha": "7eb6fc96e66f8d50520a6847bd41641b0c97520d", "filename": "gcc/config/i386/i386-builtin-types.def", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -202,7 +202,6 @@ DEF_FUNCTION_TYPE (INT, V8QI)\n DEF_FUNCTION_TYPE (INT, V8SF)\n DEF_FUNCTION_TYPE (INT, V32QI)\n DEF_FUNCTION_TYPE (INT, PCCHAR)\n-DEF_FUNCTION_TYPE (INT, FLOAT128)\n DEF_FUNCTION_TYPE (INT64, INT64)\n DEF_FUNCTION_TYPE (INT64, V2DF)\n DEF_FUNCTION_TYPE (INT64, V4SF)"}, {"sha": "c5e5e1238a53674d9184d3c5c816ab418af34dda", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 31, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -32722,7 +32722,6 @@ enum ix86_builtins\n   IX86_BUILTIN_NANSQ,\n   IX86_BUILTIN_FABSQ,\n   IX86_BUILTIN_COPYSIGNQ,\n-  IX86_BUILTIN_SIGNBITQ,\n \n   /* Vectorizer support builtins.  */\n   IX86_BUILTIN_CPYSGNPS,\n@@ -33984,8 +33983,6 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_SSE4_1, CODE_FOR_sse4_1_mulv2siv2di3, \"__builtin_ia32_pmuldq128\", IX86_BUILTIN_PMULDQ128, UNKNOWN, (int) V2DI_FTYPE_V4SI_V4SI },\n   { OPTION_MASK_ISA_SSE4_1, CODE_FOR_mulv4si3, \"__builtin_ia32_pmulld128\", IX86_BUILTIN_PMULLD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI },\n \n-  { OPTION_MASK_ISA_SSE4_1, CODE_FOR_signbittf2, 0, IX86_BUILTIN_SIGNBITQ, UNKNOWN, (int) INT_FTYPE_FLOAT128 },\n-\n   /* SSE4.1 */\n   { OPTION_MASK_ISA_ROUND, CODE_FOR_sse4_1_roundpd, \"__builtin_ia32_roundpd\", IX86_BUILTIN_ROUNDPD, UNKNOWN, (int) V2DF_FTYPE_V2DF_INT },\n   { OPTION_MASK_ISA_ROUND, CODE_FOR_sse4_1_roundps, \"__builtin_ia32_roundps\", IX86_BUILTIN_ROUNDPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_INT },\n@@ -38302,13 +38299,6 @@ ix86_init_builtins (void)\n   TREE_READONLY (decl) = 1;\n   ix86_builtins[(int) IX86_BUILTIN_COPYSIGNQ] = decl;\n \n-  ftype = ix86_get_builtin_func_type (INT_FTYPE_FLOAT128);\n-  decl = add_builtin_function (\"__builtin_signbitq\", ftype,\n-\t\t\t       IX86_BUILTIN_SIGNBITQ, BUILT_IN_MD,\n-\t\t\t       \"__signbittf2\", NULL_TREE);\n-  TREE_READONLY (decl) = 1;\n-  ix86_builtins[(int) IX86_BUILTIN_SIGNBITQ] = decl;\n-\n   ix86_init_tm_builtins ();\n   ix86_init_mmx_sse_builtins ();\n   ix86_init_mpx_builtins ();\n@@ -39138,7 +39128,6 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n     case INT_FTYPE_V4SF:\n     case INT_FTYPE_V2DF:\n     case INT_FTYPE_V32QI:\n-    case INT_FTYPE_FLOAT128:\n     case V16QI_FTYPE_V16QI:\n     case V8SI_FTYPE_V8SF:\n     case V8SI_FTYPE_V4SI:\n@@ -42649,26 +42638,16 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n        i < ARRAY_SIZE (bdesc_args);\n        i++, d++)\n     if (d->code == fcode)\n-      {\n-\tswitch (fcode)\n-\t  {\n-\t  case IX86_BUILTIN_FABSQ:\n-\t  case IX86_BUILTIN_COPYSIGNQ:\n-\t    if (!TARGET_SSE)\n-\t      /* Emit a normal call if SSE isn't available.  */\n-\t      return expand_call (exp, target, ignore);\n-\t    break;\n-\t  case IX86_BUILTIN_SIGNBITQ:\n-\t    if (!TARGET_SSE4_1)\n-\t      /* Emit a normal call if SSE4_1 isn't available.  */\n-\t      return expand_call (exp, target, ignore);\n-\t    break;\n-\t  default:\n-\t    break;\n-\t  }\n-\n-\treturn ix86_expand_args_builtin (d, exp, target);\n-      }\n+      switch (fcode)\n+\t{\n+\tcase IX86_BUILTIN_FABSQ:\n+\tcase IX86_BUILTIN_COPYSIGNQ:\n+\t  if (!TARGET_SSE)\n+\t    /* Emit a normal call if SSE isn't available.  */\n+\t    return expand_call (exp, target, ignore);\n+\tdefault:\n+\t  return ix86_expand_args_builtin (d, exp, target);\n+\t}\n \n   for (i = 0, d = bdesc_comi; i < ARRAY_SIZE (bdesc_comi); i++, d++)\n     if (d->code == fcode)"}, {"sha": "06d52b8ce0d21e6638e21acf27a6ef219bf1b7b2", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -18480,7 +18480,6 @@ of them implement the function that is part of the name.\n @smallexample\n __float128 __builtin_fabsq (__float128)\n __float128 __builtin_copysignq (__float128, __float128)\n-int __builtin_signbitq (__float128)\n @end smallexample\n \n The following built-in functions are always available."}, {"sha": "45862f3851cec23018fd14a1a6eaa5dc9472399b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -1,10 +1,3 @@\n-2016-06-13  Uros Bizjak  <ubizjak@gmail.com>\n-\n-\t* gcc.target/i386/float128-3.c: New test.\n-\t* gcc.target/i386/quad-sse4.c: Ditto.\n-\t* gcc.target/i386/quad-sse.c: Use -msse instead of -msse2.\n-\tUpdate scan strings.\n-\n 2016-06-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/71498"}, {"sha": "99bcd4906e8618328fd9d42986dede18a7cfbd0e", "filename": "gcc/testsuite/gcc.target/i386/float128-3.c", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/385c7747b78f0e178666fb7f376d21389a3f0bb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffloat128-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/385c7747b78f0e178666fb7f376d21389a3f0bb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffloat128-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffloat128-3.c?ref=385c7747b78f0e178666fb7f376d21389a3f0bb8", "patch": "@@ -1,21 +0,0 @@\n-/* { dg-do run } */\n-/* { dg-options \"-O2 -msse4.1\" } */\n-/* { dg-require-effective-target sse4 } */\n-\n-#include \"sse4_1-check.h\"\n-\n-extern void abort (void);\n-\n-static void\n-sse4_1_test (void)\n-{\n-  static volatile __float128 a;\n-\n-  a = -1.2q;\n-  if (!__builtin_signbitq (a))\n-    abort ();\n-\n-  a = 1.2q;\n-  if (__builtin_signbitq (a))\n-    abort ();\n-}"}, {"sha": "a08ea27afed49afd34038287dd4ed919cf322284", "filename": "gcc/testsuite/gcc.target/i386/quad-sse4.c", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/385c7747b78f0e178666fb7f376d21389a3f0bb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fquad-sse4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/385c7747b78f0e178666fb7f376d21389a3f0bb8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fquad-sse4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fquad-sse4.c?ref=385c7747b78f0e178666fb7f376d21389a3f0bb8", "patch": "@@ -1,11 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-O2 -msse4.1\" } */\n-\n-__float128 x;\n-\n-int __test_1(void)\n-{\n-  return __builtin_signbitq (x);\n-}\n-\n-/* { dg-final { scan-assembler-not \"signbit\" } } */"}, {"sha": "19d60115bc81f66544f558f26b5f79f887f9263e", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -1,15 +1,3 @@\n-2016-06-13  Uros Bizjak  <ubizjak@gmail.com>\n-\n-\t* config.host (i[34567]86-*-* | x86_64-*-*): Always include\n-\ti386/${host_address}/t-softfp in tmake_file.\n-\t* config/i386/32/t-softfp: Update comment for __builtin_copysignq.\n-\t* config/i386/32/tf-signs.c: Add __signbittf2 fallback function.\n-\t* config/i386/64/t-softfp: New file.\n-\t* config/i386/64/tf-signs.c: Ditto.\n-\t* config/i386/libgcc-bsd.ver: Add __signbittf2.\n-\t* config/i386/libgcc-glibc.ver: Ditto.\n-\t* config/i386/libgcc-sol2.ver: Ditto.\n-\n 2016-06-05  Aaron Conole  <aconole@redhat.com>\n \t    Nathan Sidwell  <nathan@acm.org>\n "}, {"sha": "7899216af6c40b3ab11f0a37119da15d7752ef8a", "filename": "libgcc/config.host", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -1361,7 +1361,9 @@ i[34567]86-*-darwin* | x86_64-*-darwin* | \\\n   i[34567]86-*-freebsd* | x86_64-*-freebsd* | \\\n   i[34567]86-*-openbsd* | x86_64-*-openbsd*)\n   \ttmake_file=\"${tmake_file} t-softfp-tf\"\n-\ttmake_file=\"${tmake_file} i386/${host_address}/t-softfp\"\n+\tif test \"${host_address}\" = 32; then\n+\t\ttmake_file=\"${tmake_file} i386/${host_address}/t-softfp\"\n+\tfi\n \ttmake_file=\"${tmake_file} i386/t-softfp t-softfp\"\n \t;;\n esac"}, {"sha": "a48a5b3b11615d3cb84211996e17fd8dcaa88b4c", "filename": "libgcc/config/i386/32/t-softfp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fi386%2F32%2Ft-softfp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fi386%2F32%2Ft-softfp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2F32%2Ft-softfp?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -1,6 +1,5 @@\n # Omit TImode functions\n softfp_int_modes := si di\n \n-# Provide fallbacks for __builtin_copysignq, __builtin_fabsq\n-# and __builtin_signbitq.\n+# Provide fallbacks for __builtin_copysignq and __builtin_fabsq.\n LIB2ADD += $(srcdir)/config/i386/32/tf-signs.c"}, {"sha": "1e30626715fe2409b6873aba1e7b2e84d488b68e", "filename": "libgcc/config/i386/32/tf-signs.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fi386%2F32%2Ftf-signs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fi386%2F32%2Ftf-signs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2F32%2Ftf-signs.c?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -37,7 +37,6 @@ union _FP_UNION_Q\n \n __float128 __copysigntf3 (__float128, __float128);\n __float128 __fabstf2 (__float128);\n-int __signbittf2 (__float128);\n \n __float128\n __copysigntf3 (__float128 a, __float128 b)\n@@ -61,13 +60,3 @@ __fabstf2 (__float128 a)\n \n   return A.flt;\n }\n-\n-int\n-__signbittf2 (__float128 a)\n-{\n-  union _FP_UNION_Q A;\n-\n-  A.flt = a;\n-\n-  return A.bits.sign;\n-}"}, {"sha": "f159f74fe501826c9d7270fd4b78d2c0c7ac452d", "filename": "libgcc/config/i386/64/t-softfp", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/385c7747b78f0e178666fb7f376d21389a3f0bb8/libgcc%2Fconfig%2Fi386%2F64%2Ft-softfp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/385c7747b78f0e178666fb7f376d21389a3f0bb8/libgcc%2Fconfig%2Fi386%2F64%2Ft-softfp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2F64%2Ft-softfp?ref=385c7747b78f0e178666fb7f376d21389a3f0bb8", "patch": "@@ -1,2 +0,0 @@\n-# Provide fallbacks for __builtin_signbitq\n-LIB2ADD += $(srcdir)/config/i386/64/tf-signs.c"}, {"sha": "29dfaef09a4af31f47bbe6fdf0ca793af9c5788d", "filename": "libgcc/config/i386/64/tf-signs.c", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/385c7747b78f0e178666fb7f376d21389a3f0bb8/libgcc%2Fconfig%2Fi386%2F64%2Ftf-signs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/385c7747b78f0e178666fb7f376d21389a3f0bb8/libgcc%2Fconfig%2Fi386%2F64%2Ftf-signs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2F64%2Ftf-signs.c?ref=385c7747b78f0e178666fb7f376d21389a3f0bb8", "patch": "@@ -1,46 +0,0 @@\n-/* Copyright (C) 2016 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-union _FP_UNION_Q\n-{\n-   __float128 flt;\n-   struct \n-   {\n-      unsigned long long frac0 : 64;\n-      unsigned long long frac1 : 48;\n-      unsigned exp : 15;\n-      unsigned sign : 1;\n-   } bits __attribute__((packed));\n-};\n-\n-int __signbittf3 (__float128);\n-\n-int\n-__signbittf2 (__float128 a)\n-{\n-  union _FP_UNION_Q A;\n-\n-  A.flt = a;\n-\n-  return A.bits.sign;\n-}"}, {"sha": "443f8d6647ae3962fbaba80400fe4bedd6fc124b", "filename": "libgcc/config/i386/libgcc-glibc.ver", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fi386%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fi386%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Flibgcc-glibc.ver?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -152,10 +152,6 @@ GCC_4.8.0 {\n   __cpu_model\n   __cpu_indicator_init\n }\n-\n-GCC_7.0.0 {\n-  __signbittf2\n-}\n %else\n GCC_4.4.0 {\n   __addtf3\n@@ -197,8 +193,4 @@ GCC_4.8.0 {\n   __cpu_model\n   __cpu_indicator_init\n }\n-\n-GCC_7.0.0 {\n-  __signbittf2\n-}\n %endif"}, {"sha": "730ccc298e289c9a65e95c606f970acc9087461a", "filename": "libgcc/config/ia64/libgcc-glibc.ver", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fia64%2Flibgcc-glibc.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fia64%2Flibgcc-glibc.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Flibgcc-glibc.ver?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -95,3 +95,7 @@ GCC_4.4.0 {\n   __trunctfxf2\n   __unordtf2\n }\n+\n+GCC_7.0.0 {\n+  __signbittf2\n+}"}, {"sha": "96a65e88533eca995ac9fc8b830f1be679ef2280", "filename": "libgcc/config/ia64/t-softfp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fia64%2Ft-softfp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fia64%2Ft-softfp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Ft-softfp?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -1,4 +1,5 @@\n-# Provide fallbacks for __builtin_copysignq and __builtin_fabsq.\n+# Provide fallbacks for __builtin_copysignq, __builtin_fabsq\n+# and __builtin_signbitq.\n LIB2ADD += $(srcdir)/config/ia64/tf-signs.c\n \n LIB2ADD += $(srcdir)/config/ia64/sfp-exceptions.c"}, {"sha": "aacaed4895fb396b2fadc92db13450fe12397f91", "filename": "libgcc/config/ia64/tf-signs.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fia64%2Ftf-signs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3/libgcc%2Fconfig%2Fia64%2Ftf-signs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Ftf-signs.c?ref=7d6aa9a605a0f8cb000fe6d9412b00fa76af33f3", "patch": "@@ -26,15 +26,16 @@ union _FP_UNION_Q\n    __float128 flt;\n    struct \n    {\n-      unsigned long frac1 : 64;\n-      unsigned long frac0 : 48;\n+      unsigned long frac0 : 64;\n+      unsigned long frac1 : 48;\n       unsigned exp : 15;\n       unsigned sign : 1;\n    } bits __attribute__((packed));\n };\n \n __float128 __copysigntf3 (__float128, __float128);\n __float128 __fabstf2 (__float128);\n+int __signbittf2 (__float128);\n \n __float128\n __copysigntf3 (__float128 a, __float128 b)\n@@ -58,3 +59,13 @@ __fabstf2 (__float128 a)\n \n   return A.flt;\n }\n+\n+int\n+__signbittf2 (__float128 a)\n+{\n+  union _FP_UNION_Q A;\n+\n+  A.flt = a;\n+\n+  return A.bits.sign;\n+}"}]}