{"sha": "22bd385b2b2c5e3a8b2bc1370cd576b75195d72e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJiZDM4NWIyYjJjNWUzYThiMmJjMTM3MGNkNTc2Yjc1MTk1ZDcyZQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-08-28T07:14:26Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-08-28T07:14:26Z"}, "message": "re PR rtl-optimization/5079 (Reference to static const int not eliminated during optimization)\n\n\tPR optimization/5079\n\t* call.c (build_conditional_expr): Use decl_constant_value to\n\tsimplify the arguments.\n\n\tPR optimization/5079\n\t* g++.dg/opt/static3.C: New test.\n\nFrom-SVN: r70881", "tree": {"sha": "33b46f58435734419c1a15c485d745d9839d668d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33b46f58435734419c1a15c485d745d9839d668d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e/comments", "author": null, "committer": null, "parents": [{"sha": "45dff86efa42f35786a2624ff70d7304d3e7ef77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45dff86efa42f35786a2624ff70d7304d3e7ef77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45dff86efa42f35786a2624ff70d7304d3e7ef77"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "87857b249a70ca101c209d2db96e5e55fd7ed827", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=22bd385b2b2c5e3a8b2bc1370cd576b75195d72e", "patch": "@@ -1,3 +1,9 @@\n+2003-08-28  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR optimization/5079\n+\t* call.c (build_conditional_expr): Use decl_constant_value to\n+\tsimplify the arguments.\n+\n 2003-08-26  Dan Nicolaescu  <dann@ics.uci.edu>\n \n \t* parser.c (struct cp_token): Use enum bitfields."}, {"sha": "739ce71f590d5c1e7edb8d1eb96715920ba45ae2", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=22bd385b2b2c5e3a8b2bc1370cd576b75195d72e", "patch": "@@ -3358,6 +3358,8 @@ build_conditional_expr (tree arg1, tree arg2, tree arg3)\n     }\n \n  valid_operands:\n+  arg2 = decl_constant_value (arg2);\n+  arg3 = decl_constant_value (arg3);\n   result = fold (build (COND_EXPR, result_type, arg1, arg2, arg3));\n   /* We can't use result_type below, as fold might have returned a\n      throw_expr.  */"}, {"sha": "e0c5d5b3b63d105154a1403698f7d48379b5bf0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22bd385b2b2c5e3a8b2bc1370cd576b75195d72e", "patch": "@@ -1,3 +1,8 @@\n+2003-08-28  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR optimization/5079\n+\t* g++.dg/opt/static3.C: New test.\n+\n 2003-08-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* gcc.misc-tests/gcov-10b.c: New test."}, {"sha": "00c72651be35ea10fb6a6c05c64ce27ceef3b076", "filename": "gcc/testsuite/g++.dg/opt/static3.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fstatic3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22bd385b2b2c5e3a8b2bc1370cd576b75195d72e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fstatic3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fstatic3.C?ref=22bd385b2b2c5e3a8b2bc1370cd576b75195d72e", "patch": "@@ -0,0 +1,35 @@\n+// { dg-do link }\n+\n+class Foo {\n+public:\n+  // No out-of-class definition is provided for these class members.\n+  // That's technically a violation of the standard, but no diagnostic\n+  // is required, and, as a QOI issue, we should optimize away all\n+  // references.\n+  static const int erf = 0;\n+  static const int foo = 1;\n+};\n+\n+int one()\n+{\n+  return Foo::foo;\n+}\n+\n+int two()\n+{\n+  return Foo::foo + Foo::erf;\n+}\n+\n+int three(int x)\n+{\n+  return x ? Foo::erf : Foo::foo;\n+}\n+\n+int i;\n+\n+int main ()\n+{\n+  one ();\n+  two ();\n+  three (i);\n+}"}]}