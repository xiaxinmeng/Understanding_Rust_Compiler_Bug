{"sha": "5b01f1a57cc90bcee58ccf75e6062748e1d66448", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIwMWYxYTU3Y2M5MGJjZWU1OGNjZjc1ZTYwNjI3NDhlMWQ2NjQ0OA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2019-11-25T08:59:06Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2019-11-25T08:59:06Z"}, "message": "Build double32 / long-double32 multilibs if needed.\n\ngcc/\n\tBuild double32 / long-double32 multilibs if needed.\n\tPR target/92055\n\t* config/avr/t-avr:\n\t(HAVE_DOUBLE_MULTILIB, HAVE_LONG_DOUBLE_MULTILIB): Remove vars.\n\t(HAVE_DOUBLE32, HAVE_LONG_DOUBLE32, WITH_LONG_DOUBLE)\n\t(HAVE_DOUBLE64, HAVE_LONG_DOUBLE64, WITH_DOUBLE): Set from\n\ttm_defines and pass to genmultilib.awk.\n\t* config/avr/genmultilib.awk: Use these variables to add double32\n\tand / or long-double32 multilib(s) as needed.\n\t* config/avr/driver-avr.c (avr_double_lib): Adjust comment.\n\nFrom-SVN: r278668", "tree": {"sha": "475a122d85e5d17349e4a3f4b1e275531759ec55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/475a122d85e5d17349e4a3f4b1e275531759ec55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b01f1a57cc90bcee58ccf75e6062748e1d66448", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b01f1a57cc90bcee58ccf75e6062748e1d66448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b01f1a57cc90bcee58ccf75e6062748e1d66448", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b01f1a57cc90bcee58ccf75e6062748e1d66448/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f10d2d85c90c9c649675c248cd5a99f66288f81f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f10d2d85c90c9c649675c248cd5a99f66288f81f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f10d2d85c90c9c649675c248cd5a99f66288f81f"}], "stats": {"total": 161, "additions": 121, "deletions": 40}, "files": [{"sha": "25adf2ee635febcb2b6b25a1b1b5c52db5f4aa1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b01f1a57cc90bcee58ccf75e6062748e1d66448/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b01f1a57cc90bcee58ccf75e6062748e1d66448/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b01f1a57cc90bcee58ccf75e6062748e1d66448", "patch": "@@ -1,3 +1,17 @@\n+2019-11-25  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tBuild double32 / long-double32 multilibs if needed.\n+\n+\tPR target/92055\n+\t* config/avr/t-avr:\n+\t(HAVE_DOUBLE_MULTILIB, HAVE_LONG_DOUBLE_MULTILIB): Remove vars.\n+\t(HAVE_DOUBLE32, HAVE_LONG_DOUBLE32, WITH_LONG_DOUBLE)\n+\t(HAVE_DOUBLE64, HAVE_LONG_DOUBLE64, WITH_DOUBLE): Set from\n+\ttm_defines and pass to genmultilib.awk.\n+\t* config/avr/genmultilib.awk: Use these variables to add double32\n+\tand / or long-double32 multilib(s) as needed.\n+\t* config/avr/driver-avr.c (avr_double_lib): Adjust comment.\n+\n 2019-11-25  Richard Biener  <rguenther@suse.de>\n \n \t* cfgloop.h (get_loop_exit_edges): Add extra parameter denoting"}, {"sha": "b0079544a2256efed16d7fadcd10f5340cbecf24", "filename": "gcc/config/avr/driver-avr.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b01f1a57cc90bcee58ccf75e6062748e1d66448/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b01f1a57cc90bcee58ccf75e6062748e1d66448/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fdriver-avr.c?ref=5b01f1a57cc90bcee58ccf75e6062748e1d66448", "patch": "@@ -114,10 +114,7 @@ avr_devicespecs_file (int argc, const char **argv)\n \n \n /* Re-build the -mdouble= and -mlong-double= options.  This is needed\n-   because multilib selection is based on the physical presence of an\n-   option on the command line, which is not the case for, say, when the\n-   double=64 multilib is to be selected by --with-double=64 but the user\n-   does not specify -mdouble=64 explicitly.  */\n+   because these options are not independent of each other.  */\n \n const char*\n avr_double_lib (int argc, const char **argv)"}, {"sha": "c1c82cf21d7d18668e82452102a11ac74124f41f", "filename": "gcc/config/avr/genmultilib.awk", "status": "modified", "additions": 78, "deletions": 32, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b01f1a57cc90bcee58ccf75e6062748e1d66448/gcc%2Fconfig%2Favr%2Fgenmultilib.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b01f1a57cc90bcee58ccf75e6062748e1d66448/gcc%2Fconfig%2Favr%2Fgenmultilib.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fgenmultilib.awk?ref=5b01f1a57cc90bcee58ccf75e6062748e1d66448", "patch": "@@ -38,12 +38,6 @@ BEGIN {\n     dir_rcall = \"short-calls\"\n     opt_rcall = \"mshort-calls\"\n \n-    dir_double64 = \"double64\"\n-    opt_double64 = \"mdouble=64\"\n-\n-    dir_long_double64 = \"long-double64\"\n-    opt_long_double64 = \"mlong-double=64\"\n-\n     #    awk Variable         Makefile Variable  \n     #  ------------------------------------------\n     #    m_options     <->    MULTILIB_OPTIONS\n@@ -56,8 +50,23 @@ BEGIN {\n     m_required   = \"\\nMULTILIB_REQUIRED =\"\n     m_reuse      = \"\\nMULTILIB_REUSE =\"\n \n-    have_double_multi = (HAVE_DOUBLE_MULTILIB == \"HAVE_DOUBLE_MULTILIB\")\n-    have_long_double_multi = (HAVE_LONG_DOUBLE_MULTILIB == \"HAVE_LONG_DOUBLE_MULTILIB\")\n+    have_long_double_is_double = (HAVE_LONG_DOUBLE_IS_DOUBLE \\\n+\t\t\t\t  == \"HAVE_LONG_DOUBLE_IS_DOUBLE\")\n+    have_double32 = (HAVE_DOUBLE32 == \"HAVE_DOUBLE32\")\n+    have_double64 = (HAVE_DOUBLE64 == \"HAVE_DOUBLE64\")\n+    have_long_double32 = (HAVE_LONG_DOUBLE32 == \"HAVE_LONG_DOUBLE32\")\n+    have_long_double64 = (HAVE_LONG_DOUBLE64 == \"HAVE_LONG_DOUBLE64\")\n+\n+    have_double_multi = (have_double32 && have_double64)\n+    have_long_double_multi = (! have_long_double_is_double \\\n+\t\t\t      && have_long_double32 && have_long_double64)\n+\n+    # How to switch away from the default.\n+    dir_double = \"double\"   (96 - with_double)\n+    opt_double = \"mdouble=\" (96 - with_double)\n+\n+    dir_long_double = \"long-double\"   (96 - with_long_double)\n+    opt_long_double = \"mlong-double=\" (96 - with_long_double)\n }\n \n ##################################################################\n@@ -86,6 +95,26 @@ BEGIN {\n     # The first empty line stops copy-pasting the GPL comments\n     # from this file to the generated file.\n \n+    if (comment)\n+    {\n+\tprint\n+\n+\tif (have_double_multi)\n+\t{\n+\t    print \"# dir_double = \" dir_double\n+\t    print \"# opt_double = -\" opt_double\n+\t}\n+\telse\n+\t    print \"# No multilib for double.\"\n+\n+\tif (have_long_double_multi)\n+\t{\n+\t    print \"# dir_long_double = \" dir_long_double\n+\t    print \"# opt_long_double = -\" opt_long_double\n+\t}\n+\telse\n+\t    print \"# No multilib for long double.\"\n+    }\n     comment = 0\n }\n \n@@ -145,21 +174,30 @@ BEGIN {\n \t    m_required = m_required \" \\\\\\n\\t\" opts\n \t    if (have_double_multi && have_long_double_multi)\n \t    {\n-\t\tm_required = m_required \" \\\\\\n\\t\" opts \"/\" opt_double64\n-\t\tm_required = m_required \" \\\\\\n\\t\" opts \"/\" opt_long_double64\n-\n-\t\t# -mlong-double=64 -mdouble=64 is the same as -mdouble=64,\n-\t\t# hence add a respective reuse.\n-\t\td_opts  = opts \"/\" opt_double64\n-\t\td_reuse = opts \"/\" opt_double64 \"/\" opt_long_double64\n-\t\tgsub (/=/, \".\", d_opts)\n-\t\tgsub (/=/, \".\", d_reuse)\n-\t\tm_reuse = m_reuse \" \\\\\\n\\t\" d_opts \"=\" d_reuse\n+\t\tm_required = m_required \" \\\\\\n\\t\" opts \"/\" opt_double\n+\t\tm_required = m_required \" \\\\\\n\\t\" opts \"/\" opt_long_double\n+\n+\t\t# We have only 3 different combinations because -mdouble=64\n+\t\t# implies -mlong-double=64, and -mlong-double=32 implies\n+\t\t# -mdouble=32, hence add respective reuses.  The reuse is\n+\t\t# not needed in the case with_double != with_long_double\n+\t\t# which means with_double=32 with_long_double=64 because\n+\t\t# the driver will rectify combining -mdouble=64 and\n+\t\t# -mlong-double=32.\n+\t\tif (with_double == with_long_double)\n+\t\t{\n+\t\t    d_opts = with_double == 32 ? opt_double : opt_long_double\n+\t\t    d_opts  = opts \"/\" d_opts\n+\t\t    d_reuse = opts \"/\" opt_double \"/\" opt_long_double\n+\t\t    gsub (/=/, \".\", d_opts)\n+\t\t    gsub (/=/, \".\", d_reuse)\n+\t\t    m_reuse = m_reuse \" \\\\\\n\\t\" d_opts \"=\" d_reuse\n+\t\t}\n \t    }\n \t    else if (have_double_multi)\n-\t\tm_required = m_required \" \\\\\\n\\t\" opts \"/\" opt_double64\n+\t\tm_required = m_required \" \\\\\\n\\t\" opts \"/\" opt_double\n \t    else if (have_long_double_multi)\n-\t\tm_required = m_required \" \\\\\\n\\t\" opts \"/\" opt_long_double64\n+\t\tm_required = m_required \" \\\\\\n\\t\" opts \"/\" opt_long_double\n \t}\n     }\n }\n@@ -177,26 +215,34 @@ END {\n \n     if (have_double_multi && have_long_double_multi)\n     {\n-\tprint m_options  \" \" opt_tiny \" \" opt_rcall \" \" opt_double64 \"/\" opt_long_double64\n-\tprint m_dirnames \" \" dir_tiny \" \" dir_rcall \" \" dir_double64 \" \" dir_long_double64\n-\t# Notice that the ./double64 and ./long-double64 variants cannot\n+\tprint m_options  \" \" opt_tiny \" \" opt_rcall \" \" opt_double \"/\" opt_long_double\n+\tprint m_dirnames \" \" dir_tiny \" \" dir_rcall \" \" dir_double \" \" dir_long_double\n+\t# Notice that the ./double* and ./long-double* variants cannot\n \t# be copied by t-avrlibc because the . default multilib is built\n \t# after all the others.\n-\tm_required = m_required \" \\\\\\n\\t\" opt_double64\n-\tm_required = m_required \" \\\\\\n\\t\" opt_long_double64\n-\tm_reuse = m_reuse \" \\\\\\n\\tmdouble.64=mdouble.64/mlong-double.64\"\n+\tm_required = m_required \" \\\\\\n\\t\" opt_double\n+\tm_required = m_required \" \\\\\\n\\t\" opt_long_double\n+\tif (with_double == with_long_double)\n+\t{\n+\t    d_opts  = with_double == 32 ? opt_double : opt_long_double\n+\t    d_reuse = opt_double \"/\" opt_long_double\n+\t    gsub (/=/, \".\", d_opts)\n+\t    gsub (/=/, \".\", d_reuse)\n+\t    m_reuse = m_reuse \" \\\\\\n\\t\" d_opts \"=\" d_reuse\n+\n+\t}\n     }\n     else if (have_double_multi)\n     {\n-\tprint m_options  \" \" opt_tiny \" \" opt_rcall \" \" opt_double64\n-\tprint m_dirnames \" \" dir_tiny \" \" dir_rcall \" \" dir_double64\n-\tm_required = m_required \" \\\\\\n\\t\" opt_double64\n+\tprint m_options  \" \" opt_tiny \" \" opt_rcall \" \" opt_double\n+\tprint m_dirnames \" \" dir_tiny \" \" dir_rcall \" \" dir_double\n+\tm_required = m_required \" \\\\\\n\\t\" opt_double\n     }\n     else if (have_long_double_multi)\n     {\n-\tprint m_options  \" \" opt_tiny \" \" opt_rcall \" \" opt_long_double64\n-\tprint m_dirnames \" \" dir_tiny \" \" dir_rcall \" \" dir_long_double64\n-\tm_required = m_required \" \\\\\\n\\t\" opt_long_double64\n+\tprint m_options  \" \" opt_tiny \" \" opt_rcall \" \" opt_long_double\n+\tprint m_dirnames \" \" dir_tiny \" \" dir_rcall \" \" dir_long_double\n+\tm_required = m_required \" \\\\\\n\\t\" opt_long_double\n     }\n     else\n     {"}, {"sha": "f87a5e602c12de062a5f4141a3e452b668552859", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b01f1a57cc90bcee58ccf75e6062748e1d66448/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b01f1a57cc90bcee58ccf75e6062748e1d66448/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=5b01f1a57cc90bcee58ccf75e6062748e1d66448", "patch": "@@ -16,8 +16,27 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-HAVE_DOUBLE_MULTILIB = $(findstring HAVE_DOUBLE_MULTILIB, $(tm_defines))\n-HAVE_LONG_DOUBLE_MULTILIB = $(findstring HAVE_LONG_DOUBLE_MULTILIB, $(tm_defines))\n+HAVE_DOUBLE32 = $(findstring HAVE_DOUBLE32, $(tm_defines))\n+HAVE_DOUBLE64 = $(findstring HAVE_DOUBLE64, $(tm_defines))\n+HAVE_LONG_DOUBLE32 = $(findstring HAVE_LONG_DOUBLE32, $(tm_defines))\n+HAVE_LONG_DOUBLE64 = $(findstring HAVE_LONG_DOUBLE64, $(tm_defines))\n+HAVE_LONG_DOUBLE_IS_DOUBLE = $(findstring HAVE_LONG_DOUBLE_IS_DOUBLE, $(tm_defines))\n+\n+ifeq (WITH_DOUBLE32, $(findstring WITH_DOUBLE32, $(tm_defines)))\n+WITH_DOUBLE=32\n+endif\n+\n+ifeq (WITH_DOUBLE64, $(findstring WITH_DOUBLE64, $(tm_defines)))\n+WITH_DOUBLE=64\n+endif\n+\n+ifeq (WITH_LONG_DOUBLE32, $(findstring WITH_LONG_DOUBLE32, $(tm_defines)))\n+WITH_LONG_DOUBLE=32\n+endif\n+\n+ifeq (WITH_LONG_DOUBLE64, $(findstring WITH_LONG_DOUBLE64, $(tm_defines)))\n+WITH_LONG_DOUBLE=64\n+endif\n \n PASSES_EXTRA += $(srcdir)/config/avr/avr-passes.def\n \n@@ -101,8 +120,13 @@ multilib.h Makefile s-mlib: t-multilib-avr\n \n t-multilib-avr: $(srcdir)/config/avr/genmultilib.awk \\\n \t\t\t\t $(AVR_MCUS)\n-\t$(AWK)\t-v HAVE_DOUBLE_MULTILIB=$(HAVE_DOUBLE_MULTILIB) \\\n-\t\t-v HAVE_LONG_DOUBLE_MULTILIB=$(HAVE_LONG_DOUBLE_MULTILIB) \\\n+\t$(AWK)\t-v HAVE_LONG_DOUBLE_IS_DOUBLE=$(HAVE_LONG_DOUBLE_IS_DOUBLE) \\\n+\t\t-v HAVE_DOUBLE32=$(HAVE_DOUBLE32) \t\t\t\\\n+\t\t-v HAVE_DOUBLE64=$(HAVE_DOUBLE64) \t\t\t\\\n+\t\t-v HAVE_LONG_DOUBLE32=$(HAVE_LONG_DOUBLE32)\t\t\\\n+\t\t-v HAVE_LONG_DOUBLE64=$(HAVE_LONG_DOUBLE64) \t\t\\\n+\t\t-v with_double=$(WITH_DOUBLE) \t\t\t\t\\\n+\t\t-v with_long_double=$(WITH_LONG_DOUBLE)\t\t\t\\\n \t\t-f $< $< $(AVR_MCUS) > $@\n \n include t-multilib-avr"}]}