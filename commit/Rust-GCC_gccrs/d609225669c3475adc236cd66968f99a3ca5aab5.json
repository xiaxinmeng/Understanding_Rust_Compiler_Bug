{"sha": "d609225669c3475adc236cd66968f99a3ca5aab5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYwOTIyNTY2OWMzNDc1YWRjMjM2Y2Q2Njk2OGY5OWEzY2E1YWFiNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-09-24T11:23:35Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-09-24T11:23:35Z"}, "message": "Guard memory block allocation.\n\n2018-09-24  Martin Liska  <mliska@suse.cz>\n\n\t* memory-block.h (memory_block_pool::release): Annotate with\n\tvalgrind that the memory is not accessible.\n\nFrom-SVN: r264529", "tree": {"sha": "e48bdb59dc6e0acedfd7907e651de1669461318d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e48bdb59dc6e0acedfd7907e651de1669461318d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d609225669c3475adc236cd66968f99a3ca5aab5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d609225669c3475adc236cd66968f99a3ca5aab5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d609225669c3475adc236cd66968f99a3ca5aab5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d609225669c3475adc236cd66968f99a3ca5aab5/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf9f9292131058faa03177b7a0d6f1c265eb29f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf9f9292131058faa03177b7a0d6f1c265eb29f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf9f9292131058faa03177b7a0d6f1c265eb29f2"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "de6973aa3384ff84e01c97ebb6f5ebe404d3343f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d609225669c3475adc236cd66968f99a3ca5aab5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d609225669c3475adc236cd66968f99a3ca5aab5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d609225669c3475adc236cd66968f99a3ca5aab5", "patch": "@@ -1,3 +1,8 @@\n+2018-09-24  Martin Liska  <mliska@suse.cz>\n+\n+\t* memory-block.h (memory_block_pool::release): Annotate with\n+\tvalgrind that the memory is not accessible.\n+\n 2018-09-24  Martin Liska  <mliska@suse.cz>\n \n \tPR sanitizer/85774"}, {"sha": "c045d2e95ab2d789ace30d407f876bdfdb5457e0", "filename": "gcc/memory-block.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d609225669c3475adc236cd66968f99a3ca5aab5/gcc%2Fmemory-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d609225669c3475adc236cd66968f99a3ca5aab5/gcc%2Fmemory-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmemory-block.h?ref=d609225669c3475adc236cd66968f99a3ca5aab5", "patch": "@@ -68,6 +68,11 @@ memory_block_pool::release (void *uncast_block)\n   block_list *block = new (uncast_block) block_list;\n   block->m_next = instance.m_blocks;\n   instance.m_blocks = block;\n+\n+  VALGRIND_DISCARD (VALGRIND_MAKE_MEM_NOACCESS ((char *)uncast_block\n+\t\t\t\t\t\t+ sizeof (block_list),\n+\t\t\t\t\t\tblock_size\n+\t\t\t\t\t\t- sizeof (block_list)));\n }\n \n extern void *mempool_obstack_chunk_alloc (size_t) ATTRIBUTE_MALLOC;"}]}