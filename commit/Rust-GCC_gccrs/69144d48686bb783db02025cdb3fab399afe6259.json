{"sha": "69144d48686bb783db02025cdb3fab399afe6259", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkxNDRkNDg2ODZiYjc4M2RiMDIwMjVjZGIzZmFiMzk5YWZlNjI1OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-10-31T23:15:52Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-27T09:15:41Z"}, "message": "[Ada] Small tweaks to new implementation of Set_Image_Fixed\n\ngcc/ada/\n\n\t* libgnat/s-imagef.adb (Set_Image_Fixed): Pass the full value\n\tof the quotient to Set_Image_Integer during the first round and\n\tadjust the handling of the minus sign.", "tree": {"sha": "bd894795aac56c0045c13a7e85bae0ee0812dc71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd894795aac56c0045c13a7e85bae0ee0812dc71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69144d48686bb783db02025cdb3fab399afe6259", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69144d48686bb783db02025cdb3fab399afe6259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69144d48686bb783db02025cdb3fab399afe6259", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69144d48686bb783db02025cdb3fab399afe6259/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9df8679166e3dde5bdc45b5ed3289ffcab1b20f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9df8679166e3dde5bdc45b5ed3289ffcab1b20f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9df8679166e3dde5bdc45b5ed3289ffcab1b20f1"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "2b5a54520a2628da2e187b6724f9f88f97692c74", "filename": "gcc/ada/libgnat/s-imagef.adb", "status": "modified", "additions": 31, "deletions": 14, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69144d48686bb783db02025cdb3fab399afe6259/gcc%2Fada%2Flibgnat%2Fs-imagef.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69144d48686bb783db02025cdb3fab399afe6259/gcc%2Fada%2Flibgnat%2Fs-imagef.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-imagef.adb?ref=69144d48686bb783db02025cdb3fab399afe6259", "patch": "@@ -208,15 +208,15 @@ package body System.Image_F is\n       --  Number of rounds of scaled divide to be performed\n \n       Q : Int;\n-      --  Quotient of the scaled divide in this round. Only the first round\n-      --  may yield more than Maxdigs digits. The sign is not significant.\n+      --  Quotient of the scaled divide in this round. Only the first round may\n+      --  yield more than Maxdigs digits and has a significant sign.\n \n       Buf : String (1 .. Maxdigs);\n       Len : Natural;\n       --  Buffer for the image of the quotient\n \n-      Digs  : String (1 .. N * Maxdigs + 1);\n-      Ndigs : Natural := 0;\n+      Digs  : String (1 .. 2 + N * Maxdigs);\n+      Ndigs : Natural;\n       --  Concatenated image of the successive quotients\n \n       Scale : Integer := 0;\n@@ -227,10 +227,14 @@ package body System.Image_F is\n       --  First two operands of the scaled divide\n \n    begin\n-      --  Set the first character like Image, either minus or space\n+      --  Set the first character like Image\n \n-      Digs (1) := (if V < 0 then '-' else ' ');\n-      Ndigs := 1;\n+      if V >= 0 then\n+         Digs (1) := ' ';\n+         Ndigs := 1;\n+      else\n+         Ndigs := 0;\n+      end if;\n \n       for J in 1 .. N loop\n          exit when XX = 0;\n@@ -239,7 +243,7 @@ package body System.Image_F is\n \n          if J = 1 then\n             if Q /= 0 then\n-               Set_Image_Integer (abs Q, Digs, Ndigs);\n+               Set_Image_Integer (Q, Digs, Ndigs);\n             end if;\n \n             Scale := Scale + D;\n@@ -249,16 +253,29 @@ package body System.Image_F is\n             YY := 10**Maxdigs;\n \n          else\n+            pragma Assert (-10**Maxdigs < Q and then Q < 10**Maxdigs);\n+\n             Len := 0;\n             Set_Image_Integer (abs Q, Buf, Len);\n \n-            if Ndigs = 1 then\n-               Digs (2 .. Len + 1) := Buf (1 .. Len);\n-               Ndigs := Len + 1;\n+            pragma Assert (1 <= Len and then Len <= Maxdigs);\n \n-            else\n-               --  Pad the output with zeroes up to Maxdigs\n+            --  If no character but the space has been written, write the\n+            --  minus if need be, since Set_Image_Integer did not do it.\n \n+            if Ndigs <= 1 then\n+               if Q /= 0 then\n+                  if Ndigs = 0 then\n+                     Digs (1) := '-';\n+                  end if;\n+\n+                  Digs (2 .. Len + 1) := Buf (1 .. Len);\n+                  Ndigs := Len + 1;\n+               end if;\n+\n+            --  Or else pad the output with zeroes up to Maxdigs\n+\n+            else\n                for K in 1 .. Maxdigs - Len loop\n                   Digs (Ndigs + K) := '0';\n                end loop;\n@@ -276,7 +293,7 @@ package body System.Image_F is\n \n       --  If no digit was output, this is zero\n \n-      if Ndigs = 1 then\n+      if Ndigs <= 1 then\n          Digs (1 .. 2) := \" 0\";\n          Ndigs := 2;\n       end if;"}]}