{"sha": "4b2db8077136d2f8b5a0db026e6161810be327b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIyZGI4MDc3MTM2ZDJmOGI1YTBkYjAyNmU2MTYxODEwYmUzMjdiMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-22T10:10:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-22T12:59:32Z"}, "message": "libstdc++: Remove #error from <semaphore> implementation [PR 100179]\n\nThis removes the #error from <bits/semaphore_base.h> for the case where\nneither __atomic_semaphore nor __platform_semaphore is defined.\n\nAlso rename the _GLIBCXX_REQUIRE_POSIX_SEMAPHORE macro to\n_GLIBCXX_USE_POSIX_SEMAPHORE for consistency with the similar\n_GLIBCXX_USE_CXX11_ABI macro that can be used to request an alternative\n(ABI-changing) implementation.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/100179\n\t* include/bits/semaphore_base.h: Remove #error.\n\t* include/std/semaphore: Do not define anything unless one of\n\tthe implementations is available.", "tree": {"sha": "5c86688c28a7b9b509ff44be0b612dfcb4a68ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c86688c28a7b9b509ff44be0b612dfcb4a68ae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b2db8077136d2f8b5a0db026e6161810be327b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b2db8077136d2f8b5a0db026e6161810be327b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b2db8077136d2f8b5a0db026e6161810be327b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b2db8077136d2f8b5a0db026e6161810be327b3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d44d8ed6b4e6fb2d0cf7566214e2e8281dd44cf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44d8ed6b4e6fb2d0cf7566214e2e8281dd44cf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d44d8ed6b4e6fb2d0cf7566214e2e8281dd44cf0"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "4948f0fd0bc0e433716796d589d0eb1d5cbf766f", "filename": "libstdc++-v3/include/bits/semaphore_base.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2db8077136d2f8b5a0db026e6161810be327b3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsemaphore_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2db8077136d2f8b5a0db026e6161810be327b3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsemaphore_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fsemaphore_base.h?ref=4b2db8077136d2f8b5a0db026e6161810be327b3", "patch": "@@ -263,14 +263,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   };\n #endif // __cpp_lib_atomic_wait\n \n-// Note: the _GLIBCXX_REQUIRE_POSIX_SEMAPHORE macro can be used to force the\n+// Note: the _GLIBCXX_USE_POSIX_SEMAPHORE macro can be used to force the\n // use of Posix semaphores (sem_t). Doing so however, alters the ABI.\n-#if defined __cpp_lib_atomic_wait && !_GLIBCXX_REQUIRE_POSIX_SEMAPHORE\n+#if defined __cpp_lib_atomic_wait && !_GLIBCXX_USE_POSIX_SEMAPHORE\n   using __semaphore_impl = __atomic_semaphore;\n #elif _GLIBCXX_HAVE_POSIX_SEMAPHORE\n   using __semaphore_impl = __platform_semaphore;\n-#else\n-#  error \"No suitable semaphore implementation available\"\n #endif\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "52addca742c4eabae2f5ac1f1cd99b5536bab2b8", "filename": "libstdc++-v3/include/std/semaphore", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2db8077136d2f8b5a0db026e6161810be327b3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsemaphore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2db8077136d2f8b5a0db026e6161810be327b3/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsemaphore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsemaphore?ref=4b2db8077136d2f8b5a0db026e6161810be327b3", "patch": "@@ -34,6 +34,7 @@\n #if __cplusplus > 201703L\n #include <bits/semaphore_base.h>\n \n+#if __cpp_lib_atomic_wait || _GLIBCXX_HAVE_POSIX_SEMAPHORE\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -89,5 +90,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n+#endif // cpp_lib_atomic_wait || _GLIBCXX_HAVE_POSIX_SEMAPHORE\n #endif // C++20\n #endif // _GLIBCXX_SEMAPHORE"}]}