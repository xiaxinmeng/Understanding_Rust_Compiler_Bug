{"sha": "0a6b05234a625802bb1f75ee66e61b404da20434", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE2YjA1MjM0YTYyNTgwMmJiMWY3NWVlNjZlNjFiNDA0ZGEyMDQzNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-09-01T15:56:13Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-09-01T15:56:13Z"}, "message": "ipa-inline-analysis.c (param_change_prob): Get to the base object first in all cases.\n\n\t* ipa-inline-analysis.c (param_change_prob): Get to the base object\n\tfirst in all cases.\n\nFrom-SVN: r239943", "tree": {"sha": "ad1c9b7f642244178757ab66921230a45896508c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad1c9b7f642244178757ab66921230a45896508c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a6b05234a625802bb1f75ee66e61b404da20434", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a6b05234a625802bb1f75ee66e61b404da20434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a6b05234a625802bb1f75ee66e61b404da20434", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a6b05234a625802bb1f75ee66e61b404da20434/comments", "author": null, "committer": null, "parents": [{"sha": "d87a85c67b9f4e424c9660753429e8252d265ee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d87a85c67b9f4e424c9660753429e8252d265ee3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d87a85c67b9f4e424c9660753429e8252d265ee3"}], "stats": {"total": 70, "additions": 60, "deletions": 10}, "files": [{"sha": "223cf33121f92c108bc65c51e0fb17f8ac6955bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6b05234a625802bb1f75ee66e61b404da20434/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6b05234a625802bb1f75ee66e61b404da20434/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a6b05234a625802bb1f75ee66e61b404da20434", "patch": "@@ -1,3 +1,8 @@\n+2016-09-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* ipa-inline-analysis.c (param_change_prob): Get to the base object\n+\tfirst in all cases.\n+\n 2016-09-01  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (*restore_gpregs_<mode>_r11,"}, {"sha": "132779d2621f5548afac45453bf96e1ad6a49d8e", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6b05234a625802bb1f75ee66e61b404da20434/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6b05234a625802bb1f75ee66e61b404da20434/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=0a6b05234a625802bb1f75ee66e61b404da20434", "patch": "@@ -2183,28 +2183,33 @@ param_change_prob (gimple *stmt, int i)\n {\n   tree op = gimple_call_arg (stmt, i);\n   basic_block bb = gimple_bb (stmt);\n-  tree base;\n \n-  /* Global invariants neve change.  */\n-  if (is_gimple_min_invariant (op))\n+  if (TREE_CODE (op) == WITH_SIZE_EXPR)\n+    op = TREE_OPERAND (op, 0);\n+\n+  tree base = get_base_address (op);\n+\n+  /* Global invariants never change.  */\n+  if (is_gimple_min_invariant (base))\n     return 0;\n+\n   /* We would have to do non-trivial analysis to really work out what\n      is the probability of value to change (i.e. when init statement\n      is in a sibling loop of the call). \n \n      We do an conservative estimate: when call is executed N times more often\n      than the statement defining value, we take the frequency 1/N.  */\n-  if (TREE_CODE (op) == SSA_NAME)\n+  if (TREE_CODE (base) == SSA_NAME)\n     {\n       int init_freq;\n \n       if (!bb->frequency)\n \treturn REG_BR_PROB_BASE;\n \n-      if (SSA_NAME_IS_DEFAULT_DEF (op))\n+      if (SSA_NAME_IS_DEFAULT_DEF (base))\n \tinit_freq = ENTRY_BLOCK_PTR_FOR_FN (cfun)->frequency;\n       else\n-\tinit_freq = gimple_bb (SSA_NAME_DEF_STMT (op))->frequency;\n+\tinit_freq = gimple_bb (SSA_NAME_DEF_STMT (base))->frequency;\n \n       if (!init_freq)\n \tinit_freq = 1;\n@@ -2213,9 +2218,7 @@ param_change_prob (gimple *stmt, int i)\n       else\n \treturn REG_BR_PROB_BASE;\n     }\n-\n-  base = get_base_address (op);\n-  if (base)\n+  else\n     {\n       ao_ref refd;\n       int max;\n@@ -2256,7 +2259,6 @@ param_change_prob (gimple *stmt, int i)\n       else\n \treturn REG_BR_PROB_BASE;\n     }\n-  return REG_BR_PROB_BASE;\n }\n \n /* Find whether a basic block BB is the final block of a (half) diamond CFG"}, {"sha": "3f6ff1dcef47e4dc315871967974a000991e464a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6b05234a625802bb1f75ee66e61b404da20434/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6b05234a625802bb1f75ee66e61b404da20434/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0a6b05234a625802bb1f75ee66e61b404da20434", "patch": "@@ -1,3 +1,8 @@\n+2016-09-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt58.adb: New test.\n+\t* gnat.dg/opt58_pkg.ads: New helper.\n+\n 2016-09-01  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/77436"}, {"sha": "ac39cc06056e029bc745411c6a7f97dfc3c192f7", "filename": "gcc/testsuite/gnat.dg/opt58.adb", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6b05234a625802bb1f75ee66e61b404da20434/gcc%2Ftestsuite%2Fgnat.dg%2Fopt58.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6b05234a625802bb1f75ee66e61b404da20434/gcc%2Ftestsuite%2Fgnat.dg%2Fopt58.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt58.adb?ref=0a6b05234a625802bb1f75ee66e61b404da20434", "patch": "@@ -0,0 +1,19 @@\n+-- { dg-do compile }\r\n+-- { dg-options \"-O\" }\r\n+\r\n+with Unchecked_Conversion;\r\n+with System; use System;\r\n+with Opt58_Pkg; use Opt58_Pkg;\r\n+\r\n+procedure Opt58 is\r\n+\r\n+   function Convert is new Unchecked_Conversion (Integer, Rec);\r\n+\r\n+   Dword : Integer := 0;\r\n+   I : Small_Int := F1 (Convert (Dword));\r\n+\r\n+begin\r\n+   if F2 (Null_Address, I = 0) then\r\n+      null;\r\n+   end if;\r\n+end Opt58;\r"}, {"sha": "9cb7f3a2540f65ee7ed024aca367bc61662f2d55", "filename": "gcc/testsuite/gnat.dg/opt58_pkg.ads", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6b05234a625802bb1f75ee66e61b404da20434/gcc%2Ftestsuite%2Fgnat.dg%2Fopt58_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6b05234a625802bb1f75ee66e61b404da20434/gcc%2Ftestsuite%2Fgnat.dg%2Fopt58_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt58_pkg.ads?ref=0a6b05234a625802bb1f75ee66e61b404da20434", "patch": "@@ -0,0 +1,19 @@\n+with System; use System;\r\n+\r\n+package Opt58_Pkg is\r\n+\r\n+   pragma Pure (Opt58_Pkg);\r\n+\r\n+   type Small_Int is range 0 .. 255;\r\n+\r\n+   type Rec is record\r\n+     D1, D2, D3, D4 : Small_Int;\r\n+   end record;\r\n+   pragma Pack (Rec);\r\n+   for Rec'Size use 32;\r\n+\r\n+   function F1 (R : Rec) return Small_Int;\r\n+\r\n+   function F2 (A : Address; B : Boolean) return Boolean;\r\n+\r\n+end Opt58_Pkg;\r"}]}