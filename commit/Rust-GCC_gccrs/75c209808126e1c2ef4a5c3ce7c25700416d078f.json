{"sha": "75c209808126e1c2ef4a5c3ce7c25700416d078f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVjMjA5ODA4MTI2ZTFjMmVmNGE1YzNjZTdjMjU3MDA0MTZkMDc4Zg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-08-01T21:51:13Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-08-01T21:51:13Z"}, "message": "system.h: Poison ASM_SIMPLIFY_DWARF_ADDR.\n\n        * system.h: Poison ASM_SIMPLIFY_DWARF_ADDR.\n\n        * varasm.c (lookup_constant_def): New function.\n        * rtl.h (lookup_constant_def): Declare it.\n        * dwarf2out.c (loc_descriptor_from_tree): Use it.\n        Use targetm.delegitimize_address, not ASM_SIMPLIFY_DWARF_ADDR.\n\nFrom-SVN: r70072", "tree": {"sha": "09777e2a3ebda4ff012aec58bf5140c64a6bbe37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09777e2a3ebda4ff012aec58bf5140c64a6bbe37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75c209808126e1c2ef4a5c3ce7c25700416d078f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c209808126e1c2ef4a5c3ce7c25700416d078f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75c209808126e1c2ef4a5c3ce7c25700416d078f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c209808126e1c2ef4a5c3ce7c25700416d078f/comments", "author": null, "committer": null, "parents": [{"sha": "c197e3066130fb10da0c2f58a3a7fff3ab707487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c197e3066130fb10da0c2f58a3a7fff3ab707487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c197e3066130fb10da0c2f58a3a7fff3ab707487"}], "stats": {"total": 50, "additions": 39, "deletions": 11}, "files": [{"sha": "a6bbe7e4d03fa38d9cee1acfba369b61c97087d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c209808126e1c2ef4a5c3ce7c25700416d078f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c209808126e1c2ef4a5c3ce7c25700416d078f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75c209808126e1c2ef4a5c3ce7c25700416d078f", "patch": "@@ -1,3 +1,12 @@\n+2003-08-01  Richard Henderson  <rth@redhat.com>\n+\n+\t* system.h: Poison ASM_SIMPLIFY_DWARF_ADDR.\n+\n+\t* varasm.c (lookup_constant_def): New function.\n+\t* rtl.h (lookup_constant_def): Declare it.\n+\t* dwarf2out.c (loc_descriptor_from_tree): Use it.  \n+\tUse targetm.delegitimize_address, not ASM_SIMPLIFY_DWARF_ADDR.\n+\n 2003-08-01  Zack Weinberg  <zack@codesourcery.com>\n \n \t* c-decl.c (gettags, pushdecl_function_level): Delete."}, {"sha": "48f0f92c08c5cc10a53362a7adfa75d83afc09e2", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c209808126e1c2ef4a5c3ce7c25700416d078f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c209808126e1c2ef4a5c3ce7c25700416d078f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=75c209808126e1c2ef4a5c3ce7c25700416d078f", "patch": "@@ -8560,17 +8560,19 @@ loc_descriptor_from_tree (tree loc, int addressp)\n \n     case CONSTRUCTOR:\n       {\n-\t/* Get an RTL for this, which will may have the effect of outputting\n-\t   it.  This may violates the principle of not having -g affect\n-\t   the generated code, but it's in the data segment and it's hard\n-\t   to see a case where it won't already have been output.  */\n-\trtx rtl = output_constant_def (loc, 0);\n-\n-#ifdef ASM_SIMPLIFY_DWARF_ADDR\n-\trtl = ASM_SIMPLIFY_DWARF_ADDR (rtl);\n-#endif\n+\t/* Get an RTL for this, if something has been emitted.  */\n+\trtx rtl = lookup_constant_def (loc);\n+\tenum machine_mode mode;\n+\n+\tif (GET_CODE (rtl) != MEM)\n+\t  return 0;\n+\tmode = GET_MODE (rtl);\n+\trtl = XEXP (rtl, 0);\n+\n+\trtl = (*targetm.delegitimize_address) (rtl);\n+\n \tindirect_p = 1;\n-\tret = mem_loc_descriptor (XEXP (rtl, 0), GET_MODE (rtl));\n+\tret = mem_loc_descriptor (rtl, mode);\n \tbreak;\n       }\n "}, {"sha": "80b9e31e797654890f47fc1152f6baf2aeb2d06e", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c209808126e1c2ef4a5c3ce7c25700416d078f/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c209808126e1c2ef4a5c3ce7c25700416d078f/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=75c209808126e1c2ef4a5c3ce7c25700416d078f", "patch": "@@ -1911,6 +1911,7 @@ extern rtx gen_lowpart_SUBREG (enum machine_mode, rtx);\n #define INVALID_REGNUM\t\t\t(~(unsigned int) 0)\n \n extern rtx output_constant_def (tree, int);\n+extern rtx lookup_constant_def (tree);\n \n /* Called from integrate.c when a deferred constant is inlined.  */\n extern void notice_rtl_inlining_of_deferred_constant (void);"}, {"sha": "a0117c579be288593801b6148525644849e27a9b", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c209808126e1c2ef4a5c3ce7c25700416d078f/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c209808126e1c2ef4a5c3ce7c25700416d078f/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=75c209808126e1c2ef4a5c3ce7c25700416d078f", "patch": "@@ -586,7 +586,8 @@ typedef char _Bool;\n \tWCHAR_UNSIGNED UNIQUE_SECTION SELECT_SECTION SELECT_RTX_SECTION\t\\\n \tENCODE_SECTION_INFO STRIP_NAME_ENCODING ASM_GLOBALIZE_LABEL\t\\\n \tASM_OUTPUT_MI_THUNK CONST_COSTS RTX_COSTS DEFAULT_RTX_COSTS\t\\\n-\tADDRESS_COST MACHINE_DEPENDENT_REORG ASM_FILE_START ASM_FILE_END\n+\tADDRESS_COST MACHINE_DEPENDENT_REORG ASM_FILE_START ASM_FILE_END \\\n+\tASM_SIMPLIFY_DWARF_ADDR\n \n /* Other obsolete target macros, or macros that used to be in target\n    headers and were not used, and may be obsolete or may never have"}, {"sha": "512bc33ba89ec8f610128d73fe56854436933143", "filename": "gcc/varasm.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c209808126e1c2ef4a5c3ce7c25700416d078f/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c209808126e1c2ef4a5c3ce7c25700416d078f/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=75c209808126e1c2ef4a5c3ce7c25700416d078f", "patch": "@@ -2596,6 +2596,21 @@ notice_rtl_inlining_of_deferred_constant (void)\n {\n   n_deferred_constants++;\n }\n+\n+/* Look up EXP in the table of constant descriptors.  Return the rtl\n+   if it has been emitted, else null.  */\n+\n+rtx\n+lookup_constant_def (tree exp)\n+{\n+  struct constant_descriptor_tree *desc;\n+  struct constant_descriptor_tree key;\n+\n+  key.value = exp;\n+  desc = htab_find (const_desc_htab, &key);\n+\n+  return (desc ? desc->rtl : NULL_RTX);\n+}\n \f\n /* Used in the hash tables to avoid outputting the same constant\n    twice.  Unlike 'struct constant_descriptor_tree', RTX constants"}]}