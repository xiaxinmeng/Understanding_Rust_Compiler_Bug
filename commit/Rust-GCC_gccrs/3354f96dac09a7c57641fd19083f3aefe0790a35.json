{"sha": "3354f96dac09a7c57641fd19083f3aefe0790a35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM1NGY5NmRhYzA5YTdjNTc2NDFmZDE5MDgzZjNhZWZlMDc5MGEzNQ==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-04-13T18:03:09Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-04-13T18:03:09Z"}, "message": "sfn_scan.adb, [...]: Fix comment typos.\n\ngcc/ada/\n\t* sfn_scan.adb, sfn_scan.ads, sinfo.ads,\n\tsinput-d.ads, sinput-l.adb, sinput-l.ads, sinput.ads,\n\tsnames.ads, sprint.adb, stand.ads, stringt.ads,\n\tstyleg.adb, styleg.ads, stylesw.adb, stylesw.ads,\n\tswitch.ads, sysdep.c, table.adb, table.ads,\n\ttargparm.ads, tb-gcc.c, tbuild.ads, tracebak.c,\n\ttrans.c, tree_io.adb, treepr.adb, types.adb, types.ads,\n\tuintp.adb, uintp.ads, utils.c, utils2.c, validsw.ads,\n\tvms_conv.adb, vms_conv.ads, vms_data.ads, widechar.adb,\n\twidechar.ads, xeinfo.adb, xgnatugn.adb, xr_tabls.adb,\n\txr_tabls.ads, xref_lib.adb, xref_lib.ads, xsinfo.adb:\n\tFix comment typos.\n\nFrom-SVN: r134243", "tree": {"sha": "a0f7f9ee4024602fc581b4936e4483304cea1097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0f7f9ee4024602fc581b4936e4483304cea1097"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3354f96dac09a7c57641fd19083f3aefe0790a35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3354f96dac09a7c57641fd19083f3aefe0790a35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3354f96dac09a7c57641fd19083f3aefe0790a35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3354f96dac09a7c57641fd19083f3aefe0790a35/comments", "author": null, "committer": null, "parents": [{"sha": "f3d57416230c94a56d89bb6119c47d46f68bc4e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3d57416230c94a56d89bb6119c47d46f68bc4e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3d57416230c94a56d89bb6119c47d46f68bc4e6"}], "stats": {"total": 397, "additions": 206, "deletions": 191}, "files": [{"sha": "b6f61398b4079b4be6ddbccd1c466c1ff5b97bff", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -1,5 +1,18 @@\n 2008-04-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n+\t* sfn_scan.adb, sfn_scan.ads, sinfo.ads,\n+\tsinput-d.ads, sinput-l.adb, sinput-l.ads, sinput.ads,\n+\tsnames.ads, sprint.adb, stand.ads, stringt.ads,\n+\tstyleg.adb, styleg.ads, stylesw.adb, stylesw.ads,\n+\tswitch.ads, sysdep.c, table.adb, table.ads,\n+\ttargparm.ads, tb-gcc.c, tbuild.ads, tracebak.c,\n+\ttrans.c, tree_io.adb, treepr.adb, types.adb, types.ads,\n+\tuintp.adb, uintp.ads, utils.c, utils2.c, validsw.ads,\n+\tvms_conv.adb, vms_conv.ads, vms_data.ads, widechar.adb,\n+\twidechar.ads, xeinfo.adb, xgnatugn.adb, xr_tabls.adb,\n+\txr_tabls.ads, xref_lib.adb, xref_lib.ads, xsinfo.adb:\n+\tFix comment typos.\n+\n \t* sem_ch10.adb, sem_ch10.ads,\n \tsem_ch12.adb, sem_ch12.ads, sem_ch13.adb, sem_ch13.ads,\n \tsem_ch3.adb, sem_ch4.adb, sem_ch5.adb, sem_ch6.adb,"}, {"sha": "538fb5dde8e429c3e9aed9842a7fa4ff4e4bcddf", "filename": "gcc/ada/sfn_scan.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsfn_scan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsfn_scan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsfn_scan.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,7 +40,7 @@ package body SFN_Scan is\n \n    EOF : constant Character := ASCII.SUB;\n    --  The character SUB (16#1A#) is used in DOS and other systems derived\n-   --  from DOS (OS/2, NT etc) to signal the end of a text file. If this\n+   --  from DOS (OS/2, NT etc.) to signal the end of a text file. If this\n    --  character appears as the last character of a file scanned by a call\n    --  to Scan_SFN_Pragmas, then it is ignored, otherwise it is treated as\n    --  an illegal character.\n@@ -601,7 +601,7 @@ package body SFN_Scan is\n                end if;\n             end loop Skip_Loop;\n \n-            --  We successfuly skipped to semicolon, so skip past it\n+            --  We successfully skipped to semicolon, so skip past it\n \n             P := P + 1;\n          end if;"}, {"sha": "bc9cbcaa5556a1b97180a3002f821b0c55ba5f91", "filename": "gcc/ada/sfn_scan.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsfn_scan.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsfn_scan.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsfn_scan.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,12 +29,12 @@\n --  overhead of the full compiler scanner and parser.\n \n --  Note that neither the package spec, nor the package body, of this\n---  unit contains any with statements at all. This is a compeltely\n+--  unit contains any with statements at all. This is a completely\n --  independent package, suitable for incorporation into tools that do\n --  not access any other units in the GNAT compiler or tools sources.\n \n --  This package is NOT task safe, so multiple tasks that may call the\n---  Scan_SFN_Pragmas procedure at the same time are responsibible for\n+--  Scan_SFN_Pragmas procedure at the same time are responsible for\n --  avoiding such multiple calls by appropriate synchronization.\n \n package SFN_Scan is\n@@ -91,6 +91,6 @@ package SFN_Scan is\n    --  that includes only pragmas and comments. It does not do a full\n    --  syntax correctness scan by any means, but if it does find anything\n    --  that it can tell is wrong it will immediately raise the exception\n-   --  to indicate the aproximate location of the error\n+   --  to indicate the approximate location of the error\n \n end SFN_Scan;"}, {"sha": "bcf4eb8a49b48310133f3ca18eb0a14e813608e2", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -384,7 +384,7 @@ package Sinfo is\n \n    --  In the following node definitions, all fields, both syntactic and\n    --  semantic, are documented. The one exception is in the case of entities\n-   --  (defining indentifiers, character literals and operator symbols), where\n+   --  (defining identifiers, character literals and operator symbols), where\n    --  the usage of the fields depends on the entity kind. Entity fields are\n    --  fully documented in the separate package Einfo.\n \n@@ -525,7 +525,7 @@ package Sinfo is\n    --    Present in N_Freeze_Entity nodes for Incomplete or private types.\n    --    Contains the list of access types which may require specific treatment\n    --    when the nature of the type completion is completely known. An example\n-   --    of such treatement is the generation of the associated_final_chain.\n+   --    of such treatment is the generation of the associated_final_chain.\n \n    --  Actions (List1-Sem)\n    --    This field contains a sequence of actions that are associated with the\n@@ -592,7 +592,7 @@ package Sinfo is\n    --    that the associated object can be modified, even if this would not\n    --    normally be permissible (either by direct assignment, or by being\n    --    passed as an out or in-out parameter). This is used by the expander\n-   --    for a number of purposes, including initialzation of constants and\n+   --    for a number of purposes, including initialization of constants and\n    --    limited type objects (such as tasks), setting discriminant fields,\n    --    setting tag values, etc. N_Object_Declaration nodes also have this\n    --    flag defined. Here it is used to indicate that an initialization\n@@ -747,7 +747,7 @@ package Sinfo is\n \n    --  Corresponding_Stub (Node3-Sem)\n    --    This field is present in an N_Subunit node. It holds the node in\n-   --    the parent unit that is the stub declaration for the subunit. it is\n+   --    the parent unit that is the stub declaration for the subunit. It is\n    --    set when analysis of the stub forces loading of the proper body. If\n    --    expansion of the proper body creates new declarative nodes, they are\n    --    inserted at the point of the corresponding_stub.\n@@ -1142,7 +1142,7 @@ package Sinfo is\n    --  Includes_Infinities (Flag11-Sem)\n    --    This flag is present in N_Range nodes. It is set for the range of\n    --    unconstrained float types defined in Standard, which include not only\n-   --    the given range of values, but also legtitimately can include infinite\n+   --    the given range of values, but also legitimately can include infinite\n    --    values. This flag is false for any float type for which an explicit\n    --    range is given by the programmer, even if that range is identical to\n    --    the range for Float.\n@@ -1191,7 +1191,7 @@ package Sinfo is\n    --    that the reference occurs within a discriminant check. The\n    --    significance is that optimizations based on assuming that the\n    --    discriminant check has a correct value cannot be performed in this\n-   --    case (or the disriminant check may be optimized away!)\n+   --    case (or the discriminant check may be optimized away!)\n \n    --  Is_Machine_Number (Flag11-Sem)\n    --    This flag is set in an N_Real_Literal node to indicate that the value\n@@ -1211,7 +1211,7 @@ package Sinfo is\n \n    --  Is_Power_Of_2_For_Shift (Flag13-Sem)\n    --    A flag present only in N_Op_Expon nodes. It is set when the\n-   --    exponentiation is of the forma 2 ** N, where the type of N is an\n+   --    exponentiation is of the form 2 ** N, where the type of N is an\n    --    unsigned integral subtype whose size does not exceed the size of\n    --    Standard_Integer (i.e. a type that can be safely converted to\n    --    Natural), and the exponentiation appears as the right operand of an\n@@ -1223,7 +1223,7 @@ package Sinfo is\n \n    --  Is_Protected_Subprogram_Body (Flag7-Sem)\n    --    A flag set in a Subprogram_Body block to indicate that it is the\n-   --    implemenation of a protected subprogram. Such a body needs cleanup\n+   --    implementation of a protected subprogram. Such a body needs cleanup\n    --    handler to make sure that the associated protected object is unlocked\n    --    when the subprogram completes.\n \n@@ -1244,7 +1244,7 @@ package Sinfo is\n    --    A flag set in a Block_Statement node to indicate that it is the\n    --    expansion of a task allocator, or the allocator of an object\n    --    containing tasks. Such a block requires a cleanup handler to call\n-   --    Expunge_Unactivted_Tasks to complete any tasks that have been\n+   --    Expunge_Unactivated_Tasks to complete any tasks that have been\n    --    allocated but not activated when the allocator completes abnormally.\n \n    --  Is_Task_Master (Flag5-Sem)\n@@ -1393,7 +1393,7 @@ package Sinfo is\n \n    --  No_Ctrl_Actions (Flag7-Sem)\n    --    Present in N_Assignment_Statement to indicate that no finalize nor nor\n-   --    adjust should take place on this assignment eventhough the rhs is\n+   --    adjust should take place on this assignment even though the rhs is\n    --    controlled. This is used in init procs and aggregate expansions where\n    --    the generated assignments are more initialisations than real\n    --    assignments.\n@@ -1618,10 +1618,10 @@ package Sinfo is\n    --    on fixed-point operands. It indicates that the operands are to be\n    --    treated as integer values, ignoring small values. This flag is only\n    --    set as a result of expansion of fixed-point operations. Typically a\n-   --    fixed-point multplication in the source generates subsidiary\n+   --    fixed-point multiplication in the source generates subsidiary\n    --    multiplication and division operations that work with the underlying\n    --    integer values and have this flag set. Note that this flag is not\n-   --    needed on other arithmetic operations (add, neg, subtract etc) since\n+   --    needed on other arithmetic operations (add, neg, subtract etc.) since\n    --    in these cases it is always the case that fixed is treated as integer.\n    --    The Etype field MUST be set if this flag is set. The analyzer knows to\n    --    leave such nodes alone, and whoever makes them must set the correct\n@@ -1652,7 +1652,7 @@ package Sinfo is\n \n    --  Zero_Cost_Handling (Flag5-Sem)\n    --    This flag is set in all handled sequence of statement and exception\n-   --    handler nodes if eceptions are to be handled using the zero-cost\n+   --    handler nodes if exceptions are to be handled using the zero-cost\n    --    mechanism (see Ada.Exceptions and System.Exceptions in files\n    --    a-except.ads/adb and s-except.ads for full details). What gigi needs\n    --    to do for such a handler is simply to put the code in the handler\n@@ -2143,7 +2143,7 @@ package Sinfo is\n       --  the Expression may not have the form of an aggregate (since this\n       --  might cause the back end to generate separate assignments). It\n       --  also cannot be a reference to an object marked as a true constant\n-      --  (Is_True_Constant flag set), where the object is itself initalized\n+      --  (Is_True_Constant flag set), where the object is itself initialized\n       --  with an aggregate. If necessary the front end must generate an\n       --  extra temporary (with Is_True_Constant set False), and initialize\n       --  this temporary as required (the temporary itself is not atomic).\n@@ -3113,7 +3113,7 @@ package Sinfo is\n       --  limited types for which no stream routines exist officially. In such\n       --  case, the result is to use the stream attribute for the underlying\n       --  full type, or in the case of a protected type, the components\n-      --  (including any disriminants) are merely streamed in order.\n+      --  (including any discriminants) are merely streamed in order.\n \n       --  See Exp_Attr for a complete description of which attributes are\n       --  passed onto Gigi, and which are handled entirely by the front end.\n@@ -3265,9 +3265,9 @@ package Sinfo is\n       --  node (which appears as a singleton list). Box_Present gives support\n       --  to Ada 2005 (AI-287).\n \n-      -----------------------------------\n-      -- 4.3.1  Commponent Choice List --\n-      -----------------------------------\n+      ----------------------------------\n+      -- 4.3.1  Cmmponent Choice List --\n+      ----------------------------------\n \n       --  COMPONENT_CHOICE_LIST ::=\n       --    component_SELECTOR_NAME {| component_SELECTOR_NAME}\n@@ -3362,7 +3362,7 @@ package Sinfo is\n       --  No nodes are generated for any of these constructs. Instead, the\n       --  node for the operator appears directly. When we refer to an\n       --  expression in this description, we mean any of the possible\n-      --  consistuent components of an expression (e.g. identifier is\n+      --  constituent components of an expression (e.g. identifier is\n       --  an example of an expression).\n \n       ------------------\n@@ -3394,8 +3394,8 @@ package Sinfo is\n       --  subexpression node (it is actually present in all nodes, but only\n       --  used in subexpression nodes). This count records the number of\n       --  levels of parentheses. If the number of levels in the source exceeds\n-      --  the maximum accomodated by this count, then the count is simply left\n-      --  at the maximum value. This means that there are some pathalogical\n+      --  the maximum accommodated by this count, then the count is simply left\n+      --  at the maximum value. This means that there are some pathological\n       --  cases of failure to detect conformance failures (e.g. an expression\n       --  with 500 levels of parens will conform with one with 501 levels),\n       --  but we do not need to lose sleep over this.\n@@ -3732,7 +3732,7 @@ package Sinfo is\n       --  Note: Although the parser will not accept a declaration as a\n       --  statement, the semantic analyzer may insert declarations (e.g.\n       --  declarations of implicit types needed for execution of other\n-      --  statements) into a sequence of statements, so the code genmerator\n+      --  statements) into a sequence of statements, so the code generator\n       --  should be prepared to accept a declaration where a statement is\n       --  expected. Note also that pragmas can appear as statements.\n \n@@ -3800,7 +3800,7 @@ package Sinfo is\n       -- 5.1  Statement Identifier --\n       -------------------------------\n \n-      --  STATEMENT_INDENTIFIER ::= DIRECT_NAME\n+      --  STATEMENT_IDENTIFIER ::= DIRECT_NAME\n \n       --  The IDENTIFIER of a STATEMENT_IDENTIFIER shall be an identifier\n       --  (not an OPERATOR_SYMBOL)\n@@ -3831,7 +3831,7 @@ package Sinfo is\n       --  the Expression may not have the form of an aggregate (since this\n       --  might cause the back end to generate separate assignments). It\n       --  also cannot be a reference to an object marked as a true constant\n-      --  (Is_True_Constant flag set), where the object is itself initalized\n+      --  (Is_True_Constant flag set), where the object is itself initialized\n       --  with an aggregate. If necessary the front end must generate an\n       --  extra temporary (with Is_True_Constant set False), and initialize\n       --  this temporary as required (the temporary itself is not atomic).\n@@ -4704,7 +4704,7 @@ package Sinfo is\n \n       --  TASK_TYPE_DECLARATION ::=\n       --    task type DEFINING_IDENTIFIER [KNOWN_DISCRIMINANT_PART]\n-      --      [is [new INTERFACE_LIST with] TASK_DEFINITITION];\n+      --      [is [new INTERFACE_LIST with] TASK_DEFINITION];\n \n       --  N_Task_Type_Declaration\n       --  Sloc points to TASK\n@@ -4721,7 +4721,7 @@ package Sinfo is\n \n       --  SINGLE_TASK_DECLARATION ::=\n       --    task DEFINING_IDENTIFIER\n-      --      [is [new INTERFACE_LIST with] TASK_DEFINITITION];\n+      --      [is [new INTERFACE_LIST with] TASK_DEFINITION];\n \n       --  N_Single_Task_Declaration\n       --  Sloc points to TASK\n@@ -5110,7 +5110,7 @@ package Sinfo is\n       --  GUARD ::= when CONDITION =>\n \n       --  As noted above, the CONDITION that is part of a GUARD is included\n-      --  in the node for the select alernative for convenience.\n+      --  in the node for the select alternative for convenience.\n \n       -------------------------------\n       -- 9.7.1  Select Alternative --\n@@ -5306,7 +5306,7 @@ package Sinfo is\n       --    CONTEXT_CLAUSE LIBRARY_ITEM\n       --  | CONTEXT_CLAUSE SUBUNIT\n \n-      --  The N_Compilation_Unit node itself respresents the above syntax.\n+      --  The N_Compilation_Unit node itself represents the above syntax.\n       --  However, there are two additional items not reflected in the above\n       --  syntax. First we have the global declarations that are added by the\n       --  code generator. These are outer level declarations (so they cannot\n@@ -5368,17 +5368,17 @@ package Sinfo is\n       --  the declaration or body, and the flag for private if present,\n       --  appear in the N_Compilation_Unit clause.\n \n-      ----------------------------------------\n-      -- 10.1.1  Library Unit Declararation --\n-      ----------------------------------------\n+      --------------------------------------\n+      -- 10.1.1  Library Unit Declaration --\n+      --------------------------------------\n \n       --  LIBRARY_UNIT_DECLARATION ::=\n       --    SUBPROGRAM_DECLARATION | PACKAGE_DECLARATION\n       --  | GENERIC_DECLARATION    | GENERIC_INSTANTIATION\n \n-      -------------------------------------------------\n-      -- 10.1.1  Library Unit Renaming Declararation --\n-      -------------------------------------------------\n+      -----------------------------------------------\n+      -- 10.1.1  Library Unit Renaming Declaration --\n+      -----------------------------------------------\n \n       --  LIBRARY_UNIT_RENAMING_DECLARATION ::=\n       --    PACKAGE_RENAMING_DECLARATION\n@@ -5547,10 +5547,10 @@ package Sinfo is\n \n       --  EXCEPTION_DECLARATION ::= DEFINING_IDENTIFIER_LIST : exception;\n \n-      --  For consistency with object declarations etc, the parser converts\n+      --  For consistency with object declarations etc., the parser converts\n       --  the case of multiple identifiers being declared to a series of\n       --  declarations in which the expression is copied, using the More_Ids\n-      --  and Prev_Ids flags to remember the souce form as described in the\n+      --  and Prev_Ids flags to remember the source form as described in the\n       --  section on \"Handling of Defining Identifier Lists\".\n \n       --  N_Exception_Declaration\n@@ -6604,7 +6604,7 @@ package Sinfo is\n       --  the exception to be raised (i.e. it is equivalent to a raise\n       --  statement that raises the corresponding exception). This use\n       --  is distinguished by the fact that the Etype in this case is\n-      --  Standard_Void_Type, In the subexprssion case, the Etype is the\n+      --  Standard_Void_Type, In the subexpression case, the Etype is the\n       --  same as the type of the subexpression which it replaces.\n \n       --  If Condition is empty, then the raise is unconditional. If the\n@@ -6889,7 +6889,7 @@ package Sinfo is\n \n    --  The following is the definition of the Node_Kind type. As previously\n    --  discussed, this is separated off to allow rearrangement of the order\n-   --  to facilitiate definition of subtype ranges. The comments show the\n+   --  to facilitate definition of subtype ranges. The comments show the\n    --  subtype classes which apply to each set of node kinds. The first\n    --  entry in the comment characterizes the following list of nodes.\n \n@@ -9220,7 +9220,7 @@ package Sinfo is\n    -- Node_Kind Membership Tests --\n    --------------------------------\n \n-   --  The following functions allow a convenient notation for testing wheter\n+   --  The following functions allow a convenient notation for testing whether\n    --  a Node_Kind value matches any one of a list of possible values. In each\n    --  case True is returned if the given T argument is equal to any of the V\n    --  arguments. Note that there is a similar set of functions defined in"}, {"sha": "138743347d2f5bcf92b7c6ce4d9da13bf6f360f8", "filename": "gcc/ada/sinput-d.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsinput-d.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsinput-d.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-d.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,7 +48,7 @@ package Sinput.D is\n    --  an end of line character). On entry Loc is the Sloc value previously\n    --  returned by Create_Debug_Source or Write_Debug_Line, and on exit,\n    --  Sloc is updated to point to the start of the next line to be written,\n-   --  taking into account the length of the ternminator that was written by\n+   --  taking into account the length of the terminator that was written by\n    --  Write_Debug_Info.\n \n    procedure Close_Debug_Source;"}, {"sha": "eee61f664e05ae9fc2bf1937e0270db65be2ec8c", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -55,7 +55,7 @@ package body Sinput.L is\n \n    --  When a file is to be preprocessed and the options to list symbols\n    --  has been selected (switch -s), Prep.List_Symbols is called with a\n-   --  \"foreword\", a single line indicationg what source the symbols apply to.\n+   --  \"foreword\", a single line indicating what source the symbols apply to.\n    --  The following two constant String are the start and the end of this\n    --  foreword.\n \n@@ -581,7 +581,7 @@ package body Sinput.L is\n                         Source_File.Table (X).Source_Last := Hi;\n \n                         --  Reset Last_Line to 1, because the lines do not\n-                        --  have neccessarily the same starts and lengths.\n+                        --  have necessarily the same starts and lengths.\n \n                         Source_File.Table (X).Last_Source_Line := 1;\n                      end;"}, {"sha": "a72237bab473bf243597976bafc5f82832272390", "filename": "gcc/ada/sinput-l.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsinput-l.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsinput-l.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -94,7 +94,7 @@ package Sinput.L is\n    --  Inst_Node is the instantiation node, and Template_Id is the defining\n    --  identifier of the generic declaration or body unit as appropriate.\n    --  A is set to an adjustment factor to be used in subsequent calls to\n-   --  Adjust_Instantiation_Sloc. The instantiation mechnaism is also used\n+   --  Adjust_Instantiation_Sloc. The instantiation mechanism is also used\n    --  for inlined function and procedure calls. The parameter Inlined_Body\n    --  is set to True in such cases, and False for a generic instantiation.\n    --  This is used for generating error messages that distinguish these"}, {"sha": "6d3144092cf6d3902aa10e90ed0507302655c4d1", "filename": "gcc/ada/sinput.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsinput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsinput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -60,7 +60,7 @@\n --  reasonable to include this case for consistency. In addition, we recognize\n --  any of these sequences in any of the operating systems, for better\n --  behavior in treating foreign files (e.g. a Unix file with LF terminators\n---  transferred to a DOS system). Finally, wide character codes in cagtegories\n+--  transferred to a DOS system). Finally, wide character codes in categories\n --  Separator, Line and Separator, Paragraph are considered to be physical\n --  line terminators.\n \n@@ -162,7 +162,7 @@ package Sinput is\n \n    --  Note: fields marked read-only are set by Sinput or one of its child\n    --  packages when a source file table entry is created, and cannot be\n-   --  subsqently modified, or alternatively are set only by very special\n+   --  subsequently modified, or alternatively are set only by very special\n    --  circumstances, documented in the comments.\n \n    --  File_Name : File_Name_Type (read-only)\n@@ -236,7 +236,7 @@ package Sinput is\n    --    later on in this spec for a description of the checksum algorithm.\n \n    --  Last_Source_Line : Physical_Line_Number;\n-   --    Physical line number of last source line. Whlie a file is being\n+   --    Physical line number of last source line. While a file is being\n    --    read, this refers to the last line scanned. Once a file has been\n    --    completely scanned, it is the number of the last line in the file,\n    --    and hence also gives the number of source lines in the file.\n@@ -517,7 +517,7 @@ package Sinput is\n \n    function Num_Source_Lines (S : Source_File_Index) return Nat;\n    --  Returns the number of source lines (this is equivalent to reading\n-   --  the value of Last_Source_Line, but returns Nat rathern than a\n+   --  the value of Last_Source_Line, but returns Nat rather than a\n    --  physical line number.\n \n    procedure Register_Source_Ref_Pragma\n@@ -703,7 +703,7 @@ private\n       Sloc_Adjust : Source_Ptr;\n       --  A value to be added to Sloc values for this file to reference the\n       --  corresponding lines table. This is zero for the non-instantiation\n-      --  case, and set so that the adition references the ultimate template\n+      --  case, and set so that the addition references the ultimate template\n       --  for the instantiation case. See Sinput-L for further details.\n \n       Lines_Table : Lines_Table_Ptr;"}, {"sha": "4d2a11ecb3ea6b5602c23a46917beb8159ad202e", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -566,7 +566,7 @@ package Snames is\n    --  The following names are preset as synonyms for C\n \n    Name_Default                        : constant Name_Id := N + 295;\n-   --  Name_Exernal (previously defined as pragma)\n+   --  Name_External (previously defined as pragma)\n \n    --  The following names are preset as synonyms for CPP\n \n@@ -960,7 +960,7 @@ package Snames is\n    --  Names of intrinsic subprograms\n \n    --  Note: Asm is missing from this list, since Asm is a legitimate\n-   --  convention name. So is To_Adress, which is a GNAT attribute.\n+   --  convention name. So is To_Address, which is a GNAT attribute.\n \n    First_Intrinsic_Name                 : constant Name_Id := N + 603;\n    Name_Divide                          : constant Name_Id := N + 603;\n@@ -1347,7 +1347,7 @@ package Snames is\n \n       --  Note: Convention C_Pass_By_Copy is allowed only for record\n       --  types (where it is treated like C except that the appropriate\n-      --  flag is set in the record type). Recognizion of this convention\n+      --  flag is set in the record type). Recognizing this convention\n       --  is specially handled in Sem_Prag.\n \n    for Convention_Id'Size use 8;\n@@ -1597,7 +1597,7 @@ package Snames is\n    --  Test to see if the name N is the name of a recognized attribute\n    --  that designates a renameable function, and can therefore appear in\n    --  a renaming statement. Note that not all attributes designating\n-   --  functions are renamable, in particular, thos returning a universal\n+   --  functions are renamable, in particular, those returning a universal\n    --  value cannot be renamed.\n \n    function Is_Type_Attribute_Name (N : Name_Id) return Boolean;\n@@ -1655,7 +1655,7 @@ package Snames is\n    --  or one previously given in a call to Record_Convention_Identifier.\n \n    function Get_Convention_Name (C : Convention_Id) return Name_Id;\n-   --  Returns the name of language convention correspoding to given\n+   --  Returns the name of language convention corresponding to given\n    --  convention id.\n \n    function Get_Locking_Policy_Id (N : Name_Id) return Locking_Policy_Id;"}, {"sha": "2ead1c33019f9611cce408efb4631dc5b8204eec", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -230,7 +230,7 @@ package body Sprint is\n    --  then output all source lines up to this matching line.\n \n    procedure Write_Discr_Specs (N : Node_Id);\n-   --  Ouput discriminant specification for node, which is any of the type\n+   --  Output discriminant specification for node, which is any of the type\n    --  declarations that can have discriminants.\n \n    procedure Write_Ekind (E : Entity_Id);\n@@ -269,7 +269,7 @@ package body Sprint is\n \n    function Write_Indent_Identifiers_Sloc (Node : Node_Id) return Boolean;\n    --  Like Write_Indent_Identifiers except that in Debug_Generated_Code\n-   --  mode, the Sloc of the current debug node is set to point ot the\n+   --  mode, the Sloc of the current debug node is set to point to the\n    --  first output identifier.\n \n    procedure Write_Indent_Str (S : String);\n@@ -328,7 +328,7 @@ package body Sprint is\n    --  initial Write_Indent (to get new line) if current line is too full.\n \n    procedure Write_Str_With_Col_Check_Sloc (S : String);\n-   --  Like Write_Str_WIth_Col_Check, but sets debug Sloc of current debug\n+   --  Like Write_Str_With_Col_Check, but sets debug Sloc of current debug\n    --  node to first non-blank character if a current debug node is active.\n \n    procedure Write_Uint_With_Col_Check (U : Uint; Format : UI_Format);\n@@ -1041,7 +1041,7 @@ package body Sprint is\n             Indent_End;\n \n             --  Note: let the printing of Abortable_Part handle outputting\n-            --  the ABORT keyword, so that the Slco can be set correctly.\n+            --  the ABORT keyword, so that the Sloc can be set correctly.\n \n             Write_Indent_Str (\"then \");\n             Sprint_Node (Abortable_Part (Node));"}, {"sha": "62d5ee5f925f12296a8bd8fe8f4b9d5a68f4c62e", "filename": "gcc/ada/stand.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstand.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -364,7 +364,7 @@ package Stand is\n \n    Any_Type : Entity_Id;\n    --  Used to represent some unknown type. Plays an important role in\n-   --  avoiding cascaded errors, since any node that remains labaled with\n+   --  avoiding cascaded errors, since any node that remains labeled with\n    --  this type corresponds to an already issued error message. Any_Type\n    --  is propagated to avoid cascaded errors from a single type error.\n "}, {"sha": "b4e9c261839dbc9e51cb5e432bdb8dbcc996eabf", "filename": "gcc/ada/stringt.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstringt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstringt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstringt.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,7 +75,7 @@ package Stringt is\n    --  new string is initialized to be a copy of the given string. A test is\n    --  made to see if S is the last created string, and if so it is shared,\n    --  rather than copied, this can be particularly helpful for the case of\n-   --  a continued concatenaion of string constants.\n+   --  a continued concatenation of string constants.\n \n    procedure Store_String_Char (C : Char_Code);\n    procedure Store_String_Char (C : Character);"}, {"sha": "f22c828c67338f4fef63b3b14990a0a9b9ab5bc9", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -279,7 +279,7 @@ package body Styleg is\n       --  Determines if C is a special character (see rule 5 above)\n \n       function Same_Column_As_Next_Non_Blank_Line return Boolean;\n-      --  Called for a full line comment. If the indentation of this commment\n+      --  Called for a full line comment. If the indentation of this comment\n       --  matches that of the next non-blank line in the source, then True is\n       --  returned, otherwise False.\n \n@@ -517,7 +517,7 @@ package body Styleg is\n \n    --  In check indentation mode (-gnatyn for n a digit), a new statement or\n    --  declaration is required to start in a column that is a multiple of the\n-   --  indentiation amount.\n+   --  indentation amount.\n \n    procedure Check_Indentation is\n    begin\n@@ -853,7 +853,7 @@ package body Styleg is\n    -- Check_Unary_Plus_Or_Minus --\n    -------------------------------\n \n-   --  In check tokem mode (-gnatyt), unary plus or minus must not be\n+   --  In check token mode (-gnatyt), unary plus or minus must not be\n    --  followed by a space.\n \n    procedure Check_Unary_Plus_Or_Minus is"}, {"sha": "ac883b6bbde5131487b42c2873b7d48275f93325", "filename": "gcc/ada/styleg.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstyleg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstyleg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -136,7 +136,7 @@ package Styleg is\n    pragma Inline (Check_Separate_Stmt_Lines);\n    --  Called after scanning THEN (not preceded by AND) or ELSE (not preceded\n    --  by OR). Used to check that no tokens follow on the same line (which\n-   --  would intefere with coverage testing). Handles case of THEN ABORT as\n+   --  would interfere with coverage testing). Handles case of THEN ABORT as\n    --  an exception, as well as PRAGMA after ELSE.\n \n    procedure Check_Unary_Plus_Or_Minus;"}, {"sha": "34688df9c32da7e730889b4fc37bccddc3d65b4c", "filename": "gcc/ada/stylesw.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstylesw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstylesw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -206,7 +206,7 @@ package body Stylesw is\n       --  Concatenates image of N at end of Style_Msg_Buf\n \n       procedure Bad_Style_Switch (Msg : String);\n-      --  Called if bad style switch found. Msg is mset in Style_Msg_Buf and\n+      --  Called if bad style switch found. Msg is set in Style_Msg_Buf and\n       --  Style_Msg_Len. OK is set False.\n \n       -------------"}, {"sha": "87552d35bc640b3fd12a042b6214768364248f63", "filename": "gcc/ada/stylesw.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstylesw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fstylesw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -77,7 +77,7 @@ package Stylesw is\n    --    For a comment that is not at the start of a line, the only requirement\n    --    is that a space follow the comment characters.\n    --\n-   --    For a coment that is at the start of the line, one of the following\n+   --    For a comment that is at the start of the line, one of the following\n    --    conditions must hold:\n    --\n    --      The comment characters are the only non-blank characters on the line\n@@ -142,7 +142,7 @@ package Stylesw is\n    --  indicated indentation value. A value of zero turns off checking. The\n    --  requirement is that any new statement, line comment, declaration or\n    --  keyword such as END, start on a column that is a multiple of the\n-   --  indentiation value.\n+   --  indentation value.\n \n    Style_Check_Keyword_Casing : Boolean := False;\n    --  This can be set True by using the -gnatg or -gnatyk switches. If it is\n@@ -299,7 +299,7 @@ package Stylesw is\n \n    procedure Set_Style_Check_Options (Options : String);\n    --  Like the above procedure, but used when the Options string is known to\n-   --  be valid. This is for example appopriate for calls where the string ==\n+   --  be valid. This is for example appropriate for calls where the string ==\n    --  was obtained by Save_Style_Check_Options.\n \n    procedure Reset_Style_Check_Options;"}, {"sha": "029d8cf1eb3d322a73593efce180e930d8274635", "filename": "gcc/ada/switch.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fswitch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fswitch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,7 +24,7 @@\n ------------------------------------------------------------------------------\n \n --  This package together with a child package appropriate to the client tool\n---  scans switches. Note that the body of the appropraite Usage package must be\n+--  scans switches. Note that the body of the appropriate Usage package must be\n --  coordinated with the switches that are recognized by this package. These\n --  Usage packages also act as the official documentation for the switches\n --  that are recognized. In addition, package Debug documents the otherwise"}, {"sha": "a8f24cd71e5570940f93d35bf6d61ce4687c361c", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *         Copyright (C) 1992-2007, Free Software Foundation, Inc.          *\n+ *         Copyright (C) 1992-2008, Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -711,7 +711,7 @@ get_gmtoff (void)\n \n long __gnat_invalid_tzoff = 259273;\n \n-/* Definition of __gnat_locatime_r used by a-calend.adb */\n+/* Definition of __gnat_localtime_r used by a-calend.adb */\n \n #if defined (__EMX__) || defined (__MINGW32__)\n "}, {"sha": "88395c1624ddc06837627661dd064ea13ef90cae", "filename": "gcc/ada/table.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -295,7 +295,7 @@ package body Table is\n          --  allocation). Range checks are suppressed because this unit\n          --  uses direct calls to System.Memory for allocation, and this can\n          --  yield misaligned storage (and we cannot rely on the bootstrap\n-         --  compiler supporting specifically disabling alignment cheks, so we\n+         --  compiler supporting specifically disabling alignment checks, so we\n          --  need to suppress all range checks). It is safe to suppress this\n          --  check here because we know that a (possibly misaligned) object\n          --  of that type does actually exist at that address.\n@@ -307,7 +307,7 @@ package body Table is\n          --  involve moving table contents around).\n \n       begin\n-         --  If we're going to reallocate, check wheter Item references an\n+         --  If we're going to reallocate, check whether Item references an\n          --  element of the currently allocated table.\n \n          if Need_Realloc"}, {"sha": "6b243222cd4b1cd8d84fff1e28aa048f7a5e7c70", "filename": "gcc/ada/table.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -89,7 +89,7 @@ package Table is\n       --  chunks controlled by the allocation parameters).\n \n       --  Note: We do not make the table components aliased, since this would\n-      --  restict the use of table for discriminated types. If it is necessary\n+      --  restrict the use of table for discriminated types. If it is necessary\n       --  to take the access of a table element, use Unrestricted_Access.\n \n       --  WARNING: On HPPA, the virtual addressing approach used in this unit"}, {"sha": "c40d6d81adc9610fbf1e80d75078e0b4949b5e17", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -72,10 +72,10 @@\n \n --     3. Identification information. This is an optional string constant\n --        that gives the name of the run-time library configuration. This\n---        line may be ommitted for a version of system.ads to be used with\n+--        line may be omitted for a version of system.ads to be used with\n --        the full Ada 95 run time.\n \n---     4. Other characterisitics of package System. At the current time the\n+--     4. Other characteristics of package System. At the current time the\n --        only item in this category is whether type Address is private.\n \n with Rident; use Rident;\n@@ -258,7 +258,7 @@ package Targparm is\n    --      The generation of the setjmp and longjmp calls is handled by\n    --      the front end of the compiler (this includes gigi in the case\n    --      of the standard GCC back end). It does not use any back end\n-   --      suport (such as the GCC3 exception handling mechanism). When\n+   --      support (such as the GCC3 exception handling mechanism). When\n    --      this approach is used, the compiler generates special exception\n    --      handlers for handling cleanups when an exception is raised.\n "}, {"sha": "d0b12c79f14e573799496cbfe3bd7ba71bb6be3b", "filename": "gcc/ada/tb-gcc.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftb-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftb-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftb-gcc.c?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -7,6 +7,7 @@\n  *                          C Implementation File                           *\n  *                                                                          *\n  *                     Copyright (C) 2004-2007, AdaCore                     *\n+ *             Copyright (C) 2008, Free Software Foundation, Inc.           *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -37,7 +38,7 @@\n #include <unwind.h>\n \n /* The implementation boils down to a call to _Unwind_Backtrace with a\n-   tailored callback and carried-on datastructure to keep track of the\n+   tailored callback and carried-on data structure to keep track of the\n    input parameters we got as well as of the basic processing state.  */\n \n /******************"}, {"sha": "1402863002106048381394f3c2624dbfbb10772e", "filename": "gcc/ada/tbuild.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftbuild.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftbuild.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -57,7 +57,7 @@ package Tbuild is\n    pragma Inline (Discard_List);\n    --  This is a dummy procedure that simply returns and does nothing. It is\n    --  used when a function returning a Node_Id value is called for its side\n-   --  effect (e.g. a call to the pareser to parse a list of compilation\n+   --  effect (e.g. a call to the parser to parse a list of compilation\n    --  units), but the List_Id value is not required.\n \n    function Make_Byte_Aligned_Attribute_Reference\n@@ -103,7 +103,7 @@ package Tbuild is\n      (Loc                 : Source_Ptr;\n       Defining_Identifier : Node_Id;\n       Label_Construct     : Node_Id) return Node_Id;\n-   --  Used to contruct an implicit label declaration node, including setting\n+   --  Used to construct an implicit label declaration node, including setting\n    --  the proper Label_Construct field (since Label_Construct is a semantic\n    --  field, the normal call to Make_Implicit_Label_Declaration does not\n    --  set this field).\n@@ -203,7 +203,7 @@ package Tbuild is\n    --  Prefix is prepended only if Prefix is non-blank (in which case it\n    --  must be an upper case letter other than O,Q,U,W (which are used for\n    --  identifier encoding, see Namet), and T is reserved for use by implicit\n-   --  types. and X is reserved for use by debug type encoding (see package\n+   --  types, and X is reserved for use by debug type encoding (see package\n    --  Exp_Dbug). Note: the reason that Prefix is last is that it is almost\n    --  always omitted. The notable case of Prefix being non-null is when\n    --  it is 'T' for an implicit type."}, {"sha": "65c1828baddd40e076489259e52193722e0b8e06", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -7,6 +7,7 @@\n  *                          C Implementation File                           *\n  *                                                                          *\n  *                     Copyright (C) 2000-2007, AdaCore                     *\n+ *             Copyright (C) 2008, Free Software Foundation, Inc.           *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -147,7 +148,7 @@ extern void (*Unlock_Task) (void);\n      of a call instruction), which is what we want in the output array, and\n      the associated return address, which is what we retrieve from the stack.\n \n-   o STOP_FRAME, to decide wether we reached the top of the call chain, and\n+   o STOP_FRAME, to decide whether we reached the top of the call chain, and\n      thus if the process shall stop.\n \n \t   :"}, {"sha": "b00f5c3af05260115eb5df4de01e3df006c5972d", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -553,7 +553,7 @@ Identifier_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p)\n      required if this is a static expression because it might be used\n      in a context where a dereference is inappropriate, such as a case\n      statement alternative or a record discriminant.  There is no possible\n-     volatile-ness shortciruit here since Volatile constants must be imported\n+     volatile-ness short-circuit here since Volatile constants must be imported\n      per C.6. */\n   if (Ekind (gnat_temp) == E_Constant && Is_Scalar_Type (gnat_temp_type)\n       && !Is_Imported (gnat_temp)\n@@ -566,7 +566,7 @@ Identifier_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p)\n \n   if (use_constant_initializer)\n     {\n-      /* If this is a deferred constant, the initializer is attached to the\n+      /* If this is a deferred constant, the initializer is attached to\n \t the full view.  */\n       if (Present (Full_View (gnat_temp)))\n \tgnat_temp = Full_View (gnat_temp);\n@@ -2417,7 +2417,7 @@ call_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, tree gnu_target)\n     {\n       /* Conceptually, what we need is a COMPOUND_EXPR with the call followed\n \t by the target object converted to the proper type.  Doing so would\n-\t potentially be very inefficient, however, as this expresssion might\n+\t potentially be very inefficient, however, as this expression might\n \t end up wrapped into an outer SAVE_EXPR later on, which would incur a\n \t pointless temporary copy of the whole object.\n \n@@ -3099,7 +3099,7 @@ gnat_to_gnu (Node_Id gnat_node)\n      elaboration procedure, so mark us as being in that procedure and push our\n      context.\n \n-     If we are in the elaboration procedure, check if we are violating a a\n+     If we are in the elaboration procedure, check if we are violating a\n      No_Elaboration_Code restriction by having a statement there.  */\n   if ((IN (Nkind (gnat_node), N_Statement_Other_Than_Procedure_Call)\n        && Nkind (gnat_node) != N_Null_Statement)\n@@ -4715,7 +4715,7 @@ gnat_to_gnu (Node_Id gnat_node)\n \t    }\n \n  \t  /* If the object was allocated from the default storage pool, the\n- \t     alignement was greater than what the allocator provides, and this\n+ \t     alignment was greater than what the allocator provides, and this\n  \t     is not a fat or thin pointer, what we have in gnu_ptr here is an\n  \t     address dynamically adjusted to match the alignment requirement\n  \t     (see build_allocator).  What we need to pass to free is the\n@@ -5842,7 +5842,7 @@ emit_range_check (tree gnu_expr, Entity_Id gnat_range_type)\n   /* There's no good type to use here, so we might as well use\n      integer_type_node. Note that the form of the check is\n         (not (expr >= lo)) or (not (expr <= hi))\n-      the reason for this slightly convoluted form is that NaN's\n+      the reason for this slightly convoluted form is that NaNs\n       are not considered to be in range in the float case. */\n   return emit_check\n     (build_binary_op (TRUTH_ORIF_EXPR, integer_type_node,\n@@ -5864,7 +5864,7 @@ emit_range_check (tree gnu_expr, Entity_Id gnat_range_type)\n    against which GNU_EXPR has to be checked. Note that for index\n    checking we cannot use the emit_range_check function (although very\n    similar code needs to be generated in both cases) since for index\n-   checking the array type against which we are checking the indeces\n+   checking the array type against which we are checking the indices\n    may be unconstrained and consequently we need to retrieve the\n    actual index bounds from the array object itself\n    (GNU_ARRAY_OBJECT). The place where we need to do that is in"}, {"sha": "699808d1067b82ef8c9c1cd3c3fb4a3991ed4f2d", "filename": "gcc/ada/tree_io.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftree_io.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftree_io.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftree_io.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -107,7 +107,7 @@ package body Tree_IO is\n    -----------------------\n \n    procedure Read_Buffer;\n-   --  Reads data into buffer, setting Bufe appropriately\n+   --  Reads data into buffer, setting Bufn appropriately\n \n    function Read_Byte return Byte;\n    pragma Inline (Read_Byte);"}, {"sha": "a25cfae44fa00a5bf0ab342f40286679ec8c64c4", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1654,7 +1654,7 @@ package body Treepr is\n          No_Indent : Boolean := False);\n       --  This procedure tests the given value of one of the Fields referenced\n       --  by the current node to determine whether to visit it recursively.\n-      --  Normally No_Indent is false, which means tha the visited node will\n+      --  Normally No_Indent is false, which means that the visited node will\n       --  be indented using New_Prefix. If No_Indent is set to True, then\n       --  this indentation is skipped, and Prefix_Str is used for the call\n       --  to print the descendent. No_Indent is effective only if the"}, {"sha": "d6ca613bcbecf9165ab860b0926473f07d50b4c9", "filename": "gcc/ada/types.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftypes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftypes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -83,8 +83,8 @@ package body Types is\n \n       --  Note that we do not bother to worry about shifts in the day.\n       --  It seems unlikely that such shifts could ever occur in practice\n-      --  and even if they do we err on the safe side, ie we say that the time\n-      --  stamps are different.\n+      --  and even if they do we err on the safe side, i.e., we say that the\n+      --  time stamps are different.\n \n       Sright := V (Right, 13) + 60 * (V (Right, 11) + 60 * V (Right, 09));\n       Sleft  := V (Left,  13) + 60 * (V (Left,  11) + 60 * V (Left,  09));"}, {"sha": "9b4bfb825e412f8543835d70e0a3a1a4823dfe10", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -212,7 +212,7 @@ package Types is\n \n    subtype Source_Ptr is Text_Ptr;\n    --  Type used to represent a source location, which is a subscript of a\n-   --  character in the source buffer. As noted above, diffferent source\n+   --  character in the source buffer. As noted above, different source\n    --  buffers have different ranges, so it is possible to tell from a\n    --  Source_Ptr value which source it refers to. Note that negative numbers\n    --  are allowed to accommodate the following special values.\n@@ -435,7 +435,7 @@ package Types is\n \n    No_List : constant List_Id := List_High_Bound;\n    --  Used to indicate absence of a list. Note that the value is zero, which\n-   --  is the same as Empty, which is helpful in intializing nodes where a\n+   --  is the same as Empty, which is helpful in initializing nodes where a\n    --  value of zero can represent either an empty node or an empty list.\n \n    Error_List : constant List_Id := List_Low_Bound;\n@@ -460,7 +460,7 @@ package Types is\n    --  Type used to identify an element list (Elist header table subscript)\n \n    No_Elist : constant Elist_Id := Elist_Low_Bound;\n-   --  Used to indicate absense of an element list. Note that this is not\n+   --  Used to indicate absence of an element list. Note that this is not\n    --  an actual Elist header, so element list operations on this value\n    --  are not valid.\n \n@@ -509,7 +509,7 @@ package Types is\n    --  Each character literal in the source is interpreted as being one of the\n    --  16#8000_0000 possible Wide_Wide_Character codes, and a unique Integer\n    --  Value is assigned, corresponding to the UTF_32 value, which also\n-   --  correspondds to the POS value in the Wide_Wide_Character type, and also\n+   --  corresponds to the POS value in the Wide_Wide_Character type, and also\n    --  corresponds to the POS value in the Wide_Character and Character types\n    --  for values that are in appropriate range. String literals are similarly\n    --  interpreted as a sequence of such codes.\n@@ -615,7 +615,7 @@ package Types is\n \n    Dummy_Time_Stamp : constant Time_Stamp_Type := (others => '0');\n    --  This is used for dummy time stamp values used in the D lines for\n-   --  non-existant files, and is intended to be an impossible value.\n+   --  non-existent files, and is intended to be an impossible value.\n \n    function \"=\"  (Left, Right : Time_Stamp_Type) return Boolean;\n    function \"<=\" (Left, Right : Time_Stamp_Type) return Boolean;"}, {"sha": "ffc636771d11ad5e67ff17261ce5303904dbfebc", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -72,7 +72,7 @@ package body Uintp is\n    Udigits_Min : Int;\n    --  These values are used to make sure that the mark/release mechanism does\n    --  not destroy values saved in the U_Power tables or in the hash table used\n-   --  by UI_From_Int. Whenever an entry is made in either of these tabls,\n+   --  by UI_From_Int. Whenever an entry is made in either of these tables,\n    --  Uints_Min and Udigits_Min are updated to protect the entry, and Release\n    --  never cuts back beyond these minimum values.\n \n@@ -142,7 +142,7 @@ package body Uintp is\n    --  is less than 2**15, the value returned is the input value, in this case\n    --  the result may be negative. It is expected that any use will mask off\n    --  unnecessary bits. This is used for finding Arg mod B where B is a power\n-   --  of two. Hence the actual base is irrelevent as long as it is a power of\n+   --  of two. Hence the actual base is irrelevant as long as it is a power of\n    --  two.\n \n    procedure Most_Sig_2_Digits\n@@ -172,7 +172,7 @@ package body Uintp is\n       Remainder         : out Uint;\n       Discard_Quotient  : Boolean;\n       Discard_Remainder : Boolean);\n-   --  Compute euclidian division of Left by Right, and return Quotient and\n+   --  Compute Euclidean division of Left by Right, and return Quotient and\n    --  signed Remainder (Left rem Right).\n    --\n    --    If Discard_Quotient is True, Quotient is left unchanged.\n@@ -750,7 +750,7 @@ package body Uintp is\n \n    --  This is done in one pass\n \n-   --  Mathematically: assume base congruent to 1 and compute an equivelent\n+   --  Mathematically: assume base congruent to 1 and compute an equivalent\n    --  integer to Left.\n \n    --  If Sign = -1 return the alternating sum of the \"digits\"\n@@ -759,7 +759,7 @@ package body Uintp is\n \n    --  (where D1 is Least Significant Digit)\n \n-   --  Mathematically: assume base congruent to -1 and compute an equivelent\n+   --  Mathematically: assume base congruent to -1 and compute an equivalent\n    --  integer to Left.\n \n    --  This is used in Rem and Base is assumed to be 2 ** 15\n@@ -2742,7 +2742,7 @@ package body Uintp is\n \n             --  The value is outside the direct representation range and must\n             --  therefore be stored in the table. Expand the table to contain\n-            --  the count and tigis. The index of the new table entry will be\n+            --  the count and digits. The index of the new table entry will be\n             --  returned as the result.\n \n             Uints.Increment_Last;"}, {"sha": "7454c70ca5191f82c420a59b365cb704628cc2df", "filename": "gcc/ada/uintp.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fuintp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fuintp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -233,7 +233,7 @@ package Uintp is\n    function UI_Modular_Inverse (N : Uint; Modulo : Uint) return Uint;\n    --  Compute the multiplicative inverse of N in modular arithmetics with the\n    --  given Modulo (uses Euclid's algorithm). Note: the call is considered\n-   --  to be erroneous (and the behavior is undefined) if n is not inversible.\n+   --  to be erroneous (and the behavior is undefined) if n is not invertible.\n \n    function UI_From_Dint (Input : Dint) return Uint;\n    --  Converts Dint value to universal integer form"}, {"sha": "96a85586433317cbfe7e47b17d03fe6e08d2c94f", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -1469,7 +1469,7 @@ create_var_decl_1 (tree var_name, tree asm_name, tree type, tree var_init,\n \t\t  var_name, type);\n \n   /* If this is external, throw away any initializations (they will be done\n-     elsewhere) unless this is a a constant for which we would like to remain\n+     elsewhere) unless this is a constant for which we would like to remain\n      able to get the initializer.  If we are defining a global here, leave a\n      constant initialization and save any variable elaborations for the\n      elaboration routine.  If we are just annotating types, throw away the\n@@ -2082,7 +2082,7 @@ gnat_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n       return NULL;\n     }\n \n-  /* Otherwise, no need to walk the the same tree twice.  */\n+  /* Otherwise, no need to walk the same tree twice.  */\n   if (pointer_set_contains (p_set, stmt))\n     {\n       *walk_subtrees = 0;\n@@ -2214,7 +2214,7 @@ end_subprog_body (tree body)\n   if (type_annotate_only)\n     return;\n \n-  /* Perform the required pre-gimplfication transformations on the tree.  */\n+  /* Perform the required pre-gimplification transformations on the tree.  */\n   gnat_genericize (fndecl);\n \n   /* We do different things for nested and non-nested functions.\n@@ -3231,7 +3231,7 @@ update_pointer_to (tree old_type, tree new_type)\n      qualifiers than the new_type ones, for instance in some cases of pointers\n      to private record type elaboration (see the comments around the call to\n      this routine from gnat_to_gnu_entity/E_Access_Type). We have to merge the\n-     qualifiers in thoses cases too, to avoid accidentally discarding the\n+     qualifiers in those cases too, to avoid accidentally discarding the\n      initial set, and will often end up with old_type == new_type then.  */\n   new_type = build_qualified_type (new_type,\n \t\t\t\t   TYPE_QUALS (old_type)"}, {"sha": "3c6cb0074ebeb7ff8cdc8f51a5f46ce306ed39b3", "filename": "gcc/ada/utils2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils2.c?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -143,7 +143,7 @@ known_alignment (tree exp)\n      both type and expression information in this case.\n \n      Beware that we can still get a dummy designated subtype here (e.g. Taft\n-     Amendement types), in which the alignment information is meaningless and\n+     Amendment types), in which the alignment information is meaningless and\n      should be ignored.\n \n      We always compute a type_alignment value and return the MAX of it"}, {"sha": "f24bc878272ba51fc783fbbd1d0b7080e6217428", "filename": "gcc/ada/validsw.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fvalidsw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fvalidsw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvalidsw.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,14 +73,14 @@ package Validsw is\n    --  Controls the validity checking of IN OUT parameters. If this switch\n    --  is set to True using -gnatVm or a 'm' in the argument of a pragma\n    --  Validity_Checks, then the initial value of all IN OUT parameters\n-   --  will be checked at the point of call of a procecure. Note that the\n+   --  will be checked at the point of call of a procedure. Note that the\n    --  character 'm' here stands for modified (parameters).\n \n    Validity_Check_In_Params : Boolean := False;\n    --  Controls the validity checking of IN parameters. If this switch is\n    --  set to True using -gnatVm or an 'i' in the argument of a pragma\n    --  Validity_Checks, then the initial value of all IN parameters\n-   --  will be checked at the point of call of a procecure or function.\n+   --  will be checked at the point of call of a procedure or function.\n \n    Validity_Check_Operands : Boolean := False;\n    --  Controls validity checking of operands. If this switch is set to\n@@ -145,7 +145,7 @@ package Validsw is\n \n    procedure Set_Validity_Check_Options (Options : String);\n    --  Like the above procedure, except that the call is simply ignored if\n-   --  there are any error conditions, this is for example appopriate for\n+   --  there are any error conditions, this is for example appropriate for\n    --  calls where the string is known to be valid, e.g. because it was\n    --  obtained by Save_Validity_Check_Options.\n "}, {"sha": "4b4e61a155b3793fc9a4d815a23d3a7d4d63ffdb", "filename": "gcc/ada/vms_conv.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fvms_conv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fvms_conv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -44,7 +44,7 @@ package body VMS_Conv is\n    --  kept in a more conveniently accessible form described in this\n    --  section.\n \n-   --  Commands, command qualifers and options have a similar common format\n+   --  Commands, command qualifiers and options have a similar common format\n    --  so that searching for matching names can be done in a common manner.\n \n    type Item_Id is (Id_Command, Id_Switch, Id_Option);\n@@ -274,7 +274,7 @@ package body VMS_Conv is\n \n    procedure Place_Unix_Switches (S : VMS_Data.String_Ptr);\n    --  Given a unix switch string, place corresponding switches in Buffer,\n-   --  updating Ptr appropriatelly. Note that in the case of use of ! the\n+   --  updating Ptr appropriately. Note that in the case of use of ! the\n    --  result may be to remove a previously placed switch.\n \n    procedure Preprocess_Command_Data;\n@@ -2020,7 +2020,7 @@ package body VMS_Conv is\n                            --  end of the Argv, otherwise strings like\n                            --  \"foo/bar\" get split at the slash.\n \n-                           --  The begining and ending of the string\n+                           --  The beginning and ending of the string\n                            --  are flagged with embedded nulls which\n                            --  are removed when building the Spawn\n                            --  call. Nulls are use because they won't"}, {"sha": "965bb372d484fd72e6134d65984185d546286439", "filename": "gcc/ada/vms_conv.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fvms_conv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fvms_conv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -65,7 +65,7 @@ package VMS_Conv is\n    --  GNATCmd. The entries are represented by an array of records.\n \n    type Parameter_Type is\n-   --  A parameter is defined as a whitespace bounded string, not begining\n+   --  A parameter is defined as a whitespace bounded string, not beginning\n    --   with a slash. (But see note under FILES_OR_WILDCARD).\n      (File,\n       --  A required file or directory parameter\n@@ -81,7 +81,7 @@ package VMS_Conv is\n       --  parameters including wildcard specifications.\n \n       Unlimited_As_Is,\n-      --  Un unlimited number of whitespace separated paameters that are\n+      --  An unlimited number of whitespace separated parameters that are\n       --  passed through as is (not canonicalized).\n \n       Files_Or_Wildcard);"}, {"sha": "7dc0bf003f4efced1b509813ff2e047663aeda66", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -56,7 +56,7 @@\n --         - a contiguous sequence of comments that constitute the\n --           documentation of the qualifier.\n \n---    - each command zone ends with the declaration of the contant array\n+--    - each command zone ends with the declaration of the constant array\n --      for the command, of the form:\n \n --      <Command>__Switches : aliased constant Switches :=\n@@ -67,7 +67,7 @@ package VMS_Data is\n    -- QUALIFIERS --\n    ----------------\n \n-   --  The syntax of a qualifier delaration is as follows:\n+   --  The syntax of a qualifier declaration is as follows:\n \n    --    SWITCH_STRING ::= \"/ command-qualifier-name TRANSLATION\"\n \n@@ -109,7 +109,7 @@ package VMS_Data is\n    --  The unix-switch-string always starts with a minus, and has no commas\n    --  or spaces in it. Case is significant in the unix switch string. If a\n    --  unix switch string is preceded by the not sign (!) it means that the\n-   --  effect of the corresponding command qualifer is to remove any previous\n+   --  effect of the corresponding command qualifier is to remove any previous\n    --  occurrence of the given switch in the command line.\n \n    --  The DIRECTORIES_TRANSLATION format is used where a list of directories\n@@ -149,7 +149,7 @@ package VMS_Data is\n    --  The COMMANDS_TRANSLATION case is only used for gnatmake, to correspond\n    --  to the use of -cargs, -bargs and -largs (the ARGS string as indicated\n    --  is one of these three possibilities). The name given by COMMAND is the\n-   --  corresponding command name to be used to interprete the switches to be\n+   --  corresponding command name to be used to interpret the switches to be\n    --  passed on. Switches of this type set modes, e.g. /COMPILER_QUALIFIERS\n    --  sets the mode so that all subsequent switches, up to another switch\n    --  with COMMANDS_TRANSLATION apply to the corresponding commands issued\n@@ -162,7 +162,7 @@ package VMS_Data is\n    --  since all subsequent switches apply to an issued command.\n \n    --  For the DIRECT_TRANSLATION case, an implicit additional qualifier\n-   --  declaration is created by prepending NO to the name of the qualifer,\n+   --  declaration is created by prepending NO to the name of the qualifier,\n    --  and then inverting the sense of the UNIX_SWITCHES string. For example,\n    --  given the qualifier definition:\n \n@@ -182,7 +182,7 @@ package VMS_Data is\n    --  String pointer type used throughout\n \n    type Switches is array (Natural range <>) of String_Ptr;\n-   --  Type used for array of swtiches\n+   --  Type used for array of switches\n \n    type Switches_Ptr is access constant Switches;\n \n@@ -513,7 +513,7 @@ package VMS_Data is\n    --        /NORESTRICTION_LIST (D)\n    --        /RESTRICTION_LIST\n    --\n-   --   Generate list of pragma Rerstrictions that could be applied to the\n+   --   Generate list of pragma Restrictions that could be applied to the\n    --   current unit. This is useful for code audit purposes, and also may be\n    --   used to improve code generation in some cases.\n \n@@ -526,7 +526,7 @@ package VMS_Data is\n    --        /RETURN_CODES=VMS\n    --\n    --   Specifies the style of default exit code returned. Must be used in\n-   --   conjunction with and match the Link qualifer with same name.\n+   --   conjunction with and match the Link qualifier with same name.\n    --\n    --        POSIX (D)   Return Posix success (0) by default.\n    --\n@@ -772,7 +772,7 @@ package VMS_Data is\n    --        /NOLOCS (D)\n    --        /LOCS\n    --\n-   --   Use full source locations referebces in the report file.\n+   --   Use full source locations references in the report file.\n \n    S_Check_Mess    : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"       &\n                                              \"DEFAULT \"                    &\n@@ -821,15 +821,15 @@ package VMS_Data is\n    --        /SECTIONS[=section-option, section-option, ...]\n    --\n    --   Specify what sections should be included into the report file.\n-   --   By default, all three section (diagnises in the format correcponding\n+   --   By default, all three section (diagnoses in the format corresponding\n    --   to compiler error and warning messages, diagnoses grouped by rules and\n    --   then - by files, diagnoses grouped by files and then - by rules) are\n    --   included in the report file.\n    --\n    --   section-option may be one of the following:\n    --\n    --      COMPILER_STYLE      Include diagnostics in compile-style format\n-   --                          (diagoses are grouped by files, for each file\n+   --                          (diagnoses are grouped by files, for each file\n    --                          they are ordered according to the references\n    --                          into the source)\n    --      BY_RULES            Include diagnostics grouped first by rules and\n@@ -1072,7 +1072,7 @@ package VMS_Data is\n    --\n    --   Causes the file modification time stamp of the input file to be\n    --   preserved and used for the time stamp of the output file(s). This may\n-   --   be useful for preserving coherency of time stamps in an enviroment\n+   --   be useful for preserving coherency of time stamps in an environment\n    --   where gnatchop is used as part of a standard build process.\n \n    S_Chop_Quiet  : aliased constant S := \"/QUIET \"                         &\n@@ -1253,7 +1253,7 @@ package VMS_Data is\n    --        /NOQUIET (D)\n    --        /QUIET\n    --\n-   --   Quiet output. If there are no error, do not ouuput anything, except in\n+   --   Quiet output. If there are no error, do not output anything, except in\n    --   verbose mode (qualifier /VERBOSE) or in informative-only mode\n    --  (qualifier /NODELETE).\n \n@@ -1661,7 +1661,7 @@ package VMS_Data is\n    --   forces generation of the .ALI file. This file is marked as being\n    --   in error, so it cannot be used for binding purposes, but it does\n    --   contain reasonably complete cross-reference information, and thus may\n-   --   be useful for use by tools (e.g. semantic browing tools or integrated\n+   --   be useful for use by tools (e.g. semantic browsing tools or integrated\n    --   development environments) that are driven from the .ALI file.\n \n    S_GCC_Full    : aliased constant S := \"/FULL_PATH_IN_BRIEF_MESSAGES \"   &\n@@ -2404,7 +2404,7 @@ package VMS_Data is\n    --                               allows proper processing of the output\n    --                               generated by specialized tools including\n    --                               gnatprep (where --! is used) and the SPARK\n-   --                               annnotation language (where --# is used).\n+   --                               annotation language (where --# is used).\n    --                               For the purposes of this rule, a special\n    --                               character is defined as being in one of the\n    --                               ASCII ranges 16#21#..16#2F# or\n@@ -3211,7 +3211,7 @@ package VMS_Data is\n    --\n    --   NOREDUNDANT             Suppress warnings for redundant constructs.\n    --\n-   --   SUPPRESS                Completely suppresse the output of all warning\n+   --   SUPPRESS                Completely suppress the output of all warning\n    --                           messages.  Same as /NOWARNINGS.\n    --\n    --   UNCHECKED_CONVERSIONS   Activates warnings on unchecked conversions.\n@@ -3323,7 +3323,7 @@ package VMS_Data is\n    --                   of lower case.\n    --\n    --   NONE            No wide characters are allowed.  Same\n-   --                   as /NOWIDE_CHARCTER_ENCODING.\n+   --                   as /NOWIDE_CHARACTER_ENCODING.\n    --\n    --   HEX             In this encoding, a wide character is represented by\n    --                   the following five character sequence: ESC a b c d\n@@ -3363,7 +3363,7 @@ package VMS_Data is\n    --                   16#0800#-16#ffff#: 2#1110xxxx# 2#10xxxxxx# 2#10xxxxxx#\n    --\n    --                   where the xxx bits correspond to the left-padded bits\n-   --                   of the the 16-bit character value. Note that all lower\n+   --                   of the 16-bit character value. Note that all lower\n    --                   half ASCII characters are represented as ASCII bytes\n    --                   and all upper half characters and other wide characters\n    --                   are represented as sequences of upper-half (The full\n@@ -3982,7 +3982,7 @@ package VMS_Data is\n \n    S_Link_Library : aliased constant S := \"/LIBRARY=|\"                     &\n                                             \"-l|\";\n-   --        /LYBRARY=xyz\n+   --        /LIBRARY=xyz\n    --\n    --   Link with library named \"xyz\".\n \n@@ -4046,7 +4046,7 @@ package VMS_Data is\n    --\n    --   Specifies the style of codes returned by\n    --   Ada.Command_Line.Set_Exit_Status. Must be used in conjunction with\n-   --   and match the Bind qualifer with the same name.\n+   --   and match the Bind qualifier with the same name.\n    --\n    --        POSIX (D)   Return Posix compatible exit codes.\n    --\n@@ -4081,7 +4081,7 @@ package VMS_Data is\n                                             \"--for-linker=\";\n    --        /<other>\n    --\n-   --   Any other switch that will be transmited to the underlying linker.\n+   --   Any other switch that will be transmitted to the underlying linker.\n \n    Link_Switches : aliased constant Switches :=\n                      (S_Link_Add     'Access,\n@@ -4424,7 +4424,7 @@ package VMS_Data is\n    --   a Unix-style Makefile. By default, each source file is prefixed with\n    --   its (relative or absolute) directory name. This name is whatever you\n    --   specified in the various /SOURCE_SEARCH and /SEARCH qualifiers.  If\n-   --   you also speficy the /QUIET qualifier, only the source file names,\n+   --   you also specify the /QUIET qualifier, only the source file names,\n    --   without relative paths, are output. If you just specify the\n    --   /DEPENDENCY_LIST qualifier, dependencies of the GNAT internal system\n    --   files are omitted.  This is typically what you want. If you also\n@@ -4486,7 +4486,7 @@ package VMS_Data is\n    --\n    --   Force recompilations. Recompile all sources, even though some object\n    --   files may be up to date, but don't recompile predefined or GNAT\n-   --   internal files unless the /ALL_FILES qualfier is also specified.\n+   --   internal files unless the /ALL_FILES qualifier is also specified.\n \n    S_Make_Full    : aliased constant S := \"/FULL_PATH_IN_BRIEF_MESSAGES \"  &\n                                             \"-F\";\n@@ -4674,7 +4674,7 @@ package VMS_Data is\n    --        /NOPROCESSES (D)\n    --        /PROCESSES=NNN\n    --\n-   --   Use NNN processes to carry out the (re)complations. If you have a\n+   --   Use NNN processes to carry out the (re)compilations. If you have a\n    --   multiprocessor machine, compilations will occur in parallel.  In the\n    --   event of compilation errors, messages from various compilations might\n    --   get interspersed (but GNAT MAKE will give you the full ordered list of\n@@ -5138,7 +5138,7 @@ package VMS_Data is\n    --     CYCLOMATIC_OFF           Do not compute the McCabe Cyclomatic\n    --                              Complexity\n    --     ESSENTIAL_ON             Compute the Essential Complexity\n-   --     ESSENTIAL_OFF            Do not ompute the Essential Complexity\n+   --     ESSENTIAL_OFF            Do not compute the Essential Complexity\n    --     LOOP_NESTIMG_ON          Compute the maximal loop nesting\n    --     LOOP_NESTIMG_OFF         Do not compute the maximal loop nesting\n    --     AVERAGE_COMPLEXITY_ON    Compute the average complexity for\n@@ -5393,7 +5393,7 @@ package VMS_Data is\n    --\n    --   Create or update a project file. 'file_name' may include directory\n    --   information. The specified file must be writable. There may be only\n-   --   one qualifier /PROJECT_FILE. When a qualifier /PROJECT_DILE is\n+   --   one qualifier /PROJECT_FILE. When a qualifier /PROJECT_FILE is\n    --   specified, no qualifier /CONFIG_FILE may be specified.\n \n    S_Name_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n@@ -5770,7 +5770,7 @@ package VMS_Data is\n    --\n    --   Specifies the form of the line terminators in the produced source.\n    --   By default, the form of the line terminator depends on the platforms.\n-   --   On Unix and VMS, it is a Line Feed (LF) chararcter. On Windows (DOS),\n+   --   On Unix and VMS, it is a Line Feed (LF) character. On Windows (DOS),\n    --   It is a Carriage Return (CR) followed by a Line Feed.\n    --   The Options DOS and CRLF are equivalent. The options UNIX and LF are\n    --   also equivalent.\n@@ -5825,7 +5825,7 @@ package VMS_Data is\n                                                  \"-W8\";\n    --        /RESULT_ENCODING[=encoding-type]\n    --\n-   --   Specify the wide character encoding method used when writtimg the\n+   --   Specify the wide character encoding method used when writing the\n    --   reformatted code in the result file. 'encoding-type' is one of the\n    --   following:\n    --\n@@ -6487,7 +6487,7 @@ package VMS_Data is\n    --\n    --   (nnn is a non-negative integer). Set the indentation level in the\n    --   generated body stub to nnn. nnn=0 means \"no indentation\".\n-   --   Default insdentation is 3.\n+   --   Default indentation is 3.\n \n    S_Stub_Keep    : aliased constant S := \"/KEEP \"                         &\n                                             \"-k\";"}, {"sha": "861df1197398cebe89fb89815b00747f218f3ed3", "filename": "gcc/ada/widechar.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fwidechar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fwidechar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwidechar.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -126,7 +126,7 @@ package body Widechar is\n    begin\n       Chr := In_Char;\n \n-      --  Scan out the wide character. if the first character is a bracket,\n+      --  Scan out the wide character. If the first character is a bracket,\n       --  we allow brackets encoding regardless of the standard encoding\n       --  method being used, but otherwise we use this standard method.\n "}, {"sha": "e9a756e3f0ca4271ad7cd01b12e0ca676bc32455", "filename": "gcc/ada/widechar.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fwidechar.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fwidechar.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwidechar.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,7 @@ package Widechar is\n    Wide_Char_Byte_Count : Nat := 0;\n    --  This value is incremented whenever Scan_Wide or Skip_Wide is called.\n    --  The amount added is the length of the wide character sequence minus\n-   --  one. This means that the count that accululates here represents the\n+   --  one. This means that the count that accumulates here represents the\n    --  difference between the length in characters and the length in bytes.\n    --  This is used for checking the line length in characters.\n "}, {"sha": "feb542988c4cbc27127c6aee2862384e81dacdf7", "filename": "gcc/ada/xeinfo.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxeinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxeinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxeinfo.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -380,7 +380,7 @@ begin\n \n    while Match (Line, Get_FN) loop\n \n-      --  Non-inlined funcion\n+      --  Non-inlined function\n \n       if not Present (Inlined, FN) then\n          Put_Line (Ofile, \"\");\n@@ -439,7 +439,7 @@ begin\n             Line := Getlin;\n             exit when not Match (Line, Get_Asrt);\n \n-            --  Pragma asser found, get its continuation lines\n+            --  Pragma assert found, get its continuation lines\n \n             loop\n                exit when Match (Line, Semicoln);\n@@ -452,7 +452,7 @@ begin\n          Match (Line, Get_Cmnt, M);\n          Replace (M, A);\n \n-         --  Get continuations of return statemnt\n+         --  Get continuations of return statement\n \n          while not Match (Line, Semicoln) loop\n             Nextlin := Getlin;"}, {"sha": "3c45fde12cbf0917798e9160370d07456b17c86c", "filename": "gcc/ada/xgnatugn.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxgnatugn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxgnatugn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxgnatugn.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,7 +64,7 @@\n --       appropriate vms equivalents. Note that replacements do not occur\n --       within ^alpha^beta^ sequences.\n \n---       Any occurence of [filename].extension, where extension one of the\n+--       Any occurrence of [filename].extension, where extension one of the\n --       following:\n \n --           \"o\", \"ads\", \"adb\", \"ali\", \"ada\", \"atb\", \"ats\", \"adc\", \"c\""}, {"sha": "82b2e7d03825699350562a575ed1dcb86817fb42", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,7 +49,7 @@ package body Xr_Tabls is\n    function  Get_Key (E : File_Reference) return Cst_String_Access;\n    function  Hash (F : Cst_String_Access) return HTable_Headers;\n    function  Equal (F1, F2 : Cst_String_Access) return Boolean;\n-   --  The five subprograms above are used to instanciate the static\n+   --  The five subprograms above are used to instantiate the static\n    --  htable to store the files that should be processed.\n \n    package File_HTable is new GNAT.HTable.Static_HTable\n@@ -81,7 +81,7 @@ package body Xr_Tabls is\n    function Next (E : Declaration_Reference) return Declaration_Reference;\n    procedure Set_Next (E, Next : Declaration_Reference);\n    function  Get_Key (E : Declaration_Reference) return Cst_String_Access;\n-   --  The subprograms above are used to instanciate the static\n+   --  The subprograms above are used to instantiate the static\n    --  htable to store the entities that have been found in the application\n \n    package Entities_HTable is new GNAT.HTable.Static_HTable\n@@ -1389,7 +1389,7 @@ package body Xr_Tabls is\n       File_Ref.Visited := False;\n \n       --  ??? Do not add a source file to the list. This is true at\n-      --  least for gnatxref, and probably for gnatfind as wel\n+      --  least for gnatxref, and probably for gnatfind as well\n \n       if F'Length > 4\n         and then F (F'Last - 3 .. F'Last) = \".ali\""}, {"sha": "d5e9c5ee67c6a75182c61dd35d0b76725e2450a7", "filename": "gcc/ada/xr_tabls.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxr_tabls.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxr_tabls.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -140,7 +140,7 @@ package Xr_Tabls is\n      (Sorted : Boolean := True)\n       return   Declaration_Array_Access;\n    --  Return a sorted list of all the declarations in the application.\n-   --  Freeing this array is the responsability of the caller, however it\n+   --  Freeing this array is the responsibility of the caller, however it\n    --  shouldn't free the actual contents of the array, which are pointers\n    --  to internal data\n \n@@ -274,15 +274,15 @@ package Xr_Tabls is\n \n    procedure Reset_Directory (File : File_Reference);\n    --  Reset the cached directory for file. Next time Get_File is called, the\n-   --  directory willl be recomputed.\n+   --  directory will be recomputed.\n \n    procedure Set_Unvisited (File_Ref : File_Reference);\n    --  Set File_Ref as unvisited. So Next_Unvisited_File will return it\n \n    procedure Read_File\n      (File_Name : String;\n       Contents  : out GNAT.OS_Lib.String_Access);\n-   --  Reads File_Name into the newly allocated strig Contents. Types.EOF\n+   --  Reads File_Name into the newly allocated string Contents. Types.EOF\n    --  character will be added to the returned Contents to simplify parsing.\n    --  Name_Error is raised if the file was not found. End_Error is raised if\n    --  the file could not be read correctly. For most systems correct reading"}, {"sha": "af9abd7199c0300020b01a7f888310d465871755", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -109,7 +109,7 @@ package body Xref_Lib is\n      (Source : not null access String;\n       Ptr    : in out Positive;\n       Number : out Natural);\n-   --  Skips any separators and parses Source upto the first character that\n+   --  Skips any separators and parses Source up to the first character that\n    --  is not a decimal digit. Returns value of parsed digits or 0 if none.\n \n    procedure Parse_X_Filename (File : in out ALI_File);\n@@ -808,7 +808,7 @@ package body Xref_Lib is\n             exit when Ali (Ptr) = EOF;\n          end loop;\n \n-         --  We were not able to find the symbol, this should not happend but\n+         --  We were not able to find the symbol, this should not happen but\n          --  since we don't want to stop here we return a string of three\n          --  question marks as the symbol name.\n "}, {"sha": "e0db3fdb7007c7ef91bb9a6b4d2d710c10825864", "filename": "gcc/ada/xref_lib.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxref_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxref_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.ads?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -115,7 +115,7 @@ package Xref_Lib is\n    --  If Der_Info is true, then the derived type information will be\n    --  processed.\n    --\n-   --  If Type_Tree is true, then the type hierarchy wil be searched\n+   --  If Type_Tree is true, then the type hierarchy will be searched\n    --  going from the pattern to the parent type.\n \n    procedure Search_Xref"}, {"sha": "691e9016b69d13266fa5d86ad0be95c6a730bd73", "filename": "gcc/ada/xsinfo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3354f96dac09a7c57641fd19083f3aefe0790a35/gcc%2Fada%2Fxsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsinfo.adb?ref=3354f96dac09a7c57641fd19083f3aefe0790a35", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,7 @@\n \n --  Note: this program assumes that sinfo.ads has passed the error checks\n --  which are carried out by the CSinfo utility, so it does not duplicate\n---  these checks and assumes the soruce is correct.\n+--  these checks and assumes the source is correct.\n \n --  An optional argument allows the specification of an output file name to\n --  override the default sinfo.h file name for the generated output file."}]}