{"sha": "8c90b13a229399354769a5cee7a7872d21de23bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM5MGIxM2EyMjkzOTkzNTQ3NjlhNWNlZTdhNzg3MmQyMWRlMjNiYg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2003-07-04T19:45:55Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2003-07-04T19:45:55Z"}, "message": "Makefile.tpl: Replace PWD with PWD_COMMAND.\n\n2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n\n\t* Makefile.tpl: Replace PWD with PWD_COMMAND.\n\t* Makefile.in: Regenerated.\n\ngcc/\n\n2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n\n\t* config-ml.in: Replace PWD with PWD_COMMAND.\n\t* Makefile.in: Likewise.\n\ngcc/ada/\n\n2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n\n\t* Make-lang.in: Replace PWD with PWD_COMMAND.\n\t* Makefile.adalib: Likewise.\n\t* Makefile.in: Likewise.\n\ngcc/treelang/\n\n2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n\n\t* Make-lang.in: Replace PWD with PWD_COMMAND.\n\nlibf2c/\n\n2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n\n\t* Makefile.in: Replace PWD with PWD_COMMAND.\n\nlibstdc++-v3/\n\n2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n\n\t* Makefile.am: Replace PWD with PWD_COMMAND.\n\t* Makefile.in: Regenerated.\n\t* docs/html/Makefile: Likewise.\n\nFrom-SVN: r68931", "tree": {"sha": "7a55ee9c7a472ff31005d82e86c69df98dc72504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a55ee9c7a472ff31005d82e86c69df98dc72504"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c90b13a229399354769a5cee7a7872d21de23bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c90b13a229399354769a5cee7a7872d21de23bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c90b13a229399354769a5cee7a7872d21de23bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c90b13a229399354769a5cee7a7872d21de23bb/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "72d4a2ad78d24c8b81335ad3651c4c8a03f5f1de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72d4a2ad78d24c8b81335ad3651c4c8a03f5f1de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72d4a2ad78d24c8b81335ad3651c4c8a03f5f1de"}], "stats": {"total": 4486, "additions": 2261, "deletions": 2225}, "files": [{"sha": "8d386c05663c1843eb0611b62e215c1a0179b566", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -1,3 +1,8 @@\n+2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n+\n+\t* Makefile.tpl: Replace PWD with PWD_COMMAND.\n+\t* Makefile.in: Regenerated.\n+\n 2003-07-04  Zack Weinberg  <zack@codesourcery.com>\n \n \t* intl: New directory; see intl/ChangeLog for details."}, {"sha": "c46a6d90472a2ad62d5e11def3776573801f7562", "filename": "Makefile.in", "status": "modified", "additions": 2094, "deletions": 2092, "changes": 4186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=8c90b13a229399354769a5cee7a7872d21de23bb"}, {"sha": "8c62c20599dbc160b9f92863cda0dbd1a535b185", "filename": "Makefile.tpl", "status": "modified", "additions": 64, "deletions": 62, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -142,7 +142,9 @@ SHELL = @config_shell@\n # the environment to account for automounters.  The make variable must not\n # be called PWDCMD, otherwise the value set here is passed to make\n # subprocesses and overrides the setting from the user's environment.\n-PWD = $${PWDCMD-pwd}\n+# Don't use PWD since it is a common shell environment variable and we\n+# don't want to corrupt it.\n+PWD_COMMAND = $${PWDCMD-pwd}\n \n # compilers to use to create programs which must be run in the build\n # environment.\n@@ -534,8 +536,8 @@ maybe-[+make_target+]-gcc:\n     [+depend+]-gcc [+\n   ENDFOR depend +]\n \t@[ -f ./gcc/Makefile ] || exit 0; \\\n-\tr=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \tfor flag in $(EXTRA_GCC_FLAGS); do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n@@ -562,8 +564,8 @@ maybe-[+make_target+]-[+module+]:\n     [+depend+]-[+module+] [+\n   ENDFOR depend +]\n \t@[ -f ./[+module+]/Makefile ] || exit 0; \\\n-\tr=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \tfor flag in $(EXTRA_HOST_FLAGS); do \\\n \t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n@@ -592,8 +594,8 @@ maybe-[+make_target+]-target-[+module+]:\n     [+depend+]-target-[+module+] [+\n   ENDFOR depend +]\n \t@[ -f $(TARGET_SUBDIR)/[+module+]/Makefile ] || exit 0 ; \\\n-\tr=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \techo \"Doing [+make_target+] in $(TARGET_SUBDIR)/[+module+]\" ; \\\n \tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n@@ -624,7 +626,7 @@ dvi: do-dvi\n do-info: maybe-all-texinfo\n \n install-info: do-install-info dir.info\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \tif [ -f dir.info ] ; then \\\n \t  $(INSTALL_DATA) dir.info $(DESTDIR)$(infodir)/dir.info ; \\\n \telse true ; fi\n@@ -729,7 +731,7 @@ uninstall:\n .PHONY: install.all\n install.all: install-no-fixedincludes\n \t@if [ -f ./gcc/Makefile ] ; then \\\n-\t\tr=`${PWD}` ; export r ; \\\n+\t\tr=`${PWD_COMMAND}` ; export r ; \\\n \t\t$(SET_LIB_PATH) \\\n \t\t(cd ./gcc && \\\n \t\t$(MAKE) $(FLAGS_TO_PASS) install-headers) ; \\\n@@ -783,8 +785,8 @@ configure-build-[+module+]:\n \t@test ! -f $(BUILD_SUBDIR)/[+module+]/Makefile || exit 0; \\\n \t[ -d $(BUILD_SUBDIR)/[+module+] ] || \\\n \t  mkdir $(BUILD_SUBDIR)/[+module+];\\\n-\tr=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \tAR=\"$(AR_FOR_BUILD)\"; export AR; \\\n \tAS=\"$(AS_FOR_BUILD)\"; export AS; \\\n \tCC=\"$(CC_FOR_BUILD)\"; export CC; \\\n@@ -842,8 +844,8 @@ configure-build-[+module+]:\n .PHONY: all-build-[+module+] maybe-all-build-[+module+]\n maybe-all-build-[+module+]:\n all-build-[+module+]: configure-build-[+module+]\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t(cd $(BUILD_SUBDIR)/[+module+] && $(MAKE) all)\n [+ ENDFOR build_modules +]\n \n@@ -856,8 +858,8 @@ maybe-configure-[+module+]:\n configure-[+module+]:\n \t@test ! -f [+module+]/Makefile || exit 0; \\\n \t[ -d [+module+] ] || mkdir [+module+]; \\\n-\tr=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \tCC=\"$(CC)\"; export CC; \\\n \tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n \tCXX=\"$(CXX)\"; export CXX; \\\n@@ -892,8 +894,8 @@ configure-[+module+]:\n .PHONY: all-[+module+] maybe-all-[+module+]\n maybe-all-[+module+]:\n all-[+module+]: configure-[+module+]\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \t(cd [+module+] && $(MAKE) $(FLAGS_TO_PASS)[+ \n \t  IF with_x \n@@ -908,8 +910,8 @@ check-[+module+]:\n # This module is only tested in a native toolchain.\n check-[+module+]:\n \t@if [ '$(host)' = '$(target)' ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  r=`${PWD_COMMAND}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n \t  (cd [+module+] && $(MAKE) $(FLAGS_TO_PASS)[+ \n \t    IF with_x \n@@ -918,8 +920,8 @@ check-[+module+]:\n \tfi\n [+ ELSE check +]\n check-[+module+]:\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \t(cd [+module+] && $(MAKE) $(FLAGS_TO_PASS)[+ \n \t  IF with_x \n@@ -933,8 +935,8 @@ maybe-install-[+module+]:\n install-[+module+]:\n [+ ELSE install +]\n install-[+module+]: installdirs\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \t(cd [+module+] && $(MAKE) $(FLAGS_TO_PASS)[+ \n \t  IF with_x \n@@ -961,8 +963,8 @@ configure-target-[+module+]: $(TARGET_SUBDIR)/[+module+]/multilib.out\n \t@test ! -f $(TARGET_SUBDIR)/[+module+]/Makefile || exit 0; \\\n \t[ -d $(TARGET_SUBDIR)/[+module+] ] || \\\n \t  mkdir $(TARGET_SUBDIR)/[+module+];\\\n-\tr=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \tAR=\"$(AR_FOR_TARGET)\"; export AR; \\\n \tAS=\"$(AS_FOR_TARGET)\"; export AS; \\\n@@ -1027,8 +1029,8 @@ ENDIF raw_cxx +]\n .PHONY: all-target-[+module+] maybe-all-target-[+module+]\n maybe-all-target-[+module+]:\n all-target-[+module+]: configure-target-[+module+]\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \t(cd $(TARGET_SUBDIR)/[+module+] && \\\n \t  $(MAKE) $(TARGET_FLAGS_TO_PASS) [+\n@@ -1044,8 +1046,8 @@ maybe-check-target-[+module+]:\n check-target-[+module+]:\n [+ ELSE check +]\n check-target-[+module+]:\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \t(cd $(TARGET_SUBDIR)/[+module+] && \\\n \t  $(MAKE) $(TARGET_FLAGS_TO_PASS) [+\n@@ -1062,8 +1064,8 @@ maybe-install-target-[+module+]:\n install-target-[+module+]:\n [+ ELSE install +]\n install-target-[+module+]: installdirs\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \t(cd $(TARGET_SUBDIR)/[+module+] && \\\n \t  $(MAKE) $(TARGET_FLAGS_TO_PASS) install)\n@@ -1084,8 +1086,8 @@ maybe-configure-gcc:\n configure-gcc:\n \t@test ! -f gcc/Makefile || exit 0; \\\n \t[ -d gcc ] || mkdir gcc; \\\n-\tr=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \tCC=\"$(CC)\"; export CC; \\\n \tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n \tCXX=\"$(CXX)\"; export CXX; \\\n@@ -1125,13 +1127,13 @@ configure-gcc:\n maybe-all-gcc:\n all-gcc: configure-gcc\n \t@if [ -f gcc/stage_last ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  r=`${PWD_COMMAND}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n \t  (cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) quickstrap); \\\n \telse \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  r=`${PWD_COMMAND}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n \t  (cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) all); \\\n \tfi\n@@ -1149,13 +1151,13 @@ all-gcc: configure-gcc\n GCC_STRAP_TARGETS = bootstrap bootstrap-lean bootstrap2 bootstrap2-lean bootstrap3 bootstrap3-lean bootstrap4 bootstrap4-lean bubblestrap quickstrap cleanstrap restrap\n .PHONY: $(GCC_STRAP_TARGETS)\n $(GCC_STRAP_TARGETS): all-bootstrap configure-gcc\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \techo \"Bootstrapping the compiler\"; \\\n \tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) $@\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \tcase \"$@\" in \\\n \t  *bootstrap4-lean ) \\\n \t    msg=\"Comparing stage3 and stage4 of the compiler\"; \\\n@@ -1173,38 +1175,38 @@ $(GCC_STRAP_TARGETS): all-bootstrap configure-gcc\n \t$(SET_LIB_PATH) \\\n \techo \"$$msg\"; \\\n \tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) $$compare\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}` ; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}` ; export s; \\\n \t$(SET_LIB_PATH) \\\n \techo \"Building runtime libraries\"; \\\n \t$(MAKE) $(BASE_FLAGS_TO_PASS) $(RECURSE_FLAGS) all\n \n profiledbootstrap: all-bootstrap configure-gcc\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \techo \"Bootstrapping the compiler\"; \\\n \tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) stageprofile_build\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}` ; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}` ; export s; \\\n \t$(SET_LIB_PATH) \\\n \techo \"Building runtime libraries and training compiler\"; \\\n \t$(MAKE) $(BASE_FLAGS_TO_PASS) $(RECURSE_FLAGS) all\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \techo \"Building feedback based compiler\"; \\\n \tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) stagefeedback_build\n \n .PHONY: cross\n cross: all-texinfo all-bison all-byacc all-binutils all-gas all-ld\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(SET_LIB_PATH) \\\n \techo \"Building the C and C++ compiler\"; \\\n \tcd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) LANGUAGES=\"c c++\"\n-\t@r=`${PWD}`; export r; \\\n-\ts=`cd $(srcdir); ${PWD}` ; export s; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}` ; export s; \\\n \t$(SET_LIB_PATH) \\\n \techo \"Building runtime libraries\"; \\\n \t$(MAKE) $(BASE_FLAGS_TO_PASS) $(RECURSE_FLAGS) \\\n@@ -1214,8 +1216,8 @@ cross: all-texinfo all-bison all-byacc all-binutils all-gas all-ld\n maybe-check-gcc:\n check-gcc:\n \t@if [ -f ./gcc/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  r=`${PWD_COMMAND}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n \t  (cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) check); \\\n \telse \\\n@@ -1225,8 +1227,8 @@ check-gcc:\n .PHONY: check-gcc-c++\n check-gcc-c++:\n \t@if [ -f ./gcc/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  r=`${PWD_COMMAND}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n \t  (cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) check-c++); \\\n \telse \\\n@@ -1241,8 +1243,8 @@ check-c++:\n maybe-install-gcc:\n install-gcc:\n \t@if [ -f ./gcc/Makefile ] ; then \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}`; export s; \\\n+\t  r=`${PWD_COMMAND}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(SET_LIB_PATH) \\\n \t  (cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) install); \\\n \telse \\\n@@ -1261,8 +1263,8 @@ gcc-no-fixedincludes:\n \t  cp $(srcdir)/gcc/gsyslimits.h gcc/include/syslimits.h; \\\n \t  touch gcc/stmp-fixinc gcc/include/fixed; \\\n \t  rm -f gcc/stmp-headers gcc/stmp-int-hdrs; \\\n-\t  r=`${PWD}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD}` ; export s; \\\n+\t  r=`${PWD_COMMAND}`; export r; \\\n+\t  s=`cd $(srcdir); ${PWD_COMMAND}` ; export s; \\\n \t  $(SET_LIB_PATH) \\\n \t  (cd ./gcc && \\\n \t   $(MAKE) $(GCC_FLAGS_TO_PASS) install); \\\n@@ -1406,7 +1408,7 @@ configure-target-qthreads: $(ALL_GCC_C)\n # We use move-if-change so that it's only considered updated when it\n # actually changes, because it has to depend on a phony target.\n multilib.out: maybe-all-gcc\n-\t@r=`${PWD}`; export r; \\\n+\t@r=`${PWD_COMMAND}`; export r; \\\n \techo \"Checking multilib configuration...\"; \\\n \t$(CC_FOR_TARGET) --print-multi-lib > multilib.tmp 2> /dev/null ; \\\n \t$(SHELL) $(srcdir)/move-if-change multilib.tmp multilib.out ; \\"}, {"sha": "1e474d3e4bceb8fb9064da460ab214058b7d57a2", "filename": "config-ml.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/config-ml.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/config-ml.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config-ml.in?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -500,16 +500,16 @@ multidirs=`echo \"$multidirs\" | sed -e 's/^[ ][ ]*//' -e 's/[ ][ ]*$//' -e 's/[ ]\n \n cat > Multi.tem <<\\EOF\n \n-PWD=$${PWDCMD-pwd}\n+PWD_COMMAND=$${PWDCMD-pwd}\n \n # FIXME: There should be an @-sign in front of the `if'.\n # Leave out until this is tested a bit more.\n multi-do:\n \tif [ -z \"$(MULTIDIRS)\" ]; then \\\n \t  true; \\\n \telse \\\n-\t  rootpre=`${PWD}`/; export rootpre; \\\n-\t  srcrootpre=`cd $(srcdir); ${PWD}`/; export srcrootpre; \\\n+\t  rootpre=`${PWD_COMMAND}`/; export rootpre; \\\n+\t  srcrootpre=`cd $(srcdir); ${PWD_COMMAND}`/; export srcrootpre; \\\n \t  lib=`echo $${rootpre} | sed -e 's,^.*/\\([^/][^/]*\\)/$$,\\1,'`; \\\n \t  compiler=\"$(CC)\"; \\\n \t  for i in `$${compiler} --print-multi-lib 2>/dev/null`; do \\\n@@ -550,7 +550,7 @@ multi-clean:\n \tif [ -z \"$(MULTIDIRS)\" ]; then \\\n \t  true; \\\n \telse \\\n-\t  lib=`${PWD} | sed -e 's,^.*/\\([^/][^/]*\\)$$,\\1,'`; \\\n+\t  lib=`${PWD_COMMAND} | sed -e 's,^.*/\\([^/][^/]*\\)$$,\\1,'`; \\\n \t  for dir in Makefile $(MULTIDIRS); do \\\n \t    if [ -f ../$${dir}/$${lib}/Makefile ]; then \\\n \t      if (cd ../$${dir}/$${lib}; $(MAKE) $(FLAGS_TO_PASS) $(DO)); \\"}, {"sha": "3d5d72bdf179bfac521ae0d3bda94fcf38d795a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -1,3 +1,8 @@\n+2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n+\n+\t* config-ml.in: Replace PWD with PWD_COMMAND.\n+\t* Makefile.in: Likewise.\n+\n 2003-07-04  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* cfgloopanal.c (count_strange_loop_iterations): New static function."}, {"sha": "7190dacda2fbc310c270d281e916d34ca78bc4cc", "filename": "gcc/Makefile.in", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -199,7 +199,9 @@ SHELL = @SHELL@\n # the environment to account for automounters.  The make variable must not\n # be called PWDCMD, otherwise the value set here is passed to make\n # subprocesses and overrides the setting from the user's environment.\n-PWD = $${PWDCMD-pwd}\n+# Don't use PWD since it is a common shell environment variable and we\n+# don't want to corrupt it.\n+PWD_COMMAND = $${PWDCMD-pwd}\n # on sysV, define this as cp.\n INSTALL = @INSTALL@\n # Some systems may be missing symbolic links, regular links, or both.\n@@ -2511,7 +2513,7 @@ fixinc.sh: $(FIXINCSRCDIR)/mkfixinc.sh $(FIXINCSRCDIR)/fixincl.c \\\n \t$(FIXINCSRCDIR)/procopen.c $(FIXINCSRCDIR)/gnu-regex.c \\\n \t$(FIXINCSRCDIR)/server.c $(FIXINCSRCDIR)/gnu-regex.h \\\n \t$(FIXINCSRCDIR)/server.h $(FIXINCSRCDIR)/inclhack.def specs.ready\n-\t(MAKE=\"$(MAKE)\"; srcdir=`cd $(srcdir)/fixinc && ${PWD}` ; \\\n+\t(MAKE=\"$(MAKE)\"; srcdir=`cd $(srcdir)/fixinc && ${PWD_COMMAND}` ; \\\n \tCC=\"$(CC_FOR_BUILD)\"; CFLAGS=\"$(BUILD_CFLAGS)\"; LDFLAGS=\"$(BUILD_LDFLAGS)\"; \\\n \tWARN_CFLAGS=\"$(WARN_CFLAGS)\"; LIBERTY=`pwd`/\"$(BUILD_LIBIBERTY)\"; \\\n \texport MAKE srcdir CC CFLAGS LDFLAGS WARN_CFLAGS LIBERTY; \\\n@@ -2532,10 +2534,10 @@ stmp-fixinc: fixinc.sh gsyslimits.h\n \tfi\n \trm -rf include; mkdir include\n \t-chmod a+rx include\n-\t(TARGET_MACHINE='$(target)'; srcdir=`cd $(srcdir); ${PWD}`; \\\n+\t(TARGET_MACHINE='$(target)'; srcdir=`cd $(srcdir); ${PWD_COMMAND}`; \\\n \tSHELL='$(SHELL)' ;\\\n \texport TARGET_MACHINE srcdir SHELL ; \\\n-\t$(SHELL) ./fixinc.sh `${PWD}`/include $(SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS); \\\n+\t$(SHELL) ./fixinc.sh `${PWD_COMMAND}`/include $(SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS); \\\n \trm -f include/syslimits.h; \\\n \tif [ -f include/limits.h ]; then \\\n \t  mv include/limits.h include/syslimits.h; \\\n@@ -2697,7 +2699,7 @@ gccint.dvi: $(TEXI_GCCINT_FILES)\n \t$(TEXI2DVI) -I $(docdir) -I $(docdir)/include $(docdir)/gccint.texi\n \n gccinstall.dvi: $(TEXI_GCCINSTALL_FILES)\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(TEXI2DVI) -I $$s/doc -I $$s/doc/include -o $@ $$s/doc/install.texi\n \n cppinternals.dvi: $(TEXI_CPPINT_FILES)\n@@ -3114,7 +3116,7 @@ install-headers: $(INSTALL_HEADERS_DIR)\n # Don't need to use LN_S here since we really do need ln -s and no substitutes.\n \t-files=`cd $(DESTDIR)$(libsubdir)/include; find . -type l -print 2>/dev/null`; \\\n \tif [ $$? -eq 0 ]; then \\\n-\t  dir=`cd include; ${PWD}`; \\\n+\t  dir=`cd include; ${PWD_COMMAND}`; \\\n \t  for i in $$files; do \\\n \t    dest=`ls -ld $(DESTDIR)$(libsubdir)/include/$$i | sed -n 's/.*-> //p'`; \\\n \t    if expr \"$$dest\" : \"$$dir.*\" > /dev/null; then \\\n@@ -3136,7 +3138,7 @@ install-headers-tar: stmp-int-hdrs $(STMP_FIXPROTO) install-include-dir\n # Unless a full pathname is provided, some shells would print the new CWD,\n # found in CDPATH, corrupting the output.  We could just redirect the\n # output of `cd', but some shells lose on redirection within `()'s\n-\t(cd `${PWD}`/include ; \\\n+\t(cd `${PWD_COMMAND}`/include ; \\\n \t tar -cf - .; exit 0) | (cd $(DESTDIR)$(libsubdir)/include; tar xpf - )\n # /bin/sh on some systems returns the status of the first tar,\n # and that can lose with GNU tar which always writes a full block.\n@@ -3145,7 +3147,7 @@ install-headers-tar: stmp-int-hdrs $(STMP_FIXPROTO) install-include-dir\n # Install the include directory using cpio.\n install-headers-cpio: stmp-int-hdrs $(STMP_FIXPROTO) install-include-dir\n # See discussion about the use of `pwd` above\n-\tcd `${PWD}`/include ; \\\n+\tcd `${PWD_COMMAND}`/include ; \\\n \tfind . -print | cpio -pdum $(DESTDIR)$(libsubdir)/include\n \n # Install the include directory using cp.\n@@ -3233,8 +3235,8 @@ site.exp: ./config.status Makefile\n \t@echo \"## these variables are automatically generated by make ##\" > ./tmp0\n \t@echo \"# Do not edit here. If you wish to override these values\" >> ./tmp0\n \t@echo \"# add them to the last section\" >> ./tmp0\n-\t@echo \"set rootme \\\"`${PWD}`\\\"\" >> ./tmp0\n-\t@echo \"set srcdir \\\"`cd ${srcdir}; ${PWD}`\\\"\" >> ./tmp0\n+\t@echo \"set rootme \\\"`${PWD_COMMAND}`\\\"\" >> ./tmp0\n+\t@echo \"set srcdir \\\"`cd ${srcdir}; ${PWD_COMMAND}`\\\"\" >> ./tmp0\n \t@echo \"set host_triplet $(host)\" >> ./tmp0\n \t@echo \"set build_triplet $(build)\" >> ./tmp0\n \t@echo \"set target_triplet $(target)\" >> ./tmp0\n@@ -3315,52 +3317,52 @@ $(TESTSUITEDIR)/site.exp: site.exp\n \tsed '/set tmpdir/ s|testsuite|$(TESTSUITEDIR)|' < site.exp > $@\n \n check-g++: $(TESTSUITEDIR)/site.exp\n-\t-(rootme=`${PWD}`; export rootme; \\\n-\tsrcdir=`cd ${srcdir}; ${PWD}` ; export srcdir ; \\\n+\t-(rootme=`${PWD_COMMAND}`; export rootme; \\\n+\tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ; \\\n \tcd $(TESTSUITEDIR); \\\n \tEXPECT=${EXPECT} ; export EXPECT ; \\\n \tif [ -f $${rootme}/../expect/expect ] ; then  \\\n-\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD}` ; \\\n+\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD_COMMAND}` ; \\\n \t    export TCL_LIBRARY ; fi ; \\\n \t$(RUNTEST) --tool g++ $(RUNTESTFLAGS))\n \n check-gcc: $(TESTSUITEDIR)/site.exp\n-\t-(rootme=`${PWD}`; export rootme; \\\n-\tsrcdir=`cd ${srcdir}; ${PWD}` ; export srcdir ; \\\n+\t-(rootme=`${PWD_COMMAND}`; export rootme; \\\n+\tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ; \\\n \tcd $(TESTSUITEDIR); \\\n \tEXPECT=${EXPECT} ; export EXPECT ; \\\n \tif [ -f $${rootme}/../expect/expect ] ; then  \\\n-\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD}` ; \\\n+\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD_COMMAND}` ; \\\n \t   export TCL_LIBRARY ; fi ; \\\n \t$(RUNTEST) --tool gcc $(RUNTESTFLAGS))\n \n check-g77: $(TESTSUITEDIR)/site.exp\n-\t-(rootme=`${PWD}`; export rootme; \\\n-\tsrcdir=`cd ${srcdir}; ${PWD}` ; export srcdir ; \\\n+\t-(rootme=`${PWD_COMMAND}`; export rootme; \\\n+\tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ; \\\n \tcd $(TESTSUITEDIR); \\\n \tEXPECT=${EXPECT} ; export EXPECT ; \\\n \tif [ -f $${rootme}/../expect/expect ] ; then  \\\n-\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD}` ; \\\n+\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD_COMMAND}` ; \\\n \t   export TCL_LIBRARY ; fi ; \\\n \t$(RUNTEST) --tool g77 $(RUNTESTFLAGS))\n \n check-objc: $(TESTSUITEDIR)/site.exp\n-\t-(rootme=`${PWD}`; export rootme; \\\n-\tsrcdir=`cd ${srcdir}; ${PWD}` ; export srcdir ; \\\n+\t-(rootme=`${PWD_COMMAND}`; export rootme; \\\n+\tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ; \\\n \tcd $(TESTSUITEDIR); \\\n \tEXPECT=${EXPECT} ; export EXPECT ; \\\n \tif [ -f $${rootme}/../expect/expect ] ; then  \\\n-\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD}` ; \\\n+\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD_COMMAND}` ; \\\n \t    export TCL_LIBRARY ; fi ; \\\n \t$(RUNTEST) --tool objc $(RUNTESTFLAGS))\n \n check-consistency: testsuite/site.exp\n-\t-rootme=`${PWD}`; export rootme; \\\n-\tsrcdir=`cd ${srcdir}; ${PWD}` ; export srcdir ; \\\n+\t-rootme=`${PWD_COMMAND}`; export rootme; \\\n+\tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ; \\\n \tcd testsuite; \\\n \tEXPECT=${EXPECT} ; export EXPECT ; \\\n \tif [ -f $${rootme}/../expect/expect ] ; then  \\\n-\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD}` ; \\\n+\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD_COMMAND}` ; \\\n \t   export TCL_LIBRARY ; fi ; \\\n \t$(RUNTEST) --tool consistency $(RUNTESTFLAGS)\n "}, {"sha": "53916bbd0e331b807a4bb27dd049882f4ee4b249", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -1,3 +1,9 @@\n+2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n+\n+\t* Make-lang.in: Replace PWD with PWD_COMMAND.\n+\t* Makefile.adalib: Likewise.\n+\t* Makefile.in: Likewise.\n+\n 2003-07-04  Matt Kraai  <kraai@alumni.cmu.edu>\n \n \t* misc.c (gnat_argv): Revert last change."}, {"sha": "b1a75990f4e338534f7df9b7a9e9f0189f73c71c", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -427,32 +427,32 @@ ada.install-info:\n \n ada/gnat_ug_unx.dvi : $(srcdir)/ada/gnat_ug_unx.texi \\\n \t$(srcdir)/doc/include/fdl.texi $(srcdir)/doc/include/gcc-common.texi\n-\ts=`cd $(srcdir); ${PWD}`; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; \\\n \tcd ada && $(TEXI2DVI) -c -I $$s/doc/include -o gnat_ug_unx.dvi $$s/ada/gnat_ug_unx.texi\n \n ada/gnat_ug_vms.dvi : $(srcdir)/ada/gnat_ug_vms.texi \\\n \t$(srcdir)/doc/include/fdl.texi $(srcdir)/doc/include/gcc-common.texi\n-\ts=`cd $(srcdir); ${PWD}`; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; \\\n \tcd ada && $(TEXI2DVI) -c -I $$s/doc/include -o gnat_ug_vms.dvi $$s/ada/gnat_ug_vms.texi\n \n ada/gnat_ug_vxw.dvi : $(srcdir)/ada/gnat_ug_vxw.texi \\\n \t$(srcdir)/doc/include/fdl.texi $(srcdir)/doc/include/gcc-common.texi\n-\ts=`cd $(srcdir); ${PWD}`; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; \\\n \tcd ada && $(TEXI2DVI) -c -I $$s/doc/include -o gnat_ug_vxw.dvi $$s/ada/gnat_ug_vxw.texi\n \n ada/gnat_ug_wnt.dvi : $(srcdir)/ada/gnat_ug_wnt.texi \\\n \t$(srcdir)/doc/include/fdl.texi $(srcdir)/doc/include/gcc-common.texi\n-\ts=`cd $(srcdir); ${PWD}`; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; \\\n \tcd ada && $(TEXI2DVI) -c -I $$s/doc/include -o gnat_ug_wnt.dvi $$s/ada/gnat_ug_wnt.texi\n \n ada/gnat_rm.dvi : $(srcdir)/ada/gnat_rm.texi \\\n \t$(srcdir)/doc/include/fdl.texi $(srcdir)/doc/include/gcc-common.texi\n-\ts=`cd $(srcdir); ${PWD}`; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; \\\n \tcd ada && $(TEXI2DVI) -c -I $$s/doc/include -o gnat_rm.dvi $$s/ada/gnat_rm.texi\n \n ada/gnat-style.dvi : $(srcdir)/ada/gnat-style.texi \\\n \t$(srcdir)/doc/include/fdl.texi\n-\ts=`cd $(srcdir); ${PWD}`; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; \\\n \tcd ada && $(TEXI2DVI) -c -I $$s/doc/include -o gnat-style.dvi $$s/ada/gnat-style.texi\n \n ada.dvi: ada/gnat_ug_vms.dvi ada/gnat_ug_wnt.dvi \\"}, {"sha": "873d2ff8c5ff11627bfb9ecc1103584bd7df45da", "filename": "gcc/ada/Makefile.adalib", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Fada%2FMakefile.adalib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Fada%2FMakefile.adalib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.adalib?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -42,11 +42,11 @@\n # updating the value of the environment variable ADA_OBJECTS_PATH\n \n SHELL=sh\n-PWD=$${PWDCMD-pwd}\n+PWD_COMMAND=$${PWDCMD-pwd}\n \n CC = gcc\n AR = ar\n-GNAT_ROOT = $(shell cd $(ROOT);${PWD})/\n+GNAT_ROOT = $(shell cd $(ROOT);${PWD_COMMAND})/\n target = $(shell $(CC) -dumpmachine)\n version = $(shell $(CC) -dumpversion)\n ADA_INCLUDE_PATH = $(GNAT_ROOT)lib/gcc-lib/$(target)/$(version)/adainclude/"}, {"sha": "c10bbc4a1034a3ecde94d23de79fae882fd920f0", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -115,7 +115,7 @@ RANLIB = ranlib\n # Test to use to see whether ranlib exists on the system.\n RANLIB_TEST = [ -f /usr/bin/ranlib -o -f /bin/ranlib ]\n SHELL = @SHELL@\n-PWD = $${PWDCMD-pwd}\n+PWD_COMMAND = $${PWDCMD-pwd}\n # How to copy preserving the date\n INSTALL_DATA_DATE = cp -p\n MAKEINFO = makeinfo\n@@ -187,10 +187,10 @@ host_canonical=@host@\n srcdir = @srcdir@\n VPATH = @srcdir@\n \n-fsrcdir := $(shell cd $(srcdir);${PWD})\n-fsrcpfx := $(shell cd $(srcdir);${PWD})/\n-fcurdir := $(shell ${PWD})\n-fcurpfx := $(shell ${PWD})/\n+fsrcdir := $(shell cd $(srcdir);${PWD_COMMAND})\n+fsrcpfx := $(shell cd $(srcdir);${PWD_COMMAND})/\n+fcurdir := $(shell ${PWD_COMMAND})\n+fcurpfx := $(shell ${PWD_COMMAND})/\n \n # Top build directory, relative to here.\n top_builddir = .."}, {"sha": "3a834d4d19e50e9de84c8c2b0ee0803d91f6f010", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -292,7 +292,7 @@ xscale-*-*)\n \t;;\n i[34567]86-*-*)\n \tcpu_type=i386\n-\textra_headers=\"mmintrin.h xmmintrin.h emmintrin.h\"\n+\textra_headers=\"mmintrin.h xmmintrin.h emmintrin.h pmmintrin.h\"\n \t;;\n x86_64-*-*)\n \tcpu_type=i386"}, {"sha": "7031e6e4253dc602ad6a029d7e93ef7b893d0438", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -1,3 +1,7 @@\n+2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n+\n+\t* Make-lang.in: Replace PWD with PWD_COMMAND.\n+\n 2003-07-02  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* tree1.c (treelang_init_options): Update prototype."}, {"sha": "b6ce0fe72debb773dea272d018a52ba836ac07aa", "filename": "gcc/treelang/Make-lang.in", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Ftreelang%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/gcc%2Ftreelang%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FMake-lang.in?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -156,7 +156,7 @@ treelang.dvi: $(srcdir)/treelang/treelang.texi \\\n \t $(srcdir)/doc/include/gpl.texi \\\n \t $(srcdir)/doc/include/fdl.texi \\\n \t $(srcdir)/doc/include/funding.texi\n-\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \tcd treelang && $(TEXI2DVI) -I $$s/doc/include $$s/treelang/treelang.texi\n \n treelang.generated-manpages:\n@@ -293,23 +293,23 @@ treelang.check: $(TESTSUITEDIR)/site.exp\n # patch files for new empty files as required for cvs.\n # STAMP does not cut it here as I need an empty file.\n \ttouch $(srcdir)/testsuite/treelang/{a01gcco01runpgmerr,a01gcc.out01,a01gcc.out01err}\n-\t-rootme=`${PWD}`; export rootme; \\\n-\tsrcdir=`cd ${srcdir}; ${PWD}` ; export srcdir ; \\\n+\t-rootme=`${PWD_COMMAND}`; export rootme; \\\n+\tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ; \\\n \tcd testsuite; \\\n \tEXPECT=${EXPECT} ; export EXPECT ; \\\n \tTRANSFORM=$(program_transform_name); export TRANSFORM; \\\n \tif [ -f $${rootme}/../expect/expect ] ; then  \\\n-\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD}` ; \\\n+\t   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; ${PWD_COMMAND}` ; \\\n \t   export TCL_LIBRARY ; fi ; \\\n-\tPATH=`cd ..;${PWD}`:$$PATH; export PATH; \\\n-\tgcc_extras=\"-B`cd ..;${PWD}` -B`cd ..;${PWD}`/treelang\"; export gcc_extras; \\\n+\tPATH=`cd ..;${PWD_COMMAND}`:$$PATH; export PATH; \\\n+\tgcc_extras=\"-B`cd ..;${PWD_COMMAND}` -B`cd ..;${PWD_COMMAND}`/treelang\"; export gcc_extras; \\\n \t$(RUNTEST) --tool treelang $(RUNTESTFLAGS)\n \trm $(srcdir)/testsuite/treelang/{a01gcco01runpgmerr,a01gcc.out01,a01gcc.out01err}\n #\tGCC_EXTRAS=\"$(GCC_EXTRAS)\"; export GCC_EXTRAS; \\\n \n # copy the output files from the current test to source ie say the new results are OK\n treelang.check.fix: force\n-\tsrcdir=`cd ${srcdir}; ${PWD}` ; export srcdir ;\n+\tsrcdir=`cd ${srcdir}; ${PWD_COMMAND}` ; export srcdir ;\n \t-cp testsuite/treelang/*.out* t\n \t-cp testsuite/treelang/*runpgm* t\n \t-rm -f t/*nofilename"}, {"sha": "17b58403cd2d41dff593f9fe22707a1cc8faf4c1", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -1,3 +1,7 @@\n+2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n+\n+\t* Makefile.in: Replace PWD with PWD_COMMAND.\n+\n 2003-06-15  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* libU77/bes.c, libU77/dbes.c: Remove."}, {"sha": "7a2c1d9be9a1d4e4f91193c5c66bf621cfc0be87", "filename": "libf2c/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/libf2c%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/libf2c%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FMakefile.in?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -20,7 +20,7 @@\n #02111-1307, USA.\n \n SHELL = @SHELL@\n-PWD = $${PWDCMD-pwd}\n+PWD_COMMAND = $${PWDCMD-pwd}\n MAKEOVERRIDES=\n .NOEXPORTS:\n \n@@ -259,8 +259,8 @@ rebuilt: configure\n         installcheck installdirs all-unilib\n \n subdir_do:\n-\t@rootpre=`${PWD}`/; export rootpre; \\\n-\tsrcrootpre=`cd $(srcdir); ${PWD}`/; export srcrootpre; \\\n+\t@rootpre=`${PWD_COMMAND}`/; export rootpre; \\\n+\tsrcrootpre=`cd $(srcdir); ${PWD_COMMAND}`/; export srcrootpre; \\\n \tfor i in .. $(DODIRS); do \\\n \t  if [ x$$i != x.. ]; then \\\n \t    if [ -f ./$$i/Makefile ]; then \\"}, {"sha": "469692d56b036248ac0448e34f44d4292cb08e86", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -1,3 +1,9 @@\n+2003-07-04  H.J. Lu <hongjiu.lu@intel.com>\n+\n+\t* Makefile.am: Replace PWD with PWD_COMMAND.\n+\t* Makefile.in: Regenerated.\n+\t* docs/html/Makefile: Likewise.\n+\n 2003-07-04  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/valarray_array.h: Fully qualify standard"}, {"sha": "e509f81587a1a08fdbf72d97dfbe46b7216ea75f", "filename": "libstdc++-v3/Makefile.am", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/libstdc%2B%2B-v3%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/libstdc%2B%2B-v3%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.am?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -29,24 +29,24 @@ SUBDIRS = include libmath libsupc++ src po testsuite\n \n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n \n-PWD = $${PWDCMD-pwd}\n+PWD_COMMAND = $${PWDCMD-pwd}\n \n # These rules are messy, but are hella worth it.\n doxygen:\n-\t-(srcdir=`cd ${top_srcdir}; ${PWD}`; \\\n-\t  builddir=`${PWD}`; \\\n+\t-(srcdir=`cd ${top_srcdir}; ${PWD_COMMAND}`; \\\n+\t  builddir=`${PWD_COMMAND}`; \\\n \t  /bin/sh ${srcdir}/docs/doxygen/run_doxygen \\\n \t            --mode=user $${srcdir} $${builddir})\n \n doxygen-maint:\n-\t-(srcdir=`cd ${top_srcdir}; ${PWD}`; \\\n-\t  builddir=`${PWD}`; \\\n+\t-(srcdir=`cd ${top_srcdir}; ${PWD_COMMAND}`; \\\n+\t  builddir=`${PWD_COMMAND}`; \\\n \t  /bin/sh ${srcdir}/docs/doxygen/run_doxygen \\\n \t            --mode=maint $${srcdir} $${builddir})\n \n doxygen-man:\n-\t-(srcdir=`cd ${top_srcdir}; ${PWD}`; \\\n-\t  builddir=`${PWD}`; \\\n+\t-(srcdir=`cd ${top_srcdir}; ${PWD_COMMAND}`; \\\n+\t  builddir=`${PWD_COMMAND}`; \\\n \t  /bin/sh ${srcdir}/docs/doxygen/run_doxygen \\\n \t            --mode=man $${srcdir} $${builddir})\n "}, {"sha": "0234b75f11e32cf44158fc0398a4f41a81863fc8", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -151,7 +151,7 @@ SUBDIRS = include libmath libsupc++ src po testsuite\n \n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n \n-PWD = $${PWDCMD-pwd}\n+PWD_COMMAND = $${PWDCMD-pwd}\n \n # Multilib support.\n MAKEOVERRIDES = \n@@ -278,7 +278,7 @@ maintainer-clean-hdr:\n all-recursive install-data-recursive install-exec-recursive \\\n installdirs-recursive install-recursive uninstall-recursive install-info-recursive \\\n check-recursive installcheck-recursive info-recursive dvi-recursive:\n-\t@set fnord $(MAKEFLAGS); amf=$$2; \\\n+\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n \tdot_seen=no; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n@@ -298,7 +298,7 @@ check-recursive installcheck-recursive info-recursive dvi-recursive:\n \n mostlyclean-recursive clean-recursive distclean-recursive \\\n maintainer-clean-recursive:\n-\t@set fnord $(MAKEFLAGS); amf=$$2; \\\n+\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n \tdot_seen=no; \\\n \trev=''; list='$(SUBDIRS)'; for subdir in $$list; do \\\n \t  rev=\"$$subdir $$rev\"; \\\n@@ -478,20 +478,20 @@ mostlyclean distclean maintainer-clean\n \n # These rules are messy, but are hella worth it.\n doxygen:\n-\t-(srcdir=`cd ${top_srcdir}; ${PWD}`; \\\n-\t  builddir=`${PWD}`; \\\n+\t-(srcdir=`cd ${top_srcdir}; ${PWD_COMMAND}`; \\\n+\t  builddir=`${PWD_COMMAND}`; \\\n \t  /bin/sh ${srcdir}/docs/doxygen/run_doxygen \\\n \t            --mode=user $${srcdir} $${builddir})\n \n doxygen-maint:\n-\t-(srcdir=`cd ${top_srcdir}; ${PWD}`; \\\n-\t  builddir=`${PWD}`; \\\n+\t-(srcdir=`cd ${top_srcdir}; ${PWD_COMMAND}`; \\\n+\t  builddir=`${PWD_COMMAND}`; \\\n \t  /bin/sh ${srcdir}/docs/doxygen/run_doxygen \\\n \t            --mode=maint $${srcdir} $${builddir})\n \n doxygen-man:\n-\t-(srcdir=`cd ${top_srcdir}; ${PWD}`; \\\n-\t  builddir=`${PWD}`; \\\n+\t-(srcdir=`cd ${top_srcdir}; ${PWD_COMMAND}`; \\\n+\t  builddir=`${PWD_COMMAND}`; \\\n \t  /bin/sh ${srcdir}/docs/doxygen/run_doxygen \\\n \t            --mode=man $${srcdir} $${builddir})\n "}, {"sha": "c252ca2631bd6a3bb497ede8df3a1b662158501e", "filename": "libstdc++-v3/docs/html/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c90b13a229399354769a5cee7a7872d21de23bb/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c90b13a229399354769a5cee7a7872d21de23bb/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2FMakefile?ref=8c90b13a229399354769a5cee7a7872d21de23bb", "patch": "@@ -1,5 +1,5 @@\n \n-PWD=$${PWDCMD-pwd}\n+PWD_COMMAND=$${PWDCMD-pwd}\n MAKEINFO=makeinfo\n INC=../../../gcc/doc/include\n \n@@ -25,7 +25,7 @@ documentation.html: $(wildcard */howto.html)\n \trm tmp.top tmp.middle tmp.bottom\n \n faq/index.txt: faq/index.html\n-\tlynx -dump $< | sed \"s%file://localhost`${PWD}`%..%\" > $@\n+\tlynx -dump $< | sed \"s%file://localhost`${PWD_COMMAND}`%..%\" > $@\n \n 17_intro/porting.html: 17_intro/porting.texi\n \t${MAKEINFO} -I ${INC} --html --no-split $< -o $@"}]}