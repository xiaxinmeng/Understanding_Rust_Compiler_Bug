{"sha": "a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc0NzNkYzViNTdhN2M4OTBmNTJjZjlkOTBhOTFkNzVkM2Q2OWE5ZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2017-07-26T19:13:23Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2017-07-26T19:13:23Z"}, "message": "x86: Properly check saved register CFA offset\n\nX86 prologue saves register at CFA offset.  Since its location on stack\nis computed as CFA - its CFA_OFFSET, CFA_OFFSET points the end of the\nsaved register area on stack.  This patch updates sp_valid_at and\nfp_valid_at to properly check saved register CFA offset.\n\ngcc/\n\n\tPR target/81563\n\t* config/i386/i386.c (sp_valid_at): Properly check CFA offset.\n\t(fp_valid_at): Likewise.\n\ngcc/testsuite/\n\n\tPR target/81563\n\t* gcc.target/i386/pr81563.c: New test\n\nFrom-SVN: r250587", "tree": {"sha": "e0af4bc0092b8bb4f35312a7eba772cf30f8a203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0af4bc0092b8bb4f35312a7eba772cf30f8a203"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a39d4348cdf4a5521710389143b93d9047e23a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a39d4348cdf4a5521710389143b93d9047e23a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a39d4348cdf4a5521710389143b93d9047e23a46"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "64407df46c81f36987e7fdd2289144e974bacb8e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e", "patch": "@@ -1,3 +1,9 @@\n+2017-07-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/81563\n+\t* config/i386/i386.c (sp_valid_at): Properly check CFA offset.\n+\t(fp_valid_at): Likewise.\n+\n 2017-07-26  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64.c (cortexa57_addrcost_table): Remove."}, {"sha": "f1486ff3750dc49799dce44ac0333df2816f399a", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e", "patch": "@@ -13102,24 +13102,26 @@ choose_baseaddr_len (unsigned int regno, HOST_WIDE_INT offset)\n   return len;\n }\n \n-/* Determine if the stack pointer is valid for accessing the cfa_offset.  */\n+/* Determine if the stack pointer is valid for accessing the cfa_offset.\n+   The register is saved at CFA - CFA_OFFSET.  */\n \n static inline bool\n sp_valid_at (HOST_WIDE_INT cfa_offset)\n {\n   const struct machine_frame_state &fs = cfun->machine->fs;\n   return fs.sp_valid && !(fs.sp_realigned\n-\t\t\t  && cfa_offset < fs.sp_realigned_offset);\n+\t\t\t  && cfa_offset <= fs.sp_realigned_offset);\n }\n \n-/* Determine if the frame pointer is valid for accessing the cfa_offset.  */\n+/* Determine if the frame pointer is valid for accessing the cfa_offset.\n+   The register is saved at CFA - CFA_OFFSET.  */\n \n static inline bool\n fp_valid_at (HOST_WIDE_INT cfa_offset)\n {\n   const struct machine_frame_state &fs = cfun->machine->fs;\n   return fs.fp_valid && !(fs.sp_valid && fs.sp_realigned\n-\t\t\t  && cfa_offset >= fs.sp_realigned_offset);\n+\t\t\t  && cfa_offset > fs.sp_realigned_offset);\n }\n \n /* Choose a base register based upon alignment requested, speed and/or"}, {"sha": "61d174388a53fc14023ec59417cf1f8ae742ad05", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e", "patch": "@@ -1,3 +1,8 @@\n+2017-07-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/81563\n+\t* gcc.target/i386/pr81563.c: New test\n+\n 2017-07-26  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR target/79041"}, {"sha": "ebfd583daf5b53fa80d628b011dc12849db73bc1", "filename": "gcc/testsuite/gcc.target/i386/pr81563.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81563.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81563.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81563.c?ref=a7473dc5b57a7c890f52cf9d90a91d75d3d69a9e", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile { target ia32 } } */\n+/* { dg-options \"-O2 -maccumulate-outgoing-args -mincoming-stack-boundary=2 -mpreferred-stack-boundary=3 -mregparm=3 -mtune-ctrl=epilogue_using_move\" } */\n+\n+extern void bar (long long int, int);\n+\n+long long int\n+fn1 (long long int x)\n+{\n+  bar (x, 1);\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler-times \"movl\\[\\\\t \\]*-8\\\\(%ebp\\\\),\\[\\\\t \\]*%esi\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movl\\[\\\\t \\]*-4\\\\(%ebp\\\\),\\[\\\\t \\]*%edi\" 1 } } */"}]}