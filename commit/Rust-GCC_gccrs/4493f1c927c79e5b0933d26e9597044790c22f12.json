{"sha": "4493f1c927c79e5b0933d26e9597044790c22f12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ5M2YxYzkyN2M3OWU1YjA5MzNkMjZlOTU5NzA0NDc5MGMyMmYxMg==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-14T15:22:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-14T15:22:37Z"}, "message": "Merge #673\n\n673: Allow GCC to decide to inline functions is possible r=philberty a=philberty\n\nBy default the forked GCC wrapper from the go front-end was marking\r\nall functions as DECL_UNINLINABLE this changes the behaviour to\r\nallow GCC to decide what can be inlined.\r\n\r\nFixes #547\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "f538fb40501e06f3acfe5269d21ba290749697f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f538fb40501e06f3acfe5269d21ba290749697f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4493f1c927c79e5b0933d26e9597044790c22f12", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhQL49CRBK7hj4Ov3rIwAAR7YIAB2Fu1rsPvDT4LT7Xm74jFOK\nWPiMEpvbcx1ipRx0GsoRdFPtwb0fKarrmSq+M370vYRVOUB5GXmswxkBhQ4Y37tZ\nFwWW6U6WAREl4VQF6Lr+vPnAvk01K5U8fDBsc2kFOyiNLtW3wB0tv/S6t1zbTH4p\n525hnWz7VArl02Q37IGI9VZksiIYkI+FD6HxeFamUBBA3Y9aQHFzWJRQwA62H2iu\n5KQ3QIGbEdfCCWO/tPhJnqkfGLiKM9MEwJoOi/TTRo67zNBzTlr9L+5Lm3cvWurT\nihrj8fz4F4NY8/COkJ1EnOR8V83PXuWHy5nuHE7yFWefpMThpFZtkBB6vVml/As=\n=FTKN\n-----END PGP SIGNATURE-----\n", "payload": "tree f538fb40501e06f3acfe5269d21ba290749697f6\nparent c8ffaa101c936822f5853a276d530da09c96cf52\nparent 9b95c508298a1deac86f7994366b68833655c70f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1631632957 +0000\ncommitter GitHub <noreply@github.com> 1631632957 +0000\n\nMerge #673\n\n673: Allow GCC to decide to inline functions is possible r=philberty a=philberty\n\nBy default the forked GCC wrapper from the go front-end was marking\r\nall functions as DECL_UNINLINABLE this changes the behaviour to\r\nallow GCC to decide what can be inlined.\r\n\r\nFixes #547\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4493f1c927c79e5b0933d26e9597044790c22f12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4493f1c927c79e5b0933d26e9597044790c22f12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4493f1c927c79e5b0933d26e9597044790c22f12/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8ffaa101c936822f5853a276d530da09c96cf52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ffaa101c936822f5853a276d530da09c96cf52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8ffaa101c936822f5853a276d530da09c96cf52"}, {"sha": "9b95c508298a1deac86f7994366b68833655c70f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b95c508298a1deac86f7994366b68833655c70f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b95c508298a1deac86f7994366b68833655c70f"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "a4de0a32bc917f8c73cc4529841378b0f5a45e92", "filename": "gcc/rust/rust-backend.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493f1c927c79e5b0933d26e9597044790c22f12/gcc%2Frust%2Frust-backend.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493f1c927c79e5b0933d26e9597044790c22f12/gcc%2Frust%2Frust-backend.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-backend.h?ref=4493f1c927c79e5b0933d26e9597044790c22f12", "patch": "@@ -830,10 +830,9 @@ class Backend\n   // the definition will be in another compilation unit.\n   static const unsigned int function_is_declaration = 1 << 1;\n \n-  // Set if the function can be inlined.  This is normally set, but is\n-  // false for functions that may not be inlined because they call\n+  // Set if the function should never be inlined because they call\n   // recover and must be visible for correct panic recovery.\n-  static const unsigned int function_is_inlinable = 1 << 2;\n+  static const unsigned int function_is_uninlinable = 1 << 2;\n \n   // Set if the function does not return.  This is set for the\n   // implementation of panic."}, {"sha": "efc78238578b204d0913683b573afd3ea1ef25c2", "filename": "gcc/rust/rust-gcc.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4493f1c927c79e5b0933d26e9597044790c22f12/gcc%2Frust%2Frust-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4493f1c927c79e5b0933d26e9597044790c22f12/gcc%2Frust%2Frust-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-gcc.cc?ref=4493f1c927c79e5b0933d26e9597044790c22f12", "patch": "@@ -3370,7 +3370,7 @@ Gcc_backend::function (Btype *fntype, const std::string &name,\n       DECL_CONTEXT (resdecl) = decl;\n       DECL_RESULT (decl) = resdecl;\n     }\n-  if ((flags & function_is_inlinable) == 0)\n+  if ((flags & function_is_uninlinable) != 0)\n     DECL_UNINLINABLE (decl) = 1;\n   if ((flags & function_does_not_return) != 0)\n     TREE_THIS_VOLATILE (decl) = 1;"}]}