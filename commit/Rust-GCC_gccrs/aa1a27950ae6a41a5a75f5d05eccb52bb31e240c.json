{"sha": "aa1a27950ae6a41a5a75f5d05eccb52bb31e240c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWExYTI3OTUwYWU2YTQxYTVhNzVmNWQwNWVjY2I1MmJiMzFlMjQwYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-12-10T16:46:05Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-12-10T16:46:05Z"}, "message": "[AArch64] Don't allow partial SVE modes in GPRs\n\nWith -msve-vector-bits=N, the payload of some partial SVE modes can\nbe 16 bytes or smaller, which makes them small enough to fit in a\npair of GPRs.  We specifically don't want that, because the payload\nis distributed evenly across the SVE register rather than collected\nat one end.  Marshalling it into a GPR via register operations would\nbe expensive.\n\n2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64.c (aarch64_hard_regno_mode_ok): Don't\n\tallow SVE modes in GPRs.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/mixed_size_7.c: New test.\n\nFrom-SVN: r279174", "tree": {"sha": "2c7f15e37418b7b4d02415a81e042a338b5a7f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c7f15e37418b7b4d02415a81e042a338b5a7f13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30f8bf3d6c072a8fce14e8a003dff485a9068a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f8bf3d6c072a8fce14e8a003dff485a9068a97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30f8bf3d6c072a8fce14e8a003dff485a9068a97"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "f848de6b65c6822ab96afb5f6e0cf4902171c89a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa1a27950ae6a41a5a75f5d05eccb52bb31e240c", "patch": "@@ -1,3 +1,8 @@\n+2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_hard_regno_mode_ok): Don't\n+\tallow SVE modes in GPRs.\n+\n 2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/iterators.md (vccore): New iterator."}, {"sha": "b0aca03bcb4fa338065c3f365fd75d31367ce300", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=aa1a27950ae6a41a5a75f5d05eccb52bb31e240c", "patch": "@@ -2019,9 +2019,11 @@ aarch64_hard_regno_mode_ok (unsigned regno, machine_mode mode)\n \n   if (GP_REGNUM_P (regno))\n     {\n+      if (vec_flags & VEC_ANY_SVE)\n+\treturn false;\n       if (known_le (GET_MODE_SIZE (mode), 8))\n \treturn true;\n-      else if (known_le (GET_MODE_SIZE (mode), 16))\n+      if (known_le (GET_MODE_SIZE (mode), 16))\n \treturn (regno & 1) == 0;\n     }\n   else if (FP_REGNUM_P (regno))"}, {"sha": "4e52f2a48b2b76dbfe7f6746d41ddd2cf93c520b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa1a27950ae6a41a5a75f5d05eccb52bb31e240c", "patch": "@@ -1,3 +1,7 @@\n+2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/mixed_size_7.c: New test.\n+\n 2019-12-10  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/sve/mixed_size_6.c: New test."}, {"sha": "3a403c7aeab1e30fe898d9507d2335139e510a34", "filename": "gcc/testsuite/gcc.target/aarch64/sve/mixed_size_7.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmixed_size_7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa1a27950ae6a41a5a75f5d05eccb52bb31e240c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmixed_size_7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fmixed_size_7.c?ref=aa1a27950ae6a41a5a75f5d05eccb52bb31e240c", "patch": "@@ -0,0 +1,28 @@\n+/* Originally gcc.dg/vect/bb-slp-6.c */\n+/* { dg-options \"-O2 -ftree-vectorize -msve-vector-bits=256 -fno-vect-cost-model\" } */\n+\n+#define N 16\n+\n+unsigned int out[N];\n+unsigned int in[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};\n+\n+__attribute__ ((noinline)) int\n+main1 (unsigned int x, unsigned int y)\n+{\n+  int i;\n+  unsigned int *pin = &in[0];\n+  unsigned int *pout = &out[0];\n+  unsigned int a0, a1, a2, a3;\n+\n+  a0 = *pin++ + 23;\n+  a1 = *pin++ + 142;\n+  a2 = *pin++ + 2;\n+  a3 = *pin++ + 31;\n+\n+  *pout++ = a0 * x;\n+  *pout++ = a1 * y;\n+  *pout++ = a2 * x;\n+  *pout++ = a3 * y;\n+\n+  return 0;\n+}"}]}