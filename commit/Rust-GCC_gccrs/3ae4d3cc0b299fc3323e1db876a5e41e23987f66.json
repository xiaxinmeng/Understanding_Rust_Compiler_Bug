{"sha": "3ae4d3cc0b299fc3323e1db876a5e41e23987f66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FlNGQzY2MwYjI5OWZjMzMyM2UxZGI4NzZhNWU0MWUyMzk4N2Y2Ng==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2007-11-26T06:26:18Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2007-11-26T06:26:18Z"}, "message": "re PR c/27898 (Compile failure with --combine and anonymous structures)\n\nPR c/27898\n* c-typeck.c (tagged_types_tu_compatible_p): Enable exact\nmatches between anonymous union fields.\n\nFrom-SVN: r130425", "tree": {"sha": "4d5ea3690c637ef7739154c05ab7fee21778b1b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d5ea3690c637ef7739154c05ab7fee21778b1b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ae4d3cc0b299fc3323e1db876a5e41e23987f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae4d3cc0b299fc3323e1db876a5e41e23987f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ae4d3cc0b299fc3323e1db876a5e41e23987f66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae4d3cc0b299fc3323e1db876a5e41e23987f66/comments", "author": null, "committer": null, "parents": [{"sha": "3c8da8a5e064ffaea9f97a118844f0ace157ab81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c8da8a5e064ffaea9f97a118844f0ace157ab81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c8da8a5e064ffaea9f97a118844f0ace157ab81"}], "stats": {"total": 54, "additions": 32, "deletions": 22}, "files": [{"sha": "e500186c6c5b2dd367c8373bbe63d9b9be59cdb8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae4d3cc0b299fc3323e1db876a5e41e23987f66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae4d3cc0b299fc3323e1db876a5e41e23987f66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ae4d3cc0b299fc3323e1db876a5e41e23987f66", "patch": "@@ -1,3 +1,9 @@\n+2007-11-26  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR c/27898\n+\t* c-typeck.c (tagged_types_tu_compatible_p): Enable exact\n+\tmatches between anonymous union fields.\n+\n 2007-11-26  Alexandre Oliva  <aoliva@redhat.com>, Jan Hubicka  <jh@suse.cz>\n \n \t* tree-ssa-live.c (remove_unused_scope_block_p): Drop"}, {"sha": "6d94cabdf99e4cdb3079f7bfbbc32f2ddef4a9da", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae4d3cc0b299fc3323e1db876a5e41e23987f66/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae4d3cc0b299fc3323e1db876a5e41e23987f66/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=3ae4d3cc0b299fc3323e1db876a5e41e23987f66", "patch": "@@ -1233,11 +1233,12 @@ tagged_types_tu_compatible_p (const_tree t1, const_tree t2)\n \t  {\n \t    int result;\n \n-\n-\t    if (DECL_NAME (s1) == NULL\n-\t\t|| DECL_NAME (s1) != DECL_NAME (s2))\n+\t    if (DECL_NAME (s1) != DECL_NAME (s2))\n \t      break;\n \t    result = comptypes_internal (TREE_TYPE (s1), TREE_TYPE (s2));\n+\n+\t    if (result != 1 && !DECL_NAME (s1))\n+\t      break;\n \t    if (result == 0)\n \t      {\n \t\ttu->val = 0;\n@@ -1264,28 +1265,31 @@ tagged_types_tu_compatible_p (const_tree t1, const_tree t2)\n \t  {\n \t    bool ok = false;\n \n-\t    if (DECL_NAME (s1) != NULL)\n-\t      for (s2 = TYPE_FIELDS (t2); s2; s2 = TREE_CHAIN (s2))\n-\t\tif (DECL_NAME (s1) == DECL_NAME (s2))\n-\t\t  {\n-\t\t    int result;\n-\t\t    result = comptypes_internal (TREE_TYPE (s1), TREE_TYPE (s2));\n-\t\t    if (result == 0)\n-\t\t      {\n-\t\t\ttu->val = 0;\n-\t\t\treturn 0;\n-\t\t      }\n-\t\t    if (result == 2)\n-\t\t      needs_warning = true;\n+\t    for (s2 = TYPE_FIELDS (t2); s2; s2 = TREE_CHAIN (s2))\n+\t      if (DECL_NAME (s1) == DECL_NAME (s2))\n+\t\t{\n+\t\t  int result;\n \n-\t\t    if (TREE_CODE (s1) == FIELD_DECL\n-\t\t\t&& simple_cst_equal (DECL_FIELD_BIT_OFFSET (s1),\n-\t\t\t\t\t     DECL_FIELD_BIT_OFFSET (s2)) != 1)\n-\t\t      break;\n+\t\t  result = comptypes_internal (TREE_TYPE (s1), TREE_TYPE (s2));\n+\n+\t\t  if (result != 1 && !DECL_NAME (s1))\n+\t\t    continue;\n+\t\t  if (result == 0)\n+\t\t    {\n+\t\t      tu->val = 0;\n+\t\t      return 0;\n+\t\t    }\n+\t\t  if (result == 2)\n+\t\t    needs_warning = true;\n \n-\t\t    ok = true;\n+\t\t  if (TREE_CODE (s1) == FIELD_DECL\n+\t\t      && simple_cst_equal (DECL_FIELD_BIT_OFFSET (s1),\n+\t\t\t\t\t   DECL_FIELD_BIT_OFFSET (s2)) != 1)\n \t\t    break;\n-\t\t  }\n+\n+\t\t  ok = true;\n+\t\t  break;\n+\t\t}\n \t    if (!ok)\n \t      {\n \t\ttu->val = 0;"}]}