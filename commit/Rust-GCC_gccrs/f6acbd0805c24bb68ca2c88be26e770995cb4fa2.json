{"sha": "f6acbd0805c24bb68ca2c88be26e770995cb4fa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZhY2JkMDgwNWMyNGJiNjhjYTJjODhiZTI2ZTc3MDk5NWNiNGZhMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-27T23:45:46Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-27T23:45:46Z"}, "message": "libgo: update to Go1.10rc1\n    \n    Reviewed-on: https://go-review.googlesource.com/90295\n\nFrom-SVN: r257127", "tree": {"sha": "4ffe6d6bcf7b916038593a991f465d2277985386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ffe6d6bcf7b916038593a991f465d2277985386"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6acbd0805c24bb68ca2c88be26e770995cb4fa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6acbd0805c24bb68ca2c88be26e770995cb4fa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6acbd0805c24bb68ca2c88be26e770995cb4fa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6acbd0805c24bb68ca2c88be26e770995cb4fa2/comments", "author": null, "committer": null, "parents": [{"sha": "d779dffc4b6ec69cb51b426f779eca4bc37fd063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d779dffc4b6ec69cb51b426f779eca4bc37fd063", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d779dffc4b6ec69cb51b426f779eca4bc37fd063"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "cda364f92921661b25b8f9e797392cc8b04b2b59", "filename": "libgo/go/cmd/go/testdata/src/coverdot1/p.go", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6acbd0805c24bb68ca2c88be26e770995cb4fa2/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fsrc%2Fcoverdot1%2Fp.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6acbd0805c24bb68ca2c88be26e770995cb4fa2/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fsrc%2Fcoverdot1%2Fp.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fsrc%2Fcoverdot1%2Fp.go?ref=f6acbd0805c24bb68ca2c88be26e770995cb4fa2", "patch": "@@ -0,0 +1,3 @@\n+package coverdot1\n+\n+func F() {}"}, {"sha": "80f79aec838b707c8037e0a241040a0d1d08a799", "filename": "libgo/go/cmd/go/testdata/src/coverdot2/p.go", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6acbd0805c24bb68ca2c88be26e770995cb4fa2/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fsrc%2Fcoverdot2%2Fp.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6acbd0805c24bb68ca2c88be26e770995cb4fa2/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fsrc%2Fcoverdot2%2Fp.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fsrc%2Fcoverdot2%2Fp.go?ref=f6acbd0805c24bb68ca2c88be26e770995cb4fa2", "patch": "@@ -0,0 +1,5 @@\n+package coverdot2\n+\n+import . \"coverdot1\"\n+\n+func G() { F() }"}, {"sha": "da66e3e7af27acc85d9a6561352c11a29d368204", "filename": "libgo/go/cmd/go/testdata/src/coverdot2/p_test.go", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6acbd0805c24bb68ca2c88be26e770995cb4fa2/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fsrc%2Fcoverdot2%2Fp_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6acbd0805c24bb68ca2c88be26e770995cb4fa2/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fsrc%2Fcoverdot2%2Fp_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Ftestdata%2Fsrc%2Fcoverdot2%2Fp_test.go?ref=f6acbd0805c24bb68ca2c88be26e770995cb4fa2", "patch": "@@ -0,0 +1,7 @@\n+package coverdot2\n+\n+import \"testing\"\n+\n+func TestG(t *testing.T) {\n+\tG()\n+}"}, {"sha": "d558adceec3f95b971c8b78f998265bc5bc68bf8", "filename": "libgo/go/runtime/testdata/testprog/badtraceback.go", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6acbd0805c24bb68ca2c88be26e770995cb4fa2/libgo%2Fgo%2Fruntime%2Ftestdata%2Ftestprog%2Fbadtraceback.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6acbd0805c24bb68ca2c88be26e770995cb4fa2/libgo%2Fgo%2Fruntime%2Ftestdata%2Ftestprog%2Fbadtraceback.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Ftestdata%2Ftestprog%2Fbadtraceback.go?ref=f6acbd0805c24bb68ca2c88be26e770995cb4fa2", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2018 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import (\n+\t\"runtime\"\n+\t\"runtime/debug\"\n+\t\"unsafe\"\n+)\n+\n+func init() {\n+\tregister(\"BadTraceback\", BadTraceback)\n+}\n+\n+func BadTraceback() {\n+\t// Disable GC to prevent traceback at unexpected time.\n+\tdebug.SetGCPercent(-1)\n+\n+\t// Run badLR1 on its own stack to minimize the stack size and\n+\t// exercise the stack bounds logic in the hex dump.\n+\tgo badLR1()\n+\tselect {}\n+}\n+\n+//go:noinline\n+func badLR1() {\n+\t// We need two frames on LR machines because we'll smash this\n+\t// frame's saved LR.\n+\tbadLR2(0)\n+}\n+\n+//go:noinline\n+func badLR2(arg int) {\n+\t// Smash the return PC or saved LR.\n+\tlrOff := unsafe.Sizeof(uintptr(0))\n+\tif runtime.GOARCH == \"ppc64\" || runtime.GOARCH == \"ppc64le\" {\n+\t\tlrOff = 32 // FIXED_FRAME or sys.MinFrameSize\n+\t}\n+\tlrPtr := (*uintptr)(unsafe.Pointer(uintptr(unsafe.Pointer(&arg)) - lrOff))\n+\t*lrPtr = 0xbad\n+\n+\t// Print a backtrace. This should include diagnostics for the\n+\t// bad return PC and a hex dump.\n+\tpanic(\"backtrace\")\n+}"}]}