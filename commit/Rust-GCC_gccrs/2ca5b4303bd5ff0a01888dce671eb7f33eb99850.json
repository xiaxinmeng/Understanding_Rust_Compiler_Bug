{"sha": "2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNhNWI0MzAzYmQ1ZmYwYTAxODg4ZGNlNjcxZWI3ZjMzZWI5OTg1MA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-11-09T15:53:26Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-11-09T15:53:26Z"}, "message": "[AArch64] PR target/68129: Define TARGET_SUPPORTS_WIDE_INT\n\n\tPR target/68129\n\t* config/aarch64/aarch64.h (TARGET_SUPPORTS_WIDE_INT): Define to 1.\n\t* config/aarch64/aarch64.c (aarch64_print_operand, CONST_DOUBLE):\n\tDelete VOIDmode case.  Assert that mode is not VOIDmode.\n\t* config/aarch64/predicates.md (const0_operand): Remove const_double\n\tmatch.\n\n\t* gcc.dg/pr68129_1.c: New test.\n\nFrom-SVN: r230029", "tree": {"sha": "7c9d269142da12b5932b050b41574d43ab13e224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c9d269142da12b5932b050b41574d43ab13e224"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c34311917ff87b75ea589afff6868437fc53c001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c34311917ff87b75ea589afff6868437fc53c001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c34311917ff87b75ea589afff6868437fc53c001"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "c07c5d6257b0bc41d2c8001cc63a601a0a4531f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "patch": "@@ -1,3 +1,12 @@\n+2015-11-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/68129\n+\t* config/aarch64/aarch64.h (TARGET_SUPPORTS_WIDE_INT): Define to 1.\n+\t* config/aarch64/aarch64.c (aarch64_print_operand, CONST_DOUBLE):\n+\tDelete VOIDmode case.  Assert that mode is not VOIDmode.\n+\t* config/aarch64/predicates.md (const0_operand): Remove const_double\n+\tmatch.\n+\n 2015-11-09  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-inline-analysis.c (estimate_function_body_sizes): Call"}, {"sha": "83b7044d92580eea1d6b006d1b7b55577f647027", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "patch": "@@ -4391,11 +4391,10 @@ aarch64_print_operand (FILE *f, rtx x, int code)\n \t  break;\n \n \tcase CONST_DOUBLE:\n-\t  /* CONST_DOUBLE can represent a double-width integer.\n-\t     In this case, the mode of x is VOIDmode.  */\n-\t  if (GET_MODE (x) == VOIDmode)\n-\t    ; /* Do Nothing.  */\n-\t  else if (aarch64_float_const_zero_rtx_p (x))\n+\t  /* Since we define TARGET_SUPPORTS_WIDE_INT we shouldn't ever\n+\t     be getting CONST_DOUBLEs holding integers.  */\n+\t  gcc_assert (GET_MODE (x) != VOIDmode);\n+\t  if (aarch64_float_const_zero_rtx_p (x))\n \t    {\n \t      fputc ('0', f);\n \t      break;"}, {"sha": "8834c9b4dd0b5e87243189f045f63c0d3621f15f", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "patch": "@@ -858,6 +858,8 @@ extern enum aarch64_code_model aarch64_cmodel;\n   (aarch64_cmodel == AARCH64_CMODEL_TINY\t\t\\\n    || aarch64_cmodel == AARCH64_CMODEL_TINY_PIC)\n \n+#define TARGET_SUPPORTS_WIDE_INT 1\n+\n /* Modes valid for AdvSIMD D registers, i.e. that fit in half a Q register.  */\n #define AARCH64_VALID_SIMD_DREG_MODE(MODE) \\\n   ((MODE) == V2SImode || (MODE) == V4HImode || (MODE) == V8QImode \\"}, {"sha": "e7f76e048543d27b325f915ced028b7a493b6789", "filename": "gcc/config/aarch64/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fpredicates.md?ref=2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "patch": "@@ -32,7 +32,7 @@\n \n ;; Return true if OP a (const_int 0) operand.\n (define_predicate \"const0_operand\"\n-  (and (match_code \"const_int, const_double\")\n+  (and (match_code \"const_int\")\n        (match_test \"op == CONST0_RTX (mode)\")))\n \n (define_predicate \"aarch64_ccmp_immediate\""}, {"sha": "ca1991b56db6d81b9c6b721a689705eec614a969", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "patch": "@@ -1,3 +1,8 @@\n+2015-11-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/68129\n+\t* gcc.dg/pr68129_1.c: New test.\n+\n 2015-11-09  Andreas Arnez  <arnez@linux.vnet.ibm.com>\n \n \tPR debug/67192"}, {"sha": "112331e665dc8d6e6c661b3942799fec38be1deb", "filename": "gcc/testsuite/gcc.dg/pr68129_1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68129_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca5b4303bd5ff0a01888dce671eb7f33eb99850/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68129_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68129_1.c?ref=2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fno-split-wide-types\" } */\n+\n+typedef int V __attribute__ ((vector_size (8 * sizeof (int))));\n+\n+void\n+foo (V *p, V *q)\n+{\n+  *p = (*p == *q);\n+}"}]}