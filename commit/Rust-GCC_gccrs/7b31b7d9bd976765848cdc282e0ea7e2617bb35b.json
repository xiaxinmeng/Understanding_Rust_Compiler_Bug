{"sha": "7b31b7d9bd976765848cdc282e0ea7e2617bb35b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IzMWI3ZDliZDk3Njc2NTg0OGNkYzI4MmUwZWE3ZTI2MTdiYjM1Yg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-08-18T09:34:59Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-18T09:34:59Z"}, "message": "regmove.c (optimize_reg_copy_1): Update REG_N_CALLS_CROSSED and REG_LIVE_LENGTH as successful substitutions are made.\n\n        * regmove.c (optimize_reg_copy_1): Update REG_N_CALLS_CROSSED\n        and REG_LIVE_LENGTH as successful substitutions are made.\n\nFrom-SVN: r21819", "tree": {"sha": "3180812977ebe9db41f77114aa9ba5f1aebc0be6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3180812977ebe9db41f77114aa9ba5f1aebc0be6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b31b7d9bd976765848cdc282e0ea7e2617bb35b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b31b7d9bd976765848cdc282e0ea7e2617bb35b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b31b7d9bd976765848cdc282e0ea7e2617bb35b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b31b7d9bd976765848cdc282e0ea7e2617bb35b/comments", "author": null, "committer": null, "parents": [{"sha": "5a5325cb7288ba6ee85682f079aebc26131cceba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5325cb7288ba6ee85682f079aebc26131cceba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a5325cb7288ba6ee85682f079aebc26131cceba"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "624be89d052d76fad3b24488e3b64e710d26a9ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b31b7d9bd976765848cdc282e0ea7e2617bb35b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b31b7d9bd976765848cdc282e0ea7e2617bb35b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b31b7d9bd976765848cdc282e0ea7e2617bb35b", "patch": "@@ -1,3 +1,8 @@\n+Tue Aug 18 10:33:30 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* regmove.c (optimize_reg_copy_1): Update REG_N_CALLS_CROSSED\n+\tand REG_LIVE_LENGTH as successful substitutions are made.\n+\n Tue Aug 18 07:15:27 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* config/sparc/sparc.c (ultra_find_type): Add empty semicolon"}, {"sha": "878655322482f1fbceda497834122d66752fe263", "filename": "gcc/regmove.c", "status": "modified", "additions": 37, "deletions": 4, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b31b7d9bd976765848cdc282e0ea7e2617bb35b/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b31b7d9bd976765848cdc282e0ea7e2617bb35b/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=7b31b7d9bd976765848cdc282e0ea7e2617bb35b", "patch": "@@ -288,12 +288,45 @@ optimize_reg_copy_1 (insn, dest, src)\n \t\t\t\t\t\t\t     PATTERN (q))))\n \t\t    {\n \t\t      /* We assume that a register is used exactly once per\n-\t\t\t insn in the updates below.  If this is not correct,\n-\t\t\t no great harm is done.  */\n+\t\t\t insn in the REG_N_REFS updates below.  If this is not\n+\t\t\t correct, no great harm is done.\n+\n+\n+\t\t\t We do not undo this substitution if something later\n+\t\t\t fails.  Therefore, we must update the other REG_N_*\n+\t\t\t counters now to keep them accurate.  */\n \t\t      if (sregno >= FIRST_PSEUDO_REGISTER)\n-\t\t\tREG_N_REFS (sregno) -= loop_depth;\n+\t\t\t{\n+\t\t\t  REG_N_REFS (sregno) -= loop_depth;\n+\n+\t\t\t  if (REG_LIVE_LENGTH (sregno) >= 0)\n+\t\t\t    {\n+\t\t\t      REG_LIVE_LENGTH (sregno) -= length;\n+\t\t\t      /* REG_LIVE_LENGTH is only an approximation after\n+\t\t\t\t combine if sched is not run, so make sure that\n+\t\t\t\t we still have a reasonable value.  */\n+\t\t\t      if (REG_LIVE_LENGTH (sregno) < 2)\n+\t\t\t\tREG_LIVE_LENGTH (sregno) = 2;\n+\t\t\t    }\n+\n+\t\t\t  REG_N_CALLS_CROSSED (sregno) -= n_calls;\n+\t\t\t}\n+\n \t\t      if (dregno >= FIRST_PSEUDO_REGISTER)\n-\t\t\tREG_N_REFS (dregno) += loop_depth;\n+\t\t\t{\n+\t\t\t  REG_N_REFS (dregno) += loop_depth;\n+\n+\t\t\t  if (REG_LIVE_LENGTH (dregno) >= 0)\n+\t\t\t    REG_LIVE_LENGTH (dregno) += d_length;\n+\n+\t\t\t  REG_N_CALLS_CROSSED (dregno) += d_n_calls;\n+\t\t\t}\n+\n+\t\t      /* We've done a substitution, clear the counters.  */\n+\t\t      length = 0;\n+\t\t      d_length = 0;\n+\t\t      n_calls = 0;\n+\t\t      d_n_calls = 0;\n \t\t    }\n \t\t  else\n \t\t    {"}]}