{"sha": "19322a8706b14dd29f2a8ac925e32356ca6d3112", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkzMjJhODcwNmIxNGRkMjlmMmE4YWM5MjVlMzIzNTZjYTZkMzExMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2016-05-16T19:33:02Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2016-05-16T19:33:02Z"}, "message": "ipa-inline-analysis.c (compute_inline_parameters): Disable inlinig into instrumentation thunks.\n\n\n\t* ipa-inline-analysis.c (compute_inline_parameters): Disable inlinig\n\tinto instrumentation thunks.\n\t* cif-code.def (CIF_CHKP): New.\n\nFrom-SVN: r236299", "tree": {"sha": "7c95157fdec589bf4c2449659d0737681576009a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c95157fdec589bf4c2449659d0737681576009a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19322a8706b14dd29f2a8ac925e32356ca6d3112", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19322a8706b14dd29f2a8ac925e32356ca6d3112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19322a8706b14dd29f2a8ac925e32356ca6d3112", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19322a8706b14dd29f2a8ac925e32356ca6d3112/comments", "author": null, "committer": null, "parents": [{"sha": "1743ce80017ca13a486cf50a0ed4d32757238a64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1743ce80017ca13a486cf50a0ed4d32757238a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1743ce80017ca13a486cf50a0ed4d32757238a64"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "170333157c00a6981f30af63a35cdab383f3e961", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19322a8706b14dd29f2a8ac925e32356ca6d3112/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19322a8706b14dd29f2a8ac925e32356ca6d3112/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19322a8706b14dd29f2a8ac925e32356ca6d3112", "patch": "@@ -1,3 +1,9 @@\n+2016-05-16  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-inline-analysis.c (compute_inline_parameters): Disable inlinig\n+\tinto instrumentation thunks.\n+\t* cif-code.def (CIF_CHKP): New.\n+\n 2016-05-16  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/xopintrin.h: Correct \"unsinged\" typo in the comments."}, {"sha": "b5e019ffb7b4987b87f67844f1b63f8b9c47aec8", "filename": "gcc/cif-code.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19322a8706b14dd29f2a8ac925e32356ca6d3112/gcc%2Fcif-code.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19322a8706b14dd29f2a8ac925e32356ca6d3112/gcc%2Fcif-code.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcif-code.def?ref=19322a8706b14dd29f2a8ac925e32356ca6d3112", "patch": "@@ -135,3 +135,7 @@ DEFCIFCODE(CILK_SPAWN, CIF_FINAL_ERROR,\n /* We proved that the call is unreachable.  */\n DEFCIFCODE(UNREACHABLE, CIF_FINAL_ERROR,\n \t   N_(\"unreachable\"))\n+\n+/* We can't inline because of instrumentation thunk.  */\n+DEFCIFCODE(CHKP, CIF_FINAL_ERROR,\n+\t   N_(\"caller is instrumetnation thunk\"))"}, {"sha": "8b5ca86c0d66d6322980ab5a62ca62621caa34a2", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19322a8706b14dd29f2a8ac925e32356ca6d3112/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19322a8706b14dd29f2a8ac925e32356ca6d3112/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=19322a8706b14dd29f2a8ac925e32356ca6d3112", "patch": "@@ -2943,7 +2943,13 @@ compute_inline_parameters (struct cgraph_node *node, bool early)\n       info->self_size = info->size;\n       info->self_time = info->time;\n       /* We can not inline instrumetnation clones.  */\n-      info->inlinable = !node->thunk.add_pointer_bounds_args;\n+      if (node->thunk.add_pointer_bounds_args)\n+\t{\n+          info->inlinable = false;\n+          node->callees->inline_failed = CIF_CHKP;\n+\t}\n+      else\n+        info->inlinable = true;\n     }\n   else\n     {"}]}