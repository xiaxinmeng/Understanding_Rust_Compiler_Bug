{"sha": "c6d01ef8ca2f24527046f29a563e07a071e587b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZkMDFlZjhjYTJmMjQ1MjcwNDZmMjlhNTYzZTA3YTA3MWU1ODdiMw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@codesourcery.com", "date": "2016-11-28T10:29:19Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2016-11-28T10:29:19Z"}, "message": "[Darwin, config] Fix version number extraction to portable method\n\nThe method used in the applied patch caused configuration errors on freeBSD and hppa.\n\n2016-11-28  Iain Sandoe  <iain@codesourcery.com>\n\n\tPR target/71767\n\t* configure.ac (with_ld64): Use portable method to extract the\n\tmajor part of the version number.\n\t* configure: Regenerated.\n\nFrom-SVN: r242912", "tree": {"sha": "09e841696e773b79fda5d9b34ac8b5b947f23a0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09e841696e773b79fda5d9b34ac8b5b947f23a0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6d01ef8ca2f24527046f29a563e07a071e587b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d01ef8ca2f24527046f29a563e07a071e587b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6d01ef8ca2f24527046f29a563e07a071e587b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d01ef8ca2f24527046f29a563e07a071e587b3/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42aa1173f256069d5933b9a3ed4a8c5c99871ca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42aa1173f256069d5933b9a3ed4a8c5c99871ca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42aa1173f256069d5933b9a3ed4a8c5c99871ca7"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "ef01a7fb7bc4977c1c7d1818bc2199b57b723cb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6d01ef8ca2f24527046f29a563e07a071e587b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6d01ef8ca2f24527046f29a563e07a071e587b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6d01ef8ca2f24527046f29a563e07a071e587b3", "patch": "@@ -1,3 +1,10 @@\n+2016-11-28  Iain Sandoe  <iain@codesourcery.com>\n+\n+\tPR target/71767\n+\t* configure.ac (with_ld64): Use portable method to extract the\n+\tmajor part of the version number.\n+\t* configure: Regenerated.\n+\n 2016-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gimple-ssa-sprintf.c (build_intmax_type_nodes): Look at"}, {"sha": "b9a39d3454ead9b2e17ba349d9fd7e9f1eeb7fc1", "filename": "gcc/configure", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6d01ef8ca2f24527046f29a563e07a071e587b3/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6d01ef8ca2f24527046f29a563e07a071e587b3/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=c6d01ef8ca2f24527046f29a563e07a071e587b3", "patch": "@@ -24510,6 +24510,7 @@ if test $gcc_cv_as_mmacosx_version_min = yes; then\n $as_echo \"#define HAVE_AS_MMACOSX_VERSION_MIN_OPTION 1\" >>confdefs.h\n \n fi\n+\n     ;;\n esac\n \n@@ -28355,9 +28356,9 @@ if test x\"$ld64_flag\" = x\"yes\"; then\n   # If the configurer specified a minimum ld64 version to be supported, then use\n   # that to determine feature support.\n   if test x\"${gcc_cv_ld64_version}\" != x; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking ld64 major version\" >&5\n-$as_echo_n \"checking ld64 major version... \" >&6; }\n-    IFS=. read gcc_cv_ld64_major gcc_cv_ld64_minor <<< \"${gcc_cv_ld64_version}\"\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking ld64 specified version\" >&5\n+$as_echo_n \"checking ld64 specified version... \" >&6; }\n+    gcc_cv_ld64_major=`echo \"$gcc_cv_ld64_version\" | sed -e 's/\\..*//'`\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_ld64_major\" >&5\n $as_echo \"$gcc_cv_ld64_major\" >&6; }\n    if test \"$gcc_cv_ld64_major\" -ge 236; then"}, {"sha": "268efdb302122fdface860714240ebbd31718e9f", "filename": "gcc/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6d01ef8ca2f24527046f29a563e07a071e587b3/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6d01ef8ca2f24527046f29a563e07a071e587b3/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=c6d01ef8ca2f24527046f29a563e07a071e587b3", "patch": "@@ -5309,8 +5309,8 @@ if test x\"$ld64_flag\" = x\"yes\"; then\n   # If the configurer specified a minimum ld64 version to be supported, then use\n   # that to determine feature support.\n   if test x\"${gcc_cv_ld64_version}\" != x; then\n-    AC_MSG_CHECKING(ld64 major version)\n-    IFS=. read gcc_cv_ld64_major gcc_cv_ld64_minor <<< \"${gcc_cv_ld64_version}\"\n+    AC_MSG_CHECKING(ld64 specified version)\n+    gcc_cv_ld64_major=`echo \"$gcc_cv_ld64_version\" | sed -e 's/\\..*//'`\n     AC_MSG_RESULT($gcc_cv_ld64_major)\n    if test \"$gcc_cv_ld64_major\" -ge 236; then\n       gcc_cv_ld64_export_dynamic=1"}]}