{"sha": "d2d47a28d87986ac23c8ad451944d9bbdccae356", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJkNDdhMjhkODc5ODZhYzIzYzhhZDQ1MTk0NGQ5YmJkY2NhZTM1Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2015-10-28T18:32:07Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-10-28T18:32:07Z"}, "message": "nvptx.c (nvptx_print_operand): Remove 'd' case.\n\n\t* config/nvptx/nvptx.c (nvptx_print_operand): Remove 'd' case.\n\t(struct parallel): Update comment.\n\t(nvptx_reorg): Likewise.\n\t(nvptx_neuter): Cleanup whitespace.\n\nFrom-SVN: r229498", "tree": {"sha": "d4f78b8af7389c21c2f382a0b98a6804ace0a1a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4f78b8af7389c21c2f382a0b98a6804ace0a1a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2d47a28d87986ac23c8ad451944d9bbdccae356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d47a28d87986ac23c8ad451944d9bbdccae356", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d47a28d87986ac23c8ad451944d9bbdccae356", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d47a28d87986ac23c8ad451944d9bbdccae356/comments", "author": null, "committer": null, "parents": [{"sha": "3754c8fe366db7571e61ba914d99a41dc7222e65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3754c8fe366db7571e61ba914d99a41dc7222e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3754c8fe366db7571e61ba914d99a41dc7222e65"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "707ae2dc73fdf07c2645dd8e4cdc33ae1670e26d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d47a28d87986ac23c8ad451944d9bbdccae356/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d47a28d87986ac23c8ad451944d9bbdccae356/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2d47a28d87986ac23c8ad451944d9bbdccae356", "patch": "@@ -1,3 +1,10 @@\n+2015-10-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/nvptx/nvptx.c (nvptx_print_operand): Remove 'd' case.\n+\t(struct parallel): Update comment.\n+\t(nvptx_reorg): Likewise.\n+\t(nvptx_neuter): Cleanup whitespace.\n+\n 2015-10-28  Richard Henderson  <rth@redhat.com>\n \n \t* tree-eh.c (mark_reachable_handlers): Fix typo in assert."}, {"sha": "b541666d147064d937f179ecdfb801ac478987a3", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d47a28d87986ac23c8ad451944d9bbdccae356/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d47a28d87986ac23c8ad451944d9bbdccae356/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=d2d47a28d87986ac23c8ad451944d9bbdccae356", "patch": "@@ -1969,7 +1969,6 @@ nvptx_print_operand_address (FILE *file, rtx addr)\n \n    A -- print an address space identifier for a MEM\n    c -- print an opcode suffix for a comparison operator, including a type code\n-   d -- print a CONST_INT as a vector dimension (x, y, or z)\n    f -- print a full reg even for something that must always be split\n    S -- print a shuffle kind specified by CONST_INT\n    t -- print a type opcode suffix, promoting QImode to 32 bits\n@@ -2013,18 +2012,6 @@ nvptx_print_operand (FILE *file, rtx x, int code)\n       }\n       break;\n \n-    case 'd':\n-      gcc_assert (x_code == CONST_INT);\n-      if (INTVAL (x) == 0)\n-\tfputs (\".x\", file);\n-      else if (INTVAL (x) == 1)\n-\tfputs (\".y\", file);\n-      else if (INTVAL (x) == 2)\n-\tfputs (\".z\", file);\n-      else\n-\tgcc_unreachable ();\n-      break;\n-\n     case 't':\n       op_mode = nvptx_underlying_object_mode (x);\n       fprintf (file, \"%s\", nvptx_ptx_type_from_mode (op_mode, true));\n@@ -2294,9 +2281,8 @@ nvptx_reorg_subreg (void)\n     }\n }\n \n-/* Loop structure of the function. The entire function is described as\n-   a NULL loop.  We should be able to extend this to represent\n-   superblocks.  */\n+/* Loop structure of the function.  The entire function is described as\n+   a NULL loop.  */\n \n struct parallel\n {\n@@ -3028,7 +3014,6 @@ nvptx_neuter_pars (parallel *par, unsigned modes, unsigned outer)\n }\n \n /* PTX-specific reorganization\n-   - Scan and release reduction buffers\n    - Split blocks at fork and join instructions\n    - Compute live registers\n    - Mark now-unused registers, so function begin doesn't declare\n@@ -3214,11 +3199,11 @@ nvptx_record_offload_symbol (tree decl)\n \t    \n \t    fprintf (asm_out_file, \", %#x\", size);\n \t  }\n-\t\n+\n \tfprintf (asm_out_file, \"\\n\");\n       }\n       break;\n-  \n+\n     default:\n       gcc_unreachable ();\n     }"}]}