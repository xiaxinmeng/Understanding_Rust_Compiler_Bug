{"sha": "dadb213fd1d7a25235ac92656e451b0fe189ecc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFkYjIxM2ZkMWQ3YTI1MjM1YWM5MjY1NmU0NTFiMGZlMTg5ZWNjNQ==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2006-01-13T00:39:28Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2006-01-13T00:39:28Z"}, "message": "tm.texi (Data Output): Add REAL_VALUE_TO_TARGET_DECIMAL32...\n\n\t* doc/tm.texi (Data Output): Add REAL_VALUE_TO_TARGET_DECIMAL32,\n\tREAL_VALUE_TO_TARGET_DECIMAL64 and REAL_VALUE_TO_TARGET_DECIMAL128\n\tdocumentation.\n\nFrom-SVN: r109660", "tree": {"sha": "df001bab961867a8666670138dfe90c70abb3321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df001bab961867a8666670138dfe90c70abb3321"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dadb213fd1d7a25235ac92656e451b0fe189ecc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dadb213fd1d7a25235ac92656e451b0fe189ecc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dadb213fd1d7a25235ac92656e451b0fe189ecc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dadb213fd1d7a25235ac92656e451b0fe189ecc5/comments", "author": null, "committer": null, "parents": [{"sha": "995931d6ee860b777d779c6816d237d98036be17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/995931d6ee860b777d779c6816d237d98036be17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/995931d6ee860b777d779c6816d237d98036be17"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "a87c2961ab83d65c906912e1f57682048196b5e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dadb213fd1d7a25235ac92656e451b0fe189ecc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dadb213fd1d7a25235ac92656e451b0fe189ecc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dadb213fd1d7a25235ac92656e451b0fe189ecc5", "patch": "@@ -1,4 +1,10 @@\n-2006-01-11  Daniel Berlin  <dberlin@dberlin.org>\n+2006-01-13  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* doc/tm.texi (Data Output): Add REAL_VALUE_TO_TARGET_DECIMAL32,\n+\tREAL_VALUE_TO_TARGET_DECIMAL64 and REAL_VALUE_TO_TARGET_DECIMAL128\n+\tdocumentation.\n+\n+2006-01-12  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-operands.c (add_call_clobber_ops): Use SFT_PARENT_VAR\n \tto try to avoid clobbering pieces of structures when we know"}, {"sha": "5fb0fa1c87a797a20bfb5817d5c38c7c32ca20a8", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dadb213fd1d7a25235ac92656e451b0fe189ecc5/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dadb213fd1d7a25235ac92656e451b0fe189ecc5/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=dadb213fd1d7a25235ac92656e451b0fe189ecc5", "patch": "@@ -6541,15 +6541,19 @@ of @code{ASM_OUTPUT_DOUBLE} and the like:\n @defmac REAL_VALUE_TO_TARGET_SINGLE (@var{x}, @var{l})\n @defmacx REAL_VALUE_TO_TARGET_DOUBLE (@var{x}, @var{l})\n @defmacx REAL_VALUE_TO_TARGET_LONG_DOUBLE (@var{x}, @var{l})\n-These translate @var{x}, of type @code{REAL_VALUE_TYPE}, to the target's\n-floating point representation, and store its bit pattern in the variable\n-@var{l}.  For @code{REAL_VALUE_TO_TARGET_SINGLE}, this variable should\n-be a simple @code{long int}.  For the others, it should be an array of\n-@code{long int}.  The number of elements in this array is determined by\n-the size of the desired target floating point data type: 32 bits of it\n-go in each @code{long int} array element.  Each array element holds 32\n-bits of the result, even if @code{long int} is wider than 32 bits on the\n-host machine.\n+@defmacx REAL_VALUE_TO_TARGET_DECIMAL32 (@var{x}, @var{l})\n+@defmacx REAL_VALUE_TO_TARGET_DECIMAL64 (@var{x}, @var{l})\n+@defmacx REAL_VALUE_TO_TARGET_DECIMAL128 (@var{x}, @var{l})\n+These translate @var{x}, of type @code{REAL_VALUE_TYPE}, to the\n+target's floating point representation, and store its bit pattern in\n+the variable @var{l}.  For @code{REAL_VALUE_TO_TARGET_SINGLE} and\n+@code{REAL_VALUE_TO_TARGET_DECIMAL32}, this variable should be a\n+simple @code{long int}.  For the others, it should be an array of\n+@code{long int}.  The number of elements in this array is determined\n+by the size of the desired target floating point data type: 32 bits of\n+it go in each @code{long int} array element.  Each array element holds\n+32 bits of the result, even if @code{long int} is wider than 32 bits\n+on the host machine.\n \n The array element values are designed so that you can print them out\n using @code{fprintf} in the order they should appear in the target"}]}