{"sha": "2590ef129b3c7fa8dd899eed69e97b418411f40e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU5MGVmMTI5YjNjN2ZhOGRkODk5ZWVkNjllOTdiNDE4NDExZjQwZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-10-14T13:51:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-14T13:51:45Z"}, "message": "sem_res.adb: Minor fix to error message text.\n\n2013-10-14  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_res.adb: Minor fix to error message text.\n\t* errout.ads, erroutc.ads: Minor reformatting.\n\t* s-ststop.ads, s-stratt.ads: Clean up documentation of block IO\n\tmode for streams.\n\t* s-stratt-xdr.adb: Minor comment update.\n\nFrom-SVN: r203559", "tree": {"sha": "1e0f6f1b4814386ec9abd973594d83471f7f95f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e0f6f1b4814386ec9abd973594d83471f7f95f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2590ef129b3c7fa8dd899eed69e97b418411f40e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2590ef129b3c7fa8dd899eed69e97b418411f40e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2590ef129b3c7fa8dd899eed69e97b418411f40e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2590ef129b3c7fa8dd899eed69e97b418411f40e/comments", "author": null, "committer": null, "parents": [{"sha": "43dbd3e338b914681b7d8d90daef7caf5ea6b9fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43dbd3e338b914681b7d8d90daef7caf5ea6b9fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43dbd3e338b914681b7d8d90daef7caf5ea6b9fd"}], "stats": {"total": 104, "additions": 65, "deletions": 39}, "files": [{"sha": "8cd9a9dd98d263b503f4eb1b90b158390bb325ce", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2590ef129b3c7fa8dd899eed69e97b418411f40e", "patch": "@@ -1,3 +1,11 @@\n+2013-10-14  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_res.adb: Minor fix to error message text.\n+\t* errout.ads, erroutc.ads: Minor reformatting.\n+\t* s-ststop.ads, s-stratt.ads: Clean up documentation of block IO\n+\tmode for streams.\n+\t* s-stratt-xdr.adb: Minor comment update.\n+\n 2013-10-14  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_aux.adb, sem_aux.ads, sem_prag.adb: Minor reformatting."}, {"sha": "e268d1f58d7190fea66d0a07a811bcc41719235a", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=2590ef129b3c7fa8dd899eed69e97b418411f40e", "patch": "@@ -313,6 +313,8 @@ package Errout is\n    --      taken as an Ada reserved word, and are converted to the default\n    --      case for reserved words (see Scans package spec). Surrounding\n    --      quotes are added unless manual quotation mode is currently set.\n+   --      RM and SPARK are special exceptions, they are never treated as\n+   --      keywords, and just appear verbatim, with no surrounding quotes.\n \n    --    Insertion character ` (Backquote: set manual quotation mode)\n    --      The backquote character always appears in pairs. Each backquote of"}, {"sha": "647e58bafdd4ea6b3da85fff7aadf676256c0141", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=2590ef129b3c7fa8dd899eed69e97b418411f40e", "patch": "@@ -427,7 +427,8 @@ package Erroutc is\n    --  Handle reserved word insertion (upper case letters). The Text argument\n    --  is the current error message input text, and J is an index which on\n    --  entry points to the first character of the reserved word, and on exit\n-   --  points past the last character of the reserved word.\n+   --  points past the last character of the reserved word. Note that RM and\n+   --  SPARK are treated specially and not considered to be keywords.\n \n    procedure Set_Msg_Insertion_Run_Time_Name;\n    --  If package System contains a definition for Run_Time_Name (see package"}, {"sha": "ae4c9b37e7c444323f7ed2eb579928b8648f1cf6", "filename": "gcc/ada/s-stratt-xdr.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Fs-stratt-xdr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Fs-stratt-xdr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stratt-xdr.adb?ref=2590ef129b3c7fa8dd899eed69e97b418411f40e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 1996-2012, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1996-2013, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GARLIC is free software;  you can redistribute it and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -283,6 +283,10 @@ package body System.Stream_Attributes is\n    -- Block_IO_OK --\n    -----------------\n \n+   --  We must inhibit Block_IO, because in XDR mode, each element is output\n+   --  according to XDR requirements, which is not at all the same as writing\n+   --  the whole array in one block.\n+\n    function Block_IO_OK return Boolean is\n    begin\n       return False;"}, {"sha": "ce1b4f5e1246ef6de59418cc8d54b47b1a8f28e1", "filename": "gcc/ada/s-stratt.ads", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Fs-stratt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Fs-stratt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stratt.ads?ref=2590ef129b3c7fa8dd899eed69e97b418411f40e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -88,7 +88,6 @@ package System.Stream_Attributes is\n    --  the first subtype is specified, or where an enumeration representation\n    --  clause is given, these three types are treated like any other cases\n    --  of enumeration types, as described above.\n-   --  for\n \n    ---------------------\n    -- Input Functions --\n@@ -114,8 +113,8 @@ package System.Stream_Attributes is\n    function I_SF  (Stream : not null access RST) return Short_Float;\n    function I_SI  (Stream : not null access RST) return Short_Integer;\n    function I_SSI (Stream : not null access RST) return Short_Short_Integer;\n-   function I_SSU (Stream : not null access RST)\n-     return UST.Short_Short_Unsigned;\n+   function I_SSU (Stream : not null access RST) return\n+                                                   UST.Short_Short_Unsigned;\n    function I_SU  (Stream : not null access RST) return UST.Short_Unsigned;\n    function I_U   (Stream : not null access RST) return UST.Unsigned;\n    function I_WC  (Stream : not null access RST) return Wide_Character;\n@@ -125,10 +124,10 @@ package System.Stream_Attributes is\n    -- Output Procedures --\n    -----------------------\n \n-   --  Procedures for S'Write attribute. These procedures are also used\n-   --  for 'Output, since for elementary types there is no difference\n-   --  between 'Write and 'Output because there are no discriminants\n-   --  or bounds to be written.\n+   --  Procedures for S'Write attribute. These procedures are also used for\n+   --  'Output, since for elementary types there is no difference between\n+   --  'Write and 'Output because there are no discriminants or bounds to\n+   --  be written.\n \n    procedure W_AD  (Stream : not null access RST; Item : Fat_Pointer);\n    procedure W_AS  (Stream : not null access RST; Item : Thin_Pointer);\n@@ -140,17 +139,15 @@ package System.Stream_Attributes is\n    procedure W_LI  (Stream : not null access RST; Item : Long_Integer);\n    procedure W_LLF (Stream : not null access RST; Item : Long_Long_Float);\n    procedure W_LLI (Stream : not null access RST; Item : Long_Long_Integer);\n-   procedure W_LLU (Stream : not null access RST;\n-                    Item   : UST.Long_Long_Unsigned);\n+   procedure W_LLU (Stream : not null access RST; Item :\n+                                                    UST.Long_Long_Unsigned);\n    procedure W_LU  (Stream : not null access RST; Item : UST.Long_Unsigned);\n    procedure W_SF  (Stream : not null access RST; Item : Short_Float);\n    procedure W_SI  (Stream : not null access RST; Item : Short_Integer);\n-   procedure W_SSI (Stream : not null access RST;\n-                    Item   : Short_Short_Integer);\n-   procedure W_SSU (Stream : not null access RST;\n-                    Item   : UST.Short_Short_Unsigned);\n-   procedure W_SU  (Stream : not null access RST;\n-                    Item   : UST.Short_Unsigned);\n+   procedure W_SSI (Stream : not null access RST; Item : Short_Short_Integer);\n+   procedure W_SSU (Stream : not null access RST; Item :\n+                                                    UST.Short_Short_Unsigned);\n+   procedure W_SU  (Stream : not null access RST; Item : UST.Short_Unsigned);\n    procedure W_U   (Stream : not null access RST; Item : UST.Unsigned);\n    procedure W_WC  (Stream : not null access RST; Item : Wide_Character);\n    procedure W_WWC (Stream : not null access RST; Item : Wide_Wide_Character);\n@@ -160,7 +157,7 @@ package System.Stream_Attributes is\n    --  distributed with GNAT, and s-stratt-xdr.adb, which is based on the XDR\n    --  standard. Both bodies share the same spec. The role of this function is\n    --  to indicate whether the current version of System.Stream_Attributes\n-   --  supports block IO.\n+   --  supports block IO. See System.Strings.Stream_Ops (s-ststop) for details.\n \n private\n    pragma Inline (I_AD);"}, {"sha": "0c7813ffb9a9a61951dd4067bc80ece5028f7cfa", "filename": "gcc/ada/s-ststop.ads", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Fs-ststop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Fs-ststop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-ststop.ads?ref=2590ef129b3c7fa8dd899eed69e97b418411f40e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2009, Free Software Foundation, Inc.           --\n+--          Copyright (C) 2009-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -30,22 +30,33 @@\n ------------------------------------------------------------------------------\n \n --  This package provides subprogram implementations of stream attributes for\n---  the following types:\n+--  the following types using a \"block IO\" approach in which the entire data\n+--  item is written in one operation, instead of writing individual characters.\n+\n --     Ada.String\n --     Ada.Wide_String\n --     Ada.Wide_Wide_String\n---\n+\n --  The compiler will generate references to the subprograms in this package\n --  when expanding stream attributes for the above mentioned types. Example:\n---\n+\n --     String'Output (Some_Stream, Some_String);\n---\n+\n --  will be expanded into:\n---\n+\n --     String_Output (Some_Stream, Some_String);\n --       or\n --     String_Output_Blk_IO (Some_Stream, Some_String);\n \n+--  This expansion occurs only if System.Stream_Attributes.Block_IO_OK returns\n+--  True, indicating that this approach is compatible with the expectations of\n+--  System.Stream_Attributes. For the default implementation of this package,\n+--  there is no difference between writing the elements one by one using the\n+--  default output routine for the element type and writing the whole array\n+--  using block IO.\n+\n+--  In addition,\n+\n pragma Compiler_Unit;\n \n with Ada.Streams;"}, {"sha": "430766d25bcc502b85a215783365e22f62314dfd", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2590ef129b3c7fa8dd899eed69e97b418411f40e/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=2590ef129b3c7fa8dd899eed69e97b418411f40e", "patch": "@@ -3634,7 +3634,7 @@ package body Sem_Res is\n                then\n                   Error_Msg_N\n                     (\"conversion between unrelated limited array types \"\n-                     & \"not allowed (\\A\\I-00246)\", A);\n+                     & \"not allowed ('A'I-00246)\", A);\n \n                   if Is_Limited_Type (Etype (F)) then\n                      Explain_Limited_Type (Etype (F), A);\n@@ -3666,8 +3666,8 @@ package body Sem_Res is\n                      then\n                         New_Itype := Create_Itype (E_Anonymous_Access_Type, A);\n                         Set_Etype (New_Itype, Etype (A));\n-                        Set_Directly_Designated_Type (New_Itype,\n-                          Directly_Designated_Type (Etype (A)));\n+                        Set_Directly_Designated_Type\n+                          (New_Itype, Directly_Designated_Type (Etype (A)));\n                         Set_Etype (A, New_Itype);\n                      end if;\n \n@@ -3701,7 +3701,7 @@ package body Sem_Res is\n \n                if Is_Tagged_Type (F_Typ)\n                  and then (Is_Concurrent_Type (F_Typ)\n-                             or else Is_Concurrent_Record_Type (F_Typ))\n+                            or else Is_Concurrent_Record_Type (F_Typ))\n                then\n                   --  If the actual is overloaded, look for an interpretation\n                   --  that has a synchronized type.\n@@ -3768,10 +3768,10 @@ package body Sem_Res is\n                         Resolve (A, Etype (F));\n                      end if;\n                   end;\n-               else\n \n-                  --  not a synchronized operation.\n+               --  Not a synchronized operation\n \n+               else\n                   Resolve (A, Etype (F));\n                end if;\n             end if;\n@@ -3937,10 +3937,11 @@ package body Sem_Res is\n                   if Is_Subprogram (Current_Scope)\n                     and then\n                       (Is_Invariant_Procedure (Current_Scope)\n-                         or else Is_Predicate_Function (Current_Scope))\n+                        or else Is_Predicate_Function (Current_Scope))\n                   then\n-                     Error_Msg_N (\"function used in predicate cannot \" &\n-                       \"modify its argument\", F);\n+                     Error_Msg_N\n+                       (\"function used in predicate cannot \"\n+                        & \"modify its argument\", F);\n                   end if;\n                end if;\n \n@@ -4164,7 +4165,7 @@ package body Sem_Res is\n               and then (Is_Class_Wide_Type (Designated_Type (A_Typ))\n                          or else (Nkind (A) = N_Attribute_Reference\n                                    and then\n-                                  Is_Class_Wide_Type (Etype (Prefix (A)))))\n+                                     Is_Class_Wide_Type (Etype (Prefix (A)))))\n               and then not Is_Class_Wide_Type (Designated_Type (F_Typ))\n               and then not Is_Controlling_Formal (F)\n \n@@ -4188,12 +4189,14 @@ package body Sem_Res is\n             Eval_Actual (A);\n \n             --  If it is a named association, treat the selector_name as a\n-            --  proper identifier, and mark the corresponding entity. Ignore\n-            --  this reference in SPARK mode, as it refers to an entity not in\n-            --  scope at the point of reference, so the reference should be\n-            --  ignored for computing effects of subprograms.\n+            --  proper identifier, and mark the corresponding entity.\n \n             if Nkind (Parent (A)) = N_Parameter_Association\n+\n+              --  Ignore reference in SPARK mode, as it refers to an entity not\n+              --  in scope at the point of reference, so the reference should\n+              --  be ignored for computing effects of subprograms.\n+\n               and then not SPARK_Mode\n             then\n                Set_Entity (Selector_Name (Parent (A)), F);"}]}