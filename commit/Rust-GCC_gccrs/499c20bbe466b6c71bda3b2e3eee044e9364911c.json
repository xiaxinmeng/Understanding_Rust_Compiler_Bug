{"sha": "499c20bbe466b6c71bda3b2e3eee044e9364911c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk5YzIwYmJlNDY2YjZjNzFiZGEzYjJlM2VlZTA0NGU5MzY0OTExYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-09-10T07:31:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-09-10T07:31:14Z"}, "message": "re PR c++/67514 (ICE in omp_add_variable)\n\n\tPR c++/67514\n\t* gimplify.c (gimplify_omp_for): For loop SIMD construct, if\n\titerator is not explicitly determined, but is defined inside\n\tof the combined workshare region, handle it like if it has\n\tDECL_EXPR in OMP_FOR_PRE_BODY.\n\n\t* g++.dg/gomp/pr67514.C: New test.\n\nFrom-SVN: r227607", "tree": {"sha": "5314dbf71c08c4e14ef596421585661fede2a7e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5314dbf71c08c4e14ef596421585661fede2a7e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/499c20bbe466b6c71bda3b2e3eee044e9364911c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499c20bbe466b6c71bda3b2e3eee044e9364911c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/499c20bbe466b6c71bda3b2e3eee044e9364911c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499c20bbe466b6c71bda3b2e3eee044e9364911c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e4d2c41b9921ee5b8aa8e9d5874da8786e45559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e4d2c41b9921ee5b8aa8e9d5874da8786e45559"}], "stats": {"total": 74, "additions": 68, "deletions": 6}, "files": [{"sha": "4a2a1f3f00aac55d1b298212a080394f7bd9b2ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c20bbe466b6c71bda3b2e3eee044e9364911c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c20bbe466b6c71bda3b2e3eee044e9364911c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=499c20bbe466b6c71bda3b2e3eee044e9364911c", "patch": "@@ -1,3 +1,11 @@\n+2015-09-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/67514\n+\t* gimplify.c (gimplify_omp_for): For loop SIMD construct, if\n+\titerator is not explicitly determined, but is defined inside\n+\tof the combined workshare region, handle it like if it has\n+\tDECL_EXPR in OMP_FOR_PRE_BODY.\n+\n 2015-09-09  Nathan Sidwell  <nathan@acm.org>\n \n \t* config/nvptx/nvptx.md (call_operation): Move bound out of loop."}, {"sha": "215ad1584870010cafecbfc1866273ab2c646dd9", "filename": "gcc/gimplify.c", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c20bbe466b6c71bda3b2e3eee044e9364911c/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c20bbe466b6c71bda3b2e3eee044e9364911c/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=499c20bbe466b6c71bda3b2e3eee044e9364911c", "patch": "@@ -7123,13 +7123,27 @@ gimplify_omp_for (tree *expr_p, gimple_seq *pre_p)\n \t\t  OMP_CLAUSE_LINEAR_NO_COPYOUT (c) = 1;\n \t\t  flags |= GOVD_LINEAR_LASTPRIVATE_NO_OUTER;\n \t\t}\n+\t      struct gimplify_omp_ctx *outer\n+\t\t= gimplify_omp_ctxp->outer_context;\n+\t      if (outer && !OMP_CLAUSE_LINEAR_NO_COPYOUT (c))\n+\t\t{\n+\t\t  if (outer->region_type == ORT_WORKSHARE\n+\t\t      && outer->combined_loop)\n+\t\t    {\n+\t\t      n = splay_tree_lookup (outer->variables,\n+\t\t\t\t\t     (splay_tree_key)decl);\n+\t\t      if (n != NULL && (n->value & GOVD_LOCAL) != 0)\n+\t\t\t{\n+\t\t\t  OMP_CLAUSE_LINEAR_NO_COPYOUT (c) = 1;\n+\t\t\t  flags |= GOVD_LINEAR_LASTPRIVATE_NO_OUTER;\n+\t\t\t}\n+\t\t    }\n+\t\t}\n+\n \t      OMP_CLAUSE_DECL (c) = decl;\n \t      OMP_CLAUSE_CHAIN (c) = OMP_FOR_CLAUSES (for_stmt);\n \t      OMP_FOR_CLAUSES (for_stmt) = c;\n-\t      \n \t      omp_add_variable (gimplify_omp_ctxp, decl, flags);\n-\t      struct gimplify_omp_ctx *outer\n-\t\t= gimplify_omp_ctxp->outer_context;\n \t      if (outer && !OMP_CLAUSE_LINEAR_NO_COPYOUT (c))\n \t\t{\n \t\t  if (outer->region_type == ORT_WORKSHARE\n@@ -7166,9 +7180,16 @@ gimplify_omp_for (tree *expr_p, gimple_seq *pre_p)\n \t\t  if (outer->region_type == ORT_WORKSHARE\n \t\t      && outer->combined_loop)\n \t\t    {\n-\t\t      if (outer->outer_context\n-\t\t\t  && (outer->outer_context->region_type\n-\t\t\t      == ORT_COMBINED_PARALLEL))\n+\t\t      n = splay_tree_lookup (outer->variables,\n+\t\t\t\t\t     (splay_tree_key)decl);\n+\t\t      if (n != NULL && (n->value & GOVD_LOCAL) != 0)\n+\t\t\t{\n+\t\t\t  lastprivate = false;\n+\t\t\t  outer = NULL;\n+\t\t\t}\n+\t\t      else if (outer->outer_context\n+\t\t\t       && (outer->outer_context->region_type\n+\t\t\t\t   == ORT_COMBINED_PARALLEL))\n \t\t\touter = outer->outer_context;\n \t\t      else if (omp_check_private (outer, decl, false))\n \t\t\touter = NULL;"}, {"sha": "2d26e5579dec66d50f6092726d25b78a8a87efe1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c20bbe466b6c71bda3b2e3eee044e9364911c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c20bbe466b6c71bda3b2e3eee044e9364911c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=499c20bbe466b6c71bda3b2e3eee044e9364911c", "patch": "@@ -1,5 +1,8 @@\n 2015-09-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/67514\n+\t* g++.dg/gomp/pr67514.C: New test.\n+\n \tPR c++/67511\n \t* g++.dg/gomp/pr67511.C: New test.\n "}, {"sha": "a631b8bfedbfade0199e3fb273fb8ec9dafc7d07", "filename": "gcc/testsuite/g++.dg/gomp/pr67514.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499c20bbe466b6c71bda3b2e3eee044e9364911c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr67514.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499c20bbe466b6c71bda3b2e3eee044e9364911c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr67514.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr67514.C?ref=499c20bbe466b6c71bda3b2e3eee044e9364911c", "patch": "@@ -0,0 +1,30 @@\n+// PR c++/67514\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+template <class T>\n+void\n+foo (T x, T y)\n+{\n+  #pragma omp parallel\n+  #pragma omp for simd\n+  for (T i = x; i < y; ++i)\n+    ;\n+  #pragma omp parallel\n+  #pragma omp for simd collapse (2)\n+  for (T i = x; i < y; ++i)\n+    for (T j = x; j < y; j++)\n+      ;\n+}\n+\n+void\n+bar (int *x, int *y)\n+{\n+  foo (x, y);\n+}\n+\n+void\n+baz (int x, int y)\n+{\n+  foo (x, y);\n+}"}]}