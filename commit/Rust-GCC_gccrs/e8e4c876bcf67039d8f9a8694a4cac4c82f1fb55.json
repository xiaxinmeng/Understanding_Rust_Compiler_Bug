{"sha": "e8e4c876bcf67039d8f9a8694a4cac4c82f1fb55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThlNGM4NzZiY2Y2NzAzOWQ4ZjlhODY5NGE0Y2FjNGM4MmYxZmI1NQ==", "commit": {"author": {"name": "David O'Brien", "email": "obrien@FreeBSD.org", "date": "2002-10-31T09:08:11Z"}, "committer": {"name": "David O'Brien", "email": "obrien@gcc.gnu.org", "date": "2002-10-31T09:08:11Z"}, "message": "freebsd.h (TRANSFER_FROM_TRAMPOLINE): Define __enable_execute_stack function.\n\n2002-10-31  David O'Brien  <obrien@FreeBSD.org>\n\t* config/sparc/freebsd.h (TRANSFER_FROM_TRAMPOLINE): Define\n\t__enable_execute_stack function.\n\nApproved by:  David S. Miller <davem@redhat.com>\n              Message-Id: <20021031.005015.22856738.davem@redhat.com>\n\nFrom-SVN: r58674", "tree": {"sha": "998807df78f2320e5bb9d2f86b70e5f8dbcfc32b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/998807df78f2320e5bb9d2f86b70e5f8dbcfc32b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8e4c876bcf67039d8f9a8694a4cac4c82f1fb55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e4c876bcf67039d8f9a8694a4cac4c82f1fb55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8e4c876bcf67039d8f9a8694a4cac4c82f1fb55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8e4c876bcf67039d8f9a8694a4cac4c82f1fb55/comments", "author": null, "committer": null, "parents": [{"sha": "0d55d45aa5ce43c9b2050c7625e3d7a0a6319cf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d55d45aa5ce43c9b2050c7625e3d7a0a6319cf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d55d45aa5ce43c9b2050c7625e3d7a0a6319cf6"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "15eaa3963cb28af40848996b2f5c5272abcca813", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e4c876bcf67039d8f9a8694a4cac4c82f1fb55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e4c876bcf67039d8f9a8694a4cac4c82f1fb55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8e4c876bcf67039d8f9a8694a4cac4c82f1fb55", "patch": "@@ -1,3 +1,8 @@\n+2002-10-31  David O'Brien  <obrien@FreeBSD.org>\n+\n+\t* config/sparc/freebsd.h (TRANSFER_FROM_TRAMPOLINE): Define\n+\t__enable_execute_stack function.\n+\n 2002-10-30  Aldy Hernandez  <aldyh@redhat.com>\n \n         * c-common.c: Add GTY to vector_type_node_list."}, {"sha": "73155ae73150a7ca19849fc8bfceabdc5d6bb89d", "filename": "gcc/config/sparc/freebsd.h", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8e4c876bcf67039d8f9a8694a4cac4c82f1fb55/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8e4c876bcf67039d8f9a8694a4cac4c82f1fb55/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ffreebsd.h?ref=e8e4c876bcf67039d8f9a8694a4cac4c82f1fb55", "patch": "@@ -96,6 +96,37 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef  SPARC_DEFAULT_CMODEL\n #define SPARC_DEFAULT_CMODEL\tCM_MEDLOW\n \n+#define TRANSFER_FROM_TRAMPOLINE\t\t\t\t\t\\\n+static int need_enable_exec_stack;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+static void check_enabling(void) __attribute__ ((constructor));\t\t\\\n+static void check_enabling(void)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  extern int sysctlbyname(const char *, void *, size_t *, void *, size_t);\\\n+  size_t len;\t\t\t\t\t\t\t\t\\\n+  int prot;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+  prot = 0;\t\t\t\t\t\t\t\t\\\n+  len = sizeof(prot);\t\t\t\t\t\t\t\\\n+  sysctlbyname (\"kern.stackprot\", &prot, &len, NULL, 0);\t\t\\\n+  if (prot != 7)\t\t\t\t\t\t\t\\\n+    need_enable_exec_stack = 1;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+extern void __enable_execute_stack (void *);\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\t\\\n+__enable_execute_stack (addr)\t\t\t\t\t\t\\\n+     void *addr;\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\t\\\n+  if (!need_enable_exec_stack)\t\t\t\t\t\t\\\n+    return;\t\t\t\t\t\t\t\t\\\n+  else {\t\t\t\t\t\t\t\t\\\n+    /* 7 is PROT_READ | PROT_WRITE | PROT_EXEC */ \t\t\t\\\n+    if (mprotect (addr, TRAMPOLINE_SIZE, 7) < 0)\t\t\t\\\n+      perror (\"mprotect of trampoline code\");\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+}\n+\n \n /************************[  Assembler stuff  ]********************************/\n "}]}