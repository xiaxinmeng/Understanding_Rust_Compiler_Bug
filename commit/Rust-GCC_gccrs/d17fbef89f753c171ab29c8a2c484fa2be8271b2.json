{"sha": "d17fbef89f753c171ab29c8a2c484fa2be8271b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE3ZmJlZjg5Zjc1M2MxNzFhYjI5YzhhMmM0ODRmYTJiZTgyNzFiMg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-05-20T00:10:31Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-05-20T00:10:31Z"}, "message": "rs6000: Delete the \"wb\" constraint\n\nThis replaces the \"wb\" constraint by \"v\", with isa \"p9v\".\n\n\n\t* config/rs6000/constraints.md (define_register_constraint \"wb\"):\n\tDelete.\n\t* config/rs6000/rs6000.h (enum r6000_reg_class_enum): Delete\n\tRS6000_CONSTRAINT_wb.\n\t* config/rs6000/rs6000.c (rs6000_debug_reg_global): Adjust.\n\t(rs6000_init_hard_regno_mode_ok): Adjust.\n\t* config/rs6000/rs6000.md: Replace \"wb\" constraint by \"v\" with \"p9v\".\n\t* config/rs6000/vsx.md: Ditto.\n\t* doc/md.texi (Machine Constraints): Adjust.\n\nFrom-SVN: r271386", "tree": {"sha": "fca50ae80f68ed28abbc689f2c923751f2d47bcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fca50ae80f68ed28abbc689f2c923751f2d47bcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d17fbef89f753c171ab29c8a2c484fa2be8271b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d17fbef89f753c171ab29c8a2c484fa2be8271b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d17fbef89f753c171ab29c8a2c484fa2be8271b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d17fbef89f753c171ab29c8a2c484fa2be8271b2/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "afc69d4efe3e4b2ca974fa4c54942e0f40266fcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc69d4efe3e4b2ca974fa4c54942e0f40266fcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc69d4efe3e4b2ca974fa4c54942e0f40266fcf"}], "stats": {"total": 111, "additions": 57, "deletions": 54}, "files": [{"sha": "19a683c276dc630f728c96bce4eaad6eb2ad5baa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d17fbef89f753c171ab29c8a2c484fa2be8271b2", "patch": "@@ -1,3 +1,15 @@\n+2019-05-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/constraints.md (define_register_constraint \"wb\"):\n+\tDelete.\n+\t* config/rs6000/rs6000.h (enum r6000_reg_class_enum): Delete\n+\tRS6000_CONSTRAINT_wb.\n+\t* config/rs6000/rs6000.c (rs6000_debug_reg_global): Adjust.\n+\t(rs6000_init_hard_regno_mode_ok): Adjust.\n+\t* config/rs6000/rs6000.md: Replace \"wb\" constraint by \"v\" with \"p9v\".\n+\t* config/rs6000/vsx.md: Ditto.\n+\t* doc/md.texi (Machine Constraints): Adjust.\n+\n 2019-05-19  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/constraints.md (define_register_constraint \"wo\"):"}, {"sha": "1bbfe714c21ded69a9bb7b344ff1a8d6441761c3", "filename": "gcc/config/rs6000/constraints.md", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fconstraints.md?ref=d17fbef89f753c171ab29c8a2c484fa2be8271b2", "patch": "@@ -56,9 +56,6 @@\n (define_register_constraint \"wa\" \"rs6000_constraints[RS6000_CONSTRAINT_wa]\"\n   \"Any VSX register if the -mvsx option was used or NO_REGS.\")\n \n-(define_register_constraint \"wb\" \"rs6000_constraints[RS6000_CONSTRAINT_wb]\"\n-  \"Altivec register if the -mpower9-dform option was used or NO_REGS.\")\n-\n ;; NOTE: For compatibility, \"wc\" is reserved to represent individual CR bits.\n ;; It is currently used for that purpose in LLVM.\n "}, {"sha": "f89a86ff5b74212531c1e4fae39f56079ec63dfe", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d17fbef89f753c171ab29c8a2c484fa2be8271b2", "patch": "@@ -2508,7 +2508,6 @@ rs6000_debug_reg_global (void)\n \t   \"f  reg_class = %s\\n\"\n \t   \"v  reg_class = %s\\n\"\n \t   \"wa reg_class = %s\\n\"\n-\t   \"wb reg_class = %s\\n\"\n \t   \"wd reg_class = %s\\n\"\n \t   \"we reg_class = %s\\n\"\n \t   \"wf reg_class = %s\\n\"\n@@ -2540,7 +2539,6 @@ rs6000_debug_reg_global (void)\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_f]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_v]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wa]],\n-\t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wb]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wd]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_we]],\n \t   reg_class_names[rs6000_constraints[RS6000_CONSTRAINT_wf]],\n@@ -3264,10 +3262,6 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n \trs6000_constraints[RS6000_CONSTRAINT_wp] = VSX_REGS;\t/* TFmode  */\n     }\n \n-  /* Support for new D-form instructions.  */\n-  if (TARGET_P9_VECTOR)\n-    rs6000_constraints[RS6000_CONSTRAINT_wb] = ALTIVEC_REGS;\n-\n   /* Support for new direct moves (ISA 3.0 + 64bit).  */\n   if (TARGET_DIRECT_MOVE_128)\n     rs6000_constraints[RS6000_CONSTRAINT_we] = VSX_REGS;"}, {"sha": "2f2e45fd67ffda7e194bd78ca8f5c9ff75daed06", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=d17fbef89f753c171ab29c8a2c484fa2be8271b2", "patch": "@@ -1249,7 +1249,6 @@ enum r6000_reg_class_enum {\n   RS6000_CONSTRAINT_f,\t\t/* fpr registers for single values */\n   RS6000_CONSTRAINT_v,\t\t/* Altivec registers */\n   RS6000_CONSTRAINT_wa,\t\t/* Any VSX register */\n-  RS6000_CONSTRAINT_wb,\t\t/* Altivec register if ISA 3.0 vector. */\n   RS6000_CONSTRAINT_wd,\t\t/* VSX register for V2DF */\n   RS6000_CONSTRAINT_we,\t\t/* VSX register if ISA 3.0 vector. */\n   RS6000_CONSTRAINT_wf,\t\t/* VSX register for V4SF */"}, {"sha": "791aca783c5ead62fdea6ab491e1ba5a75fca148", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 39, "deletions": 37, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=d17fbef89f753c171ab29c8a2c484fa2be8271b2", "patch": "@@ -477,7 +477,7 @@\n (define_mode_attr f64_av  [(DF \"wv\") (DD \"wn\")])\n \n ; Definitions for 64-bit access to ISA 3.0 (power9) vector\n-(define_mode_attr f64_p9  [(DF \"wb\") (DD \"wn\")])\n+(define_mode_attr f64_p9  [(DF \"v\") (DD \"wn\")])\n \n ; These modes do not fit in integer registers in 32-bit mode.\n (define_mode_iterator DIFD [DI DF DD])\n@@ -4769,7 +4769,7 @@\n })\n \n (define_insn_and_split \"*extendsfdf2_fpr\"\n-  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d,?d,d,ws,?ws,wu,wb\")\n+  [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d,?d,d,ws,?ws,wu,v\")\n \t(float_extend:DF (match_operand:SF 1 \"reg_or_mem_operand\" \"0,f,m,0,wy,Z,wY\")))]\n   \"TARGET_HARD_FLOAT && !HONOR_SNANS (SFmode)\"\n   \"@\n@@ -4786,7 +4786,8 @@\n   emit_note (NOTE_INSN_DELETED);\n   DONE;\n }\n-  [(set_attr \"type\" \"fp,fpsimple,fpload,fp,fpsimple,fpload,fpload\")])\n+  [(set_attr \"type\" \"fp,fpsimple,fpload,fp,fpsimple,fpload,fpload\")\n+   (set_attr \"isa\" \"*,*,*,*,*,*,p9v\")])\n \n (define_insn \"*extendsfdf2_snan\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d,ws\")\n@@ -6945,18 +6946,15 @@\n \t\t\"=r,         r,           ?*wI,        ?*wH,     m,\n \t\t m,          wY,          Z,           r,        ?*wIwH,\n \t\t wIwH\")\n-\n \t(unspec:SI [(match_operand:SF 1 \"input_operand\"\n \t\t\"r,          m,           Z,           Z,        r,\n-\t\t f,          wb,          wu,          wIwH,     wIwH,\n+\t\t f,          v,           wu,          wIwH,     wIwH,\n \t\t r\")]\n \t\t    UNSPEC_SI_FROM_SF))\n-\n    (clobber (match_scratch:V4SF 2\n \t\t\"=X,         X,           X,           X,        X,\n \t\t X,          X,           X,           wIwH,     X,\n \t\t X\"))]\n-\n   \"TARGET_NO_SF_SUBREG\n    && (register_operand (operands[0], SImode)\n        || register_operand (operands[1], SFmode))\"\n@@ -6991,11 +6989,14 @@\n \t\t\"*,          load,        fpload,      fpload,   store,\n \t\t fpstore,    fpstore,     fpstore,     mftgpr,   fp,\n \t\t mffgpr\")\n-\n    (set_attr \"length\"\n \t\t\"4,          4,           4,           4,        4,\n \t\t 4,          4,           4,           8,        4,\n-\t\t 4\")])\n+\t\t 4\")\n+   (set_attr \"isa\"\n+\t\t\"*,          *,           *,           *,        *,\n+\t\t *,          p9v,         *,           *,        *,\n+\t\t *\")])\n \n ;; movsi_from_sf with zero extension\n ;;\n@@ -7280,11 +7281,11 @@\n \n (define_insn \"movsf_hardfloat\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\"\n-\t \"=!r,       f,         wb,         wu,        m,         wY,\n+\t \"=!r,       f,         v,          wu,        m,         wY,\n \t  Z,         m,         ww,         !r,        f,         ww,\n \t  !r,        *c*l,      !r,         *h\")\n \t(match_operand:SF 1 \"input_operand\"\n-\t \"m,         m,         wY,         Z,         f,         wb,\n+\t \"m,         m,         wY,         Z,         f,         v,\n \t  wu,        r,         j,          j,         f,         ww,\n \t  r,         r,         *h,         0\"))]\n   \"(register_operand (operands[0], SFmode)\n@@ -7312,7 +7313,11 @@\n   [(set_attr \"type\"\n \t\"load,       fpload,    fpload,     fpload,    fpstore,   fpstore,\n \t fpstore,    store,     veclogical, integer,   fpsimple,  fpsimple,\n-\t *,          mtjmpr,    mfjmpr,     *\")])\n+\t *,          mtjmpr,    mfjmpr,     *\")\n+   (set_attr \"isa\"\n+\t\"*,          *,         p9v,        *,         *,         p9v,\n+\t *,          *,         *,          *,         *,         *,\n+\t *,          *,         *,          *\")])\n \n ;;\tLWZ          LFIWZX     STW        STFIWX     MTVSRWZ    MFVSRWZ\n ;;\tFMR          MR         MT%0       MF%1       NOP\n@@ -7394,18 +7399,15 @@\n ;;\t    STXSIWX      GPR->VSX   VSX->GPR   GPR->GPR\n (define_insn_and_split \"movsf_from_si\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\"\n-\t    \"=!r,       f,         wb,        wu,        m,         Z,\n+\t    \"=!r,       f,         v,         wu,        m,         Z,\n \t     Z,         wy,        ?r,        !r\")\n-\n \t(unspec:SF [(match_operand:SI 1 \"input_operand\" \n \t    \"m,         m,         wY,        Z,         r,         f,\n \t     wu,        r,         wy,        r\")]\n \t\t   UNSPEC_SF_FROM_SI))\n-\n    (clobber (match_scratch:DI 2\n \t    \"=X,        X,         X,         X,         X,         X,\n              X,         r,         X,         X\"))]\n-\n   \"TARGET_NO_SF_SUBREG\n    && (register_operand (operands[0], SFmode)\n        || register_operand (operands[1], SImode))\"\n@@ -7442,7 +7444,10 @@\n \t     4,          12,        4,         4\")\n    (set_attr \"type\"\n \t    \"load,       fpload,    fpload,    fpload,    store,     fpstore,\n-\t     fpstore,    vecfloat,  mffgpr,    *\")])\n+\t     fpstore,    vecfloat,  mffgpr,    *\")\n+   (set_attr \"isa\"\n+\t    \"*,          *,         p9v,       *,         *,         *,\n+\t     *,          *,         *,         *\")])\n \n \f\n ;; Move 64-bit binary/decimal floating point\n@@ -7546,12 +7551,10 @@\n             \"=m,          d,          d,          <f64_p9>,   wY,\n               <f64_av>,   Z,          <f64_vsx>,  <f64_vsx>,  !r,\n               Y,          r,          !r\")\n-\n \t(match_operand:FMOVE64 1 \"input_operand\"\n              \"d,          m,          d,          wY,         <f64_p9>,\n               Z,          <f64_av>,   <f64_vsx>,  <zero_fp>,  <zero_fp>,\n               r,          Y,          r\"))]\n-\n   \"! TARGET_POWERPC64 && TARGET_HARD_FLOAT\n    && (gpc_reg_operand (operands[0], <MODE>mode)\n        || gpc_reg_operand (operands[1], <MODE>mode))\"\n@@ -7573,12 +7576,15 @@\n             \"fpstore,     fpload,     fpsimple,   fpload,     fpstore,\n              fpload,      fpstore,    veclogical, veclogical, two,\n              store,       load,       two\")\n-\n    (set_attr \"size\" \"64\")\n    (set_attr \"length\"\n             \"4,           4,          4,          4,          4,\n              4,           4,          4,          4,          8,\n-             8,           8,          8\")])\n+             8,           8,          8\")\n+   (set_attr \"isa\"\n+            \"*,           *,          *,          p9v,        p9v,\n+             *,           *,          *,          *,          *,\n+             *,           *,          *\")])\n \n ;;           STW      LWZ     MR      G-const H-const F-const\n \n@@ -7613,13 +7619,11 @@\n              <f64_av>,    Z,          <f64_vsx>,  <f64_vsx>,  !r,\n              YZ,          r,          !r,         *c*l,       !r,\n             *h,           r,          wg,         r,          <f64_dm>\")\n-\n \t(match_operand:FMOVE64 1 \"input_operand\"\n             \"d,           m,          d,          wY,         <f64_p9>,\n              Z,           <f64_av>,   <f64_vsx>,  <zero_fp>,  <zero_fp>,\n              r,           YZ,         r,          r,          *h,\n              0,           wg,         r,          <f64_dm>,   r\"))]\n-\n   \"TARGET_POWERPC64 && TARGET_HARD_FLOAT\n    && (gpc_reg_operand (operands[0], <MODE>mode)\n        || gpc_reg_operand (operands[1], <MODE>mode))\"\n@@ -7648,10 +7652,13 @@\n             \"fpstore,     fpload,     fpsimple,   fpload,     fpstore,\n              fpload,      fpstore,    veclogical, veclogical, integer,\n              store,       load,       *,          mtjmpr,     mfjmpr,\n-             *,           mftgpr,     mffgpr,     mftgpr,    mffgpr\")\n-\n+             *,           mftgpr,     mffgpr,     mftgpr,     mffgpr\")\n    (set_attr \"size\" \"64\")\n-   (set_attr \"length\" \"4\")])\n+   (set_attr \"isa\"\n+            \"*,           *,          *,          p9v,        p9v,\n+             *,           *,          *,          *,          *,\n+             *,           *,          *,          *,          *,\n+             *,           *,          *,          *,          *\")])\n \n ;;           STD      LD       MR      MT<SPR> MF<SPR> G-const\n ;;           H-const  F-const  Special\n@@ -8708,16 +8715,14 @@\n (define_insn \"*movdi_internal32\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n          \"=Y,        r,         r,         m,         ^d,        ^d,\n-          r,         wY,        Z,         ^wb,       $wv,       ^wi,\n+          r,         wY,        Z,         ^v,        $wv,       ^wi,\n           wa,        wa,        wv,        wi,        *i,        wv,\n           wv\")\n-\n \t(match_operand:DI 1 \"input_operand\"\n          \"r,         Y,         r,         ^d,        m,         ^d,\n-          IJKnF,     ^wb,       $wv,       wY,        Z,         ^wi,\n+          IJKnF,     ^v,        $wv,       wY,        Z,         ^wi,\n           Oj,        wM,        OjwM,      Oj,        wM,        wS,\n           wB\"))]\n-\n   \"! TARGET_POWERPC64\n    && (gpc_reg_operand (operands[0], DImode)\n        || gpc_reg_operand (operands[1], DImode))\"\n@@ -8754,7 +8759,7 @@\n           4\")\n    (set_attr \"isa\"\n          \"*,         *,         *,         *,         *,         *,\n-          *,         *,         *,         *,         *,         *,\n+          *,         p9v,       *,         p9v,       *,         *,\n           p9v,       p9v,       *,         *,         *,         *,\n           *\")])\n \n@@ -8793,18 +8798,16 @@\n (define_insn \"*movdi_internal64\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n                \"=YZ,       r,         r,         r,         r,          r,\n-                m,         ^d,        ^d,        wY,        Z,          $wb,\n+                m,         ^d,        ^d,        wY,        Z,          $v,\n                 $wv,       ^wi,       wa,        wa,        wv,         wi,\n                 wi,        wv,        wv,        r,         *h,         *h,\n                 ?r,        ?wg,       ?r,        ?wj\")\n-\n \t(match_operand:DI 1 \"input_operand\"\n                \"r,         YZ,        r,         I,         L,          nF,\n-                ^d,        m,         ^d,        ^wb,       $wv,        wY,\n+                ^d,        m,         ^d,        ^v,        $wv,        wY,\n                 Z,         ^wi,       Oj,        wM,        OjwM,       Oj,\n                 wM,        wS,        wB,        *h,        r,          0,\n                 wg,        r,         wj,        r\"))]\n-\n   \"TARGET_POWERPC64\n    && (gpc_reg_operand (operands[0], DImode)\n        || gpc_reg_operand (operands[1], DImode))\"\n@@ -8843,7 +8846,6 @@\n                 fpload,     veclogical, vecsimple, vecsimple, vecsimple, veclogical,\n                 veclogical, vecsimple,  vecsimple, mfjmpr,    mtjmpr,    *,\n                 mftgpr,     mffgpr,     mftgpr,    mffgpr\")\n-\n    (set_attr \"size\" \"64\")\n    (set_attr \"length\"\n                \"4,         4,         4,         4,         4,          20,\n@@ -8853,7 +8855,7 @@\n                 4,         4,         4,         4\")\n    (set_attr \"isa\"\n                \"*,         *,         *,         *,         *,          *,\n-                *,         *,         *,         *,         *,          *,\n+                *,         *,         *,         p9v,       *,          p9v,\n                 *,         *,         p9v,       p9v,       *,          *,\n                 *,         *,         *,         *,         *,          *,\n                 *,         *,         *,         *\")])"}, {"sha": "0b2ddaae110587285025890c16e732874d7d8415", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=d17fbef89f753c171ab29c8a2c484fa2be8271b2", "patch": "@@ -3280,14 +3280,15 @@\n (define_insn \"*vsx_extract_<mode>_store\"\n   [(set (match_operand:<VS_scalar> 0 \"memory_operand\" \"=m,Z,wY\")\n \t(vec_select:<VS_scalar>\n-\t (match_operand:VSX_D 1 \"register_operand\" \"d,wv,wb\")\n+\t (match_operand:VSX_D 1 \"register_operand\" \"d,wv,v\")\n \t (parallel [(match_operand:QI 2 \"vsx_scalar_64bit\" \"wD,wD,wD\")])))]\n   \"VECTOR_MEM_VSX_P (<MODE>mode)\"\n   \"@\n    stfd%U0%X0 %1,%0\n    stxsdx %x1,%y0\n    stxsd %1,%0\"\n-  [(set_attr \"type\" \"fpstore\")])\n+  [(set_attr \"type\" \"fpstore\")\n+   (set_attr \"isa\" \"*,*,p9v\")])\n \n ;; Variable V2DI/V2DF extract shift\n (define_insn \"vsx_vslo_<mode>\"\n@@ -3352,7 +3353,7 @@\n    (set_attr \"type\" \"fp\")])\n \n (define_insn_and_split \"*vsx_extract_v4sf_<mode>_load\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,wv,wb,?r\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f,wv,v,?r\")\n \t(vec_select:SF\n \t (match_operand:V4SF 1 \"memory_operand\" \"m,Z,m,m\")\n \t (parallel [(match_operand:QI 2 \"const_0_to_3_operand\" \"n,n,n,n\")])))\n@@ -3366,7 +3367,8 @@\n \t\t\t\t\t   operands[3], SFmode);\n }\n   [(set_attr \"type\" \"fpload,fpload,fpload,load\")\n-   (set_attr \"length\" \"8\")])\n+   (set_attr \"length\" \"8\")\n+   (set_attr \"isa\" \"*,*,p9v,*\")])\n \n ;; Variable V4SF extract\n (define_insn_and_split \"vsx_extract_v4sf_var\""}, {"sha": "1debcabec3c3fd4b1f151f9966f1c21a19e93a22", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d17fbef89f753c171ab29c8a2c484fa2be8271b2/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=d17fbef89f753c171ab29c8a2c484fa2be8271b2", "patch": "@@ -3246,9 +3246,6 @@ asm (\"xsaddqp %x0,%x1,%x2\"\n @noindent\n is incorrect.\n \n-@item wb\n-Altivec register if @option{-mcpu=power9} is used or NO_REGS.\n-\n @item wd\n VSX vector register to hold vector double data or NO_REGS.\n "}]}