{"sha": "67b2ed8e563ac254e6a7952cb7bff1d0f2d0a89a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdiMmVkOGU1NjNhYzI1NGU2YTc5NTJjYjdiZmYxZDBmMmQwYTg5YQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-04-16T21:42:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-17T08:14:19Z"}, "message": "[Ada] Fix incorrect operand sharing after expansion\n\n2020-06-17  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_N_Op_Expon): Replace all occurrences of\n\tthe original right operand with the relocated version.", "tree": {"sha": "ccc4e8e98661400853659dca93fea27a8c059b12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccc4e8e98661400853659dca93fea27a8c059b12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67b2ed8e563ac254e6a7952cb7bff1d0f2d0a89a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b2ed8e563ac254e6a7952cb7bff1d0f2d0a89a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b2ed8e563ac254e6a7952cb7bff1d0f2d0a89a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b2ed8e563ac254e6a7952cb7bff1d0f2d0a89a/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "765005dd6791889af2731073bb7c5f6305d14f01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/765005dd6791889af2731073bb7c5f6305d14f01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/765005dd6791889af2731073bb7c5f6305d14f01"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "e7db7b0150f69912826ee5ebdbc22834261d78f2", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67b2ed8e563ac254e6a7952cb7bff1d0f2d0a89a/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67b2ed8e563ac254e6a7952cb7bff1d0f2d0a89a/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=67b2ed8e563ac254e6a7952cb7bff1d0f2d0a89a", "patch": "@@ -8778,8 +8778,7 @@ package body Exp_Ch4 is\n \n                --  Determine range to see if it can be larger than MaxS\n \n-               Determine_Range\n-                 (Right_Opnd (N), OK, Lo, Hi, Assume_Valid => True);\n+               Determine_Range (Exp, OK, Lo, Hi, Assume_Valid => True);\n                TestS := (not OK) or else Hi > MaxS;\n \n                --  Signed integer case\n@@ -8796,7 +8795,7 @@ package body Exp_Ch4 is\n                        Make_Raise_Constraint_Error (Loc,\n                          Condition =>\n                            Make_Op_Gt (Loc,\n-                             Left_Opnd  => Duplicate_Subexpr (Right_Opnd (N)),\n+                             Left_Opnd  => Duplicate_Subexpr (Exp),\n                              Right_Opnd => Make_Integer_Literal (Loc, MaxS)),\n                          Reason    => CE_Overflow_Check_Failed));\n                   end if;\n@@ -8806,7 +8805,7 @@ package body Exp_Ch4 is\n                   Rewrite (N,\n                     Make_Op_Shift_Left (Loc,\n                       Left_Opnd  => Make_Integer_Literal (Loc, Uint_1),\n-                      Right_Opnd => Right_Opnd (N)));\n+                      Right_Opnd => Exp));\n \n                --  Modular integer case\n \n@@ -8824,7 +8823,7 @@ package body Exp_Ch4 is\n \n                      Test_Gt :=\n                        Make_Op_Gt (Loc,\n-                         Left_Opnd  => Duplicate_Subexpr (Right_Opnd (N)),\n+                         Left_Opnd  => Duplicate_Subexpr (Exp),\n                          Right_Opnd => Make_Integer_Literal (Loc, MaxS));\n \n                      Rewrite (N,\n@@ -8834,7 +8833,7 @@ package body Exp_Ch4 is\n                            Make_Integer_Literal (Loc, Uint_0),\n                            Make_Op_Shift_Left (Loc,\n                              Left_Opnd  => Make_Integer_Literal (Loc, Uint_1),\n-                             Right_Opnd => Right_Opnd (N)))));\n+                             Right_Opnd => Exp))));\n \n                   --  If we know shift count cannot be greater than MaxS, then\n                   --  it is safe to just rewrite as a shift with no test.\n@@ -8843,7 +8842,7 @@ package body Exp_Ch4 is\n                      Rewrite (N,\n                        Make_Op_Shift_Left (Loc,\n                          Left_Opnd  => Make_Integer_Literal (Loc, Uint_1),\n-                         Right_Opnd => Right_Opnd (N)));\n+                         Right_Opnd => Exp));\n                   end if;\n                end if;\n "}]}