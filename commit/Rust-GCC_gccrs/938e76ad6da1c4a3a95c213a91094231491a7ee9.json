{"sha": "938e76ad6da1c4a3a95c213a91094231491a7ee9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM4ZTc2YWQ2ZGExYzRhM2E5NWMyMTNhOTEwOTQyMzE0OTFhN2VlOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-12-18T14:51:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-12-18T14:51:56Z"}, "message": "re PR c++/38561 (Revision 142799 may cause C++ demangle failures)\n\n        PR c++/38561\n        * cp-demangle.c (d_expression, d_print_comp): Revert\n        cast changes.\n\nFrom-SVN: r142814", "tree": {"sha": "e33eecd70302ce8615d9753fc35fc2589c6a514c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e33eecd70302ce8615d9753fc35fc2589c6a514c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/938e76ad6da1c4a3a95c213a91094231491a7ee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938e76ad6da1c4a3a95c213a91094231491a7ee9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/938e76ad6da1c4a3a95c213a91094231491a7ee9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938e76ad6da1c4a3a95c213a91094231491a7ee9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0dec126200d83f45ef8dfcb1e7872f5f759064e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dec126200d83f45ef8dfcb1e7872f5f759064e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dec126200d83f45ef8dfcb1e7872f5f759064e0"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "f46fe05f3791f75e8990ce287d38f0a486a61467", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938e76ad6da1c4a3a95c213a91094231491a7ee9/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938e76ad6da1c4a3a95c213a91094231491a7ee9/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=938e76ad6da1c4a3a95c213a91094231491a7ee9", "patch": "@@ -1,3 +1,9 @@\n+2008-12-18  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/38561\n+\t* cp-demangle.c (d_expression, d_print_comp): Revert\n+\tcast changes.\n+\n 2008-12-17  Jason Merrill  <jason@redhat.com>\n \n \t* cp-demangle.c (d_expression): Handle rvalue stubs too."}, {"sha": "5ae04c068f19d3049f16793785fb8fabaaa8282a", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938e76ad6da1c4a3a95c213a91094231491a7ee9/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938e76ad6da1c4a3a95c213a91094231491a7ee9/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=938e76ad6da1c4a3a95c213a91094231491a7ee9", "patch": "@@ -2609,22 +2609,20 @@ d_expression (struct d_info *di)\n \t  args = op->u.s_extended_operator.args;\n \t  break;\n \tcase DEMANGLE_COMPONENT_CAST:\n-\t  args = 1;\n+\t  if (d_peek_char (di) == 'v')\n+\t    /* T() encoded as an operand of void.  */\n+\t    return d_make_comp (di, DEMANGLE_COMPONENT_UNARY, op,\n+\t\t\t\tcplus_demangle_type (di));\n+\t  else\n+\t    args = 1;\n \t  break;\n \t}\n \n       switch (args)\n \t{\n \tcase 1:\n-\t  {\n-\t    struct demangle_component *operand;\n-\t    if (op->type == DEMANGLE_COMPONENT_CAST)\n-\t      operand = d_exprlist (di);\n-\t    else\n-\t      operand = d_expression (di);\n-\t    return d_make_comp (di, DEMANGLE_COMPONENT_UNARY, op,\n-\t\t\t\toperand);\n-\t  }\n+\t  return d_make_comp (di, DEMANGLE_COMPONENT_UNARY, op,\n+\t\t\t      d_expression (di));\n \tcase 2:\n \t  {\n \t    struct demangle_component *left;\n@@ -3809,7 +3807,12 @@ d_print_comp (struct d_print_info *dpi,\n \t  d_print_cast (dpi, d_left (dc));\n \t  d_append_char (dpi, ')');\n \t}\n-      d_print_subexpr (dpi, d_right (dc));\n+      if (d_left (dc)->type == DEMANGLE_COMPONENT_CAST\n+\t  && d_right (dc)->type == DEMANGLE_COMPONENT_BUILTIN_TYPE)\n+\t/* type() -- FIXME what about type(multiple,args) */\n+\td_append_string (dpi, \"()\");\n+      else\n+\td_print_subexpr (dpi, d_right (dc));\n       return;\n \n     case DEMANGLE_COMPONENT_BINARY:"}]}