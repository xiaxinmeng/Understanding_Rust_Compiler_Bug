{"sha": "346081bd18e918571f0169a20122fb3ed3552960", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ2MDgxYmQxOGU5MTg1NzFmMDE2OWEyMDEyMmZiM2VkMzU1Mjk2MA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-06-07T15:32:39Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-06-07T15:32:39Z"}, "message": "rs6000: Remove spe_acc and spefscr\n\nWe can also remove the two other SPE registers.\n\n\n\t* config/rs6000/darwin.h (REGISTER_NAMES): Delete the SPE_ACC and\n\tSPEFSCR registers.\n\t* config/rs6000/rs6000.c (rs6000_reg_names, alt_reg_names): Ditto.\n\t(enum rs6000_reg_type): Delete SPE_ACC_TYPE and SPEFSCR_REG_TYPE.\n\t(rs6000_debug_reg_global): Adjust.\n\t(rs6000_init_hard_regno_mode_ok): Adjust.\n\t(rs6000_dbx_register_number): Adjust.\n\t* config/rs6000/rs6000.h (FIRST_PSEUDO_REGISTER): Change to 115.\n\t(FIXED_REGISTERS, CALL_USED_REGISTERS, CALL_REALLY_USED_REGISTERS):\n\tRemove SPE_ACC and SPEFSCR.\n\t(REG_ALLOC_ORDER): Ditto.\n\t(FRAME_POINTER_REGNUM): Change to 111.\n\t(enum reg_class): Remove the SPE_ACC and SPEFSCR registers.\n\t(REG_CLASS_NAMES): Ditto.\n\t(REG_CLASS_CONTENTS): Delete the SPE_ACC and SPEFSCR registers.\n\t(REGISTER_NAMES): Ditto.\n\t(ADDITIONAL_REG_NAMES): Ditto.\n\t(rs6000_reg_names): Ditto.\n\t* config/rs6000/rs6000.md: Renumber some register number\n\tdefine_constants.\n\nFrom-SVN: r248986", "tree": {"sha": "c77027517ade16edaf54c89d11c11b5b0d83c5a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c77027517ade16edaf54c89d11c11b5b0d83c5a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/346081bd18e918571f0169a20122fb3ed3552960", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/346081bd18e918571f0169a20122fb3ed3552960", "html_url": "https://github.com/Rust-GCC/gccrs/commit/346081bd18e918571f0169a20122fb3ed3552960", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/346081bd18e918571f0169a20122fb3ed3552960/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a"}], "stats": {"total": 98, "additions": 45, "deletions": 53}, "files": [{"sha": "45fc0ddc9fa42d5f10e7b349ed4a96bf7d47c3d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346081bd18e918571f0169a20122fb3ed3552960/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346081bd18e918571f0169a20122fb3ed3552960/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=346081bd18e918571f0169a20122fb3ed3552960", "patch": "@@ -1,3 +1,26 @@\n+2017-06-07  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/darwin.h (REGISTER_NAMES): Delete the SPE_ACC and\n+\tSPEFSCR registers.\n+\t* config/rs6000/rs6000.c (rs6000_reg_names, alt_reg_names): Ditto.\n+\t(enum rs6000_reg_type): Delete SPE_ACC_TYPE and SPEFSCR_REG_TYPE.\n+\t(rs6000_debug_reg_global): Adjust.\n+\t(rs6000_init_hard_regno_mode_ok): Adjust.\n+\t(rs6000_dbx_register_number): Adjust.\n+\t* config/rs6000/rs6000.h (FIRST_PSEUDO_REGISTER): Change to 115.\n+\t(FIXED_REGISTERS, CALL_USED_REGISTERS, CALL_REALLY_USED_REGISTERS):\n+\tRemove SPE_ACC and SPEFSCR.\n+\t(REG_ALLOC_ORDER): Ditto.\n+\t(FRAME_POINTER_REGNUM): Change to 111.\n+\t(enum reg_class): Remove the SPE_ACC and SPEFSCR registers.\n+\t(REG_CLASS_NAMES): Ditto.\n+\t(REG_CLASS_CONTENTS): Delete the SPE_ACC and SPEFSCR registers.\n+\t(REGISTER_NAMES): Ditto.\n+\t(ADDITIONAL_REG_NAMES): Ditto.\n+\t(rs6000_reg_names): Ditto.\n+\t* config/rs6000/rs6000.md: Renumber some register number\n+\tdefine_constants.\n+\n 2017-06-07  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/darwin.h (REGISTER_NAMES): Delete the SPE high"}, {"sha": "90fc757532aa56463c8136b6b358c686c234a2f8", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346081bd18e918571f0169a20122fb3ed3552960/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346081bd18e918571f0169a20122fb3ed3552960/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=346081bd18e918571f0169a20122fb3ed3552960", "patch": "@@ -192,7 +192,6 @@ extern int darwin_emit_branch_islands;\n     \"v16\", \"v17\", \"v18\", \"v19\", \"v20\", \"v21\", \"v22\", \"v23\",             \\\n     \"v24\", \"v25\", \"v26\", \"v27\", \"v28\", \"v29\", \"v30\", \"v31\",             \\\n     \"vrsave\", \"vscr\",\t\t\t\t\t\t\t\\\n-    \"spe_acc\", \"spefscr\",                                               \\\n     \"sfp\",\t\t\t\t\t\t\t\t\\\n     \"tfhar\", \"tfiar\", \"texasr\"\t\t\t\t\t\t\\\n }"}, {"sha": "d369e1ad954d9a344fed2dcd15cd39e50ab1c6be", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346081bd18e918571f0169a20122fb3ed3552960/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346081bd18e918571f0169a20122fb3ed3552960/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=346081bd18e918571f0169a20122fb3ed3552960", "patch": "@@ -437,8 +437,6 @@ enum rs6000_reg_type {\n   FPR_REG_TYPE,\n   SPR_REG_TYPE,\n   CR_REG_TYPE,\n-  SPE_ACC_TYPE,\n-  SPEFSCR_REG_TYPE\n };\n \n /* Map register class to register type.  */\n@@ -1502,8 +1500,6 @@ char rs6000_reg_names[][8] =\n       \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\",\n       \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\",\n       \"vrsave\", \"vscr\",\n-      /* SPE registers.  */\n-      \"spe_acc\", \"spefscr\",\n       /* Soft frame pointer.  */\n       \"sfp\",\n       /* HTM SPR registers.  */\n@@ -1530,8 +1526,6 @@ static const char alt_reg_names[][8] =\n   \"%v16\", \"%v17\", \"%v18\", \"%v19\", \"%v20\", \"%v21\", \"%v22\", \"%v23\",\n   \"%v24\", \"%v25\", \"%v26\", \"%v27\", \"%v28\", \"%v29\", \"%v30\", \"%v31\",\n   \"vrsave\", \"vscr\",\n-  /* SPE registers.  */\n-  \"spe_acc\", \"spefscr\",\n   /* Soft frame pointer.  */\n   \"sfp\",\n   /* HTM SPR registers.  */\n@@ -2514,8 +2508,6 @@ rs6000_debug_reg_global (void)\n   rs6000_debug_reg_print (CA_REGNO, CA_REGNO, \"ca\");\n   rs6000_debug_reg_print (VRSAVE_REGNO, VRSAVE_REGNO, \"vrsave\");\n   rs6000_debug_reg_print (VSCR_REGNO, VSCR_REGNO, \"vscr\");\n-  rs6000_debug_reg_print (SPE_ACC_REGNO, SPE_ACC_REGNO, \"spe_a\");\n-  rs6000_debug_reg_print (SPEFSCR_REGNO, SPEFSCR_REGNO, \"spe_f\");\n \n   fputs (\"\\nVirtual/stack/frame registers:\\n\", stderr);\n   for (v = 0; v < ARRAY_SIZE (virtual_regs); v++)\n@@ -3024,8 +3016,6 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n   rs6000_regno_regclass[CA_REGNO] = NO_REGS;\n   rs6000_regno_regclass[VRSAVE_REGNO] = VRSAVE_REGS;\n   rs6000_regno_regclass[VSCR_REGNO] = VRSAVE_REGS;\n-  rs6000_regno_regclass[SPE_ACC_REGNO] = SPE_ACC_REGS;\n-  rs6000_regno_regclass[SPEFSCR_REGNO] = SPEFSCR_REGS;\n   rs6000_regno_regclass[TFHAR_REGNO] = SPR_REGS;\n   rs6000_regno_regclass[TFIAR_REGNO] = SPR_REGS;\n   rs6000_regno_regclass[TEXASR_REGNO] = SPR_REGS;\n@@ -3048,8 +3038,6 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n   reg_class_to_reg_type[(int)LINK_OR_CTR_REGS] = SPR_REG_TYPE;\n   reg_class_to_reg_type[(int)CR_REGS] = CR_REG_TYPE;\n   reg_class_to_reg_type[(int)CR0_REGS] = CR_REG_TYPE;\n-  reg_class_to_reg_type[(int)SPE_ACC_REGS] = SPE_ACC_TYPE;\n-  reg_class_to_reg_type[(int)SPEFSCR_REGS] = SPEFSCR_REG_TYPE;\n \n   if (TARGET_VSX)\n     {\n@@ -37481,10 +37469,6 @@ rs6000_dbx_register_number (unsigned int regno, unsigned int format)\n     return 356;\n   if (regno == VSCR_REGNO)\n     return 67;\n-  if (regno == SPE_ACC_REGNO)\n-    return 99;\n-  if (regno == SPEFSCR_REGNO)\n-    return 612;\n #endif\n   return regno;\n }"}, {"sha": "edfa54603f775a7c0818ea28963ad285ec4ecf2e", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 18, "deletions": 30, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346081bd18e918571f0169a20122fb3ed3552960/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346081bd18e918571f0169a20122fb3ed3552960/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=346081bd18e918571f0169a20122fb3ed3552960", "patch": "@@ -1017,7 +1017,7 @@ enum data_align { align_abi, align_opt, align_both };\n \n    The 3 HTM registers aren't also included in DWARF_FRAME_REGISTERS.  */\n \n-#define FIRST_PSEUDO_REGISTER 117\n+#define FIRST_PSEUDO_REGISTER 115\n \n /* This must be included for pre gcc 3.0 glibc compatibility.  */\n #define PRE_GCC3_DWARF_FRAME_REGISTERS 77\n@@ -1056,7 +1056,7 @@ enum data_align { align_abi, align_opt, align_both };\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    1, 1\t\t\t\t\t\t   \\\n-   , 1, 1, 1, 1, 1, 1\t\t\t\t   \\\n+   , 1, 1, 1, 1\t\t\t\t\t   \\\n }\n \n /* 1 for registers not available across function calls.\n@@ -1076,7 +1076,7 @@ enum data_align { align_abi, align_opt, align_both };\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    1, 1\t\t\t\t\t\t   \\\n-   , 1, 1, 1, 1, 1, 1\t\t\t\t   \\\n+   , 1, 1, 1, 1\t\t\t\t\t   \\\n }\n \n /* Like `CALL_USED_REGISTERS' except this macro doesn't require that\n@@ -1095,7 +1095,7 @@ enum data_align { align_abi, align_opt, align_both };\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0\t\t\t\t\t\t   \\\n-   , 0, 0, 0, 0, 0, 0\t\t\t\t   \\\n+   , 0, 0, 0, 0\t\t\t\t\t   \\\n }\n \n #define TOTAL_ALTIVEC_REGS\t(LAST_ALTIVEC_REGNO - FIRST_ALTIVEC_REGNO + 1)\n@@ -1133,7 +1133,6 @@ enum data_align { align_abi, align_opt, align_both };\n \tv19 - v14\t(not saved or used for anything)\n \tv31 - v20\t(saved; order given to save least number)\n \tvrsave, vscr\t(fixed)\n-\tspe_acc, spefscr (fixed)\n \tsfp\t\t(fixed)\n \ttfhar\t\t(fixed)\n \ttfiar\t\t(fixed)\n@@ -1179,7 +1178,7 @@ enum data_align { align_abi, align_opt, align_both };\n    96, 95, 94, 93, 92, 91,\t\t\t\t\t\\\n    108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97,\t\\\n    109, 110,\t\t\t\t\t\t\t\\\n-   111, 112, 113, 114, 115, 116\t\t\t\t\t\\\n+   111, 112, 113, 114\t\t\t\t\t\t\\\n }\n \n /* True if register is floating-point.  */\n@@ -1351,7 +1350,7 @@ enum data_align { align_abi, align_opt, align_both };\n #define HARD_FRAME_POINTER_REGNUM 31\n \n /* Base register for access to local variables of the function.  */\n-#define FRAME_POINTER_REGNUM 113\n+#define FRAME_POINTER_REGNUM 111\n \n /* Base register for access to arguments of the function.  */\n #define ARG_POINTER_REGNUM 67\n@@ -1404,8 +1403,6 @@ enum reg_class\n   VSX_REGS,\n   VRSAVE_REGS,\n   VSCR_REGS,\n-  SPE_ACC_REGS,\n-  SPEFSCR_REGS,\n   SPR_REGS,\n   NON_SPECIAL_REGS,\n   LINK_REGS,\n@@ -1435,8 +1432,6 @@ enum reg_class\n   \"VSX_REGS\",\t\t\t\t\t\t\t\t\\\n   \"VRSAVE_REGS\",\t\t\t\t\t\t\t\\\n   \"VSCR_REGS\",\t\t\t\t\t\t\t\t\\\n-  \"SPE_ACC_REGS\",                                                       \\\n-  \"SPEFSCR_REGS\",                                                       \\\n   \"SPR_REGS\",\t\t\t\t\t\t\t\t\\\n   \"NON_SPECIAL_REGS\",\t\t\t\t\t\t\t\\\n   \"LINK_REGS\",\t\t\t\t\t\t\t\t\\\n@@ -1460,9 +1455,9 @@ enum reg_class\n   /* NO_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t\t\t\\\n   /* BASE_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0xfffffffe, 0x00000000, 0x00000008, 0x00020000 },\t\t\t\\\n+  { 0xfffffffe, 0x00000000, 0x00000008, 0x00008000 },\t\t\t\\\n   /* GENERAL_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0xffffffff, 0x00000000, 0x00000008, 0x00020000 },\t\t\t\\\n+  { 0xffffffff, 0x00000000, 0x00000008, 0x00008000 },\t\t\t\\\n   /* FLOAT_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0xffffffff, 0x00000000, 0x00000000 },\t\t\t\\\n   /* ALTIVEC_REGS.  */\t\t\t\t\t\t\t\\\n@@ -1473,14 +1468,10 @@ enum reg_class\n   { 0x00000000, 0x00000000, 0x00000000, 0x00002000 },\t\t\t\\\n   /* VSCR_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0x00000000, 0x00000000, 0x00004000 },\t\t\t\\\n-  /* SPE_ACC_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0x00008000 },\t\t\t\\\n-  /* SPEFSCR_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0x00010000 },\t\t\t\\\n   /* SPR_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0x00040000 },\t\t\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00010000 },\t\t\t\\\n   /* NON_SPECIAL_REGS.  */\t\t\t\t\t\t\\\n-  { 0xffffffff, 0xffffffff, 0x00000008, 0x00020000 },\t\t\t\\\n+  { 0xffffffff, 0xffffffff, 0x00000008, 0x00008000 },\t\t\t\\\n   /* LINK_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0x00000000, 0x00000002, 0x00000000 },\t\t\t\\\n   /* CTR_REGS.  */\t\t\t\t\t\t\t\\\n@@ -1490,17 +1481,17 @@ enum reg_class\n   /* SPECIAL_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0x00000000, 0x00000006, 0x00002000 },\t\t\t\\\n   /* SPEC_OR_GEN_REGS.  */\t\t\t\t\t\t\\\n-  { 0xffffffff, 0x00000000, 0x0000000e, 0x00022000 },\t\t\t\\\n+  { 0xffffffff, 0x00000000, 0x0000000e, 0x0000a000 },\t\t\t\\\n   /* CR0_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0x00000000, 0x00000010, 0x00000000 },\t\t\t\\\n   /* CR_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0x00000000, 0x00000ff0, 0x00000000 },\t\t\t\\\n   /* NON_FLOAT_REGS.  */\t\t\t\t\t\t\\\n-  { 0xffffffff, 0x00000000, 0x00000ffe, 0x00020000 },\t\t\t\\\n+  { 0xffffffff, 0x00000000, 0x00000ffe, 0x00008000 },\t\t\t\\\n   /* CA_REGS.  */\t\t\t\t\t\t\t\\\n   { 0x00000000, 0x00000000, 0x00001000, 0x00000000 },\t\t\t\\\n   /* ALL_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0xffffffff, 0xffffffff, 0xfffffffe, 0x0007ffff }\t\t\t\\\n+  { 0xffffffff, 0xffffffff, 0xfffffffe, 0x0001ffff }\t\t\t\\\n }\n \n /* The same information, inverted:\n@@ -2429,12 +2420,10 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   &rs6000_reg_names[108][0],\t/* v31  */\t\t\t\t\\\n   &rs6000_reg_names[109][0],\t/* vrsave  */\t\t\t\t\\\n   &rs6000_reg_names[110][0],\t/* vscr  */\t\t\t\t\\\n-  &rs6000_reg_names[111][0],\t/* spe_acc */\t\t\t\t\\\n-  &rs6000_reg_names[112][0],\t/* spefscr */\t\t\t\t\\\n-  &rs6000_reg_names[113][0],\t/* sfp  */\t\t\t\t\\\n-  &rs6000_reg_names[114][0],\t/* tfhar  */\t\t\t\t\\\n-  &rs6000_reg_names[115][0],\t/* tfiar  */\t\t\t\t\\\n-  &rs6000_reg_names[116][0],\t/* texasr  */\t\t\t\t\\\n+  &rs6000_reg_names[111][0],\t/* sfp  */\t\t\t\t\\\n+  &rs6000_reg_names[112][0],\t/* tfhar  */\t\t\t\t\\\n+  &rs6000_reg_names[113][0],\t/* tfiar  */\t\t\t\t\\\n+  &rs6000_reg_names[114][0],\t/* texasr  */\t\t\t\t\\\n }\n \n /* Table of additional register names to use in user input.  */\n@@ -2465,7 +2454,6 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   {\"v24\",  101},{\"v25\",  102},{\"v26\",  103},{\"v27\",  104},      \\\n   {\"v28\",  105},{\"v29\",  106},{\"v30\",  107},{\"v31\",  108},      \\\n   {\"vrsave\", 109}, {\"vscr\", 110},\t\t\t\t\\\n-  {\"spe_acc\", 111}, {\"spefscr\", 112},\t\t\t\t\\\n   /* no additional names for: lr, ctr, ap */\t\t\t\\\n   {\"cr0\",  68}, {\"cr1\",  69}, {\"cr2\",  70}, {\"cr3\",  71},\t\\\n   {\"cr4\",  72}, {\"cr5\",  73}, {\"cr6\",  74}, {\"cr7\",  75},\t\\\n@@ -2490,7 +2478,7 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   {\"vs56\", 101},{\"vs57\", 102},{\"vs58\", 103},{\"vs59\", 104},      \\\n   {\"vs60\", 105},{\"vs61\", 106},{\"vs62\", 107},{\"vs63\", 108},\t\\\n   /* Transactional Memory Facility (HTM) Registers.  */\t\t\\\n-  {\"tfhar\",  114}, {\"tfiar\",  115}, {\"texasr\",  116},\t\t\\\n+  {\"tfhar\",  112}, {\"tfiar\",  113}, {\"texasr\",  114},\t\t\\\n }\n \n /* This is how to output an element of a case-vector that is relative.  */"}, {"sha": "d0120d1cfa5f42ed30dfada816c5c0115184143b", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/346081bd18e918571f0169a20122fb3ed3552960/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/346081bd18e918571f0169a20122fb3ed3552960/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=346081bd18e918571f0169a20122fb3ed3552960", "patch": "@@ -50,12 +50,10 @@\n    (LAST_ALTIVEC_REGNO\t\t108)\n    (VRSAVE_REGNO\t\t109)\n    (VSCR_REGNO\t\t\t110)\n-   (SPE_ACC_REGNO\t\t111)\n-   (SPEFSCR_REGNO\t\t112)\n-   (FRAME_POINTER_REGNUM\t113)\n-   (TFHAR_REGNO\t\t\t114)\n-   (TFIAR_REGNO\t\t\t115)\n-   (TEXASR_REGNO\t\t116)\n+   (FRAME_POINTER_REGNUM\t111)\n+   (TFHAR_REGNO\t\t\t112)\n+   (TFIAR_REGNO\t\t\t113)\n+   (TEXASR_REGNO\t\t114)\n   ])\n \n ;;"}]}