{"sha": "ae9f434509517d4c6671bc197d0d64ef7cf74cde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU5ZjQzNDUwOTUxN2Q0YzY2NzFiYzE5N2QwZDY0ZWY3Y2Y3NGNkZQ==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2014-12-22T10:25:10Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2014-12-22T10:25:10Z"}, "message": "re PR rtl-optimization/62151 (wrong code at -O2 and -O3 on x86_64-linux-gnu)\n\n\n\tPR rtl-optimization/62151\n\t* combine.c (try_combine): New local variables local_elim_i1\n\tand local_elim_i0.  Set elim_i1 and elim_i0 using the local\n\tversion variables.  Distribute notes from i0notes or i1notes\n\tusing the local variables.\n\n\tgcc/testsuite/ChangeLog\n\tPR rtl-optimization/62151\n\t* gcc.c-torture/execute/pr62151.c: New test.\n\nFrom-SVN: r219008", "tree": {"sha": "96ccd894bdb7db0c83347fac0667e0bdc3dff18f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96ccd894bdb7db0c83347fac0667e0bdc3dff18f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae9f434509517d4c6671bc197d0d64ef7cf74cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae9f434509517d4c6671bc197d0d64ef7cf74cde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae9f434509517d4c6671bc197d0d64ef7cf74cde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae9f434509517d4c6671bc197d0d64ef7cf74cde/comments", "author": null, "committer": null, "parents": [{"sha": "86a8ba5b7527ae5df4165567535e67099ab6c52c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86a8ba5b7527ae5df4165567535e67099ab6c52c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86a8ba5b7527ae5df4165567535e67099ab6c52c"}], "stats": {"total": 97, "additions": 89, "deletions": 8}, "files": [{"sha": "e096b52da3fe8d224c6643856cb390a5c851710c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9f434509517d4c6671bc197d0d64ef7cf74cde/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9f434509517d4c6671bc197d0d64ef7cf74cde/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae9f434509517d4c6671bc197d0d64ef7cf74cde", "patch": "@@ -1,3 +1,11 @@\n+2014-12-22  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR rtl-optimization/62151\n+\t* combine.c (try_combine): New local variables local_elim_i1\n+\tand local_elim_i0.  Set elim_i1 and elim_i0 using the local\n+\tversion variables.  Distribute notes from i0notes or i1notes\n+\tusing the local variables.\n+\n 2014-12-22  Martin Liska  <mliska@suse.cz>\n \n \t* cgraphunit.c (symbol_table::process_new_functions): New inline_summaries"}, {"sha": "61df870e9b3983e0eca182b2e711cf50393630af", "filename": "gcc/combine.c", "status": "modified", "additions": 35, "deletions": 8, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9f434509517d4c6671bc197d0d64ef7cf74cde/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9f434509517d4c6671bc197d0d64ef7cf74cde/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=ae9f434509517d4c6671bc197d0d64ef7cf74cde", "patch": "@@ -4124,19 +4124,46 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n     rtx midnotes = 0;\n     int from_luid;\n     /* Compute which registers we expect to eliminate.  newi2pat may be setting\n-       either i3dest or i2dest, so we must check it.  Also, i1dest may be the\n-       same as i3dest, in which case newi2pat may be setting i1dest.  */\n+       either i3dest or i2dest, so we must check it.  */\n     rtx elim_i2 = ((newi2pat && reg_set_p (i2dest, newi2pat))\n \t\t   || i2dest_in_i2src || i2dest_in_i1src || i2dest_in_i0src\n \t\t   || !i2dest_killed\n \t\t   ? 0 : i2dest);\n-    rtx elim_i1 = (i1 == 0 || i1dest_in_i1src || i1dest_in_i0src\n+    /* For i1, we need to compute both local elimination and global\n+       elimination information with respect to newi2pat because i1dest\n+       may be the same as i3dest, in which case newi2pat may be setting\n+       i1dest.  Global information is used when distributing REG_DEAD\n+       note for i2 and i3, in which case it does matter if newi2pat sets\n+       i1dest or not.\n+\n+       Local information is used when distributing REG_DEAD note for i1,\n+       in which case it doesn't matter if newi2pat sets i1dest or not.\n+       See PR62151, if we have four insns combination:\n+\t   i0: r0 <- i0src\n+\t   i1: r1 <- i1src (using r0)\n+\t\t     REG_DEAD (r0)\n+\t   i2: r0 <- i2src (using r1)\n+\t   i3: r3 <- i3src (using r0)\n+\t   ix: using r0\n+       From i1's point of view, r0 is eliminated, no matter if it is set\n+       by newi2pat or not.  In other words, REG_DEAD info for r0 in i1\n+       should be discarded.\n+\n+       Note local information only affects cases in forms like \"I1->I2->I3\",\n+       \"I0->I1->I2->I3\" or \"I0&I1->I2, I2->I3\".  For other cases like\n+       \"I0->I1, I1&I2->I3\" or \"I1&I2->I3\", newi2pat won't set i1dest or\n+       i0dest anyway.  */\n+    rtx local_elim_i1 = (i1 == 0 || i1dest_in_i1src || i1dest_in_i0src\n+\t\t\t || !i1dest_killed\n+\t\t\t ? 0 : i1dest);\n+    rtx elim_i1 = (local_elim_i1 == 0\n \t\t   || (newi2pat && reg_set_p (i1dest, newi2pat))\n-\t\t   || !i1dest_killed\n \t\t   ? 0 : i1dest);\n-    rtx elim_i0 = (i0 == 0 || i0dest_in_i0src\n+    /* Same case as i1.  */\n+    rtx local_elim_i0 = (i0 == 0 || i0dest_in_i0src || !i0dest_killed\n+\t\t\t ? 0 : i0dest);\n+    rtx elim_i0 = (local_elim_i0 == 0\n \t\t   || (newi2pat && reg_set_p (i0dest, newi2pat))\n-\t\t   || !i0dest_killed\n \t\t   ? 0 : i0dest);\n \n     /* Get the old REG_NOTES and LOG_LINKS from all our insns and\n@@ -4305,10 +4332,10 @@ try_combine (rtx_insn *i3, rtx_insn *i2, rtx_insn *i1, rtx_insn *i0,\n \t\t\telim_i2, elim_i1, elim_i0);\n     if (i1notes)\n       distribute_notes (i1notes, i1, i3, newi2pat ? i2 : NULL,\n-\t\t\telim_i2, elim_i1, elim_i0);\n+\t\t\telim_i2, local_elim_i1, local_elim_i0);\n     if (i0notes)\n       distribute_notes (i0notes, i0, i3, newi2pat ? i2 : NULL,\n-\t\t\telim_i2, elim_i1, elim_i0);\n+\t\t\telim_i2, elim_i1, local_elim_i0);\n     if (midnotes)\n       distribute_notes (midnotes, NULL, i3, newi2pat ? i2 : NULL,\n \t\t\telim_i2, elim_i1, elim_i0);"}, {"sha": "7ede224342e194747bcff439ae049c63deb3ef51", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9f434509517d4c6671bc197d0d64ef7cf74cde/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9f434509517d4c6671bc197d0d64ef7cf74cde/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae9f434509517d4c6671bc197d0d64ef7cf74cde", "patch": "@@ -1,3 +1,8 @@\n+2014-12-22  Bin Cheng  <bin.cheng@arm.com>\n+\n+\tPR rtl-optimization/62151\n+\t* gcc.c-torture/execute/pr62151.c: New test.\n+\n 2014-12-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/atomic2.ads: New test."}, {"sha": "283d46f0a246ca801aceaf1b3e08d2bf641b506b", "filename": "gcc/testsuite/gcc.c-torture/execute/pr62151.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae9f434509517d4c6671bc197d0d64ef7cf74cde/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr62151.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae9f434509517d4c6671bc197d0d64ef7cf74cde/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr62151.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr62151.c?ref=ae9f434509517d4c6671bc197d0d64ef7cf74cde", "patch": "@@ -0,0 +1,41 @@\n+/* PR rtl-optimization/62151 */\n+\n+int a, c, d, e, f, g, h, i;\n+short b;\n+\n+int\n+fn1 ()\n+{\n+  b = 0;\n+  for (;;)\n+    {\n+      int j[2];\n+      j[f] = 0;\n+      if (h)\n+\td = 0;\n+      else\n+\t{\n+\t  for (; f; f++)\n+\t    ;\n+\t  for (a = 0; a < 1; a++)\n+\t    for (;;)\n+\t      {\n+\t\ti = b & ((b ^ 1) & 83647) ? b : b - 1;\n+\t\tg = 1 ? i : 0;\n+\t\te = j[0];\n+\t\tif (c)\n+\t\t  break;\n+\t\treturn 0;\n+\t      }\n+\t}\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  fn1 ();\n+  if (g != -1)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}