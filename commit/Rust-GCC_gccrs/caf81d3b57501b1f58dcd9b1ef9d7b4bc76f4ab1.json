{"sha": "caf81d3b57501b1f58dcd9b1ef9d7b4bc76f4ab1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FmODFkM2I1NzUwMWIxZjU4ZGNkOWIxZWY5ZDdiNGJjNzZmNGFiMQ==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2021-08-17T07:53:43Z"}, "committer": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2021-08-30T08:37:17Z"}, "message": "Use __builtin_trap() for abort() if inhibit_libc\n\nabort() is used in gcc_assert() and gcc_unreachable() which is used by target\nlibraries such as libgcov.a.  This patch changes the abort() definition under\ncertain conditions.  If inhibit_libc is defined and abort is not already\ndefined, then abort() is defined to __builtin_trap().\n\nThe inhibit_libc define is usually defined if GCC is built for targets running\nin embedded systems which may optionally use a C standard library.  If\ninhibit_libc is defined, then there may be still a full featured abort()\navailable.  abort() is a heavy weight function which depends on signals and\nfile streams.  For statically linked applications, this means that a dependency\non gcc_assert() pulls in the support for signals and file streams.  This could\nprevent using gcov to test low end targets for example.  Using __builtin_trap()\navoids these dependencies if the target implements a \"trap\" instruction.  The\napplication or operating system could use a trap handler to react to failed GCC\nruntime checks which caused a trap.\n\ngcc/\n\n\t* tsystem.h (abort): Define abort() if inhibit_libc is defined and it\n\tis not already defined.", "tree": {"sha": "ac89ea89ed72239296b4134b36135a6630b15245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac89ea89ed72239296b4134b36135a6630b15245"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/caf81d3b57501b1f58dcd9b1ef9d7b4bc76f4ab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caf81d3b57501b1f58dcd9b1ef9d7b4bc76f4ab1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caf81d3b57501b1f58dcd9b1ef9d7b4bc76f4ab1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caf81d3b57501b1f58dcd9b1ef9d7b4bc76f4ab1/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7e56b084d0b230ae5ee280f569d679fa0f09f4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e56b084d0b230ae5ee280f569d679fa0f09f4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e56b084d0b230ae5ee280f569d679fa0f09f4d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5c72c69ff3ed5e6367860c2f41fd7e13efd45918", "filename": "gcc/tsystem.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caf81d3b57501b1f58dcd9b1ef9d7b4bc76f4ab1/gcc%2Ftsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caf81d3b57501b1f58dcd9b1ef9d7b4bc76f4ab1/gcc%2Ftsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftsystem.h?ref=caf81d3b57501b1f58dcd9b1ef9d7b4bc76f4ab1", "patch": "@@ -59,7 +59,7 @@ extern int atexit (void (*)(void));\n #endif\n \n #ifndef abort\n-extern void abort (void) __attribute__ ((__noreturn__));\n+#define abort() __builtin_trap ()\n #endif\n \n #ifndef strlen"}]}