{"sha": "6ec215790a176bdfe08e58b32b849e9614a332d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVjMjE1NzkwYTE3NmJkZmUwOGU1OGIzMmI4NDllOTYxNGEzMzJkNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-12-27T16:06:13Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-12-27T16:06:13Z"}, "message": "re PR c++/19148 (ICE: gimplification failed)\n\n\tPR c++/19148\n\t* gimplify.c (gimplify_cond_expr): Add post_p parameter.\n\t(gimplify_modify_expr_rhs): Adjust call to gimplify_cond_expr.\n\t(gimplify_expr): Likewise.\n\nFrom-SVN: r92640", "tree": {"sha": "9d671cd1af8cf69a49a9111242eeece31b50a39a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d671cd1af8cf69a49a9111242eeece31b50a39a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ec215790a176bdfe08e58b32b849e9614a332d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ec215790a176bdfe08e58b32b849e9614a332d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ec215790a176bdfe08e58b32b849e9614a332d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ec215790a176bdfe08e58b32b849e9614a332d6/comments", "author": null, "committer": null, "parents": [{"sha": "27e84b816594bbba40610b1bff9a0c9d3d3ee4f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27e84b816594bbba40610b1bff9a0c9d3d3ee4f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27e84b816594bbba40610b1bff9a0c9d3d3ee4f3"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "e01e7562c44dfe3fca5364370683f5815818faea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ec215790a176bdfe08e58b32b849e9614a332d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ec215790a176bdfe08e58b32b849e9614a332d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ec215790a176bdfe08e58b32b849e9614a332d6", "patch": "@@ -1,3 +1,10 @@\n+2004-12-27  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/19148\n+\t* gimplify.c (gimplify_cond_expr): Add post_p parameter.\n+\t(gimplify_modify_expr_rhs): Adjust call to gimplify_cond_expr.\n+\t(gimplify_expr): Likewise.\n+\n 2004-12-27  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.h (UNITS_PER_SIMD_WORD): Don't use MMX/3DNOW."}, {"sha": "f89b7207c14836ff69d4e7757ec81e12fd4b8ad3", "filename": "gcc/gimplify.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ec215790a176bdfe08e58b32b849e9614a332d6/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ec215790a176bdfe08e58b32b849e9614a332d6/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=6ec215790a176bdfe08e58b32b849e9614a332d6", "patch": "@@ -2093,10 +2093,13 @@ gimple_boolify (tree expr)\n     TARGET is the tree for T1 above.\n \n     PRE_P points to the list where side effects that must happen before\n-\t*EXPR_P should be stored.  */\n+\t*EXPR_P should be stored.\n+\n+   POST_P points to the list where side effects that must happen after\n+     *EXPR_P should be stored.  */\n \n static enum gimplify_status\n-gimplify_cond_expr (tree *expr_p, tree *pre_p, tree target)\n+gimplify_cond_expr (tree *expr_p, tree *pre_p, tree *post_p, tree target)\n {\n   tree expr = *expr_p;\n   tree tmp, tmp2, type;\n@@ -2112,7 +2115,7 @@ gimplify_cond_expr (tree *expr_p, tree *pre_p, tree target)\n     {\n       if (target)\n \t{\n-\t  ret = gimplify_expr (&target, pre_p, NULL,\n+\t  ret = gimplify_expr (&target, pre_p, post_p,\n \t\t\t       is_gimple_min_lval, fb_lvalue);\n \t  if (ret != GS_ERROR)\n \t    ret = GS_OK;\n@@ -2873,7 +2876,7 @@ gimplify_modify_expr_rhs (tree *expr_p, tree *from_p, tree *to_p, tree *pre_p,\n \tif (!is_gimple_reg_type (TREE_TYPE (*from_p)))\n \t  {\n \t    *expr_p = *from_p;\n-\t    return gimplify_cond_expr (expr_p, pre_p, *to_p);\n+\t    return gimplify_cond_expr (expr_p, pre_p, post_p, *to_p);\n \t  }\n \telse\n \t  ret = GS_UNHANDLED;\n@@ -3691,7 +3694,7 @@ gimplify_expr (tree *expr_p, tree *pre_p, tree *post_p,\n \t  break;\n \n \tcase COND_EXPR:\n-\t  ret = gimplify_cond_expr (expr_p, pre_p, NULL_TREE);\n+\t  ret = gimplify_cond_expr (expr_p, pre_p, post_p, NULL_TREE);\n \t  break;\n \n \tcase CALL_EXPR:"}]}