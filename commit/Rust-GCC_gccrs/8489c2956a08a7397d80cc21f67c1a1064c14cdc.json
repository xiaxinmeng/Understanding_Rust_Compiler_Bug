{"sha": "8489c2956a08a7397d80cc21f67c1a1064c14cdc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ4OWMyOTU2YTA4YTczOTdkODBjYzIxZjY3YzFhMTA2NGMxNGNkYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-06T09:44:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-06T09:44:29Z"}, "message": "[multiple changes]\n\n2017-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* ali.ads (ALIs_Record): Add No_Component_Reordering component.\n\t(No_Component_Reordering_Specified): New switch.\n\t* ali.adb (Initialize_ALI): Set No_Component_Reordering_Specified.\n\t(Scan_ALI): Set No_Component_Reordering and deal with NC marker.\n\t* bcheck.adb (Check_Consistent_No_Component_Reordering):\n\tNew check.\n\t(Check_Configuration_Consistency): Invoke it.\n\t* debug.adb (d.r): Toggle the effect of the switch.\n\t(d.v): Change to no-op.\n\t* einfo.ads (Has_Complex_Representation):\n\tRestrict to record types.\n\t(No_Reordering): New alias for Flag239.\n\t(OK_To_Reorder_Components): Delete.\n\t(No_Reordering): Declare.\n\t(Set_No_Reordering): Likewise.\n\t(OK_To_Reorder_Components): Delete.\n\t(Set_OK_To_Reorder_Components): Likewise.\n\t* einfo.adb (Has_Complex_Representation): Expect record types.\n\t(No_Reordering): New function.\n\t(OK_To_Reorder_Components): Delete.\n\t(Set_Has_Complex_Representation): Expect base record types.\n\t(Set_No_Reordering): New procedure.\n\t(Set_OK_To_Reorder_Components): Delete.\n\t(Write_Entity_Flags): Adjust to above change.\n\t* fe.h (Debug_Flag_Dot_R): New macro and declaration.\n\t* freeze.adb (Freeze_Record_Type): Remove conditional code setting\n\tOK_To_Reorder_Components on record types with convention Ada.\n\t* lib-writ.adb (Write_ALI): Deal with NC marker.\n\t* opt.ads (No_Component_Reordering): New flag.\n\t(No_Component_Reordering_Config): Likewise.\n\t(Config_Switches_Type): Add No_Component_Reordering component.\n\t* opt.adb (Register_Opt_Config_Switches): Copy\n\tNo_Component_Reordering onto No_Component_Reordering_Config.\n\t(Restore_Opt_Config_Switches): Restore No_Component_Reordering.\n\t(Save_Opt_Config_Switches): Save No_Component_Reordering.\n\t(Set_Opt_Config_Switches): Set No_Component_Reordering.\n\t* par-prag.adb (Prag): Deal with Pragma_No_Component_Reordering.\n\t* sem_ch3.adb (Analyze_Private_Extension_Declaration): Also set the\n\tNo_Reordering flag from the default.\n\t(Build_Derived_Private_Type): Likewise.\n\t(Build_Derived_Record_Type): Likewise.\tThen inherit it\n\tfor untagged types and clean up handling of similar flags.\n\t(Record_Type_Declaration): Likewise.\n\t* sem_ch13.adb (Same_Representation): Deal with No_Reordering and\n\tremove redundant test on Is_Tagged_Type.\n\t* sem_prag.adb (Analyze_Pragma): Handle No_Component_Reordering.\n\t(Sig_Flags): Likewise.\n\t* snames.ads-tmpl (Name_No_Component_Reordering): New name.\n\t(Pragma_Id): Add Pragma_No_Component_Reordering value.\n\t* warnsw.adb (Set_GNAT_Mode_Warnings): Enable -gnatw.q as well.\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>:\n\tCopy the layout of the parent type only if the No_Reordering\n\tsettings match.\n\t(components_to_record): Reorder record types with\n\tconvention Ada by default unless No_Reordering is set or -gnatd.r\n\tis specified and do not warn if No_Reordering is set in GNAT mode.\n\n2017-09-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.ads, sem_util.adb (Check_Previous_Null_Procedure):\n\tnew predicate to reject declarations that can be completions,\n\twhen there is a visible prior homograph that is a null procedure.\n\t* sem_ch6.adb (Analyze_Null_Procedure): use it.\n\t* sem_ch8.adb (Analyze_Subprogram_Renaming): ditto.\n\n2017-09-06  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-regpat.adb (Compile.Parse_Literal): Fix handling of literal\n\trun of 253 characters or more.\n\nFrom-SVN: r251760", "tree": {"sha": "3927435d4fc7bbbdc970057a5a4e68969549dda0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3927435d4fc7bbbdc970057a5a4e68969549dda0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8489c2956a08a7397d80cc21f67c1a1064c14cdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8489c2956a08a7397d80cc21f67c1a1064c14cdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8489c2956a08a7397d80cc21f67c1a1064c14cdc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8489c2956a08a7397d80cc21f67c1a1064c14cdc/comments", "author": null, "committer": null, "parents": [{"sha": "dd89dddff4f63572408c3bcd602eb8773288179c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd89dddff4f63572408c3bcd602eb8773288179c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd89dddff4f63572408c3bcd602eb8773288179c"}], "stats": {"total": 520, "additions": 378, "deletions": 142}, "files": [{"sha": "97453305e6146d1a5493bd4ef1ac87391e278a64", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -1,3 +1,75 @@\n+2017-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* ali.ads (ALIs_Record): Add No_Component_Reordering component.\n+\t(No_Component_Reordering_Specified): New switch.\n+\t* ali.adb (Initialize_ALI): Set No_Component_Reordering_Specified.\n+\t(Scan_ALI): Set No_Component_Reordering and deal with NC marker.\n+\t* bcheck.adb (Check_Consistent_No_Component_Reordering):\n+\tNew check.\n+\t(Check_Configuration_Consistency): Invoke it.\n+\t* debug.adb (d.r): Toggle the effect of the switch.\n+\t(d.v): Change to no-op.\n+\t* einfo.ads (Has_Complex_Representation):\n+\tRestrict to record types.\n+\t(No_Reordering): New alias for Flag239.\n+\t(OK_To_Reorder_Components): Delete.\n+\t(No_Reordering): Declare.\n+\t(Set_No_Reordering): Likewise.\n+\t(OK_To_Reorder_Components): Delete.\n+\t(Set_OK_To_Reorder_Components): Likewise.\n+\t* einfo.adb (Has_Complex_Representation): Expect record types.\n+\t(No_Reordering): New function.\n+\t(OK_To_Reorder_Components): Delete.\n+\t(Set_Has_Complex_Representation): Expect base record types.\n+\t(Set_No_Reordering): New procedure.\n+\t(Set_OK_To_Reorder_Components): Delete.\n+\t(Write_Entity_Flags): Adjust to above change.\n+\t* fe.h (Debug_Flag_Dot_R): New macro and declaration.\n+\t* freeze.adb (Freeze_Record_Type): Remove conditional code setting\n+\tOK_To_Reorder_Components on record types with convention Ada.\n+\t* lib-writ.adb (Write_ALI): Deal with NC marker.\n+\t* opt.ads (No_Component_Reordering): New flag.\n+\t(No_Component_Reordering_Config): Likewise.\n+\t(Config_Switches_Type): Add No_Component_Reordering component.\n+\t* opt.adb (Register_Opt_Config_Switches): Copy\n+\tNo_Component_Reordering onto No_Component_Reordering_Config.\n+\t(Restore_Opt_Config_Switches): Restore No_Component_Reordering.\n+\t(Save_Opt_Config_Switches): Save No_Component_Reordering.\n+\t(Set_Opt_Config_Switches): Set No_Component_Reordering.\n+\t* par-prag.adb (Prag): Deal with Pragma_No_Component_Reordering.\n+\t* sem_ch3.adb (Analyze_Private_Extension_Declaration): Also set the\n+\tNo_Reordering flag from the default.\n+\t(Build_Derived_Private_Type): Likewise.\n+\t(Build_Derived_Record_Type): Likewise.\tThen inherit it\n+\tfor untagged types and clean up handling of similar flags.\n+\t(Record_Type_Declaration): Likewise.\n+\t* sem_ch13.adb (Same_Representation): Deal with No_Reordering and\n+\tremove redundant test on Is_Tagged_Type.\n+\t* sem_prag.adb (Analyze_Pragma): Handle No_Component_Reordering.\n+\t(Sig_Flags): Likewise.\n+\t* snames.ads-tmpl (Name_No_Component_Reordering): New name.\n+\t(Pragma_Id): Add Pragma_No_Component_Reordering value.\n+\t* warnsw.adb (Set_GNAT_Mode_Warnings): Enable -gnatw.q as well.\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>:\n+\tCopy the layout of the parent type only if the No_Reordering\n+\tsettings match.\n+\t(components_to_record): Reorder record types with\n+\tconvention Ada by default unless No_Reordering is set or -gnatd.r\n+\tis specified and do not warn if No_Reordering is set in GNAT mode.\n+\n+2017-09-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.ads, sem_util.adb (Check_Previous_Null_Procedure):\n+\tnew predicate to reject declarations that can be completions,\n+\twhen there is a visible prior homograph that is a null procedure.\n+\t* sem_ch6.adb (Analyze_Null_Procedure): use it.\n+\t* sem_ch8.adb (Analyze_Subprogram_Renaming): ditto.\n+\n+2017-09-06  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-regpat.adb (Compile.Parse_Literal): Fix handling of literal\n+\trun of 253 characters or more.\n+\n 2017-09-06  Ed Schonberg  <schonberg@adacore.com>\n \n \t* einfo.adb (Designated_Type): Use Is_Incomplete_Type to handle"}, {"sha": "2b1d472baba8a5f3f2c9660b76fe1b28943d4fe0", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -111,6 +111,7 @@ package body ALI is\n       Locking_Policy_Specified               := ' ';\n       No_Normalize_Scalars_Specified         := False;\n       No_Object_Specified                    := False;\n+      No_Component_Reordering_Specified      := False;\n       GNATprove_Mode_Specified               := False;\n       Normalize_Scalars_Specified            := False;\n       Partition_Elaboration_Policy_Specified := ' ';\n@@ -885,6 +886,7 @@ package body ALI is\n         Main_Priority                => -1,\n         Main_CPU                     => -1,\n         Main_Program                 => None,\n+        No_Component_Reordering      => False,\n         No_Object                    => False,\n         Normalize_Scalars            => False,\n         Ofile_Full_Name              => Full_Object_File_Name,\n@@ -1122,9 +1124,15 @@ package body ALI is\n             elsif C = 'N' then\n                C := Getc;\n \n+               --  Processing for NC\n+\n+               if C = 'C' then\n+                  ALIs.Table (Id).No_Component_Reordering := True;\n+                  No_Component_Reordering_Specified := True;\n+\n                --  Processing for NO\n \n-               if C = 'O' then\n+               elsif C = 'O' then\n                   ALIs.Table (Id).No_Object := True;\n                   No_Object_Specified := True;\n "}, {"sha": "8950298b7a96d85e52aee54369ac1dcfb5074e99", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -177,6 +177,11 @@ package ALI is\n       --  signalled by GP appearing on the P line. Not set if 'P' appears in\n       --  Ignore_Lines.\n \n+      No_Component_Reordering : Boolean;\n+      --  Set to True if file was compiled with a configuration pragma file\n+      --  containing pragma No_Component_Reordering.  Not set if 'P' appears\n+      --  in Ignore_Lines.\n+\n       No_Object : Boolean;\n       --  Set to True if no object file generated. Not set if 'P' appears in\n       --  Ignore_Lines.\n@@ -492,6 +497,10 @@ package ALI is\n    --  Set to False by Initialize_ALI. Set to True if an ali file indicates\n    --  that the file was compiled without normalize scalars.\n \n+   No_Component_Reordering_Specified : Boolean := False;\n+   --  Set to False by Initialize_ALI. Set to True if an ali file contains\n+   --  the No_Component_Reordering flag.\n+\n    No_Object_Specified : Boolean := False;\n    --  Set to False by Initialize_ALI. Set to True if an ali file contains\n    --  the No_Object flag."}, {"sha": "a1727c6652a6b4e20b7f1be8a2ca628dbc9c30bb", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 69, "deletions": 1, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,6 +49,7 @@ package body Bcheck is\n    procedure Check_Consistent_Dynamic_Elaboration_Checking;\n    procedure Check_Consistent_Interrupt_States;\n    procedure Check_Consistent_Locking_Policy;\n+   procedure Check_Consistent_No_Component_Reordering;\n    procedure Check_Consistent_Normalize_Scalars;\n    procedure Check_Consistent_Optimize_Alignment;\n    procedure Check_Consistent_Partition_Elaboration_Policy;\n@@ -80,6 +81,10 @@ package body Bcheck is\n          Check_Consistent_Locking_Policy;\n       end if;\n \n+      if No_Component_Reordering_Specified then\n+         Check_Consistent_No_Component_Reordering;\n+      end if;\n+\n       if Partition_Elaboration_Policy_Specified /= ' ' then\n          Check_Consistent_Partition_Elaboration_Policy;\n       end if;\n@@ -643,6 +648,69 @@ package body Bcheck is\n       end loop Find_Policy;\n    end Check_Consistent_Locking_Policy;\n \n+   ----------------------------------------------\n+   -- Check_Consistent_No_Component_Reordering --\n+   ----------------------------------------------\n+\n+   --  This routine checks for a consistent No_Component_Reordering setting.\n+   --  Note that internal units are excluded from this check, since we don't\n+   --  in any case allow the pragma to affect types in internal units, and\n+   --  there is thus no requirement to recompile the run-time with the setting.\n+\n+   procedure Check_Consistent_No_Component_Reordering is\n+      OK : Boolean := True;\n+   begin\n+      --  Check that all entries have No_Component_Reordering set\n+\n+      for A1 in ALIs.First .. ALIs.Last loop\n+         if not Is_Internal_File_Name (ALIs.Table (A1).Sfile)\n+           and then not ALIs.Table (A1).No_Component_Reordering\n+         then\n+            OK := False;\n+            exit;\n+         end if;\n+      end loop;\n+\n+      --  All do, return\n+\n+      if OK then\n+         return;\n+      end if;\n+\n+      --  Here we have an inconsistency\n+\n+      Consistency_Error_Msg\n+        (\"some but not all files compiled with No_Component_Reordering\");\n+\n+      Write_Eol;\n+      Write_Str (\"files compiled with No_Component_Reordering\");\n+      Write_Eol;\n+\n+      for A1 in ALIs.First .. ALIs.Last loop\n+         if not Is_Internal_File_Name (ALIs.Table (A1).Sfile)\n+           and then ALIs.Table (A1).No_Component_Reordering\n+         then\n+            Write_Str (\"  \");\n+            Write_Name (ALIs.Table (A1).Sfile);\n+            Write_Eol;\n+         end if;\n+      end loop;\n+\n+      Write_Eol;\n+      Write_Str (\"files compiled without No_Component_Reordering\");\n+      Write_Eol;\n+\n+      for A1 in ALIs.First .. ALIs.Last loop\n+         if not Is_Internal_File_Name (ALIs.Table (A1).Sfile)\n+           and then not ALIs.Table (A1).No_Component_Reordering\n+         then\n+            Write_Str (\"  \");\n+            Write_Name (ALIs.Table (A1).Sfile);\n+            Write_Eol;\n+         end if;\n+      end loop;\n+   end Check_Consistent_No_Component_Reordering;\n+\n    ----------------------------------------\n    -- Check_Consistent_Normalize_Scalars --\n    ----------------------------------------"}, {"sha": "7e1940940d47cc3b90b17aafb2137606bad8966d", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -108,11 +108,11 @@ package body Debug is\n    --  d.o  Conservative elaboration order for indirect calls\n    --  d.p  Use original Ada 95 semantics for Bit_Order (disable AI95-0133)\n    --  d.q  Suppress optimizations on imported 'in'\n-   --  d.r  Enable OK_To_Reorder_Components in non-variant records\n+   --  d.r  Disable reordering of components in record types\n    --  d.s  Strict secondary stack management\n    --  d.t  Disable static allocation of library level dispatch tables\n    --  d.u  Enable Modify_Tree_For_C (update tree for c)\n-   --  d.v  Enable OK_To_Reorder_Components in variant records\n+   --  d.v\n    --  d.w  Do not check for infinite loops\n    --  d.x  No exception handlers\n    --  d.y\n@@ -574,8 +574,7 @@ package body Debug is\n    --       optimizations. This option should not be used; the correct solution\n    --       is to declare the parameter 'in out'.\n \n-   --  d.r  Forces the flag OK_To_Reorder_Components to be set in all record\n-   --       base types that have no discriminants.\n+   --  d.r  Do not reorder components in record types.\n \n    --  d.s  The compiler no longer attempts to optimize the calls to secondary\n    --       stack management routines SS_Mark and SS_Release. As a result, each\n@@ -596,9 +595,6 @@ package body Debug is\n    --  d.u  Sets Modify_Tree_For_C mode in which tree is modified to make it\n    --       easier to generate code using a C compiler.\n \n-   --  d.v  Forces the flag OK_To_Reorder_Components to be set in all record\n-   --       base types that have at least one discriminant (v = variant).\n-\n    --  d.w  This flag turns off the scanning of loops to detect possible\n    --       infinite loops.\n "}, {"sha": "1f70a405d1fda19e3317cd2320b0d1333ce7c58c", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -548,7 +548,7 @@ package body Einfo is\n    --    Warnings_Off_Used               Flag236\n    --    Warnings_Off_Used_Unmodified    Flag237\n    --    Warnings_Off_Used_Unreferenced  Flag238\n-   --    OK_To_Reorder_Components        Flag239\n+   --    No_Reordering                   Flag239\n    --    Has_Expanded_Contract           Flag240\n \n    --    Optimize_Alignment_Space        Flag241\n@@ -1490,7 +1490,7 @@ package body Einfo is\n \n    function Has_Complex_Representation (Id : E) return B is\n    begin\n-      pragma Assert (Is_Type (Id));\n+      pragma Assert (Is_Record_Type (Id));\n       return Flag140 (Implementation_Base_Type (Id));\n    end Has_Complex_Representation;\n \n@@ -2864,6 +2864,12 @@ package body Einfo is\n       return Flag275 (Id);\n    end No_Predicate_On_Actual;\n \n+   function No_Reordering (Id : E) return B is\n+   begin\n+      pragma Assert (Is_Record_Type (Id));\n+      return Flag239 (Implementation_Base_Type (Id));\n+   end No_Reordering;\n+\n    function No_Return (Id : E) return B is\n    begin\n       return Flag113 (Id);\n@@ -2928,12 +2934,6 @@ package body Einfo is\n       return Flag247 (Id);\n    end OK_To_Rename;\n \n-   function OK_To_Reorder_Components (Id : E) return B is\n-   begin\n-      pragma Assert (Is_Record_Type (Id));\n-      return Flag239 (Base_Type (Id));\n-   end OK_To_Reorder_Components;\n-\n    function Optimize_Alignment_Space (Id : E) return B is\n    begin\n       pragma Assert\n@@ -4584,7 +4584,7 @@ package body Einfo is\n \n    procedure Set_Has_Complex_Representation (Id : E; V : B := True) is\n    begin\n-      pragma Assert (Ekind (Id) = E_Record_Type);\n+      pragma Assert (Is_Record_Type (Id) and then Is_Base_Type (Id));\n       Set_Flag140 (Id, V);\n    end Set_Has_Complex_Representation;\n \n@@ -6020,6 +6020,12 @@ package body Einfo is\n       Set_Flag275 (Id, V);\n    end Set_No_Predicate_On_Actual;\n \n+   procedure Set_No_Reordering (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Is_Record_Type (Id) and then Is_Base_Type (Id));\n+      Set_Flag239 (Id, V);\n+   end Set_No_Reordering;\n+\n    procedure Set_No_Return (Id : E; V : B := True) is\n    begin\n       pragma Assert\n@@ -6085,13 +6091,6 @@ package body Einfo is\n       Set_Flag247 (Id, V);\n    end Set_OK_To_Rename;\n \n-   procedure Set_OK_To_Reorder_Components (Id : E; V : B := True) is\n-   begin\n-      pragma Assert\n-        (Is_Record_Type (Id) and then Is_Base_Type (Id));\n-      Set_Flag239 (Id, V);\n-   end Set_OK_To_Reorder_Components;\n-\n    procedure Set_Optimize_Alignment_Space (Id : E; V : B := True) is\n    begin\n       pragma Assert\n@@ -9593,12 +9592,12 @@ package body Einfo is\n       W (\"No_Dynamic_Predicate_On_actual\",  Flag276 (Id));\n       W (\"No_Pool_Assigned\",                Flag131 (Id));\n       W (\"No_Predicate_On_actual\",          Flag275 (Id));\n+      W (\"No_Reordering\",                   Flag239 (Id));\n       W (\"No_Return\",                       Flag113 (Id));\n       W (\"No_Strict_Aliasing\",              Flag136 (Id));\n       W (\"Non_Binary_Modulus\",              Flag58  (Id));\n       W (\"Nonzero_Is_True\",                 Flag162 (Id));\n       W (\"OK_To_Rename\",                    Flag247 (Id));\n-      W (\"OK_To_Reorder_Components\",        Flag239 (Id));\n       W (\"Optimize_Alignment_Space\",        Flag241 (Id));\n       W (\"Optimize_Alignment_Time\",         Flag242 (Id));\n       W (\"Overlays_Constant\",               Flag243 (Id));"}, {"sha": "49852311af0a96e2d45cf3a8e1f04af83a970230", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -1539,8 +1539,8 @@ package Einfo is\n --       the package body).\n \n --    Has_Complex_Representation (Flag140) [implementation base type only]\n---       Defined in all type entities. Set only for a record base type to\n---       which a valid pragma Complex_Representation applies.\n+--       Defined in record types. Set only for a base type to which a valid\n+--       pragma Complex_Representation applies.\n \n --    Has_Component_Size_Clause (Flag68) [implementation base type only]\n --       Defined in all type entities. Set if a component size clause is\n@@ -3630,6 +3630,10 @@ package Einfo is\n --       in the spec of a generic package, in constructs that forbid discrete\n --       types with predicates.\n \n+--    No_Reordering (Flag239) [implementation base type only]\n+--       Defined in record types. Set only for a base type to which a valid\n+--       pragma No_Component_Reordering applies.\n+\n --    No_Return (Flag113)\n --       Defined in all entities. Always false except in the case of procedures\n --       and generic procedures for which a pragma No_Return is given.\n@@ -3709,12 +3713,6 @@ package Einfo is\n --       is only worth setting this flag for composites, since for primitive\n --       types, it is cheaper to do the copy.\n \n---    OK_To_Reorder_Components (Flag239) [base type only]\n---       Defined in record types. Set if the backend is permitted to reorder\n---       the components. If not set, the record must be laid out in the order\n---       in which the components are declared textually. Currently this flag\n---       can only be set by debug switches.\n-\n --    Optimize_Alignment_Space (Flag241)\n --       Defined in type, subtype, variable, and constant entities. This\n --       flag records that the type or object is to be layed out in a manner\n@@ -4527,7 +4525,7 @@ package Einfo is\n \n --    Uses_Lock_Free (Flag188)\n --       Defined in protected type entities. Set to True when the Lock Free\n---       implementation is used for the protected type. This implemenatation is\n+--       implementation is used for the protected type. This implementation is\n --       based on atomic transactions and doesn't require anymore the use of\n --       Protection object (see System.Tasking.Protected_Objects).\n \n@@ -6493,7 +6491,7 @@ package Einfo is\n    --    Is_Controlled                       (Flag42)   (base type only)\n    --    Is_Interface                        (Flag186)\n    --    Is_Limited_Interface                (Flag197)\n-   --    OK_To_Reorder_Components            (Flag239)  (base type only)\n+   --    No_Reordering                       (Flag239)  (base type only)\n    --    Reverse_Bit_Order                   (Flag164)  (base type only)\n    --    Reverse_Storage_Order               (Flag93)   (base type only)\n    --    SSO_Set_High_By_Default             (Flag273)  (base type only)\n@@ -6522,7 +6520,7 @@ package Einfo is\n    --    Is_Controlled                       (Flag42)   (base type only)\n    --    Is_Interface                        (Flag186)\n    --    Is_Limited_Interface                (Flag197)\n-   --    OK_To_Reorder_Components            (Flag239)  (base type only)\n+   --    No_Reordering                       (Flag239)  (base type only)\n    --    Reverse_Bit_Order                   (Flag164)  (base type only)\n    --    Reverse_Storage_Order               (Flag93)   (base type only)\n    --    SSO_Set_High_By_Default             (Flag273)  (base type only)\n@@ -7279,6 +7277,7 @@ package Einfo is\n    function No_Dynamic_Predicate_On_Actual      (Id : E) return B;\n    function No_Pool_Assigned                    (Id : E) return B;\n    function No_Predicate_On_Actual              (Id : E) return B;\n+   function No_Reordering                       (Id : E) return B;\n    function No_Return                           (Id : E) return B;\n    function No_Strict_Aliasing                  (Id : E) return B;\n    function No_Tagged_Streams_Pragma            (Id : E) return N;\n@@ -7289,7 +7288,6 @@ package Einfo is\n    function Normalized_Position                 (Id : E) return U;\n    function Normalized_Position_Max             (Id : E) return U;\n    function OK_To_Rename                        (Id : E) return B;\n-   function OK_To_Reorder_Components            (Id : E) return B;\n    function Optimize_Alignment_Space            (Id : E) return B;\n    function Optimize_Alignment_Time             (Id : E) return B;\n    function Original_Access_Type                (Id : E) return E;\n@@ -7971,6 +7969,7 @@ package Einfo is\n    procedure Set_No_Dynamic_Predicate_On_Actual  (Id : E; V : B := True);\n    procedure Set_No_Pool_Assigned                (Id : E; V : B := True);\n    procedure Set_No_Predicate_On_Actual          (Id : E; V : B := True);\n+   procedure Set_No_Reordering                   (Id : E; V : B := True);\n    procedure Set_No_Return                       (Id : E; V : B := True);\n    procedure Set_No_Strict_Aliasing              (Id : E; V : B := True);\n    procedure Set_No_Tagged_Streams_Pragma        (Id : E; V : N);\n@@ -7981,7 +7980,6 @@ package Einfo is\n    procedure Set_Normalized_Position             (Id : E; V : U);\n    procedure Set_Normalized_Position_Max         (Id : E; V : U);\n    procedure Set_OK_To_Rename                    (Id : E; V : B := True);\n-   procedure Set_OK_To_Reorder_Components        (Id : E; V : B := True);\n    procedure Set_Optimize_Alignment_Space        (Id : E; V : B := True);\n    procedure Set_Optimize_Alignment_Time         (Id : E; V : B := True);\n    procedure Set_Original_Access_Type            (Id : E; V : E);\n@@ -8815,6 +8813,7 @@ package Einfo is\n    pragma Inline (No_Dynamic_Predicate_On_Actual);\n    pragma Inline (No_Pool_Assigned);\n    pragma Inline (No_Predicate_On_Actual);\n+   pragma Inline (No_Reordering);\n    pragma Inline (No_Return);\n    pragma Inline (No_Strict_Aliasing);\n    pragma Inline (No_Tagged_Streams_Pragma);\n@@ -8825,7 +8824,6 @@ package Einfo is\n    pragma Inline (Normalized_Position);\n    pragma Inline (Normalized_Position_Max);\n    pragma Inline (OK_To_Rename);\n-   pragma Inline (OK_To_Reorder_Components);\n    pragma Inline (Optimize_Alignment_Space);\n    pragma Inline (Optimize_Alignment_Time);\n    pragma Inline (Original_Access_Type);\n@@ -9295,6 +9293,7 @@ package Einfo is\n    pragma Inline (Set_No_Dynamic_Predicate_On_Actual);\n    pragma Inline (Set_No_Pool_Assigned);\n    pragma Inline (Set_No_Predicate_On_Actual);\n+   pragma Inline (Set_No_Reordering);\n    pragma Inline (Set_No_Return);\n    pragma Inline (Set_No_Strict_Aliasing);\n    pragma Inline (Set_No_Tagged_Streams_Pragma);\n@@ -9305,7 +9304,6 @@ package Einfo is\n    pragma Inline (Set_Normalized_Position);\n    pragma Inline (Set_Normalized_Position_Max);\n    pragma Inline (Set_OK_To_Rename);\n-   pragma Inline (Set_OK_To_Reorder_Components);\n    pragma Inline (Set_Optimize_Alignment_Space);\n    pragma Inline (Set_Optimize_Alignment_Time);\n    pragma Inline (Set_Original_Access_Type);"}, {"sha": "513cfa97daa1804c52ea8d5ea08d4dcb0036832d", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -56,7 +56,9 @@ extern char Fold_Lower[], Fold_Upper[];\n \n /* debug: */\n \n-#define Debug_Flag_NN debug__debug_flag_nn\n+#define Debug_Flag_Dot_R\tdebug__debug_flag_dot_r\n+#define Debug_Flag_NN\t\tdebug__debug_flag_nn\n+extern Boolean Debug_Flag_Dot_R;\n extern Boolean Debug_Flag_NN;\n \n /* einfo: */"}, {"sha": "578563a800de77c20242aa7ad33d65734c935652", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -4441,17 +4441,6 @@ package body Freeze is\n             end if;\n          end;\n \n-         --  Set OK_To_Reorder_Components depending on debug flags\n-\n-         if Is_Base_Type (Rec) and then Convention (Rec) = Convention_Ada then\n-            if (Has_Discriminants (Rec) and then Debug_Flag_Dot_V)\n-                 or else\n-                   (not Has_Discriminants (Rec) and then Debug_Flag_Dot_R)\n-            then\n-               Set_OK_To_Reorder_Components (Rec);\n-            end if;\n-         end if;\n-\n          --  Check for useless pragma Pack when all components placed. We only\n          --  do this check for record types, not subtypes, since a subtype may\n          --  have all its components placed, and it still makes perfectly good"}, {"sha": "aa64c00836834195a6e6ee02e01c22edf78f1395", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -506,6 +506,7 @@ package GNAT.Sockets is\n       Addr : Inet_Addr_Type (Family);\n       Port : Port_Type;\n    end record;\n+   pragma No_Component_Reordering (Sock_Addr_Type);\n    --  Socket addresses fully define a socket connection with protocol family,\n    --  an Internet address and a port. No_Sock_Addr provides a special value\n    --  for uninitialized socket addresses."}, {"sha": "c9a701dabeefa7d992207bd561bcb646c51af71c", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -3331,7 +3331,8 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t    && Stored_Constraint (gnat_entity) != No_Elist\n \t    && (gnat_parent_type = Underlying_Type (Etype (gnat_entity)))\n \t    && Is_Record_Type (gnat_parent_type)\n-\t    && !Is_Unchecked_Union (gnat_parent_type))\n+\t    && !Is_Unchecked_Union (gnat_parent_type)\n+\t    && No_Reordering (gnat_entity) == No_Reordering (gnat_parent_type))\n \t  {\n \t    tree gnu_parent_type\n \t      = TYPE_MAIN_VARIANT (gnat_to_gnu_type (gnat_parent_type));\n@@ -7692,9 +7693,7 @@ components_to_record (Node_Id gnat_component_list, Entity_Id gnat_record_type,\n     }\n \n   /* Scan GNU_FIELD_LIST and see if any fields have rep clauses.  If they do,\n-     pull them out and put them onto the appropriate list.  We have to do it\n-     in a separate pass since we want to handle the discriminants but can't\n-     play with them until we've used them in debugging data above.\n+     pull them out and put them onto the appropriate list.\n \n      Similarly, pull out the fields with zero size and no rep clause, as they\n      would otherwise modify the layout and thus very likely run afoul of the\n@@ -7714,16 +7713,16 @@ components_to_record (Node_Id gnat_component_list, Entity_Id gnat_record_type,\n      different kinds of fields and issue a warning if some of them would be\n      (or are being) reordered by the reordering mechanism.\n \n-     Finally, pull out the fields whose size is not a multiple of a byte, so\n-     that they don't cause the regular fields to be misaligned.  As this can\n-     only happen in packed record types, the alignment is capped to the byte.\n-\n-     ??? If we reorder them, debugging information will be wrong but there is\n-     nothing that can be done about this at the moment.  */\n-  const bool do_reorder = OK_To_Reorder_Components (gnat_record_type);\n+     ??? If we reorder fields, the debugging information will be affected and\n+     the debugger print fields in a different order from the source code.  */\n+  const bool do_reorder\n+    = (Convention (gnat_record_type) == Convention_Ada\n+       && !No_Reordering (gnat_record_type)\n+       && !debug__debug_flag_dot_r);\n   const bool w_reorder\n-    = Warn_On_Questionable_Layout\n-      && (Convention (gnat_record_type) == Convention_Ada);\n+    = (Convention (gnat_record_type) == Convention_Ada\n+       && Warn_On_Questionable_Layout\n+       && !(No_Reordering (gnat_record_type) && GNAT_Mode));\n   const bool in_variant = (p_gnu_rep_list != NULL);\n   tree gnu_zero_list = NULL_TREE;\n   tree gnu_self_list = NULL_TREE;"}, {"sha": "8c36957228ccb5330df4d266abf0ccce26444384", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -1194,6 +1194,10 @@ package body Lib.Writ is\n          Write_Info_Char (Partition_Elaboration_Policy);\n       end if;\n \n+      if No_Component_Reordering_Config then\n+         Write_Info_Str (\" NC\");\n+      end if;\n+\n       if not Object then\n          Write_Info_Str (\" NO\");\n       end if;"}, {"sha": "ef1a1d414484d215b224abed517aaf8ab789a4f5", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -102,6 +102,7 @@ package body Opt is\n       External_Name_Imp_Casing_Config       := External_Name_Imp_Casing;\n       Fast_Math_Config                      := Fast_Math;\n       Initialize_Scalars_Config             := Initialize_Scalars;\n+      No_Component_Reordering_Config        := No_Component_Reordering;\n       Optimize_Alignment_Config             := Optimize_Alignment;\n       Persistent_BSS_Mode_Config            := Persistent_BSS_Mode;\n       Polling_Required_Config               := Polling_Required;\n@@ -141,6 +142,7 @@ package body Opt is\n       External_Name_Imp_Casing       := Save.External_Name_Imp_Casing;\n       Fast_Math                      := Save.Fast_Math;\n       Initialize_Scalars             := Save.Initialize_Scalars;\n+      No_Component_Reordering        := Save.No_Component_Reordering;\n       Optimize_Alignment             := Save.Optimize_Alignment;\n       Optimize_Alignment_Local       := Save.Optimize_Alignment_Local;\n       Persistent_BSS_Mode            := Save.Persistent_BSS_Mode;\n@@ -182,6 +184,7 @@ package body Opt is\n       Save.External_Name_Imp_Casing       := External_Name_Imp_Casing;\n       Save.Fast_Math                      := Fast_Math;\n       Save.Initialize_Scalars             := Initialize_Scalars;\n+      Save.No_Component_Reordering        := No_Component_Reordering;\n       Save.Optimize_Alignment             := Optimize_Alignment;\n       Save.Optimize_Alignment_Local       := Optimize_Alignment_Local;\n       Save.Persistent_BSS_Mode            := Persistent_BSS_Mode;\n@@ -218,6 +221,7 @@ package body Opt is\n          Extensions_Allowed          := True;\n          External_Name_Exp_Casing    := As_Is;\n          External_Name_Imp_Casing    := Lowercase;\n+         No_Component_Reordering     := False;\n          Optimize_Alignment          := 'O';\n          Optimize_Alignment_Local    := True;\n          Persistent_BSS_Mode         := False;\n@@ -269,6 +273,7 @@ package body Opt is\n          External_Name_Imp_Casing    := External_Name_Imp_Casing_Config;\n          Fast_Math                   := Fast_Math_Config;\n          Initialize_Scalars          := Initialize_Scalars_Config;\n+         No_Component_Reordering     := No_Component_Reordering_Config;\n          Optimize_Alignment          := Optimize_Alignment_Config;\n          Optimize_Alignment_Local    := False;\n          Persistent_BSS_Mode         := Persistent_BSS_Mode_Config;"}, {"sha": "8f6820a0dbf7ba1a357e4c0d83e65d5ab233d599", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -1107,6 +1107,10 @@ package Opt is\n    --  GNATNAME\n    --  Do not create backup copies of project files. Set by switch --no-backup.\n \n+   No_Component_Reordering : Boolean := False;\n+   --  GNAT\n+   --  Set True if pragma No_Component_Reordering with no parameter encountered\n+\n    No_Deletion : Boolean := False;\n    --  GNATPREP\n    --  Set by preprocessor switch -a. Do not eliminate any source text. Implies\n@@ -2025,6 +2029,14 @@ package Opt is\n    --  This switch is not set when the pragma appears ahead of a given\n    --  unit, so it does not affect the compilation of other units.\n \n+   No_Component_Reordering_Config : Boolean;\n+   --  GNAT\n+   --  This is the value of the configuration switch that is set by the\n+   --  pragma No_Component_Reordering when it appears in the gnat.adc file.\n+   --  This flag is used to set the initial value of No_Component_Reordering\n+   --  at the start of each compilation unit, except that it is always set\n+   --  False for predefined units.\n+\n    No_Exit_Message : Boolean := False;\n    --  GNATMAKE, GPRBUILD\n    --  Set with switch --no-exit-message. When True, if there are compilation\n@@ -2089,8 +2101,7 @@ package Opt is\n \n    procedure Save_Opt_Config_Switches (Save : out Config_Switches_Type);\n    --  This procedure saves the current values of the switches which are\n-   --  initialized from the above Config values, and then resets these switches\n-   --  according to the Config value settings.\n+   --  initialized from the above Config values.\n \n    procedure Set_Opt_Config_Switches\n      (Internal_Unit : Boolean;\n@@ -2306,6 +2317,7 @@ private\n       External_Name_Imp_Casing       : External_Casing_Type;\n       Fast_Math                      : Boolean;\n       Initialize_Scalars             : Boolean;\n+      No_Component_Reordering        : Boolean;\n       Normalize_Scalars              : Boolean;\n       Optimize_Alignment             : Character;\n       Optimize_Alignment_Local       : Boolean;"}, {"sha": "d0f5539c87372432aabb2f6007b29a62b3334c43", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -1414,6 +1414,7 @@ begin\n          | Pragma_Max_Queue_Length\n          | Pragma_Memory_Size\n          | Pragma_No_Body\n+         | Pragma_No_Component_Reordering\n          | Pragma_No_Elaboration_Code_All\n          | Pragma_No_Heap_Finalization\n          | Pragma_No_Inline"}, {"sha": "ad2f033e7ad4c80d79a9ea434e02f9a7c95decdf", "filename": "gcc/ada/prj-attr.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fprj-attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fprj-attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.ads?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -87,6 +87,7 @@ package Prj.Attr is\n \n    type Attribute_Data (Name_Length : Attribute_Name_Length := 1) is record\n       Name : String (1 .. Name_Length);\n+      pragma Warnings (Off, Name);  --  Reorder it instead???\n       --  The name of the attribute\n \n       Attr_Kind  : Defined_Attribute_Kind;"}, {"sha": "9ea4e36025546bcd5a66fbc8a4f4dedae00c9ad7", "filename": "gcc/ada/s-regpat.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                                                                          --\n --               Copyright (C) 1986 by University of Toronto.               --\n---                      Copyright (C) 1999-2016, AdaCore                    --\n+--                      Copyright (C) 1999-2017, AdaCore                    --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1634,11 +1634,9 @@ package body System.Regpat is\n                   Case_Emit (C);\n             end case;\n \n-            exit Parse_Loop when Emit_Ptr - Length_Ptr = 254;\n-\n             Parse_Pos := Parse_Pos + 1;\n-\n-            exit Parse_Loop when Parse_Pos > Parse_End;\n+            exit Parse_Loop when Parse_Pos > Parse_End\n+              or else Emit_Ptr - Length_Ptr = 254;\n          end loop Parse_Loop;\n \n          --  Is the string followed by a '*+?{' operator ? If yes, and if there"}, {"sha": "b3d9defbc12954bc0cac89e309773d857c27959d", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -12799,7 +12799,8 @@ package body Sem_Ch13 is\n          return True;\n       end if;\n \n-      --  Tagged types never have differing representations\n+      --  Tagged types always have the same representation, because it is not\n+      --  possible to specify different representations for common fields.\n \n       if Is_Tagged_Type (T1) then\n          return True;\n@@ -12837,6 +12838,15 @@ package body Sem_Ch13 is\n          end if;\n       end if;\n \n+      --  For records, representations are different if reorderings differ\n+\n+      if Is_Record_Type (T1)\n+        and then Is_Record_Type (T2)\n+        and then No_Reordering (T1) /= No_Reordering (T2)\n+      then\n+         return False;\n+      end if;\n+\n       --  Types definitely have same representation if neither has non-standard\n       --  representation since default representations are always consistent.\n       --  If only one has non-standard representation, and the other does not,\n@@ -12861,12 +12871,6 @@ package body Sem_Ch13 is\n       if Is_Array_Type (T1) then\n          return Component_Size (T1) = Component_Size (T2);\n \n-      --  Tagged types always have the same representation, because it is not\n-      --  possible to specify different representations for common fields.\n-\n-      elsif Is_Tagged_Type (T1) then\n-         return True;\n-\n       --  Case of record types\n \n       elsif Is_Record_Type (T1) then"}, {"sha": "93a2c891d5df8354d20685433214dc6e93a17f53", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 28, "deletions": 43, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -5015,6 +5015,7 @@ package body Sem_Ch3 is\n       Set_Ekind            (T, E_Record_Type_With_Private);\n       Init_Size_Align      (T);\n       Set_Default_SSO      (T);\n+      Set_No_Reordering    (T, No_Component_Reordering);\n \n       Set_Etype            (T,                Parent_Base);\n       Propagate_Concurrent_Flags (T, Parent_Base);\n@@ -7679,6 +7680,7 @@ package body Sem_Ch3 is\n                Set_Ekind (Full_Der, E_Record_Type);\n                Set_Is_Underlying_Record_View (Full_Der);\n                Set_Default_SSO (Full_Der);\n+               Set_No_Reordering (Full_Der, No_Component_Reordering);\n \n                Analyze (Decl);\n \n@@ -8478,6 +8480,7 @@ package body Sem_Ch3 is\n          Type_Def := N;\n          Set_Ekind (Derived_Type, E_Record_Type_With_Private);\n          Set_Default_SSO (Derived_Type);\n+         Set_No_Reordering (Derived_Type, No_Component_Reordering);\n \n       else\n          Type_Def := Type_Definition (N);\n@@ -8492,6 +8495,7 @@ package body Sem_Ch3 is\n          if Present (Record_Extension_Part (Type_Def)) then\n             Set_Ekind (Derived_Type, E_Record_Type);\n             Set_Default_SSO (Derived_Type);\n+            Set_No_Reordering (Derived_Type, No_Component_Reordering);\n \n             --  Create internal access types for components with anonymous\n             --  access types.\n@@ -9112,60 +9116,45 @@ package body Sem_Ch3 is\n       Set_Has_Primitive_Operations\n         (Derived_Type, Has_Primitive_Operations (Parent_Base));\n \n-      --  Fields inherited from the Parent_Base in the non-private case\n+      --  Set fields for private derived types\n \n-      if Ekind (Derived_Type) = E_Record_Type then\n-         Set_Has_Complex_Representation\n-           (Derived_Type, Has_Complex_Representation (Parent_Base));\n+      if Is_Private_Type (Derived_Type) then\n+         Set_Depends_On_Private (Derived_Type, True);\n+         Set_Private_Dependents (Derived_Type, New_Elmt_List);\n       end if;\n \n-      --  Fields inherited from the Parent_Base for record types\n+      --  Inherit fields for non-private types. If this is the completion of a\n+      --  derivation from a private type, the parent itself is private and the\n+      --  attributes come from its full view, which must be present.\n \n       if Is_Record_Type (Derived_Type) then\n          declare\n             Parent_Full : Entity_Id;\n \n          begin\n-            --  Ekind (Parent_Base) is not necessarily E_Record_Type since\n-            --  Parent_Base can be a private type or private extension. Go\n-            --  to the full view here to get the E_Record_Type specific flags.\n-\n-            if Present (Full_View (Parent_Base)) then\n+            if Is_Private_Type (Parent_Base)\n+              and then not Is_Record_Type (Parent_Base)\n+            then\n                Parent_Full := Full_View (Parent_Base);\n             else\n                Parent_Full := Parent_Base;\n             end if;\n \n-            Set_OK_To_Reorder_Components\n-              (Derived_Type, OK_To_Reorder_Components (Parent_Full));\n-         end;\n-      end if;\n-\n-      --  Set fields for private derived types\n-\n-      if Is_Private_Type (Derived_Type) then\n-         Set_Depends_On_Private (Derived_Type, True);\n-         Set_Private_Dependents (Derived_Type, New_Elmt_List);\n-\n-      --  Inherit fields from non private record types. If this is the\n-      --  completion of a derivation from a private type, the parent itself\n-      --  is private, and the attributes come from its full view, which must\n-      --  be present.\n-\n-      else\n-         if Is_Private_Type (Parent_Base)\n-           and then not Is_Record_Type (Parent_Base)\n-         then\n             Set_Component_Alignment\n-              (Derived_Type, Component_Alignment (Full_View (Parent_Base)));\n+              (Derived_Type, Component_Alignment        (Parent_Full));\n             Set_C_Pass_By_Copy\n-              (Derived_Type, C_Pass_By_Copy      (Full_View (Parent_Base)));\n-         else\n-            Set_Component_Alignment\n-              (Derived_Type, Component_Alignment (Parent_Base));\n-            Set_C_Pass_By_Copy\n-              (Derived_Type, C_Pass_By_Copy      (Parent_Base));\n-         end if;\n+              (Derived_Type, C_Pass_By_Copy             (Parent_Full));\n+            Set_Has_Complex_Representation\n+              (Derived_Type, Has_Complex_Representation (Parent_Full));\n+\n+            --  For untagged types, inherit the layout by default to avoid\n+            --  costly changes of representation for type conversions.\n+\n+            if not Is_Tagged then\n+               Set_Is_Packed     (Derived_Type, Is_Packed     (Parent_Full));\n+               Set_No_Reordering (Derived_Type, No_Reordering (Parent_Full));\n+            end if;\n+         end;\n       end if;\n \n       --  Set fields for tagged types\n@@ -9270,11 +9259,6 @@ package body Sem_Ch3 is\n                end if;\n             end;\n          end if;\n-\n-      else\n-         Set_Is_Packed (Derived_Type, Is_Packed (Parent_Base));\n-         Set_Has_Non_Standard_Rep\n-                       (Derived_Type, Has_Non_Standard_Rep (Parent_Base));\n       end if;\n \n       --  STEP 4: Inherit components from the parent base and constrain them.\n@@ -21540,6 +21524,7 @@ package body Sem_Ch3 is\n       Set_Interfaces        (T, No_Elist);\n       Set_Stored_Constraint (T, No_Elist);\n       Set_Default_SSO       (T);\n+      Set_No_Reordering     (T, No_Component_Reordering);\n \n       --  Normal case\n "}, {"sha": "fc01d8b015ff13c344e866cbd39af44bf1f546b5", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -1468,11 +1468,14 @@ package body Sem_Ch6 is\n          --  there are various error checks that are applied on this body\n          --  when it is analyzed (e.g. correct aspect placement).\n \n-         if Has_Completion (Prev) then\n+         if Has_Completion (Prev)\n+         then\n             Error_Msg_Sloc := Sloc (Prev);\n             Error_Msg_NE (\"duplicate body for & declared#\", N, Prev);\n          end if;\n \n+         Check_Previous_Null_Procedure (N, Prev);\n+\n          Is_Completion := True;\n          Rewrite (N, Null_Body);\n          Analyze (N);"}, {"sha": "ac1897cdab5d834fcbb327e1cd57fa4c21aba27f", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -2893,6 +2893,8 @@ package body Sem_Ch8 is\n \n       if Present (Rename_Spec) then\n \n+         Check_Previous_Null_Procedure (N, Rename_Spec);\n+\n          --  Renaming declaration is the completion of the declaration of\n          --  Rename_Spec. We build an actual body for it at the freezing point.\n "}, {"sha": "2e280a5c7606796809505f95944d924df26775cb", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 63, "deletions": 15, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -14398,10 +14398,10 @@ package body Sem_Prag is\n \n                   if Etype (E_Id) = Any_Type then\n                      return;\n-                  else\n-                     E := Entity (E_Id);\n                   end if;\n \n+                  E := Entity (E_Id);\n+\n                   --  A pragma that applies to a Ghost entity becomes Ghost for\n                   --  the purposes of legality checks and removal of ignored\n                   --  Ghost code.\n@@ -18066,6 +18066,43 @@ package body Sem_Prag is\n                Opt.No_Elab_Code_All_Pragma := N;\n             end if;\n \n+         -----------------------------\n+         -- No_Component_Reordering --\n+         -----------------------------\n+\n+         --  pragma No_Component_Reordering [([Entity =>] type_LOCAL_NAME)];\n+\n+         when Pragma_No_Component_Reordering => No_Comp_Reordering : declare\n+            E    : Entity_Id;\n+            E_Id : Node_Id;\n+\n+         begin\n+            GNAT_Pragma;\n+            Check_At_Most_N_Arguments (1);\n+\n+            if Arg_Count = 0 then\n+               Check_Valid_Configuration_Pragma;\n+               Opt.No_Component_Reordering := True;\n+\n+            else\n+               Check_Optional_Identifier (Arg2, Name_Entity);\n+               Check_Arg_Is_Local_Name (Arg1);\n+               E_Id := Get_Pragma_Arg (Arg1);\n+\n+               if Etype (E_Id) = Any_Type then\n+                  return;\n+               end if;\n+\n+               E := Entity (E_Id);\n+\n+               if not Is_Record_Type (E) then\n+                  Error_Pragma_Arg (\"pragma% requires record type\", Arg1);\n+               end if;\n+\n+               Set_No_Reordering (Base_Type (E));\n+            end if;\n+         end No_Comp_Reordering;\n+\n          --------------------------\n          -- No_Heap_Finalization --\n          --------------------------\n@@ -18443,7 +18480,8 @@ package body Sem_Prag is\n          --  pragma No_Strict_Aliasing [([Entity =>] type_LOCAL_NAME)];\n \n          when Pragma_No_Strict_Aliasing => No_Strict_Aliasing : declare\n-            E_Id : Entity_Id;\n+            E    : Entity_Id;\n+            E_Id : Node_Id;\n \n          begin\n             GNAT_Pragma;\n@@ -18456,15 +18494,19 @@ package body Sem_Prag is\n             else\n                Check_Optional_Identifier (Arg2, Name_Entity);\n                Check_Arg_Is_Local_Name (Arg1);\n-               E_Id := Entity (Get_Pragma_Arg (Arg1));\n+               E_Id := Get_Pragma_Arg (Arg1);\n \n-               if E_Id = Any_Type then\n+               if Etype (E_Id) = Any_Type then\n                   return;\n-               elsif No (E_Id) or else not Is_Access_Type (E_Id) then\n+               end if;\n+\n+               E := Entity (E_Id);\n+\n+               if not Is_Access_Type (E) then\n                   Error_Pragma_Arg (\"pragma% requires access type\", Arg1);\n                end if;\n \n-               Set_No_Strict_Aliasing (Implementation_Base_Type (E_Id));\n+               Set_No_Strict_Aliasing (Base_Type (E));\n             end if;\n          end No_Strict_Aliasing;\n \n@@ -20369,7 +20411,7 @@ package body Sem_Prag is\n             Check_Arg_Is_Local_Name (Arg1);\n             E_Id := Get_Pragma_Arg (Arg1);\n \n-            if Error_Posted (E_Id) then\n+            if Etype (E_Id) = Any_Type then\n                return;\n             end if;\n \n@@ -23164,27 +23206,32 @@ package body Sem_Prag is\n          --  pragma Universal_Aliasing [([Entity =>] type_LOCAL_NAME)];\n \n          when Pragma_Universal_Aliasing => Universal_Alias : declare\n-            E_Id : Entity_Id;\n+            E    : Entity_Id;\n+            E_Id : Node_Id;\n \n          begin\n             GNAT_Pragma;\n             Check_Arg_Count (1);\n             Check_Optional_Identifier (Arg2, Name_Entity);\n             Check_Arg_Is_Local_Name (Arg1);\n-            E_Id := Entity (Get_Pragma_Arg (Arg1));\n+            E_Id := Get_Pragma_Arg (Arg1);\n \n-            if E_Id = Any_Type then\n+            if Etype (E_Id) = Any_Type then\n                return;\n-            elsif No (E_Id) or else not Is_Type (E_Id) then\n+            end if;\n+\n+            E := Entity (E_Id);\n+\n+            if not Is_Type (E) then\n                Error_Pragma_Arg (\"pragma% requires type\", Arg1);\n             end if;\n \n             --  A pragma that applies to a Ghost entity becomes Ghost for the\n             --  purposes of legality checks and removal of ignored Ghost code.\n \n-            Mark_Ghost_Pragma (N, E_Id);\n-            Set_Universal_Aliasing (Implementation_Base_Type (E_Id));\n-            Record_Rep_Item (E_Id, N);\n+            Mark_Ghost_Pragma (N, E);\n+            Set_Universal_Aliasing (Base_Type (E));\n+            Record_Rep_Item (E, N);\n          end Universal_Alias;\n \n          --------------------\n@@ -29293,6 +29340,7 @@ package body Sem_Prag is\n       Pragma_Memory_Size                    =>  0,\n       Pragma_No_Return                      =>  0,\n       Pragma_No_Body                        =>  0,\n+      Pragma_No_Component_Reordering        => -1,\n       Pragma_No_Elaboration_Code_All        =>  0,\n       Pragma_No_Heap_Finalization           =>  0,\n       Pragma_No_Inline                      =>  0,"}, {"sha": "6126b201e5077c924b96d60a1db6ee8c9c5b29d2", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -1900,6 +1900,25 @@ package body Sem_Util is\n       end if;\n    end Cannot_Raise_Constraint_Error;\n \n+   ------------------------------------\n+   --  Check_Previous_Null_Procedure --\n+   ------------------------------------\n+\n+   procedure Check_Previous_Null_Procedure\n+     (Decl : Node_Id;\n+      Prev : Entity_Id)\n+   is\n+   begin\n+      if Ekind (Prev) = E_Procedure\n+        and then Nkind (Parent (Prev)) = N_Procedure_Specification\n+        and then Null_Present (Parent (Prev))\n+      then\n+         Error_Msg_Sloc := Sloc (Prev);\n+         Error_Msg_N\n+           (\"declaration cannot complete previous null procedure#\", Decl);\n+      end if;\n+   end Check_Previous_Null_Procedure;\n+\n    -----------------------------\n    -- Check_Part_Of_Reference --\n    -----------------------------"}, {"sha": "8f0520a3298b696219619b10cda8b8237ca63e81", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -365,6 +365,16 @@ package Sem_Util is\n    --  N is one of the statement forms that is a potentially blocking\n    --  operation. If it appears within a protected action, emit warning.\n \n+   procedure Check_Previous_Null_Procedure\n+     (Decl : Node_Id;\n+      Prev : Entity_Id);\n+   --  A null procedure or a subprogram renaming can complete a previous\n+   --  declaration, unless that previous declaration is itself a null\n+   --  procedure. This must be treated specially because the analysis of\n+   --  the null procedure leaves the corresponding entity as having no\n+   --  completion, because its completion is provided by a generated body\n+   --  inserted after all other declarations.\n+\n    procedure Check_Result_And_Post_State (Subp_Id : Entity_Id);\n    --  Determine whether the contract of subprogram Subp_Id mentions attribute\n    --  'Result and it contains an expression that evaluates differently in pre-"}, {"sha": "600c847aa954ab9920f6ccfe729e7ddfe1381093", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -432,6 +432,7 @@ package Snames is\n    Name_Interrupt_State                : constant Name_Id := N + $; -- GNAT\n    Name_License                        : constant Name_Id := N + $; -- GNAT\n    Name_Locking_Policy                 : constant Name_Id := N + $;\n+   Name_No_Component_Reordering        : constant Name_Id := N + $; -- GNAT\n    Name_No_Heap_Finalization           : constant Name_Id := N + $; -- GNAT\n    Name_No_Run_Time                    : constant Name_Id := N + $; -- GNAT\n    Name_No_Strict_Aliasing             : constant Name_Id := N + $; -- GNAT\n@@ -1810,6 +1811,7 @@ package Snames is\n       Pragma_Interrupt_State,\n       Pragma_License,\n       Pragma_Locking_Policy,\n+      Pragma_No_Component_Reordering,\n       Pragma_No_Heap_Finalization,\n       Pragma_No_Run_Time,\n       Pragma_No_Strict_Aliasing,"}, {"sha": "461f300f33db64d7aab98b307b4262305dd3a630", "filename": "gcc/ada/warnsw.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fwarnsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8489c2956a08a7397d80cc21f67c1a1064c14cdc/gcc%2Fada%2Fwarnsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.adb?ref=8489c2956a08a7397d80cc21f67c1a1064c14cdc", "patch": "@@ -485,6 +485,7 @@ package body Warnsw is\n       --  These warnings are added to the -gnatwa set\n \n       Address_Clause_Overlay_Warnings     := True;\n+      Warn_On_Questionable_Layout         := True;\n       Warn_On_Overridden_Size             := True;\n \n       --  These warnings are removed from the -gnatwa set"}]}