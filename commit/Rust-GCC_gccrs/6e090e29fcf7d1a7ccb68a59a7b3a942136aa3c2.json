{"sha": "6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUwOTBlMjlmY2Y3ZDFhN2NjYjY4YTU5YTdiM2E5NDIxMzZhYTNjMg==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-20T12:22:58Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-20T12:22:58Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r532", "tree": {"sha": "d978920583c825c4149c7168b7d2e50b169b3b00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d978920583c825c4149c7168b7d2e50b169b3b00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2/comments", "author": null, "committer": null, "parents": [{"sha": "b009935de3425ae0283b19b5889b4947091141ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b009935de3425ae0283b19b5889b4947091141ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b009935de3425ae0283b19b5889b4947091141ae"}], "stats": {"total": 72, "additions": 51, "deletions": 21}, "files": [{"sha": "262886370788b6309dca9e23232f1f0ddad41936", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2", "patch": "@@ -47,7 +47,7 @@ extern char *ctime ();\n extern int flag_traditional;\n extern FILE *asm_out_file;\n \n-static char out_sccs_id[] = \"@(#)m88k.c\t2.0.2.2 02 Mar 1992 13:30:28\";\n+static char out_sccs_id[] = \"@(#)m88k.c\t2.0.3.4 19 Mar 1992 11:11:58\";\n static char tm_sccs_id [] = TM_SCCS_ID;\n \n char *m88k_pound_sign = \"\";\t/* Either # for SVR4 or empty for SVR3 */\n@@ -811,7 +811,7 @@ output_short_branch_defs (stream)\n       ASM_GENERATE_INTERNAL_LABEL\n \t(low, \"L\", CODE_LABEL_NUMBER (XEXP (sb_low, 0)));\n       /* This will change as the assembler requirements become known.  */\n-      fprintf (stream, \"%s\\t %s,%s-%s\\n\",\n+      fprintf (stream, \"\\t%s\\t %s,%s-%s\\n\",\n \t       DEF_ASM_OP, &name[1], &high[1], &low[1]);\n     }\n   if (sb_name || sb_high || sb_low)\n@@ -1311,7 +1311,7 @@ output_file_start (file, f_options, f_len, W_options, W_len)\n       char indent[256];\n \n       time_t now = time ((time_t *)0);\n-      sprintf (indent, \"]\\\"\\n%s\\t \\\"@(#)%s [\", IDENT_ASM_OP, main_input_filename);\n+      sprintf (indent, \"]\\\"\\n\\t%s\\t \\\"@(#)%s [\", IDENT_ASM_OP, main_input_filename);\n       fprintf (file, indent+3);\n       pos = fprintf (file, \"gcc %s, %.24s,\", VERSION_STRING, ctime (&now));\n       output_options (file, f_options, f_len, W_options, W_len,\n@@ -1331,14 +1331,14 @@ output_ascii (file, p, size)\n \n   register int num = 0;\n \n-  fprintf (file, \"%s\\t \\\"\", ASCII_DATA_ASM_OP);\n+  fprintf (file, \"\\t%s\\t \\\"\", ASCII_DATA_ASM_OP);\n   for (i = 0; i < size; i++)\n     {\n       register int c = p[i];\n \n       if (num > 48)\n \t{\n-\t  fprintf (file, \"\\\"\\n%s\\t \\\"\", ASCII_DATA_ASM_OP);\n+\t  fprintf (file, \"\\\"\\n\\t%s\\t \\\"\", ASCII_DATA_ASM_OP);\n \t  num = 0;\n \t}\n \n@@ -1406,12 +1406,12 @@ m88k_handle_pragma_token (string, token)\n \t{\n \t  if (state == ps_name || state == ps_value)\n \t    {\n-\t      fprintf (asm_out_file, \"%s\\t \", WEAK_ASM_OP);\n+\t      fprintf (asm_out_file, \"\\t%s\\t \", WEAK_ASM_OP);\n \t      ASM_OUTPUT_LABELREF (asm_out_file, name);\n \t      fputc ('\\n', asm_out_file);\n \t      if (state == ps_value)\n \t\t{\n-\t\t  fprintf (asm_out_file, \"%s\\t \", DEF_ASM_OP);\n+\t\t  fprintf (asm_out_file, \"\\t%s\\t \", DEF_ASM_OP);\n \t\t  ASM_OUTPUT_LABELREF (asm_out_file, name);\n \t\t  fputc (',', asm_out_file);\n \t\t  ASM_OUTPUT_LABELREF (asm_out_file, value);\n@@ -2196,7 +2196,7 @@ output_tdesc (file, offset)\n \n   tdesc_section ();\n \n-  fprintf (file, \"%s\\t %d\", INT_ASM_OP, (16 << 2) | 2 /* 8:0,22:16,2:2 */);\n+  fprintf (file, \"\\t%s\\t %d\", INT_ASM_OP, (16 << 2) | 2 /* 8:0,22:16,2:2 */);\n   fprintf (file, \",%d\", flag_pic ? 2 : 1);\n \n   ASM_GENERATE_INTERNAL_LABEL (buf, OCS_START_PREFIX, m88k_function_number);\n@@ -2444,7 +2444,7 @@ m88k_builtin_saveregs (arglist)\n     }\n \n   /* Allocate the va_list constructor */\n-  block = assign_stack_local (BLKmode, 3 * UNITS_PER_WORD, BITS_PER_UNIT);\n+  block = assign_stack_local (BLKmode, 3 * UNITS_PER_WORD, BITS_PER_WORD);\n   RTX_UNCHANGING_P (block) = 1;\n   RTX_UNCHANGING_P (XEXP (block, 0)) = 1;\n "}, {"sha": "6be6a39c2e98e8a6e17df4639cb4b3d33e7e76ea", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2", "patch": "@@ -204,9 +204,9 @@ extern char * reg_names[];\n /* Print subsidiary information on the compiler version in use.\n    Redefined in m88kv4.h, and m88kluna.h.  */\n #define VERSION_INFO1\t\"88open OCS/BCS, \"\n-#define VERSION_INFO2\t\"09 Mar 1992\"\n+#define VERSION_INFO2\t\"19 Mar 1992\"\n #define VERSION_STRING\tversion_string\n-#define\tTM_SCCS_ID\t\"@(#)m88k.h\t2.0.2.3 09 Mar 1992 14:20:23\"\n+#define\tTM_SCCS_ID\t\"@(#)m88k.h\t2.0.3.5 19 Mar 1992 12:40:46\"\n \n /* Run-time compilation parameters selecting different hardware subsets.  */\n \n@@ -1773,7 +1773,7 @@ enum reg_class { NO_REGS, AP_REG, GENERAL_REGS, ALL_REGS, LIM_REG_CLASSES };\n \n /* The singl-byte pseudo-op is the default.  Override svr[34].h.  */\n #undef\tASM_BYTE_OP\n-#define ASM_BYTE_OP \"byte\"\n+#define ASM_BYTE_OP \"\\tbyte\"\n #undef\tASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(FILE, P, SIZE)  \\\n   output_ascii ((FILE), (P), (SIZE))"}, {"sha": "d31a5f8cf1bfa5dd1dc73f86a60c35bcdcbc0fa9", "filename": "gcc/config/m88k/m88k.md", "status": "modified", "additions": 39, "deletions": 9, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2/gcc%2Fconfig%2Fm88k%2Fm88k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2/gcc%2Fconfig%2Fm88k%2Fm88k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.md?ref=6e090e29fcf7d1a7ccb68a59a7b3a942136aa3c2", "patch": "@@ -28,14 +28,14 @@\n (define_expand \"m88k_sccs_id\"\n   [(match_operand:SI 0 \"\" \"\")]\n   \"\"\n-  \"{ static char sccs_id[] = \\\"@(#)m88k.md\t2.0.2.1 28 Feb 1992 12:38:31\\\";\n+  \"{ static char sccs_id[] = \\\"@(#)m88k.md\t2.0.3.3 18 Mar 1992 15:40:12\\\";\n      FAIL; }\")\n \f\n ;; Attribute specifications\n \n ; Target CPU.\n (define_attr \"cpu\" \"m88000,m88100,m88110\"\n-  (symbol_ref \"m88k_cpu\"))\n+  (const (symbol_ref \"m88k_cpu\")))\n \n ; Type of each instruction.  Default is arithmetic.\n ; I'd like to write the list as this, but genattrtab won't accept it.\n@@ -167,7 +167,7 @@\n \n ; Describing stores is currently not useful.  The suggestion here is that the\n ; function unit ordering has already been established (writeback is last) and\n-; that store insns use the units in an unusal order.\n+; that store insns use the units in an unusual order.\n ;(define_function_unit \"writeback\" 1 1 (eq_attr \"type\" \"store,mstore\") 0 1)\n ;(define_function_unit \"memory\" 1 3 (eq_attr \"type\" \"store,mstore\") 1 2)\n \f\n@@ -189,15 +189,25 @@\n \t\t\t\t(match_operand:SI 2 \"int5_operand\" \"\"))\n \t\t     (match_operand:SI 3 \"int5_operand\" \"\")))]\n   \"INTVAL (operands [2]) <= INTVAL (operands [3])\"\n-  \"ext %0,%1,%w3<(%3-%2)>\")\n+  \"*\n+{\n+  operands[4] = gen_rtx (CONST_INT, SImode,\n+\t\t\t INTVAL (operands[3]) - INTVAL (operands[2]));\n+  return \\\"ext %0,%1,%w3<%4>\\\";  /* <(%3-%2)> */\n+}\")\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(lshiftrt:SI (ashift:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t\t(match_operand:SI 2 \"int5_operand\" \"\"))\n \t\t     (match_operand:SI 3 \"int5_operand\" \"\")))]\n   \"INTVAL (operands [2]) <= INTVAL (operands [3])\"\n-  \"extu %0,%1,%w3<(%3-%2)>\")\n+  \"*\n+{\n+  operands[4] = gen_rtx (CONST_INT, SImode,\n+\t\t\t INTVAL (operands[3]) - INTVAL (operands[2]));\n+  return \\\"extu %0,%1,%w3<%4>\\\";  /* <(%3-%2)> */\n+}\")\n \n ;; Optimize possible cases of the set instruction.\n \n@@ -2653,7 +2663,12 @@\n \t\t\t (match_operand:SI 2 \"int5_operand\" \"\")\n \t\t\t (match_operand:SI 3 \"int5_operand\" \"\")))]\n   \"\"\n-  \"ext %0,%1,%2<(32-%2-%3)>\")\n+  \"*\n+{\n+  operands[4] = gen_rtx (CONST_INT, SImode,\n+\t\t\t (32 - INTVAL (operands[2])) - INTVAL (operands[3]));\n+  return \\\"ext %0,%1,%2<%4>\\\";  /* <(32-%2-%3)> */\n+}\")\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n@@ -2669,23 +2684,38 @@\n \t\t\t (match_operand:SI 2 \"int5_operand\" \"\")\n \t\t\t (match_operand:SI 3 \"int5_operand\" \"\")))]\n   \"\"\n-  \"extu %0,%1,%2<(32-%2-%3)>\")\n+  \"*\n+{\n+  operands[4] = gen_rtx (CONST_INT, SImode,\n+\t\t\t (32 - INTVAL (operands[2])) - INTVAL (operands[3]));\n+  return \\\"extu %0,%1,%2<%4>\\\";  /* <(32-%2-%3)> */\n+}\")\n \n (define_insn \"\"\n   [(set (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t\t (match_operand:SI 1 \"int5_operand\" \"\")\n \t\t\t (match_operand:SI 2 \"int5_operand\" \"\"))\n \t(const_int 0))]\n   \"\"\n-  \"clr %0,%0,%1<(32-%1-%2)>\")\n+  \"*\n+{\n+  operands[3] = gen_rtx (CONST_INT, SImode,\n+\t\t\t (32 - INTVAL (operands[1])) - INTVAL (operands[2]));\n+  return \\\"clr %0,%0,%1<%3>\\\";  /* <(32-%1-%2)> */\n+}\")\n \n (define_insn \"\"\n   [(set (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"r\")\n \t\t\t (match_operand:SI 1 \"int5_operand\" \"\")\n \t\t\t (match_operand:SI 2 \"int5_operand\" \"\"))\n \t(const_int -1))]\n   \"\"\n-  \"set %0,%0,%1<(32-%1-%2)>\")\n+  \"*\n+{\n+  operands[3] = gen_rtx (CONST_INT, SImode,\n+\t\t\t (32 - INTVAL (operands[1])) - INTVAL (operands[2]));\n+  return \\\"set %0,%0,%1<%3>\\\";  /* <(32-%1-%2)> */\n+}\")\n \n (define_insn \"\"\n   [(set (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"=r\")"}]}