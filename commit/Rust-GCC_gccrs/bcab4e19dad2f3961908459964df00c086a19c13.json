{"sha": "bcab4e19dad2f3961908459964df00c086a19c13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNhYjRlMTlkYWQyZjM5NjE5MDg0NTk5NjRkZjAwYzA4NmExOWMxMw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-01-16T15:20:16Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-01-16T15:20:16Z"}, "message": "graphite.c (compare_prefix_loops): New.\n\n2009-01-16  Sebastian Pop  <sebastian.pop@amd.com>\n\t    Tobias Grosser  <tobi.grosser@amd.com>\n\n\t* graphite.c (compare_prefix_loops): New.\n\t(build_scop_canonical_schedules): Rewritten.\n\t(graphite_transform_loops): Move build_scop_canonical_schedules\n\tafter build_scop_iteration_domain.\n\n\nCo-Authored-By: Tobias Grosser <tobi.grosser@amd.com>\n\nFrom-SVN: r143437", "tree": {"sha": "cf9185214225c9de8fa53a3172076ecbcbec6390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf9185214225c9de8fa53a3172076ecbcbec6390"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcab4e19dad2f3961908459964df00c086a19c13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcab4e19dad2f3961908459964df00c086a19c13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcab4e19dad2f3961908459964df00c086a19c13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcab4e19dad2f3961908459964df00c086a19c13/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b040072d6aa13cb46cf660307a77df7964c326f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b040072d6aa13cb46cf660307a77df7964c326f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b040072d6aa13cb46cf660307a77df7964c326f"}], "stats": {"total": 74, "additions": 50, "deletions": 24}, "files": [{"sha": "b6e30e058eb2ded8cf76f86fe00717bc12a00d28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcab4e19dad2f3961908459964df00c086a19c13/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcab4e19dad2f3961908459964df00c086a19c13/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bcab4e19dad2f3961908459964df00c086a19c13", "patch": "@@ -1,3 +1,11 @@\n+2009-01-16  Sebastian Pop  <sebastian.pop@amd.com>\n+\t    Tobias Grosser  <tobi.grosser@amd.com>\n+\n+\t* graphite.c (compare_prefix_loops): New.\n+\t(build_scop_canonical_schedules): Rewritten.\n+\t(graphite_transform_loops): Move build_scop_canonical_schedules\n+\tafter build_scop_iteration_domain.\n+\n 2009-01-16  Sebastian Pop  <sebastian.pop@amd.com>\n \t    Tobias Grosser  <tobi.grosser@amd.com>\n "}, {"sha": "4e301e47c542e6f8bbc1a3ba8b11edca5b33cb2d", "filename": "gcc/graphite.c", "status": "modified", "additions": 42, "deletions": 24, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcab4e19dad2f3961908459964df00c086a19c13/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcab4e19dad2f3961908459964df00c086a19c13/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=bcab4e19dad2f3961908459964df00c086a19c13", "patch": "@@ -2472,6 +2472,29 @@ build_scop_dynamic_schedules (scop_p scop)\n     }\n }\n \n+/* Returns the number of loops that are identical at the beginning of\n+   the vectors A and B.  */\n+\n+static int\n+compare_prefix_loops (VEC (loop_p, heap) *a, VEC (loop_p, heap) *b)\n+{\n+  int i;\n+  loop_p ea;\n+  int lb;\n+\n+  if (!a || !b)\n+    return 0;\n+\n+  lb = VEC_length (loop_p, b);\n+\n+  for (i = 0; VEC_iterate (loop_p, a, i, ea); i++)\n+    if (i >= lb\n+\t|| ea != VEC_index (loop_p, b, i))\n+      return i;\n+\n+  return 0;\n+}\n+\n /* Build for BB the static schedule.\n \n    The STATIC_SCHEDULE is defined like this:\n@@ -2508,34 +2531,29 @@ build_scop_dynamic_schedules (scop_p scop)\n static void\n build_scop_canonical_schedules (scop_p scop)\n {\n-  int i, j;\n+  int i;\n   graphite_bb_p gb;\n-  int nb = scop_nb_loops (scop) + 1;\n+  int nb_loops = scop_nb_loops (scop);\n+  lambda_vector static_schedule = lambda_vector_new (nb_loops + 1);\n+  VEC (loop_p, heap) *loops_previous = NULL;\n \n-  SCOP_STATIC_SCHEDULE (scop) = lambda_vector_new (nb);\n+  /* We have to start schedules at 0 on the first component and\n+     because we cannot compare_prefix_loops against a previous loop,\n+     prefix will be equal to zero, and that index will be\n+     incremented before copying.  */\n+  static_schedule[0] = -1;\n \n   for (i = 0; VEC_iterate (graphite_bb_p, SCOP_BBS (scop), i, gb); i++)\n     {\n-      int offset = nb_loops_around_gb (gb);\n-\n-      /* After leaving a loop, it is possible that the schedule is not\n-\t set at zero.  This loop reinitializes components located\n-\t after OFFSET.  */\n-\n-      for (j = offset + 1; j < nb; j++)\n-\tif (SCOP_STATIC_SCHEDULE (scop)[j])\n-\t  {\n-\t    memset (&(SCOP_STATIC_SCHEDULE (scop)[j]), 0,\n-\t\t    sizeof (int) * (nb - j));\n-\t    ++SCOP_STATIC_SCHEDULE (scop)[offset];\n-\t    break;\n-\t  }\n-\n-      GBB_STATIC_SCHEDULE (gb) = lambda_vector_new (offset + 1);\n-      lambda_vector_copy (SCOP_STATIC_SCHEDULE (scop), \n-\t\t\t  GBB_STATIC_SCHEDULE (gb), offset + 1);\n-\n-      ++SCOP_STATIC_SCHEDULE (scop)[offset];\n+      int prefix = compare_prefix_loops (loops_previous, GBB_LOOPS (gb));\n+      int nb = gbb_nb_loops (gb);\n+\n+      loops_previous = GBB_LOOPS (gb);\n+      memset (&(static_schedule[prefix + 1]), 0, sizeof (int) * (nb_loops - prefix));\n+      ++static_schedule[prefix];\n+      GBB_STATIC_SCHEDULE (gb) = lambda_vector_new (nb + 1);\n+      lambda_vector_copy (static_schedule, \n+\t\t\t  GBB_STATIC_SCHEDULE (gb), nb + 1);\n     }\n }\n \n@@ -6049,7 +6067,6 @@ graphite_transform_loops (void)\n       if (!build_scop_loop_nests (scop))\n \tcontinue;\n \n-      build_scop_canonical_schedules (scop);\n       build_bb_loops (scop);\n \n       if (!build_scop_conditions (scop))\n@@ -6071,6 +6088,7 @@ graphite_transform_loops (void)\n \tcontinue;\n \n       add_conditions_to_constraints (scop);\n+      build_scop_canonical_schedules (scop);\n \n       build_scop_data_accesses (scop);\n       build_scop_dynamic_schedules (scop);"}]}