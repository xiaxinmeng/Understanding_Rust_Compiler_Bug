{"sha": "03a9fcb862d7cdabcd639c4b423dc8fbb138e167", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNhOWZjYjg2MmQ3Y2RhYmNkNjM5YzRiNDIzZGM4ZmJiMTM4ZTE2Nw==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2005-05-15T18:28:36Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2005-05-15T18:28:36Z"}, "message": "fixlib.c (load_file_data): Use XRESIZVEC in lieu of xrealloc.\n\n        * fixlib.c (load_file_data): Use XRESIZVEC in lieu of xrealloc.\n        * server.c (load_data): Likewise.\n        (run_shell): Use XCNEW (char) in lieu of xcalloc (1, 1).\n        * fixincl.c: #include <sys/wait.h>\n        (run_compiles): Use XCNEWVEC instead of xcalloc.\n        (fix_with_system, start_fixer): Use XNEWVEC instead of xmalloc.\n        * fixfixes.c (FIX_PROC_HEAD, main): Likewise.\n\nFrom-SVN: r99740", "tree": {"sha": "cd18ca760bb357ceaa6cda012988fe320aa1b783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd18ca760bb357ceaa6cda012988fe320aa1b783"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03a9fcb862d7cdabcd639c4b423dc8fbb138e167", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03a9fcb862d7cdabcd639c4b423dc8fbb138e167", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03a9fcb862d7cdabcd639c4b423dc8fbb138e167", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03a9fcb862d7cdabcd639c4b423dc8fbb138e167/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4220f64e3bc2c2c3eb868bee76468b445fcdd3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4220f64e3bc2c2c3eb868bee76468b445fcdd3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4220f64e3bc2c2c3eb868bee76468b445fcdd3e"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "12901de214e3454312032f15114ff1048cce3fdf", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a9fcb862d7cdabcd639c4b423dc8fbb138e167/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a9fcb862d7cdabcd639c4b423dc8fbb138e167/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=03a9fcb862d7cdabcd639c4b423dc8fbb138e167", "patch": "@@ -1,3 +1,13 @@\n+2005-05-15  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* fixlib.c (load_file_data): Use XRESIZVEC in lieu of xrealloc.\n+\t* server.c (load_data): Likewise.\n+\t(run_shell): Use XCNEW (char) in lieu of xcalloc (1, 1).\n+\t* fixincl.c: #include <sys/wait.h>\n+\t(run_compiles): Use XCNEWVEC instead of xcalloc.\n+\t(fix_with_system, start_fixer): Use XNEWVEC instead of xmalloc.\n+\t* fixfixes.c (FIX_PROC_HEAD, main): Likewise.\n+\n 2005-05-10  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* inclhack.def (stdio_stdarg_h, stdio_va_list): Bypass on"}, {"sha": "c883253123d92e8fb23077f72e356d230898bef2", "filename": "fixincludes/fixfixes.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a9fcb862d7cdabcd639c4b423dc8fbb138e167/fixincludes%2Ffixfixes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a9fcb862d7cdabcd639c4b423dc8fbb138e167/fixincludes%2Ffixfixes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixfixes.c?ref=03a9fcb862d7cdabcd639c4b423dc8fbb138e167", "patch": "@@ -605,7 +605,7 @@ FIX_PROC_HEAD( wrap_fix )\n        *  *both* the fix name and the file name.\n        */\n       size_t ln = strlen( filname ) + strlen( p_fixd->fix_name ) + 14;\n-      char*  pz = xmalloc( ln );\n+      char*  pz = XNEWVEC (char, ln);\n       pz_name = pz;\n       sprintf( pz, \"FIXINC_WRAP_%s-%s\", filname, p_fixd->fix_name );\n \n@@ -770,7 +770,7 @@ main( int argc, char** argv )\n       return EXIT_FAILURE;\n     }\n \n-  pz_tmptmp = xmalloc (strlen (argv[4]) + 5);\n+  pz_tmptmp = XNEWVEC (char, strlen (argv[4]) + 5);\n   strcpy( pz_tmptmp, argv[4] );\n \n   /* Don't lose because \"12345678\" and \"12345678X\" map to the same"}, {"sha": "5f07afa408f8ce93035fd5eca613b1d1a6904184", "filename": "fixincludes/fixincl.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a9fcb862d7cdabcd639c4b423dc8fbb138e167/fixincludes%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a9fcb862d7cdabcd639c4b423dc8fbb138e167/fixincludes%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.c?ref=03a9fcb862d7cdabcd639c4b423dc8fbb138e167", "patch": "@@ -24,6 +24,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"fixlib.h\"\n \n #include <sys/stat.h>\n+#include <sys/wait.h>\n \n #if defined( HAVE_MMAP_FILE )\n #include <sys/mman.h>\n@@ -451,7 +452,7 @@ run_compiles (void)\n {\n   tFixDesc *p_fixd = fixDescList;\n   int fix_ct = FIX_COUNT;\n-  regex_t *p_re = xcalloc (REGEX_COUNT, sizeof (regex_t));\n+  regex_t *p_re = XCNEWVEC (regex_t, REGEX_COUNT);\n \n   /*  Make sure compile_re does not stumble across invalid data */\n \n@@ -866,7 +867,7 @@ fix_with_system (tFixDesc* p_fixd,\n               + strlen (pz_temp_file);\n \n       /* Allocate something sure to be big enough for our purposes */\n-      pz_cmd = xmalloc (argsize);\n+      pz_cmd = XNEWVEC (char, argsize);\n       strcpy (pz_cmd, pz_orig_dir);\n       pz_scan = pz_cmd + strlen (pz_orig_dir);\n \n@@ -933,7 +934,7 @@ fix_with_system (tFixDesc* p_fixd,\n         }\n \n       /* Estimated buffer size we will need.  */\n-      pz_scan = pz_cmd = xmalloc (argsize);\n+      pz_scan = pz_cmd = XNEWVEC (char, argsize);\n       /* How much of it do we allot to the program name and its\n          arguments.  */\n       parg_size = argsize - parg_size;\n@@ -1020,7 +1021,7 @@ start_fixer (int read_fd, tFixDesc* p_fixd, char* pz_fix_file)\n   else\n     {\n       tSCC z_cmd_fmt[] = \"file='%s'\\n%s\";\n-      pz_cmd = xmalloc (strlen (p_fixd->patch_args[2])\n+      pz_cmd = XNEWVEC (char, strlen (p_fixd->patch_args[2])\n \t\t\t+ sizeof (z_cmd_fmt) + strlen (pz_fix_file));\n       sprintf (pz_cmd, z_cmd_fmt, pz_fix_file, p_fixd->patch_args[2]);\n       pz_cmd_save = p_fixd->patch_args[2];"}, {"sha": "7ab45c514974fcdeea10629672ac1283265aefb5", "filename": "fixincludes/fixlib.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a9fcb862d7cdabcd639c4b423dc8fbb138e167/fixincludes%2Ffixlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a9fcb862d7cdabcd639c4b423dc8fbb138e167/fixincludes%2Ffixlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixlib.c?ref=03a9fcb862d7cdabcd639c4b423dc8fbb138e167", "patch": "@@ -48,7 +48,7 @@ load_file_data (FILE* fp)\n       if (space_left < 1024)\n         {\n           space_left += 4096;\n-\t  pz_data = xrealloc (pz_data, space_left + space_used + 1 );\n+\t  pz_data = XRESIZEVEC (char, pz_data, space_left + space_used + 1 );\n         }\n       size_read = fread (pz_data + space_used, 1, space_left, fp);\n \n@@ -72,7 +72,7 @@ load_file_data (FILE* fp)\n       space_used += size_read;\n     } while (! feof (fp));\n \n-  pz_data = xrealloc (pz_data, space_used+1 );\n+  pz_data = XRESIZEVEC (char, pz_data, space_used+1 );\n   pz_data[ space_used ] = NUL;\n \n   return pz_data;"}, {"sha": "73db78b2e79644c2153071478e15c6c41088556d", "filename": "fixincludes/server.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03a9fcb862d7cdabcd639c4b423dc8fbb138e167/fixincludes%2Fserver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03a9fcb862d7cdabcd639c4b423dc8fbb138e167/fixincludes%2Fserver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fserver.c?ref=03a9fcb862d7cdabcd639c4b423dc8fbb138e167", "patch": "@@ -83,7 +83,7 @@ load_data (FILE* fp)\n   t_bool got_done = BOOL_FALSE;\n \n   text_size = sizeof (z_line) * 2;\n-  pz_scan = pz_text = xmalloc (text_size);\n+  pz_scan = pz_text = XNEWVEC (char, text_size);\n \n   for (;;)\n     {\n@@ -109,7 +109,7 @@ load_data (FILE* fp)\n           size_t off = (size_t) (pz_scan - pz_text);\n \t  \n           text_size += 4096;\n-          pz_text = xrealloc (pz_text, text_size);\n+          pz_text = XRESIZEVEC (char, pz_text, text_size);\n           pz_scan = pz_text + off;\n         }\n     }\n@@ -124,7 +124,7 @@ load_data (FILE* fp)\n   while ((pz_scan > pz_text) && ISSPACE (pz_scan[-1]))\n     pz_scan--;\n   *pz_scan = NUL;\n-  return xrealloc (pz_text, strlen (pz_text) + 1);\n+  return XRESIZEVEC (char, pz_text, strlen (pz_text) + 1);\n }\n \n \n@@ -260,7 +260,7 @@ run_shell (const char* pz_cmd)\n   if (server_id <= 0)\n     {\n       fprintf (stderr, zNoServer, pz_cmd);\n-      return xcalloc (1, 1);\n+      return XCNEW (char);\n     }\n \n   /*  Make sure the process will pay attention to us, send the\n@@ -275,7 +275,7 @@ run_shell (const char* pz_cmd)\n   if (server_id == NULLPROCESS)\n     {\n       fprintf (stderr, zNoServer, pz_cmd);\n-      return xcalloc (1, 1);\n+      return XCNEW (char);\n     }\n \n   /*  Now try to read back all the data.  If we fail due to either a\n@@ -295,7 +295,7 @@ run_shell (const char* pz_cmd)\n \n         fprintf (stderr, \"CLOSING SHELL SERVER - command failure:\\n\\t%s\\n\",\n                  pz_cmd);\n-        pz = xcalloc (1, 1);\n+        pz = XCNEW (char);\n       }\n #ifdef DEBUG\n     fprintf( stderr, \"run_shell command success:  %s\\n\", pz );"}]}