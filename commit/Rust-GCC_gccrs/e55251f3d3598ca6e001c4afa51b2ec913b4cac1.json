{"sha": "e55251f3d3598ca6e001c4afa51b2ec913b4cac1", "node_id": "C_kwDOANBUbNoAKGU1NTI1MWYzZDM1OThjYTZlMDAxYzRhZmE1MWIyZWM5MTNiNGNhYzE", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-12-02T01:54:06Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-12-02T12:30:22Z"}, "message": "Improve ix86_expand_fast_convert_bf_to_sf with new extendbfsf2_1.\n\nAfter supporting extendbfsf2_1, ix86_expand_fast_convert_bf_to_sf can\nbe improved with pslld either.\nCONST_INT_P is not handled since constant shift can be optimized off.\n\ngcc/ChangeLog:\n\n\t* config/i386/i386-expand.cc\n\t(ix86_expand_fast_convert_bf_to_sf): Use extendbfsf2_1 for\n\tnonimmediate operand.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/cbranchbf4.c: New test.", "tree": {"sha": "0842ff5362b228bc64d3348690d7ae3ebc307c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0842ff5362b228bc64d3348690d7ae3ebc307c83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e55251f3d3598ca6e001c4afa51b2ec913b4cac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55251f3d3598ca6e001c4afa51b2ec913b4cac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e55251f3d3598ca6e001c4afa51b2ec913b4cac1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e55251f3d3598ca6e001c4afa51b2ec913b4cac1/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71e800747e42d91888a0533ce797ce8e4a8c2baf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e800747e42d91888a0533ce797ce8e4a8c2baf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71e800747e42d91888a0533ce797ce8e4a8c2baf"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "b920cfbaf9069714bcb9181d873483183cf89c5a", "filename": "gcc/config/i386/i386-expand.cc", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55251f3d3598ca6e001c4afa51b2ec913b4cac1/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55251f3d3598ca6e001c4afa51b2ec913b4cac1/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.cc?ref=e55251f3d3598ca6e001c4afa51b2ec913b4cac1", "patch": "@@ -24187,14 +24187,13 @@ ix86_expand_fast_convert_bf_to_sf (rtx val)\n       /* FLOAT_EXTEND simplification will fail if VAL is a sNaN.  */\n       ret = gen_reg_rtx (SImode);\n       emit_move_insn (ret, GEN_INT (INTVAL (op) & 0xffff));\n+      emit_insn (gen_ashlsi3 (ret, ret, GEN_INT (16)));\n+      return gen_lowpart (SFmode, ret);\n     }\n-  else\n-    {\n-      ret = gen_reg_rtx (SImode);\n-      emit_insn (gen_zero_extendhisi2 (ret, op));\n-    }\n-  emit_insn (gen_ashlsi3 (ret, ret, GEN_INT (16)));\n-  return gen_lowpart (SFmode, ret);\n+\n+  ret = gen_reg_rtx (SFmode);\n+  emit_insn (gen_extendbfsf2_1 (ret, force_reg (BFmode, val)));\n+  return ret;\n }\n \n #include \"gt-i386-expand.h\""}, {"sha": "8241a0c216557467931ec131970ba234b8bfa048", "filename": "gcc/testsuite/gcc.target/i386/cbranchbf4.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e55251f3d3598ca6e001c4afa51b2ec913b4cac1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcbranchbf4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e55251f3d3598ca6e001c4afa51b2ec913b4cac1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcbranchbf4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcbranchbf4.c?ref=e55251f3d3598ca6e001c4afa51b2ec913b4cac1", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fexcess-precision=16 -O -msse2 -mfpmath=sse\" } */\n+/* { dg-final { scan-assembler-times \"pslld\" 4 } } */\n+\n+char\n+foo (__bf16 a, __bf16 b)\n+{\n+  return a > b;\n+}\n+\n+float\n+foo1 (__bf16 a, __bf16 b, float c, float d)\n+{\n+  return a > b ? c : d;\n+}"}]}