{"sha": "644f3d7ef0263ce38b13ff627acd8889741a7610", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ0ZjNkN2VmMDI2M2NlMzhiMTNmZjYyN2FjZDg4ODk3NDFhNzYxMA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-01-30T20:18:51Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-01-30T20:18:51Z"}, "message": "gcov.c (fnotice): Add missing FILE* parameter.\n\n        * gcov.c (fnotice): Add missing FILE* parameter.\n        (function_summary): Fix format specifiers in calls to `fnotice'.\n        (output_data): Likewise.\n        * toplev.c (fnotice): Constify char* parameter.\n        * toplev.h (fnotice): Add prototype.\n\nFrom-SVN: r24931", "tree": {"sha": "caf6989b89940c2df8c5a75ea1085dab1c52a246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caf6989b89940c2df8c5a75ea1085dab1c52a246"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/644f3d7ef0263ce38b13ff627acd8889741a7610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/644f3d7ef0263ce38b13ff627acd8889741a7610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/644f3d7ef0263ce38b13ff627acd8889741a7610", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/644f3d7ef0263ce38b13ff627acd8889741a7610/comments", "author": null, "committer": null, "parents": [{"sha": "a2f5e296c2e7a1f04267965f958d7f3ce3c4239b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f5e296c2e7a1f04267965f958d7f3ce3c4239b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2f5e296c2e7a1f04267965f958d7f3ce3c4239b"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "a84191fc0fcde2a509c394fdb12ce8be8cfba656", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/644f3d7ef0263ce38b13ff627acd8889741a7610/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/644f3d7ef0263ce38b13ff627acd8889741a7610/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=644f3d7ef0263ce38b13ff627acd8889741a7610", "patch": "@@ -1,3 +1,13 @@\n+Sat Jan 30 23:14:13 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcov.c (fnotice): Add missing FILE* parameter.\n+\t(function_summary): Fix format specifiers in calls to `fnotice'.\n+\t(output_data): Likewise.\n+\n+\t* toplev.c (fnotice): Constify char* parameter.\n+\n+\t* toplev.h (fnotice): Add prototype.\n+\n Sun Jan 31 15:33:09 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.h (RTX_COSTS): Explicitly define c4x costs."}, {"sha": "a582b0f1dc12981326b722280a8d18ec6433d6f6", "filename": "gcc/gcov.c", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/644f3d7ef0263ce38b13ff627acd8889741a7610/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/644f3d7ef0263ce38b13ff627acd8889741a7610/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=644f3d7ef0263ce38b13ff627acd8889741a7610", "patch": "@@ -244,22 +244,24 @@ main (argc, argv)\n   return 0;\n }\n \n-static void fnotice\tPVPROTO ((const char *, ...)) ATTRIBUTE_PRINTF_1;\n+static void fnotice PVPROTO ((FILE *, const char *, ...)) ATTRIBUTE_PRINTF_2;\n static void\n-fnotice VPROTO ((const char *msgid, ...))\n+fnotice VPROTO ((FILE *file, const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n+  FILE *file;\n   const char *msgid;\n #endif\n   va_list ap;\n \n   VA_START (ap, msgid);\n \n #ifndef ANSI_PROTOTYPES\n+  file = va_arg (ap, FILE *);\n   msgid = va_arg (ap, const char *);\n #endif\n \n-  vfprintf (stderr, _(msgid), ap);\n+  vfprintf (file, _(msgid), ap);\n   va_end (ap);\n }\n \n@@ -922,7 +924,7 @@ static void\n function_summary ()\n {\n   if (function_source_lines)\n-    fnotice (stdout, \"%6.2lf%% of %d source lines executed in function %s\\n\",\n+    fnotice (stdout, \"%6.2f%% of %d source lines executed in function %s\\n\",\n \t     (((double) function_source_lines_executed / function_source_lines)\n \t      * 100), function_source_lines, function_name);\n   else\n@@ -933,18 +935,18 @@ function_summary ()\n     {\n       if (function_branches)\n \t{\n-\t  fnotice (stdout, \"%6.2lf%% of %d branches executed in function %s\\n\",\n+\t  fnotice (stdout, \"%6.2f%% of %d branches executed in function %s\\n\",\n \t\t   (((double) function_branches_executed / function_branches)\n \t\t    * 100), function_branches, function_name);\n \t  fnotice (stdout,\n-\t\t\"%6.2lf%% of %d branches taken at least once in function %s\\n\",\n+\t\t\"%6.2f%% of %d branches taken at least once in function %s\\n\",\n \t\t   (((double) function_branches_taken / function_branches)\n \t\t    * 100), function_branches, function_name);\n \t}\n       else\n \tfnotice (stdout, \"No branches in function %s\\n\", function_name);\n       if (function_calls)\n-\tfnotice (stdout, \"%6.2lf%% of %d calls executed in function %s\\n\",\n+\tfnotice (stdout, \"%6.2f%% of %d calls executed in function %s\\n\",\n \t\t (((double) function_calls_executed / function_calls)\n \t\t  * 100), function_calls, function_name);\n       else\n@@ -1082,7 +1084,7 @@ output_data ()\n \t\t\tfnotice (stderr,\n \t\t\t\t \"didn't use all bb entries of graph, function %s\\n\",\n \t\t\t\t function_name);\n-\t\t\tfnotice (stderr, \"block_num = %d, num_blocks = %d\\n\",\n+\t\t\tfnotice (stderr, \"block_num = %ld, num_blocks = %d\\n\",\n \t\t\t\t block_num, current_graph->num_blocks);\n \t\t      }\n \n@@ -1197,7 +1199,7 @@ output_data ()\n \n       if (total_source_lines)\n \tfnotice (stdout,\n-\t\t \"%6.2lf%% of %d source lines executed in file %s\\n\",\n+\t\t \"%6.2f%% of %d source lines executed in file %s\\n\",\n \t\t (((double) total_source_lines_executed / total_source_lines)\n \t\t  * 100), total_source_lines, source_file_name);\n       else\n@@ -1208,18 +1210,18 @@ output_data ()\n \t{\n \t  if (total_branches)\n \t    {\n-\t      fnotice (stdout, \"%6.2lf%% of %d branches executed in file %s\\n\",\n+\t      fnotice (stdout, \"%6.2f%% of %d branches executed in file %s\\n\",\n \t\t       (((double) total_branches_executed / total_branches)\n \t\t\t* 100), total_branches, source_file_name);\n \t      fnotice (stdout,\n-\t\t    \"%6.2lf%% of %d branches taken at least once in file %s\\n\",\n+\t\t    \"%6.2f%% of %d branches taken at least once in file %s\\n\",\n \t\t       (((double) total_branches_taken / total_branches)\n \t\t\t* 100), total_branches, source_file_name);\n \t    }\n \t  else\n \t    fnotice (stdout, \"No branches in file %s\\n\", source_file_name);\n \t  if (total_calls)\n-\t    fnotice (stdout, \"%6.2lf%% of %d calls executed in file %s\\n\",\n+\t    fnotice (stdout, \"%6.2f%% of %d calls executed in file %s\\n\",\n \t\t     (((double) total_calls_executed / total_calls)\n \t\t      * 100), total_calls, source_file_name);\n \t  else"}, {"sha": "2b73288123aff774612f2871f6861676d545bfc4", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/644f3d7ef0263ce38b13ff627acd8889741a7610/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/644f3d7ef0263ce38b13ff627acd8889741a7610/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=644f3d7ef0263ce38b13ff627acd8889741a7610", "patch": "@@ -1557,19 +1557,19 @@ notice VPROTO((const char *msgid, ...))\n }\n \n void\n-fnotice VPROTO((FILE *file, char *msgid, ...))\n+fnotice VPROTO((FILE *file, const char *msgid, ...))\n {\n #ifndef ANSI_PROTOTYPES\n   FILE *file;\n-  char *msgid;\n+  const char *msgid;\n #endif\n   va_list ap;\n \n   VA_START (ap, msgid);\n \n #ifndef ANSI_PROTOTYPES\n   file = va_arg (ap, FILE *);\n-  msgid = va_arg (ap, char *);\n+  msgid = va_arg (ap, const char *);\n #endif\n \n   vnotice (file, msgid, ap);"}, {"sha": "a9b6c532364807bad6888108349fe3b77fd5a07c", "filename": "gcc/toplev.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/644f3d7ef0263ce38b13ff627acd8889741a7610/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/644f3d7ef0263ce38b13ff627acd8889741a7610/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=644f3d7ef0263ce38b13ff627acd8889741a7610", "patch": "@@ -102,4 +102,7 @@ extern void do_abort\t\t\tPROTO ((void)) ATTRIBUTE_NORETURN;\n extern void botch\t\t\tPROTO ((const char *))\n   ATTRIBUTE_NORETURN;\n \n+extern void fnotice\t\t\tPROTO ((FILE *, const char *, ...))\n+  ATTRIBUTE_PRINTF_2;\n+\n #endif /* __GCC_TOPLEV_H */"}]}