{"sha": "1b24ada5aba090c1b641353f94cba86730c99105", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIyNGFkYTVhYmEwOTBjMWI2NDEzNTNmOTRjYmE4NjczMGM5OTEwNQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-03-26T07:36:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-03-26T07:36:02Z"}, "message": "ali.ads, ali.adb (Optimize_Alignment_Setting): New field in ALI record\n\n2008-03-26  Robert Dewar  <dewar@adacore.com>\n\n\t* ali.ads, ali.adb (Optimize_Alignment_Setting): New field in ALI record\n\n\t* bcheck.adb (Check_Consistent_Optimize_Alignment): New procedure\n\n\t* debug.adb: Add debug flags d.r and d.v\n\tAdd debug flag .T (Optimize_Alignment (Time))\n\tAdd debug flag .S (Optimize_Alignment (Space))\n\n\t* freeze.adb (Freeze_Record_Type): Set OK_To_Reorder_Components\n\tdepending on setting of relevant debug flags.\n\tReplace use of Warnings_Off by Has_Warnings_Off\n\t(Freeze_Entity): In circuit for warning on suspicious convention\n\tactuals, do not give warning if subprogram has same entity as formal\n\ttype, or if subprogram does not come from source.\n\t(Freeze_Entity): Don't reset Is_Packed for fully rep speced record\n\tif Optimize_Alignment set to Space.\n\n\t* frontend.adb: Add call to Sem_Warn.Initialize\n\tAdd call to Sem_Warn.Output_Unused_Warnings_Off_Warnings\n\tReset Optimize_Alignment mode from debug switches .S and .T\n\n\t* layout.adb (Layout_Composite_Object): Rewritten for\n\tOptimize_Aligment pragma.\n\n\t* lib-writ.ads, lib-writ.adb: New Ox parameter for Optimize_Alignment\n\tmode.\n\n\t* opt.ads, opt.adb: (Optimize_Alignment): New global switch\n\n\t* par-prag.adb (N_Pragma): Chars field removed, use Chars\n\t(Pragma_Identifier (..  instead, adjustments throughout to accomodate\n\tthis change. Add entry for pragma Optimize_Alignment\n\n\t* sem_prag.adb (N_Pragma): Chars field removed, use Chars\n\t(Pragma_Identifier (..\n\tinstead, adjustments throughout to accomodate this change.\n\t(Process_Compile_Time_Warning_Or_Error): Use !! for generated msg\n\t(Favor_Top_Level): Use new function Is_Access_Subprogram_Type\n\tAdd implementation of pragma Optimize_Alignment\n\nFrom-SVN: r133549", "tree": {"sha": "70dbf93da9aba2214e551ac66d758a30077cf351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70dbf93da9aba2214e551ac66d758a30077cf351"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b24ada5aba090c1b641353f94cba86730c99105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b24ada5aba090c1b641353f94cba86730c99105", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b24ada5aba090c1b641353f94cba86730c99105", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b24ada5aba090c1b641353f94cba86730c99105/comments", "author": null, "committer": null, "parents": [{"sha": "9fbecd1a76ba3508fac12e5795923d6ca9efe309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fbecd1a76ba3508fac12e5795923d6ca9efe309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fbecd1a76ba3508fac12e5795923d6ca9efe309"}], "stats": {"total": 706, "additions": 446, "deletions": 260}, "files": [{"sha": "96624d6a83514aa5af0b7d3bc1de16f90e9b9a5d", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -818,6 +818,7 @@ package body ALI is\n         No_Object                  => False,\n         Normalize_Scalars          => False,\n         Ofile_Full_Name            => Full_Object_File_Name,\n+        Optimize_Alignment_Setting => 'O',\n         Queuing_Policy             => ' ',\n         Restrictions               => No_Restrictions,\n         SAL_Interface              => False,\n@@ -1040,6 +1041,11 @@ package body ALI is\n                   Fatal_Error_Ignore;\n                end if;\n \n+            --  Processing for Ox\n+\n+            elsif C = 'O' then\n+               ALIs.Table (Id).Optimize_Alignment_Setting := Getc;\n+\n             --  Processing for Qx\n \n             elsif C = 'Q' then"}, {"sha": "90c8e0d50c94a99a2cfe809a2497853f797baf43", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 44, "deletions": 43, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -122,82 +122,83 @@ package ALI is\n       --  Id of last Sdep table entry for this file\n \n       Main_Program : Main_Program_Type;\n-      --  Indicator of whether first unit can be used as main program.\n-      --  Not set if 'M' appears in Ignore_Lines.\n+      --  Indicator of whether first unit can be used as main program. Not set\n+      --  if 'M' appears in Ignore_Lines.\n \n       Main_Priority : Int;\n-      --  Indicates priority value if Main_Program field indicates that\n-      --  this can be a main program. A value of -1 (No_Main_Priority)\n-      --  indicates that no parameter was found, or no M line was present.\n-      --  Not set if 'M' appears in Ignore_Lines.\n+      --  Indicates priority value if Main_Program field indicates that this\n+      --  can be a main program. A value of -1 (No_Main_Priority) indicates\n+      --  that no parameter was found, or no M line was present. Not set if\n+      --  'M' appears in Ignore_Lines.\n \n       Time_Slice_Value : Int;\n       --  Indicates value of time slice parameter from T=xxx on main program\n-      --  line. A value of -1 indicates that no T=xxx parameter was found,\n-      --  or no M line was present.\n-      --  Not set if 'M' appears in Ignore_Lines.\n+      --  line. A value of -1 indicates that no T=xxx parameter was found, or\n+      --  no M line was present. Not set if 'M' appears in Ignore_Lines.\n \n       WC_Encoding : Character;\n       --  Wide character encoding if main procedure. Otherwise not relevant.\n       --  Not set if 'M' appears in Ignore_Lines.\n \n       Locking_Policy : Character;\n-      --  Indicates locking policy for units in this file. Space means\n-      --  tasking was not used, or that no Locking_Policy pragma was\n-      --  present or that this is a language defined unit. Otherwise set\n-      --  to first character (upper case) of policy name.\n-      --  Not set if 'P' appears in Ignore_Lines.\n+      --  Indicates locking policy for units in this file. Space means tasking\n+      --  was not used, or that no Locking_Policy pragma was present or that\n+      --  this is a language defined unit. Otherwise set to first character\n+      --  (upper case) of policy name. Not set if 'P' appears in Ignore_Lines.\n \n       Queuing_Policy : Character;\n-      --  Indicates queuing policy for units in this file. Space means\n-      --  tasking was not used, or that no Queuing_Policy pragma was\n-      --  present or that this is a language defined unit. Otherwise set\n-      --  to first character (upper case) of policy name.\n-      --  Not set if 'P' appears in Ignore_Lines.\n+      --  Indicates queuing policy for units in this file. Space means tasking\n+      --  was not used, or that no Queuing_Policy pragma was present or that\n+      --  this is a language defined unit. Otherwise set to first character\n+      --  (upper case) of policy name. Not set if 'P' appears in Ignore_Lines.\n \n       Task_Dispatching_Policy : Character;\n-      --  Indicates task dispatching policy for units in this file. Space\n-      --  means tasking was not used, or that no Task_Dispatching_Policy\n-      --  pragma was present or that this is a language defined unit.\n-      --  Otherwise set to first character (upper case) of policy name.\n-      --  Not set if 'P' appears in Ignore_Lines.\n+      --  Indicates task dispatching policy for units in this file. Space means\n+      --  tasking was not used, or that no Task_Dispatching_Policy pragma was\n+      --  present or that this is a language defined unit. Otherwise set to\n+      --  first character (upper case) of policy name. Not set if 'P' appears\n+      --  in Ignore_Lines.\n \n       Compile_Errors : Boolean;\n-      --  Set to True if compile errors for unit. Note that No_Object\n-      --  will always be set as well in this case.\n-      --  Not set if 'P' appears in Ignore_Lines.\n+      --  Set to True if compile errors for unit. Note that No_Object will\n+      --  always be set as well in this case. Not set if 'P' appears in\n+      --  Ignore_Lines.\n \n       Float_Format : Character;\n-      --  Set to float format (set to I if no float-format given).\n-      --  Not set if 'P' appears in Ignore_Lines.\n+      --  Set to float format (set to I if no float-format given). Not set if\n+      --  'P' appears in Ignore_Lines.\n \n       No_Object : Boolean;\n-      --  Set to True if no object file generated.\n-      --  Not set if 'P' appears in Ignore_Lines.\n+      --  Set to True if no object file generated. Not set if 'P' appears in\n+      --  Ignore_Lines.\n \n       Normalize_Scalars : Boolean;\n-      --  Set to True if file was compiled with Normalize_Scalars.\n-      --  Not set if 'P' appears in Ignore_Lines.\n+      --  Set to True if file was compiled with Normalize_Scalars. Not set if\n+      --  'P' appears in Ignore_Lines.\n+\n+      Optimize_Alignment_Setting : Character;\n+      --  Optimize_Alignment setting. Set to S/T if OS/OT parameters present,\n+      --  otherwise set to 'O' (S/T/O = Space/Time/Off). Not set if 'P' appears\n+      --  in Ignore_Lines.\n \n       Unit_Exception_Table : Boolean;\n-      --  Set to True if unit exception table pointer generated.\n-      --  Not set if 'P' appears in Ignore_Lines.\n+      --  Set to True if unit exception table pointer generated. Not set if 'P'\n+      --  appears in Ignore_Lines.\n \n       Zero_Cost_Exceptions : Boolean;\n-      --  Set to True if file was compiled with zero cost exceptions.\n-      --  Not set if 'P' appears in Ignore_Lines.\n+      --  Set to True if file was compiled with zero cost exceptions. Not set\n+      --  if 'P' appears in Ignore_Lines.\n \n       Restrictions : Restrictions_Info;\n       --  Restrictions information reconstructed from R lines\n \n       First_Interrupt_State : Interrupt_State_Id;\n       Last_Interrupt_State  : Interrupt_State_Id'Base;\n-      --  These point to the first and last entries in the interrupt\n-      --  state table for this unit. If there are no entries, then\n-      --  Last_Interrupt_State = First_Interrupt_State - 1 (that's\n-      --  why the 'Base reference is there, it can be one less than\n-      --  the lower bound of the subtype).\n-      --  Not set if 'I' appears in Ignore_Lines\n+      --  These point to the first and last entries in the interrupt state\n+      --  table for this unit. If no entries, then Last_Interrupt_State =\n+      --  First_Interrupt_State - 1 (that's why the 'Base reference is there,\n+      --  it can be one less than the lower bound of the subtype). Not set if\n+      --  'I' appears in Ignore_Lines\n \n       First_Specific_Dispatching : Priority_Specific_Dispatching_Id;\n       Last_Specific_Dispatching  : Priority_Specific_Dispatching_Id'Base;"}, {"sha": "c397cc8dc925e39caa7c600b9525d8fed6bec99a", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 45, "deletions": 7, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -51,6 +51,7 @@ package body Bcheck is\n    procedure Check_Consistent_Interrupt_States;\n    procedure Check_Consistent_Locking_Policy;\n    procedure Check_Consistent_Normalize_Scalars;\n+   procedure Check_Consistent_Optimize_Alignment;\n    procedure Check_Consistent_Queuing_Policy;\n    procedure Check_Consistent_Restrictions;\n    procedure Check_Consistent_Zero_Cost_Exception_Handling;\n@@ -86,8 +87,8 @@ package body Bcheck is\n       end if;\n \n       Check_Consistent_Normalize_Scalars;\n+      Check_Consistent_Optimize_Alignment;\n       Check_Consistent_Dynamic_Elaboration_Checking;\n-\n       Check_Consistent_Restrictions;\n       Check_Consistent_Interrupt_States;\n       Check_Consistent_Dispatching_Policy;\n@@ -657,12 +658,11 @@ package body Bcheck is\n    --  then all other units in the partition must also be compiled with\n    --  Normalized_Scalars in effect.\n \n-   --  There is some issue as to whether this consistency check is\n-   --  desirable, it is certainly required at the moment by the RM.\n-   --  We should keep a watch on the ARG and HRG deliberations here.\n-   --  GNAT no longer depends on this consistency (it used to do so,\n-   --  but that has been corrected in the latest version, since the\n-   --  Initialize_Scalars pragma does not require consistency.\n+   --  There is some issue as to whether this consistency check is desirable,\n+   --  it is certainly required at the moment by the RM. We should keep a watch\n+   --  on the ARG and HRG deliberations here. GNAT no longer depends on this\n+   --  consistency (it used to do so, but that is no longer the case, since\n+   --  pragma Initialize_Scalars pragma does not require consistency.)\n \n    procedure Check_Consistent_Normalize_Scalars is\n    begin\n@@ -696,6 +696,44 @@ package body Bcheck is\n       end if;\n    end Check_Consistent_Normalize_Scalars;\n \n+   -----------------------------------------\n+   -- Check_Consistent_Optimize_Alignment --\n+   -----------------------------------------\n+\n+   --  The rule is that all units other than internal units must be compiled\n+   --  with the same setting for Optimize_Alignment. We can exclude internal\n+   --  units since they are forced to compile with Optimize_Alignment (Off).\n+\n+   procedure Check_Consistent_Optimize_Alignment is\n+      OA_Setting : Character := ' ';\n+      --  Reset when we find a non-internal unit\n+\n+      OA_Unit : ALI_Id;\n+      --  Id of unit from which OA_Setting was set\n+\n+   begin\n+      for A in ALIs.First .. ALIs.Last loop\n+         if not Is_Internal_File_Name (ALIs.Table (A).Afile) then\n+            if OA_Setting = ' ' then\n+               OA_Setting := ALIs.Table (A).Optimize_Alignment_Setting;\n+               OA_Unit := A;\n+\n+            elsif OA_Setting = ALIs.Table (A).Optimize_Alignment_Setting then\n+               null;\n+\n+            else\n+               Error_Msg_File_1 := ALIs.Table (OA_Unit).Sfile;\n+               Error_Msg_File_2 := ALIs.Table (A).Sfile;\n+\n+               Consistency_Error_Msg\n+                 (\"{ and { compiled with different \"\n+                  & \"Optimize_Alignment settings\");\n+               return;\n+            end if;\n+         end if;\n+      end loop;\n+   end Check_Consistent_Optimize_Alignment;\n+\n    -------------------------------------\n    -- Check_Consistent_Queuing_Policy --\n    -------------------------------------"}, {"sha": "48ff50bd7376dff86a6b194c36147fab2fadc643", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -93,7 +93,7 @@ package body Debug is\n    --  dY   Enable configurable run-time mode\n    --  dZ   Generate listing showing the contents of the dispatch tables\n \n-   --  d.a  Disable OpenVMS alignment optimization on types\n+   --  d.a\n    --  d.b\n    --  d.c\n    --  d.d\n@@ -110,11 +110,11 @@ package body Debug is\n    --  d.o\n    --  d.p\n    --  d.q\n-   --  d.r\n+   --  d.r  Enable OK_To_Reorder_Components in non-variant records\n    --  d.s  Disable expansion of slice move, use memmove\n    --  d.t  Disable static allocation of library level dispatch tables\n    --  d.u\n-   --  d.v\n+   --  d.v  Enable OK_To_Reorder_Components in variant records\n    --  d.w  Do not check for infinite while loops\n    --  d.x  No exception handlers\n    --  d.y\n@@ -138,8 +138,8 @@ package body Debug is\n    --  d.P\n    --  d.Q\n    --  d.R\n-   --  d.S\n-   --  d.T\n+   --  d.S  Force Optimize_Alignment (Space)\n+   --  d.T  Force Optimize_Alignment (Time)\n    --  d.U\n    --  d.V\n    --  d.W\n@@ -474,33 +474,32 @@ package body Debug is\n    --       line has an internally generated number used for references between\n    --       tagged types and primitives. For each primitive the output has the\n    --       following fields:\n+   --\n    --         - Letter 'P' or letter 's': The former indicates that this\n    --           primitive will be located in a primary dispatch table. The\n    --           latter indicates that it will be located in a secondary\n    --           dispatch table.\n+   --\n    --         - Name of the primitive. In case of predefined Ada primitives\n    --           the text \"(predefined)\" is added before the name, and these\n    --           acronyms are used: SR (Stream_Read), SW (Stream_Write), SI\n    --           (Stream_Input), SO (Stream_Output), DA (Deep_Adjust), DF\n    --           (Deep_Finalize). In addition Oeq identifies the equality\n    --           operator, and \"_assign\" the assignment.\n+   --\n    --         - If the primitive covers interface types, two extra fields\n    --           referencing other primitives are generated: \"Alias\" references\n    --           the primitive of the tagged type that covers an interface\n    --           primitive, and \"AI_Alias\" references the covered interface\n    --           primitive.\n+   --\n    --         - The expression \"at #xx\" indicates the slot of the dispatch\n    --           table occupied by such primitive in its corresponding primary\n    --           or secondary dispatch table.\n+   --\n    --         - In case of abstract subprograms the text \"is abstract\" is\n    --           added at the end of the line.\n \n-   --  d.a  Disable OpenVMS alignment optimization on types.  On OpenVMS,\n-   --       record types whose size is odd \"in between\" (e.g. 17 bits) are\n-   --       over-aligned to the next power of 2 (until 8 bytes).  This over\n-   --       alignment improve generated code and is more consistent with\n-   --       what Dec Ada does.\n-\n    --  d.f  Suppress folding of static expressions. This of course results\n    --       in seriously non-conforming behavior, but is useful sometimes\n    --       when tracking down handling of complex expressions.\n@@ -520,6 +519,9 @@ package body Debug is\n    --       main source (this corresponds to a previous behavior of -gnatl and\n    --       is used for running the ACATS tests).\n \n+   --  d.r  Forces the flag OK_To_Reorder_Components to be set in all record\n+   --       base types that have no discriminants.\n+\n    --  d.s  Normally the compiler expands slice moves into loops if overlap\n    --       might be possible. This debug flag inhibits that expansion, and\n    --       the back end is expected to use an appropriate routine to handle\n@@ -531,6 +533,9 @@ package body Debug is\n    --       previous dynamic construction of tables. It is there as a possible\n    --       work around if we run into trouble with the new implementation.\n \n+   --  d.v  Forces the flag OK_To_Reorder_Components to be set in all record\n+   --       base types that have at least one discriminant (v = variant).\n+\n    --  d.w  This flag turns off the scanning of while loops to detect possible\n    --       infinite loops.\n \n@@ -543,6 +548,10 @@ package body Debug is\n    --       byte code, even in case of unsupported construct, for the sake\n    --       of static analysis tools.\n \n+   --  d.S  Force Optimize_Alignment (Space) mode as the default\n+\n+   --  d.T  Force Optimize_Alignment (Time) mode as the default\n+\n    --  d1   Error messages have node numbers where possible. Normally error\n    --       messages have only source locations. This option is useful when\n    --       debugging errors caused by expanded code, where the source location"}, {"sha": "edd52f5b7f0a8689040d7a95b5b61517188d194d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 49, "deletions": 83, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -155,14 +155,8 @@ package body Freeze is\n    --  setting of Debug_Info_Needed for the entity. This flag is set if\n    --  the entity comes from source, or if we are in Debug_Generated_Code\n    --  mode or if the -gnatdV debug flag is set. However, it never sets\n-   --  the flag if Debug_Info_Off is set.\n-\n-   procedure Set_Debug_Info_Needed (T : Entity_Id);\n-   --  Sets the Debug_Info_Needed flag on entity T if not already set, and\n-   --  also on any entities that are needed by T (for an object, the type\n-   --  of the object is needed, and for a type, the subsidiary types are\n-   --  needed -- see body for details). Never has any effect on T if the\n-   --  Debug_Info_Off flag is set.\n+   --  the flag if Debug_Info_Off is set. This procedure also ensures that\n+   --  subsidiary entities have the flag set as required.\n \n    procedure Undelay_Type (T : Entity_Id);\n    --  T is a type of a component that we know to be an Itype.\n@@ -956,12 +950,13 @@ package body Freeze is\n \n    procedure Check_Debug_Info_Needed (T : Entity_Id) is\n    begin\n-      if Needs_Debug_Info (T) or else Debug_Info_Off (T) then\n+      if Debug_Info_Off (T) then\n          return;\n \n       elsif Comes_From_Source (T)\n         or else Debug_Generated_Code\n         or else Debug_Flag_VV\n+        or else Needs_Debug_Info (T)\n       then\n          Set_Debug_Info_Needed (T);\n       end if;\n@@ -1856,7 +1851,7 @@ package body Freeze is\n             then\n                declare\n                   Will_Be_Frozen : Boolean := False;\n-                  S : Entity_Id := Scope (Rec);\n+                  S              : Entity_Id;\n \n                begin\n                   --  We have a pretty bad kludge here. Suppose Rec is subtype\n@@ -1874,6 +1869,7 @@ package body Freeze is\n                   --  do, then mark that Comp'Base will actually be frozen. If\n                   --  so, we merely undelay it.\n \n+                  S := Scope (Rec);\n                   while Present (S) loop\n                      if Is_Subprogram (S) then\n                         Will_Be_Frozen := True;\n@@ -1994,14 +1990,31 @@ package body Freeze is\n             end if;\n          end if;\n \n+         --  Set OK_To_Reorder_Components depending on debug flags\n+\n+         if Rec = Base_Type (Rec)\n+           and then Convention (Rec) = Convention_Ada\n+         then\n+            if (Has_Discriminants (Rec) and then Debug_Flag_Dot_V)\n+                  or else\n+               (not Has_Discriminants (Rec) and then Debug_Flag_Dot_R)\n+            then\n+               Set_OK_To_Reorder_Components (Rec);\n+            end if;\n+         end if;\n+\n          --  Check for useless pragma Pack when all components placed. We only\n          --  do this check for record types, not subtypes, since a subtype may\n          --  have all its components placed, and it still makes perfectly good\n-         --  sense to pack other subtypes or the parent type.\n+         --  sense to pack other subtypes or the parent type. We do not give\n+         --  this warning if Optimize_Alignment is set to Space, since the\n+         --  pragma Pack does have an effect in this case (it always resets\n+         --  the alignment to one).\n \n          if Ekind (Rec) = E_Record_Type\n            and then Is_Packed (Rec)\n            and then not Unplaced_Component\n+           and then Optimize_Alignment /= 'S'\n          then\n             --  Reset packed status. Probably not necessary, but we do it so\n             --  that there is no chance of the back end doing something strange\n@@ -2093,16 +2106,19 @@ package body Freeze is\n \n          --  Generate warning for applying C or C++ convention to a record\n          --  with discriminants. This is suppressed for the unchecked union\n-         --  case, since the whole point in this case is interface C.\n+         --  case, since the whole point in this case is interface C. We also\n+         --  do not generate this within instantiations, since we will have\n+         --  generated a message on the template.\n \n          if Has_Discriminants (E)\n            and then not Is_Unchecked_Union (E)\n-           and then not Warnings_Off (E)\n-           and then not Warnings_Off (Base_Type (E))\n            and then (Convention (E) = Convention_C\n                        or else\n                      Convention (E) = Convention_CPP)\n            and then Comes_From_Source (E)\n+           and then not In_Instance\n+           and then not Has_Warnings_Off (E)\n+           and then not Has_Warnings_Off (Base_Type (E))\n          then\n             declare\n                Cprag : constant Node_Id := Get_Rep_Pragma (E, Name_Convention);\n@@ -2330,16 +2346,18 @@ package body Freeze is\n                      end if;\n \n                      --  Check suspicious parameter for C function. These tests\n-                     --  apply only to exported/imported suboprograms.\n+                     --  apply only to exported/imported subprograms.\n \n                      if Warn_On_Export_Import\n+                       and then Comes_From_Source (E)\n                        and then (Convention (E) = Convention_C\n                                    or else\n                                  Convention (E) = Convention_CPP)\n-                       and then not Warnings_Off (E)\n-                       and then not Warnings_Off (F_Type)\n-                       and then not Warnings_Off (Formal)\n                        and then (Is_Imported (E) or else Is_Exported (E))\n+                       and then Convention (E) /= Convention (Formal)\n+                       and then not Has_Warnings_Off (E)\n+                       and then not Has_Warnings_Off (F_Type)\n+                       and then not Has_Warnings_Off (Formal)\n                      then\n                         Error_Msg_Qual_Level := 1;\n \n@@ -2482,14 +2500,14 @@ package body Freeze is\n                        and then (Convention (E) = Convention_C\n                                    or else\n                                  Convention (E) = Convention_CPP)\n-                       and then not Warnings_Off (E)\n-                       and then not Warnings_Off (R_Type)\n                        and then (Is_Imported (E) or else Is_Exported (E))\n                      then\n                         --  Check suspicious return of fat C pointer\n \n                         if Is_Access_Type (R_Type)\n                           and then Esize (R_Type) > Ttypes.System_Address_Size\n+                          and then not Has_Warnings_Off (E)\n+                          and then not Has_Warnings_Off (R_Type)\n                         then\n                            Error_Msg_N\n                              (\"?return type of& does not \"\n@@ -2499,6 +2517,8 @@ package body Freeze is\n \n                         elsif Root_Type (R_Type) = Standard_Boolean\n                           and then Convention (R_Type) = Convention_Ada\n+                          and then not Has_Warnings_Off (E)\n+                          and then not Has_Warnings_Off (R_Type)\n                         then\n                            Error_Msg_N\n                              (\"?return type of & is an 8-bit \"\n@@ -2512,6 +2532,8 @@ package body Freeze is\n                                              Is_Tagged_Type\n                                                (Designated_Type (R_Type))))\n                           and then Convention (E) = Convention_C\n+                          and then not Has_Warnings_Off (E)\n+                          and then not Has_Warnings_Off (R_Type)\n                         then\n                            Error_Msg_N\n                              (\"?return type of & does not \"\n@@ -2521,6 +2543,8 @@ package body Freeze is\n \n                         elsif Ekind (R_Type) = E_Access_Subprogram_Type\n                           and then not Has_Foreign_Convention (R_Type)\n+                          and then not Has_Warnings_Off (E)\n+                          and then not Has_Warnings_Off (R_Type)\n                         then\n                            Error_Msg_N\n                              (\"?& should return a foreign \"\n@@ -2537,10 +2561,12 @@ package body Freeze is\n                        and then not Is_Imported (E)\n                        and then Has_Foreign_Convention (E)\n                        and then Warn_On_Export_Import\n+                       and then not Has_Warnings_Off (E)\n+                       and then not Has_Warnings_Off (Etype (E))\n                      then\n                         Error_Msg_N\n                           (\"?foreign convention function& should not \" &\n-                           \"return unconstrained array\", E);\n+                           \"return unconstrained array!\", E);\n \n                      --  Ada 2005 (AI-326): Check wrong use of tagged\n                      --  incomplete type\n@@ -5233,7 +5259,6 @@ package body Freeze is\n \n          Next_Formal (Formal);\n       end loop;\n-\n    end Process_Default_Expressions;\n \n    ----------------------------------------\n@@ -5266,65 +5291,6 @@ package body Freeze is\n       end if;\n    end Set_Component_Alignment_If_Not_Set;\n \n-   ---------------------------\n-   -- Set_Debug_Info_Needed --\n-   ---------------------------\n-\n-   procedure Set_Debug_Info_Needed (T : Entity_Id) is\n-   begin\n-      if No (T)\n-        or else Needs_Debug_Info (T)\n-        or else Debug_Info_Off (T)\n-      then\n-         return;\n-      else\n-         Set_Needs_Debug_Info (T);\n-      end if;\n-\n-      if Is_Object (T) then\n-         Set_Debug_Info_Needed (Etype (T));\n-\n-      elsif Is_Type (T) then\n-         Set_Debug_Info_Needed (Etype (T));\n-\n-         if Is_Record_Type (T) then\n-            declare\n-               Ent : Entity_Id := First_Entity (T);\n-            begin\n-               while Present (Ent) loop\n-                  Set_Debug_Info_Needed (Ent);\n-                  Next_Entity (Ent);\n-               end loop;\n-            end;\n-\n-         elsif Is_Array_Type (T) then\n-            Set_Debug_Info_Needed (Component_Type (T));\n-\n-            declare\n-               Indx : Node_Id := First_Index (T);\n-            begin\n-               while Present (Indx) loop\n-                  Set_Debug_Info_Needed (Etype (Indx));\n-                  Indx := Next_Index (Indx);\n-               end loop;\n-            end;\n-\n-            if Is_Packed (T) then\n-               Set_Debug_Info_Needed (Packed_Array_Type (T));\n-            end if;\n-\n-         elsif Is_Access_Type (T) then\n-            Set_Debug_Info_Needed (Directly_Designated_Type (T));\n-\n-         elsif Is_Private_Type (T) then\n-            Set_Debug_Info_Needed (Full_View (T));\n-\n-         elsif Is_Protected_Type (T) then\n-            Set_Debug_Info_Needed (Corresponding_Record_Type (T));\n-         end if;\n-      end if;\n-   end Set_Debug_Info_Needed;\n-\n    ------------------\n    -- Undelay_Type --\n    ------------------\n@@ -5439,7 +5405,7 @@ package body Freeze is\n \n          if Present (Decl)\n            and then Nkind (Decl) = N_Pragma\n-           and then Chars (Decl) = Name_Import\n+           and then Pragma_Name (Decl) = Name_Import\n          then\n             return;\n          end if;"}, {"sha": "6d01843fb221f75da7861bd1274a9639c91de179", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -59,8 +59,8 @@ with Tbuild;   use Tbuild;\n with Types;    use Types;\n \n procedure Frontend is\n-      Config_Pragmas : List_Id;\n-      --  Gather configuration pragmas\n+   Config_Pragmas : List_Id;\n+   --  Gather configuration pragmas\n \n begin\n    --  Carry out package initializations. These are initializations which\n@@ -78,6 +78,7 @@ begin\n    Sem_Ch8.Initialize;\n    Fname.UF.Initialize;\n    Checks.Initialize;\n+   Sem_Warn.Initialize;\n \n    --  Create package Standard\n \n@@ -207,6 +208,14 @@ begin\n       Fmap.Initialize (Mapping_File_Name.all);\n    end if;\n \n+   --  Adjust Optimize_Alignment mode from debug switches if necessary\n+\n+   if Debug_Flag_Dot_SS then\n+      Optimize_Alignment := 'S';\n+   elsif Debug_Flag_Dot_TT then\n+      Optimize_Alignment := 'T';\n+   end if;\n+\n    --  We have now processed the command line switches, and the gnat.adc\n    --  file, so this is the point at which we want to capture the values\n    --  of the configuration switches (see Opt for further details).\n@@ -326,6 +335,7 @@ begin\n          Sem_Warn.Output_Non_Modifed_In_Out_Warnings;\n          Sem_Warn.Output_Unreferenced_Messages;\n          Sem_Warn.Check_Unused_Withs;\n+         Sem_Warn.Output_Unused_Warnings_Off_Warnings;\n       end if;\n    end if;\n "}, {"sha": "d890012eabeabe1938f35e04c4d483758378f16f", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 92, "deletions": 45, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -2794,7 +2794,32 @@ package body Layout is\n       Align : Nat;\n \n    begin\n-      if Unknown_Alignment (E) then\n+      --  If alignment is already set, then nothing to do\n+\n+      if Known_Alignment (E) then\n+         return;\n+      end if;\n+\n+      --  Alignment is not known, see if we can set it, taking into account\n+      --  the setting of the Optimize_Alignment mode.\n+\n+      --  If Optimize_Alignment is set to Space, then packed records always\n+      --  have an aligmment of 1. But don't do anything for atomic records\n+      --  since we may need higher alignment for indivisible access.\n+\n+      if Optimize_Alignment = 'S'\n+        and then Is_Record_Type (E)\n+        and then Is_Packed (E)\n+        and then not Is_Atomic (E)\n+      then\n+         Align := 1;\n+\n+      --  Not a record, or not packed\n+\n+      else\n+         --  The only other cases we worry about here are where the size is\n+         --  staticallly known at compile time.\n+\n          if Known_Static_Esize (E) then\n             Siz := Esize (E);\n \n@@ -2809,8 +2834,8 @@ package body Layout is\n \n          --  Size is known, alignment is not set\n \n-         --  Reset alignment to match size if size is exactly 2, 4, or 8\n-         --  storage units.\n+         --  Reset alignment to match size if the known size is exactly 2, 4,\n+         --  or 8 storage units.\n \n          if Siz = 2 * System_Storage_Unit then\n             Align := 2;\n@@ -2819,54 +2844,75 @@ package body Layout is\n          elsif Siz = 8 * System_Storage_Unit then\n             Align := 8;\n \n-         --  On VMS, also reset for odd \"in between\" sizes, e.g. a 17-bit\n-         --  record is given an alignment of 4. This is more consistent with\n-         --  what DEC Ada does (-gnatd.a turns this off which can be used to\n-         --  examine the value of this special transformation).\n+            --  If Optimize_Alignment is set to Space, then make sure the\n+            --  alignment matches the size, for example, if the size is 17\n+            --  bytes then we want an alignment of 1 for the type.\n+\n+         elsif Optimize_Alignment = 'S' then\n+            if Siz mod (8 * System_Storage_Unit) = 0 then\n+               Align := 8;\n+            elsif Siz mod (4 * System_Storage_Unit) = 0 then\n+               Align := 4;\n+            elsif Siz mod (2 * System_Storage_Unit) = 0 then\n+               Align := 2;\n+            else\n+               Align := 1;\n+            end if;\n+\n+            --  If Optimize_Alignment is set to Time, then we reset for odd\n+            --  \"in between sizes\", for example a 17 bit record is given an\n+            --  alignment of 4. Note that this matches the old VMS behavior\n+            --  in versions of GNAT prior to 6.1.1.\n \n-         elsif OpenVMS_On_Target\n-           and then not Debug_Flag_Dot_A\n+         elsif Optimize_Alignment = 'T'\n            and then Siz > System_Storage_Unit\n+           and then Siz <= 8 * System_Storage_Unit\n          then\n             if Siz <= 2 * System_Storage_Unit then\n                Align := 2;\n             elsif Siz <= 4 * System_Storage_Unit then\n                Align := 4;\n-            elsif Siz <= 8 * System_Storage_Unit then\n+            else -- Siz <= 8 * System_Storage_Unit then\n                Align := 8;\n-            else\n-               return;\n             end if;\n \n-         --  No special alignment fiddling needed\n+            --  No special alignment fiddling needed\n \n          else\n             return;\n          end if;\n+      end if;\n \n-         --  Here Align is set to the proposed improved alignment\n+      --  Here we have Set Align to the proposed improved value. Make sure the\n+      --  value set does not exceed Maximum_Alignment for the target.\n \n-         if Align > Maximum_Alignment then\n-            Align := Maximum_Alignment;\n-         end if;\n+      if Align > Maximum_Alignment then\n+         Align := Maximum_Alignment;\n+      end if;\n \n-         --  Further processing for record types only to reduce the alignment\n-         --  set by the above processing in some specific cases. We do not\n-         --  do this for atomic records, since we need max alignment there.\n+      --  Further processing for record types only to reduce the alignment\n+      --  set by the above processing in some specific cases. We do not\n+      --  do this for atomic records, since we need max alignment there,\n \n-         if Is_Record_Type (E) then\n+      if Is_Record_Type (E) and then not Is_Atomic (E) then\n \n-            --  For records, there is generally no point in setting alignment\n-            --  higher than word size since we cannot do better than move by\n-            --  words in any case\n+         --  For records, there is generally no point in setting alignment\n+         --  higher than word size since we cannot do better than move by\n+         --  words in any case. Omit this if we are optimizing for time,\n+         --  since conceivably we may be able to do better.\n \n-            if Align > System_Word_Size / System_Storage_Unit then\n-               Align := System_Word_Size / System_Storage_Unit;\n-            end if;\n+         if Align > System_Word_Size / System_Storage_Unit\n+           and then Optimize_Alignment /= 'T'\n+         then\n+            Align := System_Word_Size / System_Storage_Unit;\n+         end if;\n \n-            --  Check components. If any component requires a higher\n-            --  alignment, then we set that higher alignment in any case.\n+         --  Check components. If any component requires a higher alignment,\n+         --  then we set that higher alignment in any case. Don't do this if\n+         --  we have Optimize_Alignment set to Space. Note that that covers\n+         --  the case of packed records, where we arleady set alignment to 1.\n \n+         if Optimize_Alignment  /= 'S' then\n             declare\n                Comp : Entity_Id;\n \n@@ -2878,19 +2924,19 @@ package body Layout is\n                         Calign : constant Uint := Alignment (Etype (Comp));\n \n                      begin\n-                        --  The cases to worry about are when the alignment\n-                        --  of the component type is larger than the alignment\n-                        --  we have so far, and either there is no component\n-                        --  clause for the alignment, or the length set by\n-                        --  the component clause matches the alignment set.\n+                        --  The cases to process are when the alignment of the\n+                        --  component type is larger than the alignment we have\n+                        --  so far, and either there is no component clause for\n+                        --  the component, or the length set by the component\n+                        --  clause matches the length of the component type.\n \n                         if Calign > Align\n                           and then\n                             (Unknown_Esize (Comp)\n-                               or else (Known_Static_Esize (Comp)\n-                                          and then\n-                                        Esize (Comp) =\n-                                           Calign * System_Storage_Unit))\n+                              or else (Known_Static_Esize (Comp)\n+                                        and then\n+                                         Esize (Comp) =\n+                                              Calign * System_Storage_Unit))\n                         then\n                            Align := UI_To_Int (Calign);\n                         end if;\n@@ -2901,16 +2947,17 @@ package body Layout is\n                end loop;\n             end;\n          end if;\n+      end if;\n \n-         --  Set chosen alignment\n+      --  Set chosen alignment, and increase Esize if necessary to match\n+      --  the chosen alignment.\n \n-         Set_Alignment (E, UI_From_Int (Align));\n+      Set_Alignment (E, UI_From_Int (Align));\n \n-         if Known_Static_Esize (E)\n-           and then Esize (E) < Align * System_Storage_Unit\n-         then\n-            Set_Esize (E, UI_From_Int (Align * System_Storage_Unit));\n-         end if;\n+      if Known_Static_Esize (E)\n+        and then Esize (E) < Align * System_Storage_Unit\n+      then\n+         Set_Esize (E, UI_From_Int (Align * System_Storage_Unit));\n       end if;\n    end Set_Composite_Alignment;\n "}, {"sha": "bbc29ef3cd1e11b5a60cb5d098f89b7b5ff870c9", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -971,6 +971,11 @@ package body Lib.Writ is\n          Write_Info_Str (\" NS\");\n       end if;\n \n+      if Optimize_Alignment /= 'O' then\n+         Write_Info_Str (\" O\");\n+         Write_Info_Char (Optimize_Alignment);\n+      end if;\n+\n       if Sec_Stack_Used then\n          Write_Info_Str (\" SS\");\n       end if;"}, {"sha": "ba46bf11831e5ac9c7ebac5b1b7e141a75cdd2b3", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -209,7 +209,11 @@ package Lib.Writ is\n    --              to all units in the file.\n    --\n    --         NS   Normalize_Scalars pragma in effect for all units in\n-   --              this file\n+   --              this file.\n+   --\n+   --         OS   Optimize_Alignment (Space) active for all units in this file\n+   --\n+   --         OT   Optimize_Alignment (Time) active for all units in this file\n    --\n    --         Qx   A valid Queueing_Policy pragma applies to all the units\n    --              in this file, where x is the first character (upper case)\n@@ -498,15 +502,15 @@ package Lib.Writ is\n    --    W unit-name [source-name lib-name] [E] [EA] [ED] [AD]\n    --\n    --      One of these lines is present for each unit that is mentioned in\n-   --      an explicit with clause by the current unit. The first parameter\n-   --      is the unit name in internal format. The second parameter is the\n-   --      file name of the file that must be compiled to compile this unit.\n-   --      It is usually the file for the body, except for packages\n-   --      which have no body; for units that need a body, if the source file\n-   --      for the body cannot be found, the file name of the spec is used\n-   --      instead. The third parameter is the file name of the library\n-   --      information file that contains the results of compiling this unit.\n-   --      The optional modifiers are used as follows:\n+   --      an explicit with clause by the current unit. The first parameter is\n+   --      the unit name in internal format. The second parameter is the file\n+   --      name of the file that must be compiled to compile this unit. It is\n+   --      usually the file for the body, except for packages which have no\n+   --      body. For units that need a body, if the source file for the body\n+   --      cannot be found, the file name of the spec is used instead. The\n+   --      third parameter is the file name of the library information file\n+   --      that contains the results of compiling this unit. The optional\n+   --      modifiers are used as follows:\n    --\n    --        E   pragma Elaborate applies to this unit\n    --\n@@ -528,6 +532,8 @@ package Lib.Writ is\n    --      of a generic unit compiled with earlier versions of GNAT which\n    --      did not generate object or ali files for generics.\n \n+   --  In fact W lines include implicit withs ???\n+\n    --  -----------------------\n    --  -- L  Linker_Options --\n    --  -----------------------"}, {"sha": "64460f60ff6cd8fe894c30078813340e92f5b467", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -56,6 +56,7 @@ package body Opt is\n       External_Name_Exp_Casing_Config       := External_Name_Exp_Casing;\n       External_Name_Imp_Casing_Config       := External_Name_Imp_Casing;\n       Fast_Math_Config                      := Fast_Math;\n+      Optimize_Alignment_Config             := Optimize_Alignment;\n       Persistent_BSS_Mode_Config            := Persistent_BSS_Mode;\n       Polling_Required_Config               := Polling_Required;\n       Use_VADS_Size_Config                  := Use_VADS_Size;\n@@ -77,6 +78,7 @@ package body Opt is\n       External_Name_Exp_Casing       := Save.External_Name_Exp_Casing;\n       External_Name_Imp_Casing       := Save.External_Name_Imp_Casing;\n       Fast_Math                      := Save.Fast_Math;\n+      Optimize_Alignment             := Save.Optimize_Alignment;\n       Persistent_BSS_Mode            := Save.Persistent_BSS_Mode;\n       Polling_Required               := Save.Polling_Required;\n       Use_VADS_Size                  := Save.Use_VADS_Size;\n@@ -98,6 +100,7 @@ package body Opt is\n       Save.External_Name_Exp_Casing       := External_Name_Exp_Casing;\n       Save.External_Name_Imp_Casing       := External_Name_Imp_Casing;\n       Save.Fast_Math                      := Fast_Math;\n+      Save.Optimize_Alignment             := Optimize_Alignment;\n       Save.Persistent_BSS_Mode            := Persistent_BSS_Mode;\n       Save.Polling_Required               := Polling_Required;\n       Save.Use_VADS_Size                  := Use_VADS_Size;\n@@ -125,6 +128,7 @@ package body Opt is\n          Extensions_Allowed         := True;\n          External_Name_Exp_Casing   := As_Is;\n          External_Name_Imp_Casing   := Lowercase;\n+         Optimize_Alignment         := 'O';\n          Persistent_BSS_Mode        := False;\n          Use_VADS_Size              := False;\n \n@@ -151,12 +155,14 @@ package body Opt is\n          External_Name_Exp_Casing   := External_Name_Exp_Casing_Config;\n          External_Name_Imp_Casing   := External_Name_Imp_Casing_Config;\n          Fast_Math                  := Fast_Math_Config;\n+         Optimize_Alignment         := Optimize_Alignment_Config;\n          Persistent_BSS_Mode        := Persistent_BSS_Mode_Config;\n          Use_VADS_Size              := Use_VADS_Size_Config;\n       end if;\n \n       Exception_Locations_Suppressed := Exception_Locations_Suppressed_Config;\n       Fast_Math                      := Fast_Math_Config;\n+      Optimize_Alignment             := Optimize_Alignment_Config;\n       Polling_Required               := Polling_Required_Config;\n    end Set_Opt_Config_Switches;\n "}, {"sha": "b795a3c240e478bf5465e1ee98cb0161d6d78913", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -858,6 +858,10 @@ package Opt is\n    --  error is detected then this flag is reset from Generate_Code to\n    --  Check_Semantics after generating an error message.\n \n+   Optimize_Alignment : Character := 'O';\n+   --  Settinng of Optimize_Alignment, set to T/S/O for time/space/off. Can\n+   --  be modified by use of pragma Optimize_Alignment.\n+\n    Original_Operating_Mode : Operating_Mode_Type := Generate_Code;\n    --  GNAT\n    --  Indicates the original operating mode of the compiler as set by\n@@ -1298,6 +1302,12 @@ package Opt is\n    --  which have a record representation clause but this component does not\n    --  have a component clause. The default is that this warning is disabled.\n \n+   Warn_On_Warnings_Off : Boolean := False;\n+   --  GNAT\n+   --  Set to True to generate warnings for use of Pragma Warnings (Off, ent),\n+   --  where either the pragma is never used, or it could be replaced by a\n+   --  pragma Unmodified or Unreferenced.\n+\n    type Warning_Mode_Type is (Suppress, Normal, Treat_As_Error);\n    Warning_Mode : Warning_Mode_Type := Normal;\n    --  GNAT, GNATBIND\n@@ -1338,8 +1348,8 @@ package Opt is\n \n    --  These are settings that are used to establish the mode at the start of\n    --  each unit. The values defined below can be affected either by command\n-   --  line switches, or by the use of appropriate configuration pragmas in the\n-   --  gnat.adc file.\n+   --  line switches, or by the use of appropriate configuration pragmas in a\n+   --  configuration pragma file.\n \n    Ada_Version_Config : Ada_Version_Type;\n    --  GNAT\n@@ -1416,6 +1426,14 @@ package Opt is\n    --  used to set the initial value of Fast_Math at the start of each new\n    --  compilation unit.\n \n+   Optimize_Alignment_Config : Character;\n+   --  GNAT\n+   --  This is the value of the configuration switch that controls the\n+   --  alignment optimization mode, as set by an Optimize_Alignment pragma.\n+   --  It is used to set the initial value of Optimize_Alignment at the start\n+   --  of each new compilation unit, except that it is always set to 'O' (off)\n+   --  for internal units.\n+\n    Persistent_BSS_Mode_Config : Boolean;\n    --  GNAT\n    --  This is the value of the configuration switch that controls whether\n@@ -1553,6 +1571,7 @@ private\n       External_Name_Exp_Casing       : External_Casing_Type;\n       External_Name_Imp_Casing       : External_Casing_Type;\n       Fast_Math                      : Boolean;\n+      Optimize_Alignment             : Character;\n       Persistent_BSS_Mode            : Boolean;\n       Polling_Required               : Boolean;\n       Use_VADS_Size                  : Boolean;"}, {"sha": "973968df199487832217e1475c4be2bffc010a8a", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,8 +43,8 @@ with System.WCh_Con; use System.WCh_Con;\n separate (Par)\n \n function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n-   Pragma_Name : constant Name_Id    := Chars (Pragma_Node);\n-   Prag_Id     : constant Pragma_Id  := Get_Pragma_Id (Pragma_Name);\n+   Prag_Name   : constant Name_Id    := Pragma_Name (Pragma_Node);\n+   Prag_Id     : constant Pragma_Id  := Get_Pragma_Id (Prag_Name);\n    Pragma_Sloc : constant Source_Ptr := Sloc (Pragma_Node);\n    Arg_Count   : Nat;\n    Arg_Node    : Node_Id;\n@@ -241,10 +241,10 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n       end loop;\n    end Process_Restrictions_Or_Restriction_Warnings;\n \n---  Start if processing for Prag\n+--  Start of processing for Prag\n \n begin\n-   Error_Msg_Name_1 := Pragma_Name;\n+   Error_Msg_Name_1 := Prag_Name;\n \n    --  Ignore unrecognized pragma. We let Sem post the warning for this, since\n    --  it is a semantic error, not a syntactic one (we have already checked\n@@ -626,7 +626,7 @@ begin\n          --  Source_File_Name_Project pragmas.\n \n          begin\n-            if Get_Pragma_Id (Pragma_Name) = Pragma_Source_File_Name then\n+            if Prag_Id = Pragma_Source_File_Name then\n                if Project_File_In_Use = In_Use then\n                   Error_Msg\n                     (\"pragma Source_File_Name cannot be used \" &\n@@ -1135,6 +1135,7 @@ begin\n            Pragma_No_Strict_Aliasing            |\n            Pragma_Normalize_Scalars             |\n            Pragma_Optimize                      |\n+           Pragma_Optimize_Alignment            |\n            Pragma_Pack                          |\n            Pragma_Passive                       |\n            Pragma_Preelaborable_Initialization  |"}, {"sha": "251805ddf8eff4e19106c06baca00477410d6f8b", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 120, "deletions": 48, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b24ada5aba090c1b641353f94cba86730c99105/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=1b24ada5aba090c1b641353f94cba86730c99105", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,6 +75,7 @@ with Targparm; use Targparm;\n with Tbuild;   use Tbuild;\n with Ttypes;\n with Uintp;    use Uintp;\n+with Uname;    use Uname;\n with Urealp;   use Urealp;\n with Validsw;  use Validsw;\n \n@@ -235,6 +236,7 @@ package body Sem_Prag is\n \n    procedure Analyze_Pragma (N : Node_Id) is\n       Loc     : constant Source_Ptr := Sloc (N);\n+      Pname   : constant Name_Id    := Pragma_Name (N);\n       Prag_Id : Pragma_Id;\n \n       Pragma_Exit : exception;\n@@ -502,7 +504,7 @@ package body Sem_Prag is\n \n       function Is_Configuration_Pragma return Boolean;\n       --  Deterermines if the placement of the current pragma is appropriate\n-      --  for a configuration pragma (precedes the current compilation unit).\n+      --  for a configuration pragma.\n \n       function Is_In_Context_Clause return Boolean;\n       --  Returns True if pragma appears within the context clause of a unit,\n@@ -715,7 +717,7 @@ package body Sem_Prag is\n             --  Here we have a real error (non-static expression)\n \n             else\n-               Error_Msg_Name_1 := Chars (N);\n+               Error_Msg_Name_1 := Pname;\n                Flag_Non_Static_Expr\n                  (\"argument for pragma% must be a identifier or \" &\n                   \"static string expression!\", Argx);\n@@ -909,7 +911,7 @@ package body Sem_Prag is\n          --  Finally, we have a real error\n \n          else\n-            Error_Msg_Name_1 := Chars (N);\n+            Error_Msg_Name_1 := Pname;\n             Flag_Non_Static_Expr\n               (\"argument for pragma% must be a static expression!\", Argx);\n             raise Pragma_Exit;\n@@ -962,7 +964,7 @@ package body Sem_Prag is\n                for K in Names'Range loop\n                   if Chars (Arg) = Names (K) then\n                      if K < Highest_So_Far then\n-                        Error_Msg_Name_1 := Chars (N);\n+                        Error_Msg_Name_1 := Pname;\n                         Error_Msg_N\n                           (\"parameters out of order for pragma%\", Arg);\n                         Error_Msg_Name_1 := Names (K);\n@@ -1112,7 +1114,7 @@ package body Sem_Prag is\n          elsif Present (Parameter_Specifications (Specification (P)))\n            or else not Is_Compilation_Unit (Defining_Entity (P))\n          then\n-            Error_Msg_Name_1 := Chars (N);\n+            Error_Msg_Name_1 := Pname;\n             Error_Msg_N\n               (\"?pragma% is only effective in main program\", N);\n          end if;\n@@ -1239,7 +1241,7 @@ package body Sem_Prag is\n       begin\n          if Present (Arg) and then Chars (Arg) /= No_Name then\n             if Chars (Arg) /= Id then\n-               Error_Msg_Name_1 := Chars (N);\n+               Error_Msg_Name_1 := Pname;\n                Error_Msg_Name_2 := Id;\n                Error_Msg_N (\"pragma% argument expects identifier%\", Arg);\n                raise Pragma_Exit;\n@@ -1319,9 +1321,9 @@ package body Sem_Prag is\n       -- Check_Valid_Configuration_Pragma --\n       --------------------------------------\n \n-      --  A configuration pragma must appear in the context clause of\n-      --  a compilation unit, at the start of the list (i.e. only other\n-      --  pragmas may precede it).\n+      --  A configuration pragma must appear in the context clause of a\n+      --  compilation unit, and only other pragmas may preceed it. Note that\n+      --  the test also allows use in a configuration pragma file.\n \n       procedure Check_Valid_Configuration_Pragma is\n       begin\n@@ -1500,7 +1502,7 @@ package body Sem_Prag is\n \n       procedure Error_Pragma (Msg : String) is\n       begin\n-         Error_Msg_Name_1 := Chars (N);\n+         Error_Msg_Name_1 := Pname;\n          Error_Msg_N (Msg, N);\n          raise Pragma_Exit;\n       end Error_Pragma;\n@@ -1511,14 +1513,14 @@ package body Sem_Prag is\n \n       procedure Error_Pragma_Arg (Msg : String; Arg : Node_Id) is\n       begin\n-         Error_Msg_Name_1 := Chars (N);\n+         Error_Msg_Name_1 := Pname;\n          Error_Msg_N (Msg, Get_Pragma_Arg (Arg));\n          raise Pragma_Exit;\n       end Error_Pragma_Arg;\n \n       procedure Error_Pragma_Arg (Msg1, Msg2 : String; Arg : Node_Id) is\n       begin\n-         Error_Msg_Name_1 := Chars (N);\n+         Error_Msg_Name_1 := Pname;\n          Error_Msg_N (Msg1, Get_Pragma_Arg (Arg));\n          Error_Pragma_Arg (Msg2, Arg);\n       end Error_Pragma_Arg;\n@@ -1529,7 +1531,7 @@ package body Sem_Prag is\n \n       procedure Error_Pragma_Arg_Ident (Msg : String; Arg : Node_Id) is\n       begin\n-         Error_Msg_Name_1 := Chars (N);\n+         Error_Msg_Name_1 := Pname;\n          Error_Msg_N (Msg, Arg);\n          raise Pragma_Exit;\n       end Error_Pragma_Arg_Ident;\n@@ -1717,7 +1719,7 @@ package body Sem_Prag is\n                   end if;\n \n                   if Index = Names'Last then\n-                     Error_Msg_Name_1 := Chars (N);\n+                     Error_Msg_Name_1 := Pname;\n                      Error_Msg_N (\"pragma% does not allow & argument\", Arg);\n \n                      --  Check for possible misspelling\n@@ -1792,9 +1794,9 @@ package body Sem_Prag is\n       -- Is_Configuration_Pragma --\n       -----------------------------\n \n-      --  A configuration pragma must appear in the context clause of\n-      --  a compilation unit, at the start of the list (i.e. only other\n-      --  pragmas may precede it).\n+      --  A configuration pragma must appear in the context clause of a\n+      --  compilation unit, and only other pragmas may precede it. Note that\n+      --  the test below also permits use in a configuration pragma file.\n \n       function Is_Configuration_Pragma return Boolean is\n          Lis : constant List_Id := List_Containing (N);\n@@ -2029,15 +2031,27 @@ package body Sem_Prag is\n                   Ptr   : Nat;\n                   CC    : Char_Code;\n                   C     : Character;\n+                  Cent  : constant Entity_Id :=\n+                            Cunit_Entity (Current_Sem_Unit);\n+\n+                  Force : constant Boolean :=\n+                            Prag_Id = Pragma_Compile_Time_Warning\n+                              and then\n+                                Is_Spec_Name (Unit_Name (Current_Sem_Unit))\n+                              and then (Ekind (Cent) /= E_Package\n+                                          or else not In_Private_Part (Cent));\n+                  --  Set True if this is the warning case, and we are in the\n+                  --  visible part of a package spec, or in a subprogram spec,\n+                  --  in which case we want to force the client to see the\n+                  --  warning, even though it is not in the main unit.\n \n                begin\n-                  Cont := False;\n-                  Ptr := 1;\n-\n                   --  Loop through segments of message separated by line\n                   --  feeds. We output these segments as separate messages\n                   --  with continuation marks for all but the first.\n \n+                  Cont := False;\n+                  Ptr := 1;\n                   loop\n                      Error_Msg_Strlen := 0;\n \n@@ -2063,11 +2077,33 @@ package body Sem_Prag is\n \n                      Error_Msg_Warn := Prag_Id = Pragma_Compile_Time_Warning;\n \n-                     if Cont = False then\n-                        Error_Msg_N (\"<~\", Arg1);\n-                        Cont := True;\n+                     --  If this is a warning in a spec, then we want clients\n+                     --  to see the warning, so mark the message with the\n+                     --  special sequence !! to force the warning. In the case\n+                     --  of a package spec, we do not force this if we are in\n+                     --  the private part of the spec.\n+\n+                     if Force then\n+                        if Cont = False then\n+                           Error_Msg_N (\"<~!!\", Arg1);\n+                           Cont := True;\n+                        else\n+                           Error_Msg_N (\"\\<~!!\", Arg1);\n+                        end if;\n+\n+                     --  Error, rather than warning, or in a body, so we do not\n+                     --  need to force visibility for client (error will be\n+                     --  output in any case, and this is the situation in which\n+                     --  we do not want a client to get a warning, since the\n+                     --  warning is in the body or the spec private part.\n+\n                      else\n-                        Error_Msg_N (\"\\<~\", Arg1);\n+                        if Cont = False then\n+                           Error_Msg_N (\"<~\", Arg1);\n+                           Cont := True;\n+                        else\n+                           Error_Msg_N (\"\\<~\", Arg1);\n+                        end if;\n                      end if;\n \n                      exit when Ptr > Len;\n@@ -2253,7 +2289,7 @@ package body Sem_Prag is\n               or else\n             Ekind (E) = E_Named_Real\n          then\n-            Error_Msg_Name_1 := Chars (N);\n+            Error_Msg_Name_1 := Pname;\n             Error_Msg_N\n               (\"cannot apply pragma% to named constant!\",\n                Get_Pragma_Arg (Arg2));\n@@ -2713,8 +2749,9 @@ package body Sem_Prag is\n \n                elsif Etype (Def_Id) /= Standard_Void_Type\n                  and then\n-                   (Chars (N) = Name_Export_Procedure\n-                      or else Chars (N) = Name_Import_Procedure)\n+                   (Pname = Name_Export_Procedure\n+                      or else\n+                    Pname = Name_Import_Procedure)\n                then\n                   Match := False;\n \n@@ -2792,7 +2829,7 @@ package body Sem_Prag is\n                   else\n                      if not Ambiguous then\n                         Ambiguous := True;\n-                        Error_Msg_Name_1 := Chars (N);\n+                        Error_Msg_Name_1 := Pname;\n                         Error_Msg_N\n                           (\"pragma% does not uniquely identify subprogram!\",\n                            N);\n@@ -4289,7 +4326,7 @@ package body Sem_Prag is\n                Error_Msg_NE (\"entity& was previously imported\", N, E);\n             end if;\n \n-            Error_Msg_Name_1 := Chars (N);\n+            Error_Msg_Name_1 := Pname;\n             Error_Msg_N\n               (\"\\(pragma% applies to all previous entities)\", N);\n \n@@ -4525,13 +4562,13 @@ package body Sem_Prag is\n    begin\n       --  Deal with unrecognized pragma\n \n-      if not Is_Pragma_Name (Chars (N)) then\n+      if not Is_Pragma_Name (Pname) then\n          if Warn_On_Unrecognized_Pragma then\n-            Error_Msg_Name_1 := Chars (N);\n+            Error_Msg_Name_1 := Pname;\n             Error_Msg_N (\"?unrecognized pragma%!\", Pragma_Identifier (N));\n \n             for PN in First_Pragma_Name .. Last_Pragma_Name loop\n-               if Is_Bad_Spelling_Of (Chars (N), PN) then\n+               if Is_Bad_Spelling_Of (Pname, PN) then\n                   Error_Msg_Name_1 := PN;\n                   Error_Msg_N\n                     (\"\\?possible misspelling of %!\", Pragma_Identifier (N));\n@@ -4545,7 +4582,7 @@ package body Sem_Prag is\n \n       --  Here to start processing for recognized pragma\n \n-      Prag_Id := Get_Pragma_Id (Chars (N));\n+      Prag_Id := Get_Pragma_Id (Pname);\n \n       --  Preset arguments\n \n@@ -6647,7 +6684,7 @@ package body Sem_Prag is\n             --  If it's an access-to-subprogram type (in particular, not a\n             --  subtype), set the flag on that type.\n \n-            if Ekind (Named_Entity) in Access_Subprogram_Type_Kind then\n+            if Is_Access_Subprogram_Type (Named_Entity) then\n                Set_Can_Use_Internal_Rep (Named_Entity, False);\n \n             --  Otherwise it's an error (name denotes the wrong sort of entity)\n@@ -7419,7 +7456,8 @@ package body Sem_Prag is\n                   if Is_Imported (Def_Id)\n                     and then Present (First_Rep_Item (Def_Id))\n                     and then Nkind (First_Rep_Item (Def_Id)) = N_Pragma\n-                    and then Chars (First_Rep_Item (Def_Id)) = Name_Interface\n+                    and then\n+                      Pragma_Name (First_Rep_Item (Def_Id)) = Name_Interface\n                   then\n                      null;\n                   else\n@@ -8251,9 +8289,9 @@ package body Sem_Prag is\n             Nod := Next (N);\n             while Present (Nod) loop\n                if Nkind (Nod) = N_Pragma\n-                 and then Chars (Nod) = Name_Main\n+                 and then Pragma_Name (Nod) = Name_Main\n                then\n-                  Error_Msg_Name_1 := Chars (N);\n+                  Error_Msg_Name_1 := Pname;\n                   Error_Msg_N (\"duplicate pragma% not permitted\", Nod);\n                end if;\n \n@@ -8295,9 +8333,9 @@ package body Sem_Prag is\n             Nod := Next (N);\n             while Present (Nod) loop\n                if Nkind (Nod) = N_Pragma\n-                 and then Chars (Nod) = Name_Main_Storage\n+                 and then Pragma_Name (Nod) = Name_Main_Storage\n                then\n-                  Error_Msg_Name_1 := Chars (N);\n+                  Error_Msg_Name_1 := Pname;\n                   Error_Msg_N (\"duplicate pragma% not permitted\", Nod);\n                end if;\n \n@@ -8684,7 +8722,7 @@ package body Sem_Prag is\n          -- Optimize --\n          --------------\n \n-         --  pragma Optimize (Time | Space);\n+         --  pragma Optimize (Time | Space | Off);\n \n          --  The actual check for optimize is done in Gigi. Note that this\n          --  pragma does not actually change the optimization setting, it\n@@ -8695,6 +8733,33 @@ package body Sem_Prag is\n             Check_Arg_Count (1);\n             Check_Arg_Is_One_Of (Arg1, Name_Time, Name_Space, Name_Off);\n \n+         ------------------------\n+         -- Optimize_Alignment --\n+         ------------------------\n+\n+         --  pragma Optimize_Alignment (Time | Space | Off);\n+\n+         when Pragma_Optimize_Alignment =>\n+            GNAT_Pragma;\n+            Check_No_Identifiers;\n+            Check_Arg_Count (1);\n+            Check_Valid_Configuration_Pragma;\n+\n+            declare\n+               Nam : constant Name_Id := Chars (Get_Pragma_Arg (Arg1));\n+            begin\n+               case Nam is\n+                  when Name_Time =>\n+                     Opt.Optimize_Alignment := 'T';\n+                  when Name_Space =>\n+                     Opt.Optimize_Alignment := 'S';\n+                  when Name_Off =>\n+                     Opt.Optimize_Alignment := 'O';\n+                  when others =>\n+                     Error_Pragma_Arg (\"invalid argument for pragma%\", Arg1);\n+               end case;\n+            end;\n+\n          ----------\n          -- Pack --\n          ----------\n@@ -10508,9 +10573,9 @@ package body Sem_Prag is\n                Nod := Next (N);\n                while Present (Nod) loop\n                   if Nkind (Nod) = N_Pragma\n-                    and then Chars (Nod) = Name_Time_Slice\n+                    and then Pragma_Name (Nod) = Name_Time_Slice\n                   then\n-                     Error_Msg_Name_1 := Chars (N);\n+                     Error_Msg_Name_1 := Pname;\n                      Error_Msg_N (\"duplicate pragma% not permitted\", Nod);\n                   end if;\n \n@@ -11165,6 +11230,12 @@ package body Sem_Prag is\n                               Set_Warnings_Off\n                                 (E, (Chars (Expression (Arg1)) = Name_Off));\n \n+                              if Chars (Expression (Arg1)) = Name_Off\n+                                and then Warn_On_Warnings_Off\n+                              then\n+                                 Warnings_Off_Pragmas.Append ((N, E));\n+                              end if;\n+\n                               if Is_Enumeration_Type (E) then\n                                  declare\n                                     Lit : Entity_Id;\n@@ -11296,9 +11367,9 @@ package body Sem_Prag is\n \n    function Delay_Config_Pragma_Analyze (N : Node_Id) return Boolean is\n    begin\n-      return Chars (N) = Name_Interrupt_State\n+      return Pragma_Name (N) = Name_Interrupt_State\n                or else\n-             Chars (N) = Name_Priority_Specific_Dispatching;\n+             Pragma_Name (N) = Name_Priority_Specific_Dispatching;\n    end Delay_Config_Pragma_Analyze;\n \n    -------------------------\n@@ -11496,6 +11567,7 @@ package body Sem_Prag is\n       Pragma_Normalize_Scalars             => -1,\n       Pragma_Obsolescent                   =>  0,\n       Pragma_Optimize                      => -1,\n+      Pragma_Optimize_Alignment            => -1,\n       Pragma_Pack                          =>  0,\n       Pragma_Page                          => -1,\n       Pragma_Passive                       => -1,\n@@ -11575,7 +11647,7 @@ package body Sem_Prag is\n          return False;\n \n       else\n-         C := Sig_Flags (Get_Pragma_Id (Chars (Parent (P))));\n+         C := Sig_Flags (Get_Pragma_Id (Parent (P)));\n \n          case C is\n             when -1 =>\n@@ -11612,7 +11684,7 @@ package body Sem_Prag is\n    function Is_Pragma_String_Literal (Par : Node_Id) return Boolean is\n       Pragn : constant Node_Id := Parent (Par);\n       Assoc : constant List_Id := Pragma_Argument_Associations (Pragn);\n-      Pname : constant Name_Id := Chars (Pragn);\n+      Pname : constant Name_Id := Pragma_Name (Pragn);\n       Argn  : Natural;\n       N     : Node_Id;\n \n@@ -11686,7 +11758,7 @@ package body Sem_Prag is\n          if Present (PA) then\n             P := First (PA);\n             while Present (P) loop\n-               if Chars (P) = Name_Suppress_All then\n+               if Pragma_Name (P) = Name_Suppress_All then\n                   Prepend_To (Context_Items (N),\n                     Make_Pragma (Sloc (P),\n                       Chars => Name_Suppress,"}]}