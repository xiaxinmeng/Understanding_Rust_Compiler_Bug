{"sha": "ed37f25a36339a3c198c0c8d0d9e07735897d3cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQzN2YyNWEzNjMzOWEzYzE5OGMwYzhkMGQ5ZTA3NzM1ODk3ZDNjZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T10:44:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-23T10:44:35Z"}, "message": "[multiple changes]\n\n2015-10-23  Gary Dismukes  <dismukes@adacore.com>\n\n\t* bindgen.adb, restrict.adb: Minor spelling/grammar fixes.\n\n2015-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_res.adb (Resolve_Entity_Name): Code cleanup. Check for possible\n\telaboration issues in SPARK when the name denotes a source variable.\n\nFrom-SVN: r229228", "tree": {"sha": "43a5152a860facf5af287afe4d3c26852031e444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43a5152a860facf5af287afe4d3c26852031e444"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed37f25a36339a3c198c0c8d0d9e07735897d3cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed37f25a36339a3c198c0c8d0d9e07735897d3cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed37f25a36339a3c198c0c8d0d9e07735897d3cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed37f25a36339a3c198c0c8d0d9e07735897d3cd/comments", "author": null, "committer": null, "parents": [{"sha": "6e840989730297abbe1610c3b15ecb565e967f1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e840989730297abbe1610c3b15ecb565e967f1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e840989730297abbe1610c3b15ecb565e967f1f"}], "stats": {"total": 73, "additions": 39, "deletions": 34}, "files": [{"sha": "5235631e0693440bf96769d1eebae4374b78179b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed37f25a36339a3c198c0c8d0d9e07735897d3cd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed37f25a36339a3c198c0c8d0d9e07735897d3cd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ed37f25a36339a3c198c0c8d0d9e07735897d3cd", "patch": "@@ -1,3 +1,12 @@\n+2015-10-23  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* bindgen.adb, restrict.adb: Minor spelling/grammar fixes.\n+\n+2015-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Entity_Name): Code cleanup. Check for possible\n+\telaboration issues in SPARK when the name denotes a source variable.\n+\n 2015-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch7.adb (Process_Transient_Objects): Reimplement to properly"}, {"sha": "cf4b59f981a1e8e72cc3f863fc16031fe00b2917", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed37f25a36339a3c198c0c8d0d9e07735897d3cd/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed37f25a36339a3c198c0c8d0d9e07735897d3cd/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=ed37f25a36339a3c198c0c8d0d9e07735897d3cd", "patch": "@@ -2810,8 +2810,8 @@ package body Bindgen is\n \n       procedure Check_Package (Var : in out Boolean; Name : String);\n       --  Set Var to true iff the current identifier in Namet is Name. Do\n-      --  nothing if it doesn't match. This procedure is just an helper to\n-      --  avoid to explicitely deal with length.\n+      --  nothing if it doesn't match. This procedure is just a helper to\n+      --  avoid explicitly dealing with length.\n \n       -------------------\n       -- Check_Package --"}, {"sha": "b63b426d0967aea8253b129b70c2d099ded1f6cf", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed37f25a36339a3c198c0c8d0d9e07735897d3cd/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed37f25a36339a3c198c0c8d0d9e07735897d3cd/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=ed37f25a36339a3c198c0c8d0d9e07735897d3cd", "patch": "@@ -503,7 +503,7 @@ package body Restrict is\n       --  so that we have consistency between each compilation.\n \n       --  In GNATprove mode restrictions are checked, except for\n-      --  No_Initialize_Scalars, which is implicitely set in gnat1drv.adb.\n+      --  No_Initialize_Scalars, which is implicitly set in gnat1drv.adb.\n \n       --  Just checking, SPARK does not allow restrictions to be set ???\n "}, {"sha": "62f82ebac92802b356c60dacf9e20ba0ea5f8829", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 27, "deletions": 31, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed37f25a36339a3c198c0c8d0d9e07735897d3cd/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed37f25a36339a3c198c0c8d0d9e07735897d3cd/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ed37f25a36339a3c198c0c8d0d9e07735897d3cd", "patch": "@@ -7179,44 +7179,40 @@ package body Sem_Res is\n          Par := Parent (Par);\n       end if;\n \n-      --  The following checks are only relevant when SPARK_Mode is on as they\n-      --  are not standard Ada legality rules. An effectively volatile object\n-      --  subject to enabled properties Async_Writers or Effective_Reads must\n-      --  appear in a specific context.\n-\n-      if SPARK_Mode = On\n-        and then Is_Object (E)\n-        and then Is_Effectively_Volatile (E)\n-        and then (Async_Writers_Enabled (E)\n-                   or else Effective_Reads_Enabled (E))\n-        and then Comes_From_Source (N)\n-      then\n-         --  The effectively volatile objects appears in a \"non-interfering\n-         --  context\" as defined in SPARK RM 7.1.3(12).\n+      if Comes_From_Source (N) then\n \n-         if Is_OK_Volatile_Context (Par, N) then\n-            null;\n+         --  The following checks are only relevant when SPARK_Mode is on as\n+         --  they are not standard Ada legality rules.\n \n-         --  Otherwise the context causes a side effect with respect to the\n-         --  effectively volatile object.\n+         if SPARK_Mode = On then\n \n-         else\n-            SPARK_Msg_N\n-              (\"volatile object cannot appear in this context \"\n-               & \"(SPARK RM 7.1.3(12))\", N);\n-         end if;\n-      end if;\n+            --  An effectively volatile object subject to enabled properties\n+            --  Async_Writers or Effective_Reads must appear in non-interfering\n+            --  context (SPARK RM 7.1.3(12)).\n \n-      --  A Ghost entity must appear in a specific context\n+            if Is_Object (E)\n+              and then Is_Effectively_Volatile (E)\n+              and then (Async_Writers_Enabled (E)\n+                         or else Effective_Reads_Enabled (E))\n+              and then not Is_OK_Volatile_Context (Par, N)\n+            then\n+               SPARK_Msg_N\n+                 (\"volatile object cannot appear in this context \"\n+                  & \"(SPARK RM 7.1.3(12))\", N);\n+            end if;\n \n-      if Is_Ghost_Entity (E) and then Comes_From_Source (N) then\n-         Check_Ghost_Context (E, N);\n-      end if;\n+            --  Check possible elaboration issues with respect to variables\n+\n+            if Ekind (E) = E_Variable then\n+               Check_Elab_Call (N);\n+            end if;\n+         end if;\n \n-      --  In SPARK mode, need to check possible elaboration issues\n+         --  A Ghost entity must appear in a specific context\n \n-      if SPARK_Mode = On and then Ekind (E) = E_Variable then\n-         Check_Elab_Call (N);\n+         if Is_Ghost_Entity (E) then\n+            Check_Ghost_Context (E, N);\n+         end if;\n       end if;\n    end Resolve_Entity_Name;\n "}]}