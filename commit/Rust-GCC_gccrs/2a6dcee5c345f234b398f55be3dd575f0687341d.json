{"sha": "2a6dcee5c345f234b398f55be3dd575f0687341d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE2ZGNlZTVjMzQ1ZjIzNGIzOThmNTViZTNkZDU3NWYwNjg3MzQxZA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2006-11-20T21:29:32Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2006-11-20T21:29:32Z"}, "message": "re PR fortran/27546 (IMPORT is broken)\n\nfortran/\n2006-11-17  Tobias Burnus  <burnus@net-b.de>\n\n    PR fortran/27546\n    * primary.c (gfc_match_rvalue): Added IMPORT support.\n\ntestsuite/\n2006-11-17  Tobias Burnus  <burnus@net-b.de>\n\n    PR fortran/27546\n    * gfortran.dg/import.f90: Extended test.\n    * gfortran.dg/import2.f90: Extended test.\n\nFrom-SVN: r119028", "tree": {"sha": "f82930f7c37519031c5982002c76e6c35c67cd0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82930f7c37519031c5982002c76e6c35c67cd0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a6dcee5c345f234b398f55be3dd575f0687341d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a6dcee5c345f234b398f55be3dd575f0687341d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a6dcee5c345f234b398f55be3dd575f0687341d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a6dcee5c345f234b398f55be3dd575f0687341d/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02022f3a706d462cdb2da30e2d8cfd79901d78ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02022f3a706d462cdb2da30e2d8cfd79901d78ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02022f3a706d462cdb2da30e2d8cfd79901d78ab"}], "stats": {"total": 74, "additions": 65, "deletions": 9}, "files": [{"sha": "4a30d00f9b7fc6c8f8a4dbabeab04fb4bea48805", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6dcee5c345f234b398f55be3dd575f0687341d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6dcee5c345f234b398f55be3dd575f0687341d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2a6dcee5c345f234b398f55be3dd575f0687341d", "patch": "@@ -1,3 +1,8 @@\n+2006-11-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/27546\n+\t* primary.c (gfc_match_rvalue): Added IMPORT support.\n+\n 2006-11-20  Tobias Burnus  <burnus@net-b.de>\n \n \t* symbol.c (check_conflict): Add conflict between VOLATILE"}, {"sha": "2c340724fcb8db42fcdaf8b9503279779238db27", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6dcee5c345f234b398f55be3dd575f0687341d/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6dcee5c345f234b398f55be3dd575f0687341d/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=2a6dcee5c345f234b398f55be3dd575f0687341d", "patch": "@@ -1917,7 +1917,8 @@ gfc_match_rvalue (gfc_expr ** result)\n   if (m != MATCH_YES)\n     return m;\n \n-  if (gfc_find_state (COMP_INTERFACE) == SUCCESS)\n+  if (gfc_find_state (COMP_INTERFACE) == SUCCESS\n+      && !gfc_current_ns->has_import_set)\n     i = gfc_get_sym_tree (name, NULL, &symtree);\n   else\n     i = gfc_get_ha_sym_tree (name, &symtree);"}, {"sha": "3393c8ed9b187934b5c0591e4376bbb620b5c80c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6dcee5c345f234b398f55be3dd575f0687341d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6dcee5c345f234b398f55be3dd575f0687341d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2a6dcee5c345f234b398f55be3dd575f0687341d", "patch": "@@ -10,6 +10,12 @@\n \tPR tree-opt/25500\n \t* gcc.dg/tree-ssa/sra-4.c: New testcase.\n \n+2006-11-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/27546\n+\t* gfortran.dg/import.f90: Extended test.\n+\t* gfortran.dg/import2.f90: Extended test.\n+\n 2006-11-20  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/volatile3.f90: Add conflict test."}, {"sha": "521f87222bef2ecf51f458b8d9213d9ca7e9f85d", "filename": "gcc/testsuite/gfortran.dg/import.f90", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6dcee5c345f234b398f55be3dd575f0687341d/gcc%2Ftestsuite%2Fgfortran.dg%2Fimport.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6dcee5c345f234b398f55be3dd575f0687341d/gcc%2Ftestsuite%2Fgfortran.dg%2Fimport.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimport.f90?ref=2a6dcee5c345f234b398f55be3dd575f0687341d", "patch": "@@ -13,18 +13,36 @@ subroutine test(x)\n end subroutine test\n \n \n-subroutine bar(x)\n+subroutine bar(x,y)\n   type myType\n     sequence\n     integer :: i\n   end type myType\n   type(myType) :: x\n+  integer(8) :: y\n+  if(y /= 8) call abort()\n   if(x%i /= 2) call abort()\n   x%i = 5\n+  y = 42\n end subroutine bar\n \n+module testmod\n+  implicit none\n+  integer, parameter :: kind = 8\n+  type modType\n+    real :: rv\n+  end type modType\n+  interface\n+    subroutine other(x,y)\n+       import\n+       real(kind)    :: x\n+       type(modType) :: y\n+    end subroutine\n+  end interface\n+end module testmod\n \n program foo\n+  integer, parameter :: dp = 8\n   type myType\n     sequence\n     integer :: i\n@@ -34,9 +52,10 @@ program foo\n     integer :: i\n   end type myType3\n   interface\n-    subroutine bar(x)\n+    subroutine bar(x,y)\n       import\n       type(myType) :: x\n+      integer(dp)     :: y\n     end subroutine bar\n     subroutine test(x)\n       import :: myType3\n@@ -47,10 +66,13 @@ end subroutine test\n \n   type(myType) :: y\n   type(myType3) :: z\n+  integer(8) :: i8\n   y%i = 2\n-  call bar(y)\n-  if(y%i /= 5) call abort()\n+  i8 = 8\n+  call bar(y,i8)\n+  if(y%i /= 5 .or. i8/= 42) call abort()\n   z%i = 7\n   call test(z)\n   if(z%i /= 1) call abort()\n end program foo\n+! { dg-final { cleanup-modules \"testmod\" } }"}, {"sha": "e597cfc30b97adad2342e326b3828aef818d611c", "filename": "gcc/testsuite/gfortran.dg/import2.f90", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6dcee5c345f234b398f55be3dd575f0687341d/gcc%2Ftestsuite%2Fgfortran.dg%2Fimport2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6dcee5c345f234b398f55be3dd575f0687341d/gcc%2Ftestsuite%2Fgfortran.dg%2Fimport2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fimport2.f90?ref=2a6dcee5c345f234b398f55be3dd575f0687341d", "patch": "@@ -15,18 +15,36 @@ subroutine test(x)\n end subroutine test\n \n \n-subroutine bar(x)\n+subroutine bar(x,y)\n   type myType\n     sequence\n     integer :: i\n   end type myType\n   type(myType) :: x\n+  integer(8) :: y\n+  if(y /= 8) call abort()\n   if(x%i /= 2) call abort()\n   x%i = 5\n+  y   = 42\n end subroutine bar\n \n+module testmod\n+  implicit none\n+  integer, parameter :: kind = 8\n+  type modType\n+    real :: rv\n+  end type modType\n+  interface\n+    subroutine other(x,y)\n+      import ! { dg-error \"Fortran 2003: IMPORT statement\" }\n+      type(modType) :: y ! { dg-error \"not been declared within the interface\" }\n+      real(kind)    :: x ! { dg-error \"has not been declared\" }\n+    end subroutine\n+  end interface\n+end module testmod\n \n program foo\n+  integer, parameter :: dp = 8\n   type myType\n     sequence\n     integer :: i\n@@ -36,9 +54,10 @@ program foo\n     integer :: i\n   end type myType3\n   interface\n-    subroutine bar(x)\n+    subroutine bar(x,y)\n       import ! { dg-error \"Fortran 2003: IMPORT statement\" }\n       type(myType) :: x ! { dg-error \"not been declared within the interface\" }\n+      integer(dp)  :: y ! { dg-error \"has not been declared\" }\n     end subroutine bar\n     subroutine test(x)\n       import :: myType3 ! { dg-error \"Fortran 2003: IMPORT statement\" }\n@@ -49,10 +68,13 @@ end subroutine test\n \n   type(myType) :: y\n   type(myType3) :: z\n+  integer(dp) :: i8\n   y%i = 2\n-  call bar(y) ! { dg-error \"Type/rank mismatch in argument\" }\n-  if(y%i /= 5) call abort()\n+  i8 = 8\n+  call bar(y,i8) ! { dg-error \"Type/rank mismatch in argument\" }\n+  if(y%i /= 5 .or. i8/= 42) call abort()\n   z%i = 7\n   call test(z) ! { dg-error \"Type/rank mismatch in argument\" }\n   if(z%i /= 1) call abort()\n end program foo\n+! { dg-final { cleanup-modules \"testmod\" } }"}]}