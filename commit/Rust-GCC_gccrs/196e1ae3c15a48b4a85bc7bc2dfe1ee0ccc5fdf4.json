{"sha": "196e1ae3c15a48b4a85bc7bc2dfe1ee0ccc5fdf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk2ZTFhZTNjMTVhNDhiNGE4NWJjN2JjMmRmZTFlZTBjY2M1ZmRmNA==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2002-10-24T00:46:02Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2002-10-24T00:46:02Z"}, "message": "objc-act.c (get_static_reference): Remove unneeded TYPE_BINFO initialization.\n\n2002-10-23  Ziemowit Laski <zlaski@apple.com>\n\n        * objc/objc-act.c (get_static_reference): Remove unneeded\n        TYPE_BINFO initialization.\n        (get_object-reference): Likewise.\n        (build_constructor): Tighten precondition check.\n        (finish_message_expr): Likewise.\n\nFrom-SVN: r58480", "tree": {"sha": "b402125b752e68071bdbce6ef5950830571b5b61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b402125b752e68071bdbce6ef5950830571b5b61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/196e1ae3c15a48b4a85bc7bc2dfe1ee0ccc5fdf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196e1ae3c15a48b4a85bc7bc2dfe1ee0ccc5fdf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196e1ae3c15a48b4a85bc7bc2dfe1ee0ccc5fdf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196e1ae3c15a48b4a85bc7bc2dfe1ee0ccc5fdf4/comments", "author": null, "committer": null, "parents": [{"sha": "6b607ffd46714ea2650dfa8d3b3ff6634b1c6610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b607ffd46714ea2650dfa8d3b3ff6634b1c6610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b607ffd46714ea2650dfa8d3b3ff6634b1c6610"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "1e6c104e4f33df22281337c8d8a69b722ae302ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196e1ae3c15a48b4a85bc7bc2dfe1ee0ccc5fdf4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196e1ae3c15a48b4a85bc7bc2dfe1ee0ccc5fdf4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=196e1ae3c15a48b4a85bc7bc2dfe1ee0ccc5fdf4", "patch": "@@ -1,3 +1,11 @@\n+2002-10-23  Ziemowit Laski <zlaski@apple.com>\n+\n+\t* objc/objc-act.c (get_static_reference): Remove unneeded\n+\tTYPE_BINFO initialization.\n+\t(get_object-reference): Likewise.\n+\t(build_constructor): Tighten precondition check.\n+\t(finish_message_expr): Likewise.\n+\n 2002-10-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/i386.c (local_symbolic_operand): Move LABEL_REF test"}, {"sha": "018ba04f9998efd753d93b29e8cf07abbf081b23", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196e1ae3c15a48b4a85bc7bc2dfe1ee0ccc5fdf4/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196e1ae3c15a48b4a85bc7bc2dfe1ee0ccc5fdf4/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=196e1ae3c15a48b4a85bc7bc2dfe1ee0ccc5fdf4", "patch": "@@ -928,7 +928,6 @@ get_static_reference (interface, protocols)\n       tree t, m = TYPE_MAIN_VARIANT (type);\n \n       t = copy_node (type);\n-      TYPE_BINFO (t) = make_tree_vec (2);\n \n       /* Add this type to the chain of variants of TYPE.  */\n       TYPE_NEXT_VARIANT (t) = TYPE_NEXT_VARIANT (m);\n@@ -979,7 +978,6 @@ get_object_reference (protocols)\n       tree t, m = TYPE_MAIN_VARIANT (type);\n \n       t = copy_node (type);\n-      TYPE_BINFO (t) = make_tree_vec (2);\n \n       /* Add this type to the chain of variants of TYPE.  */\n       TYPE_NEXT_VARIANT (t) = TYPE_NEXT_VARIANT (m);\n@@ -1416,7 +1414,7 @@ build_constructor (type, elts)\n   else\n     {\n       f = TYPE_FIELDS (type);\n-      for (e = elts; e ; e = TREE_CHAIN (e), f = TREE_CHAIN (f))\n+      for (e = elts; e && f; e = TREE_CHAIN (e), f = TREE_CHAIN (f))\n \tif (TREE_CODE (TREE_TYPE (f)) == POINTER_TYPE\n \t    || TREE_CODE (TREE_TYPE (f)) == INTEGER_TYPE)\n \t  TREE_VALUE (e) = convert (TREE_TYPE (f), TREE_VALUE (e));\n@@ -4996,7 +4994,7 @@ finish_message_expr (receiver, sel_name, method_params)\n       if (iface)\n \tmethod_prototype = lookup_instance_method_static (iface, sel_name);\n \n-      if (! method_prototype && TYPE_PROTOCOL_LIST (ctype))\n+      if (! method_prototype && ctype && TYPE_PROTOCOL_LIST (ctype))\n \tmethod_prototype\n \t  = lookup_method_in_protocol_list (TYPE_PROTOCOL_LIST (ctype),\n \t\t\t\t\t    sel_name, 0);"}]}