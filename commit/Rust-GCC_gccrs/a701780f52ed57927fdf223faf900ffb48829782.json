{"sha": "a701780f52ed57927fdf223faf900ffb48829782", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcwMTc4MGY1MmVkNTc5MjdmZGYyMjNmYWY5MDBmZmI0ODgyOTc4Mg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2005-02-07T08:06:29Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2005-02-07T08:06:29Z"}, "message": "frv.md (\"tls_indirect_call\"): Turn into libcall-like expand.\n\n* config/frv/frv.md (\"tls_indirect_call\"): Turn into libcall-like\nexpand.\n(\"*tls_indirect_call\"): New, reference hard regs directly.\n* config/frv/frv.c (gen_inlined_tls_plt): Adjust.\n\nFrom-SVN: r94694", "tree": {"sha": "ce31f3701b173026f1abff0a74b94c1c8fb110f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce31f3701b173026f1abff0a74b94c1c8fb110f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a701780f52ed57927fdf223faf900ffb48829782", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a701780f52ed57927fdf223faf900ffb48829782", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a701780f52ed57927fdf223faf900ffb48829782", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a701780f52ed57927fdf223faf900ffb48829782/comments", "author": null, "committer": null, "parents": [{"sha": "888b0310a679f2e28ab2ad9add296559ddf40ce1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/888b0310a679f2e28ab2ad9add296559ddf40ce1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/888b0310a679f2e28ab2ad9add296559ddf40ce1"}], "stats": {"total": 47, "additions": 35, "deletions": 12}, "files": [{"sha": "845748b2ac8de12f93269a6433f3a5651bd8bf82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a701780f52ed57927fdf223faf900ffb48829782/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a701780f52ed57927fdf223faf900ffb48829782/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a701780f52ed57927fdf223faf900ffb48829782", "patch": "@@ -1,3 +1,10 @@\n+2005-02-07  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/frv/frv.md (\"tls_indirect_call\"): Turn into libcall-like\n+\texpand.\n+\t(\"*tls_indirect_call\"): New, reference hard regs directly.\n+\t* config/frv/frv.c (gen_inlined_tls_plt): Adjust.\n+\n 2005-02-07  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n \t* config/arm/rtems-elf.h (SUBTARGET_EXTRA_ASM_SPEC): "}, {"sha": "c45145864aa511f32da34651c3f468dc5ba1729e", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a701780f52ed57927fdf223faf900ffb48829782/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a701780f52ed57927fdf223faf900ffb48829782/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=a701780f52ed57927fdf223faf900ffb48829782", "patch": "@@ -3481,8 +3481,7 @@ gen_inlined_tls_plt (rtx addr)\n     }\n \n   retval = gen_reg_rtx (Pmode);\n-  emit_insn (gen_tls_indirect_call (retval, addr, dest, gen_reg_rtx (Pmode),\n-\t\t\t\t    picreg));\n+  emit_insn (gen_tls_indirect_call (retval, addr, dest, picreg));\n   return retval;\n }\n "}, {"sha": "4515c0b44dd89af37d91ca1c5591c7a63b3e9c7d", "filename": "gcc/config/frv/frv.md", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a701780f52ed57927fdf223faf900ffb48829782/gcc%2Fconfig%2Ffrv%2Ffrv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a701780f52ed57927fdf223faf900ffb48829782/gcc%2Fconfig%2Ffrv%2Ffrv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.md?ref=a701780f52ed57927fdf223faf900ffb48829782", "patch": "@@ -8203,25 +8203,42 @@\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"load_or_call\")])\n \n-;; Reads GR8 and GR9.\n-;; Clobbers GR8.\n-;; Modifies GR9.\n-(define_insn \"tls_indirect_call\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=D09\")\n+;; We have to expand this like a libcall (it sort of actually is)\n+;; because otherwise sched may move, for example, an insn that sets up\n+;; GR8 for a subsequence call before the *tls_indirect_call insn, and\n+;; then reload won't be able to fix things up.\n+(define_expand \"tls_indirect_call\"\n+  [(set (reg:DI GR8_REG)\n+\t(match_operand:DI 2 \"register_operand\" \"\"))\n+   (parallel\n+    [(set (reg:SI GR9_REG)\n+\t  (unspec:SI\n+\t   [(match_operand:SI 1 \"symbolic_operand\" \"\")\n+\t   (reg:DI GR8_REG)]\n+\t   UNSPEC_TLS_INDIRECT_CALL))\n+    (clobber (reg:SI GR8_REG))\n+    (clobber (reg:SI LRREG))\n+    (use (match_operand:SI 3 \"register_operand\" \"\"))])\n+   (set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(reg:SI GR9_REG))]\n+  \"HAVE_AS_TLS\")\n+\n+(define_insn \"*tls_indirect_call\"\n+  [(set (reg:SI GR9_REG)\n \t(unspec:SI\n-\t [(match_operand:SI 1 \"symbolic_operand\" \"\")\n-\t  (match_operand:DI 2 \"register_operand\" \"D89\")]\n+\t [(match_operand:SI 0 \"symbolic_operand\" \"\")\n+\t  (reg:DI GR8_REG)]\n \t UNSPEC_TLS_INDIRECT_CALL))\n-   (clobber (match_operand:SI 3 \"register_operand\" \"=D08\"))\n+   (clobber (reg:SI GR8_REG))\n    (clobber (reg:SI LRREG))\n    ;; If there was a way to represent the fact that we don't need GR9\n    ;; or GR15 to be set before this instruction (it could be in\n    ;; parallel), we could use it here.  This change wouldn't apply to\n    ;; call_gettlsoff, thought, since the linker may turn the latter\n    ;; into ldi @(gr15,offset),gr9.\n-   (use (match_operand:SI 4 \"register_operand\" \"D15\"))]\n+   (use (match_operand:SI 1 \"register_operand\" \"D15\"))]\n   \"HAVE_AS_TLS\"\n-  \"calll #gettlsoff(%a1)@(%2,gr0)\"\n+  \"calll #gettlsoff(%a0)@(gr8,gr0)\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"jumpl\")])\n "}]}