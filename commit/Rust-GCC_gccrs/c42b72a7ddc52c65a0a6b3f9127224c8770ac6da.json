{"sha": "c42b72a7ddc52c65a0a6b3f9127224c8770ac6da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQyYjcyYTdkZGM1MmM2NWEwYTZiM2Y5MTI3MjI0Yzg3NzBhYzZkYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-05-15T21:41:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-05-15T21:41:35Z"}, "message": "re PR debug/90197 (Cannot step through simple loop at -O -g)\n\n\tPR debug/90197\n\t* cp-gimplify.c (genericize_cp_loop): Emit a DEBUG_BEGIN_STMT\n\tbefore the condition (or if missing or constant non-zero at the end\n\tof the loop.  Emit a DEBUG_BEGIN_STMT before the increment expression\n\tif any.  Don't call protected_set_expr_location on incr if it already\n\thas a location.\n\nFrom-SVN: r271269", "tree": {"sha": "8484d48e0ab4506ce0c9e9dfbf430cf6a477a38b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8484d48e0ab4506ce0c9e9dfbf430cf6a477a38b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c42b72a7ddc52c65a0a6b3f9127224c8770ac6da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c42b72a7ddc52c65a0a6b3f9127224c8770ac6da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c42b72a7ddc52c65a0a6b3f9127224c8770ac6da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c42b72a7ddc52c65a0a6b3f9127224c8770ac6da/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e5d7010bb30b136e06f31edd197b6dca9f04f7cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5d7010bb30b136e06f31edd197b6dca9f04f7cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5d7010bb30b136e06f31edd197b6dca9f04f7cb"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "058773f299902fdb9e405be3295ffadffb28eaee", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42b72a7ddc52c65a0a6b3f9127224c8770ac6da/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42b72a7ddc52c65a0a6b3f9127224c8770ac6da/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c42b72a7ddc52c65a0a6b3f9127224c8770ac6da", "patch": "@@ -1,3 +1,12 @@\n+2019-05-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/90197\n+\t* cp-gimplify.c (genericize_cp_loop): Emit a DEBUG_BEGIN_STMT\n+\tbefore the condition (or if missing or constant non-zero at the end\n+\tof the loop.  Emit a DEBUG_BEGIN_STMT before the increment expression\n+\tif any.  Don't call protected_set_expr_location on incr if it already\n+\thas a location.\n+\n 2019-05-15  Marek Polacek  <polacek@redhat.com>\n \n \tCWG 2096 - constraints on literal unions."}, {"sha": "72d8581ffe51eecc6ee8335044bc755d67c6bd79", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c42b72a7ddc52c65a0a6b3f9127224c8770ac6da/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c42b72a7ddc52c65a0a6b3f9127224c8770ac6da/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=c42b72a7ddc52c65a0a6b3f9127224c8770ac6da", "patch": "@@ -241,8 +241,10 @@ genericize_cp_loop (tree *stmt_p, location_t start_locus, tree cond, tree body,\n   tree blab, clab;\n   tree exit = NULL;\n   tree stmt_list = NULL;\n+  tree debug_begin = NULL;\n \n-  protected_set_expr_location (incr, start_locus);\n+  if (EXPR_LOCATION (incr) == UNKNOWN_LOCATION)\n+    protected_set_expr_location (incr, start_locus);\n \n   cp_walk_tree (&cond, cp_genericize_r, data, NULL);\n   cp_walk_tree (&incr, cp_genericize_r, data, NULL);\n@@ -253,6 +255,13 @@ genericize_cp_loop (tree *stmt_p, location_t start_locus, tree cond, tree body,\n   cp_walk_tree (&body, cp_genericize_r, data, NULL);\n   *walk_subtrees = 0;\n \n+  if (MAY_HAVE_DEBUG_MARKER_STMTS\n+      && (!cond || !integer_zerop (cond)))\n+    {\n+      debug_begin = build0 (DEBUG_BEGIN_STMT, void_type_node);\n+      SET_EXPR_LOCATION (debug_begin, cp_expr_loc_or_loc (cond, start_locus));\n+    }\n+\n   if (cond && TREE_CODE (cond) != INTEGER_CST)\n     {\n       /* If COND is constant, don't bother building an exit.  If it's false,\n@@ -265,10 +274,24 @@ genericize_cp_loop (tree *stmt_p, location_t start_locus, tree cond, tree body,\n     }\n \n   if (exit && cond_is_first)\n-    append_to_statement_list (exit, &stmt_list);\n+    {\n+      append_to_statement_list (debug_begin, &stmt_list);\n+      debug_begin = NULL_TREE;\n+      append_to_statement_list (exit, &stmt_list);\n+    }\n   append_to_statement_list (body, &stmt_list);\n   finish_bc_block (&stmt_list, bc_continue, clab);\n-  append_to_statement_list (incr, &stmt_list);\n+  if (incr)\n+    {\n+      if (MAY_HAVE_DEBUG_MARKER_STMTS)\n+\t{\n+\t  tree d = build0 (DEBUG_BEGIN_STMT, void_type_node);\n+\t  SET_EXPR_LOCATION (d, cp_expr_loc_or_loc (incr, start_locus));\n+\t  append_to_statement_list (d, &stmt_list);\n+\t}\n+      append_to_statement_list (incr, &stmt_list);\n+    }\n+  append_to_statement_list (debug_begin, &stmt_list);\n   if (exit && !cond_is_first)\n     append_to_statement_list (exit, &stmt_list);\n "}]}