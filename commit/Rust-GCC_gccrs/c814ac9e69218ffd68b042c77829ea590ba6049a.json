{"sha": "c814ac9e69218ffd68b042c77829ea590ba6049a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgxNGFjOWU2OTIxOGZmZDY4YjA0MmM3NzgyOWVhNTkwYmE2MDQ5YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-04-16T08:31:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-04-16T08:31:23Z"}, "message": "re PR c++/85112 (ICE with invalid constexpr)\n\n2018-04-16  Paolo Carlini  <paolo.carlini@oracle.com>\n\t    Jason Merrill  <jason@redhat.com>\n\n\tPR c++/85112\n\t* convert.c (convert_to_integer_1): Use direct recursion for\n\tenumeral types and types with a precision less than the number\n\tof bits in their mode.\n\n/testsuite\n2018-04-16  Paolo Carlini  <paolo.carlini@oracle.com>\n\t    Jason Merrill  <jason@redhat.com>\n\n\tPR c++/85112\n\t* g++.dg/cpp0x/pr85112.C: New.\n\nCo-Authored-By: Jason Merrill <jason@redhat.com>\n\nFrom-SVN: r259397", "tree": {"sha": "51e8eb81cf09dafe21406e801f968cad85230089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51e8eb81cf09dafe21406e801f968cad85230089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c814ac9e69218ffd68b042c77829ea590ba6049a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c814ac9e69218ffd68b042c77829ea590ba6049a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c814ac9e69218ffd68b042c77829ea590ba6049a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c814ac9e69218ffd68b042c77829ea590ba6049a/comments", "author": null, "committer": null, "parents": [{"sha": "ef0e80d23cae8d87167ffeab56f5930da1ddf05d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef0e80d23cae8d87167ffeab56f5930da1ddf05d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef0e80d23cae8d87167ffeab56f5930da1ddf05d"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "3a82dfec269d9f86f728fa63eeb71950a9b43404", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c814ac9e69218ffd68b042c77829ea590ba6049a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c814ac9e69218ffd68b042c77829ea590ba6049a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c814ac9e69218ffd68b042c77829ea590ba6049a", "patch": "@@ -1,3 +1,11 @@\n+2018-04-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/85112\n+\t* convert.c (convert_to_integer_1): Use direct recursion for\n+\tenumeral types and types with a precision less than the number\n+\tof bits in their mode.\n+\n 2018-04-16  Julia Koval  <julia.koval@intel.com>\n \n \tPR target/84413"}, {"sha": "68705f3e9b09c5d0e6bae0ba1c7bca0db7107980", "filename": "gcc/convert.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c814ac9e69218ffd68b042c77829ea590ba6049a/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c814ac9e69218ffd68b042c77829ea590ba6049a/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=c814ac9e69218ffd68b042c77829ea590ba6049a", "patch": "@@ -741,8 +741,10 @@ convert_to_integer_1 (tree type, tree expr, bool dofold)\n       else if (TREE_CODE (type) == ENUMERAL_TYPE\n \t       || maybe_ne (outprec, GET_MODE_PRECISION (TYPE_MODE (type))))\n \t{\n-\t  expr = convert (lang_hooks.types.type_for_mode\n-\t\t\t  (TYPE_MODE (type), TYPE_UNSIGNED (type)), expr);\n+\t  expr\n+\t    = convert_to_integer_1 (lang_hooks.types.type_for_mode\n+\t\t\t\t    (TYPE_MODE (type), TYPE_UNSIGNED (type)),\n+\t\t\t\t    expr, dofold);\n \t  return maybe_fold_build1_loc (dofold, loc, NOP_EXPR, type, expr);\n \t}\n "}, {"sha": "8806b95bb3f486bb04840ca52b20f7148319e5ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c814ac9e69218ffd68b042c77829ea590ba6049a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c814ac9e69218ffd68b042c77829ea590ba6049a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c814ac9e69218ffd68b042c77829ea590ba6049a", "patch": "@@ -1,3 +1,9 @@\n+2018-04-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/85112\n+\t* g++.dg/cpp0x/pr85112.C: New.\n+\n 2018-04-15  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n \tPR testsuite/85326"}, {"sha": "13d25bef132c5b0e4f157afeb2d538b3a0c6def3", "filename": "gcc/testsuite/g++.dg/cpp0x/pr85112.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c814ac9e69218ffd68b042c77829ea590ba6049a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr85112.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c814ac9e69218ffd68b042c77829ea590ba6049a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr85112.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr85112.C?ref=c814ac9e69218ffd68b042c77829ea590ba6049a", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/85112\n+// { dg-do compile { target c++11 } }\n+\n+struct A\n+{\n+  int m;\n+  int n : 4;\n+};\n+\n+int i;  // { dg-message \"not const\" }\n+\n+void foo()\n+{\n+  constexpr int j = i;  // { dg-error \"not usable\" }\n+  A a;\n+  a.n = j;\n+}"}]}