{"sha": "cc8b343d265200a3bd9fa1eccfa2db35499cb5c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M4YjM0M2QyNjUyMDBhM2JkOWZhMWVjY2ZhMmRiMzU0OTljYjVjNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-09-16T22:06:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-09-16T22:06:28Z"}, "message": "re PR c++/37530 (ICE with invalid catch)\n\n\tPR c++/37530\n\t* gimplify.c (gimplify_expr) <case TRY_CATCH_EXPR>: Don't create\n\tGIMPLE_TRY if cleanup sequence is empty.\n\n\t* g++.dg/parse/crash48.C: New test.\n\nFrom-SVN: r140401", "tree": {"sha": "876ce5c7a63823800eed11d44476606577a8b06b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/876ce5c7a63823800eed11d44476606577a8b06b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "326a4d4ef1c3b80f4cfbf17f52a42c263abb25df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/326a4d4ef1c3b80f4cfbf17f52a42c263abb25df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/326a4d4ef1c3b80f4cfbf17f52a42c263abb25df"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "d5e0a1c67da31161bfd0dcbf262247cb2d7f2f65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc8b343d265200a3bd9fa1eccfa2db35499cb5c7", "patch": "@@ -1,3 +1,9 @@\n+2008-09-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/37530\n+\t* gimplify.c (gimplify_expr) <case TRY_CATCH_EXPR>: Don't create\n+\tGIMPLE_TRY if cleanup sequence is empty.\n+\n 2008-09-16  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR middle-end/37263"}, {"sha": "81b21c5fa66f1003cec95ed60c3ce6c47ad8520c", "filename": "gcc/gimplify.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=cc8b343d265200a3bd9fa1eccfa2db35499cb5c7", "patch": "@@ -6586,6 +6586,13 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t    eval = cleanup = NULL;\n \t    gimplify_and_add (TREE_OPERAND (*expr_p, 0), &eval);\n \t    gimplify_and_add (TREE_OPERAND (*expr_p, 1), &cleanup);\n+\t    /* Don't create bogus GIMPLE_TRY with empty cleanup.  */\n+\t    if (gimple_seq_empty_p (cleanup))\n+\t      {\n+\t\tgimple_seq_add_seq (pre_p, eval);\n+\t\tret = GS_ALL_DONE;\n+\t\tbreak;\n+\t      }\n \t    try_ = gimple_build_try (eval, cleanup,\n \t\t\t\t     TREE_CODE (*expr_p) == TRY_FINALLY_EXPR\n \t\t\t\t     ? GIMPLE_TRY_FINALLY"}, {"sha": "9c414a556f3bbab1d40de7b23620a0b61aff4161", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc8b343d265200a3bd9fa1eccfa2db35499cb5c7", "patch": "@@ -1,5 +1,8 @@\n 2008-09-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/37530\n+\t* g++.dg/parse/crash48.C: New test.\n+\n \tPR c++/37531\n \t* g++.dg/parse/crash47.C: New test.\n "}, {"sha": "45415484b4ad2acb21a29e6488198281a33382df", "filename": "gcc/testsuite/g++.dg/parse/crash48.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8b343d265200a3bd9fa1eccfa2db35499cb5c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash48.C?ref=cc8b343d265200a3bd9fa1eccfa2db35499cb5c7", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/37530\n+// { dg-do compile }\n+\n+void\n+foo (bool b)\n+{\n+  if (b)\n+    try { throw 0; } catch (X) { }\t// { dg-error \"expected type-specifier before\" }\n+}"}]}