{"sha": "762031177e3e03ef37f8c1fb6c928bed3538bf7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYyMDMxMTc3ZTNlMDNlZjM3ZjhjMWZiNmM5MjhiZWQzNTM4YmY3ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-14T09:04:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-14T09:04:48Z"}, "message": "(Write_Eol): Remove trailing spaces before writing the line\n\n\t(Write_Eol): Remove trailing spaces before writing the line\n\t(Write_Eol_Keep_Blanks): New procedure to write a line, including\n\tpossible trailing spaces.\n\t(Output_Source_Line): Call Write_Eol_Keep_Blanks to output a source line\n\tFix problem with suppressing warning messages from back end\n\tImprove handling of deleted warnings\n\nFrom-SVN: r127474", "tree": {"sha": "1bb18a3351cde0d151dc453c8ac38ac9ba936995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bb18a3351cde0d151dc453c8ac38ac9ba936995"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/762031177e3e03ef37f8c1fb6c928bed3538bf7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/762031177e3e03ef37f8c1fb6c928bed3538bf7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/762031177e3e03ef37f8c1fb6c928bed3538bf7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/762031177e3e03ef37f8c1fb6c928bed3538bf7e/comments", "author": null, "committer": null, "parents": [{"sha": "da15c1cd888129d937bd2ddaff35803bfbf56676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da15c1cd888129d937bd2ddaff35803bfbf56676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da15c1cd888129d937bd2ddaff35803bfbf56676"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "6cb9c38e63d67f43a1a64257d532946ef230f2ef", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 32, "deletions": 20, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/762031177e3e03ef37f8c1fb6c928bed3538bf7e/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/762031177e3e03ef37f8c1fb6c928bed3538bf7e/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=762031177e3e03ef37f8c1fb6c928bed3538bf7e", "patch": "@@ -873,8 +873,7 @@ package body Errout is\n       Errors.Table (Cur_Msg).Warn     := Is_Warning_Msg;\n       Errors.Table (Cur_Msg).Style    := Is_Style_Msg;\n       Errors.Table (Cur_Msg).Serious  := Is_Serious_Error;\n-      Errors.Table (Cur_Msg).Uncond   := Is_Unconditional_Msg\n-                                           or Is_Warning_Msg;\n+      Errors.Table (Cur_Msg).Uncond   := Is_Unconditional_Msg;\n       Errors.Table (Cur_Msg).Msg_Cont := Continuation;\n       Errors.Table (Cur_Msg).Deleted  := False;\n \n@@ -971,9 +970,9 @@ package body Errout is\n                          or\n                        Errors.Table (Prev_Msg).Style)\n                  or else\n-                       (Errors.Table (Cur_Msg).Warn\n+                      (Errors.Table (Cur_Msg).Warn\n                          or\n-                        Errors.Table (Cur_Msg).Style)\n+                       Errors.Table (Cur_Msg).Style)\n                then\n                   --  All tests passed, delete the message by simply returning\n                   --  without any further processing.\n@@ -1178,7 +1177,7 @@ package body Errout is\n    -- Finalize --\n    --------------\n \n-   procedure Finalize is\n+   procedure Finalize (Last_Call : Boolean) is\n       Cur : Error_Msg_Id;\n       Nxt : Error_Msg_Id;\n       F   : Error_Msg_Id;\n@@ -1218,18 +1217,14 @@ package body Errout is\n          Cur := Errors.Table (Cur).Next;\n       end loop;\n \n-      --  Remaining processing should only be done once in the case where\n-      --  Finalize has been called more than once.\n+      Finalize_Called := True;\n \n-      if Finalize_Called then\n-         return;\n-      else\n-         Finalize_Called := True;\n-      end if;\n-\n-      --  Check consistency of specific warnings (may add warnings)\n+      --  Check consistency of specific warnings (may add warnings). We only\n+      --  do this on the last call, after all possible warnings are posted.\n \n-      Validate_Specific_Warnings (Error_Msg'Access);\n+      if Last_Call then\n+         Validate_Specific_Warnings (Error_Msg'Access);\n+      end if;\n    end Finalize;\n \n    ----------------\n@@ -1879,8 +1874,11 @@ package body Errout is\n          S := S + 1;\n       end loop;\n \n+      --  If we have output a source line, then add the line terminator, with\n+      --  training spaces preserved (so we output the line exactly as input).\n+\n       if Line_Number_Output then\n-         Write_Eol;\n+         Write_Eol_Keep_Blanks;\n       end if;\n    end Output_Source_Line;\n \n@@ -1893,8 +1891,7 @@ package body Errout is\n       function Check_For_Warning (N : Node_Id) return Traverse_Result;\n       --  This function checks one node for a possible warning message\n \n-      function Check_All_Warnings is new\n-        Traverse_Func (Check_For_Warning);\n+      function Check_All_Warnings is new Traverse_Func (Check_For_Warning);\n       --  This defines the traversal operation\n \n       -----------------------\n@@ -1916,11 +1913,26 @@ package body Errout is\n          function To_Be_Removed (E : Error_Msg_Id) return Boolean is\n          begin\n             if E /= No_Error_Msg\n-              and then Errors.Table (E).Optr = Loc\n-              and then (Errors.Table (E).Warn or Errors.Table (E).Style)\n+\n+               --  Don't remove if location does not match\n+\n+               and then Errors.Table (E).Optr = Loc\n+\n+               --  Don't remove if not warning message. Note that we do not\n+               --  remove style messages here. They are warning messages but\n+               --  not ones we want removed in this context.\n+\n+               and then Errors.Table (E).Warn\n+\n+               --  Don't remove unconditional messages\n+\n+               and then not Errors.Table (E).Uncond\n             then\n                Warnings_Detected := Warnings_Detected - 1;\n                return True;\n+\n+            --  No removal required\n+\n             else\n                return False;\n             end if;"}]}