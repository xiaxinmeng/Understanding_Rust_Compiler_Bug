{"sha": "4caddf0b18beea75c69f58804f9f7263733ac37b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNhZGRmMGIxOGJlZWE3NWM2OWY1ODgwNGY5ZjcyNjM3MzNhYzM3Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-11-27T10:43:01Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-11-27T10:43:01Z"}, "message": "compat.exp (compat-obj): New xfaildata parameter.\n\n\t* lib/compat.exp (compat-obj): New xfaildata parameter.\n\tUse it to set compiler_conditional_xfail_data before compiling.\n\t(compat-get-options): Handle dg-xfail-if.\n\t(compat-execute): Retrieve XFAIL data and pass them to compat-obj.\n\t* gcc.dg/compat/vector-1_x.c: XFAIL on SPARC.\n\t* gcc.dg/compat/vector-1_y.c: Likewise.\n\t* gcc.dg/compat/vector-2_x.c: Likewise.\n\t* gcc.dg/compat/vector-2_y.c: Likewise.\n\nFrom-SVN: r73989", "tree": {"sha": "286676772e0e8a9072afb6f1589ef87abcbf5d91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/286676772e0e8a9072afb6f1589ef87abcbf5d91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4caddf0b18beea75c69f58804f9f7263733ac37b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4caddf0b18beea75c69f58804f9f7263733ac37b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4caddf0b18beea75c69f58804f9f7263733ac37b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4caddf0b18beea75c69f58804f9f7263733ac37b/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4eec34e5a495ea71ff735c58e0ac6030a6db553c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eec34e5a495ea71ff735c58e0ac6030a6db553c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eec34e5a495ea71ff735c58e0ac6030a6db553c"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "cd7670f26c273b66539d01ac307e61e0a62bdea4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4caddf0b18beea75c69f58804f9f7263733ac37b", "patch": "@@ -1,3 +1,14 @@\n+2003-11-27  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* lib/compat.exp (compat-obj): New xfaildata parameter.\n+\tUse it to set compiler_conditional_xfail_data before compiling.\n+\t(compat-get-options): Handle dg-xfail-if.\n+\t(compat-execute): Retrieve XFAIL data and pass them to compat-obj.\n+\t* gcc.dg/compat/vector-1_x.c: XFAIL on SPARC.\n+\t* gcc.dg/compat/vector-1_y.c: Likewise.\n+\t* gcc.dg/compat/vector-2_x.c: Likewise.\n+\t* gcc.dg/compat/vector-2_y.c: Likewise.\n+\n 2003-11-27  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* g++.dg/opt/reg-stack4.C: New test."}, {"sha": "c7503e5d787d024639ec2b94d0cab05a1ad49b7f", "filename": "gcc/testsuite/gcc.dg/compat/vector-1_x.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_x.c?ref=4caddf0b18beea75c69f58804f9f7263733ac37b", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-w\" } */\n+/* { dg-xfail-if \"PR target/12916\" \"sparc*-*-*\" \"*\" \"\" } */\n \n #include \"compat-common.h\"\n #include \"vector-defs.h\""}, {"sha": "8aa21e13e6c90eccb9b59444df479138e847fae5", "filename": "gcc/testsuite/gcc.dg/compat/vector-1_y.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_y.c?ref=4caddf0b18beea75c69f58804f9f7263733ac37b", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-w\" } */\n+/* { dg-xfail-if \"PR target/12916\" \"sparc*-*-*\" \"*\" \"\" } */\n \n #include \"compat-common.h\"\n #include \"vector-defs.h\""}, {"sha": "9aa49c0622f2bbbeff9e95752d7df49dd4603de6", "filename": "gcc/testsuite/gcc.dg/compat/vector-2_x.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_x.c?ref=4caddf0b18beea75c69f58804f9f7263733ac37b", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-w\" } */\n+/* { dg-xfail-if \"PR target/12916\" \"sparc*-*-*\" \"*\" \"\" } */\n \n #include \"compat-common.h\"\n #include \"vector-defs.h\""}, {"sha": "283b149a20748e9823e6f71d23a6763508655a01", "filename": "gcc/testsuite/gcc.dg/compat/vector-2_y.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_y.c?ref=4caddf0b18beea75c69f58804f9f7263733ac37b", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-w\" } */\n+/* { dg-xfail-if \"PR target/12916\" \"sparc*-*-*\" \"*\" \"\" } */\n \n #include \"compat-common.h\"\n #include \"vector-defs.h\""}, {"sha": "bf40c6eee39820a24a31ca2b7eda0fbb75fcbd7a", "filename": "gcc/testsuite/lib/compat.exp", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2Flib%2Fcompat.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4caddf0b18beea75c69f58804f9f7263733ac37b/gcc%2Ftestsuite%2Flib%2Fcompat.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fcompat.exp?ref=4caddf0b18beea75c69f58804f9f7263733ac37b", "patch": "@@ -50,6 +50,7 @@ if ![info exists COMPAT_OPTIONS] {\n set option_list $COMPAT_OPTIONS\n \n load_lib dg.exp\n+load_lib gcc-dg.exp\n \n #\n # compat-obj -- compile to an object file\n@@ -59,15 +60,18 @@ load_lib dg.exp\n # OPTALL is the list of compiler options to use with all tests\n # OPTFILE is the list of compiler options to use with this file\n # OPTSTR is the options to print with test messages\n+# XFAILDATA is the xfail data to be passed to the compiler\n #\n-proc compat-obj { source dest optall optfile optstr } {\n+proc compat-obj { source dest optall optfile optstr xfaildata } {\n     global testcase\n     global tool\n+    global compiler_conditional_xfail_data\n \n     # Set up the options for compiling this file.\n     set options \"\"\n     lappend options \"additional_flags=$optfile $optall\"\n \n+    set compiler_conditional_xfail_data $xfaildata\n     set comp_output [${tool}_target_compile \"$source\" \"$dest\" object $options]\n     ${tool}_check_compile \"$testcase $dest compile\" $optstr $dest $comp_output\n }\n@@ -120,7 +124,7 @@ proc compat-run { testname objlist dest optall optfile optstr } {\n }\n \n #\n-# compat-flags -- get special tool flags to use for a source file\n+# compat-get-options -- get special tool flags to use for a source file\n #\n # SRC is the full patchname of the source file.\n # The result is a list of options to use.\n@@ -138,10 +142,15 @@ proc compat-get-options { src } {\n \n     # dg-options sets a variable called dg-extra-tool-flags.\n     set dg-extra-tool-flags \"\"\n+\n+    # dg-xfail-if sets compiler_conditional_xfail_data.\n+    global compiler_conditional_xfail_data\n+    set compiler_conditional_xfail_data \"\"\n+\n     set tmp [dg-get-options $src]\n     foreach op $tmp {\n \tset cmd [lindex $op 0]\n-\tif ![string compare \"dg-options\" $cmd] {\n+\tif { ![string compare \"dg-options\" $cmd] || ![string compare \"dg-xfail-if\" $cmd] } {\n \t    set status [catch \"$op\" errmsg]\n \t    if { $status != 0 } {\n \t\tperror \"src: $errmsg for \\\"$op\\\"\\n\"\n@@ -176,6 +185,7 @@ proc compat-execute { src1 sid use_alt } {\n     global verbose\n     global testcase\n     global gluefile\n+    global compiler_conditional_xfail_data\n \n     # Set up the names of the other source files.\n     regsub \"_main.*\" $src1 \"\" base\n@@ -188,7 +198,9 @@ proc compat-execute { src1 sid use_alt } {\n     # extra flags in *_main.* are also used for linking.\n     set extra_flags_1 [compat-get-options $src1]\n     set extra_flags_2 [compat-get-options $src2]\n+    set compile_xfail_2 $compiler_conditional_xfail_data\n     set extra_flags_3 [compat-get-options $src3]\n+    set compile_xfail_3 $compiler_conditional_xfail_data\n \n     # Define the names of the object files.\n     regsub \"sid\" \"sid_main_tst.o\" $sid obj1\n@@ -243,15 +255,15 @@ proc compat-execute { src1 sid use_alt } {\n \t# later.  Skip this if we don't have an alternate compiler.\n \tif { $use_alt != 0 } then {\n \t    compat-use-alt-compiler\n-\t    compat-obj \"$src2\" \"$obj2_alt\" $alt_option $extra_flags_2 $optstr\n-\t    compat-obj \"$src3\" \"$obj3_alt\" $alt_option $extra_flags_3 $optstr\n+\t    compat-obj \"$src2\" \"$obj2_alt\" $alt_option $extra_flags_2 $optstr $compile_xfail_2\n+\t    compat-obj \"$src3\" \"$obj3_alt\" $alt_option $extra_flags_3 $optstr $compile_xfail_3\n \t}\n \n \t# Compile pieces with the compiler under test.\n \tcompat-use-tst-compiler\n-\tcompat-obj \"$src1\" \"$obj1\" $tst_option $extra_flags_1 $optstr\n-\tcompat-obj \"$src2\" \"$obj2_tst\" $tst_option $extra_flags_2 $optstr\n-\tcompat-obj \"$src3\" \"$obj3_tst\" $tst_option $extra_flags_3 $optstr\n+\tcompat-obj \"$src1\" \"$obj1\" $tst_option $extra_flags_1 $optstr \"\"\n+\tcompat-obj \"$src2\" \"$obj2_tst\" $tst_option $extra_flags_2 $optstr $compile_xfail_2\n+\tcompat-obj \"$src3\" \"$obj3_tst\" $tst_option $extra_flags_3 $optstr $compile_xfail_3\n \n \t# Link (using the compiler under test), run, and clean up tests.\n \tcompat-run \"${obj2_tst}-${obj3_tst}\" \\"}]}