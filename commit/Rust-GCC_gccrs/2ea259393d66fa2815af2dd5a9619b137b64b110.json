{"sha": "2ea259393d66fa2815af2dd5a9619b137b64b110", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVhMjU5MzkzZDY2ZmEyODE1YWYyZGQ1YTk2MTliMTM3YjY0YjExMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2009-06-23T22:33:17Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2009-06-23T22:33:17Z"}, "message": "shared_ptr.h: Do not swap rvalues.\n\n2009-06-23  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\t* include/bits/shared_ptr.h: Do not swap rvalues.\n\t* testsuite/20_util/owner_less/cmp.cc: Add missing test variables.\n\t* testsuite/20_util/shared_ptr/comparison/cmp.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/comparison/less.cc: Likewise.\n\t* testsuite/20_util/weak_ptr/observers/owner_before.cc: Likewise.\n\t* testsuite/20_util/tuple/swap.cc: Likewise.\n\nFrom-SVN: r148880", "tree": {"sha": "d9b4e4b65c4bbd99a9ff40405dd86b65b041294b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9b4e4b65c4bbd99a9ff40405dd86b65b041294b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ea259393d66fa2815af2dd5a9619b137b64b110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ea259393d66fa2815af2dd5a9619b137b64b110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ea259393d66fa2815af2dd5a9619b137b64b110", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ea259393d66fa2815af2dd5a9619b137b64b110/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73267076729bcff9502fdc86f6341de157395af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73267076729bcff9502fdc86f6341de157395af5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73267076729bcff9502fdc86f6341de157395af5"}], "stats": {"total": 91, "additions": 53, "deletions": 38}, "files": [{"sha": "1a589dda0da42e7215b9e3caa68db4d259c35fba", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2ea259393d66fa2815af2dd5a9619b137b64b110", "patch": "@@ -1,3 +1,12 @@\n+2009-06-23  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/bits/shared_ptr.h: Do not swap rvalues.\n+\t* testsuite/20_util/owner_less/cmp.cc: Add missing test variables.\n+\t* testsuite/20_util/shared_ptr/comparison/cmp.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/comparison/less.cc: Likewise.\n+\t* testsuite/20_util/weak_ptr/observers/owner_before.cc: Likewise.\n+\t* testsuite/20_util/tuple/swap.cc: Likewise.\n+\n 2009-06-23  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/debug/macros.h: Replace @tbd with valid doxygen tag @todo."}, {"sha": "81bef58594043697b4e75e561babcb14878e11a2", "filename": "libstdc++-v3/include/bits/shared_ptr.h", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr.h?ref=2ea259393d66fa2815af2dd5a9619b137b64b110", "patch": "@@ -828,7 +828,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       { return _M_refcount._M_get_use_count(); }\n \n       void\n-      swap(__shared_ptr<_Tp, _Lp>&& __other) // never throws\n+      swap(__shared_ptr<_Tp, _Lp>& __other) // never throws\n       {\n \tstd::swap(_M_ptr, __other._M_ptr);\n \t_M_refcount._M_swap(__other._M_refcount);\n@@ -938,16 +938,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     swap(__shared_ptr<_Tp, _Lp>& __a, __shared_ptr<_Tp, _Lp>& __b)\n     { __a.swap(__b); }\n \n-  template<typename _Tp, _Lock_policy _Lp>\n-    inline void\n-    swap(__shared_ptr<_Tp, _Lp>&& __a, __shared_ptr<_Tp, _Lp>& __b)\n-    { __a.swap(__b); }\n-\n-  template<typename _Tp, _Lock_policy _Lp>\n-    inline void\n-    swap(__shared_ptr<_Tp, _Lp>& __a, __shared_ptr<_Tp, _Lp>&& __b)\n-    { __a.swap(__b); }\n-\n   // 2.2.3.9 shared_ptr casts\n   /** @warning The seemingly equivalent\n    *           <code>shared_ptr<_Tp, _Lp>(static_cast<_Tp*>(__r.get()))</code>\n@@ -1367,16 +1357,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     swap(shared_ptr<_Tp>& __a, shared_ptr<_Tp>& __b)\n     { __a.swap(__b); }\n \n-  template<typename _Tp>\n-    inline void\n-    swap(shared_ptr<_Tp>&& __a, shared_ptr<_Tp>& __b)\n-    { __a.swap(__b); }\n-\n-  template<typename _Tp>\n-    inline void\n-    swap(shared_ptr<_Tp>& __a, shared_ptr<_Tp>&& __b)\n-    { __a.swap(__b); }\n-\n   // 20.8.13.2.10 shared_ptr casts.\n   template<typename _Tp, typename _Tp1>\n     inline shared_ptr<_Tp>"}, {"sha": "e1524cc18510d5b917306465a4a785ca29b07576", "filename": "libstdc++-v3/testsuite/20_util/owner_less/cmp.cc", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fcmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fcmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fowner_less%2Fcmp.cc?ref=2ea259393d66fa2815af2dd5a9619b137b64b110", "patch": "@@ -32,23 +32,27 @@ struct B { A a[2]; };\n int\n test01()\n {\n-    // test empty shared_ptrs compare equivalent\n-    std::owner_less<std::shared_ptr<A>> less;\n-    std::owner_less<std::weak_ptr<A>> wless;\n-    std::shared_ptr<A> p1;\n-    std::shared_ptr<A> p2;\n-    VERIFY( !less(p1, p2) && !less(p2, p1) );\n-    std::weak_ptr<A> p3;\n-    VERIFY( !less(p1, p3) && !less(p3, p1) );\n-    VERIFY( !wless(p1, p3) && !wless(p3, p1) );\n-    return 0;\n+  bool test __attribute__((unused)) = true;\n+\n+  // test empty shared_ptrs compare equivalent\n+  std::owner_less<std::shared_ptr<A>> less;\n+  std::owner_less<std::weak_ptr<A>> wless;\n+  std::shared_ptr<A> p1;\n+  std::shared_ptr<A> p2;\n+  VERIFY( !less(p1, p2) && !less(p2, p1) );\n+  std::weak_ptr<A> p3;\n+  VERIFY( !less(p1, p3) && !less(p3, p1) );\n+  VERIFY( !wless(p1, p3) && !wless(p3, p1) );\n+  return 0;\n }\n \n \n // Construction from pointer\n int\n test02()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   std::owner_less<std::shared_ptr<A>> less;\n   std::owner_less<std::weak_ptr<A>> wless;\n \n@@ -80,6 +84,8 @@ test02()\n int\n test03()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   std::owner_less<std::shared_ptr<A>> less;\n   std::owner_less<std::weak_ptr<A>> wless;\n \n@@ -102,6 +108,8 @@ test03()\n int\n test04()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   std::owner_less<std::shared_ptr<A>> less;\n \n   std::shared_ptr<A> a[3];"}, {"sha": "9991fa761bc02d74ac5a819dcbe5dd63bff5d4d2", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/comparison/cmp.cc", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fcmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fcmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fcmp.cc?ref=2ea259393d66fa2815af2dd5a9619b137b64b110", "patch": "@@ -36,20 +36,24 @@ struct B : A\n int\n test01()\n {\n-    // test empty shared_ptrs compare equivalent\n-    std::shared_ptr<A> p1;\n-    std::shared_ptr<B> p2;\n-    VERIFY( p1 == p2 );\n-    VERIFY( !(p1 != p2) );\n-    VERIFY( !(p1 < p2) && !(p2 < p1) );\n-    return 0;\n+  bool test __attribute__((unused)) = true;\n+\n+  // test empty shared_ptrs compare equivalent\n+  std::shared_ptr<A> p1;\n+  std::shared_ptr<B> p2;\n+  VERIFY( p1 == p2 );\n+  VERIFY( !(p1 != p2) );\n+  VERIFY( !(p1 < p2) && !(p2 < p1) );\n+  return 0;\n }\n \n \n // Construction from pointer\n int\n test02()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   std::shared_ptr<A> A_default;\n \n   std::shared_ptr<A> A_from_A(new A);\n@@ -78,6 +82,8 @@ test02()\n int\n test03()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   std::shared_ptr<A> p1;\n \n   // check other operators are defined"}, {"sha": "b51b222a028b19bc69301be14ff64c021eccf2dd", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/comparison/less.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fless.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fless.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcomparison%2Fless.cc?ref=2ea259393d66fa2815af2dd5a9619b137b64b110", "patch": "@@ -41,6 +41,8 @@ namespace std\n int\n test01()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   std::less<std::shared_ptr<A>> less;\n   // test empty shared_ptrs compare equivalent\n   std::shared_ptr<A> p1;\n@@ -55,6 +57,8 @@ test01()\n int\n test02()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   std::less<std::shared_ptr<A>> less;\n \n   std::shared_ptr<A> empty;\n@@ -77,6 +81,8 @@ test02()\n int\n test03()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   std::less<std::shared_ptr<A>> less;\n \n   A a;"}, {"sha": "6dab446bfe98c4e6af301b52fd1610cd2a888c38", "filename": "libstdc++-v3/testsuite/20_util/tuple/swap.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fswap.cc?ref=2ea259393d66fa2815af2dd5a9619b137b64b110", "patch": "@@ -56,6 +56,8 @@ make_move_only (int i)\n \n void test01()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   std::tuple<> t1, t2;\n   std::swap(t1, t2);\n "}, {"sha": "1081f93d338979df1fb96e0c48e3c462f07bb004", "filename": "libstdc++-v3/testsuite/20_util/weak_ptr/observers/owner_before.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fobservers%2Fowner_before.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ea259393d66fa2815af2dd5a9619b137b64b110/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fobservers%2Fowner_before.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fobservers%2Fowner_before.cc?ref=2ea259393d66fa2815af2dd5a9619b137b64b110", "patch": "@@ -30,6 +30,8 @@ struct B { };\n int\n test01()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   // test empty weak_ptrs compare equivalent\n   std::weak_ptr<A> p1;\n   std::weak_ptr<B> p2;\n@@ -45,6 +47,8 @@ test01()\n int\n test02()\n {\n+  bool test __attribute__((unused)) = true;\n+\n   std::shared_ptr<A> a0;\n   std::weak_ptr<A> w0(a0);\n "}]}