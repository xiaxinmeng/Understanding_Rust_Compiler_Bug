{"sha": "a26ff5b54967f1e7873a8e34c4194ffe568cc34d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI2ZmY1YjU0OTY3ZjFlNzg3M2E4ZTM0YzQxOTRmZmU1NjhjYzM0ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-11T12:56:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-11T12:56:49Z"}, "message": "dwarf2out.c (DEBUG_STR_OFFSETS_SECTION): Remove conditional.\n\n2016-10-11  Richard Biener  <rguenther@suse.de>\n\n\t* dwarf2out.c (DEBUG_STR_OFFSETS_SECTION): Remove conditional.\n\t(init_sections_and_labels): Use DEBUG_DWO_STR_OFFSETS_SECTION.\n\t(verify_die): New function.\n\t(dwarf2out_finish): Call it.\n\t(output_line_info): Handle case of -gsplit-dwarf without\n\tDWARF2_ASM_LINE_DEBUG_INFO.\n\nFrom-SVN: r240992", "tree": {"sha": "8a7f13b6359228f55de8279a7de5f16405072ea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a7f13b6359228f55de8279a7de5f16405072ea3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a26ff5b54967f1e7873a8e34c4194ffe568cc34d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26ff5b54967f1e7873a8e34c4194ffe568cc34d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a26ff5b54967f1e7873a8e34c4194ffe568cc34d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26ff5b54967f1e7873a8e34c4194ffe568cc34d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b13ff1f5e247e074631f9dcf2fd25f9b683016f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b13ff1f5e247e074631f9dcf2fd25f9b683016f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b13ff1f5e247e074631f9dcf2fd25f9b683016f5"}], "stats": {"total": 71, "additions": 61, "deletions": 10}, "files": [{"sha": "3c15156a402c0ff78075e86d5dd097f3df7997ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26ff5b54967f1e7873a8e34c4194ffe568cc34d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26ff5b54967f1e7873a8e34c4194ffe568cc34d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a26ff5b54967f1e7873a8e34c4194ffe568cc34d", "patch": "@@ -1,3 +1,12 @@\n+2016-10-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* dwarf2out.c (DEBUG_STR_OFFSETS_SECTION): Remove conditional.\n+\t(init_sections_and_labels): Use DEBUG_DWO_STR_OFFSETS_SECTION.\n+\t(verify_die): New function.\n+\t(dwarf2out_finish): Call it.\n+\t(output_line_info): Handle case of -gsplit-dwarf without\n+\tDWARF2_ASM_LINE_DEBUG_INFO.\n+\n 2016-10-11  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/77931"}, {"sha": "3f7833ff9cd3c0dd981e93b82379aa94c743a580", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 52, "deletions": 10, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26ff5b54967f1e7873a8e34c4194ffe568cc34d/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26ff5b54967f1e7873a8e34c4194ffe568cc34d/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a26ff5b54967f1e7873a8e34c4194ffe568cc34d", "patch": "@@ -3538,12 +3538,11 @@ new_addr_loc_descr (rtx addr, enum dtprel_bool dtprel)\n   ((debug_generate_pub_sections == 2) \\\n    ? \".debug_gnu_pubtypes\" : \".debug_pubtypes\")\n #endif\n-#define DEBUG_NORM_STR_OFFSETS_SECTION \".debug_str_offsets\"\n-#define DEBUG_DWO_STR_OFFSETS_SECTION \".debug_str_offsets.dwo\"\n #ifndef DEBUG_STR_OFFSETS_SECTION\n-#define DEBUG_STR_OFFSETS_SECTION                                       \\\n-  (!dwarf_split_debug_info                                              \\\n-   ? (DEBUG_NORM_STR_OFFSETS_SECTION) : (DEBUG_DWO_STR_OFFSETS_SECTION))\n+#define DEBUG_STR_OFFSETS_SECTION \".debug_str_offsets\"\n+#endif\n+#ifndef DEBUG_DWO_STR_OFFSETS_SECTION\n+#define DEBUG_DWO_STR_OFFSETS_SECTION \".debug_str_offsets.dwo\"\n #endif\n #ifndef DEBUG_STR_DWO_SECTION\n #define DEBUG_STR_DWO_SECTION   \".debug_str.dwo\"\n@@ -5835,6 +5834,41 @@ debug_dwarf (void)\n   print_die (comp_unit_die (), stderr);\n }\n \n+/* Verify the DIE tree structure.  */\n+\n+DEBUG_FUNCTION void\n+verify_die (dw_die_ref die)\n+{\n+  gcc_assert (!die->die_mark);\n+  if (die->die_parent == NULL\n+      && die->die_sib == NULL)\n+    return;\n+  /* Verify the die_sib list is cyclic.  */\n+  dw_die_ref x = die;\n+  do\n+    {\n+      x->die_mark = 1;\n+      x = x->die_sib;\n+    }\n+  while (x && !x->die_mark);\n+  gcc_assert (x == die);\n+  x = die;\n+  do\n+    {\n+      /* Verify all dies have the same parent.  */\n+      gcc_assert (x->die_parent == die->die_parent);\n+      if (x->die_child)\n+\t{\n+\t  /* Verify the child has the proper parent and recurse.  */\n+\t  gcc_assert (x->die_child->die_parent == x);\n+\t  verify_die (x->die_child);\n+\t}\n+      x->die_mark = 0;\n+      x = x->die_sib;\n+    }\n+  while (x && x->die_mark);\n+}\n+\n /* Sanity checks on DIEs.  */\n \n static void\n@@ -10710,17 +10744,18 @@ output_one_line_info_table (dw_line_info_table *table)\n static void\n output_line_info (bool prologue_only)\n {\n+  static unsigned int generation;\n   char l1[MAX_ARTIFICIAL_LABEL_BYTES], l2[MAX_ARTIFICIAL_LABEL_BYTES];\n   char p1[MAX_ARTIFICIAL_LABEL_BYTES], p2[MAX_ARTIFICIAL_LABEL_BYTES];\n   /* We don't support DWARFv5 line tables yet.  */\n   int ver = dwarf_version < 5 ? dwarf_version : 4;\n   bool saw_one = false;\n   int opc;\n \n-  ASM_GENERATE_INTERNAL_LABEL (l1, LINE_NUMBER_BEGIN_LABEL, 0);\n-  ASM_GENERATE_INTERNAL_LABEL (l2, LINE_NUMBER_END_LABEL, 0);\n-  ASM_GENERATE_INTERNAL_LABEL (p1, LN_PROLOG_AS_LABEL, 0);\n-  ASM_GENERATE_INTERNAL_LABEL (p2, LN_PROLOG_END_LABEL, 0);\n+  ASM_GENERATE_INTERNAL_LABEL (l1, LINE_NUMBER_BEGIN_LABEL, generation);\n+  ASM_GENERATE_INTERNAL_LABEL (l2, LINE_NUMBER_END_LABEL, generation);\n+  ASM_GENERATE_INTERNAL_LABEL (p1, LN_PROLOG_AS_LABEL, generation);\n+  ASM_GENERATE_INTERNAL_LABEL (p2, LN_PROLOG_END_LABEL, generation++);\n \n   if (!XCOFF_DEBUGGING_INFO)\n     {\n@@ -25590,7 +25625,7 @@ init_sections_and_labels (void)\n \t\t       SECTION_DEBUG | SECTION_EXCLUDE, NULL);\n       ASM_GENERATE_INTERNAL_LABEL (debug_skeleton_line_section_label,\n                                    DEBUG_SKELETON_LINE_SECTION_LABEL, 0);\n-      debug_str_offsets_section = get_section (DEBUG_STR_OFFSETS_SECTION,\n+      debug_str_offsets_section = get_section (DEBUG_DWO_STR_OFFSETS_SECTION,\n                                                SECTION_DEBUG | SECTION_EXCLUDE,\n                                                NULL);\n       ASM_GENERATE_INTERNAL_LABEL (debug_skeleton_info_section_label,\n@@ -27844,6 +27879,13 @@ dwarf2out_finish (const char *)\n   /* Flush out any latecomers to the limbo party.  */\n   flush_limbo_die_list ();\n \n+  if (flag_checking)\n+    {\n+      verify_die (comp_unit_die ());\n+      for (limbo_die_node *node = cu_die_list; node; node = node->next)\n+\tverify_die (node->die);\n+    }\n+\n   /* We shouldn't have any symbols with delayed asm names for\n      DIEs generated after early finish.  */\n   gcc_assert (deferred_asm_name == NULL);"}]}