{"sha": "9591220667b495ebc8bedd25ce2b159d6d4ab382", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5MTIyMDY2N2I0OTVlYmM4YmVkZDI1Y2UyYjE1OWQ2ZDRhYjM4Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-18T11:48:25Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-05-18T11:48:25Z"}, "message": "(movstrict*): Changed into define_expands.\n\n(movstrict*): Changed into define_expands.  Split insns into m68k and\ncoldfire specific versions with appropriate constraints.\n\nFrom-SVN: r14080", "tree": {"sha": "376cbf72de27a65c30ebf892e940d235983b03ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/376cbf72de27a65c30ebf892e940d235983b03ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9591220667b495ebc8bedd25ce2b159d6d4ab382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9591220667b495ebc8bedd25ce2b159d6d4ab382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9591220667b495ebc8bedd25ce2b159d6d4ab382", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9591220667b495ebc8bedd25ce2b159d6d4ab382/comments", "author": null, "committer": null, "parents": [{"sha": "d96b26312b1cf791ea7ff2a2be471b71e6130947", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d96b26312b1cf791ea7ff2a2be471b71e6130947", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d96b26312b1cf791ea7ff2a2be471b71e6130947"}], "stats": {"total": 54, "additions": 30, "deletions": 24}, "files": [{"sha": "938b12b2e48446750954dffeee115287a2a247e2", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9591220667b495ebc8bedd25ce2b159d6d4ab382/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9591220667b495ebc8bedd25ce2b159d6d4ab382/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=9591220667b495ebc8bedd25ce2b159d6d4ab382", "patch": "@@ -958,20 +958,23 @@\n   \"TARGET_5200\"\n   \"* return output_move_himode (operands);\")\n \n-(define_insn \"movstricthi\"\n+(define_expand \"movstricthi\"\n+  [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"\"))\n+\t(match_operand:HI 1 \"general_operand\" \"\"))]\n+  \"\"\n+  \"\")\n+\n+(define_insn \"\"\n   [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+dm\"))\n \t(match_operand:HI 1 \"general_operand\" \"rmn\"))]\n-  \"\"\n-  \"*\n-{\n-  if (operands[1] == const0_rtx\n-      /* clr insns on 68000 read before writing.\n-\t This isn't so on the 68010, but we have no TARGET_68010.  */\n-      && ((TARGET_68020 || TARGET_5200)\n-\t  || !(GET_CODE (operands[0]) == MEM && MEM_VOLATILE_P (operands[0]))))\n-    return \\\"clr%.w %0\\\";\n-  return \\\"move%.w %1,%0\\\";\n-}\")\n+  \"!TARGET_5200\"\n+  \"* return output_move_stricthi (operands);\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:HI 0 \"general_operand\" \"+d,m\"))\n+\t(match_operand:HI 1 \"general_operand\" \"rmn,r\"))]\n+  \"TARGET_5200\"\n+  \"* return output_move_stricthi (operands);\")\n \n (define_expand \"movqi\"\n   [(set (match_operand:QI 0 \"general_operand\" \"\")\n@@ -991,20 +994,23 @@\n   \"TARGET_5200\"\n   \"* return output_move_qimode (operands);\")\n \n-(define_insn \"movstrictqi\"\n+(define_expand \"movstrictqi\"\n+  [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"\"))\n+\t(match_operand:QI 1 \"general_operand\" \"\"))]\n+  \"\"\n+  \"\")\n+\n+(define_insn \"\"\n   [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"+dm\"))\n \t(match_operand:QI 1 \"general_operand\" \"dmn\"))]\n-  \"\"\n-  \"*\n-{\n-  if (operands[1] == const0_rtx\n-      /* clr insns on 68000 read before writing.\n-         This isn't so on the 68010, but we have no TARGET_68010.  */\n-      && ((TARGET_68020 || TARGET_5200)\n-          || !(GET_CODE (operands[0]) == MEM && MEM_VOLATILE_P (operands[0]))))\n-    return \\\"clr%.b %0\\\";\n-  return \\\"move%.b %1,%0\\\";\n-}\")\n+  \"!TARGET_5200\"\n+  \"* return output_move_strictqi (operands);\")\n+\n+(define_insn \"\"\n+  [(set (strict_low_part (match_operand:QI 0 \"general_operand\" \"+d,m\"))\n+\t(match_operand:QI 1 \"general_operand\" \"dmn,d\"))]\n+  \"TARGET_5200\"\n+  \"* return output_move_strictqi (operands);\")\n \n (define_expand \"movsf\"\n   [(set (match_operand:SF 0 \"general_operand\" \"\")"}]}