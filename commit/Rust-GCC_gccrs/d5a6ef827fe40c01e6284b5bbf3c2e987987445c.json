{"sha": "d5a6ef827fe40c01e6284b5bbf3c2e987987445c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVhNmVmODI3ZmU0MGMwMWU2Mjg0YjViYmYzYzJlOTg3OTg3NDQ1Yw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2013-07-22T10:18:52Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2013-07-22T10:18:52Z"}, "message": "avr.c (avr_out_xload): No SBIS around LPM so that instruction sequence is 1 byte shorter.\n\n\t* config/avr/avr.c (avr_out_xload): No SBIS around LPM so that\n\tinstruction sequence is 1 byte shorter.\n\nFrom-SVN: r201121", "tree": {"sha": "f4b89b6167c74cc0dbea087a4cbcfc74d4df3979", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4b89b6167c74cc0dbea087a4cbcfc74d4df3979"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5a6ef827fe40c01e6284b5bbf3c2e987987445c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5a6ef827fe40c01e6284b5bbf3c2e987987445c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5a6ef827fe40c01e6284b5bbf3c2e987987445c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5a6ef827fe40c01e6284b5bbf3c2e987987445c/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14ab1eaf2a303262fb2b11ee456eb5b984b83c65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14ab1eaf2a303262fb2b11ee456eb5b984b83c65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14ab1eaf2a303262fb2b11ee456eb5b984b83c65"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "98cc565a3b381aee25633b3b7b8916f51f2b8ffc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a6ef827fe40c01e6284b5bbf3c2e987987445c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a6ef827fe40c01e6284b5bbf3c2e987987445c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5a6ef827fe40c01e6284b5bbf3c2e987987445c", "patch": "@@ -1,3 +1,8 @@\n+2013-07-22  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.c (avr_out_xload): No SBIS around LPM so that\n+\tinstruction sequence is 1 byte shorter.\n+\n 2013-07-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (nonlocal_goto_receiver): Delete insn if"}, {"sha": "14a3eee7c726eab64363e8e3b816f9d757604cea", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5a6ef827fe40c01e6284b5bbf3c2e987987445c/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5a6ef827fe40c01e6284b5bbf3c2e987987445c/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=d5a6ef827fe40c01e6284b5bbf3c2e987987445c", "patch": "@@ -3079,14 +3079,10 @@ avr_out_xload (rtx insn ATTRIBUTE_UNUSED, rtx *op, int *plen)\n   xop[2] = lpm_addr_reg_rtx;\n   xop[3] = AVR_HAVE_LPMX ? op[0] : lpm_reg_rtx;\n \n-  if (plen)\n-    *plen = 0;\n+  avr_asm_len (AVR_HAVE_LPMX ? \"lpm %3,%a2\" : \"lpm\", xop, plen, -1);\n \n   avr_asm_len (\"sbrc %1,7\" CR_TAB\n-               \"ld %3,%a2\" CR_TAB\n-               \"sbrs %1,7\", xop, plen, 3);\n-\n-  avr_asm_len (AVR_HAVE_LPMX ? \"lpm %3,%a2\" : \"lpm\", xop, plen, 1);\n+               \"ld %3,%a2\", xop, plen, 2);\n \n   if (REGNO (xop[0]) != REGNO (xop[3]))\n     avr_asm_len (\"mov %0,%3\", xop, plen, 1);"}]}