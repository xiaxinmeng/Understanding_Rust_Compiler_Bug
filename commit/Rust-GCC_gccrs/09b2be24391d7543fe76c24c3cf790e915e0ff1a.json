{"sha": "09b2be24391d7543fe76c24c3cf790e915e0ff1a", "node_id": "C_kwDOANBUbNoAKDA5YjJiZTI0MzkxZDc1NDNmZTc2YzI0YzNjZjc5MGU5MTVlMGZmMWE", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-21T11:35:42Z"}, "committer": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-30T11:52:32Z"}, "message": "libproc_macro: Minor refactor\n\nChange some bits to make the code more idiomatic/clearer.\n\nChangeLog:\n\n\t* librust/proc_macro/rust/bridge/literal.rs: Make byte range\n\tclearer.\n\t* librust/proc_macro/rust/bridge/token_stream.rs: Remove old\n\tcomment.\n\t* librust/proc_macro/rust/token_stream.rs: Remove useless return\n\tstatement.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "63ffb7702c13c8f9566a13abeaf02c90758af27e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63ffb7702c13c8f9566a13abeaf02c90758af27e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09b2be24391d7543fe76c24c3cf790e915e0ff1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b2be24391d7543fe76c24c3cf790e915e0ff1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09b2be24391d7543fe76c24c3cf790e915e0ff1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b2be24391d7543fe76c24c3cf790e915e0ff1a/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77216f03f283f1f2e36319a68f6cf248e6d4acb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77216f03f283f1f2e36319a68f6cf248e6d4acb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77216f03f283f1f2e36319a68f6cf248e6d4acb3"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "c2017ac4d9400dd38bf4cc8b304763b43392a7a2", "filename": "librust/proc_macro/rust/bridge/literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b2be24391d7543fe76c24c3cf790e915e0ff1a/librust%2Fproc_macro%2Frust%2Fbridge%2Fliteral.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b2be24391d7543fe76c24c3cf790e915e0ff1a/librust%2Fproc_macro%2Frust%2Fbridge%2Fliteral.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Fbridge%2Fliteral.rs?ref=09b2be24391d7543fe76c24c3cf790e915e0ff1a", "patch": "@@ -252,7 +252,7 @@ impl fmt::Display for Literal {\n                 let slice =\n                     unsafe { std::slice::from_raw_parts(*data, (*size).try_into().unwrap()) };\n                 for &byte in slice {\n-                    if byte != b'\"' && byte >= b' ' && byte <= b'z' {\n+                    if byte != b'\"' && (b' '..=b'z').contains(&byte) {\n                         char::try_from(byte).unwrap().fmt(f)?;\n                     } else {\n                         write!(f, \"\\\\x{byte:02x}\")?;"}, {"sha": "56f6679a822b46f7ea348d01947eb80b82cc8f58", "filename": "librust/proc_macro/rust/bridge/token_stream.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b2be24391d7543fe76c24c3cf790e915e0ff1a/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b2be24391d7543fe76c24c3cf790e915e0ff1a/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs?ref=09b2be24391d7543fe76c24c3cf790e915e0ff1a", "patch": "@@ -17,10 +17,6 @@ extern \"C\" {\n     fn TokenStream__clone(ts: *const TokenStream) -> TokenStream;\n }\n \n-// TODO: There surely is a better way to achieve this. I don't like this\n-// \"duplication\" of the TokenTree enumeration. But I cannot use the public\n-// one since it's underlying types (public Group, Ident...) are not ffi safe.\n-// Flattening all those struct might be a solution.\n #[repr(C)]\n #[derive(Clone)]\n pub enum TokenTree {"}, {"sha": "9333e3ea2fc163db9303dc1d06d23129112c99ec", "filename": "librust/proc_macro/rust/token_stream.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09b2be24391d7543fe76c24c3cf790e915e0ff1a/librust%2Fproc_macro%2Frust%2Ftoken_stream.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09b2be24391d7543fe76c24c3cf790e915e0ff1a/librust%2Fproc_macro%2Frust%2Ftoken_stream.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Ftoken_stream.rs?ref=09b2be24391d7543fe76c24c3cf790e915e0ff1a", "patch": "@@ -17,7 +17,7 @@ impl Iterator for IntoIter {\n \n     fn next(&mut self) -> Option<TokenTree> {\n         if self.current == self.end {\n-            return None;\n+            None\n         } else {\n             let result = self.current;\n             self.current = unsafe { self.current.add(1) };"}]}