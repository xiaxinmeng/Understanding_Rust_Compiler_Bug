{"sha": "b871a06f6f0c3a76a58cd71ff07023afbd9d58a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg3MWEwNmY2ZjBjM2E3NmE1OGNkNzFmZjA3MDIzYWZiZDlkNThhMw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2015-02-05T22:52:24Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2015-02-05T22:52:24Z"}, "message": "re PR target/64876 (Regressions in gcc-testresults for powerpc64 gccgo in 5.0 due to change for static chain for closures (219776))\n\n\tPR target/64876\n\t* config/rs6000/rs6000.c (chain_already_loaded): New function.\n\t(rs6000_call_aix): Use it.\n\nFrom-SVN: r220463", "tree": {"sha": "d003f5f0753276685092348fae95942c86959119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d003f5f0753276685092348fae95942c86959119"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b871a06f6f0c3a76a58cd71ff07023afbd9d58a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b871a06f6f0c3a76a58cd71ff07023afbd9d58a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b871a06f6f0c3a76a58cd71ff07023afbd9d58a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b871a06f6f0c3a76a58cd71ff07023afbd9d58a3/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f72ca141dad4a52f34220c2be7113dca3dc4f0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f72ca141dad4a52f34220c2be7113dca3dc4f0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f72ca141dad4a52f34220c2be7113dca3dc4f0d"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "90cee313a262ddd5f998ecdc96512ee5caaba9eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b871a06f6f0c3a76a58cd71ff07023afbd9d58a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b871a06f6f0c3a76a58cd71ff07023afbd9d58a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b871a06f6f0c3a76a58cd71ff07023afbd9d58a3", "patch": "@@ -1,3 +1,9 @@\n+2015-02-06  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/64876\n+\t* config/rs6000/rs6000.c (chain_already_loaded): New function.\n+\t(rs6000_call_aix): Use it.\n+\n 2015-02-05  Jan Hubicka <hubicka@ucw.cz>\n \n \t* ipa-cp.c (ipa_value_from_jfunc, ipa_context_from_jfunc): Add bounds"}, {"sha": "4f88328a506351de8947affc744f498734039e60", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b871a06f6f0c3a76a58cd71ff07023afbd9d58a3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b871a06f6f0c3a76a58cd71ff07023afbd9d58a3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b871a06f6f0c3a76a58cd71ff07023afbd9d58a3", "patch": "@@ -32919,6 +32919,28 @@ rs6000_legitimate_constant_p (machine_mode mode, rtx x)\n }\n \n \f\n+/* Return TRUE iff the sequence ending in LAST sets the static chain.  */\n+\n+static bool\n+chain_already_loaded (rtx_insn *last)\n+{\n+  for (; last != NULL; last = PREV_INSN (last))\n+    {\n+      if (NONJUMP_INSN_P (last))\n+\t{\n+\t  rtx patt = PATTERN (last);\n+\n+\t  if (GET_CODE (patt) == SET)\n+\t    {\n+\t      rtx lhs = XEXP (patt, 0);\n+\n+\t      if (REG_P (lhs) && REGNO (lhs) == STATIC_CHAIN_REGNUM)\n+\t\treturn true;\n+\t    }\n+\t}\n+    }\n+  return false;\n+}\n \n /* Expand code to perform a call under the AIX or ELFv2 ABI.  */\n \n@@ -33002,7 +33024,9 @@ rs6000_call_aix (rtx value, rtx func_desc, rtx flag, rtx cookie)\n \t     originally direct, the 3rd word has not been written since no\n \t     trampoline has been built, so we ought not to load it, lest we\n \t     override a static chain value.  */\n-\t  if (!direct_call_p && TARGET_POINTERS_TO_NESTED_FUNCTIONS)\n+\t  if (!direct_call_p\n+\t      && TARGET_POINTERS_TO_NESTED_FUNCTIONS\n+\t      && !chain_already_loaded (crtl->emit.sequence_stack->last))\n \t    {\n \t      rtx sc_reg = gen_rtx_REG (Pmode, STATIC_CHAIN_REGNUM);\n \t      rtx func_sc_offset = GEN_INT (2 * GET_MODE_SIZE (Pmode));"}]}