{"sha": "ddd6f407e8021812c6205bebc40098b87faa4239", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRkNmY0MDdlODAyMTgxMmM2MjA1YmViYzQwMDk4Yjg3ZmFhNDIzOQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-11-19T11:19:15Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-11-19T11:19:15Z"}, "message": "Fix how we match for count(n*) in gcov tests.\n\n2018-11-19  Martin Liska  <mliska@suse.cz>\n\n\t* g++.dg/gcov/pr84548.C: Remove remove-gcda.\n\t* g++.dg/gcov/ternary.C: Likewise.\n\t* lib/gcov.exp: Support pattern of following form:\n\tcount(1*).\n\nFrom-SVN: r266270", "tree": {"sha": "b6b0146ed4f17a055f11d5cd72b372179ae99e2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6b0146ed4f17a055f11d5cd72b372179ae99e2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddd6f407e8021812c6205bebc40098b87faa4239", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd6f407e8021812c6205bebc40098b87faa4239", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd6f407e8021812c6205bebc40098b87faa4239", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd6f407e8021812c6205bebc40098b87faa4239/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d86b600d897573373606f052fc76cf9102d4be34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d86b600d897573373606f052fc76cf9102d4be34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d86b600d897573373606f052fc76cf9102d4be34"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "3fff2c85e7b0ae029909e376bb182e3cba515725", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd6f407e8021812c6205bebc40098b87faa4239/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd6f407e8021812c6205bebc40098b87faa4239/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ddd6f407e8021812c6205bebc40098b87faa4239", "patch": "@@ -1,3 +1,10 @@\n+2018-11-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/gcov/pr84548.C: Remove remove-gcda.\n+\t* g++.dg/gcov/ternary.C: Likewise.\n+\t* lib/gcov.exp: Support pattern of following form:\n+\tcount(1*).\n+\n 2018-11-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.target/visium/overflow8.c: Remove -fno-if-conversion and"}, {"sha": "3b60b90e2a260af777784a14531bff010a1fc7b6", "filename": "gcc/testsuite/g++.dg/gcov/pr84548.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd6f407e8021812c6205bebc40098b87faa4239/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr84548.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd6f407e8021812c6205bebc40098b87faa4239/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr84548.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fpr84548.C?ref=ddd6f407e8021812c6205bebc40098b87faa4239", "patch": "@@ -16,4 +16,4 @@ int main()\n   return 0;\n }\n \n-// { dg-final { run-gcov remove-gcda pr84548.C } }\n+// { dg-final { run-gcov pr84548.C } }"}, {"sha": "9b8e34644b46162cd01949b4d88377540458ed12", "filename": "gcc/testsuite/g++.dg/gcov/ternary.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd6f407e8021812c6205bebc40098b87faa4239/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fternary.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd6f407e8021812c6205bebc40098b87faa4239/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fternary.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fternary.C?ref=ddd6f407e8021812c6205bebc40098b87faa4239", "patch": "@@ -9,4 +9,4 @@ int main()\n   return a;\n }\n \n-// { dg-final { run-gcov remove-gcda ternary.C } }\n+// { dg-final { run-gcov ternary.C } }"}, {"sha": "dbd3c8e8e44ca64fc47785601c1a37b3b74c7333", "filename": "gcc/testsuite/lib/gcov.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd6f407e8021812c6205bebc40098b87faa4239/gcc%2Ftestsuite%2Flib%2Fgcov.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd6f407e8021812c6205bebc40098b87faa4239/gcc%2Ftestsuite%2Flib%2Fgcov.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcov.exp?ref=ddd6f407e8021812c6205bebc40098b87faa4239", "patch": "@@ -59,7 +59,7 @@ proc verify-lines { testname testcase file } {\n     while { [gets $fd line] >= 0 } {\n         # We want to match both \"-\" and \"#####\" as count as well as numbers,\n         # since we want to detect lines that shouldn't be marked as covered.\n-\tif [regexp \"^ *(\\[^:]*): *(\\[0-9\\\\-#]+):.*count\\\\((\\[0-9\\\\-#=\\\\.kMGTPEZY]+)\\\\)(.*)\" \\\n+\tif [regexp \"^ *(\\[^:]*): *(\\[0-9\\\\-#]+):.*count\\\\((\\[0-9\\\\-#=\\\\.kMGTPEZY\\*]+)\\\\)(.*)\" \\\n \t\t\"$line\" all is n shouldbe rest] {\n \t    if [regexp \"^ *{(.*)}\" $rest all xfailed] {\n \t\tswitch [dg-process-target $xfailed] {"}]}