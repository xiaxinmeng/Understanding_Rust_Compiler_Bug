{"sha": "3b8031bb3103422ccfebb62991dfc64054cd9eac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I4MDMxYmIzMTAzNDIyY2NmZWJiNjI5OTFkZmM2NDA1NGNkOWVhYw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2008-10-21T17:33:53Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2008-10-21T17:33:53Z"}, "message": "re PR java/35485 (libjava is disabled by default)\n\n        PR target/35485\n        * tree.c (get_file_function_name): Copy first_global_object_name.\n        Centralize call to clean_symbol_name.\n\nFrom-SVN: r141269", "tree": {"sha": "290b854625db0020fbcc255a9d3ce22bab853716", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/290b854625db0020fbcc255a9d3ce22bab853716"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b8031bb3103422ccfebb62991dfc64054cd9eac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b8031bb3103422ccfebb62991dfc64054cd9eac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b8031bb3103422ccfebb62991dfc64054cd9eac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b8031bb3103422ccfebb62991dfc64054cd9eac/comments", "author": null, "committer": null, "parents": [{"sha": "3027350e73e58ea1f808d6ce005044e58777692f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3027350e73e58ea1f808d6ce005044e58777692f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3027350e73e58ea1f808d6ce005044e58777692f"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "455fcd947433ca4804a968daebd20c8055a36086", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b8031bb3103422ccfebb62991dfc64054cd9eac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b8031bb3103422ccfebb62991dfc64054cd9eac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b8031bb3103422ccfebb62991dfc64054cd9eac", "patch": "@@ -1,3 +1,9 @@\n+2008-10-21  David Edelsohn  <edelsohn@gnu.org>\n+\n+\tPR target/35485\n+\t* tree.c (get_file_function_name): Copy first_global_object_name.\n+\tCentralize call to clean_symbol_name.\n+\n 2008-10-21  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* config.gcc (powerpc-*): Make t-ppcgas imply usegas.h."}, {"sha": "925eafe0506189bcc305ded2f4971cca826f54dd", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b8031bb3103422ccfebb62991dfc64054cd9eac/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b8031bb3103422ccfebb62991dfc64054cd9eac/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=3b8031bb3103422ccfebb62991dfc64054cd9eac", "patch": "@@ -6923,7 +6923,7 @@ get_file_function_name (const char *type)\n \n   /* If we already have a name we know to be unique, just use that.  */\n   if (first_global_object_name)\n-    p = first_global_object_name;\n+    p = q = ASTRDUP (first_global_object_name);\n   /* If the target is handling the constructors/destructors, they\n      will be local to this file and the name is only necessary for\n      debugging purposes.  */\n@@ -6940,7 +6940,6 @@ get_file_function_name (const char *type)\n       else\n \tp = file;\n       p = q = ASTRDUP (p);\n-      clean_symbol_name (q);\n     }\n   else\n     {\n@@ -6959,14 +6958,14 @@ get_file_function_name (const char *type)\n       len = strlen (file);\n       q = (char *) alloca (9 * 2 + len + 1);\n       memcpy (q, file, len + 1);\n-      clean_symbol_name (q);\n \n       sprintf (q + len, \"_%08X_%08X\", crc32_string (0, name),\n \t       crc32_string (0, get_random_seed (false)));\n \n       p = q;\n     }\n \n+  clean_symbol_name (q);\n   buf = (char *) alloca (sizeof (FILE_FUNCTION_FORMAT) + strlen (p)\n \t\t\t + strlen (type));\n "}]}