{"sha": "35ca24a2d13feb005610c6d56637fff5d1a19e0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVjYTI0YTJkMTNmZWIwMDU2MTBjNmQ1NjYzN2ZmZjVkMWExOWUwYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-28T08:30:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-28T08:30:01Z"}, "message": "extend.texi (__builtin_add_overflow_p): Clarify behavior when last argument is a bit-field.\n\n\t* doc/extend.texi (__builtin_add_overflow_p): Clarify behavior when\n\tlast argument is a bit-field.\n\nFrom-SVN: r237816", "tree": {"sha": "c1bcae6a22da089d1e638781924e52818f71678b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1bcae6a22da089d1e638781924e52818f71678b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35ca24a2d13feb005610c6d56637fff5d1a19e0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35ca24a2d13feb005610c6d56637fff5d1a19e0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35ca24a2d13feb005610c6d56637fff5d1a19e0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35ca24a2d13feb005610c6d56637fff5d1a19e0b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95ef39f4415224f4d98c85c10a9efa9f2f952fe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95ef39f4415224f4d98c85c10a9efa9f2f952fe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95ef39f4415224f4d98c85c10a9efa9f2f952fe0"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "4e833d478a621d398765ebb884d8efb2c294a907", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ca24a2d13feb005610c6d56637fff5d1a19e0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ca24a2d13feb005610c6d56637fff5d1a19e0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35ca24a2d13feb005610c6d56637fff5d1a19e0b", "patch": "@@ -1,5 +1,8 @@\n 2016-06-28  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* doc/extend.texi (__builtin_add_overflow_p): Clarify behavior when\n+\tlast argument is a bit-field.\n+\n \tPR rtl-optimization/71673\n \t* internal-fn.c (expand_arith_overflow_result_store): Use\n \tOPTAB_LIB_WIDEN instead of OPTAB_DIRECT as last argument to"}, {"sha": "b5f6e12f8be4568cb721b6b827647da8f0b580ba", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ca24a2d13feb005610c6d56637fff5d1a19e0b/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ca24a2d13feb005610c6d56637fff5d1a19e0b/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=35ca24a2d13feb005610c6d56637fff5d1a19e0b", "patch": "@@ -9888,6 +9888,9 @@ cast to the type of the third argument.  If the cast result is equal to the infi\n precision result, the built-in functions return false, otherwise they return true.\n The value of the third argument is ignored, just the side-effects in the third argument\n are evaluated, and no integral argument promotions are performed on the last argument.\n+If the third argument is a bit-field, the type used for the result cast has the\n+precision and signedness of the given bit-field, rather than precision and signedness\n+of the underlying type.\n \n For example, the following macro can be used to portably check, at\n compile-time, whether or not adding two constant integers will overflow,"}]}