{"sha": "d7711adcd5226995063342631e1ce5c2ff055981", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc3MTFhZGNkNTIyNjk5NTA2MzM0MjYzMWUxY2U1YzJmZjA1NTk4MQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2018-12-06T23:18:40Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2018-12-06T23:18:40Z"}, "message": "[PR86747] tsubst friend tpl ctxt before looking it up for dupes\n\nWhen a member template is redeclared as a friend, we enter the context\nof the member before looking it up, and then we check that the decls\nare compatible.  However, when the member template references template\ntypes of the enclosing context, say an enclosing template class, the\ncompare fails because the friend decl is already tsubsted, whereas the\nlooked up name isn't.\n\nThe problem is that the enclosing context is taken from the friend\ndeclaration before tsubsting it, so we look up in the context of the\ngeneric template instead of that of the tsubsted one we're\nspecializing.  The solution is to tsubst the enclosing context when\nit's a non-namespace scope.\n\nfor  gcc/cp/ChangeLog\n\n\tPR c++/86747\n\t* pt.c (tsubst_friend_class): Enter tsubsted class context.\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR c++/86747\n\t* g++.dg/pr86747.C: New.\n\nFrom-SVN: r266875", "tree": {"sha": "d18e6d7e133cf87e121f40a607230f110db42421", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d18e6d7e133cf87e121f40a607230f110db42421"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7711adcd5226995063342631e1ce5c2ff055981", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7711adcd5226995063342631e1ce5c2ff055981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7711adcd5226995063342631e1ce5c2ff055981", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7711adcd5226995063342631e1ce5c2ff055981/comments", "author": null, "committer": null, "parents": [{"sha": "0d699def39bb937e3fddbd8149892594447b7f0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d699def39bb937e3fddbd8149892594447b7f0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d699def39bb937e3fddbd8149892594447b7f0d"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "e092c4490f55f0254efe17df41ff7baedf591dfd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7711adcd5226995063342631e1ce5c2ff055981/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7711adcd5226995063342631e1ce5c2ff055981/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d7711adcd5226995063342631e1ce5c2ff055981", "patch": "@@ -1,5 +1,8 @@\n 2018-12-06  Alexandre Oliva <aoliva@redhat.com>\n \n+\tPR c++/86747\n+\t* pt.c (tsubst_friend_class): Enter tsubsted class context.\n+\n \tPR c++/86397\n \t* except.c (build_noexcept_spec): Resolve nondependent\n \texpressions."}, {"sha": "8560e588593397950d6eedafc3e199d58a24864c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7711adcd5226995063342631e1ce5c2ff055981/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7711adcd5226995063342631e1ce5c2ff055981/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=d7711adcd5226995063342631e1ce5c2ff055981", "patch": "@@ -10558,7 +10558,10 @@ tsubst_friend_class (tree friend_tmpl, tree args)\n   if (TREE_CODE (context) == NAMESPACE_DECL)\n     push_nested_namespace (context);\n   else\n-    push_nested_class (context);\n+    {\n+      context = tsubst (context, args, tf_error, NULL_TREE);\n+      push_nested_class (context);\n+    }\n \n   tmpl = lookup_name_real (DECL_NAME (friend_tmpl), /*prefer_type=*/false,\n \t\t\t   /*non_class=*/false, /*block_p=*/false,"}, {"sha": "1871663415ed9d8093c0be2424bbfff7a13081ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7711adcd5226995063342631e1ce5c2ff055981/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7711adcd5226995063342631e1ce5c2ff055981/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7711adcd5226995063342631e1ce5c2ff055981", "patch": "@@ -1,5 +1,8 @@\n 2018-12-06  Alexandre Oliva <aoliva@redhat.com>\n \n+\tPR c++/86747\n+\t* g++.dg/pr86747.C: New.\n+\n \tPR c++/86397\n \t* g++.dg/cpp0x/pr86397-1.C: New.\n \t* g++.dg/cpp0x/pr86397-2.C: New."}, {"sha": "5b0a0bb95146a28b920dd6ff08085662b9dca48a", "filename": "gcc/testsuite/g++.dg/pr86747.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7711adcd5226995063342631e1ce5c2ff055981/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86747.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7711adcd5226995063342631e1ce5c2ff055981/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86747.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86747.C?ref=d7711adcd5226995063342631e1ce5c2ff055981", "patch": "@@ -0,0 +1,8 @@\n+// { dg-do compile }\n+\n+template <typename T> class A {\n+  template <void (A::*p)()> class C; // #1\n+  template <void (A::*q)()> friend class C; // #2\n+};\n+\n+A<double> a;"}]}