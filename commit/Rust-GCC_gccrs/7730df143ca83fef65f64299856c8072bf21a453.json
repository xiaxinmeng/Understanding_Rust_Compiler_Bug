{"sha": "7730df143ca83fef65f64299856c8072bf21a453", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzczMGRmMTQzY2E4M2ZlZjY1ZjY0Mjk5ODU2YzgwNzJiZjIxYTQ1Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-12T10:38:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-12T10:38:39Z"}, "message": "[multiple changes]\n\n2010-10-12  Thomas Quinot  <quinot@adacore.com>\n\n\t* a-exetim.ads: Minor reformatting.\n\t* g-socket.ads (Port_Type): Better definition corresponding to the\n\tactual standard range.\n\t* exp_ch5.adb: Add comment.\n\t* sem_aux.adb: Minor reformatting.\n\n2010-10-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Copy_Generic_Node): If node is a string literal, remove\n\tstring_literal_subtype so that a new one can be constructed in the\n\tscope of the instance.\n\nFrom-SVN: r165357", "tree": {"sha": "15546ab6dcc6d4203794b6884877c87ebe68aa07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15546ab6dcc6d4203794b6884877c87ebe68aa07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7730df143ca83fef65f64299856c8072bf21a453", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7730df143ca83fef65f64299856c8072bf21a453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7730df143ca83fef65f64299856c8072bf21a453", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7730df143ca83fef65f64299856c8072bf21a453/comments", "author": null, "committer": null, "parents": [{"sha": "c775c2094bfdd9b85ad67e451a3fe690780e84d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c775c2094bfdd9b85ad67e451a3fe690780e84d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c775c2094bfdd9b85ad67e451a3fe690780e84d4"}], "stats": {"total": 98, "additions": 62, "deletions": 36}, "files": [{"sha": "b473f215897c6e4c804918f05621d3ad1be7216b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7730df143ca83fef65f64299856c8072bf21a453", "patch": "@@ -1,3 +1,17 @@\n+2010-10-12  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* a-exetim.ads: Minor reformatting.\n+\t* g-socket.ads (Port_Type): Better definition corresponding to the\n+\tactual standard range.\n+\t* exp_ch5.adb: Add comment.\n+\t* sem_aux.adb: Minor reformatting.\n+\n+2010-10-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Copy_Generic_Node): If node is a string literal, remove\n+\tstring_literal_subtype so that a new one can be constructed in the\n+\tscope of the instance.\n+\n 2010-10-12  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch9.adb (Has_Pragma_Priority): New name for Has_Priority_Pragma"}, {"sha": "c4b8ba2eb329ad1b58aaee4fdb85663061a3b8d8", "filename": "gcc/ada/a-exetim.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2Fa-exetim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2Fa-exetim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim.ads?ref=7730df143ca83fef65f64299856c8072bf21a453", "patch": "@@ -37,8 +37,8 @@ package Ada.Execution_Time is\n    CPU_Tick       : constant Ada.Real_Time.Time_Span;\n \n    function Clock\n-     (T : Ada.Task_Identification.Task_Id\n-          := Ada.Task_Identification.Current_Task)\n+     (T : Ada.Task_Identification.Task_Id :=\n+            Ada.Task_Identification.Current_Task)\n       return CPU_Time;\n \n    function \"+\""}, {"sha": "2dbfe349dfe2ae80f5e8f9ffba3c06ed1fa7f5d8", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=7730df143ca83fef65f64299856c8072bf21a453", "patch": "@@ -1759,6 +1759,7 @@ package body Exp_Ch5 is\n       --  has discriminants (necessarily with defaults) a check may still be\n       --  necessary if the Lhs is aliased. The private determinants must be\n       --  visible to build the discriminant constraints.\n+      --  What is a \"determinant\"???\n \n       --  Only an explicit dereference that comes from source indicates\n       --  aliasing. Access to formals of protected operations and entries"}, {"sha": "4ff193645621bf9d0f4e9059b8654ecdd22e0c0e", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 29, "deletions": 27, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=7730df143ca83fef65f64299856c8072bf21a453", "patch": "@@ -478,13 +478,14 @@ package GNAT.Sockets is\n    --  more data can be transmitted. Neither transmission nor reception can be\n    --  performed with Shut_Read_Write.\n \n-   type Port_Type is new Natural;\n-   --  Classical port definition. No_Port provides a special value to\n-   --  denote uninitialized port. Any_Port provides a special value\n-   --  enabling all ports.\n+   type Port_Type is range 0 .. 16#ffff#;\n+   --  TCP/UDP port number\n \n    Any_Port : constant Port_Type;\n-   No_Port  : constant Port_Type;\n+   --  All ports\n+\n+   No_Port : constant Port_Type;\n+   --  Uninitialized port number\n \n    type Inet_Addr_Type (Family : Family_Type := Family_Inet) is private;\n    --  An Internet address depends on an address family (IPv4 contains 4 octets\n@@ -975,8 +976,8 @@ package GNAT.Sockets is\n       Count  : out Ada.Streams.Stream_Element_Count;\n       Flags  : Request_Flag_Type := No_Request_Flag);\n    --  Transmit data gathered from the set of vector elements Vector to a\n-   --  socket. Count is set to the count of transmitted stream elements.\n-   --  Flags allow control over transmission.\n+   --  socket. Count is set to the count of transmitted stream elements. Flags\n+   --  allow control over transmission.\n \n    procedure Set_Socket_Option\n      (Socket : Socket_Type;\n@@ -987,10 +988,9 @@ package GNAT.Sockets is\n    procedure Shutdown_Socket\n      (Socket : Socket_Type;\n       How    : Shutmode_Type := Shut_Read_Write);\n-   --  Shutdown a connected socket. If How is Shut_Read, further receives will\n-   --  be disallowed. If How is Shut_Write, further sends will be disallowed.\n-   --  If how is Shut_Read_Write, further sends and receives will be\n-   --  disallowed.\n+   --  Shutdown a connected socket. If How is Shut_Read further receives will\n+   --  be disallowed. If How is Shut_Write further sends will be disallowed.\n+   --  If How is Shut_Read_Write further sends and receives will be disallowed.\n \n    type Stream_Access is access all Ada.Streams.Root_Stream_Type'Class;\n    --  Same interface as Ada.Streams.Stream_IO\n@@ -1010,9 +1010,9 @@ package GNAT.Sockets is\n \n    procedure Free is new Ada.Unchecked_Deallocation\n      (Ada.Streams.Root_Stream_Type'Class, Stream_Access);\n-   --  Destroy a stream created by one of the Stream functions above,\n-   --  releasing the corresponding resources. The user is responsible for\n-   --  calling this subprogram when the stream is not needed anymore.\n+   --  Destroy a stream created by one of the Stream functions above, releasing\n+   --  the corresponding resources. The user is responsible for calling this\n+   --  subprogram when the stream is not needed anymore.\n \n    type Socket_Set_Type is limited private;\n    --  This type allows to manipulate sets of sockets. It allows to wait for\n@@ -1058,16 +1058,18 @@ package GNAT.Sockets is\n    --  can block the full process (not just the calling thread).\n    --\n    --  Check_Selector provides the very same behaviour. The only difference is\n-   --  that it does not watch for exception events. Note that on some\n-   --  platforms it is kept process blocking on purpose. The timeout parameter\n-   --  allows the user to have the behaviour he wants. Abort_Selector allows\n-   --  to safely abort a blocked Check_Selector call. A special socket\n-   --  is opened by Create_Selector and included in each call to\n-   --  Check_Selector. Abort_Selector causes an event to occur on this\n-   --  descriptor in order to unblock Check_Selector. Note that each call to\n-   --  Abort_Selector will cause exactly one call to Check_Selector to return\n-   --  with Aborted status. The special socket created by Create_Selector is\n-   --  closed when Close_Selector is called.\n+   --  that it does not watch for exception events. Note that on some platforms\n+   --  it is kept process blocking on purpose. The timeout parameter allows the\n+   --  user to have the behaviour he wants. Abort_Selector allows to safely\n+   --  abort a blocked Check_Selector call. A special socket is opened by\n+   --  Create_Selector and included in each call to Check_Selector.\n+   --\n+   --  Abort_Selector causes an event to occur on this descriptor in order to\n+   --  unblock Check_Selector. Note that each call to Abort_Selector will cause\n+   --  exactly one call to Check_Selector to return with Aborted status. The\n+   --  special socket created by Create_Selector is closed when Close_Selector\n+   --  is called.\n+   --\n    --  A typical case where it is useful to abort a Check_Selector operation is\n    --  the situation where a change to the monitored sockets set must be made.\n \n@@ -1098,9 +1100,9 @@ package GNAT.Sockets is\n    --  R_Socket_Set and W_Socket_Set (even if they denote the same set of\n    --  Sockets), or some event may be lost.\n    --\n-   --  Socket_Error is raised when the select(2) system call returns an\n-   --  error condition, or when a read error occurs on the signalling socket\n-   --  used for the implementation of Abort_Selector.\n+   --  Socket_Error is raised when the select(2) system call returns an error\n+   --  condition, or when a read error occurs on the signalling socket used for\n+   --  the implementation of Abort_Selector.\n \n    procedure Check_Selector\n      (Selector     : Selector_Type;"}, {"sha": "656692fe4fb7df8044152e1fb844bd2a9a038c33", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=7730df143ca83fef65f64299856c8072bf21a453", "patch": "@@ -204,8 +204,7 @@ package body Sem_Aux is\n \n    begin\n       pragma Assert\n-        (Has_Discriminants (Typ)\n-          or else Has_Unknown_Discriminants (Typ));\n+        (Has_Discriminants (Typ) or else Has_Unknown_Discriminants (Typ));\n \n       Ent := First_Entity (Typ);\n "}, {"sha": "224636d6ea7d4e4523e811bfd3017f0edd988bac", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7730df143ca83fef65f64299856c8072bf21a453/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=7730df143ca83fef65f64299856c8072bf21a453", "patch": "@@ -6211,15 +6211,25 @@ package body Sem_Ch12 is\n             end if;\n          end;\n \n-      elsif Nkind_In (N, N_Integer_Literal,\n-                         N_Real_Literal,\n-                         N_String_Literal)\n-      then\n+      elsif Nkind_In (N, N_Integer_Literal, N_Real_Literal) then\n+\n          --  No descendant fields need traversing\n \n          null;\n \n-      --  For the remaining nodes, copy recursively their descendants\n+      elsif Nkind (N) = N_String_Literal\n+        and then Present (Etype (N))\n+        and then Instantiating\n+      then\n+         --  If the string is declared in an outer scope, the string_literal\n+         --  subtype created for it may have the wrong scope. We force the\n+         --  reanalysis of the constant to generate a new itype in the proper\n+         --  context.\n+\n+         Set_Etype (New_N, Empty);\n+         Set_Analyzed (New_N, False);\n+\n+      --  For the remaining nodes, copy their descendants recursively\n \n       else\n          Copy_Descendants;"}]}