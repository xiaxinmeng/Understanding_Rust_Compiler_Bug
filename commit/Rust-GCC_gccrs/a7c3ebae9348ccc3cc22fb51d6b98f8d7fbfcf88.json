{"sha": "a7c3ebae9348ccc3cc22fb51d6b98f8d7fbfcf88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdjM2ViYWU5MzQ4Y2NjM2NjMjJmYjUxZDZiOThmOGQ3ZmJmY2Y4OA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2019-10-18T19:05:16Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2019-10-18T19:05:16Z"}, "message": "[arm] Improvements to negvsi4 and negvdi4.\n\nThe generic expansion code for negv does not try the subv patterns,\nbut instead emits a sub and a compare separately.  Fortunately, the\npatterns can make use of the new subv operations, so just call those.\nWe can also rewrite this using an iterator to simplify things further.\nFinally, we can now make negvdi4 work on Thumb2 as well as Arm.\n\n\t* config/arm/arm.md (negv<SIDI:mode>3): New expansion rule.\n\t(negvsi3, negvdi3): Delete.\n\t(negdi2_compare): Delete.\n\nFrom-SVN: r277191", "tree": {"sha": "ba93587437a2fc3fbad7787cd93802a22b9ad827", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba93587437a2fc3fbad7787cd93802a22b9ad827"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7c3ebae9348ccc3cc22fb51d6b98f8d7fbfcf88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7c3ebae9348ccc3cc22fb51d6b98f8d7fbfcf88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7c3ebae9348ccc3cc22fb51d6b98f8d7fbfcf88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7c3ebae9348ccc3cc22fb51d6b98f8d7fbfcf88/comments", "author": null, "committer": null, "parents": [{"sha": "ead327735c15436cc0516f427da107be0d747822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ead327735c15436cc0516f427da107be0d747822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ead327735c15436cc0516f427da107be0d747822"}], "stats": {"total": 47, "additions": 11, "deletions": 36}, "files": [{"sha": "6ef72d484a4d692c620caf45b59ec3cd5fe82cb4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c3ebae9348ccc3cc22fb51d6b98f8d7fbfcf88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c3ebae9348ccc3cc22fb51d6b98f8d7fbfcf88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7c3ebae9348ccc3cc22fb51d6b98f8d7fbfcf88", "patch": "@@ -1,3 +1,9 @@\n+2019-10-18  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config/arm/arm.md (negv<SIDI:mode>3): New expansion rule.\n+\t(negvsi3, negvdi3): Delete.\n+\t(negdi2_compare): Delete.\n+\n 2019-10-18  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config/arm/arm.md (subvdi4): Decompose calculation into 32-bit"}, {"sha": "7ef0c16580d406492e35f6daf85a93c2fe35dd5d", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 5, "deletions": 36, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7c3ebae9348ccc3cc22fb51d6b98f8d7fbfcf88/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7c3ebae9348ccc3cc22fb51d6b98f8d7fbfcf88/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=a7c3ebae9348ccc3cc22fb51d6b98f8d7fbfcf88", "patch": "@@ -4581,48 +4581,17 @@\n \f\n ;; Unary arithmetic insns\n \n-(define_expand \"negvsi3\"\n-  [(match_operand:SI 0 \"register_operand\")\n-   (match_operand:SI 1 \"register_operand\")\n+(define_expand \"negv<SIDI:mode>3\"\n+  [(match_operand:SIDI 0 \"s_register_operand\")\n+   (match_operand:SIDI 1 \"s_register_operand\")\n    (match_operand 2 \"\")]\n   \"TARGET_32BIT\"\n {\n-  emit_insn (gen_subsi3_compare (operands[0], const0_rtx, operands[1]));\n-  arm_gen_unlikely_cbranch (NE, CC_Vmode, operands[2]);\n-\n-  DONE;\n-})\n-\n-(define_expand \"negvdi3\"\n-  [(match_operand:DI 0 \"s_register_operand\")\n-   (match_operand:DI 1 \"s_register_operand\")\n-   (match_operand 2 \"\")]\n-  \"TARGET_ARM\"\n-{\n-  emit_insn (gen_negdi2_compare (operands[0], operands[1]));\n-  arm_gen_unlikely_cbranch (NE, CC_Vmode, operands[2]);\n-\n+  emit_insn (gen_subv<mode>4 (operands[0], const0_rtx, operands[1],\n+\t\t\t      operands[2]));\n   DONE;\n })\n \n-\n-(define_insn \"negdi2_compare\"\n-  [(set (reg:CC CC_REGNUM)\n-\t(compare:CC\n-\t  (const_int 0)\n-\t  (match_operand:DI 1 \"register_operand\" \"r,r\")))\n-   (set (match_operand:DI 0 \"register_operand\" \"=&r,&r\")\n-\t(minus:DI (const_int 0) (match_dup 1)))]\n-  \"TARGET_ARM\"\n-  \"@\n-   rsbs\\\\t%Q0, %Q1, #0;rscs\\\\t%R0, %R1, #0\n-   rsbs\\\\t%Q0, %Q1, #0;sbcs\\\\t%R0, %R1, %R1, lsl #1\"\n-  [(set_attr \"conds\" \"set\")\n-   (set_attr \"arch\" \"a,t2\")\n-   (set_attr \"length\" \"8\")\n-   (set_attr \"type\" \"multiple\")]\n-)\n-\n (define_expand \"negsi2\"\n   [(set (match_operand:SI         0 \"s_register_operand\")\n \t(neg:SI (match_operand:SI 1 \"s_register_operand\")))]"}]}