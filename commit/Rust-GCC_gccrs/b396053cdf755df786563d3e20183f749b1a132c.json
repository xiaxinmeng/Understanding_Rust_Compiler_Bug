{"sha": "b396053cdf755df786563d3e20183f749b1a132c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM5NjA1M2NkZjc1NWRmNzg2NTYzZDNlMjAxODNmNzQ5YjFhMTMyYw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-07-20T13:56:19Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-07-20T13:56:19Z"}, "message": "tree.h (binfo_member): Remove.\n\n.:\t* tree.h (binfo_member): Remove.\n\t* tree.c (binfo_member): Remove.\ncp:\n\t* cp-tree.h (vec_binfo_member): Remove.\n\t* tree.c (vec_binfo_member): Remove.\n\nFrom-SVN: r84951", "tree": {"sha": "520a1fd84ff7ed0ea8faa83094cf0b3de670873c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/520a1fd84ff7ed0ea8faa83094cf0b3de670873c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b396053cdf755df786563d3e20183f749b1a132c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b396053cdf755df786563d3e20183f749b1a132c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b396053cdf755df786563d3e20183f749b1a132c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b396053cdf755df786563d3e20183f749b1a132c/comments", "author": null, "committer": null, "parents": [{"sha": "bcb1079efdac63d99e39284fe69c070eac8a5bf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb1079efdac63d99e39284fe69c070eac8a5bf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcb1079efdac63d99e39284fe69c070eac8a5bf2"}], "stats": {"total": 42, "additions": 9, "deletions": 33}, "files": [{"sha": "0cac3ad110f87eec4c0ed1f663400e53e63a7d3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b396053cdf755df786563d3e20183f749b1a132c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b396053cdf755df786563d3e20183f749b1a132c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b396053cdf755df786563d3e20183f749b1a132c", "patch": "@@ -1,3 +1,8 @@\n+2004-07-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* tree.h (binfo_member): Remove.\n+\t* tree.c (binfo_member): Remove.\n+\n 2004-07-20  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* tree.h: Include vec.h\n@@ -4362,4 +4367,5 @@\n \t* libfuncs.h (LTI_gcov_init, gcov_init_libfunc): Remove.\n \t* optabs.c (init_optabs): Don't set gcov_init_libfunc.\n \n+VERSION_IDENT=\"CVS-$Name:  $ $Revision: 1.46 $-$Date: 2004/07/08 15:54:45 $-UTC\"\n See ChangeLog.11 for earlier changes."}, {"sha": "53406d0c45476d9ff44a508c52a813c7bba591e4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b396053cdf755df786563d3e20183f749b1a132c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b396053cdf755df786563d3e20183f749b1a132c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b396053cdf755df786563d3e20183f749b1a132c", "patch": "@@ -1,5 +1,8 @@\n 2004-07-20  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\t* cp-tree.h (vec_binfo_member): Remove.\n+\t* tree.c (vec_binfo_member): Remove.\n+\n \t* cp-tree.h (struct lang_type_class): Remove vfields field.\n \t(CLASSTYPE_VFIELDS): Remove.\n \t(SET_BINFO_NEW_VTABLE_MARKED): Adjust."}, {"sha": "a3779d88db5f0dd1612e93c329e57d4ef54ec4a6", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b396053cdf755df786563d3e20183f749b1a132c/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b396053cdf755df786563d3e20183f749b1a132c/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b396053cdf755df786563d3e20183f749b1a132c", "patch": "@@ -4150,7 +4150,6 @@ extern tree array_type_nelts_total\t\t(tree);\n extern tree array_type_nelts_top\t\t(tree);\n extern tree break_out_target_exprs\t\t(tree);\n extern tree get_type_decl\t\t\t(tree);\n-extern tree vec_binfo_member\t\t\t(tree, tree);\n extern tree decl_namespace_context\t\t(tree);\n extern tree lvalue_type\t\t\t\t(tree);\n extern tree error_type\t\t\t\t(tree);"}, {"sha": "918849d4ab4b35b0631208c098fcd9c674c8b6c5", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b396053cdf755df786563d3e20183f749b1a132c/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b396053cdf755df786563d3e20183f749b1a132c/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=b396053cdf755df786563d3e20183f749b1a132c", "patch": "@@ -1396,22 +1396,6 @@ get_type_decl (tree t)\n   return 0;\n }\n \n-/* Return first vector element whose BINFO_TYPE is ELEM.\n-   Return 0 if ELEM is not in VEC.  VEC may be NULL_TREE.  */\n-\n-tree\n-vec_binfo_member (tree elem, tree vec)\n-{\n-  int i;\n-\n-  if (vec)\n-    for (i = 0; i < TREE_VEC_LENGTH (vec); ++i)\n-      if (same_type_p (elem, BINFO_TYPE (TREE_VEC_ELT (vec, i))))\n-\treturn TREE_VEC_ELT (vec, i);\n-\n-  return NULL_TREE;\n-}\n-\n /* Returns the namespace that contains DECL, whether directly or\n    indirectly.  */\n "}, {"sha": "564cd0e9a22de88cf04f3e5669af87411400c776", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b396053cdf755df786563d3e20183f749b1a132c/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b396053cdf755df786563d3e20183f749b1a132c/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b396053cdf755df786563d3e20183f749b1a132c", "patch": "@@ -953,21 +953,6 @@ purpose_member (tree elem, tree list)\n   return NULL_TREE;\n }\n \n-/* Return first list element whose BINFO_TYPE is ELEM.\n-   Return 0 if ELEM is not in LIST.  */\n-\n-tree\n-binfo_member (tree elem, tree list)\n-{\n-  while (list)\n-    {\n-      if (elem == BINFO_TYPE (list))\n-\treturn list;\n-      list = TREE_CHAIN (list);\n-    }\n-  return NULL_TREE;\n-}\n-\n /* Return nonzero if ELEM is part of the chain CHAIN.  */\n \n int"}, {"sha": "09249bde3e974c1c908b23c927a88998681fc9b7", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b396053cdf755df786563d3e20183f749b1a132c/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b396053cdf755df786563d3e20183f749b1a132c/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b396053cdf755df786563d3e20183f749b1a132c", "patch": "@@ -2752,7 +2752,6 @@ extern bool in_array_bounds_p (tree);\n \n extern tree value_member (tree, tree);\n extern tree purpose_member (tree, tree);\n-extern tree binfo_member (tree, tree);\n \n extern int attribute_list_equal (tree, tree);\n extern int attribute_list_contained (tree, tree);"}]}