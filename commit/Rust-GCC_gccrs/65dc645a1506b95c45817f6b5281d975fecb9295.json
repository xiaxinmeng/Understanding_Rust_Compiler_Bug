{"sha": "65dc645a1506b95c45817f6b5281d975fecb9295", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVkYzY0NWExNTA2Yjk1YzQ1ODE3ZjZiNTI4MWQ5NzVmZWNiOTI5NQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2012-04-13T17:12:33Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2012-04-13T17:12:33Z"}, "message": "expr.c (expand_expr_real_1): Pass type, not the expression, to set_mem_attributes for a memory temporary.\n\n2012-04-13  Martin Jambor  <mjambor@suse.cz>\n\n\t* expr.c (expand_expr_real_1): Pass type, not the expression, to\n\tset_mem_attributes for a memory temporary. Do not call the function\n\tfor the memory temporary created for a bitfield.\n\nFrom-SVN: r186426", "tree": {"sha": "d43ec3fd9297e9086ec2e59da2e1fb04119e501e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d43ec3fd9297e9086ec2e59da2e1fb04119e501e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65dc645a1506b95c45817f6b5281d975fecb9295", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65dc645a1506b95c45817f6b5281d975fecb9295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65dc645a1506b95c45817f6b5281d975fecb9295", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65dc645a1506b95c45817f6b5281d975fecb9295/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1adbb3614d87c487eb0b3c3eebbe1c6bb6e7438f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1adbb3614d87c487eb0b3c3eebbe1c6bb6e7438f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1adbb3614d87c487eb0b3c3eebbe1c6bb6e7438f"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "721f68135eb5456bef8ec6c82ecbb38d577e40b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65dc645a1506b95c45817f6b5281d975fecb9295/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65dc645a1506b95c45817f6b5281d975fecb9295/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65dc645a1506b95c45817f6b5281d975fecb9295", "patch": "@@ -1,3 +1,9 @@\n+2012-04-13  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* expr.c (expand_expr_real_1): Pass type, not the expression, to\n+\tset_mem_attributes for a memory temporary. Do not call the function\n+\tfor the memory temporary created for a bitfield.\n+\n 2012-04-13  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/48866"}, {"sha": "46282d107408b955b772bd40579c845103f38183", "filename": "gcc/expr.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65dc645a1506b95c45817f6b5281d975fecb9295/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65dc645a1506b95c45817f6b5281d975fecb9295/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=65dc645a1506b95c45817f6b5281d975fecb9295", "patch": "@@ -9603,6 +9603,7 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \ttree tem = get_inner_reference (exp, &bitsize, &bitpos, &offset,\n \t\t\t\t\t&mode1, &unsignedp, &volatilep, true);\n \trtx orig_op0, memloc;\n+\tbool mem_attrs_from_type = false;\n \n \t/* If we got back the original object, something is wrong.  Perhaps\n \t   we are evaluating an expression too early.  In any event, don't\n@@ -9708,6 +9709,7 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t    memloc = assign_temp (nt, 1, 1, 1);\n \t    emit_move_insn (memloc, op0);\n \t    op0 = memloc;\n+\t    mem_attrs_from_type = true;\n \t  }\n \n \tif (offset)\n@@ -9880,7 +9882,6 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t\temit_move_insn (new_rtx, op0);\n \t\top0 = copy_rtx (new_rtx);\n \t\tPUT_MODE (op0, BLKmode);\n-\t\tset_mem_attributes (op0, exp, 1);\n \t      }\n \n \t    return op0;\n@@ -9901,7 +9902,14 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \tif (op0 == orig_op0)\n \t  op0 = copy_rtx (op0);\n \n-\tset_mem_attributes (op0, exp, 0);\n+\t/* If op0 is a temporary because of forcing to memory, pass only the\n+\t   type to set_mem_attributes so that the original expression is never\n+\t   marked as ADDRESSABLE through MEM_EXPR of the temporary.  */\n+\tif (mem_attrs_from_type)\n+\t  set_mem_attributes (op0, type, 0);\n+\telse\n+\t  set_mem_attributes (op0, exp, 0);\n+\n \tif (REG_P (XEXP (op0, 0)))\n \t  mark_reg_pointer (XEXP (op0, 0), MEM_ALIGN (op0));\n "}]}