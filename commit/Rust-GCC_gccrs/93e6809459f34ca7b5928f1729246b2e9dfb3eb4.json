{"sha": "93e6809459f34ca7b5928f1729246b2e9dfb3eb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNlNjgwOTQ1OWYzNGNhN2I1OTI4ZjE3MjkyNDZiMmU5ZGZiM2ViNA==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-09-06T09:09:38Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-09-06T10:57:46Z"}, "message": "Avoid FROM being overwritten in expand_fix.\n\nFor the conversion from _Float16 to int, if the corresponding optab\ndoes not exist, the compiler will try the wider mode (SFmode here),\nbut when floatsfsi exists but FAIL, FROM will be rewritten, which\nleads to a PR runtime error.\n\ngcc/ChangeLog:\n\n\tPR middle-end/102182\n\t* optabs.c (expand_fix): Add from1 to avoid from being\n\toverwritten.\n\ngcc/testsuite/ChangeLog:\n\n\tPR middle-end/102182\n\t* gcc.target/i386/pr101282.c: New test.", "tree": {"sha": "3e78f62b1f520c7e20b228a3bc194232a667ee8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e78f62b1f520c7e20b228a3bc194232a667ee8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93e6809459f34ca7b5928f1729246b2e9dfb3eb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e6809459f34ca7b5928f1729246b2e9dfb3eb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93e6809459f34ca7b5928f1729246b2e9dfb3eb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e6809459f34ca7b5928f1729246b2e9dfb3eb4/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "086bb917d6efa32d9841c34a3b762f4278c762cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/086bb917d6efa32d9841c34a3b762f4278c762cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/086bb917d6efa32d9841c34a3b762f4278c762cd"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "019bbb628825963e8b03b5ce8d7470912f93ba0c", "filename": "gcc/optabs.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e6809459f34ca7b5928f1729246b2e9dfb3eb4/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e6809459f34ca7b5928f1729246b2e9dfb3eb4/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=93e6809459f34ca7b5928f1729246b2e9dfb3eb4", "patch": "@@ -5488,20 +5488,21 @@ expand_fix (rtx to, rtx from, int unsignedp)\n \tif (icode != CODE_FOR_nothing)\n \t  {\n \t    rtx_insn *last = get_last_insn ();\n+\t    rtx from1 = from;\n \t    if (fmode != GET_MODE (from))\n-\t      from = convert_to_mode (fmode, from, 0);\n+\t      from1 = convert_to_mode (fmode, from, 0);\n \n \t    if (must_trunc)\n \t      {\n-\t\trtx temp = gen_reg_rtx (GET_MODE (from));\n-\t\tfrom = expand_unop (GET_MODE (from), ftrunc_optab, from,\n-\t\t\t\t    temp, 0);\n+\t\trtx temp = gen_reg_rtx (GET_MODE (from1));\n+\t\tfrom1 = expand_unop (GET_MODE (from1), ftrunc_optab, from1,\n+\t\t\t\t     temp, 0);\n \t      }\n \n \t    if (imode != GET_MODE (to))\n \t      target = gen_reg_rtx (imode);\n \n-\t    if (maybe_emit_unop_insn (icode, target, from,\n+\t    if (maybe_emit_unop_insn (icode, target, from1,\n \t\t\t\t      doing_unsigned ? UNSIGNED_FIX : FIX))\n \t      {\n \t\tif (target != to)"}, {"sha": "2148b9294ef1bc9fab555d0f6234fb6b2efd4d21", "filename": "gcc/testsuite/gcc.target/i386/pr101282.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e6809459f34ca7b5928f1729246b2e9dfb3eb4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101282.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e6809459f34ca7b5928f1729246b2e9dfb3eb4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101282.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101282.c?ref=93e6809459f34ca7b5928f1729246b2e9dfb3eb4", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do run { target { ia32 } } } */\n+/* { dg-options \"-Os -march=i686 -mfpmath=sse -msse2\" } */\n+\n+#include<stdlib.h>\n+int\n+main (void)\n+{\n+  static volatile unsigned int ivin, ivout;\n+  static volatile _Float16 fv1, fv2;\n+  ivin = ((unsigned int)1);\n+  fv1 = ((unsigned int)1);\n+  fv2 = ivin;\n+  ivout = fv2;\n+  if (ivout != ((unsigned int)1))\n+    abort ();\n+\n+  exit (0);\n+}"}]}