{"sha": "c11e39b0bdfc580582012fe56f0cce1b84f064f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzExZTM5YjBiZGZjNTgwNTgyMDEyZmU1NmYwY2NlMWI4NGYwNjRmNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2011-05-23T08:15:16Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2011-05-23T08:15:16Z"}, "message": "re PR c++/18016 (Warn about member variables initialized with itself)\n\n2011-05-23  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\tPR c++/18016\n\t* init.c (perform_member_init): Check for self-initialization.\n\nFrom-SVN: r174058", "tree": {"sha": "3b87380a633beb61c227f25ea2c76e0edc6884d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b87380a633beb61c227f25ea2c76e0edc6884d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c11e39b0bdfc580582012fe56f0cce1b84f064f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c11e39b0bdfc580582012fe56f0cce1b84f064f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c11e39b0bdfc580582012fe56f0cce1b84f064f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c11e39b0bdfc580582012fe56f0cce1b84f064f4/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc69f7ffb57a35be61feb20e4a7b4300c8d1de24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc69f7ffb57a35be61feb20e4a7b4300c8d1de24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc69f7ffb57a35be61feb20e4a7b4300c8d1de24"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "20c98083e9fd18ab8227a1729b3c52b3b9275d46", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11e39b0bdfc580582012fe56f0cce1b84f064f4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11e39b0bdfc580582012fe56f0cce1b84f064f4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c11e39b0bdfc580582012fe56f0cce1b84f064f4", "patch": "@@ -1,3 +1,8 @@\n+2011-05-23  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR c++/18016\n+\t* init.c (perform_member_init): Check for self-initialization.\n+\n 2011-05-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48647"}, {"sha": "5f30275ae5bb6d944069b43ff1f77fc072ec778a", "filename": "gcc/cp/init.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11e39b0bdfc580582012fe56f0cce1b84f064f4/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11e39b0bdfc580582012fe56f0cce1b84f064f4/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=c11e39b0bdfc580582012fe56f0cce1b84f064f4", "patch": "@@ -501,6 +501,17 @@ perform_member_init (tree member, tree init)\n   if (decl == error_mark_node)\n     return;\n \n+  if (warn_init_self && init && TREE_CODE (init) == TREE_LIST\n+      && TREE_CHAIN (init) == NULL_TREE)\n+    {\n+      tree val = TREE_VALUE (init);\n+      if (TREE_CODE (val) == COMPONENT_REF && TREE_OPERAND (val, 1) == member\n+\t  && TREE_OPERAND (val, 0) == current_class_ref)\n+\twarning_at (DECL_SOURCE_LOCATION (current_function_decl),\n+\t\t    OPT_Wuninitialized, \"%qD is initialized with itself\",\n+\t\t    member);\n+    }\n+\n   if (init == void_type_node)\n     {\n       /* mem() means value-initialization.  */"}, {"sha": "b87cb2aa51e5b78076318da99074d48df67219cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11e39b0bdfc580582012fe56f0cce1b84f064f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11e39b0bdfc580582012fe56f0cce1b84f064f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c11e39b0bdfc580582012fe56f0cce1b84f064f4", "patch": "@@ -1,3 +1,8 @@\n+2011-05-23  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR c++/18016\n+\t* g++.dg/warn/pr18016.C: New.\n+\n 2011-05-23  Tom de Vries  <tom@codesourcery.com>\n \n \tPR target/45098"}, {"sha": "9cf1ea3b70ae233f5655ae4397c1177a6ade1b3f", "filename": "gcc/testsuite/g++.dg/warn/pr18016.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11e39b0bdfc580582012fe56f0cce1b84f064f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr18016.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11e39b0bdfc580582012fe56f0cce1b84f064f4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr18016.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr18016.C?ref=c11e39b0bdfc580582012fe56f0cce1b84f064f4", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wuninitialized -Winit-self\" } */\n+\n+class X {\n+  int i;\n+  X() : i(i) { }   // { dg-warning \"initialized with itself\" }\n+  X(int i) : i(i) { }\n+  X(const X& x) : i(x.i) { }\n+};\n+\n+// { dg-prune-output \"In constructor\" }"}]}