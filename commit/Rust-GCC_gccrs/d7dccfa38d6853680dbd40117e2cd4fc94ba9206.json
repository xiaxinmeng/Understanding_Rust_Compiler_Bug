{"sha": "d7dccfa38d6853680dbd40117e2cd4fc94ba9206", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdkY2NmYTM4ZDY4NTM2ODBkYmQ0MDExN2UyY2Q0ZmM5NGJhOTIwNg==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-11-27T14:21:18Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-11-27T14:21:18Z"}, "message": "extend.texi: Add -A suffix (ARMv8*-A, ARMv7-A).\n\n2017-11-27  Tamar Christina  <tamar.christina@arm.com>\n\n\t* doc/extend.texi: Add -A suffix (ARMv8*-A, ARMv7-A).\n\t* doc/invoke.texi: Add -A suffix (ARMv8*-A, ARMv7-A).\n\t* doc/sourcebuild.texi: Add -A suffix (ARMv8*-A, ARMv7-A).\n\nFrom-SVN: r255169", "tree": {"sha": "1b539a8790224049e644a1db5b4dabe830378a9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b539a8790224049e644a1db5b4dabe830378a9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7dccfa38d6853680dbd40117e2cd4fc94ba9206", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7dccfa38d6853680dbd40117e2cd4fc94ba9206", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7dccfa38d6853680dbd40117e2cd4fc94ba9206", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7dccfa38d6853680dbd40117e2cd4fc94ba9206/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb358080c908eedc600855bd689f5bd349f5ac98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb358080c908eedc600855bd689f5bd349f5ac98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb358080c908eedc600855bd689f5bd349f5ac98"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "66d37d0dbb9490b1fbde4c46025e35b84133a0ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7dccfa38d6853680dbd40117e2cd4fc94ba9206/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7dccfa38d6853680dbd40117e2cd4fc94ba9206/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7dccfa38d6853680dbd40117e2cd4fc94ba9206", "patch": "@@ -1,3 +1,9 @@\n+2017-11-27  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* doc/extend.texi: Add -A suffix (ARMv8*-A, ARMv7-A).\n+\t* doc/invoke.texi: Add -A suffix (ARMv8*-A, ARMv7-A).\n+\t* doc/sourcebuild.texi: Add -A suffix (ARMv8*-A, ARMv7-A).\n+\n 2017-11-27  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \t* hash-map.h (gt_cleare_cache): Avoid UB."}, {"sha": "9349f95d0da43008328f43f7421e33049bfc42c6", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7dccfa38d6853680dbd40117e2cd4fc94ba9206/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7dccfa38d6853680dbd40117e2cd4fc94ba9206/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=d7dccfa38d6853680dbd40117e2cd4fc94ba9206", "patch": "@@ -1045,7 +1045,7 @@ expressions are automatically promoted to @code{float}.\n \n The ARM target provides hardware support for conversions between\n @code{__fp16} and @code{float} values\n-as an extension to VFP and NEON (Advanced SIMD), and from ARMv8 provides\n+as an extension to VFP and NEON (Advanced SIMD), and from ARMv8-A provides\n hardware support for conversions between @code{__fp16} and @code{double}\n values.  GCC generates code using these hardware instructions if you\n compile with options to select an FPU that provides them;"}, {"sha": "02a0c1e6d494f2c4337c68b7da981b965f3092d1", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7dccfa38d6853680dbd40117e2cd4fc94ba9206/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7dccfa38d6853680dbd40117e2cd4fc94ba9206/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d7dccfa38d6853680dbd40117e2cd4fc94ba9206", "patch": "@@ -15567,8 +15567,8 @@ entirely disabled by the @samp{+nofp} option that follows it.\n Most extension names are generically named, but have an effect that is\n dependent upon the architecture to which it is applied.  For example,\n the @samp{+simd} option can be applied to both @samp{armv7-a} and\n-@samp{armv8-a} architectures, but will enable the original ARMv7\n-Advanced SIMD (Neon) extensions for @samp{armv7-a} and the ARMv8-a\n+@samp{armv8-a} architectures, but will enable the original ARMv7-A\n+Advanced SIMD (Neon) extensions for @samp{armv7-a} and the ARMv8-A\n variant for @samp{armv8-a}.\n \n The table below lists the supported extensions for each architecture.\n@@ -15709,7 +15709,7 @@ Disable the floating-point and Advanced SIMD instructions.\n @item +crc\n The Cyclic Redundancy Check (CRC) instructions.\n @item +simd\n-The ARMv8 Advanced SIMD and floating-point instructions.\n+The ARMv8-A Advanced SIMD and floating-point instructions.\n @item +crypto\n The cryptographic instructions.\n @item +nocrypto\n@@ -15721,7 +15721,7 @@ Disable the floating-point, Advanced SIMD and cryptographic instructions.\n @item armv8.1-a\n @table @samp\n @item +simd\n-The ARMv8.1 Advanced SIMD and floating-point instructions.\n+The ARMv8.1-A Advanced SIMD and floating-point instructions.\n \n @item +crypto\n The cryptographic instructions.  This also enables the Advanced SIMD and\n@@ -15741,7 +15741,7 @@ The half-precision floating-point data processing instructions.\n This also enables the Advanced SIMD and floating-point instructions.\n \n @item +simd\n-The ARMv8.1 Advanced SIMD and floating-point instructions.\n+The ARMv8.1-A Advanced SIMD and floating-point instructions.\n \n @item +crypto\n The cryptographic instructions.  This also enables the Advanced SIMD and\n@@ -15817,7 +15817,7 @@ The Cyclic Redundancy Check (CRC) instructions.\n @item +fp.sp\n The single-precision FPv5 floating-point instructions.\n @item +simd\n-The ARMv8 Advanced SIMD and floating-point instructions.\n+The ARMv8-A Advanced SIMD and floating-point instructions.\n @item +crypto\n The cryptographic instructions.\n @item +nocrypto\n@@ -16236,9 +16236,9 @@ Divided syntax should be considered deprecated.\n \n @item -mrestrict-it\n @opindex mrestrict-it\n-Restricts generation of IT blocks to conform to the rules of ARMv8.\n+Restricts generation of IT blocks to conform to the rules of ARMv8-A.\n IT blocks can only contain a single 16-bit instruction from a select\n-set of instructions. This option is on by default for ARMv8 Thumb mode.\n+set of instructions. This option is on by default for ARMv8-A Thumb mode.\n \n @item -mprint-tune-info\n @opindex mprint-tune-info"}, {"sha": "7daca45b49165033bdc5c6925017ac573e4edc52", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7dccfa38d6853680dbd40117e2cd4fc94ba9206/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7dccfa38d6853680dbd40117e2cd4fc94ba9206/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=d7dccfa38d6853680dbd40117e2cd4fc94ba9206", "patch": "@@ -1714,11 +1714,11 @@ Some multilibs may be incompatible with these options.\n \n @item arm_v8_1a_neon_ok\n @anchor{arm_v8_1a_neon_ok}\n-ARM target supports options to generate ARMv8.1 Adv.SIMD instructions.\n+ARM target supports options to generate ARMv8.1-A Adv.SIMD instructions.\n Some multilibs may be incompatible with these options.\n \n @item arm_v8_1a_neon_hw\n-ARM target supports executing ARMv8.1 Adv.SIMD instructions.  Some\n+ARM target supports executing ARMv8.1-A Adv.SIMD instructions.  Some\n multilibs may be incompatible with the options needed.  Implies\n arm_v8_1a_neon_ok.\n \n@@ -1727,34 +1727,34 @@ ARM target supports acquire-release instructions.\n \n @item arm_v8_2a_fp16_scalar_ok\n @anchor{arm_v8_2a_fp16_scalar_ok}\n-ARM target supports options to generate instructions for ARMv8.2 and\n+ARM target supports options to generate instructions for ARMv8.2-A and\n scalar instructions from the FP16 extension.  Some multilibs may be\n incompatible with these options.\n \n @item arm_v8_2a_fp16_scalar_hw\n-ARM target supports executing instructions for ARMv8.2 and scalar\n+ARM target supports executing instructions for ARMv8.2-A and scalar\n instructions from the FP16 extension.  Some multilibs may be\n incompatible with these options.  Implies arm_v8_2a_fp16_neon_ok.\n \n @item arm_v8_2a_fp16_neon_ok\n @anchor{arm_v8_2a_fp16_neon_ok}\n-ARM target supports options to generate instructions from ARMv8.2 with\n+ARM target supports options to generate instructions from ARMv8.2-A with\n the FP16 extension.  Some multilibs may be incompatible with these\n options.  Implies arm_v8_2a_fp16_scalar_ok.\n \n @item arm_v8_2a_fp16_neon_hw\n-ARM target supports executing instructions from ARMv8.2 with the FP16\n+ARM target supports executing instructions from ARMv8.2-A with the FP16\n extension.  Some multilibs may be incompatible with these options.\n Implies arm_v8_2a_fp16_neon_ok and arm_v8_2a_fp16_scalar_hw.\n \n @item arm_v8_2a_dotprod_neon_ok\n @anchor{arm_v8_2a_dotprod_neon_ok}\n-ARM target supports options to generate instructions from ARMv8.2 with\n+ARM target supports options to generate instructions from ARMv8.2-A with\n the Dot Product extension. Some multilibs may be incompatible with these\n options.\n \n @item arm_v8_2a_dotprod_neon_hw\n-ARM target supports executing instructions from ARMv8.2 with the Dot\n+ARM target supports executing instructions from ARMv8.2-A with the Dot\n Product extension. Some multilibs may be incompatible with these options.\n Implies arm_v8_2a_dotprod_neon_ok.\n \n@@ -2352,24 +2352,24 @@ arm vfp3 floating point support; see\n the @ref{arm_vfp3_ok,,arm_vfp3_ok effective target keyword}.\n \n @item arm_v8_1a_neon\n-Add options for ARMv8.1 with Adv.SIMD support, if this is supported\n+Add options for ARMv8.1-A with Adv.SIMD support, if this is supported\n by the target; see the @ref{arm_v8_1a_neon_ok,,arm_v8_1a_neon_ok}\n effective target keyword.\n \n @item arm_v8_2a_fp16_scalar\n-Add options for ARMv8.2 with scalar FP16 support, if this is\n+Add options for ARMv8.2-A with scalar FP16 support, if this is\n supported by the target; see the\n @ref{arm_v8_2a_fp16_scalar_ok,,arm_v8_2a_fp16_scalar_ok} effective\n target keyword.\n \n @item arm_v8_2a_fp16_neon\n-Add options for ARMv8.2 with Adv.SIMD FP16 support, if this is\n+Add options for ARMv8.2-A with Adv.SIMD FP16 support, if this is\n supported by the target; see the\n @ref{arm_v8_2a_fp16_neon_ok,,arm_v8_2a_fp16_neon_ok} effective target\n keyword.\n \n @item arm_v8_2a_dotprod_neon\n-Add options for ARMv8.2 with Adv.SIMD Dot Product support, if this is\n+Add options for ARMv8.2-A with Adv.SIMD Dot Product support, if this is\n supported by the target; see the\n @ref{arm_v8_2a_dotprod_neon_ok} effective target keyword.\n "}]}