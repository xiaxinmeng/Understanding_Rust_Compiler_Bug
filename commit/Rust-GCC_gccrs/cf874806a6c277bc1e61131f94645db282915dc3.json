{"sha": "cf874806a6c277bc1e61131f94645db282915dc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y4NzQ4MDZhNmMyNzdiYzFlNjExMzFmOTQ2NDVkYjI4MjkxNWRjMw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-06-11T12:05:04Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-06-11T12:05:04Z"}, "message": "h8300.h (RETURN_IN_MEMORY): Accept DImode if !TARGET_H8300.\n\n\t* config/h8300/h8300.h (RETURN_IN_MEMORY): Accept DImode if\n\t!TARGET_H8300.\n\nFrom-SVN: r67759", "tree": {"sha": "18b7493563da35099d0fc4e52f381e6413961040", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18b7493563da35099d0fc4e52f381e6413961040"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf874806a6c277bc1e61131f94645db282915dc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf874806a6c277bc1e61131f94645db282915dc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf874806a6c277bc1e61131f94645db282915dc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf874806a6c277bc1e61131f94645db282915dc3/comments", "author": null, "committer": null, "parents": [{"sha": "ca9d6ccabc59098185b3f8ac957159878a996d61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca9d6ccabc59098185b3f8ac957159878a996d61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca9d6ccabc59098185b3f8ac957159878a996d61"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "7a495fa43a6341bb6379c69eeb0050910766429d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf874806a6c277bc1e61131f94645db282915dc3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf874806a6c277bc1e61131f94645db282915dc3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf874806a6c277bc1e61131f94645db282915dc3", "patch": "@@ -1,3 +1,8 @@\n+2003-06-11  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.h (RETURN_IN_MEMORY): Accept DImode if\n+\t!TARGET_H8300.\n+\n 2003-06-11  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (final_prescan_insn): Don't dump rtl."}, {"sha": "90143eb9b5f8902acca1a4ead6de97a27c5862d2", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf874806a6c277bc1e61131f94645db282915dc3/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf874806a6c277bc1e61131f94645db282915dc3/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=cf874806a6c277bc1e61131f94645db282915dc3", "patch": "@@ -635,8 +635,9 @@ enum reg_class {\n #define STRUCT_VALUE 0\n \n /* Return true if X should be returned in memory.  */\n-#define RETURN_IN_MEMORY(X) \\\n-  (TYPE_MODE (X) == BLKmode || GET_MODE_SIZE (TYPE_MODE (X)) > 4)\n+#define RETURN_IN_MEMORY(X)\t\t\t\t\t\\\n+  (TYPE_MODE (X) == BLKmode\t\t\t\t\t\\\n+   || GET_MODE_SIZE (TYPE_MODE (X)) > (TARGET_H8300 ? 4 : 8))\n \n /* When defined, the compiler allows registers explicitly used in the\n    rtl to be used as spill registers but prevents the compiler from"}]}