{"sha": "514c0e7c12d44576796d79079b1ba20844f047b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE0YzBlN2MxMmQ0NDU3Njc5NmQ3OTA3OWIxYmEyMDg0NGYwNDdiOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-11-25T09:22:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-11-25T09:22:47Z"}, "message": "re PR tree-optimization/68517 (ICE in tree-vect-data-refs.c:2751)\n\n2015-11-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/68517\n\t* tree-vect-data-refs.c (vect_analyze_data_ref_accesses):\n\tProperly handle zero-sized types.\n\n\t* gcc.dg/torture/pr68517.c: New testcase.\n\nFrom-SVN: r230858", "tree": {"sha": "b4495ffa55e2de4c4b7afe9ee070b2547b857131", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4495ffa55e2de4c4b7afe9ee070b2547b857131"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/514c0e7c12d44576796d79079b1ba20844f047b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/514c0e7c12d44576796d79079b1ba20844f047b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/514c0e7c12d44576796d79079b1ba20844f047b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/514c0e7c12d44576796d79079b1ba20844f047b9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80d39568c54771107ee76d3559d7e4d888bc29a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d39568c54771107ee76d3559d7e4d888bc29a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80d39568c54771107ee76d3559d7e4d888bc29a0"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "ec493af77a83334e39124e18cff85769c8cdc9ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/514c0e7c12d44576796d79079b1ba20844f047b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/514c0e7c12d44576796d79079b1ba20844f047b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=514c0e7c12d44576796d79079b1ba20844f047b9", "patch": "@@ -1,3 +1,9 @@\n+2015-11-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68517\n+\t* tree-vect-data-refs.c (vect_analyze_data_ref_accesses):\n+\tProperly handle zero-sized types.\n+\n 2015-11-24  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-inline-analysis.c: Include gimplify.h"}, {"sha": "78e09048157b9fe68d45e09f5d2a4a31677df9d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/514c0e7c12d44576796d79079b1ba20844f047b9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/514c0e7c12d44576796d79079b1ba20844f047b9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=514c0e7c12d44576796d79079b1ba20844f047b9", "patch": "@@ -1,3 +1,8 @@\n+2015-11-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/68517\n+\t* gcc.dg/torture/pr68517.c: New testcase.\n+\n 2015-11-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/67089"}, {"sha": "5093d988f825a267fa29316d83d776a5326789ca", "filename": "gcc/testsuite/gcc.dg/torture/pr68517.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/514c0e7c12d44576796d79079b1ba20844f047b9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68517.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/514c0e7c12d44576796d79079b1ba20844f047b9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68517.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68517.c?ref=514c0e7c12d44576796d79079b1ba20844f047b9", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+\n+typedef struct\n+{\n+} st1;\n+\n+typedef struct\n+{\n+  volatile int c;\n+} __attribute__ ((aligned (4))) st2;\n+\n+struct s4\n+{\n+  st1 f1;\n+  st2 f2;\n+  st1 f3;\n+};\n+\n+struct s3;\n+\n+void\n+foo (struct s3 *arg, struct s4 *arg1)\n+{\n+  arg1->f1 = (st1) { };\n+  arg1->f3 = (st1) { };\n+}"}, {"sha": "62e61e04a75bab21dd3abe80b04e3b0093a42c1a", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/514c0e7c12d44576796d79079b1ba20844f047b9/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/514c0e7c12d44576796d79079b1ba20844f047b9/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=514c0e7c12d44576796d79079b1ba20844f047b9", "patch": "@@ -2769,7 +2769,8 @@ vect_analyze_data_ref_accesses (vec_info *vinfo)\n \t  /* If init_b == init_a + the size of the type * k, we have an\n \t     interleaving, and DRA is accessed before DRB.  */\n \t  HOST_WIDE_INT type_size_a = tree_to_uhwi (sza);\n-\t  if ((init_b - init_a) % type_size_a != 0)\n+\t  if (type_size_a == 0\n+\t      || (init_b - init_a) % type_size_a != 0)\n \t    break;\n \n \t  /* If we have a store, the accesses are adjacent.  This splits"}]}