{"sha": "86e7df90ace6a43c5e641c179431cbd53ea29abe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZlN2RmOTBhY2U2YTQzYzVlNjQxYzE3OTQzMWNiZDUzZWEyOWFiZQ==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2004-03-20T02:56:54Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2004-03-20T02:56:54Z"}, "message": "altivec.h (vec_dst, [...]): Add prototypes, marked with always_inline attribute.\n\n[gcc/ChangeLog]\n2004-03-19  Ziemowit Laski  <zlaski@apple.com>\n\n        * config/rs6000/altivec.h (vec_dst, vec_dstst, vec_dststt,\n        vec_dstt, vec_sld, vec_splat): Add prototypes, marked with\n        always_inline attribute.\n        * config/rs6000/rs6000.c (altivec_expand_dst_builtin):\n        Treat expansion as completed even if literal argument is\n        invalid (so that other expansions are not tried in vain).\n\n[gcc/testsuite/ChangeLog]\n2004-03-19  Ziemowit Laski  <zlaski@apple.com>\n\n        * g++.dg/ext/altivec-6.C: New test.\n\nFrom-SVN: r79726", "tree": {"sha": "34ee714cd7b95eb1b7846350f8737c44b868ef8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34ee714cd7b95eb1b7846350f8737c44b868ef8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86e7df90ace6a43c5e641c179431cbd53ea29abe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86e7df90ace6a43c5e641c179431cbd53ea29abe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86e7df90ace6a43c5e641c179431cbd53ea29abe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86e7df90ace6a43c5e641c179431cbd53ea29abe/comments", "author": null, "committer": null, "parents": [{"sha": "147d77b68230ac7552b191b96fb62bd5d69d239b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/147d77b68230ac7552b191b96fb62bd5d69d239b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/147d77b68230ac7552b191b96fb62bd5d69d239b"}], "stats": {"total": 55, "additions": 50, "deletions": 5}, "files": [{"sha": "ebda5ec1c78524b0a1f438a0ee1a2f26ba2e37a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e7df90ace6a43c5e641c179431cbd53ea29abe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e7df90ace6a43c5e641c179431cbd53ea29abe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86e7df90ace6a43c5e641c179431cbd53ea29abe", "patch": "@@ -1,3 +1,12 @@\n+2004-03-19  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* config/rs6000/altivec.h (vec_dst, vec_dstst, vec_dststt,\n+\tvec_dstt, vec_sld, vec_splat): Add prototypes, marked with\n+\talways_inline attribute.\n+\t* config/rs6000/rs6000.c (altivec_expand_dst_builtin):\n+\tTreat expansion as completed even if literal argument is\n+\tinvalid (so that other expansions are not tried in vain).\n+\n 2004-03-19  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* loop-doloop.c (add_test): Replace GEN_INT (0) with"}, {"sha": "632f03930ff1390e070e825c23ba520be70d205c", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e7df90ace6a43c5e641c179431cbd53ea29abe/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e7df90ace6a43c5e641c179431cbd53ea29abe/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=86e7df90ace6a43c5e641c179431cbd53ea29abe", "patch": "@@ -117,7 +117,7 @@ inline void vec_dst (const vector unsigned int *, int, const int) __attribute__\n inline void vec_dst (const vector signed int *, int, const int) __attribute__ ((always_inline));\n inline void vec_dst (const vector bool int *, int, const int) __attribute__ ((always_inline));\n inline void vec_dst (const vector float *, int, const int) __attribute__ ((always_inline));\n-inline void vec_dst (const int *, int, const int) __attribute__ ((always_inline));\n+inline void vec_dst (const unsigned char *, int, const int) __attribute__ ((always_inline));\n inline void vec_dst (const signed char *, int, const int) __attribute__ ((always_inline));\n inline void vec_dst (const unsigned short *, int, const int) __attribute__ ((always_inline));\n inline void vec_dst (const short *, int, const int) __attribute__ ((always_inline));\n@@ -138,7 +138,7 @@ inline void vec_dstst (const vector unsigned int *, int, const int) __attribute_\n inline void vec_dstst (const vector signed int *, int, const int) __attribute__ ((always_inline));\n inline void vec_dstst (const vector bool int *, int, const int) __attribute__ ((always_inline));\n inline void vec_dstst (const vector float *, int, const int) __attribute__ ((always_inline));\n-inline void vec_dstst (const int *, int, const int) __attribute__ ((always_inline));\n+inline void vec_dstst (const unsigned char *, int, const int) __attribute__ ((always_inline));\n inline void vec_dstst (const signed char *, int, const int) __attribute__ ((always_inline));\n inline void vec_dstst (const unsigned short *, int, const int) __attribute__ ((always_inline));\n inline void vec_dstst (const short *, int, const int) __attribute__ ((always_inline));\n@@ -159,7 +159,7 @@ inline void vec_dststt (const vector unsigned int *, int, const int) __attribute\n inline void vec_dststt (const vector signed int *, int, const int) __attribute__ ((always_inline));\n inline void vec_dststt (const vector bool int *, int, const int) __attribute__ ((always_inline));\n inline void vec_dststt (const vector float *, int, const int) __attribute__ ((always_inline));\n-inline void vec_dststt (const int *, int, const int) __attribute__ ((always_inline));\n+inline void vec_dststt (const unsigned char *, int, const int) __attribute__ ((always_inline));\n inline void vec_dststt (const signed char *, int, const int) __attribute__ ((always_inline));\n inline void vec_dststt (const unsigned short *, int, const int) __attribute__ ((always_inline));\n inline void vec_dststt (const short *, int, const int) __attribute__ ((always_inline));\n@@ -180,7 +180,7 @@ inline void vec_dstt (const vector unsigned int *, int, const int) __attribute__\n inline void vec_dstt (const vector signed int *, int, const int) __attribute__ ((always_inline));\n inline void vec_dstt (const vector bool int *, int, const int) __attribute__ ((always_inline));\n inline void vec_dstt (const vector float *, int, const int) __attribute__ ((always_inline));\n-inline void vec_dstt (const int *, int, const int) __attribute__ ((always_inline));\n+inline void vec_dstt (const unsigned char *, int, const int) __attribute__ ((always_inline));\n inline void vec_dstt (const signed char *, int, const int) __attribute__ ((always_inline));\n inline void vec_dstt (const unsigned short *, int, const int) __attribute__ ((always_inline));\n inline void vec_dstt (const short *, int, const int) __attribute__ ((always_inline));\n@@ -195,15 +195,20 @@ inline vector signed int vec_sld (vector signed int, vector signed int, const in\n inline vector unsigned int vec_sld (vector unsigned int, vector unsigned int, const int) __attribute__ ((always_inline));\n inline vector signed short vec_sld (vector signed short, vector signed short, const int) __attribute__ ((always_inline));\n inline vector unsigned short vec_sld (vector unsigned short, vector unsigned short, const int) __attribute__ ((always_inline));\n+inline vector pixel vec_sld (vector pixel, vector pixel, const int) __attribute__ ((always_inline));\n inline vector signed char vec_sld (vector signed char, vector signed char, const int) __attribute__ ((always_inline));\n inline vector unsigned char vec_sld (vector unsigned char, vector unsigned char, const int) __attribute__ ((always_inline));\n inline vector signed char vec_splat (vector signed char, const int) __attribute__ ((always_inline));\n inline vector unsigned char vec_splat (vector unsigned char, const int) __attribute__ ((always_inline));\n+inline vector bool char vec_splat (vector bool char, const int) __attribute__ ((always_inline));\n inline vector signed short vec_splat (vector signed short, const int) __attribute__ ((always_inline));\n inline vector unsigned short vec_splat (vector unsigned short, const int) __attribute__ ((always_inline));\n+inline vector bool short vec_splat (vector bool short, const int) __attribute__ ((always_inline));\n+inline vector pixel vec_splat (vector pixel, const int) __attribute__ ((always_inline));\n inline vector float vec_splat (vector float, const int) __attribute__ ((always_inline));\n inline vector signed int vec_splat (vector signed int, const int) __attribute__ ((always_inline));\n inline vector unsigned int vec_splat (vector unsigned int, const int) __attribute__ ((always_inline));\n+inline vector bool int vec_splat (vector bool int, const int) __attribute__ ((always_inline));\n inline vector signed char vec_splat_s8 (const int) __attribute__ ((always_inline));\n inline vector signed short vec_splat_s16 (const int) __attribute__ ((always_inline));\n inline vector signed int vec_splat_s32 (const int) __attribute__ ((always_inline));"}, {"sha": "e046aa4dd071b71e492f44abe6f2c24d43a4e817", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e7df90ace6a43c5e641c179431cbd53ea29abe/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e7df90ace6a43c5e641c179431cbd53ea29abe/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=86e7df90ace6a43c5e641c179431cbd53ea29abe", "patch": "@@ -6004,6 +6004,7 @@ altivec_expand_dst_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n \t    || arg2 == error_mark_node)\n \t  return const0_rtx;\n \n+\t*expandedp = true;\n \tSTRIP_NOPS (arg2);\n \tif (TREE_CODE (arg2) != INTEGER_CST\n \t    || TREE_INT_CST_LOW (arg2) & ~0x3)\n@@ -6021,7 +6022,6 @@ altivec_expand_dst_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n \tif (pat != 0)\n \t  emit_insn (pat);\n \n-\t*expandedp = true;\n \treturn NULL_RTX;\n       }\n "}, {"sha": "155127db2ef098ace914a6fb3d3933072d40c8b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e7df90ace6a43c5e641c179431cbd53ea29abe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e7df90ace6a43c5e641c179431cbd53ea29abe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86e7df90ace6a43c5e641c179431cbd53ea29abe", "patch": "@@ -1,3 +1,7 @@\n+2004-03-19  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* g++.dg/ext/altivec-6.C: New test.\n+\n 2004-03-19  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/init/placement3.C: New test."}, {"sha": "611047ed528e4abb0c5aa38c8053e71ff27e89c8", "filename": "gcc/testsuite/g++.dg/ext/altivec-6.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e7df90ace6a43c5e641c179431cbd53ea29abe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e7df90ace6a43c5e641c179431cbd53ea29abe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-6.C?ref=86e7df90ace6a43c5e641c179431cbd53ea29abe", "patch": "@@ -0,0 +1,27 @@\n+/* Test for correct handling of literal arguments. */\n+/* Author: Ziemowit Laski  <zlaski@apple.com>  */\n+/* { dg-do compile { target powerpc*-*-* } } */\n+/* { dg-options \"-maltivec\" } */\n+\n+#include <altivec.h>\n+\n+void foo(void) {\n+  const unsigned char *buf;\n+  vector pixel vp = { 3, 4, 5, 6 };\n+  vector bool int vbi = { 1, 0, 1, 0 };\n+  vector bool short vbs = { 1, 0, 1, 0, 1, 0, 1, 0 };\n+  vector bool char vbc = { 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0 };\n+  vector signed char vsc;\n+  int a = 3;\n+  \n+  vec_dst(buf, a, 1);\n+  vec_dstst(buf, a, 2);\n+  vec_dststt(buf, a, 3);\n+  vec_dststt(buf, a, 2);\n+\n+  vp = vec_sld(vp, vp, 5);\n+  vbc = vec_splat(vbc, 7);\n+  vbs = vec_splat(vbs, 12);\n+  vp = vec_splat(vp, 17);\n+  vbi = vec_splat(vbi, 31);  \n+}"}]}