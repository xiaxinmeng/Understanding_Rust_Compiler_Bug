{"sha": "8f63caf6826e918678482413161e34b037a13fa7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY2M2NhZjY4MjZlOTE4Njc4NDgyNDEzMTYxZTM0YjAzN2ExM2ZhNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-07-26T13:10:33Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh3492@gcc.gnu.org", "date": "2016-07-26T13:10:33Z"}, "message": "re PR middle-end/70920 (if ((intptr_t)ptr == 0) doesn't get simplified to if (ptr == 0))\n\n2016-07-26  Richard Biener  <rguenther@suse.de>\n\t    Prathamesh Kulkarni <prathamesh.kulkarni@linaro.org>\n\n\tPR middle-end/70920\n\t* match.pd ((intptr)x eq/ne CST to x eq/ne (typeof x) CST): New\n\tpattern.\n\ntestsuite/\n\t* gcc.dg/pr70920-1.c: New test-case.\n\t* gcc.dg/pr70902-2.c: Likewise.\n\t* gcc.dg/pr70920-3.c: Likewise.\n\t* gcc.dg/pr70920-4.c: Likewise\n\t* gcc.dg/tree-ssa/ssa-dom-branch-1.c: Change scan-tree-dump-times to\n\t2 instead of 3.\n\nCo-Authored-By: Prathamesh Kulkarni <prathamesh.kulkarni@linaro.org>\n\nFrom-SVN: r238754", "tree": {"sha": "b13c6e8ce4b86039e91187312d3fd3205772dd46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b13c6e8ce4b86039e91187312d3fd3205772dd46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f63caf6826e918678482413161e34b037a13fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f63caf6826e918678482413161e34b037a13fa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f63caf6826e918678482413161e34b037a13fa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f63caf6826e918678482413161e34b037a13fa7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4f820552a06d38c06d1b9d9806052accad88b54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4f820552a06d38c06d1b9d9806052accad88b54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4f820552a06d38c06d1b9d9806052accad88b54"}], "stats": {"total": 113, "additions": 111, "deletions": 2}, "files": [{"sha": "bbc7e298d4a32c729ac54dc17399ae5053382ff5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f63caf6826e918678482413161e34b037a13fa7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f63caf6826e918678482413161e34b037a13fa7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f63caf6826e918678482413161e34b037a13fa7", "patch": "@@ -1,3 +1,10 @@\n+2016-07-26  Richard Biener  <rguenther@suse.de>\n+\t    Prathamesh Kulkarni <prathamesh.kulkarni@linaro.org>\n+\n+\tPR middle-end/70920\n+\t* match.pd ((intptr)x eq/ne CST to x eq/ne (typeof x) CST): New\n+\tpattern.\n+\n 2016-07-26  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* tree-ssa-structalias.c (struct scc_info): Change types of"}, {"sha": "6c2ec82340a4679a069417a548e9cf723858e55a", "filename": "gcc/match.pd", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=8f63caf6826e918678482413161e34b037a13fa7", "patch": "@@ -2513,6 +2513,15 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n        && ptrs_compare_unequal (@0, @1))\n    { neeq == EQ_EXPR ? boolean_false_node : boolean_true_node; })))\n \n+/* PR70920: Transform (intptr_t)x eq/ne CST to x eq/ne (typeof x) CST.\n+   and (typeof ptr_cst) x eq/ne ptr_cst to x eq/ne (typeof x) CST */\n+(for cmp (ne eq)\n+ (simplify\n+  (cmp (convert @0) INTEGER_CST@1)\n+  (if ((POINTER_TYPE_P (TREE_TYPE (@0)) && INTEGRAL_TYPE_P (TREE_TYPE (@1)))\n+        || (INTEGRAL_TYPE_P (TREE_TYPE (@0)) && POINTER_TYPE_P (TREE_TYPE (@1))))\n+   (cmp @0 (convert @1)))))\n+\n /* Non-equality compare simplifications from fold_binary  */\n (for cmp (lt gt le ge)\n  /* Comparisons with the highest or lowest possible integer of"}, {"sha": "b63a79c088c40eb8d7c1128665a4046a13542a65", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8f63caf6826e918678482413161e34b037a13fa7", "patch": "@@ -1,3 +1,14 @@\n+2016-07-26  Richard Biener  <rguenther@suse.de>\n+\t    Prathamesh Kulkarni <prathamesh.kulkarni@linaro.org>\n+\n+\tPR middle-end/70920\n+\t* gcc.dg/pr70920-1.c: New test-case.\n+\t* gcc.dg/pr70902-2.c: Likewise.\n+\t* gcc.dg/pr70920-3.c: Likewise.\n+\t* gcc.dg/pr70920-4.c: Likewise\n+\t* gcc.dg/tree-ssa/ssa-dom-branch-1.c: Change scan-tree-dump-times to\n+\t2 instead of 3.\n+\n 2016-07-25  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* gcc.c-torture/execute/pr71494.c: Require label_values."}, {"sha": "9b7e2d0e53b9abc6eee05126dfde7c8aa18fd4d4", "filename": "gcc/testsuite/gcc.dg/pr70920-1.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-1.c?ref=8f63caf6826e918678482413161e34b037a13fa7", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-gimple\" } */\n+\n+#include <stdint.h>\n+\n+void f1();\n+void f2();\n+\n+void\n+foo (int *a)\n+{\n+  if ((intptr_t) a == 0)\n+    {\n+      f1 ();\n+      if (a)\n+\tf2 (); \n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"if \\\\(a == 0B\\\\)\" \"gimple\" } } */"}, {"sha": "2db9897bad51abc7dc87ebace94078e077adde03", "filename": "gcc/testsuite/gcc.dg/pr70920-2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-2.c?ref=8f63caf6826e918678482413161e34b037a13fa7", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-forwprop-details\" } */\n+\n+#include <stdint.h>\n+\n+void f1();\n+void f2();\n+\n+void\n+foo (int *a)\n+{\n+  int cst = 0;\n+  if ((intptr_t) a == cst)\n+    {\n+      f1 ();\n+      if (a) \n+\tf2 (); \n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"gimple_simplified to if \\\\(a_\\[0-9\\]*\\\\(D\\\\) == 0B\\\\)\" \"forwprop1\" } } */"}, {"sha": "8b24cbc734ffa875ffb94047a5011feee89b2681", "filename": "gcc/testsuite/gcc.dg/pr70920-3.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-3.c?ref=8f63caf6826e918678482413161e34b037a13fa7", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-gimple -Wno-int-to-pointer-cast\" } */\n+\n+#include <stdint.h>\n+\n+void f1();\n+void f2();\n+\n+void\n+foo (int a)\n+{\n+  if ((int *) a == 0)\n+    {\n+      f1 ();\n+      if (a)\n+\tf2 (); \n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"if \\\\(a == 0\\\\)\" \"gimple\" } } */"}, {"sha": "dedb8959b283cbe8a6bc5b98b08df761f2f5ff5e", "filename": "gcc/testsuite/gcc.dg/pr70920-4.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr70920-4.c?ref=8f63caf6826e918678482413161e34b037a13fa7", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-ccp-details -Wno-int-to-pointer-cast\" } */\n+\n+#include <stdint.h>\n+\n+void f1();\n+void f2();\n+\n+void\n+foo (int a)\n+{\n+  void *cst = 0; \n+  if ((int *) a == cst)\n+    {\n+      f1 ();\n+      if (a) \n+\tf2 (); \n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"gimple_simplified to if \\\\(_\\[0-9\\]* == 0\\\\)\" \"ccp1\" } } */"}, {"sha": "3c15296dfeb21e42135637ad043546205a35077b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dom-branch-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-branch-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f63caf6826e918678482413161e34b037a13fa7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-branch-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-branch-1.c?ref=8f63caf6826e918678482413161e34b037a13fa7", "patch": "@@ -19,9 +19,9 @@ try_combine (rtx i1, rtx newpat)\n   else if (i1 && foo ());\n }\n \n-/* There should be three tests against i1.  Two from the hash table\n+/* There should be two tests against i1.  One from the hash table\n    dumps, one in the code itself.  */\n-/* { dg-final { scan-tree-dump-times \"if .i1_\" 3 \"dom2\"} } */\n+/* { dg-final { scan-tree-dump-times \"if .i1_\" 2 \"dom2\"} } */\n \n /* There should be no actual jump threads realized by DOM.  The\n    legitimize jump threads are handled in VRP and those discovered"}]}