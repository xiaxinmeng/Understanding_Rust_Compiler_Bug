{"sha": "d7978bff88f8db16bf28b247d4882c49eaccd623", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc5NzhiZmY4OGY4ZGIxNmJmMjhiMjQ3ZDQ4ODJjNDllYWNjZDYyMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-04-20T15:50:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-04-20T15:50:26Z"}, "message": "re PR c/47892 (Fails to vectorize comparison code, if-conversion fails)\n\n2011-04-20  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/47892\n\t* tree-if-conv.c (if_convertible_stmt_p): Const builtins\n\tare if-convertible.\n\n\t* gcc.dg/vect/fast-math-ifcvt-1.c: New testcase.\n\nFrom-SVN: r172774", "tree": {"sha": "7c56f6bd15fe4c1e8050bc6fbe899c1f27ee8cd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c56f6bd15fe4c1e8050bc6fbe899c1f27ee8cd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7978bff88f8db16bf28b247d4882c49eaccd623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7978bff88f8db16bf28b247d4882c49eaccd623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7978bff88f8db16bf28b247d4882c49eaccd623", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7978bff88f8db16bf28b247d4882c49eaccd623/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d12f71a54d11f490dca17c9d1f8a8fdf442dcb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d12f71a54d11f490dca17c9d1f8a8fdf442dcb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d12f71a54d11f490dca17c9d1f8a8fdf442dcb9"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "cf5ae0a6a1a9e13c712dcf7909af1edc52f05d71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7978bff88f8db16bf28b247d4882c49eaccd623/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7978bff88f8db16bf28b247d4882c49eaccd623/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7978bff88f8db16bf28b247d4882c49eaccd623", "patch": "@@ -1,3 +1,9 @@\n+2011-04-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47892\n+\t* tree-if-conv.c (if_convertible_stmt_p): Const builtins\n+\tare if-convertible.\n+\n 2011-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/alpha/vms.h (ASM_OUTPUT_ADDR_DIFF_ELT): Do not redefine."}, {"sha": "5c792f1670a006beb67b5cf09a5433947f5728f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7978bff88f8db16bf28b247d4882c49eaccd623/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7978bff88f8db16bf28b247d4882c49eaccd623/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7978bff88f8db16bf28b247d4882c49eaccd623", "patch": "@@ -1,3 +1,8 @@\n+2011-04-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47892\n+\t* gcc.dg/vect/fast-math-ifcvt-1.c: New testcase.\n+\n 2011-04-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/48695"}, {"sha": "ba22d8d788949427792b1753ef5d7fcfa0fd117a", "filename": "gcc/testsuite/gcc.dg/vect/fast-math-ifcvt-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7978bff88f8db16bf28b247d4882c49eaccd623/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-ifcvt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7978bff88f8db16bf28b247d4882c49eaccd623/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-ifcvt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ffast-math-ifcvt-1.c?ref=d7978bff88f8db16bf28b247d4882c49eaccd623", "patch": "@@ -0,0 +1,18 @@\n+/* PR 47892 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n+/* { dg-require-effective-target vect_condition } */\n+\n+void\n+bestseries9 (float * __restrict__ arr, int len)\n+{\n+  int i;\n+  for (i = 0; i < len; ++i)\n+    {\n+      float or = arr[i];\n+      arr[i] = (or > 0.0f) * (2 - or * or);\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"vectorized 1 loops\" \"vect\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "450ddb294b014f4134058b11a950cba9bb732a63", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7978bff88f8db16bf28b247d4882c49eaccd623/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7978bff88f8db16bf28b247d4882c49eaccd623/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=d7978bff88f8db16bf28b247d4882c49eaccd623", "patch": "@@ -719,6 +719,22 @@ if_convertible_stmt_p (gimple stmt, VEC (data_reference_p, heap) *refs)\n     case GIMPLE_ASSIGN:\n       return if_convertible_gimple_assign_stmt_p (stmt, refs);\n \n+    case GIMPLE_CALL:\n+      {\n+\ttree fndecl = gimple_call_fndecl (stmt);\n+\tif (fndecl)\n+\t  {\n+\t    int flags = gimple_call_flags (stmt);\n+\t    if ((flags & ECF_CONST)\n+\t\t&& !(flags & ECF_LOOPING_CONST_OR_PURE)\n+\t\t/* We can only vectorize some builtins at the moment,\n+\t\t   so restrict if-conversion to those.  */\n+\t\t&& DECL_BUILT_IN (fndecl))\n+\t      return true;\n+\t  }\n+\treturn false;\n+      }\n+\n     default:\n       /* Don't know what to do with 'em so don't do anything.  */\n       if (dump_file && (dump_flags & TDF_DETAILS))"}]}