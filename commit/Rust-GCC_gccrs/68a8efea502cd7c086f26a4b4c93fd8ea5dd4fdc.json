{"sha": "68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhhOGVmZWE1MDJjZDdjMDg2ZjI2YTRiNGM5M2ZkOGVhNWRkNGZkYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-09T19:50:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-09T19:50:03Z"}, "message": "PR c++/85264 - ICE with excess template-parameter-list.\n\n\t* parser.c (cp_parser_check_template_parameters): Add template_id_p\n\tparameter.  Don't allow an extra template header if true.\n\t(cp_parser_class_head): Pass template_id_p.\n\t(cp_parser_elaborated_type_specifier): Likewise.\n\t(cp_parser_alias_declaration): Likewise.\n\t(cp_parser_check_declarator_template_parameters): Likewise.\n\nFrom-SVN: r259253", "tree": {"sha": "53b9d4e2e4cafdd85f18ee47c7fdbd72e4550e77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53b9d4e2e4cafdd85f18ee47c7fdbd72e4550e77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e4f1148ce233f2533d56ab20dc002dc1e9a83d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e4f1148ce233f2533d56ab20dc002dc1e9a83d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e4f1148ce233f2533d56ab20dc002dc1e9a83d7"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "f55a240186da440a982fcc55ec478ffb768a1977", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc", "patch": "@@ -1,3 +1,13 @@\n+2018-04-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/85264 - ICE with excess template-parameter-list.\n+\t* parser.c (cp_parser_check_template_parameters): Add template_id_p\n+\tparameter.  Don't allow an extra template header if true.\n+\t(cp_parser_class_head): Pass template_id_p.\n+\t(cp_parser_elaborated_type_specifier): Likewise.\n+\t(cp_parser_alias_declaration): Likewise.\n+\t(cp_parser_check_declarator_template_parameters): Likewise.\n+\n 2018-04-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/85194"}, {"sha": "d4b62c75c44e359eb700caed61a7e886f8a52186", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc", "patch": "@@ -2498,7 +2498,7 @@ static tree cp_parser_maybe_treat_template_as_class\n static bool cp_parser_check_declarator_template_parameters\n   (cp_parser *, cp_declarator *, location_t);\n static bool cp_parser_check_template_parameters\n-  (cp_parser *, unsigned, location_t, cp_declarator *);\n+  (cp_parser *, unsigned, bool, location_t, cp_declarator *);\n static cp_expr cp_parser_simple_cast_expression\n   (cp_parser *);\n static tree cp_parser_global_scope_opt\n@@ -17923,6 +17923,7 @@ cp_parser_elaborated_type_specifier (cp_parser* parser,\n \t  if (template_parm_lists_apply\n \t      && !cp_parser_check_template_parameters (parser,\n \t\t\t\t\t\t       /*num_templates=*/0,\n+\t\t\t\t\t\t       /*template_id*/false,\n \t\t\t\t\t\t       token->location,\n \t\t\t\t\t\t       /*declarator=*/NULL))\n \t    return error_mark_node;\n@@ -18977,6 +18978,7 @@ cp_parser_alias_declaration (cp_parser* parser)\n   if (parser->num_template_parameter_lists\n       && !cp_parser_check_template_parameters (parser,\n \t\t\t\t\t       /*num_templates=*/0,\n+\t\t\t\t\t       /*template_id*/false,\n \t\t\t\t\t       id_location,\n \t\t\t\t\t       /*declarator=*/NULL))\n     return error_mark_node;\n@@ -23123,6 +23125,7 @@ cp_parser_class_head (cp_parser* parser,\n   /* Make sure that the right number of template parameters were\n      present.  */\n   if (!cp_parser_check_template_parameters (parser, num_templates,\n+\t\t\t\t\t    template_id_p,\n \t\t\t\t\t    type_start_token->location,\n \t\t\t\t\t    /*declarator=*/NULL))\n     {\n@@ -26397,17 +26400,22 @@ cp_parser_check_declarator_template_parameters (cp_parser* parser,\n       {\n \tunsigned num_templates = 0;\n \ttree scope = declarator->u.id.qualifying_scope;\n+\tbool template_id_p = false;\n \n \tif (scope)\n \t  num_templates = num_template_headers_for_class (scope);\n \telse if (TREE_CODE (declarator->u.id.unqualified_name)\n \t\t == TEMPLATE_ID_EXPR)\n-\t  /* If the DECLARATOR has the form `X<y>' then it uses one\n-\t     additional level of template parameters.  */\n-\t  ++num_templates;\n+\t  {\n+\t    /* If the DECLARATOR has the form `X<y>' then it uses one\n+\t       additional level of template parameters.  */\n+\t    ++num_templates;\n+\t    template_id_p = true;\n+\t  }\n \n \treturn cp_parser_check_template_parameters \n-\t  (parser, num_templates, declarator_location, declarator);\n+\t  (parser, num_templates, template_id_p, declarator_location,\n+\t   declarator);\n       }\n \n     case cdk_function:\n@@ -26436,6 +26444,7 @@ cp_parser_check_declarator_template_parameters (cp_parser* parser,\n static bool\n cp_parser_check_template_parameters (cp_parser* parser,\n \t\t\t\t     unsigned num_templates,\n+\t\t\t\t     bool template_id_p,\n \t\t\t\t     location_t location,\n \t\t\t\t     cp_declarator *declarator)\n {\n@@ -26445,7 +26454,8 @@ cp_parser_check_template_parameters (cp_parser* parser,\n     return true;\n   /* If there are more, but only one more, then we are referring to a\n      member template.  That's OK too.  */\n-  if (parser->num_template_parameter_lists == num_templates + 1)\n+  if (!template_id_p\n+      && parser->num_template_parameter_lists == num_templates + 1)\n     return true;\n   /* If there are more template classes than parameter lists, we have\n      something like:"}, {"sha": "1d6e3c2f10a3397fbccb0d1a89fc2c2e1b7b45f2", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic176.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic176.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic176.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic176.C?ref=68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/85264\n+// { dg-do compile { target c++11 } }\n+\n+template<typename> struct A {};\n+\n+template<int>\n+template<typename... T>\n+struct A<void(T...)> {};    // { dg-error \"too many template-parameter-lists\" }\n+\n+A<void(int)> a;"}]}