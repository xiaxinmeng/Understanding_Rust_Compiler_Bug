{"sha": "a55a78d134e4d6d37071764402555beb2215b880", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU1YTc4ZDEzNGU0ZDZkMzcwNzE3NjQ0MDI1NTViZWIyMjE1Yjg4MA==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-06-15T20:25:44Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-06-15T20:25:44Z"}, "message": "re PR fastjar/9532 (jar -C flag is incompatible with Sun's (fastjar uses nonportable feature of getcwd))\n\n\tPR java/9532\n\t* jartool.c (main) Give proper error messages with -C, and\n\tcheck for missing arguments properly.  Send error messages\n\tto stderr.\n\t* jartool.c (add_to_jar): Make getcwd() call portable,\n\tand check for error return.\n\nFrom-SVN: r67985", "tree": {"sha": "b1a3a21a2edceaf8ef1539c3dcf18e88202a009c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1a3a21a2edceaf8ef1539c3dcf18e88202a009c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a55a78d134e4d6d37071764402555beb2215b880", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a55a78d134e4d6d37071764402555beb2215b880", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a55a78d134e4d6d37071764402555beb2215b880", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a55a78d134e4d6d37071764402555beb2215b880/comments", "author": null, "committer": null, "parents": [{"sha": "3d57a5ccfe3b9c773b7c9c933ced25cd9ad002e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d57a5ccfe3b9c773b7c9c933ced25cd9ad002e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d57a5ccfe3b9c773b7c9c933ced25cd9ad002e3"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "4536ae733023fb299b261f650ed94a7a27f9fb6e", "filename": "fastjar/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55a78d134e4d6d37071764402555beb2215b880/fastjar%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55a78d134e4d6d37071764402555beb2215b880/fastjar%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FChangeLog?ref=a55a78d134e4d6d37071764402555beb2215b880", "patch": "@@ -1,3 +1,12 @@\n+2003-06-15  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\tPR java/9532\n+\t* jartool.c (main) Give proper error messages with -C, and\n+\tcheck for missing arguments properly.  Send error messages\n+\tto stderr.\n+\t* jartool.c (add_to_jar): Make getcwd() call portable,\n+\tand check for error return.\n+\n 2003-03-30  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* fastjar.texi: Remove @ at start of file."}, {"sha": "31323d114b76ce3df42f45c3aea8d6f68d4afc18", "filename": "fastjar/jartool.c", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55a78d134e4d6d37071764402555beb2215b880/fastjar%2Fjartool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55a78d134e4d6d37071764402555beb2215b880/fastjar%2Fjartool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fjartool.c?ref=a55a78d134e4d6d37071764402555beb2215b880", "patch": "@@ -507,15 +507,19 @@ int main(int argc, char **argv){\n       if(!strcmp(arg, \"-C\")){\n \tconst char *dir_to_change = get_next_arg ();\n \tconst char *file_to_add = get_next_arg ();\n-        if(!dir_to_change \n-\t   || !file_to_add\n-\t   || add_to_jar(jarfd, dir_to_change, file_to_add)){\n-          printf(\"Error adding %s to jar archive!\\n\", arg);\n+        if (!dir_to_change || !file_to_add) {\n+          fprintf(stderr, \"Error: missing argument for -C.\\n\");\n+          exit(1);\n+        }\n+\tif (add_to_jar(jarfd, dir_to_change, file_to_add)) {\n+          fprintf(stderr,\n+                 \"Error adding %s (in directory %s) to jar archive!\\n\",\n+                 file_to_add, dir_to_change);\n           exit(1);\n         }\n       } else {\n         if(add_to_jar(jarfd, NULL, arg)){\n-          printf(\"Error adding %s to jar archive!\\n\", arg);\n+          fprintf(stderr, \"Error adding %s to jar archive!\\n\", arg);\n           exit(1);\n         }\n       }\n@@ -817,8 +821,8 @@ int add_to_jar(int fd, const char *new_dir, const char *file){\n   struct dirent *de;\n   zipentry *ze;\n   int stat_return;\n-  char *old_dir = NULL;\n-  \n+  char old_dir[MAXPATHLEN];\n+\n   /* This is a quick compatibility fix -- Simon Weijgers <simon@weijgers.com> \n    * It fixes this:\n    *   \"normal\" jar : org/apache/java/io/LogRecord.class\n@@ -830,10 +834,12 @@ int add_to_jar(int fd, const char *new_dir, const char *file){\n     file+=2;\n   \n   /* If new_dir isn't null, we need to change to that directory.  However,\n-     we also need to return to the old directory when we're done */\n+     we also need to return to the old directory when we're done.  See below.*/\n   if(new_dir != NULL){\n-    old_dir = getcwd(NULL, 0);\n-\n+    if (getcwd(old_dir, MAXPATHLEN) == NULL) {\n+      perror(\"getcwd\");\n+      return 1;\n+    }\n     if(chdir(new_dir) == -1){\n       perror(new_dir);\n       return 1;\n@@ -957,11 +963,13 @@ int add_to_jar(int fd, const char *new_dir, const char *file){\n     fprintf(stderr, \"Illegal file specified: %s\\n\", file);\n   }\n   \n-  if(old_dir != NULL){\n-    if(chdir(old_dir))\n+  /* If (and only if!) new_dir != NULL, we switched directories, so\n+     we have to switch back to the old directory. */\n+  if (new_dir != NULL) {\n+    if (chdir(old_dir) == -1) {\n       perror(old_dir);\n-    \n-    free(old_dir);\n+      return 1;\n+    }\n   }\n \n   return 0;"}]}