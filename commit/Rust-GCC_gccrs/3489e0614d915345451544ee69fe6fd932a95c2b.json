{"sha": "3489e0614d915345451544ee69fe6fd932a95c2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ4OWUwNjE0ZDkxNTM0NTQ1MTU0NGVlNjlmZTZmZDkzMmE5NWMyYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-05-01T17:15:23Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-05-01T17:15:23Z"}, "message": "missed from my previous checkin\n\nFrom-SVN: r66337", "tree": {"sha": "ae5069d7863961ed43f75ac904862294279a8b7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae5069d7863961ed43f75ac904862294279a8b7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3489e0614d915345451544ee69fe6fd932a95c2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3489e0614d915345451544ee69fe6fd932a95c2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3489e0614d915345451544ee69fe6fd932a95c2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3489e0614d915345451544ee69fe6fd932a95c2b/comments", "author": null, "committer": null, "parents": [{"sha": "02ca7595012e0c08eeaf65e697ad7087f1d2b4a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ca7595012e0c08eeaf65e697ad7087f1d2b4a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ca7595012e0c08eeaf65e697ad7087f1d2b4a9"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "28be1f0b0d8e0afe03bb57a5e998c69d5381a6ae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3489e0614d915345451544ee69fe6fd932a95c2b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3489e0614d915345451544ee69fe6fd932a95c2b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3489e0614d915345451544ee69fe6fd932a95c2b", "patch": "@@ -1,3 +1,27 @@\n+2003-05-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* class.c (finish_struct): Rename lineno to input_line.\n+\t* decl.c (push_binding_level, pop_binding_level,\n+\tsuspend_binding_level, resume_binding_level, make_label_decl,\n+\tuse_label, start_function): Likewise.\n+\t* decl2.c (warn_if_unknown_interface,\n+\tstart_static_initialization_or_destruction,\n+\tgenerate_ctor_or_dtor_function, finish_file): Likewise.\n+\t* error.c (cp_line_of, print_instantiation_full_context,\n+\tprint_instantiation_context): Likewise.\n+\t* except.c (check_handlers_1, check_handlers): Likewise.\n+\t* init.c (create_temporary_var): Likewise.\n+\t* method.c (use_thunk, synthesize_method): Likewise.\n+\t* parser.c (cp_lexer_set_source_position_from_token,\n+\tcp_lexer_get_preprocessor_token): Likewise.\n+\t* pt.c (push_tinst_level, pop_tinst_level,\n+\ttsubst_friend_function, instantiate_class_template, tsubst_decl,\n+\ttsubst, tsubst_expr, instantiate_decl): Likewise.\n+\t* semantics.c (genrtl_try_block, finish_label_stmt,\n+\tbegin_class_definition, expand_body,\n+\tgenrtl_finish_function): Likewise. \n+\t* tree.c (build_min_nt, build_min): Likewise.\n+\n 2003-05-01  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl2.c (comdat_linkage): Don't externalize explicit"}, {"sha": "4dedd5d839d58946c879e718366f6edd0d665067", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3489e0614d915345451544ee69fe6fd932a95c2b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3489e0614d915345451544ee69fe6fd932a95c2b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=3489e0614d915345451544ee69fe6fd932a95c2b", "patch": "@@ -1,3 +1,27 @@\n+2003-05-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* lex.h (lineno): Rename to ...\n+\t(input_line): ... here\n+\t* parse-scan.y (lineno): Rename to ...\n+\t(input_line): ... here.\n+\t(reset_report): Rename lineno to input_line.\n+\t* check-init.c (check_init): Likewise.\n+\t* class.c (push_class): Likewise.\n+\t* decl.c (complete_start_java_method, end_java_method): Likewise.\n+\t* expr.c (expand_byte_code): Likewise.\n+\t* jcf-parse.c (give_name_to_class, parse_class_file): Likewise.\n+\t* jcf-write.c (generate_bytecode_insns): Likewise.\n+\t* lex.c (java_init_lex, java_allocate_new_line,\n+\tdo_java_lex): Likewise.\n+\t* parse.h (YYNOT_TWICE): Likewise.\n+\t* parse.y (empty_statement, expression_statement,\n+\tjava_pop_parser_context, java_parser_context_save_global,\n+\tyyerror, register_fields, method_header, safe_layout_class,\n+\tfind_in_imports_on_demand, create_artificial_method,\n+\tsource_end_java_method, start_complete_expand_method,\n+\tbuild_thisn_assign, java_complete_lhs,\n+\tmaybe_absorb_scoping_block): Likewise.\n+\n 2003-04-20  Mohan Embar  <gnustuff@thisiscool.com>\n \n \t* jcf-io.c (find_class): use DIR_SEPARATOR instead of"}]}