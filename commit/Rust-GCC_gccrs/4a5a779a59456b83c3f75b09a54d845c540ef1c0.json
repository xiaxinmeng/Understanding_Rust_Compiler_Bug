{"sha": "4a5a779a59456b83c3f75b09a54d845c540ef1c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE1YTc3OWE1OTQ1NmI4M2MzZjc1YjA5YTU0ZDg0NWM1NDBlZjFjMA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-07-13T02:44:28Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-07-13T02:44:28Z"}, "message": "ree.c: use auto_vec in ext_state\n\ngcc/ChangeLog:\n\n2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* ree.c (struct ext_state): Make type of members auto_vec.\n\t(find_and_remove_re): Adjust.\n\nFrom-SVN: r238283", "tree": {"sha": "ad9fe4e1f949cac9dee148e104d8da98e837e281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad9fe4e1f949cac9dee148e104d8da98e837e281"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a5a779a59456b83c3f75b09a54d845c540ef1c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5a779a59456b83c3f75b09a54d845c540ef1c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5a779a59456b83c3f75b09a54d845c540ef1c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5a779a59456b83c3f75b09a54d845c540ef1c0/comments", "author": null, "committer": null, "parents": [{"sha": "06dc18b33ed6c755ea37c9a25da395cace5d3a3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06dc18b33ed6c755ea37c9a25da395cace5d3a3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06dc18b33ed6c755ea37c9a25da395cace5d3a3e"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "ebf64ca77f58616f94823b9f4bef1b39ce9ba4b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a779a59456b83c3f75b09a54d845c540ef1c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a779a59456b83c3f75b09a54d845c540ef1c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a5a779a59456b83c3f75b09a54d845c540ef1c0", "patch": "@@ -1,3 +1,8 @@\n+2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* ree.c (struct ext_state): Make type of members auto_vec.\n+\t(find_and_remove_re): Adjust.\n+\n 2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* cfgexpand.c (struct stack_vars_data): Make type of fields"}, {"sha": "3245ac58fa8d43b87d0823dd10ca1628502dfa70", "filename": "gcc/ree.c", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a5a779a59456b83c3f75b09a54d845c540ef1c0/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a5a779a59456b83c3f75b09a54d845c540ef1c0/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=4a5a779a59456b83c3f75b09a54d845c540ef1c0", "patch": "@@ -544,10 +544,10 @@ struct ext_state\n   /* In order to avoid constant alloc/free, we keep these\n      4 vectors live through the entire find_and_remove_re and just\n      truncate them each time.  */\n-  vec<rtx_insn *> defs_list;\n-  vec<rtx_insn *> copies_list;\n-  vec<rtx_insn *> modified_list;\n-  vec<rtx_insn *> work_list;\n+  auto_vec<rtx_insn *> defs_list;\n+  auto_vec<rtx_insn *> copies_list;\n+  auto_vec<rtx_insn *> modified_list;\n+  auto_vec<rtx_insn *> work_list;\n \n   /* For instructions that have been successfully modified, this is\n      the original mode from which the insn is extending and\n@@ -1147,7 +1147,6 @@ find_and_remove_re (void)\n   vec<ext_cand> reinsn_list;\n   auto_vec<rtx_insn *> reinsn_del_list;\n   auto_vec<rtx_insn *> reinsn_copy_list;\n-  ext_state state;\n \n   /* Construct DU chain to get all reaching definitions of each\n      extension instruction.  */\n@@ -1159,10 +1158,8 @@ find_and_remove_re (void)\n \n   max_insn_uid = get_max_uid ();\n   reinsn_list = find_removable_extensions ();\n-  state.defs_list.create (0);\n-  state.copies_list.create (0);\n-  state.modified_list.create (0);\n-  state.work_list.create (0);\n+\n+  ext_state state;\n   if (reinsn_list.is_empty ())\n     state.modified = NULL;\n   else\n@@ -1238,10 +1235,6 @@ find_and_remove_re (void)\n     delete_insn (curr_insn);\n \n   reinsn_list.release ();\n-  state.defs_list.release ();\n-  state.copies_list.release ();\n-  state.modified_list.release ();\n-  state.work_list.release ();\n   XDELETEVEC (state.modified);\n \n   if (dump_file && num_re_opportunities > 0)"}]}