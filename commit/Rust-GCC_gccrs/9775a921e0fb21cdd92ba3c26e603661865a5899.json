{"sha": "9775a921e0fb21cdd92ba3c26e603661865a5899", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc3NWE5MjFlMGZiMjFjZGQ5MmJhM2MyNmU2MDM2NjE4NjVhNTg5OQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-01-27T13:02:54Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-01-27T13:02:54Z"}, "message": "re PR fortran/52016 ([OOP] Polymorphism and elemental: missing diagnostic)\n\n2012-01-27  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52016\n        * resolve.c (resolve_formal_arglist): Fix elemental\n        constraint checks for polymorphic dummies.\n\n2012-01-27  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52016\n        * gfortran.dg/elemental_args_check_5.f90: New.\n\nFrom-SVN: r183620", "tree": {"sha": "c8076a388aa6ee87935d6bb837f822203c931edf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8076a388aa6ee87935d6bb837f822203c931edf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9775a921e0fb21cdd92ba3c26e603661865a5899", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9775a921e0fb21cdd92ba3c26e603661865a5899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9775a921e0fb21cdd92ba3c26e603661865a5899", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9775a921e0fb21cdd92ba3c26e603661865a5899/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "45c8342998c3c431a06366f37c48be9082de8906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c8342998c3c431a06366f37c48be9082de8906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45c8342998c3c431a06366f37c48be9082de8906"}], "stats": {"total": 68, "additions": 64, "deletions": 4}, "files": [{"sha": "675c6eed6bb51ba3dfca36d8e207fffadc30e16e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9775a921e0fb21cdd92ba3c26e603661865a5899/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9775a921e0fb21cdd92ba3c26e603661865a5899/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9775a921e0fb21cdd92ba3c26e603661865a5899", "patch": "@@ -1,3 +1,9 @@\n+2012-01-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52016\n+\t* resolve.c (resolve_formal_arglist): Fix elemental\n+\tconstraint checks for polymorphic dummies.\n+\n 2012-01-27  Paul Thomas  <pault@gcc.gnu.org>\n \t    Tobias Burnus <burnus@gcc.gnu.org>\n \n@@ -24,7 +30,11 @@\n \tgfc_copy_class_to_clasfc_cs, to copy to the allocated data.\n \t* trans.h : Prototypes for gfc_get_class_array_ref,\n \tgfc_copy_class_to_class and gfc_conv_class_to_class.\n-  \n+\n+2012-01-25  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* resolve.c (symbol_as): Check also for attr.class_ok.\n+\n 2012-01-25  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51995"}, {"sha": "9bd5c00b33ba014feb03bd1de04f28917d1301dc", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9775a921e0fb21cdd92ba3c26e603661865a5899/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9775a921e0fb21cdd92ba3c26e603661865a5899/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=9775a921e0fb21cdd92ba3c26e603661865a5899", "patch": "@@ -374,21 +374,26 @@ resolve_formal_arglist (gfc_symbol *proc)\n       if (gfc_elemental (proc))\n \t{\n \t  /* F08:C1289.  */\n-\t  if (sym->attr.codimension)\n+\t  if (sym->attr.codimension\n+\t      || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n+\t\t  && CLASS_DATA (sym)->attr.codimension))\n \t    {\n \t      gfc_error (\"Coarray dummy argument '%s' at %L to elemental \"\n \t\t\t \"procedure\", sym->name, &sym->declared_at);\n \t      continue;\n \t    }\n \n-\t  if (sym->as != NULL)\n+\t  if (sym->as || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n+\t\t\t  && CLASS_DATA (sym)->as))\n \t    {\n \t      gfc_error (\"Argument '%s' of elemental procedure at %L must \"\n \t\t\t \"be scalar\", sym->name, &sym->declared_at);\n \t      continue;\n \t    }\n \n-\t  if (sym->attr.allocatable)\n+\t  if (sym->attr.allocatable\n+\t      || (sym->ts.type == BT_CLASS && CLASS_DATA (sym)\n+\t\t  && CLASS_DATA (sym)->attr.allocatable))\n \t    {\n \t      gfc_error (\"Argument '%s' of elemental procedure at %L cannot \"\n \t\t\t \"have the ALLOCATABLE attribute\", sym->name,\n@@ -1575,6 +1580,16 @@ resolve_procedure_expression (gfc_expr* expr)\n }\n \n \n+gfc_array_spec *\n+symbol_as (gfc_symbol *sym)\n+{\n+  if (sym->ts.type == BT_CLASS && sym->attr.class_ok)\n+    return CLASS_DATA (sym)->as;\n+  else\n+    return sym->as;\n+}\n+\n+\n /* Resolve an actual argument list.  Most of the time, this is just\n    resolving the expressions in the list.\n    The exception is that we sometimes have to decide whether arguments"}, {"sha": "b3440a03a845487165e87b377165c9252742a432", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9775a921e0fb21cdd92ba3c26e603661865a5899/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9775a921e0fb21cdd92ba3c26e603661865a5899/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9775a921e0fb21cdd92ba3c26e603661865a5899", "patch": "@@ -1,3 +1,8 @@\n+2012-01-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52016\n+\t* gfortran.dg/elemental_args_check_5.f90: New.\n+\n 2012-01-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/51959"}, {"sha": "d7445c08395afa1909ba90a527e3c945c76a21c2", "filename": "gcc/testsuite/gfortran.dg/elemental_args_check_5.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9775a921e0fb21cdd92ba3c26e603661865a5899/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_args_check_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9775a921e0fb21cdd92ba3c26e603661865a5899/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_args_check_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Felemental_args_check_5.f90?ref=9775a921e0fb21cdd92ba3c26e603661865a5899", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n+!\n+!\n+  type t\n+  end type t\n+  type t2\n+  end type t2\n+contains\n+elemental subroutine foo0(v) ! OK\n+  class(t), intent(in) :: v\n+end subroutine\n+\n+elemental subroutine foo1(w) ! { dg-error \"Argument 'w' of elemental procedure at .1. cannot have the ALLOCATABLE attribute\" }\n+  class(t), allocatable, intent(in) :: w\n+end subroutine\n+\n+elemental subroutine foo2(x) ! { dg-error \"Argument 'x' of elemental procedure at .1. cannot have the POINTER attribute\" }\n+  class(t), pointer, intent(in) :: x\n+end subroutine\n+\n+elemental subroutine foo3(y) ! { dg-error \"Coarray dummy argument 'y' at .1. to elemental procedure\" }\n+  class(t2), intent(in) :: y[*]\n+end subroutine\n+\n+elemental subroutine foo4(z) ! { dg-error \"Argument 'z' of elemental procedure at .1. must be scalar\" }\n+  class(t), intent(in) :: z(:)\n+end subroutine\n+\n+end"}]}