{"sha": "1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "node_id": "C_kwDOANBUbNoAKDFkNjYxNjZiMGY3MTg1YWM4ZTU0Yjk3ZmNmNTUyOGVjMWZkNDMwZTk", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-06T05:09:49Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T03:04:08Z"}, "message": "RISC-V: Add vzext.vf4 C API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vzext_vf4-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_m-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_m-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_m-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_mu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_mu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_mu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_tu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_tu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_tu-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_tum-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_tum-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_tum-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_tumu-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_tumu-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vzext_vf4_tumu-3.c: New test.", "tree": {"sha": "03756dae2952576f16f8308d67b8e9fe460b8af4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03756dae2952576f16f8308d67b8e9fe460b8af4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80"}], "stats": {"total": 1242, "additions": 1242, "deletions": 0}, "files": [{"sha": "43df7caf4e133fd13c18bd7b983d245a768ab63f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-1.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2(op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1(op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2(op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4(op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8(op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1(op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2(op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4(op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8(op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "d85f1f7edd03f5cdf5af7915b164dfdf36acda0b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-2.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2(op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1(op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2(op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4(op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8(op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1(op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2(op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4(op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8(op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "a3f625d36a063a0bedc96f92d9e8cdd461a79d15", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4-3.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2(vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2(op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1(vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1(op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2(vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2(op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4(vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4(op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8(vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8(op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1(vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1(op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2(vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2(op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4(vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4(op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8(vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8(op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "fbcb776d70594d02ec030b2f5dd8605385b64b16", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_m-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_m-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_m-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_m-1.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_m(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_m(mask,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_m(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_m(mask,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_m(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_m(mask,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_m(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_m(mask,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_m(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_m(mask,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_m(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_m(mask,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_m(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_m(mask,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_m(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_m(mask,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_m(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_m(mask,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "cbe8d01ba9cac2090edcc5be6c16b85edd74824e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_m-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_m-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_m-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_m-2.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_m(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_m(mask,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_m(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_m(mask,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_m(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_m(mask,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_m(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_m(mask,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_m(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_m(mask,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_m(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_m(mask,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_m(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_m(mask,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_m(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_m(mask,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_m(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_m(mask,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "47038d25bb035dfc8caf70f59401a86d00d92688", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_m-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_m-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_m-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_m-3.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_m(vbool64_t mask,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_m(mask,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_m(vbool32_t mask,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_m(mask,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_m(vbool16_t mask,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_m(mask,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_m(vbool8_t mask,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_m(mask,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_m(vbool4_t mask,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_m(mask,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_m(vbool64_t mask,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_m(mask,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_m(vbool32_t mask,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_m(mask,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_m(vbool16_t mask,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_m(mask,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_m(vbool8_t mask,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_m(mask,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "14b162f39bc71ca95240f5d8cd4dbbed11152ce3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_mu-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-1.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_mu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_mu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_mu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_mu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_mu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_mu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "b6437665cb0ded4fc76dd3c329a636f0ada404e9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_mu-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-2.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_mu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_mu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_mu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_mu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_mu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_mu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "a83ab6f1af1066a64d951b3d1babeba00305df9a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_mu-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_mu-3.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_mu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_mu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_mu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_mu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_mu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_mu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_mu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_mu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_mu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_mu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_mu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "ff76d422965b890947659f0d1c04d6ce48b79e81", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_tu-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-1.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_tu(vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_tu(vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_tu(vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_tu(vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_tu(vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_tu(vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_tu(vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_tu(vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_tu(merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_tu(vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_tu(merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "553e3c7dfe7647fd49cd4ab1d1dde26643885a0c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_tu-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-2.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_tu(vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_tu(vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_tu(vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_tu(vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_tu(merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_tu(vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_tu(vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_tu(vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_tu(vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_tu(merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_tu(vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_tu(merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "276deda7d6afcbcbfcbeed1d29d689235f43d186", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_tu-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tu-3.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_tu(vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_tu(vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_tu(vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_tu(vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_tu(merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_tu(vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_tu(vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_tu(vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_tu(vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_tu(merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_tu(vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_tu(merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+} 1 } } */"}, {"sha": "9ab4183fe4e1b5fcc0bfd3563f2d7038ba48fbd7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_tum-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-1.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_tum(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_tum(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_tum(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_tum(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_tum(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_tum(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "2e87d459d11e2a230b917490f273be0700f45315", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_tum-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-2.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_tum(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_tum(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_tum(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_tum(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_tum(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_tum(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "ba724b97e0400336ba844583aacb0f620e7918b4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_tum-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tum-3.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_tum(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_tum(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_tum(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_tum(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_tum(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_tum(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_tum(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_tum(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_tum(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_tum(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_tum(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "656c63d72fa712f28876610769c520d799126e0b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_tumu-1.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-1.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_tumu(mask,merge,op1,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "8fb7ed34ba12d3aaf618cc106d521613d46d8b14", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_tumu-2.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-2.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_tumu(mask,merge,op1,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_tumu(mask,merge,op1,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}, {"sha": "c5e8f721fee3f74d92f427a8405f0ffcdc1064c6", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vzext_vf4_tumu-3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d66166b0f7185ac8e54b97fcf5528ec1fd430e9/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvzext_vf4_tumu-3.c?ref=1d66166b0f7185ac8e54b97fcf5528ec1fd430e9", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vuint32mf2_t test___riscv_vzext_vf4_u32mf2_tumu(vbool64_t mask,vuint32mf2_t merge,vuint8mf8_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32mf2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vzext_vf4_u32m1_tumu(vbool32_t mask,vuint32m1_t merge,vuint8mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vzext_vf4_u32m2_tumu(vbool16_t mask,vuint32m2_t merge,vuint8mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vzext_vf4_u32m4_tumu(vbool8_t mask,vuint32m4_t merge,vuint8m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vzext_vf4_u32m8_tumu(vbool4_t mask,vuint32m8_t merge,vuint8m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u32m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vzext_vf4_u64m1_tumu(vbool64_t mask,vuint64m1_t merge,vuint16mf4_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m1_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vzext_vf4_u64m2_tumu(vbool32_t mask,vuint64m2_t merge,vuint16mf2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m2_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vzext_vf4_u64m4_tumu(vbool16_t mask,vuint64m4_t merge,vuint16m1_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m4_tumu(mask,merge,op1,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vzext_vf4_u64m8_tumu(vbool8_t mask,vuint64m8_t merge,vuint16m2_t op1,size_t vl)\n+{\n+    return __riscv_vzext_vf4_u64m8_tumu(mask,merge,op1,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vzext\\.vf4\\s+v[0-9]+,\\s*v[0-9]+,\\s*v0.t} 1 } } */"}]}