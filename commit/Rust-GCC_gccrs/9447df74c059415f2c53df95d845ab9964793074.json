{"sha": "9447df74c059415f2c53df95d845ab9964793074", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ0N2RmNzRjMDU5NDE1ZjJjNTNkZjk1ZDg0NWFiOTk2NDc5MzA3NA==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2014-04-14T08:31:34Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2014-04-14T08:31:34Z"}, "message": "sh-mem.cc (sh_expand_strlen): Unroll last word.\n\n2014-04-14  Christian Bruel  <christian.bruel@st.com>\n\n       * config/sh/sh-mem.cc (sh_expand_strlen): Unroll last word.\n\nFrom-SVN: r209358", "tree": {"sha": "e54a57f2c51644b57bc64cfabda1782fad7b36ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e54a57f2c51644b57bc64cfabda1782fad7b36ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9447df74c059415f2c53df95d845ab9964793074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9447df74c059415f2c53df95d845ab9964793074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9447df74c059415f2c53df95d845ab9964793074", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9447df74c059415f2c53df95d845ab9964793074/comments", "author": null, "committer": null, "parents": [{"sha": "fa1aecc1c218eca8a1b5643e9276bffe485f6e67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa1aecc1c218eca8a1b5643e9276bffe485f6e67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa1aecc1c218eca8a1b5643e9276bffe485f6e67"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "4d1bc3d58cce3f13bcfe3bb7ea66a93e1062d8ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9447df74c059415f2c53df95d845ab9964793074/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9447df74c059415f2c53df95d845ab9964793074/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9447df74c059415f2c53df95d845ab9964793074", "patch": "@@ -1,3 +1,7 @@\n+2014-04-14  Christian Bruel  <christian.bruel@st.com>\n+\n+        * config/sh/sh-mem.cc (sh_expand_strlen): Unroll last word.\n+\n 2014-04-14  Christian Bruel  <christian.bruel@st.com>\n \n \t* config/sh/sh.md (setmemqi): New expand pattern."}, {"sha": "1b84f9b63b7766d304b6d14612a9238f8367f7ad", "filename": "gcc/config/sh/sh-mem.cc", "status": "modified", "additions": 29, "deletions": 3, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9447df74c059415f2c53df95d845ab9964793074/gcc%2Fconfig%2Fsh%2Fsh-mem.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9447df74c059415f2c53df95d845ab9964793074/gcc%2Fconfig%2Fsh%2Fsh-mem.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-mem.cc?ref=9447df74c059415f2c53df95d845ab9964793074", "patch": "@@ -586,9 +586,35 @@ sh_expand_strlen (rtx *operands)\n \n   emit_move_insn (current_addr, plus_constant (Pmode, current_addr, -4));\n \n-  /* start byte loop.  */\n   addr1 = adjust_address (addr1, QImode, 0);\n \n+  /* unroll remaining bytes.  */\n+  emit_insn (gen_extendqisi2 (tmp1, addr1));\n+  emit_insn (gen_cmpeqsi_t (tmp1, const0_rtx));\n+  jump = emit_jump_insn (gen_branch_true (L_return));\n+  add_int_reg_note (jump, REG_BR_PROB, prob_likely);\n+\n+  emit_move_insn (current_addr, plus_constant (Pmode, current_addr, 1));\n+\n+  emit_insn (gen_extendqisi2 (tmp1, addr1));\n+  emit_insn (gen_cmpeqsi_t (tmp1, const0_rtx));\n+  jump = emit_jump_insn (gen_branch_true (L_return));\n+  add_int_reg_note (jump, REG_BR_PROB, prob_likely);\n+\n+  emit_move_insn (current_addr, plus_constant (Pmode, current_addr, 1));\n+\n+  emit_insn (gen_extendqisi2 (tmp1, addr1));\n+  emit_insn (gen_cmpeqsi_t (tmp1, const0_rtx));\n+  jump = emit_jump_insn (gen_branch_true (L_return));\n+  add_int_reg_note (jump, REG_BR_PROB, prob_likely);\n+\n+  emit_move_insn (current_addr, plus_constant (Pmode, current_addr, 1));\n+\n+  emit_insn (gen_extendqisi2 (tmp1, addr1));\n+  jump = emit_jump_insn (gen_jump_compact (L_return));\n+  emit_barrier_after (jump);\n+\n+  /* start byte loop.  */\n   emit_label (L_loop_byte);\n \n   emit_insn (gen_extendqisi2 (tmp1, addr1));\n@@ -600,10 +626,10 @@ sh_expand_strlen (rtx *operands)\n \n   /* end loop.  */\n \n-  emit_label (L_return);\n-\n   emit_insn (gen_addsi3 (start_addr, start_addr, GEN_INT (1)));\n \n+  emit_label (L_return);\n+\n   emit_insn (gen_subsi3 (operands[0], current_addr, start_addr));\n \n   return true;"}]}