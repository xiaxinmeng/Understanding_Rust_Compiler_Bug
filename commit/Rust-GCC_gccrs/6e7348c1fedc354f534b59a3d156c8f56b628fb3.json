{"sha": "6e7348c1fedc354f534b59a3d156c8f56b628fb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU3MzQ4YzFmZWRjMzU0ZjUzNGI1OWEzZDE1NmM4ZjU2YjYyOGZiMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-02-02T22:22:44Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-02-02T22:22:44Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r270", "tree": {"sha": "5af35fb467fdef45a7c21ad818b2911d20bd2a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5af35fb467fdef45a7c21ad818b2911d20bd2a76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e7348c1fedc354f534b59a3d156c8f56b628fb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7348c1fedc354f534b59a3d156c8f56b628fb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e7348c1fedc354f534b59a3d156c8f56b628fb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7348c1fedc354f534b59a3d156c8f56b628fb3/comments", "author": null, "committer": null, "parents": [{"sha": "a6113470258b407e46d578407b39accac50fdec5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6113470258b407e46d578407b39accac50fdec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6113470258b407e46d578407b39accac50fdec5"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "cee2b74a43a74af219dedea40301db5370672215", "filename": "gcc/reorg.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7348c1fedc354f534b59a3d156c8f56b628fb3/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7348c1fedc354f534b59a3d156c8f56b628fb3/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=6e7348c1fedc354f534b59a3d156c8f56b628fb3", "patch": "@@ -273,6 +273,7 @@ mark_referenced_resources (x, res, include_called_routine)\n       res->cc = 1;\n       return;\n \n+    case UNSPEC_VOLATILE:\n     case ASM_INPUT:\n       /* Traditional asm's are always volatile.  */\n       res->volatil = 1;\n@@ -2069,9 +2070,16 @@ mark_target_live_regs (target, res)\n \t\t sp, ap, and fp.  Do this before setting the result of the\n \t\t call live.  */\n \t      for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-\t\tif (call_used_regs[i] && ! fixed_regs[i]\n+\t\tif (call_used_regs[i]\n \t\t    && i != STACK_POINTER_REGNUM && i != FRAME_POINTER_REGNUM\n-\t\t    && i != ARG_POINTER_REGNUM)\n+\t\t    && i != ARG_POINTER_REGNUM\n+#if ARG_POINTER_REGNUM != FRAME_POINTER_REGNUM\n+\t\t    && ! (i == ARG_POINTER_REGNUM && fixed_regs[i])\n+#endif\n+#ifdef PIC_OFFSET_TABLE_REGNUM\n+\t\t    && ! (i == PIC_OFFSET_TABLE_REGNUM && flag_pic)\n+#endif\n+\t\t    )\n \t\t  CLEAR_HARD_REG_BIT (current_live_regs, i);\n \t    }\n "}]}