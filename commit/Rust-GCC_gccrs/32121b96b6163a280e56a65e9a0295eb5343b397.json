{"sha": "32121b96b6163a280e56a65e9a0295eb5343b397", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIxMjFiOTZiNjE2M2EyODBlNTZhNjVlOWEwMjk1ZWI1MzQzYjM5Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-04-17T17:17:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-04-17T17:17:55Z"}, "message": "re PR c++/6316 (trap when compiling file)\n\n\tPR c++/6316\n\t* decl2.c (finish_file): Clear DECL_EXTERNAL in a separate loop\n\tbefore expanding.\n\n\t* g++.dg/opt/inline1.C: New test.\n\nFrom-SVN: r52434", "tree": {"sha": "d21aa49e03d38f4389e420dabc9dcf4c03f865c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d21aa49e03d38f4389e420dabc9dcf4c03f865c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32121b96b6163a280e56a65e9a0295eb5343b397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32121b96b6163a280e56a65e9a0295eb5343b397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32121b96b6163a280e56a65e9a0295eb5343b397", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32121b96b6163a280e56a65e9a0295eb5343b397/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03408d2b8037ba38e32735b95826b38bbce1373a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03408d2b8037ba38e32735b95826b38bbce1373a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03408d2b8037ba38e32735b95826b38bbce1373a"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "b7e31a4fdc5b69a4d82ded9def2c2f5a7161411b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32121b96b6163a280e56a65e9a0295eb5343b397/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32121b96b6163a280e56a65e9a0295eb5343b397/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=32121b96b6163a280e56a65e9a0295eb5343b397", "patch": "@@ -1,3 +1,9 @@\n+2002-04-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/6316\n+\t* decl2.c (finish_file): Clear DECL_EXTERNAL in a separate loop\n+\tbefore expanding.\n+\n 2002-04-16  Mark Mitchell  <mark@codesourcery.com>\n \n \t* init.c (begin_init_stmts): Remove commented out code."}, {"sha": "1b4daa100139889d33edf791a448d37961c9175f", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32121b96b6163a280e56a65e9a0295eb5343b397/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32121b96b6163a280e56a65e9a0295eb5343b397/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=32121b96b6163a280e56a65e9a0295eb5343b397", "patch": "@@ -3432,7 +3432,11 @@ finish_file ()\n \t not defined when they really are.  This keeps these functions\n \t from being put out unnecessarily.  But, we must stop lying\n \t when the functions are referenced, or if they are not comdat\n-\t since they need to be put out now.  */\n+\t since they need to be put out now.\n+\t This is done in a separate for cycle, because if some deferred\n+\t function is contained in another deferred function later in\n+\t deferred_fns varray, rest_of_compilation would skip this\n+\t function and we really cannot expand the same function twice. */\n       for (i = 0; i < deferred_fns_used; ++i)\n \t{\n \t  tree decl = VARRAY_TREE (deferred_fns, i);\n@@ -3441,6 +3445,11 @@ finish_file ()\n \t      && DECL_INITIAL (decl)\n \t      && DECL_NEEDED_P (decl))\n \t    DECL_EXTERNAL (decl) = 0;\n+\t}\n+\n+      for (i = 0; i < deferred_fns_used; ++i)\n+\t{\n+\t  tree decl = VARRAY_TREE (deferred_fns, i);\n \n \t  /* If we're going to need to write this function out, and\n \t     there's already a body for it, create RTL for it now."}, {"sha": "3fb38ece2d4e05cfd90880b40092b4c911bd2075", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32121b96b6163a280e56a65e9a0295eb5343b397/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32121b96b6163a280e56a65e9a0295eb5343b397/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=32121b96b6163a280e56a65e9a0295eb5343b397", "patch": "@@ -2,6 +2,8 @@\n \n \t* gcc.dg/20020416-1.c: New test.\n \n+\t* g++.dg/opt/inline1.C: New test.\n+\n 2002-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/altivec-5.c: New test."}, {"sha": "55b931138a115474249b6c843a109f4084dc45b6", "filename": "gcc/testsuite/g++.dg/opt/inline1.C", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32121b96b6163a280e56a65e9a0295eb5343b397/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32121b96b6163a280e56a65e9a0295eb5343b397/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline1.C?ref=32121b96b6163a280e56a65e9a0295eb5343b397", "patch": "@@ -0,0 +1,43 @@\n+// PR c++/6316\n+// This testcase ICEd because when deferred bar()::F::F() was being\n+// expanded, containing bar() was still deferred and had DECL_EXTERNAL set\n+// (and DECL_NOT_REALLY_EXTERN too).\n+// { dg-do compile }\n+// { dg-options \"-O3\" }\n+\n+struct A { ~A() throw() {} };\n+template<typename T, typename U> struct B { U a; B(const T *); };\n+typedef B<char, A> C;\n+struct D { D(); };\n+struct E { virtual ~E(); };\n+\n+E *bar ();\n+\n+void\n+foo ()\n+{\n+  E *a = bar ();\n+}\n+\n+extern char *z [];\n+\n+E *\n+bar ()\n+{\n+  struct F : public E\n+  {\n+    F ()\n+    {\n+      for (int i = 0; i < 2; i++)\n+\tC e = z[i];\n+    }\n+    D x, y;\n+  };\n+  return new F ();\n+}\n+\n+int\n+main ()\n+{\n+  foo ();\n+}"}]}