{"sha": "651afdb2d2e2896fc600e76cf5ce113ba835e55f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUxYWZkYjJkMmUyODk2ZmM2MDBlNzZjZjVjZTExM2JhODM1ZTU1Zg==", "commit": {"author": {"name": "Yuri Rumyantsev", "email": "ysrumyan@gmail.com", "date": "2016-07-06T14:37:26Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-07-06T14:37:26Z"}, "message": "re PR tree-optimization/71518 (wrong code at -O3 on x86_64-linux-gnu in 64-bit mode (not in 32-bit mode))\n\ngcc/\n\n2016-07-06  Yuri Rumyantsev  <ysrumyan@gmail.com>\n\n\tPR tree-optimization/71518\n\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Adjust\n\tmisalign also for outer loops with negative step.\n\ngcc/testsuite/\n\n2016-07-06  Yuri Rumyantsev  <ysrumyan@gmail.com>\n\n\tPR tree-optimization/71518\n        * gcc.dg/pr71518.c: New test.\n\nFrom-SVN: r238055", "tree": {"sha": "a9842b56601dec435881edfad0150461d7186126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9842b56601dec435881edfad0150461d7186126"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/651afdb2d2e2896fc600e76cf5ce113ba835e55f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651afdb2d2e2896fc600e76cf5ce113ba835e55f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/651afdb2d2e2896fc600e76cf5ce113ba835e55f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/651afdb2d2e2896fc600e76cf5ce113ba835e55f/comments", "author": {"login": "ysrumyan", "id": 44425612, "node_id": "MDQ6VXNlcjQ0NDI1NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/44425612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysrumyan", "html_url": "https://github.com/ysrumyan", "followers_url": "https://api.github.com/users/ysrumyan/followers", "following_url": "https://api.github.com/users/ysrumyan/following{/other_user}", "gists_url": "https://api.github.com/users/ysrumyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysrumyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysrumyan/subscriptions", "organizations_url": "https://api.github.com/users/ysrumyan/orgs", "repos_url": "https://api.github.com/users/ysrumyan/repos", "events_url": "https://api.github.com/users/ysrumyan/events{/privacy}", "received_events_url": "https://api.github.com/users/ysrumyan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5fa15228d5eecb6db3029c44a6a24ded6f68818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fa15228d5eecb6db3029c44a6a24ded6f68818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5fa15228d5eecb6db3029c44a6a24ded6f68818"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "fb611213cb18bed32eaa259cb8049fc0462a91cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651afdb2d2e2896fc600e76cf5ce113ba835e55f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651afdb2d2e2896fc600e76cf5ce113ba835e55f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=651afdb2d2e2896fc600e76cf5ce113ba835e55f", "patch": "@@ -1,3 +1,9 @@\n+2016-07-06  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR tree-optimization/71518\n+\t* tree-vect-data-refs.c (vect_compute_data_ref_alignment): Adjust\n+\tmisalign also for outer loops with negative step.\n+\n 2016-07-06  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/arm/cortex-a53.md: Use final_presence_set for in-order."}, {"sha": "fa5f1c1694535d34dfa0acfdd88e4ccb52a8b4b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651afdb2d2e2896fc600e76cf5ce113ba835e55f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651afdb2d2e2896fc600e76cf5ce113ba835e55f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=651afdb2d2e2896fc600e76cf5ce113ba835e55f", "patch": "@@ -1,3 +1,8 @@\n+2016-07-06  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR tree-optimization/71518\n+        * gcc.dg/pr71518.c: New test.\n+\n 2016-07-06  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.target/arm/vst1Q_laneu64-1.c (foo): Use unsigned char*."}, {"sha": "6240ca8f2bfd8725f0048fdf3373157c7d88aaa7", "filename": "gcc/testsuite/gcc.dg/pr71518.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651afdb2d2e2896fc600e76cf5ce113ba835e55f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71518.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651afdb2d2e2896fc600e76cf5ce113ba835e55f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71518.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr71518.c?ref=651afdb2d2e2896fc600e76cf5ce113ba835e55f", "patch": "@@ -0,0 +1,25 @@\n+/* PR tree-optimization/71518 */\n+/* { dg-options \"-O3\" } */\n+\n+int a, *b[9], c, d, e; \n+\n+static int\n+fn1 ()\n+{\n+  for (c = 6; c >= 0; c--)\n+    for (d = 0; d < 2; d++)\n+      {\n+        b[d * 2 + c] = 0;\n+        e = a > 1 ? : 0;\n+        if (e == 2) \n+          return 0;\n+      }\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  fn1 ();\n+  return 0; \n+}"}, {"sha": "6fddd3a1c6894c988751d436df31806bff796b10", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/651afdb2d2e2896fc600e76cf5ce113ba835e55f/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/651afdb2d2e2896fc600e76cf5ce113ba835e55f/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=651afdb2d2e2896fc600e76cf5ce113ba835e55f", "patch": "@@ -698,6 +698,7 @@ vect_compute_data_ref_alignment (struct data_reference *dr)\n   tree base, base_addr;\n   tree misalign = NULL_TREE;\n   tree aligned_to;\n+  tree step;\n   unsigned HOST_WIDE_INT alignment;\n \n   if (dump_enabled_p ())\n@@ -828,16 +829,20 @@ vect_compute_data_ref_alignment (struct data_reference *dr)\n       DR_VECT_AUX (dr)->base_element_aligned = true;\n     }\n \n+  if (loop && nested_in_vect_loop_p (loop, stmt))\n+    step = STMT_VINFO_DR_STEP (stmt_info);\n+  else\n+    step = DR_STEP (dr);\n   /* If this is a backward running DR then first access in the larger\n      vectype actually is N-1 elements before the address in the DR.\n      Adjust misalign accordingly.  */\n-  if (tree_int_cst_sgn (DR_STEP (dr)) < 0)\n+  if (tree_int_cst_sgn (step) < 0)\n     {\n       tree offset = ssize_int (TYPE_VECTOR_SUBPARTS (vectype) - 1);\n       /* DR_STEP(dr) is the same as -TYPE_SIZE of the scalar type,\n \t otherwise we wouldn't be here.  */\n-      offset = fold_build2 (MULT_EXPR, ssizetype, offset, DR_STEP (dr));\n-      /* PLUS because DR_STEP was negative.  */\n+      offset = fold_build2 (MULT_EXPR, ssizetype, offset, step);\n+      /* PLUS because STEP was negative.  */\n       misalign = size_binop (PLUS_EXPR, misalign, offset);\n     }\n "}]}