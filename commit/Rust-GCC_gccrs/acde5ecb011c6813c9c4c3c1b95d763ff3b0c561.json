{"sha": "acde5ecb011c6813c9c4c3c1b95d763ff3b0c561", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNkZTVlY2IwMTFjNjgxM2M5YzRjM2MxYjk1ZDc2M2ZmM2IwYzU2MQ==", "commit": {"author": {"name": "Laurent GUERBY", "email": "laurent@guerby.net", "date": "2004-04-25T11:57:10Z"}, "committer": {"name": "Laurent Guerby", "email": "guerby@gcc.gnu.org", "date": "2004-04-25T11:57:10Z"}, "message": "run_all.sh: Handle cd2a83c, cd2a91c (target_bit) and ad8011a (target_insn).\n\n2004-04-24  Laurent GUERBY <laurent@guerby.net>\n\n\t* ada/acats/run_all.sh: Handle cd2a83c, cd2a91c (target_bit)\n\tand ad8011a (target_insn).\n\t* ada/acats/support/macro.dfs: Likewise.\n\t* ada/acats/support/impbit.adb: New file.\n\nFrom-SVN: r81158", "tree": {"sha": "ccebef427a121f4af766866635d91d9d6ee26253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccebef427a121f4af766866635d91d9d6ee26253"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561/comments", "author": {"login": "guerby", "id": 6659329, "node_id": "MDQ6VXNlcjY2NTkzMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/6659329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guerby", "html_url": "https://github.com/guerby", "followers_url": "https://api.github.com/users/guerby/followers", "following_url": "https://api.github.com/users/guerby/following{/other_user}", "gists_url": "https://api.github.com/users/guerby/gists{/gist_id}", "starred_url": "https://api.github.com/users/guerby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guerby/subscriptions", "organizations_url": "https://api.github.com/users/guerby/orgs", "repos_url": "https://api.github.com/users/guerby/repos", "events_url": "https://api.github.com/users/guerby/events{/privacy}", "received_events_url": "https://api.github.com/users/guerby/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39ba1719f70b31b0793b23d1d43e56d55181c44e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39ba1719f70b31b0793b23d1d43e56d55181c44e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39ba1719f70b31b0793b23d1d43e56d55181c44e"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "c7267d81b2f1929888fa159e439109288f02980b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=acde5ecb011c6813c9c4c3c1b95d763ff3b0c561", "patch": "@@ -1,3 +1,10 @@\n+2004-04-24  Laurent GUERBY <laurent@guerby.net>\n+\n+\t* ada/acats/run_all.sh: Handle cd2a83c, cd2a91c (target_bit)\n+\tand ad8011a (target_insn).\n+\t* ada/acats/support/macro.dfs: Likewise.\n+\t* ada/acats/support/impbit.adb: New file.\n+\t\n 2004-04-23  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* gcc.dg/const-elim-1.c: XFAIL on s390*-*-*."}, {"sha": "95cd7e818be5f48d801133c079aa10af63b2859c", "filename": "gcc/testsuite/ada/acats/run_all.sh", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561/gcc%2Ftestsuite%2Fada%2Facats%2Frun_all.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561/gcc%2Ftestsuite%2Fada%2Facats%2Frun_all.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Frun_all.sh?ref=acde5ecb011c6813c9c4c3c1b95d763ff3b0c561", "patch": "@@ -88,9 +88,32 @@ cd $dir/support\n \n cp $testdir/support/*.ada $testdir/support/*.a $testdir/support/*.tst $dir/support\n \n+# Find out the size in bit of an address on the target\n+target_gnatmake $testdir/support/impbit.adb >> $dir/acats.log 2>&1\n+target_run $dir/support/impbit > $dir/support/impbit.out 2>&1\n+target_bit=`cat $dir/support/impbit.out`\n+display target_bit=\"$target_bit\"\n+\n+# Find out a suitable asm statement\n+# Adapted from configure.ac gcc_cv_as_dwarf2_debug_line\n+case \"$target\" in\n+  ia64*-*-* | s390*-*-*)\n+    target_insn=\"nop 0\"\n+    ;;\n+  mmix-*-*)\n+    target_insn=\"swym 0\"\n+    ;;\n+  *)\n+    target_insn=\"nop\"\n+    ;;\n+esac\n+display target_insn=\"$target_insn\"\n+\n sed -e \"s,ACATS4GNATDIR,$dir,g\" \\\n   < $testdir/support/impdef.a > $dir/support/impdef.a\n sed -e \"s,ACATS4GNATDIR,$dir,g\" \\\n+  -e \"s,ACATS4GNATBIT,$target_bit,g\" \\\n+  -e \"s,ACATS4GNATINSN,$target_insn,g\" \\\n   < $testdir/support/macro.dfs > $dir/support/MACRO.DFS\n sed -e \"s,ACATS4GNATDIR,$dir,g\" \\\n   < $testdir/support/tsttests.dat > $dir/support/TSTTESTS.DAT"}, {"sha": "5e189b0625702e8996d864b51a52d6053cc7114a", "filename": "gcc/testsuite/ada/acats/support/impbit.adb", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fimpbit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fimpbit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fimpbit.adb?ref=acde5ecb011c6813c9c4c3c1b95d763ff3b0c561", "patch": "@@ -0,0 +1,6 @@\n+with System;\n+with Ada.Text_IO;\n+procedure Impbit is\n+begin\n+   Ada.Text_IO.Put_Line (System.Address'Size'Img);\n+end Impbit;"}, {"sha": "8c3723348ad6e3e2944e172e3de64d377b72b3e2", "filename": "gcc/testsuite/ada/acats/support/macro.dfs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fmacro.dfs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fmacro.dfs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fada%2Facats%2Fsupport%2Fmacro.dfs?ref=acde5ecb011c6813c9c4c3c1b95d763ff3b0c561", "patch": "@@ -99,7 +99,7 @@ BLANKS\n -- AN INTEGER LITERAL WHOSE VALUE IS THE MINIMUM NUMBER OF BITS\n -- SUFFICIENT TO HOLD ANY VALUE OF AN ACCESS TYPE.         \n -- USED IN:  CD2A83C  BD2A02A\n-ACC_SIZE                  32                       \n+ACC_SIZE                  ACATS4GNATBIT\n \t\t\t\n -- $ALIGNMENT                                    \n -- A VALUE THAT IS LEGITIMATE FOR USE IN A RECORD ALIGNMENT CLAUSE.\n@@ -220,7 +220,7 @@ LESS_THAN_DURATION        -86_400.0\n -- MACHINE_CODE.  IF THE IMPLEMENTATION DOES NOT SUPPORT MACHINE\n -- CODE THEN USE THE ADA NULL STATEMENT (I.E. NULL; ).   \n -- USED IN:  AD8011A  BD8001A  BD8002A  BD8004A  BD8004B\n-MACHINE_CODE_STATEMENT     Asm_Insn'(Asm (\"nop\"));       \n+MACHINE_CODE_STATEMENT     Asm_Insn'(Asm (\"ACATS4GNATINSN\"));       \n \t\t\t\t\t\t\n -- $MAX_INT                                     \n -- AN INTEGER LITERAL WHOSE VALUE IS SYSTEM.MAX_INT.\n@@ -271,7 +271,7 @@ RECORD_NAME\tAsm_Insn\n -- AN INTEGER LITERAL WHOSE VALUE IS THE NUMBER OF BITS REQUIRED TO\n -- HOLD A TASK OBJECT.                                       \n -- USED IN:  CD2A91C \n-TASK_SIZE                 32                             \n+TASK_SIZE                 ACATS4GNATBIT\n \t\t\t\t\t\t\t\n -- $TASK_STORAGE_SIZE                                 \n -- THE NUMBER OF STORAGE UNITS REQUIRED FOR A TASK ACTIVATION."}]}