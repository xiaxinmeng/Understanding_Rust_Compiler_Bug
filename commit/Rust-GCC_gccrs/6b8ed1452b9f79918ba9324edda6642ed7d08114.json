{"sha": "6b8ed1452b9f79918ba9324edda6642ed7d08114", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI4ZWQxNDUyYjlmNzk5MThiYTkzMjRlZGRhNjY0MmVkN2QwODExNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-05-25T13:35:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-05-25T13:35:10Z"}, "message": "tree-ssa-alias.h (dump_points_to_solution): Declare.\n\n2009-05-25  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-alias.h (dump_points_to_solution): Declare.\n\t* tree-inline.c (expand_call_inline): Reset the escaped and\n\tcallused solutions.\n\t* tree-ssa-structalias.c (pass_build_ealias): New.\n\t* tree-pass.h (pass_build_ealias): Declare.\n\t* passes.c (init_optimization_passes): Add PTA during \n\tearly optimizations.\n\t* tree-ssa-alias.c (dump_alias_info): Dump the ESCAPED\n\tand CALLUSED solutions.\n\t(dump_points_to_solution): New function, split out from ...\n\t(dump_points_to_info_for): ... here.\n\t* tree-parloops.c (parallelize_loops): Reset the escaped and\n\tcallused solutions.\n\n\t* gcc.dg/tree-ssa/ssa-fre-14.c: Adjust.\n\t* gcc.dg/tree-ssa/ssa-fre-15.c: Likewise.\n\nFrom-SVN: r147848", "tree": {"sha": "a5df148001356e742a58dc38bfe38aa26e706766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5df148001356e742a58dc38bfe38aa26e706766"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b8ed1452b9f79918ba9324edda6642ed7d08114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b8ed1452b9f79918ba9324edda6642ed7d08114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b8ed1452b9f79918ba9324edda6642ed7d08114", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b8ed1452b9f79918ba9324edda6642ed7d08114/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d38b677037f13b7b83d1024a5156be9b41e17b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d38b677037f13b7b83d1024a5156be9b41e17b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d38b677037f13b7b83d1024a5156be9b41e17b9"}], "stats": {"total": 131, "additions": 108, "deletions": 23}, "files": [{"sha": "ef7e845554fd752d084ed5103889546ce99a39c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b8ed1452b9f79918ba9324edda6642ed7d08114", "patch": "@@ -1,3 +1,19 @@\n+2009-05-25  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.h (dump_points_to_solution): Declare.\n+\t* tree-inline.c (expand_call_inline): Reset the escaped and\n+\tcallused solutions.\n+\t* tree-ssa-structalias.c (pass_build_ealias): New.\n+\t* tree-pass.h (pass_build_ealias): Declare.\n+\t* passes.c (init_optimization_passes): Add PTA during \n+\tearly optimizations.\n+\t* tree-ssa-alias.c (dump_alias_info): Dump the ESCAPED\n+\tand CALLUSED solutions.\n+\t(dump_points_to_solution): New function, split out from ...\n+\t(dump_points_to_info_for): ... here.\n+\t* tree-parloops.c (parallelize_loops): Reset the escaped and\n+\tcallused solutions.\n+\n 2009-05-25  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \tPR bootstrap/40027"}, {"sha": "2408668c08304970faed14570b3b17b7f0ee51e0", "filename": "gcc/passes.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=6b8ed1452b9f79918ba9324edda6642ed7d08114", "patch": "@@ -554,7 +554,11 @@ init_optimization_passes (void)\n \t  NEXT_PASS (pass_rename_ssa_copies);\n \t  NEXT_PASS (pass_ccp);\n \t  NEXT_PASS (pass_forwprop);\n-\t  NEXT_PASS (pass_update_address_taken);\n+\t  /* pass_build_ealias is a dummy pass that ensures that we\n+\t     execute TODO_rebuild_alias at this point.  Re-building\n+\t     alias information also rewrites no longer addressed\n+\t     locals into SSA form if possible.  */\n+\t  NEXT_PASS (pass_build_ealias);\n \t  NEXT_PASS (pass_sra_early);\n \t  NEXT_PASS (pass_copy_prop);\n \t  NEXT_PASS (pass_merge_phi);"}, {"sha": "097317c4f15fa9588a689f68d3bee5701b107a5a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b8ed1452b9f79918ba9324edda6642ed7d08114", "patch": "@@ -1,3 +1,8 @@\n+2009-05-25  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/ssa-fre-14.c: Adjust.\n+\t* gcc.dg/tree-ssa/ssa-fre-15.c: Likewise.\n+\n 2009-05-25  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/40238"}, {"sha": "81b82fe48803cdbcc9bc8e77aad79163d1d95499", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-14.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-14.c?ref=6b8ed1452b9f79918ba9324edda6642ed7d08114", "patch": "@@ -8,6 +8,7 @@ struct Foo\n   void *data;\n   double size;\n };\n+void bar(double *);\n void foo(double (*q)[4])\n {\n   struct Foo tmp1;\n@@ -23,6 +24,7 @@ void foo(double (*q)[4])\n  \t this store to tmp1 here.  */\n       tmp1.size -= 1.0;\n     }\n+  bar(a);\n }\n \n /* { dg-final { scan-tree-dump \"Inserted .* &a\" \"fre\" } } */"}, {"sha": "d24cd1e4c38b9c87776a77e88ec8999ba17f4616", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-15.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-15.c?ref=6b8ed1452b9f79918ba9324edda6642ed7d08114", "patch": "@@ -8,6 +8,7 @@ struct Foo\n   void *data;\n   double size;\n };\n+void bar(double *);\n void foo(double (*q)[4])\n {\n   struct Foo tmp1;\n@@ -22,6 +23,7 @@ void foo(double (*q)[4])\n  \t this store to tmp1 here.  */\n       tmp1.size -= 1.0;\n     }\n+  bar(a);\n }\n \n /* { dg-final { scan-tree-dump \"Replaced\" \"fre\" } } */"}, {"sha": "fd04f6f0c90cc8aa2b3ae7edf757e4c26236c1dd", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=6b8ed1452b9f79918ba9324edda6642ed7d08114", "patch": "@@ -3451,6 +3451,13 @@ expand_call_inline (basic_block bb, gimple stmt, copy_body_data *id)\n      duplicate our body before altering anything.  */\n   copy_body (id, bb->count, bb->frequency, bb, return_block);\n \n+  /* Reset the escaped and callused solutions.  */\n+  if (cfun->gimple_df)\n+    {\n+      pt_solution_reset (&cfun->gimple_df->escaped);\n+      pt_solution_reset (&cfun->gimple_df->callused);\n+    }\n+\n   /* Clean up.  */\n   pointer_map_destroy (id->decl_map);\n   id->decl_map = st;"}, {"sha": "2ec26196bc1305a56445a7b57e64dcda04677e69", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=6b8ed1452b9f79918ba9324edda6642ed7d08114", "patch": "@@ -1886,6 +1886,16 @@ parallelize_loops (void)\n \n   free_stmt_vec_info_vec ();\n   htab_delete (reduction_list);\n+\n+  /* Parallelization will cause new function calls to be inserted through\n+     which local variables will escape.  Reset the points-to solutions\n+     for ESCAPED and CALLUSED.  */\n+  if (changed)\n+    {\n+      pt_solution_reset (&cfun->gimple_df->escaped);\n+      pt_solution_reset (&cfun->gimple_df->callused);\n+    }\n+\n   return changed;\n }\n "}, {"sha": "f300d0eea962b93a486ae11a92d0441c385de44a", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=6b8ed1452b9f79918ba9324edda6642ed7d08114", "patch": "@@ -350,6 +350,7 @@ extern struct gimple_opt_pass pass_ccp;\n extern struct gimple_opt_pass pass_phi_only_cprop;\n extern struct gimple_opt_pass pass_build_ssa;\n extern struct gimple_opt_pass pass_build_alias;\n+extern struct gimple_opt_pass pass_build_ealias;\n extern struct gimple_opt_pass pass_dominator;\n extern struct gimple_opt_pass pass_dce;\n extern struct gimple_opt_pass pass_dce_loop;"}, {"sha": "5be39f0039838c320e5a343267cae71f7057d7af", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 37, "deletions": 22, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=6b8ed1452b9f79918ba9324edda6642ed7d08114", "patch": "@@ -330,7 +330,14 @@ dump_alias_info (FILE *file)\n \tdump_variable (file, var);\n     }\n \n-  fprintf (file, \"\\n\\nFlow-insensitive points-to information for %s\\n\\n\", funcname);\n+  fprintf (file, \"\\nCall clobber information\\n\");\n+\n+  fprintf (file, \"\\nESCAPED\");\n+  dump_points_to_solution (file, &cfun->gimple_df->escaped);\n+  fprintf (file, \"\\nCALLUSED\");\n+  dump_points_to_solution (file, &cfun->gimple_df->callused);\n+\n+  fprintf (file, \"\\n\\nFlow-insensitive points-to information\\n\\n\");\n \n   for (i = 1; i < num_ssa_names; i++)\n     {\n@@ -380,37 +387,45 @@ get_ptr_info (tree t)\n   return pi;\n }\n \n-/* Dump points-to information for SSA_NAME PTR into FILE.  */\n+/* Dump the points-to set *PT into FILE.  */\n \n void\n-dump_points_to_info_for (FILE *file, tree ptr)\n+dump_points_to_solution (FILE *file, struct pt_solution *pt)\n {\n-  struct ptr_info_def *pi = SSA_NAME_PTR_INFO (ptr);\n+  if (pt->anything)\n+    fprintf (file, \", points-to anything\");\n \n-  print_generic_expr (file, ptr, dump_flags);\n+  if (pt->nonlocal)\n+    fprintf (file, \", points-to non-local\");\n \n-  if (pi)\n+  if (pt->escaped)\n+    fprintf (file, \", points-to escaped\");\n+\n+  if (pt->null)\n+    fprintf (file, \", points-to NULL\");\n+\n+  if (pt->vars)\n     {\n-      if (pi->pt.anything)\n-\tfprintf (file, \", points-to anything\");\n+      fprintf (file, \", points-to vars: \");\n+      dump_decl_set (file, pt->vars);\n+      if (pt->vars_contains_global)\n+\tfprintf (file, \" (includes global vars)\");\n+    }\n+}\n \n-      if (pi->pt.nonlocal)\n-\tfprintf (file, \", points-to non-local\");\n+/* Dump points-to information for SSA_NAME PTR into FILE.  */\n \n-      if (pi->pt.escaped)\n-\tfprintf (file, \", points-to escaped\");\n+void\n+dump_points_to_info_for (FILE *file, tree ptr)\n+{\n+  struct ptr_info_def *pi = SSA_NAME_PTR_INFO (ptr);\n \n-      if (pi->pt.null)\n-\tfprintf (file, \", points-to NULL\");\n+  print_generic_expr (file, ptr, dump_flags);\n \n-      if (pi->pt.vars)\n-\t{\n-\t  fprintf (file, \", points-to vars: \");\n-\t  dump_decl_set (file, pi->pt.vars);\n-\t  if (pi->pt.vars_contains_global)\n-\t    fprintf (file, \" (includes global vars)\");\n-\t}\n-    }\n+  if (pi)\n+    dump_points_to_solution (file, &pi->pt);\n+  else\n+    fprintf (file, \", points-to anything\");\n \n   fprintf (file, \"\\n\");\n }"}, {"sha": "d4d736d1c7b0f212147713035306149924357188", "filename": "gcc/tree-ssa-alias.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-ssa-alias.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-ssa-alias.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.h?ref=6b8ed1452b9f79918ba9324edda6642ed7d08114", "patch": "@@ -90,6 +90,7 @@ extern unsigned int walk_aliased_vdefs (tree, tree,\n extern struct ptr_info_def *get_ptr_info (tree);\n extern void dump_alias_info (FILE *);\n extern void debug_alias_info (void);\n+extern void dump_points_to_solution (FILE *, struct pt_solution *);\n extern void dump_points_to_info_for (FILE *, tree);\n extern void debug_points_to_info_for (tree);\n extern void dump_alias_stats (FILE *);"}, {"sha": "1fdbab472184e1277f91c77806ca39aa72bd30d1", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b8ed1452b9f79918ba9324edda6642ed7d08114/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=6b8ed1452b9f79918ba9324edda6642ed7d08114", "patch": "@@ -5436,6 +5436,28 @@ struct gimple_opt_pass pass_build_alias =\n  }\n };\n \n+/* A dummy pass to cause points-to information to be computed via\n+   TODO_rebuild_alias.  */\n+\n+struct gimple_opt_pass pass_build_ealias =\n+{\n+ {\n+  GIMPLE_PASS,\n+  \"ealias\",\t\t    /* name */\n+  gate_tree_pta,\t    /* gate */\n+  NULL,                     /* execute */\n+  NULL,                     /* sub */\n+  NULL,                     /* next */\n+  0,                        /* static_pass_number */\n+  TV_NONE,                  /* tv_id */\n+  PROP_cfg | PROP_ssa,      /* properties_required */\n+  0,\t\t\t    /* properties_provided */\n+  0,                        /* properties_destroyed */\n+  0,                        /* todo_flags_start */\n+  TODO_rebuild_alias | TODO_dump_func  /* todo_flags_finish */\n+ }\n+};\n+\n \n /* Return true if we should execute IPA PTA.  */\n static bool"}]}