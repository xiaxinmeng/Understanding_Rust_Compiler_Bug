{"sha": "ac0539d7ac678bb4f7adbebb2e69ee96edf84523", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMwNTM5ZDdhYzY3OGJiNGY3YWRiZWJiMmU2OWVlOTZlZGY4NDUyMw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-06-01T12:38:23Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-06-01T12:38:23Z"}, "message": "Change use to type-based pool allocator in cfg.c.\n\n\t* cfg.c (initialize_original_copy_tables):Use new type-based pool allocator.\n\t(free_original_copy_tables) Likewise.\n\t(copy_original_table_clear) Likewise.\n\t(copy_original_table_set) Likewise.\n\nFrom-SVN: r223950", "tree": {"sha": "0ae5a0c5ae49366cb885b4bd6d2c41ab036e21de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ae5a0c5ae49366cb885b4bd6d2c41ab036e21de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac0539d7ac678bb4f7adbebb2e69ee96edf84523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac0539d7ac678bb4f7adbebb2e69ee96edf84523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac0539d7ac678bb4f7adbebb2e69ee96edf84523", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac0539d7ac678bb4f7adbebb2e69ee96edf84523/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4fef8379d7e4587d4ae77e5b82cf47498da23dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fef8379d7e4587d4ae77e5b82cf47498da23dda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fef8379d7e4587d4ae77e5b82cf47498da23dda"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "ef7e40afee757a318a2d1d623a92b33bcb316c28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac0539d7ac678bb4f7adbebb2e69ee96edf84523/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac0539d7ac678bb4f7adbebb2e69ee96edf84523/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac0539d7ac678bb4f7adbebb2e69ee96edf84523", "patch": "@@ -1,3 +1,10 @@\n+2015-06-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* cfg.c (initialize_original_copy_tables):Use new type-based pool allocator.\n+\t(free_original_copy_tables) Likewise.\n+\t(copy_original_table_clear) Likewise.\n+\t(copy_original_table_set) Likewise.\n+\n 2015-06-01  Martin Liska  <mliska@suse.cz>\n \n \t* asan.c (asan_mem_ref_get_alloc_pool):Use new type-based pool allocator."}, {"sha": "ddfecdcd6fafed7529241aee40c6ecea02e03578", "filename": "gcc/cfg.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac0539d7ac678bb4f7adbebb2e69ee96edf84523/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac0539d7ac678bb4f7adbebb2e69ee96edf84523/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=ac0539d7ac678bb4f7adbebb2e69ee96edf84523", "patch": "@@ -1066,18 +1066,16 @@ static hash_table<bb_copy_hasher> *bb_copy;\n \n /* And between loops and copies.  */\n static hash_table<bb_copy_hasher> *loop_copy;\n-static alloc_pool original_copy_bb_pool;\n-\n+static pool_allocator<htab_bb_copy_original_entry> *original_copy_bb_pool;\n \n /* Initialize the data structures to maintain mapping between blocks\n    and its copies.  */\n void\n initialize_original_copy_tables (void)\n {\n-  gcc_assert (!original_copy_bb_pool);\n-  original_copy_bb_pool\n-    = create_alloc_pool (\"original_copy\",\n-\t\t\t sizeof (struct htab_bb_copy_original_entry), 10);\n+\n+  original_copy_bb_pool = new pool_allocator<htab_bb_copy_original_entry>\n+    (\"original_copy\", 10);\n   bb_original = new hash_table<bb_copy_hasher> (10);\n   bb_copy = new hash_table<bb_copy_hasher> (10);\n   loop_copy = new hash_table<bb_copy_hasher> (10);\n@@ -1095,7 +1093,7 @@ free_original_copy_tables (void)\n   bb_copy = NULL;\n   delete loop_copy;\n   loop_copy = NULL;\n-  free_alloc_pool (original_copy_bb_pool);\n+  delete original_copy_bb_pool;\n   original_copy_bb_pool = NULL;\n }\n \n@@ -1117,7 +1115,7 @@ copy_original_table_clear (hash_table<bb_copy_hasher> *tab, unsigned obj)\n \n   elt = *slot;\n   tab->clear_slot (slot);\n-  pool_free (original_copy_bb_pool, elt);\n+  original_copy_bb_pool->remove (elt);\n }\n \n /* Sets the value associated with OBJ in table TAB to VAL.\n@@ -1137,8 +1135,7 @@ copy_original_table_set (hash_table<bb_copy_hasher> *tab,\n   slot = tab->find_slot (&key, INSERT);\n   if (!*slot)\n     {\n-      *slot = (struct htab_bb_copy_original_entry *)\n-\t\tpool_alloc (original_copy_bb_pool);\n+      *slot = original_copy_bb_pool->allocate ();\n       (*slot)->index1 = obj;\n     }\n   (*slot)->index2 = val;"}]}