{"sha": "aa5505d0e13351c4f211739c6aae39d888e74bda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE1NTA1ZDBlMTMzNTFjNGYyMTE3MzljNmFhZTM5ZDg4OGU3NGJkYQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2002-08-28T05:24:10Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2002-08-28T05:24:10Z"}, "message": "Authenticator.java: added some documentation.\n\n2002-08-28  Michael Koch <konqueror@gmx.de>\n\n       * java/net/Authenticator.java: added some documentation.\n\nFrom-SVN: r56628", "tree": {"sha": "6ad3fe18545537481adc5b25e662ce4fc19a1b56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ad3fe18545537481adc5b25e662ce4fc19a1b56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa5505d0e13351c4f211739c6aae39d888e74bda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5505d0e13351c4f211739c6aae39d888e74bda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5505d0e13351c4f211739c6aae39d888e74bda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5505d0e13351c4f211739c6aae39d888e74bda/comments", "author": null, "committer": null, "parents": [{"sha": "27f4b67efeef555f63157e918f21057a175698f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f4b67efeef555f63157e918f21057a175698f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27f4b67efeef555f63157e918f21057a175698f1"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "b200d604196d341d30204b5dbc0e22ee66691d40", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5505d0e13351c4f211739c6aae39d888e74bda/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5505d0e13351c4f211739c6aae39d888e74bda/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=aa5505d0e13351c4f211739c6aae39d888e74bda", "patch": "@@ -1,3 +1,7 @@\n+2002-08-28  Michael Koch <konqueror@gmx.de>\n+\n+\t* java/net/Authenticator.java: added some documentation.\n+\n 2002-08-27  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/reflect/natConstructor.cc (newInstance): Initialize"}, {"sha": "e1e322b3bb1c6252d86565d1c098b676920e28ba", "filename": "libjava/java/net/Authenticator.java", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5505d0e13351c4f211739c6aae39d888e74bda/libjava%2Fjava%2Fnet%2FAuthenticator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5505d0e13351c4f211739c6aae39d888e74bda/libjava%2Fjava%2Fnet%2FAuthenticator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FAuthenticator.java?ref=aa5505d0e13351c4f211739c6aae39d888e74bda", "patch": "@@ -150,7 +150,7 @@\n   * @param port The port requesting authentication\n   * @param protocol The protocol requesting authentication\n   * @param prompt The prompt to display to the user when requesting \n-           authentication info\n+  *        authentication info\n   * @param scheme The authentication scheme in use\n   * \n   * @return A <code>PasswordAuthentication</code> object with the user's \n@@ -169,8 +169,33 @@\n }\n \n /**\n- * @since 1.4\n- */\n+  * This method is called whenever a username and password for a given\n+  * network operation is required.  First, a security check is made to see\n+  * if the caller has the \"requestPasswordAuthentication\"\n+  * permission.  If not, the method thows an exception.  If there is no\n+  * default <code>Authenticator</code> object, the method then returns\n+  * <code>null</code>.  Otherwise, the default authenticators's instance\n+  * variables are initialized and it's <code>getPasswordAuthentication</code>\n+  * method is called to get the actual authentication information to return.\n+  * This method is the preferred one as it can be used with hostname\n+  * when addr is unknown.\n+  *\n+  * @param host The hostname requesting authentication\n+  * @param addr The address requesting authentication\n+  * @param port The port requesting authentication\n+  * @param protocol The protocol requesting authentication\n+  * @param prompt The prompt to display to the user when requesting \n+  *        authentication info\n+  * @param scheme The authentication scheme in use\n+  *\n+  * @return A <code>PasswordAuthentication</code> object with the user's \n+  *         authentication info.\n+  *\n+  * @exception SecurityException If the caller does not have permission to \n+  *         perform this operation\n+  *\n+  * @since 1.4\n+  */\n public static PasswordAuthentication\n requestPasswordAuthentication(String host, InetAddress addr, int port,\n \t\t              String protocol, String prompt, String scheme)\n@@ -194,6 +219,9 @@\n }\n \n /**\n+ *  Returns the hostname of the host or proxy requesting authorization,\n+ *  or null if not available.\n+ *\n  *  @since 1.4\n  */\n protected final String getRequestingHost()"}]}