{"sha": "68386e1e3cbcd64346749e822babf7e576fa16aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgzODZlMWUzY2JjZDY0MzQ2NzQ5ZTgyMmJhYmY3ZTU3NmZhMTZhYQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-10-06T19:29:13Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-10-06T19:29:13Z"}, "message": "pa.c (output_function_prologue): Pass on information about the number of callee saved general and floating point...\n\n\t* pa.c (output_function_prologue): Pass on information about the\n\tnumber of callee saved general and floating point registers which\n\tare saved by the current function's prologue.\n\t(hppa_expand_prologue): Keep track of the number of callee\n\tregister saves done for general and floating point registers.\n\nFrom-SVN: r5641", "tree": {"sha": "b449a5381fe62d3113bb6d49614999e85673cbc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b449a5381fe62d3113bb6d49614999e85673cbc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68386e1e3cbcd64346749e822babf7e576fa16aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68386e1e3cbcd64346749e822babf7e576fa16aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68386e1e3cbcd64346749e822babf7e576fa16aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68386e1e3cbcd64346749e822babf7e576fa16aa/comments", "author": null, "committer": null, "parents": [{"sha": "3f259d6dfb2155820ed569dd479c82561800ebf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f259d6dfb2155820ed569dd479c82561800ebf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f259d6dfb2155820ed569dd479c82561800ebf3"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "215cfc116bf75c59c09110dad558abda081195ea", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68386e1e3cbcd64346749e822babf7e576fa16aa/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68386e1e3cbcd64346749e822babf7e576fa16aa/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=68386e1e3cbcd64346749e822babf7e576fa16aa", "patch": "@@ -46,6 +46,10 @@ rtx hppa_save_pic_table_rtx;\n /* Set by the FUNCTION_PROFILER macro. */\n int hp_profile_labelno;\n \n+/* Counts for the number of callee-saved general and floating point\n+   registers which were saved by the current function's prologue.  */\n+static int gr_saved, fr_saved;\n+\n static rtx find_addr_reg ();\n \n /* Return non-zero only if OP is a register of mode MODE,\n@@ -2018,6 +2022,10 @@ output_function_prologue (file, size)\n   if (frame_pointer_needed)\n     fprintf (file, \",SAVE_SP\");\n \n+  /* Pass on information about the number of callee register saves\n+     performed in the prologue.  */\n+  fprintf (file, \",ENTRY_GR=%d,ENTRY_FR=%d\", gr_saved, fr_saved);\n+\n   fprintf (file, \"\\n\\t.ENTRY\\n\");\n \n   /* Horrid hack.  emit_function_prologue will modify this RTL in\n@@ -2036,6 +2044,8 @@ hppa_expand_prologue()\n   rtx tmpreg, size_rtx;\n \n \n+  gr_saved = 0;\n+  fr_saved = 0;\n   save_fregs = 0;\n   local_fsize =  size + (size || frame_pointer_needed ? 8 : 0);\n   actual_fsize = compute_frame_size (size, &save_fregs);\n@@ -2167,6 +2177,7 @@ hppa_expand_prologue()\n \t  {\n \t    store_reg (i, offset, FRAME_POINTER_REGNUM);  \n \t    offset += 4;\n+\t    gr_saved++;\n \t  }\n     }\n   /* No frame pointer needed.  */\n@@ -2188,6 +2199,7 @@ hppa_expand_prologue()\n \t    else\n \t      store_reg (i, offset, STACK_POINTER_REGNUM);\n \t    offset += 4;\n+\t    gr_saved++;\n \t  }\n \n       /* If we wanted to merge the SP adjustment with a GR save, but we never\n@@ -2216,12 +2228,13 @@ hppa_expand_prologue()\n       if (! TARGET_SNAKE)\n \t{\n \t  for (i = 43; i >= 40; i--)\n-\t    {\n-\t      if (regs_ever_live[i])\n+\t    if (regs_ever_live[i])\n+\t      {\n \t\temit_move_insn (gen_rtx (MEM, DFmode, \n \t\t\t\t\t gen_rtx (POST_INC, DFmode, tmpreg)),\n \t\t\t\tgen_rtx (REG, DFmode, i));\n-\t    }\n+\t\tfr_saved++;\n+\t      }\n \t}\n       else\n \t{\n@@ -2231,6 +2244,7 @@ hppa_expand_prologue()\n \t\temit_move_insn (gen_rtx (MEM, DFmode, \n \t\t\t\t\t gen_rtx (POST_INC, DFmode, tmpreg)),\n \t\t\t\tgen_rtx (REG, DFmode, i));\n+\t\tfr_saved++;\n \t      }\n \t}\n     }"}]}