{"sha": "65d2d7642efba08fbd9aa2c46f17ef3fedd1946a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVkMmQ3NjQyZWZiYTA4ZmJkOWFhMmM0NmYxN2VmM2ZlZGQxOTQ2YQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-05-30T19:50:02Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-05-30T19:50:02Z"}, "message": "invoke.texi: Fix typos.\n\n\t* doc/invoke.texi: Fix typos.\n\t* doc/rtl.texi: Likewise.\n\nFrom-SVN: r67251", "tree": {"sha": "0ed9b8077839990708bba7bda78d0e8e1cb41639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ed9b8077839990708bba7bda78d0e8e1cb41639"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65d2d7642efba08fbd9aa2c46f17ef3fedd1946a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d2d7642efba08fbd9aa2c46f17ef3fedd1946a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65d2d7642efba08fbd9aa2c46f17ef3fedd1946a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d2d7642efba08fbd9aa2c46f17ef3fedd1946a/comments", "author": null, "committer": null, "parents": [{"sha": "5c29d24c6293d8a79973c6b9af181a18961181be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c29d24c6293d8a79973c6b9af181a18961181be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c29d24c6293d8a79973c6b9af181a18961181be"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "d98af3a1d344f34b2eb04fe20e9f21e69b9fd6c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d2d7642efba08fbd9aa2c46f17ef3fedd1946a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d2d7642efba08fbd9aa2c46f17ef3fedd1946a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65d2d7642efba08fbd9aa2c46f17ef3fedd1946a", "patch": "@@ -1,3 +1,8 @@\n+2003-05-30  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* doc/invoke.texi: Fix typos.\n+\t* doc/rtl.texi: Likewise.\n+\n 2003-05-30  Dhananjay Deshpande  <dhananjayd@kpitcummins.com>\n \n \t* config/h8300/crti.asm: Use .h8300hn and .h8300sn for normal"}, {"sha": "df4385049c1a0c2e7fe6ec46722cbd076cfbc288", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d2d7642efba08fbd9aa2c46f17ef3fedd1946a/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d2d7642efba08fbd9aa2c46f17ef3fedd1946a/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=65d2d7642efba08fbd9aa2c46f17ef3fedd1946a", "patch": "@@ -4632,10 +4632,10 @@ collection to occur at every opportunity.\n @item reorder-blocks-duplicate\n @itemx reorder-blocks-duplicate-feedback\n \n-Used by basic block reordering pass to decide whether to use uncondtional\n+Used by basic block reordering pass to decide whether to use unconditional\n branch or duplicate the code on it's destination.  Code is duplicated when it's\n estimated size is smaller than this value multiplied by the estimated size of\n-unconditinal jump in the hot spots of the program.\n+unconditional jump in the hot spots of the program.\n \n The @option{reorder-block-duplicate-feedback} is used only when profile\n feedback is available and may be set to higher values than"}, {"sha": "0ad91508b34b1d1cb69821b88a5bc8a95bbe822c", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65d2d7642efba08fbd9aa2c46f17ef3fedd1946a/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65d2d7642efba08fbd9aa2c46f17ef3fedd1946a/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=65d2d7642efba08fbd9aa2c46f17ef3fedd1946a", "patch": "@@ -746,7 +746,7 @@ a non-unchanging read can conflict with a non-unchanging write; an\n unchanging read can conflict with an unchanging write (since there may\n be a single store to this address to initialize it); and an unchanging\n store can conflict with a non-unchanging read.  This means we must make\n-conservative assumptions when chosing the value of this flag for a\n+conservative assumptions when choosing the value of this flag for a\n memory reference to an object containing both unchanging and\n non-unchanging fields: we must set the flag when writing to the object\n and clear it when reading from the object."}]}