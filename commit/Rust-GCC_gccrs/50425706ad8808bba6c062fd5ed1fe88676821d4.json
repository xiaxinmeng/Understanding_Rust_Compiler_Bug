{"sha": "50425706ad8808bba6c062fd5ed1fe88676821d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA0MjU3MDZhZDg4MDhiYmE2YzA2MmZkNWVkMWZlODg2NzY4MjFkNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-10-16T10:58:55Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-10-16T10:58:55Z"}, "message": "Assert for POINTER_TYPE_P in expr_callee_abi\n\n2019-10-16  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* function-abi.cc (expr_callee_abi): Assert for POINTER_TYPE_P.\n\nFrom-SVN: r277063", "tree": {"sha": "877b010da52baeb615c41da2b9ef887ec75f14f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/877b010da52baeb615c41da2b9ef887ec75f14f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50425706ad8808bba6c062fd5ed1fe88676821d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50425706ad8808bba6c062fd5ed1fe88676821d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50425706ad8808bba6c062fd5ed1fe88676821d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50425706ad8808bba6c062fd5ed1fe88676821d4/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "550a338052c374cb1f6c07ffd883c4046565fdd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550a338052c374cb1f6c07ffd883c4046565fdd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/550a338052c374cb1f6c07ffd883c4046565fdd4"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "1a03ac2dc0500c7a030483aae7ff9444d5b00b00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50425706ad8808bba6c062fd5ed1fe88676821d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50425706ad8808bba6c062fd5ed1fe88676821d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50425706ad8808bba6c062fd5ed1fe88676821d4", "patch": "@@ -1,3 +1,7 @@\n+2019-10-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* function-abi.cc (expr_callee_abi): Assert for POINTER_TYPE_P.\n+\n 2019-10-16  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* genmodes.c (mode_data::order): New field."}, {"sha": "2c23b4936bf79670a53d29ba267ee69952fa778b", "filename": "gcc/function-abi.cc", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50425706ad8808bba6c062fd5ed1fe88676821d4/gcc%2Ffunction-abi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50425706ad8808bba6c062fd5ed1fe88676821d4/gcc%2Ffunction-abi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction-abi.cc?ref=50425706ad8808bba6c062fd5ed1fe88676821d4", "patch": "@@ -249,12 +249,6 @@ expr_callee_abi (const_tree exp)\n   if (type == error_mark_node)\n     return default_function_abi;\n \n-  if (POINTER_TYPE_P (type))\n-    {\n-      type = TREE_TYPE (type);\n-      if (type == error_mark_node)\n-\treturn default_function_abi;\n-    }\n-\n-  return fntype_abi (type);\n+  gcc_assert (POINTER_TYPE_P (type));\n+  return fntype_abi (TREE_TYPE (type));\n }"}]}