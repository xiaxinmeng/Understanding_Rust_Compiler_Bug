{"sha": "e5408e52405a113827a7558f2847dc5acb0bb710", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU0MDhlNTI0MDVhMTEzODI3YTc1NThmMjg0N2RjNWFjYjBiYjcxMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-03-13T12:09:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-03-13T12:09:31Z"}, "message": "expr.c (store_expr): Add dont_store_target.\n\n\t* expr.c (store_expr): Add dont_store_target.  If temp is already in\n\ttarget before copying to reg, don't store it into target again.\n\nFrom-SVN: r40437", "tree": {"sha": "2eec962143d9f07ec03d7ae379aa9ee15d891eee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2eec962143d9f07ec03d7ae379aa9ee15d891eee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5408e52405a113827a7558f2847dc5acb0bb710", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5408e52405a113827a7558f2847dc5acb0bb710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5408e52405a113827a7558f2847dc5acb0bb710", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5408e52405a113827a7558f2847dc5acb0bb710/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f76a40c8dcf99fac9a9633a08e9049f470d23a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f76a40c8dcf99fac9a9633a08e9049f470d23a73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f76a40c8dcf99fac9a9633a08e9049f470d23a73"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "6bde0bc234f9d8934773b28bd5fda525cb7b1c37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5408e52405a113827a7558f2847dc5acb0bb710/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5408e52405a113827a7558f2847dc5acb0bb710/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5408e52405a113827a7558f2847dc5acb0bb710", "patch": "@@ -1,3 +1,8 @@\n+2001-03-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* expr.c (store_expr): Add dont_store_target.  If temp is already in\n+\ttarget before copying to reg, don't store it into target again.\n+\n 2001-03-12  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cppinternals.texi: Update for file handling."}, {"sha": "382bb2349165444861dae9b72cc7f59121f3c5f9", "filename": "gcc/expr.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5408e52405a113827a7558f2847dc5acb0bb710/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5408e52405a113827a7558f2847dc5acb0bb710/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=e5408e52405a113827a7558f2847dc5acb0bb710", "patch": "@@ -3905,6 +3905,7 @@ store_expr (exp, target, want_value)\n {\n   register rtx temp;\n   int dont_return_target = 0;\n+  int dont_store_target = 0;\n \n   if (TREE_CODE (exp) == COMPOUND_EXPR)\n     {\n@@ -3975,7 +3976,15 @@ store_expr (exp, target, want_value)\n     {\n       temp = expand_expr (exp, target, GET_MODE (target), 0);\n       if (GET_MODE (temp) != BLKmode && GET_MODE (temp) != VOIDmode)\n-\ttemp = copy_to_reg (temp);\n+\t{\n+\t  /* If TEMP is already in the desired TARGET, only copy it from\n+\t     memory and don't store it there again.  */\n+\t  if (temp == target\n+\t      || (rtx_equal_p (temp, target)\n+\t\t  && ! side_effects_p (temp) && ! side_effects_p (target)))\n+\t    dont_store_target = 1;\n+\t  temp = copy_to_reg (temp);\n+\t}\n       dont_return_target = 1;\n     }\n   else if (GET_CODE (target) == SUBREG && SUBREG_PROMOTED_VAR_P (target))\n@@ -4105,7 +4114,8 @@ store_expr (exp, target, want_value)\n   if ((! rtx_equal_p (temp, target)\n        || (temp != target && (side_effects_p (temp)\n \t\t\t      || side_effects_p (target))))\n-      && TREE_CODE (exp) != ERROR_MARK)\n+      && TREE_CODE (exp) != ERROR_MARK\n+      && ! dont_store_target)\n     {\n       target = protect_from_queue (target, 1);\n       if (GET_MODE (temp) != GET_MODE (target)"}]}