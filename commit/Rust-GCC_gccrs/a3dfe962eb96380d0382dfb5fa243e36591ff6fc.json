{"sha": "a3dfe962eb96380d0382dfb5fa243e36591ff6fc", "node_id": "C_kwDOANBUbNoAKGEzZGZlOTYyZWI5NjM4MGQwMzgyZGZiNWZhMjQzZTM2NTkxZmY2ZmM", "commit": {"author": {"name": "Jakub Dupak", "email": "dev@jakubdupak.com", "date": "2022-11-15T17:39:41Z"}, "committer": {"name": "Jakub Dupak", "email": "dev@jakubdupak.com", "date": "2022-11-16T16:59:37Z"}, "message": "ast: Dump type param type\n\nSigned-off-by: Jakub Dupak <dev@jakubdupak.com>", "tree": {"sha": "cf1938cade94b3202f491a03f9f465c7b9f574de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf1938cade94b3202f491a03f9f465c7b9f574de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3dfe962eb96380d0382dfb5fa243e36591ff6fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3dfe962eb96380d0382dfb5fa243e36591ff6fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3dfe962eb96380d0382dfb5fa243e36591ff6fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3dfe962eb96380d0382dfb5fa243e36591ff6fc/comments", "author": {"login": "jdupak", "id": 22683640, "node_id": "MDQ6VXNlcjIyNjgzNjQw", "avatar_url": "https://avatars.githubusercontent.com/u/22683640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdupak", "html_url": "https://github.com/jdupak", "followers_url": "https://api.github.com/users/jdupak/followers", "following_url": "https://api.github.com/users/jdupak/following{/other_user}", "gists_url": "https://api.github.com/users/jdupak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdupak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdupak/subscriptions", "organizations_url": "https://api.github.com/users/jdupak/orgs", "repos_url": "https://api.github.com/users/jdupak/repos", "events_url": "https://api.github.com/users/jdupak/events{/privacy}", "received_events_url": "https://api.github.com/users/jdupak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jdupak", "id": 22683640, "node_id": "MDQ6VXNlcjIyNjgzNjQw", "avatar_url": "https://avatars.githubusercontent.com/u/22683640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdupak", "html_url": "https://github.com/jdupak", "followers_url": "https://api.github.com/users/jdupak/followers", "following_url": "https://api.github.com/users/jdupak/following{/other_user}", "gists_url": "https://api.github.com/users/jdupak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdupak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdupak/subscriptions", "organizations_url": "https://api.github.com/users/jdupak/orgs", "repos_url": "https://api.github.com/users/jdupak/repos", "events_url": "https://api.github.com/users/jdupak/events{/privacy}", "received_events_url": "https://api.github.com/users/jdupak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c943bf43888f9dd1a5934f678de8b8435f1199a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c943bf43888f9dd1a5934f678de8b8435f1199a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c943bf43888f9dd1a5934f678de8b8435f1199a"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "216f0a43dc3a08a377ebe437a9d67e1a9a1693b5", "filename": "gcc/rust/ast/rust-ast-dump.cc", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3dfe962eb96380d0382dfb5fa243e36591ff6fc/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3dfe962eb96380d0382dfb5fa243e36591ff6fc/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.cc?ref=a3dfe962eb96380d0382dfb5fa243e36591ff6fc", "patch": "@@ -892,7 +892,19 @@ Dump::visit (AsyncBlockExpr &)\n void\n Dump::visit (TypeParam &param)\n {\n+  // Syntax:\n+  //    IDENTIFIER( : TypeParamBounds? )? ( = Type )?\n+  // TypeParamBounds :\n+  //    TypeParamBound ( + TypeParamBound )* +?\n+\n+  // FIXME this outputs things like \"Ambiguous: String\" - this comes from\n+  // Token::str\n   stream << param.get_type_representation ();\n+  if (param.has_type_param_bounds ())\n+    {\n+      stream << \": \";\n+      visit_items_joined_by_separator (param.get_type_param_bounds (), \" + \");\n+    }\n   if (param.has_type ())\n     {\n       stream << \" = \";\n@@ -1663,7 +1675,7 @@ Dump::visit (TraitObjectTypeOneBound &type)\n \n   if (type.is_dyn ())\n     stream << \"dyn \";\n-  visit(type.get_trait_bound());\n+  visit (type.get_trait_bound ());\n }\n \n void"}]}