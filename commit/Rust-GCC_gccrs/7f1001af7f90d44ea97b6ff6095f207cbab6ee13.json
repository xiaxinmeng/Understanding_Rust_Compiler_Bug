{"sha": "7f1001af7f90d44ea97b6ff6095f207cbab6ee13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YxMDAxYWY3ZjkwZDQ0ZWE5N2I2ZmY2MDk1ZjIwN2NiYWI2ZWUxMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-10-31T12:10:20Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-10-31T12:10:20Z"}, "message": "re PR c++/58932 ([C++11] Deleted functions and SFINAE in partial template specializations)\n\n/cp\n2013-10-31  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58932\n\tRevert:\n\t2013-10-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58466\n\t* pt.c (most_specialized_class): Bump processing_template_decl for\n\tget_class_bindings.\n\n/testsuite\n2013-10-31  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58932\n\tRevert:\n\t2013-10-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58466\n\t* g++.dg/cpp0x/variadic145.C: New.\n\n\t* g++.dg/cpp0x/sfinae49.C: New.\n\nFrom-SVN: r204252", "tree": {"sha": "8784c42b96662d2808cf2abfc4f1c350c8adc7ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8784c42b96662d2808cf2abfc4f1c350c8adc7ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f1001af7f90d44ea97b6ff6095f207cbab6ee13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f1001af7f90d44ea97b6ff6095f207cbab6ee13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f1001af7f90d44ea97b6ff6095f207cbab6ee13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f1001af7f90d44ea97b6ff6095f207cbab6ee13/comments", "author": null, "committer": null, "parents": [{"sha": "57d4d653e8199c53202b6a2d2a8e2b6c4644448d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d4d653e8199c53202b6a2d2a8e2b6c4644448d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57d4d653e8199c53202b6a2d2a8e2b6c4644448d"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "59381f341b45e2a6d2a3d5cd503a785a3bc85db0", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae49.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f1001af7f90d44ea97b6ff6095f207cbab6ee13/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae49.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f1001af7f90d44ea97b6ff6095f207cbab6ee13/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae49.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae49.C?ref=7f1001af7f90d44ea97b6ff6095f207cbab6ee13", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/58932\n+// { dg-do compile { target c++11 } }\n+\n+using nullptr_t = decltype(nullptr);\n+\n+template<typename T, typename Sfinae = nullptr_t>\n+struct B {\n+    static float& int_if_addable();\n+};\n+\n+template<typename T>\n+struct B<T, decltype( (T() + T()), nullptr )> {\n+    static int& int_if_addable();\n+};\n+\n+struct X { };\n+\n+struct Y { };\n+Y operator+(Y, Y);\n+\n+struct Z { };\n+Z operator+(Z, Z) = delete;\n+\n+int main()\n+{\n+  float& a = B<X>::int_if_addable();\n+  int& b = B<Y>::int_if_addable();\n+  float& c = B<Z>::int_if_addable();\n+}"}]}