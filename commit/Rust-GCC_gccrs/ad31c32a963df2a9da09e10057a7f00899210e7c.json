{"sha": "ad31c32a963df2a9da09e10057a7f00899210e7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQzMWMzMmE5NjNkZjJhOWRhMDllMTAwNTdhN2YwMDg5OTIxMGU3Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-05-09T19:30:03Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-05-09T19:30:03Z"}, "message": "pt.c (convert_nontype_argument_function): Add tsubst_flags_t parameter.\n\n2014-05-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* pt.c (convert_nontype_argument_function): Add tsubst_flags_t\n\tparameter.\n\t(convert_nontype_argument): Adjust calls.\n\t(coerce_template_parameter_pack): Add missing complain & tf_error\n\tcheck.\n\nFrom-SVN: r210289", "tree": {"sha": "a32f63b8ec33e79956848270b16e71f3e90844b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a32f63b8ec33e79956848270b16e71f3e90844b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad31c32a963df2a9da09e10057a7f00899210e7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad31c32a963df2a9da09e10057a7f00899210e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad31c32a963df2a9da09e10057a7f00899210e7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad31c32a963df2a9da09e10057a7f00899210e7c/comments", "author": null, "committer": null, "parents": [{"sha": "e7eee636b3eb402f434e8efa757b80c98d491e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7eee636b3eb402f434e8efa757b80c98d491e9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7eee636b3eb402f434e8efa757b80c98d491e9b"}], "stats": {"total": 57, "additions": 38, "deletions": 19}, "files": [{"sha": "ea813a98d2ea34b078097b46516af844c886588a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad31c32a963df2a9da09e10057a7f00899210e7c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad31c32a963df2a9da09e10057a7f00899210e7c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ad31c32a963df2a9da09e10057a7f00899210e7c", "patch": "@@ -1,3 +1,11 @@\n+2014-05-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* pt.c (convert_nontype_argument_function): Add tsubst_flags_t\n+\tparameter.\n+\t(convert_nontype_argument): Adjust calls.\n+\t(coerce_template_parameter_pack): Add missing complain & tf_error\n+\tcheck.\n+\n 2014-05-09  Jason Merrill  <jason@redhat.com>\n \n \tDR 587"}, {"sha": "bfae68062946f1d378d592de7e8d5fca7c72d2e4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 30, "deletions": 19, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad31c32a963df2a9da09e10057a7f00899210e7c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad31c32a963df2a9da09e10057a7f00899210e7c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ad31c32a963df2a9da09e10057a7f00899210e7c", "patch": "@@ -142,7 +142,7 @@ static int type_unification_real (tree, tree, tree, const tree *,\n \t\t\t\t  vec<deferred_access_check, va_gc> **,\n \t\t\t\t  bool);\n static void note_template_header (int);\n-static tree convert_nontype_argument_function (tree, tree);\n+static tree convert_nontype_argument_function (tree, tree, tsubst_flags_t);\n static tree convert_nontype_argument (tree, tree, tsubst_flags_t);\n static tree convert_template_argument (tree, tree, tree,\n \t\t\t\t       tsubst_flags_t, int, tree);\n@@ -5272,7 +5272,8 @@ get_underlying_template (tree tmpl)\n    and check that the resulting function has external linkage.  */\n \n static tree\n-convert_nontype_argument_function (tree type, tree expr)\n+convert_nontype_argument_function (tree type, tree expr,\n+\t\t\t\t   tsubst_flags_t complain)\n {\n   tree fns = expr;\n   tree fn, fn_no_ptr;\n@@ -5298,25 +5299,34 @@ convert_nontype_argument_function (tree type, tree expr)\n \n   if (TREE_CODE (fn_no_ptr) != FUNCTION_DECL)\n     {\n-      error (\"%qE is not a valid template argument for type %qT\", expr, type);\n-      if (TYPE_PTR_P (type))\n-\terror (\"it must be the address of a function with external linkage\");\n-      else\n-\terror (\"it must be the name of a function with external linkage\");\n+      if (complain & tf_error)\n+\t{\n+\t  error (\"%qE is not a valid template argument for type %qT\",\n+\t\t expr, type);\n+\t  if (TYPE_PTR_P (type))\n+\t    error (\"it must be the address of a function with \"\n+\t\t   \"external linkage\");\n+\t  else\n+\t    error (\"it must be the name of a function with \"\n+\t\t   \"external linkage\");\n+\t}\n       return NULL_TREE;\n     }\n \n   linkage = decl_linkage (fn_no_ptr);\n   if (cxx_dialect >= cxx11 ? linkage == lk_none : linkage != lk_external)\n     {\n-      if (cxx_dialect >= cxx11)\n-\terror (\"%qE is not a valid template argument for type %qT \"\n-\t       \"because %qD has no linkage\",\n-\t       expr, type, fn_no_ptr);\n-      else\n-\terror (\"%qE is not a valid template argument for type %qT \"\n-\t       \"because %qD does not have external linkage\",\n-\t       expr, type, fn_no_ptr);\n+      if (complain & tf_error)\n+\t{\n+\t  if (cxx_dialect >= cxx11)\n+\t    error (\"%qE is not a valid template argument for type %qT \"\n+\t\t   \"because %qD has no linkage\",\n+\t\t   expr, type, fn_no_ptr);\n+\t  else\n+\t    error (\"%qE is not a valid template argument for type %qT \"\n+\t\t   \"because %qD does not have external linkage\",\n+\t\t   expr, type, fn_no_ptr);\n+\t}\n       return NULL_TREE;\n     }\n \n@@ -5959,7 +5969,7 @@ convert_nontype_argument (tree type, tree expr, tsubst_flags_t complain)\n \t/* Null pointer values are OK in C++11.  */\n \treturn perform_qualification_conversions (type, expr);\n \n-      expr = convert_nontype_argument_function (type, expr);\n+      expr = convert_nontype_argument_function (type, expr, complain);\n       if (!expr || expr == error_mark_node)\n \treturn expr;\n     }\n@@ -5983,7 +5993,7 @@ convert_nontype_argument (tree type, tree expr, tsubst_flags_t complain)\n \t  return NULL_TREE;\n \t}\n \n-      expr = convert_nontype_argument_function (type, expr);\n+      expr = convert_nontype_argument_function (type, expr, complain);\n       if (!expr || expr == error_mark_node)\n \treturn expr;\n \n@@ -6696,8 +6706,9 @@ coerce_template_parameter_pack (tree parms,\n   if (arg_idx - parm_idx < TREE_VEC_LENGTH (packed_args)\n       && TREE_VEC_LENGTH (packed_args) > 0)\n     {\n-      error (\"wrong number of template arguments (%d, should be %d)\",\n-\t     arg_idx - parm_idx, TREE_VEC_LENGTH (packed_args));\n+      if (complain & tf_error)\n+\terror (\"wrong number of template arguments (%d, should be %d)\",\n+\t       arg_idx - parm_idx, TREE_VEC_LENGTH (packed_args));\n       return error_mark_node;\n     }\n "}]}