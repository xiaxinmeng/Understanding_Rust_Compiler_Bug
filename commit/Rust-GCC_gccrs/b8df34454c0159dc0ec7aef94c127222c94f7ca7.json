{"sha": "b8df34454c0159dc0ec7aef94c127222c94f7ca7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhkZjM0NDU0YzAxNTlkYzBlYzdhZWY5NGMxMjcyMjJjOTRmN2NhNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2008-06-27T23:02:06Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2008-06-27T23:02:06Z"}, "message": "vec.cc (__aeabi_vec_dtor_cookie): Handle NULL array address.\n\n2008-06-27  Mark Mitchell  <mark@codesourcery.com>\n\n\t* libsupc++/vec.cc (__aeabi_vec_dtor_cookie): Handle NULL array\n\taddress.\n\t(__aeabi_vec_delete): Likewise.\n\t(__aeabi_vec_delete3): Likewise.\n\t(__aeabi_vec_delete3_nodtor): Likewise.\n\n2008-06-27  Mark Mitchell  <mark@codesourcery.com>\n\n\t* g++.dg/abi/arm_cxa_vec2.C: New test.\n\nFrom-SVN: r137207", "tree": {"sha": "ee424efdc156b1f33628dbcfd0142c57a4aa60c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee424efdc156b1f33628dbcfd0142c57a4aa60c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8df34454c0159dc0ec7aef94c127222c94f7ca7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8df34454c0159dc0ec7aef94c127222c94f7ca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8df34454c0159dc0ec7aef94c127222c94f7ca7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8df34454c0159dc0ec7aef94c127222c94f7ca7/comments", "author": null, "committer": null, "parents": [{"sha": "0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ac69b47fbd5c46b29f27ce9ab10ff63498ceeee"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "d4de302f794d84251870ebb75d96fd84825e5222", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8df34454c0159dc0ec7aef94c127222c94f7ca7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8df34454c0159dc0ec7aef94c127222c94f7ca7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b8df34454c0159dc0ec7aef94c127222c94f7ca7", "patch": "@@ -1,3 +1,7 @@\n+2008-06-27  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* g++.dg/abi/arm_cxa_vec2.C: New test.\n+\n 2008-06-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/36364"}, {"sha": "76f327acaab9200d28ffbb64c901367e9a139de0", "filename": "gcc/testsuite/g++.dg/abi/arm_cxa_vec2.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8df34454c0159dc0ec7aef94c127222c94f7ca7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Farm_cxa_vec2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8df34454c0159dc0ec7aef94c127222c94f7ca7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Farm_cxa_vec2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Farm_cxa_vec2.C?ref=b8df34454c0159dc0ec7aef94c127222c94f7ca7", "patch": "@@ -0,0 +1,41 @@\n+// Check that ARM vector delete functions accept NULL pointers as\n+// inputs.\n+// { dg-do run { target arm*-*-* } }\n+\n+#ifdef __ARM_EABI__\n+#include <cxxabi.h>\n+\n+typedef void *(dtor_type)(void *);\n+\n+extern \"C\" {\n+  void abort();\n+  void *__aeabi_vec_dtor_cookie(void *, dtor_type);\n+  void __aeabi_vec_delete(void *, dtor_type);\n+  void __aeabi_vec_delete3(void *, \n+\t\t\t   dtor_type, \n+\t\t\t   void (*)(void *, __SIZE_TYPE__));\n+  void __aeabi_vec_delete3_nodtor(void *, \n+\t\t\t\t  void (*)(void *, __SIZE_TYPE__));\n+}\n+\n+// These functions should never be called.\n+void* dtor(void *)\n+{\n+  abort ();\n+}\n+\n+void dealloc(void *, size_t) {\n+  abort ();\n+}\n+\n+int main () {\n+  if (__aeabi_vec_dtor_cookie (NULL, &dtor) != NULL)\n+    return 1;\n+  // These do not return values, but should not crash.\n+  __aeabi_vec_delete (NULL, &dtor);\n+  __aeabi_vec_delete3 (NULL, &dtor, &dealloc);\n+  __aeabi_vec_delete3_nodtor (NULL, &dealloc);\n+}\n+#else\n+int main () {}\n+#endif"}, {"sha": "cfb15d246d2914ca8946e7ed06068f7787c666c0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8df34454c0159dc0ec7aef94c127222c94f7ca7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8df34454c0159dc0ec7aef94c127222c94f7ca7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b8df34454c0159dc0ec7aef94c127222c94f7ca7", "patch": "@@ -1,3 +1,11 @@\n+2008-06-27  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* libsupc++/vec.cc (__aeabi_vec_dtor_cookie): Handle NULL array\n+\taddress.\n+\t(__aeabi_vec_delete): Likewise.\n+\t(__aeabi_vec_delete3): Likewise.\n+\t(__aeabi_vec_delete3_nodtor): Likewise.\n+\n 2008-06-27  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/stl_algo.h (is_partitioned): Add in C++0x mode."}, {"sha": "a29bbc73266ca359cf6a2ec0051721ce43792022", "filename": "libstdc++-v3/libsupc++/vec.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8df34454c0159dc0ec7aef94c127222c94f7ca7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8df34454c0159dc0ec7aef94c127222c94f7ca7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc?ref=b8df34454c0159dc0ec7aef94c127222c94f7ca7", "patch": "@@ -461,6 +461,9 @@ namespace __aeabiv1\n   __aeabi_vec_dtor_cookie (void *array_address, \n \t\t\t   abi::__cxa_cdtor_type destructor)\n   {\n+    if (!array_address)\n+      return NULL;\n+\n     abi::__cxa_vec_dtor (array_address, \n \t\t\t reinterpret_cast<std::size_t *>(array_address)[-1],\n \t\t\t reinterpret_cast<std::size_t *>(array_address)[-2],\n@@ -473,6 +476,9 @@ namespace __aeabiv1\n   __aeabi_vec_delete (void *array_address, \n \t\t      abi::__cxa_cdtor_type destructor)\n   {\n+    if (!array_address)\n+      return;\n+\n     abi::__cxa_vec_delete (array_address,\n \t\t\t   reinterpret_cast<std::size_t *>(array_address)[-2],\n \t\t\t   2 * sizeof (std::size_t),\n@@ -484,6 +490,9 @@ namespace __aeabiv1\n \t\t       abi::__cxa_cdtor_type destructor,\n \t\t       void (*dealloc) (void *, std::size_t))\n   {\n+    if (!array_address)\n+      return;\n+\n     abi::__cxa_vec_delete3 (array_address,\n \t\t\t    reinterpret_cast<std::size_t *>(array_address)[-2],\n \t\t\t    2 * sizeof (std::size_t),\n@@ -494,6 +503,9 @@ namespace __aeabiv1\n   __aeabi_vec_delete3_nodtor (void *array_address,\n \t\t\t      void (*dealloc) (void *, std::size_t))\n   {\n+    if (!array_address)\n+      return;\n+\n     abi::__cxa_vec_delete3 (array_address,\n \t\t\t    reinterpret_cast<std::size_t *>(array_address)[-2],\n \t\t\t    2 * sizeof (std::size_t),"}]}