{"sha": "5f054b17f826e2cfb4c76020bce79b2ed99bb9f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYwNTRiMTdmODI2ZTJjZmI0Yzc2MDIwYmNlNzliMmVkOTliYjlmOQ==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2019-03-04T12:36:04Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2019-03-04T12:36:04Z"}, "message": "re PR tree-optimization/89437 (incorrect result for sinl (atanl (x)))\n\nFix PR89437\n\nFix PR89437. Fix the sinatan-1.c testcase to not run without\na C99 target system.  Use nextafterl for long double initialization.\n\nFix an issue with sinl (atanl (sqrtl (LDBL_MAX)) returning 0.0\ninstead of 1.0 by using x < sqrtl (LDBL_MAX) in match.pd.\n\n    gcc/\n\tPR tree-optimization/89437\n\t* match.pd: Use lt in sin(atan(x)) and cos(atan(x)) simplifications.\n\n    testsuite/\n\tPR tree-optimization/89437\n\t* gcc.dg/sinatan-1.c: Fix testcase.\n\nFrom-SVN: r269364", "tree": {"sha": "42a53f947d241a902a03d45985896fc39d2e72df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42a53f947d241a902a03d45985896fc39d2e72df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9/comments", "author": null, "committer": null, "parents": [{"sha": "19d4e4d614655cf76d87522855103c01d029b2cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19d4e4d614655cf76d87522855103c01d029b2cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19d4e4d614655cf76d87522855103c01d029b2cf"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "38858fa6b0e06107c6e34d31e62f876ebe90eec4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f054b17f826e2cfb4c76020bce79b2ed99bb9f9", "patch": "@@ -1,3 +1,8 @@\n+2019-03-04  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\tPR tree-optimization/89437\n+\t* match.pd: Use lt in sin(atan(x)) and cos(atan(x)) simplifications.\n+\n 2019-03-04  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/89572"}, {"sha": "c9af2e59441c4fe19e88d94c9d138ae35dfe673f", "filename": "gcc/match.pd", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=5f054b17f826e2cfb4c76020bce79b2ed99bb9f9", "patch": "@@ -4407,7 +4407,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n       tree t_one = build_one_cst (type);\n      }\n     (if (SCALAR_FLOAT_TYPE_P (type))\n-     (cond (le (abs @0) { t_cst; })\n+     (cond (lt (abs @0) { t_cst; })\n       (rdiv @0 (sqrts (plus (mult @0 @0) { t_one; })))\n       (copysigns { t_one; } @0))))))\n \n@@ -4427,7 +4427,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n       tree t_zero = build_zero_cst (type);\n      }\n     (if (SCALAR_FLOAT_TYPE_P (type))\n-     (cond (le (abs @0) { t_cst; })\n+     (cond (lt (abs @0) { t_cst; })\n       (rdiv { t_one; } (sqrts (plus (mult @0 @0) { t_one; })))\n       (copysigns { t_zero; } @0))))))\n "}, {"sha": "cbcb1a97c574373373b7f90c400231977fb7fa66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5f054b17f826e2cfb4c76020bce79b2ed99bb9f9", "patch": "@@ -1,3 +1,8 @@\n+2019-03-04  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\tPR tree-optimization/89437\n+\t* gcc.dg/sinatan-1.c: Fix testcase.\n+\n 2019-03-04  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/89572"}, {"sha": "cfbb771a018d3175c680dce88e0121e469716edc", "filename": "gcc/testsuite/gcc.dg/sinatan-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9/gcc%2Ftestsuite%2Fgcc.dg%2Fsinatan-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f054b17f826e2cfb4c76020bce79b2ed99bb9f9/gcc%2Ftestsuite%2Fgcc.dg%2Fsinatan-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsinatan-1.c?ref=5f054b17f826e2cfb4c76020bce79b2ed99bb9f9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run } */\n+/* { dg-do run { target c99_runtime } } */\n /* { dg-options \"-Ofast\" } */\n /* { dg-add-options ieee } */\n \n@@ -62,7 +62,7 @@ main()\n     /* Get first x such that 1 + x*x will overflow */\n     float fc = nextafterf (sqrtf (__FLT_MAX__ - 1), __FLT_MAX__);\n     double c = nextafter (sqrt (__DBL_MAX__ - 1), __DBL_MAX__);\n-    long double lc = nextafter (sqrtl (__LDBL_MAX__ - 1), __LDBL_MAX__);\n+    long double lc = nextafterl (sqrtl (__LDBL_MAX__ - 1), __LDBL_MAX__);\n \n     /*  Force move from FPU to memory, otherwise comparison may\n         fail due to possible more accurate registers (see 387)  */"}]}