{"sha": "8b659f794a1613b10333fa6826c0ed41d802ce8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI2NTlmNzk0YTE2MTNiMTAzMzNmYTY4MjZjMGVkNDFkODAyY2U4Yg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-11-06T11:28:07Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-11-06T11:28:07Z"}, "message": "re PR ada/19419 (Overlapping memcpy with array slices)\n\n\tPR ada/19419\n\t* gcc-interface/trans.c (gnat_to_gnu) <N_Assignment_Statement>:\n\tGenerate a call to memmove for an assignment between overlapping\n\tarray slices.\n\nFrom-SVN: r141637", "tree": {"sha": "63dcedaa432f0032ebe66fee514f25ac1874fba4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63dcedaa432f0032ebe66fee514f25ac1874fba4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b659f794a1613b10333fa6826c0ed41d802ce8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b659f794a1613b10333fa6826c0ed41d802ce8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b659f794a1613b10333fa6826c0ed41d802ce8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b659f794a1613b10333fa6826c0ed41d802ce8b/comments", "author": null, "committer": null, "parents": [{"sha": "8a554c70d58393606b9a96dac6a12ae2b8de73e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a554c70d58393606b9a96dac6a12ae2b8de73e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a554c70d58393606b9a96dac6a12ae2b8de73e2"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "67300939fe0af3c6e2d97aea406c0521bcc2ebc3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b659f794a1613b10333fa6826c0ed41d802ce8b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b659f794a1613b10333fa6826c0ed41d802ce8b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8b659f794a1613b10333fa6826c0ed41d802ce8b", "patch": "@@ -1,3 +1,10 @@\n+2008-11-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/19419\n+\t* gcc-interface/trans.c (gnat_to_gnu) <N_Assignment_Statement>:\n+\tGenerate a call to memmove for an assignment between overlapping\n+\tarray slices.\n+\n 2008-11-02  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \tPR target/37977"}, {"sha": "9f050bdc5d1ae59d593b3f8d5a6b4228bc32113d", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b659f794a1613b10333fa6826c0ed41d802ce8b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b659f794a1613b10333fa6826c0ed41d802ce8b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=8b659f794a1613b10333fa6826c0ed41d802ce8b", "patch": "@@ -4159,12 +4159,33 @@ gnat_to_gnu (Node_Id gnat_node)\n \t  gnu_rhs\n \t    = maybe_unconstrained_array (gnat_to_gnu (Expression (gnat_node)));\n \n-\t  /* If range check is needed, emit code to generate it */\n+\t  /* If range check is needed, emit code to generate it.  */\n \t  if (Do_Range_Check (Expression (gnat_node)))\n \t    gnu_rhs = emit_range_check (gnu_rhs, Etype (Name (gnat_node)));\n \n \t  gnu_result\n \t    = build_binary_op (MODIFY_EXPR, NULL_TREE, gnu_lhs, gnu_rhs);\n+\n+\t  /* If the type being assigned is an array type and the two sides\n+\t     are not completely disjoint, play safe and use memmove.  */\n+\t  if (TREE_CODE (gnu_result) == MODIFY_EXPR\n+\t      && Is_Array_Type (Etype (Name (gnat_node)))\n+\t      && !(Forwards_OK (gnat_node) && Backwards_OK (gnat_node)))\n+\t    {\n+\t      tree to, from, size, to_ptr, from_ptr, t;\n+\n+\t      to = TREE_OPERAND (gnu_result, 0);\n+\t      from = TREE_OPERAND (gnu_result, 1);\n+\n+\t      size = TYPE_SIZE_UNIT (TREE_TYPE (from));\n+\t      size = SUBSTITUTE_PLACEHOLDER_IN_EXPR (size, from);\n+\n+\t      to_ptr = build_fold_addr_expr (to);\n+\t      from_ptr = build_fold_addr_expr (from);\n+\n+\t      t = implicit_built_in_decls[BUILT_IN_MEMMOVE];\n+\t      gnu_result = build_call_expr (t, 3, to_ptr, from_ptr, size);\n+\t   }\n \t}\n       break;\n "}]}