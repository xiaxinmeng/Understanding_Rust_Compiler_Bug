{"sha": "9d07490f09ebb24ea3fd58237878fff6ca676f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQwNzQ5MGYwOWViYjI0ZWEzZmQ1ODIzNzg3OGZmZjZjYTY3NmY5OQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2015-07-05T02:56:18Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2015-07-05T02:56:18Z"}, "message": "nios2.c (save_reg, [...]): Use plus_constant.\n\n2015-07-04  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* config/nios2/nios2.c (save_reg, restore_reg): Use plus_constant.\n\tUse rtx_insn * instead of rtx.\n\t(nios2_emit_add_constant): Use rtx_insn * instead of rtx.\n\t(nios2_expand_prologue, nios2_expand_epilogue): Likewise.\n\t(nios2_call_tls_get_addr): Likewise.\n\t(nios2_emit_expensive_div): Likewise.\n\t(nios2_emit_move_sequence): Change return type to bool.\n\t* config/nios2/nios2-protos.h (nios2_emit_move_sequence):\n\tChange return type to bool.\n\nFrom-SVN: r225420", "tree": {"sha": "0011eb7fe9ce97b78952ed79530e7cc81ed8423f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0011eb7fe9ce97b78952ed79530e7cc81ed8423f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d07490f09ebb24ea3fd58237878fff6ca676f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d07490f09ebb24ea3fd58237878fff6ca676f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d07490f09ebb24ea3fd58237878fff6ca676f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d07490f09ebb24ea3fd58237878fff6ca676f99/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "239c34bfbdccf74267a4fb1ed4033cfa35b345b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/239c34bfbdccf74267a4fb1ed4033cfa35b345b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/239c34bfbdccf74267a4fb1ed4033cfa35b345b4"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "fe9f6809a71f22848070cc883adc846a7f78b694", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d07490f09ebb24ea3fd58237878fff6ca676f99/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d07490f09ebb24ea3fd58237878fff6ca676f99/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d07490f09ebb24ea3fd58237878fff6ca676f99", "patch": "@@ -1,3 +1,15 @@\n+2015-07-04  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* config/nios2/nios2.c (save_reg, restore_reg): Use plus_constant.\n+\tUse rtx_insn * instead of rtx.\n+\t(nios2_emit_add_constant): Use rtx_insn * instead of rtx.\n+\t(nios2_expand_prologue, nios2_expand_epilogue): Likewise.\n+\t(nios2_call_tls_get_addr): Likewise.\n+\t(nios2_emit_expensive_div): Likewise.\n+\t(nios2_emit_move_sequence): Change return type to bool.\n+\t* config/nios2/nios2-protos.h (nios2_emit_move_sequence):\n+\tChange return type to bool.\n+\n 2015-07-04  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR target/66747"}, {"sha": "2855c92b2f65acff3a3e7e0a92319f368138b31a", "filename": "gcc/config/nios2/nios2-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d07490f09ebb24ea3fd58237878fff6ca676f99/gcc%2Fconfig%2Fnios2%2Fnios2-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d07490f09ebb24ea3fd58237878fff6ca676f99/gcc%2Fconfig%2Fnios2%2Fnios2-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2-protos.h?ref=9d07490f09ebb24ea3fd58237878fff6ca676f99", "patch": "@@ -29,7 +29,7 @@ extern void nios2_expand_epilogue (bool);\n extern void nios2_function_profiler (FILE *, int);\n \n #ifdef RTX_CODE\n-extern int nios2_emit_move_sequence (rtx *, machine_mode);\n+extern bool nios2_emit_move_sequence (rtx *, machine_mode);\n extern void nios2_emit_expensive_div (rtx *, machine_mode);\n extern void nios2_adjust_call_address (rtx *, rtx);\n "}, {"sha": "fd035fb59aa37fa3561a0294f8bd4712dd5c8e25", "filename": "gcc/config/nios2/nios2.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d07490f09ebb24ea3fd58237878fff6ca676f99/gcc%2Fconfig%2Fnios2%2Fnios2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d07490f09ebb24ea3fd58237878fff6ca676f99/gcc%2Fconfig%2Fnios2%2Fnios2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.c?ref=9d07490f09ebb24ea3fd58237878fff6ca676f99", "patch": "@@ -446,19 +446,17 @@ static void\n save_reg (int regno, unsigned offset)\n {\n   rtx reg = gen_rtx_REG (SImode, regno);\n-  rtx addr = gen_rtx_PLUS (Pmode, stack_pointer_rtx,\n-\t\t\t   gen_int_mode (offset, Pmode));\n-  rtx insn = emit_move_insn (gen_frame_mem (Pmode, addr), reg);\n+  rtx addr = plus_constant (Pmode, stack_pointer_rtx, offset, false);\n+  rtx_insn *insn = emit_move_insn (gen_frame_mem (Pmode, addr), reg);\n   RTX_FRAME_RELATED_P (insn) = 1;\n }\n \n static void\n restore_reg (int regno, unsigned offset)\n {\n   rtx reg = gen_rtx_REG (SImode, regno);\n-  rtx addr = gen_rtx_PLUS (Pmode, stack_pointer_rtx,\n-\t\t\t   gen_int_mode (offset, Pmode));\n-  rtx insn = emit_move_insn (reg, gen_frame_mem (Pmode, addr));\n+  rtx addr = plus_constant (Pmode, stack_pointer_rtx, offset, false);\n+  rtx_insn *insn = emit_move_insn (reg, gen_frame_mem (Pmode, addr));\n   /* Tag epilogue unwind note.  */\n   add_reg_note (insn, REG_CFA_RESTORE, reg);\n   RTX_FRAME_RELATED_P (insn) = 1;\n@@ -479,10 +477,10 @@ nios2_emit_stack_limit_check (void)\n /* Temp regno used inside prologue/epilogue.  */\n #define TEMP_REG_NUM 8\n \n-static rtx\n+static rtx_insn *\n nios2_emit_add_constant (rtx reg, HOST_WIDE_INT immed)\n {\n-  rtx insn;\n+  rtx_insn *insn;\n   if (SMALL_INT (immed))\n     insn = emit_insn (gen_add2_insn (reg, gen_int_mode (immed, Pmode)));\n   else\n@@ -501,7 +499,7 @@ nios2_expand_prologue (void)\n   int total_frame_size, save_offset;\n   int sp_offset;      /* offset from base_reg to final stack value.  */\n   int save_regs_base; /* offset from base_reg to register save area.  */\n-  rtx insn;\n+  rtx_insn *insn;\n \n   total_frame_size = nios2_compute_frame_layout ();\n \n@@ -587,7 +585,8 @@ nios2_expand_prologue (void)\n void\n nios2_expand_epilogue (bool sibcall_p)\n {\n-  rtx insn, cfa_adj;\n+  rtx_insn *insn;\n+  rtx cfa_adj;\n   int total_frame_size;\n   int sp_adjust, save_offset;\n   unsigned int regno;\n@@ -1180,7 +1179,8 @@ nios2_call_tls_get_addr (rtx ti)\n {\n   rtx arg = gen_rtx_REG (Pmode, FIRST_ARG_REGNO);\n   rtx ret = gen_rtx_REG (Pmode, FIRST_RETVAL_REGNO);\n-  rtx fn, insn;\n+  rtx fn;\n+  rtx_insn *insn;\n   \n   if (!nios2_tls_symbol)\n     nios2_tls_symbol = init_one_libfunc (\"__tls_get_addr\");\n@@ -1343,10 +1343,10 @@ nios2_emit_expensive_div (rtx *operands, machine_mode mode)\n   rtx or_result, shift_left_result;\n   rtx lookup_value;\n   rtx_code_label *lab1, *lab3;\n-  rtx insns;\n+  rtx_insn *insns;\n   rtx libfunc;\n   rtx final_result;\n-  rtx tmp;\n+  rtx_insn *tmp;\n   rtx table;\n \n   /* It may look a little generic, but only SImode is supported for now.  */\n@@ -1928,7 +1928,7 @@ nios2_delegitimize_address (rtx x)\n }\n \n /* Main expander function for RTL moves.  */\n-int\n+bool\n nios2_emit_move_sequence (rtx *operands, machine_mode mode)\n {\n   rtx to = operands[0];\n@@ -1947,7 +1947,7 @@ nios2_emit_move_sequence (rtx *operands, machine_mode mode)\n \n   operands[0] = to;\n   operands[1] = from;\n-  return 0;\n+  return false;\n }\n \n /* The function with address *ADDR is being called.  If the address"}]}