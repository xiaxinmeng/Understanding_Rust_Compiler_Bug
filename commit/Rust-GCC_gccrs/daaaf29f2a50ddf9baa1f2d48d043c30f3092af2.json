{"sha": "daaaf29f2a50ddf9baa1f2d48d043c30f3092af2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFhYWYyOWYyYTUwZGRmOWJhYTFmMmQ0OGQwNDNjMzBmMzA5MmFmMg==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2001-03-17T20:25:10Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2001-03-17T20:25:10Z"}, "message": "parse.h (JDEP_SOLV): Removed.\n\n\n\t* parse.h (JDEP_SOLV):  Removed.\n\t* parse.y (incomplete_class_list):  Removed.\n\t(register_incomplete_type):  Use JDEP_TO_RESOLVE instead of JDEP_SOLV.\n\n\t* parse.y (obtain_incomplete_type): Removed.  It doesn't work if\n\tresolve_class changes the name of an array type that is on the list\n\tand then someone else looks for the modified name.  Also, seems liable\n\tto break when compiling multiple source files at once.  So the simplest\n\tis to just remove incomplete_class_list - it is only a minor\n\tspace win and it is not even clear it saves time.\n\n\t* parse.y (resolve_class):  Remove unneeded promote_type.\n\nFrom-SVN: r40584", "tree": {"sha": "c5d09960634fce6071fe139f352b7cdb7d3d81bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5d09960634fce6071fe139f352b7cdb7d3d81bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daaaf29f2a50ddf9baa1f2d48d043c30f3092af2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daaaf29f2a50ddf9baa1f2d48d043c30f3092af2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daaaf29f2a50ddf9baa1f2d48d043c30f3092af2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daaaf29f2a50ddf9baa1f2d48d043c30f3092af2/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "464186fb60d6479e5561ddcab0d0337a5d222bff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/464186fb60d6479e5561ddcab0d0337a5d222bff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/464186fb60d6479e5561ddcab0d0337a5d222bff"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "298cc4ca514289245fee71c94c4c67ec61d1c3e3", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daaaf29f2a50ddf9baa1f2d48d043c30f3092af2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daaaf29f2a50ddf9baa1f2d48d043c30f3092af2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=daaaf29f2a50ddf9baa1f2d48d043c30f3092af2", "patch": "@@ -1,3 +1,18 @@\n+2001-03-17  Per Bothner  <per@bothner.com>\n+\n+\t* parse.h (JDEP_SOLV):  Removed.\n+\t* parse.y (incomplete_class_list):  Removed.\n+\t(register_incomplete_type):  Use JDEP_TO_RESOLVE instead of JDEP_SOLV.\n+\n+\t* parse.y (obtain_incomplete_type): Removed.  It doesn't work if\n+\tresolve_class changes the name of an array type that is on the list\n+\tand then someone else looks for the modified name.  Also, seems liable\n+\tto break when compiling multiple source files at once.  So the simplest\n+\tis to just remove incomplete_class_list - it is only a minor\n+\tspace win and it is not even clear it saves time.\n+\n+\t* parse.y (resolve_class):  Remove unneeded promote_type.\n+\n 2001-03-15  Per Bothner  <per@bothner.com>\n \n \t* java-tree.h (BLOCK_IS_IMPLICIT):  New flag."}, {"sha": "98845d7977b4b57fdcf65ed35281d5a7415ad86e", "filename": "gcc/java/parse.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daaaf29f2a50ddf9baa1f2d48d043c30f3092af2/gcc%2Fjava%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daaaf29f2a50ddf9baa1f2d48d043c30f3092af2/gcc%2Fjava%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.h?ref=daaaf29f2a50ddf9baa1f2d48d043c30f3092af2", "patch": "@@ -494,7 +494,6 @@ typedef struct _jdep {\n #define JDEP_DECL(J)          ((J)->decl)\n #define JDEP_DECL_WFL(J)      ((J)->decl)\n #define JDEP_KIND(J)          ((J)->kind)\n-#define JDEP_SOLV(J)          ((J)->solv)\n #define JDEP_WFL(J)           ((J)->wfl)\n #define JDEP_MISC(J)          ((J)->misc)\n #define JDEP_ENCLOSING(J)     ((J)->enclosing)"}, {"sha": "f36c4decf3531c47dee4f772113d2ef8d4c25aa4", "filename": "gcc/java/parse.y", "status": "modified", "additions": 5, "deletions": 19, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daaaf29f2a50ddf9baa1f2d48d043c30f3092af2/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daaaf29f2a50ddf9baa1f2d48d043c30f3092af2/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=daaaf29f2a50ddf9baa1f2d48d043c30f3092af2", "patch": "@@ -409,14 +409,11 @@ static tree current_this;\n    the list of the catch clauses of the currently analysed try block. */\n static tree currently_caught_type_list;\n \n-static tree src_parse_roots[2] = { NULL_TREE, NULL_TREE };\n+static tree src_parse_roots[1] = { NULL_TREE };\n \n /* All classes seen from source code */\n #define gclass_list src_parse_roots[0]\n \n-/* List of non-complete classes */\n-#define incomplete_class_list src_parse_roots[1]\n-\n /* Check modifiers. If one doesn't fit, retrieve it in its declaration\n    line and point it out.  */\n /* Should point out the one that don't fit. ASCII/unicode, going\n@@ -4979,7 +4976,7 @@ static tree\n obtain_incomplete_type (type_name)\n      tree type_name;\n {\n-  tree ptr, name;\n+  tree ptr = NULL_TREE, name;\n \n   if (TREE_CODE (type_name) == EXPR_WITH_FILE_LOCATION)\n     name = EXPR_WFL_NODE (type_name);\n@@ -4988,17 +4985,8 @@ obtain_incomplete_type (type_name)\n   else\n     abort ();\n \n-  for (ptr = incomplete_class_list; ptr; ptr = TREE_CHAIN (ptr))\n-    if (TYPE_NAME (ptr) == name)\n-      break;\n-\n-  if (!ptr)\n-    {\n-      BUILD_PTR_FROM_NAME (ptr, name);\n-      layout_type (ptr);\n-      TREE_CHAIN (ptr) = incomplete_class_list;\n-      incomplete_class_list = ptr;\n-    }\n+  BUILD_PTR_FROM_NAME (ptr, name);\n+  layout_type (ptr);\n \n   return ptr;\n }\n@@ -5020,7 +5008,7 @@ register_incomplete_type (kind, wfl, decl, ptr)\n \n   JDEP_KIND (new) = kind;\n   JDEP_DECL (new) = decl;\n-  JDEP_SOLV (new) = ptr;\n+  JDEP_TO_RESOLVE (new) = ptr;\n   JDEP_WFL (new) = wfl;\n   JDEP_CHAIN (new) = NULL;\n   JDEP_MISC (new) = NULL_TREE;\n@@ -5476,8 +5464,6 @@ resolve_class (enclosing, class_type, decl, cl)\n     {\n       while (base != name)\n \t{\n-\t  if (TREE_CODE (resolved_type) == RECORD_TYPE)\n-\t    resolved_type  = promote_type (resolved_type);\n \t  resolved_type = build_java_array_type (resolved_type, -1);\n \t  CLASS_LOADED_P (resolved_type) = 1;\n \t  name--;"}]}