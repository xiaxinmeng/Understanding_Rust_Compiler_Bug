{"sha": "b9ebee5df98aca4621079f59b5d5c02d77dcd35c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjllYmVlNWRmOThhY2E0NjIxMDc5ZjU5YjVkNWMwMmQ3N2RjZDM1Yw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2013-08-21T19:27:54Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-08-21T19:27:54Z"}, "message": "tree-flow.h (register_jump_thread): Pass vector of edges instead of each important edge.\n\n       * tree-flow.h (register_jump_thread): Pass vector of edges\n       instead of each important edge.\n       * tree-ssa-threadedge.c (thread_across_edge): Build the jump\n       thread path into a vector and pass that to register_jump_thread.\n       * tree-ssa-threadupdate.c (register_jump_thread): Conver the\n       passed in edge vector to the current 3-edge form.\n\nFrom-SVN: r201907", "tree": {"sha": "4225e20823f7e82dcca3f6afa1fa3a57b48db792", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4225e20823f7e82dcca3f6afa1fa3a57b48db792"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9ebee5df98aca4621079f59b5d5c02d77dcd35c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9ebee5df98aca4621079f59b5d5c02d77dcd35c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9ebee5df98aca4621079f59b5d5c02d77dcd35c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9ebee5df98aca4621079f59b5d5c02d77dcd35c/comments", "author": null, "committer": null, "parents": [{"sha": "98cf9ac919f9901c024e6a8e14096610beb7f7ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98cf9ac919f9901c024e6a8e14096610beb7f7ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98cf9ac919f9901c024e6a8e14096610beb7f7ea"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "ba9c7c9f3b1174717c8f8257af904c3e447576e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9ebee5df98aca4621079f59b5d5c02d77dcd35c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9ebee5df98aca4621079f59b5d5c02d77dcd35c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9ebee5df98aca4621079f59b5d5c02d77dcd35c", "patch": "@@ -1,5 +1,12 @@\n 2013-08-21  Jeff Law  <law@redhat.com>\n \n+\t* tree-flow.h (register_jump_thread): Pass vector of edges\n+\tinstead of each important edge.\n+\t* tree-ssa-threadedge.c (thread_across_edge): Build the jump\n+\tthread path into a vector and pass that to register_jump_thread.\n+\t* tree-ssa-threadupdate.c (register_jump_thread): Conver the\n+\tpassed in edge vector to the current 3-edge form.\n+\n \tRevert:\n \t2013-08-20  Alexey Makhalov  <makhaloff@gmail.com>\n "}, {"sha": "01e65621092527579a815b55abb0f7d3fe05d1fe", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9ebee5df98aca4621079f59b5d5c02d77dcd35c/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9ebee5df98aca4621079f59b5d5c02d77dcd35c/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=b9ebee5df98aca4621079f59b5d5c02d77dcd35c", "patch": "@@ -750,7 +750,7 @@ bool may_be_nonaddressable_p (tree expr);\n \n /* In tree-ssa-threadupdate.c.  */\n extern bool thread_through_all_blocks (bool);\n-extern void register_jump_thread (edge, edge, edge);\n+extern void register_jump_thread (vec<edge>);\n \n /* In gimplify.c  */\n tree force_gimple_operand_1 (tree, gimple_seq *, gimple_predicate, tree);"}, {"sha": "320dec52afdf0505f860b447b1bd94349ddb70fa", "filename": "gcc/tree-ssa-threadedge.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9ebee5df98aca4621079f59b5d5c02d77dcd35c/gcc%2Ftree-ssa-threadedge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9ebee5df98aca4621079f59b5d5c02d77dcd35c/gcc%2Ftree-ssa-threadedge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadedge.c?ref=b9ebee5df98aca4621079f59b5d5c02d77dcd35c", "patch": "@@ -937,10 +937,15 @@ thread_across_edge (gimple dummy_cond,\n \t    }\n \n \t  remove_temporary_equivalences (stack);\n-\t  if (!taken_edge)\n-\t    return;\n-\t  propagate_threaded_block_debug_into (taken_edge->dest, e->dest);\n-\t  register_jump_thread (e, taken_edge, NULL);\n+\t  if (taken_edge)\n+\t    {\n+\t      vec<edge> path = vNULL;\n+\t      propagate_threaded_block_debug_into (taken_edge->dest, e->dest);\n+\t      path.safe_push (e);\n+\t      path.safe_push (taken_edge);\n+\t      register_jump_thread (path);\n+\t      path.release ();\n+\t    }\n \t  return;\n \t}\n     }\n@@ -969,9 +974,12 @@ thread_across_edge (gimple dummy_cond,\n \tbitmap_clear (visited);\n \tbitmap_set_bit (visited, taken_edge->dest->index);\n \tbitmap_set_bit (visited, e->dest->index);\n+        vec<edge> path = vNULL;\n \n \t/* Record whether or not we were able to thread through a successor\n \t   of E->dest.  */\n+\tpath.safe_push (e);\n+\tpath.safe_push (taken_edge);\n \tfound = false;\n \te3 = taken_edge;\n \tdo\n@@ -988,6 +996,7 @@ thread_across_edge (gimple dummy_cond,\n \n \t    if (e2)\n \t      {\n+\t\tpath.safe_push (e2);\n \t        e3 = e2;\n \t\tfound = true;\n \t      }\n@@ -1008,10 +1017,11 @@ thread_across_edge (gimple dummy_cond,\n \t      {\n \t\tpropagate_threaded_block_debug_into (e3->dest,\n \t\t\t\t\t\t     taken_edge->dest);\n-\t\tregister_jump_thread (e, taken_edge, e3);\n+\t\tregister_jump_thread (path);\n \t      }\n \t  }\n \n+        path.release();\n       }\n     BITMAP_FREE (visited);\n   }"}, {"sha": "e84542c93ff7f18422086de44ebf44420552abf2", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9ebee5df98aca4621079f59b5d5c02d77dcd35c/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9ebee5df98aca4621079f59b5d5c02d77dcd35c/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=b9ebee5df98aca4621079f59b5d5c02d77dcd35c", "patch": "@@ -1264,8 +1264,19 @@ thread_through_all_blocks (bool may_peel_loop_headers)\n    after fixing the SSA graph.  */\n \n void\n-register_jump_thread (edge e, edge e2, edge e3)\n+register_jump_thread (vec<edge> path)\n {\n+  /* Convert PATH into 3 edge representation we've been using.  This\n+     is temporary until we convert this file to use a path representation\n+     throughout.  */\n+  edge e = path[0];\n+  edge e2 = path[1];\n+\n+  if (path.length () <= 2)\n+    e3 = NULL;\n+  else\n+    e3 = path[path.length () - 1];\n+\n   /* This can occur if we're jumping to a constant address or\n      or something similar.  Just get out now.  */\n   if (e2 == NULL)"}]}