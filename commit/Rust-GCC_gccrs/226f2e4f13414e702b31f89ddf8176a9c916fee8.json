{"sha": "226f2e4f13414e702b31f89ddf8176a9c916fee8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2ZjJlNGYxMzQxNGU3MDJiMzFmODlkZGY4MTc2YTljOTE2ZmVlOA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-08-10T11:39:01Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-08-10T11:46:26Z"}, "message": "Make insert_new_definition permissive of the same mapping.\n\nDefinition provide child-parent relation ships within the name scope. This\nwas used for let stmts such that the let stmt pattern can reference its\nparent during type-resolution/code-generation such that we can lookup\nthe parent mappings for typing etc.\n\nIt should be permissive to allow overriding definition mappings when the\ndefinition items are equal. This is important during module name resolution\nsince it should be able to run the toplevel scan to gather the relevant\nnames into the top of the scope as well as the relative paths which contain\nthe same ids within the uppermost scope.", "tree": {"sha": "3e1214d1140498353e483a2bbc182e669ecdd803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e1214d1140498353e483a2bbc182e669ecdd803"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/226f2e4f13414e702b31f89ddf8176a9c916fee8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226f2e4f13414e702b31f89ddf8176a9c916fee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/226f2e4f13414e702b31f89ddf8176a9c916fee8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226f2e4f13414e702b31f89ddf8176a9c916fee8/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e723d0b7a85d109f01196b264a25823e77496e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e723d0b7a85d109f01196b264a25823e77496e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e723d0b7a85d109f01196b264a25823e77496e1"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "1b77ae2f0e6cdd05df9b75b6693bafd5f06e7d45", "filename": "gcc/rust/resolve/rust-ast-resolve.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226f2e4f13414e702b31f89ddf8176a9c916fee8/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226f2e4f13414e702b31f89ddf8176a9c916fee8/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc?ref=226f2e4f13414e702b31f89ddf8176a9c916fee8", "patch": "@@ -203,8 +203,11 @@ void\n Resolver::insert_new_definition (NodeId id, Definition def)\n {\n   auto it = name_definitions.find (id);\n-  rust_assert (it == name_definitions.end ());\n-\n+  if (it != name_definitions.end ())\n+    {\n+      rust_assert (it->second.is_equal (def));\n+      return;\n+    }\n   name_definitions[id] = def;\n }\n "}, {"sha": "23e5b6504440d931b6eadadb9f6216147b4d68dd", "filename": "gcc/rust/resolve/rust-name-resolver.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226f2e4f13414e702b31f89ddf8176a9c916fee8/gcc%2Frust%2Fresolve%2Frust-name-resolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226f2e4f13414e702b31f89ddf8176a9c916fee8/gcc%2Frust%2Fresolve%2Frust-name-resolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-name-resolver.h?ref=226f2e4f13414e702b31f89ddf8176a9c916fee8", "patch": "@@ -356,6 +356,11 @@ struct Definition\n   NodeId node;\n   NodeId parent;\n   // add kind ?\n+\n+  bool is_equal (const Definition &other)\n+  {\n+    return node == other.node && parent == other.parent;\n+  }\n };\n \n class Resolver"}]}