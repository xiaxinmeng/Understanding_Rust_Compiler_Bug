{"sha": "a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBmYjhmZThkOTBmZWU5NzA4NTRhM2U5YjcyZDBjNWJhOWY0MTQ5YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T08:26:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T08:26:59Z"}, "message": "[multiple changes]\n\n2011-08-04  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c (__gnat_tmp_name): Use current process id to create temp\n\tfilenames, this ensures unicity of filenames across processes.\n\n2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* bindgen.adb (Gen_Finalize_Library_Ada): Rename generated routine\n\tRaise_Controlled to Raise_From_Controlled_Operation. Update the\n\tsignature of Raise_From_Controlled_Operation by adding flag From_Abort.\n\tAdd False as the actual to From_Abort in the generated call to\n\tRaise_From_Controlled_Operation.\n\n2011-08-04  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* osint-c.ads, osint-c.adb (Set_Library_Info_Name): Move to declaration\n\tso that the ali file name can be retrieved from outside of this package.\n\t* back_end.ads, back_end.adb (Gen_Or_Update_Object_File): New method\n\tdoing nothing in the general case, but used to update the object file\n\ttimestamp if directly generated by the backend.\n\t* gnat1drv.adb (Gnat1drv): Make sure the object file's timestamp is set\n\tto a later time than the ali file one.\n\nFrom-SVN: r177329", "tree": {"sha": "9ce25e16327608ef6243ca6ccd5339febb356438", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ce25e16327608ef6243ca6ccd5339febb356438"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/comments", "author": null, "committer": null, "parents": [{"sha": "9534ab171e71fa56c4b384c5984d0d457f2eb55d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9534ab171e71fa56c4b384c5984d0d457f2eb55d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9534ab171e71fa56c4b384c5984d0d457f2eb55d"}], "stats": {"total": 85, "additions": 70, "deletions": 15}, "files": [{"sha": "c4dd6f1dfd4396ed2f76e2e54e037573d3e5de42", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "patch": "@@ -1,3 +1,26 @@\n+2011-08-04  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c (__gnat_tmp_name): Use current process id to create temp\n+\tfilenames, this ensures unicity of filenames across processes.\n+\n+2011-08-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* bindgen.adb (Gen_Finalize_Library_Ada): Rename generated routine\n+\tRaise_Controlled to Raise_From_Controlled_Operation. Update the\n+\tsignature of Raise_From_Controlled_Operation by adding flag From_Abort.\n+\tAdd False as the actual to From_Abort in the generated call to\n+\tRaise_From_Controlled_Operation.\n+\n+2011-08-04  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* osint-c.ads, osint-c.adb (Set_Library_Info_Name): Move to declaration\n+\tso that the ali file name can be retrieved from outside of this package.\n+\t* back_end.ads, back_end.adb (Gen_Or_Update_Object_File): New method\n+\tdoing nothing in the general case, but used to update the object file\n+\ttimestamp if directly generated by the backend.\n+\t* gnat1drv.adb (Gnat1drv): Make sure the object file's timestamp is set\n+\tto a later time than the ali file one.\n+\n 2011-08-04  Yannick Moy  <moy@adacore.com>\n \n \t* einfo.adb, einfo.ads (Formal_Proof_On): new flag set on subprogram"}, {"sha": "471dc2c231347e93cd40a8212921c1ce049e53bf", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "patch": "@@ -1177,13 +1177,15 @@ __gnat_tmp_name (char *tmp_filename)\n #elif defined (__MINGW32__)\n   {\n     char *pname;\n+    char prefix[25];\n \n     /* tempnam tries to create a temporary file in directory pointed to by\n        TMP environment variable, in c:\\temp if TMP is not set, and in\n        directory specified by P_tmpdir in stdio.h if c:\\temp does not\n        exist. The filename will be created with the prefix \"gnat-\".  */\n \n-    pname = (char *) _tempnam (\"c:\\\\temp\", \"gnat-\");\n+    sprintf (prefix, \"gnat-%d-\", (int)getpid());\n+    pname = (char *) _tempnam (\"c:\\\\temp\", prefix);\n \n     /* if pname is NULL, the file was not created properly, the disk is full\n        or there is no more free temporary files */"}, {"sha": "a089f3862c4a6b473f5de556168e9cbb28a5f1e4", "filename": "gcc/ada/back_end.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fback_end.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fback_end.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.adb?ref=a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -337,4 +337,14 @@ package body Back_End is\n    begin\n       Enumerate_Modes (Call_Back);\n    end Register_Back_End_Types;\n+\n+   -------------------------------\n+   -- Gen_Or_Update_Object_File --\n+   -------------------------------\n+\n+   procedure Gen_Or_Update_Object_File is\n+   begin\n+      null;\n+   end Gen_Or_Update_Object_File;\n+\n end Back_End;"}, {"sha": "265017df77643f7156c738a0d4cee856fcbcc434", "filename": "gcc/ada/back_end.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fback_end.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fback_end.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.ads?ref=a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -82,4 +82,8 @@ package Back_End is\n    --  Any processed switches that influence the result of a compilation must\n    --  be added to the Compilation_Arguments table.\n \n+   procedure Gen_Or_Update_Object_File;\n+   --  Is used to generate the object file, or update it so that its timestamp\n+   --  is updated.\n+\n end Back_End;"}, {"sha": "5aac5c237d2b0c6648ac3db1ad54894d10b3c9c3", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "patch": "@@ -1823,16 +1823,19 @@ package body Bindgen is\n             Set_String (\"\"\"__gnat_library_exception\"\");\");\n             Write_Statement_Buffer;\n \n-            Set_String (\"            procedure Raise_Controlled \");\n-            Set_String (\"(E : Ada.Exceptions.Exception_Occurrence);\");\n+            Set_String (\"            procedure Raise_From_Controlled_\");\n+            Set_String (\"Operation \");\n+            Set_String (\"(X : Ada.Exceptions.Exception_Occurrence; \");\n+            Set_String (\" From_Abort : Boolean);\");\n             Write_Statement_Buffer;\n \n-            Set_String (\"            pragma Import (Ada, Raise_Controlled, \");\n+            Set_String (\"            pragma Import (Ada, Raise_From_\");\n+            Set_String (\"Controlled_Operation, \");\n             Set_String (\"\"\"__gnat_raise_from_controlled_operation\"\");\");\n             Write_Statement_Buffer;\n \n             WBI (\"         begin\");\n-            WBI (\"            Raise_Controlled (LE);\");\n+            WBI (\"            Raise_From_Controlled_Operation (LE, False);\");\n             WBI (\"         end;\");\n \n          --  VM-specific code, use regular Ada to produce the desired behavior"}, {"sha": "dcff866229b5b4bb752d0a0016fe526d571b84a8", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "patch": "@@ -1047,6 +1047,19 @@ begin\n \n       Write_ALI (Object => (Back_End_Mode = Generate_Object));\n \n+      if not Compilation_Errors then\n+         --  In case of ada backends, we need to make sure that the generated\n+         --  object file has a timestamp greater than the ALI file.\n+         --  We do this to make gnatmake happy when checking the ALI and obj\n+         --  timestamps, where it expects the object file being written after\n+         --  the ali file.\n+         --  Gnatmake's assumption is true for gcc platforms where the gcc\n+         --  wrapper needs to call the assembler after calling gnat1, but is\n+         --  not true for ada backends, where the object files are created\n+         --  directly by gnat1 (so are created before the ali file).\n+         Back_End.Gen_Or_Update_Object_File;\n+      end if;\n+\n       --  Generate ASIS tree after writing the ALI file, since in ASIS mode,\n       --  Write_ALI may in fact result in further tree decoration from the\n       --  original tree file. Note that we dump the tree just before generating"}, {"sha": "d43332694777925cd7e9ee096ca10d2c2c1c14c9", "filename": "gcc/ada/osint-c.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fosint-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fosint-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.adb?ref=a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,12 +46,6 @@ package body Osint.C is\n    --  output file and Suffix is the desired suffix (dg/rep/xxx for debug/\n    --  repinfo/list file where xxx is specified extension.\n \n-   procedure Set_Library_Info_Name;\n-   --  Sets a default ALI file name from the main compiler source name.\n-   --  This is used by Create_Output_Library_Info, and by the version of\n-   --  Read_Library_Info that takes a default file name. The name is in\n-   --  Name_Buffer (with length in Name_Len) on return from the call.\n-\n    ----------------------\n    -- Close_Debug_File --\n    ----------------------"}, {"sha": "e8bc57a8ad105ee5cd1f540da782065da0ef9bed", "filename": "gcc/ada/osint-c.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fosint-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a/gcc%2Fada%2Fosint-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.ads?ref=a0fb8fe8d90fee970854a3e9b72d0c5ba9f4149a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -116,6 +116,12 @@ package Osint.C is\n    --  information file for the main source file being compiled. See section\n    --  above for a discussion of how library information files are stored.\n \n+   procedure Set_Library_Info_Name;\n+   --  Sets a default ALI file name from the main compiler source name.\n+   --  This is used by Create_Output_Library_Info, and by the version of\n+   --  Read_Library_Info that takes a default file name. The name is in\n+   --  Name_Buffer (with length in Name_Len) on return from the call.\n+\n    procedure Create_Output_Library_Info;\n    --  Creates the output library information file for the source file which\n    --  is currently being compiled (i.e. the file which was most recently"}]}